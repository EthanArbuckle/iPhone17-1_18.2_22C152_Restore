uint64_t sub_1DEFA0470(uint64_t a1)
{
  return sub_1DEFA0D3C(a1, (void (*)(void))sub_1DEFA2ED4, MEMORY[0x1E4FAC2D0]);
}

uint64_t sub_1DEFA049C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EAC27018);
  uint64_t result = sub_1DFDECCC0();
  if (v16)
  {
    uint64_t v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    MEMORY[0x1F4188790](v2);
    v4 = (void *)((char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v5 + 16))(v4);
    uint64_t v6 = *v4;
    uint64_t v7 = type metadata accessor for AudioHistoryFeedSectionFactory();
    v14[3] = v7;
    v14[4] = &off_1F3AD4908;
    v14[0] = v6;
    type metadata accessor for AudioHistoryFeedBlueprintModifierFactory();
    v8 = (void *)swift_allocObject();
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v7);
    MEMORY[0x1F4188790](v9);
    v11 = (void *)((char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    uint64_t v13 = *v11;
    v8[5] = v7;
    v8[6] = &off_1F3AD4908;
    v8[2] = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return (uint64_t)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA06AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E20);
  uint64_t result = sub_1DFDECCC0();
  if (v19)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x1F4188790](v4);
    uint64_t v6 = (void *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    uint64_t v9 = type metadata accessor for HeadlineModelFactory();
    v17[3] = v9;
    v17[4] = &off_1F3AC16D8;
    v17[0] = v8;
    uint64_t v10 = type metadata accessor for AudioHistoryFeedSectionFactory();
    v11 = (void *)swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v9);
    MEMORY[0x1F4188790](v12);
    v14 = (void *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_1F3AC16D8;
    v11[2] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_1F3AD4908;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA08D8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA2ED4();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DEFA307C();
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      sub_1DEFA2FC0();
      swift_allocObject();
      return sub_1DFDF19E0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFA09B8(uint64_t a1, void *a2)
{
  sub_1DEFA3E8C();
  swift_allocObject();
  sub_1DFDF3FF0();
  sub_1DEFA3F78();
  swift_allocObject();
  sub_1DEAC84DC(&qword_1EAC27130, (void (*)(uint64_t))sub_1DEFA3E8C);
  sub_1DFDF3910();
  sub_1DFDF1A00();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DEFA3850();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    swift_allocObject();
    sub_1DEAC84DC(&qword_1EAC27138, (void (*)(uint64_t))sub_1DEFA3850);
    sub_1DFDF3910();
    sub_1DFDF1A00();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA0B34(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA34D4();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA8470);
  uint64_t result = sub_1DFDECC80();
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AudioHistoryFeedBlueprintLayoutBuilder();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA398C();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDF44D0();
  uint64_t result = sub_1DFDECC70();
  if (result)
  {
    sub_1DEFA3850();
    swift_allocObject();
    return sub_1DFDF4CE0();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DEFA0D10(uint64_t a1)
{
  return sub_1DEFA0D3C(a1, MEMORY[0x1E4FAD408], MEMORY[0x1E4FAD400]);
}

uint64_t sub_1DEFA0D3C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1DEFA0D80(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA31B8();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE925C98(0, (unint64_t *)&unk_1EBAA85B0);
    uint64_t result = sub_1DFDECCC0();
    if (v3)
    {
      sub_1DEFA307C();
      swift_allocObject();
      return sub_1DFDF1E00();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFA0E80(uint64_t a1)
{
  return sub_1DEFA0D3C(a1, (void (*)(void))sub_1DEFA398C, MEMORY[0x1E4FAD2E0]);
}

uint64_t sub_1DEFA0EAC(uint64_t a1)
{
  return sub_1DEFA0D3C(a1, (void (*)(void))sub_1DEFA34D4, MEMORY[0x1E4FAC998]);
}

uint64_t sub_1DEFA0ED8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEAE6944(0, (unint64_t *)&unk_1EBABA040, MEMORY[0x1E4F80F60], MEMORY[0x1E4F80F58], MEMORY[0x1E4F7F4F8]);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DFDFD090();
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      uint64_t v4 = result;
      type metadata accessor for AudioHistoryFeedBlueprintLayoutBuilder();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v3;
      *(void *)(result + 24) = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFA0FC4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA2ED4();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA31B8();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA8470);
  uint64_t result = sub_1DFDECC80();
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA85B0);
  uint64_t result = sub_1DFDECCC0();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA3CD8(0, &qword_1EAC270D0, (uint64_t (*)(uint64_t))sub_1DEFA2ED4, sub_1DEFA35C0, MEMORY[0x1E4FACDF0]);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDF1C00();
  uint64_t result = sub_1DFDECC70();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
  uint64_t result = sub_1DFDECCC0();
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    sub_1DEAC84DC((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
    sub_1DEFA3A78();
    id v4 = objc_allocWithZone(v3);
    return sub_1DFDF31C0();
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1DEFA1308(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DFDFCAC0();
  if (sub_1DFDECCB0()) {
    sub_1DEAC84DC((unint64_t *)&unk_1EBAE9FB0, MEMORY[0x1E4F816D0]);
  }
  sub_1DFDF3180();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DE925C98(0, &qword_1EBABA550);
  uint64_t result = sub_1DFDECCC0();
  if (v4)
  {
    swift_getObjectType();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1DFDFC330();
    swift_allocObject();
    sub_1DFDFC310();
    sub_1DFDFCAF0();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA1498(uint64_t a1, uint64_t a2)
{
  sub_1DEFA3DD8();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE567D4();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2 + 16;
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1E01EFB70](a2 + 16);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    sub_1DFDF3120();

    uint64_t v20 = v19[1];
    sub_1DEFA2ED4();
    sub_1DEFA35C0();
    sub_1DFDF2690();
    swift_release();
    unint64_t v14 = sub_1DF3F14A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    unint64_t v14 = 0xF000000000000007;
  }
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x1E01EFB70](v11);
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    sub_1DFDF3120();

    v19[0] = v20;
    sub_1DEFA2ED4();
    sub_1DEFA35C0();
    sub_1DFDF2690();
    swift_release();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, 1, 1, v7);
  }
  sub_1DFDF1230();
  type metadata accessor for AudioHistoryFeedSectionDescriptor();
  type metadata accessor for AudioHistoryFeedModel();
  sub_1DEAC84DC(&qword_1EAC24EB0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedSectionDescriptor);
  sub_1DEAC84DC((unint64_t *)&unk_1EAC22910, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedModel);
  sub_1DFDFD0A0();
  sub_1DEFA3E30((uint64_t)v5);
  type metadata accessor for AudioHistoryFeedServiceConfig();
  sub_1DEAC84DC((unint64_t *)&unk_1EBAC63E0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedServiceConfig);
  uint64_t v17 = sub_1DFDF11D0();
  swift_bridgeObjectRelease();
  sub_1DEA54378(v14);
  return v17;
}

uint64_t sub_1DEFA17FC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEAE6944(0, (unint64_t *)&qword_1EBAA8310, MEMORY[0x1E4FAD408], MEMORY[0x1E4FAD3F8], MEMORY[0x1E4FAD158]);
  uint64_t result = sub_1DFDECC70();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE925C98(0, (unint64_t *)&unk_1EBAA77E0);
    uint64_t result = sub_1DFDECCC0();
    if (v4)
    {
      id v3 = objc_allocWithZone((Class)sub_1DFDF3800());
      return sub_1DFDF37F0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFA1934(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDF3800();
  uint64_t result = sub_1DFDECC70();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA3334();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA35F4();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA3744();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    sub_1DEFA31B8();
    swift_allocObject();
    return sub_1DFDF26B0();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DEFA1A90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA31B8();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    sub_1DFDF26C0();
    swift_release();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DEDBA988();
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      sub_1DFDF3EE0();
      uint64_t result = sub_1DFDF3EC0();
      uint64_t v5 = MEMORY[0x1E4FAD1C8];
      *a2 = result;
      a2[1] = v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFA1B88()
{
  uint64_t v0 = sub_1DFDF2B50();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAC850]);
  return sub_1DFDF3EA0();
}

uint64_t sub_1DEFA1C58(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDF44D0();
  uint64_t result = sub_1DFDECC70();
  if (result)
  {
    sub_1DEAE6944(0, (unint64_t *)&qword_1EBAA8310, MEMORY[0x1E4FAD408], MEMORY[0x1E4FAD3F8], MEMORY[0x1E4FAD158]);
    id v3 = objc_allocWithZone(v2);
    return sub_1DFDF3D80();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA1D20(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA2ED4();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA34D4();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AudioHistoryFeedBlueprintViewCellProvider();
  sub_1DE94F204((uint64_t)a1, (uint64_t)v8);
  uint64_t v4 = swift_allocObject();
  sub_1DE942EC4(v8, v4 + 16);
  uint64_t v5 = sub_1DFDECC90();
  uint64_t result = swift_release();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AudioHistoryFeedBlueprintViewSupplementaryViewProvider();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    *(void *)&v8[0] = v3;
    sub_1DEFA3334();
    id v7 = objc_allocWithZone(v6);
    return sub_1DFDF4400();
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1DEFA1EBC(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DFDF3800();
  id v3 = (id)sub_1DFDECC70();
  if (v3)
  {
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAAC0);
    sub_1DFDECAB0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DEFA1FBC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA84B0);
  uint64_t result = sub_1DFDECC80();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_1DFDF4AE0();
    sub_1DFDF4410();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA2090(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA2ED4();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA34D4();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA3CD8(0, &qword_1EAC270D0, (uint64_t (*)(uint64_t))sub_1DEFA2ED4, sub_1DEFA35C0, MEMORY[0x1E4FACDF0]);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
  uint64_t result = sub_1DFDECCC0();
  if (!v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1DEAC84DC((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAA81F0);
  uint64_t result = sub_1DFDECCC0();
  if (v5)
  {
    sub_1DEFA35F4();
    id v4 = objc_allocWithZone(v3);
    return sub_1DFDF4050();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1DEFA2324(uint64_t a1, void *a2)
{
  if (sub_1DFDECCB0()) {
    sub_1DEAC84DC(&qword_1EAC27110, (void (*)(uint64_t))sub_1DEFA3B84);
  }
  return sub_1DFDF4080();
}

uint64_t sub_1DEFA2424(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA2ED4();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DEFA34D4();
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      sub_1DEFA3744();
      id v4 = objc_allocWithZone(v3);
      return sub_1DFDF49D0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFA24E4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBABA170);
  uint64_t result = sub_1DFDECCC0();
  if (v3)
  {
    type metadata accessor for AudioHistoryFeedBlueprintViewCellProvider();
    Class v2 = (void *)swift_allocObject();
    v2[3] = 0;
    swift_unknownObjectWeakInit();
    v2[4] = v3;
    v2[5] = v4;
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DEFA2590(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for AudioHistoryFeedViewController();
  id v4 = (id)sub_1DFDECCB0();
  uint64_t v3 = &off_1F3A7C0D0;
  if (!v4) {
    uint64_t v3 = 0;
  }
  *(void *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1DEFA2624(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBABA2B0);
  uint64_t result = sub_1DFDECCC0();
  if (v4)
  {
    type metadata accessor for AudioHistoryFeedBlueprintViewSupplementaryViewProvider();
    uint64_t v2 = swift_allocObject();
    sub_1DE942EC4(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA26C4(void *a1)
{
  uint64_t v2 = sub_1DFDF4440();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1DFDF4460();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1DEFA3CD8(0, &qword_1EAC27108, (uint64_t (*)(uint64_t))sub_1DEFA2ED4, sub_1DEFA35C0, MEMORY[0x1E4FACDE8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA2ED4();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v13 = result;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FACDE0], v8);
    *uint64_t v5 = 0;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD380], v2);
    sub_1DFDF4450();
    v14[1] = v13;
    sub_1DEFA3CD8(0, &qword_1EAC270D0, (uint64_t (*)(uint64_t))sub_1DEFA2ED4, sub_1DEFA35C0, MEMORY[0x1E4FACDF0]);
    swift_allocObject();
    return sub_1DFDF3840();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA29A0(void *a1)
{
  sub_1DEAB95D4();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DFE0B750;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA3B84();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_1DEAC84DC(&qword_1EAC27100, (void (*)(uint64_t))sub_1DEFA3B84);
    *(void *)(v2 + 32) = v4;
    *(void *)(v2 + 40) = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DFDF3440();
    uint64_t result = sub_1DFDECC70();
    if (result)
    {
      uint64_t v6 = MEMORY[0x1E4FACBE0];
      *(void *)(v2 + 48) = result;
      *(void *)(v2 + 56) = v6;
      sub_1DFDF1C00();
      swift_allocObject();
      return sub_1DFDF1BF0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFA2ADC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA31B8();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DEFA2ED4();
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      sub_1DEFA3B84();
      swift_allocObject();
      return sub_1DFDF4350();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFA2BBC(uint64_t a1, void *a2)
{
  return sub_1DEFA2C9C(a1, a2, sub_1DEFA3CA4, MEMORY[0x1E4FAD348]);
}

uint64_t sub_1DEFA2BE8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA31B8();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    sub_1DFDF26C0();
    swift_release();
    sub_1DFDF3440();
    swift_allocObject();
    return sub_1DFDF3430();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA2C70(uint64_t a1, void *a2)
{
  return sub_1DEFA2C9C(a1, a2, sub_1DEFA3C70, MEMORY[0x1E4FACBD8]);
}

uint64_t sub_1DEFA2C9C(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DEFA3A78();
  uint64_t v6 = sub_1DFDECCB0();
  if (v6) {
    uint64_t v7 = a3();
  }
  else {
    uint64_t v7 = 0;
  }
  return a4(v6, v7);
}

uint64_t sub_1DEFA2D2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFA3A78();
  uint64_t v4 = v3;
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v6 = result;
    a2[3] = v4;
    uint64_t result = sub_1DEAC84DC(&qword_1EAC270E8, (void (*)(uint64_t))sub_1DEFA3A78);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA2DD4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = MEMORY[0x1E01EFB70](result + 16);
    if (v1)
    {
      if (MEMORY[0x1E01EFB70](v1 + 16))
      {
        uint64_t v2 = (void (__cdecl *)())off_1F3A7C100[0];
        type metadata accessor for AudioHistoryFeedViewController();
        swift_retain();
        v2();
        swift_release_n();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_1DEFA2ED4()
{
  if (!qword_1EAC27010)
  {
    type metadata accessor for AudioHistoryFeedSectionDescriptor();
    type metadata accessor for AudioHistoryFeedModel();
    sub_1DEAC84DC(&qword_1EAC24EB0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedSectionDescriptor);
    sub_1DEAC84DC((unint64_t *)&unk_1EAC22910, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedModel);
    unint64_t v0 = sub_1DFDF1AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27010);
    }
  }
}

void sub_1DEFA2FC0()
{
  if (!qword_1EAC27020)
  {
    sub_1DEFA2ED4();
    sub_1DEFA307C();
    sub_1DEFA35C0();
    sub_1DEAC84DC(&qword_1EAC270A0, (void (*)(uint64_t))sub_1DEFA307C);
    unint64_t v0 = sub_1DFDF1A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27020);
    }
  }
}

void sub_1DEFA307C()
{
  if (!qword_1EAC27028)
  {
    type metadata accessor for AudioHistoryFeedSectionDescriptor();
    type metadata accessor for AudioHistoryFeedModel();
    sub_1DEFA31B8();
    sub_1DEAC84DC(&qword_1EAC24EB0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedSectionDescriptor);
    sub_1DEAC84DC((unint64_t *)&unk_1EAC22910, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedModel);
    sub_1DEAC84DC(&qword_1EAC27098, (void (*)(uint64_t))sub_1DEFA31B8);
    unint64_t v0 = sub_1DFDF1E20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27028);
    }
  }
}

void sub_1DEFA31B8()
{
  if (!qword_1EAC27030)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBABAC20);
    sub_1DEFA3334();
    sub_1DEFA35F4();
    sub_1DEFA3744();
    type metadata accessor for AudioHistoryFeedViewController();
    sub_1DEAC84DC(&qword_1EAC27080, (void (*)(uint64_t))sub_1DEFA3334);
    sub_1DEAC84DC(&qword_1EAC27088, (void (*)(uint64_t))sub_1DEFA35F4);
    sub_1DEAC84DC(&qword_1EAC27090, (void (*)(uint64_t))sub_1DEFA3744);
    unint64_t v0 = sub_1DFDF26E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27030);
    }
  }
}

void sub_1DEFA3334()
{
  if (!qword_1EAC27038)
  {
    sub_1DEFA2ED4();
    sub_1DEFA34D4();
    type metadata accessor for AudioHistoryFeedBlueprintViewCellProvider();
    type metadata accessor for AudioHistoryFeedBlueprintViewSupplementaryViewProvider();
    sub_1DEFA35C0();
    sub_1DEAC84DC(&qword_1EAC27050, (void (*)(uint64_t))sub_1DEFA34D4);
    sub_1DEAC84DC(&qword_1EAC27058, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedBlueprintViewCellProvider);
    sub_1DEAC84DC(&qword_1EAC27060, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedBlueprintViewSupplementaryViewProvider);
    sub_1DEAC84DC(&qword_1EAC21010, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
    unint64_t v0 = sub_1DFDF4430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27038);
    }
  }
}

void sub_1DEFA34D4()
{
  if (!qword_1EAC27040)
  {
    type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor(255);
    type metadata accessor for AudioHistoryFeedLayoutModel();
    sub_1DEAC84DC((unint64_t *)&unk_1EAC240B0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor);
    sub_1DEAC84DC(&qword_1EAC20FF0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
    unint64_t v0 = sub_1DFDF2FE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27040);
    }
  }
}

uint64_t sub_1DEFA35C0()
{
  return sub_1DEAC84DC(&qword_1EAC27048, (void (*)(uint64_t))sub_1DEFA2ED4);
}

void sub_1DEFA35F4()
{
  if (!qword_1EAC27068)
  {
    sub_1DEFA2ED4();
    sub_1DEFA34D4();
    type metadata accessor for AudioHistoryFeedViewController();
    sub_1DEFA35C0();
    sub_1DEAC84DC(&qword_1EAC27050, (void (*)(uint64_t))sub_1DEFA34D4);
    sub_1DEAC84DC(&qword_1EAC27070, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedViewController);
    sub_1DEAC84DC(&qword_1EAC21010, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
    unint64_t v0 = sub_1DFDF40A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27068);
    }
  }
}

void sub_1DEFA3744()
{
  if (!qword_1EAC27078)
  {
    sub_1DEFA2ED4();
    sub_1DEFA34D4();
    type metadata accessor for AudioHistoryFeedViewController();
    sub_1DEFA35C0();
    sub_1DEAC84DC(&qword_1EAC27050, (void (*)(uint64_t))sub_1DEFA34D4);
    sub_1DEAC84DC(&qword_1EAC27070, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedViewController);
    unint64_t v0 = sub_1DFDF49E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27078);
    }
  }
}

void sub_1DEFA3850()
{
  if (!qword_1EAC270A8)
  {
    sub_1DEFA34D4();
    type metadata accessor for AudioHistoryFeedBlueprintLayoutBuilder();
    sub_1DEFA398C();
    sub_1DEAC84DC(&qword_1EAC27050, (void (*)(uint64_t))sub_1DEFA34D4);
    sub_1DEAC84DC(&qword_1EAC270B8, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedBlueprintLayoutBuilder);
    sub_1DEAC84DC(&qword_1EAC270C0, (void (*)(uint64_t))sub_1DEFA398C);
    unint64_t v0 = sub_1DFDF4D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC270A8);
    }
  }
}

void sub_1DEFA398C()
{
  if (!qword_1EAC270B0)
  {
    type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor(255);
    type metadata accessor for AudioHistoryFeedLayoutModel();
    sub_1DEAC84DC(&qword_1EAC21008, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor);
    sub_1DEAC84DC(&qword_1EAC21010, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
    unint64_t v0 = sub_1DFDF42A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC270B0);
    }
  }
}

void sub_1DEFA3A78()
{
  if (!qword_1EAC270C8)
  {
    sub_1DEFA2ED4();
    sub_1DEFA31B8();
    type metadata accessor for AudioHistoryFeedViewController();
    sub_1DEFA35C0();
    sub_1DEAC84DC(&qword_1EAC27098, (void (*)(uint64_t))sub_1DEFA31B8);
    sub_1DEAC84DC(&qword_1EAC27070, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedViewController);
    unint64_t v0 = sub_1DFDF31E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC270C8);
    }
  }
}

void sub_1DEFA3B84()
{
  if (!qword_1EAC270D8)
  {
    sub_1DEFA31B8();
    sub_1DEFA2ED4();
    sub_1DEAC84DC(&qword_1EAC27098, (void (*)(uint64_t))sub_1DEFA31B8);
    sub_1DEAC84DC(&qword_1EAC270E0, (void (*)(uint64_t))sub_1DEFA2ED4);
    unint64_t v0 = sub_1DFDF4370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC270D8);
    }
  }
}

uint64_t sub_1DEFA3C70()
{
  return sub_1DEAC84DC(&qword_1EAC270F0, (void (*)(uint64_t))sub_1DEFA3A78);
}

uint64_t sub_1DEFA3CA4()
{
  return sub_1DEAC84DC(&qword_1EAC270F8, (void (*)(uint64_t))sub_1DEFA3A78);
}

void sub_1DEFA3CD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1DEFA3D58()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1DEFA3D90(void *a1)
{
  sub_1DEFA1EBC(a1, (void *)(v1 + 16));
}

uint64_t sub_1DEFA3D98()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DEFA3DD0(uint64_t a1)
{
  return sub_1DEFA1498(a1, v1);
}

void sub_1DEFA3DD8()
{
  if (!qword_1EAC27118)
  {
    sub_1DEE567D4();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27118);
    }
  }
}

uint64_t sub_1DEFA3E30(uint64_t a1)
{
  sub_1DEFA3DD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DEFA3E8C()
{
  if (!qword_1EAC27120)
  {
    type metadata accessor for AudioHistoryFeedSectionDescriptor();
    type metadata accessor for AudioHistoryFeedModel();
    sub_1DEAC84DC(&qword_1EAC24EB0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedSectionDescriptor);
    sub_1DEAC84DC((unint64_t *)&unk_1EAC22910, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedModel);
    unint64_t v0 = sub_1DFDF4000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27120);
    }
  }
}

void sub_1DEFA3F78()
{
  if (!qword_1EAC27128)
  {
    type metadata accessor for AudioHistoryFeedSectionDescriptor();
    type metadata accessor for AudioHistoryFeedModel();
    sub_1DEAC84DC(&qword_1EAC24EB0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedSectionDescriptor);
    sub_1DEAC84DC((unint64_t *)&unk_1EAC22910, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedModel);
    unint64_t v0 = sub_1DFDF3920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27128);
    }
  }
}

uint64_t sub_1DEFA4064()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DEFA409C()
{
  return sub_1DEFA2DD4();
}

char *sub_1DEFA40A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v17[3] = type metadata accessor for AudioHistoryFeedStyler();
  v17[4] = &off_1F3AA5E68;
  v17[0] = a1;
  sub_1DE94F204((uint64_t)v17, (uint64_t)&a5[OBJC_IVAR____TtC7NewsUI230AudioHistoryFeedViewController_styler]);
  unint64_t v11 = &a5[OBJC_IVAR____TtC7NewsUI230AudioHistoryFeedViewController_eventHandler];
  *(void *)unint64_t v11 = a2;
  *((void *)v11 + 1) = a3;
  *(void *)&a5[OBJC_IVAR____TtC7NewsUI230AudioHistoryFeedViewController_blueprintViewController] = a4;
  v16.receiver = a5;
  v16.super_class = ObjectType;
  swift_unknownObjectRetain();
  id v12 = a4;
  uint64_t v13 = (char *)objc_msgSendSuper2(&v16, sel_initWithNibName_bundle_, 0, 0);
  *(void *)(*(void *)&v13[OBJC_IVAR____TtC7NewsUI230AudioHistoryFeedViewController_eventHandler] + 24) = &off_1F3A7C0E0;
  swift_unknownObjectWeakAssign();
  unint64_t v14 = v13;
  sub_1DFDF31B0();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14;
}

void *sub_1DEFA41BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v16[3] = type metadata accessor for AudioHistoryFeedRouter();
  v16[4] = &off_1F3A81FE8;
  v16[0] = a3;
  v15[3] = type metadata accessor for AudioHistoryFeedTracker();
  v15[4] = &off_1F3A76C88;
  v15[0] = a4;
  a5[3] = 0;
  swift_unknownObjectWeakInit();
  a5[4] = a1;
  a5[5] = a2;
  sub_1DE94F204((uint64_t)v16, (uint64_t)(a5 + 6));
  sub_1DE94F204((uint64_t)v15, (uint64_t)(a5 + 11));
  uint64_t v10 = a5[5];
  uint64_t ObjectType = swift_getObjectType();
  id v12 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 16);
  swift_unknownObjectRetain();
  uint64_t v13 = swift_retain();
  v12(v13, &off_1F3AB4CB8, ObjectType, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return a5;
}

void *sub_1DEFA42C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v24 = type metadata accessor for AudioHistoryFeedRouter();
  v25 = &off_1F3A81FE8;
  v23[0] = a3;
  uint64_t v21 = v8;
  v22 = &off_1F3A76C88;
  v20[0] = a4;
  type metadata accessor for AudioHistoryFeedEventHandler();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  MEMORY[0x1F4188790](v10);
  id v12 = (void *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v13 + 16))(v12);
  uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
  MEMORY[0x1F4188790](v14);
  objc_super v16 = (void *)((char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v17 + 16))(v16);
  v18 = sub_1DEFA41BC(a1, a2, *v12, *v16, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v18;
}

void sub_1DEFA44CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1DEFA4534()
{
  return sub_1DEF9E4C0((void *)(v0 + 16));
}

uint64_t sub_1DEFA4540()
{
  return sub_1DFDFF5F0();
}

uint64_t NewsActivityManager.registerCurrentActivity(with:)(uint64_t *a1)
{
  return sub_1DEFA459C(a1, MEMORY[0x1E4FAC618]);
}

uint64_t NewsActivityManager.deregisterActivity(with:)(uint64_t *a1)
{
  return sub_1DEFA459C(a1, MEMORY[0x1E4FAC610]);
}

uint64_t sub_1DEFA459C(uint64_t *a1, void (*a2)(uint64_t *))
{
  uint64_t v4 = *a1;
  swift_retain();
  a2(&v4);
  return swift_release();
}

unint64_t NewsActivityManager.registerCurrentActivity(with:)(uint64_t a1)
{
  return sub_1DEFA46A4(a1, MEMORY[0x1E4FAC618]);
}

unint64_t NewsActivityManager.deregisterActivity(with:)(uint64_t a1)
{
  return sub_1DEFA46A4(a1, MEMORY[0x1E4FAC610]);
}

unint64_t sub_1DEFA46A4(uint64_t a1, void (*a2)(unint64_t *))
{
  BridgedNewsActivityData.convertToNewsActivity2()(&v5);
  unint64_t v3 = v5;
  swift_retain();
  a2(&v5);
  swift_release();
  return sub_1DEAF0150(v3);
}

Swift::Void __swiftcall NewsActivityManager.clearAllSavedUserActivities()()
{
  swift_retain();
  sub_1DFDF23A0();
  swift_release();
}

id NewsActivityManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void NewsActivityManager.init()()
{
}

id NewsActivityManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t NewsActivityManager.stateRestorationActivity.getter()
{
  swift_retain();
  uint64_t v0 = sub_1DFDF23C0();
  swift_release();
  return v0;
}

uint64_t sub_1DEFA4A7C@<X0>(uint64_t *a1@<X8>)
{
  swift_retain();
  uint64_t v2 = sub_1DFDF23C0();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1DEFA4AD0(id *a1)
{
  id v1 = *a1;
  swift_retain();
  sub_1DFDF23D0();
  return swift_release();
}

uint64_t NewsActivityManager.stateRestorationActivity.setter()
{
  swift_retain();
  sub_1DFDF23D0();
  return swift_release();
}

uint64_t (*NewsActivityManager.stateRestorationActivity.modify(uint64_t *a1))(id *a1, char a2)
{
  uint64_t v3 = OBJC_IVAR____TtC7NewsUI219NewsActivityManager_newsUserActivityManager;
  a1[1] = v1;
  a1[2] = v3;
  swift_retain();
  uint64_t v4 = sub_1DFDF23C0();
  swift_release();
  *a1 = v4;
  return sub_1DEFA4BE8;
}

uint64_t sub_1DEFA4BE8(id *a1, char a2)
{
  if (a2)
  {
    id v2 = *a1;
    swift_retain();
    sub_1DFDF23D0();
  }
  else
  {
    swift_retain();
    sub_1DFDF23D0();
  }
  return swift_release();
}

uint64_t sub_1DEFA4C60()
{
  swift_retain();
  uint64_t v0 = sub_1DFDF23C0();
  swift_release();
  return v0;
}

uint64_t sub_1DEFA4CA8()
{
  swift_retain();
  sub_1DFDF23D0();
  return swift_release();
}

void (*sub_1DEFA4CFC(uint64_t **a1))(void *a1)
{
  id v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)NewsActivityManager.stateRestorationActivity.modify(v2);
  return sub_1DEDE95B4;
}

uint64_t sub_1DEFA4D58(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t method lookup function for NewsActivityManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NewsActivityManager);
}

ValueMetadata *type metadata accessor for HistoryFeedPrewarmBlueprintModifier()
{
  return &type metadata for HistoryFeedPrewarmBlueprintModifier;
}

uint64_t sub_1DEFA4D98(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v84 = a3;
  v85 = a2;
  sub_1DEFA5B28(0, (unint64_t *)&unk_1EBAEBF68, MEMORY[0x1E4FACA00]);
  uint64_t v82 = *(void *)(v3 - 8);
  uint64_t v83 = v3;
  MEMORY[0x1F4188790](v3);
  v81 = (char *)&v64 - v4;
  uint64_t v5 = type metadata accessor for HistoryFeedGapLocation(0);
  MEMORY[0x1F4188790](v5 - 8);
  v75 = (uint64_t *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for HistoryFeedSectionDescriptor();
  MEMORY[0x1F4188790](v7);
  uint64_t v74 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for ArticleListHistoryFeedGroup();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  unint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1DFDF9D80();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  v69 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFA5B28(0, (unint64_t *)&qword_1EBAEBC40, MEMORY[0x1E4FAC180]);
  uint64_t v13 = v12;
  uint64_t v87 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v86 = (uint64_t)&v64 - v14;
  uint64_t v15 = type metadata accessor for HistoryFeedGroup();
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v64 - v19;
  sub_1DEFA5C1C();
  MEMORY[0x1F4188790](v21 - 8);
  sub_1DEFA5B28(0, (unint64_t *)&qword_1EBAEC3A0, MEMORY[0x1E4FAD830]);
  uint64_t v23 = v22;
  uint64_t v79 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  v25 = (char *)&v64 - v24;
  uint64_t v26 = sub_1DEFA5CE8(&qword_1EBAEBC38);
  uint64_t v27 = sub_1DEFA5CE8(&qword_1EBAEBC28);
  uint64_t v88 = v13;
  MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v13, v26, v27);
  uint64_t v28 = type metadata accessor for HistoryFeedModel(0);
  uint64_t v29 = sub_1DEACECE4(&qword_1EBAF0B60, (void (*)(uint64_t))type metadata accessor for HistoryFeedSectionDescriptor);
  uint64_t v30 = sub_1DEACECE4(&qword_1EBAED5F0, (void (*)(uint64_t))type metadata accessor for HistoryFeedModel);
  uint64_t v80 = v7;
  uint64_t v77 = v29;
  uint64_t v78 = v28;
  v31 = v89;
  uint64_t v76 = v30;
  sub_1DFDF5A70();
  unint64_t v32 = v31[2];
  switch(v32 >> 61)
  {
    case 1uLL:
    case 3uLL:
    case 4uLL:
      break;
    case 2uLL:
      sub_1DEFA5E1C();
      uint64_t v40 = v39;
      uint64_t v41 = swift_projectBox();
      uint64_t v42 = *(void *)(v41 + *(int *)(v40 + 48));
      v66 = type metadata accessor for HistoryFeedGroup;
      sub_1DEFA5EA8(v41, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for HistoryFeedGroup);
      v65 = __swift_project_boxed_opaque_existential_1(v31 + 3, v31[6]);
      type metadata accessor for HistoryFeedServiceConfig();
      sub_1DEACECE4((unint64_t *)&unk_1EBAC40B0, (void (*)(uint64_t))type metadata accessor for HistoryFeedServiceConfig);
      uint64_t v68 = v32 & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v67 = v42 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v37 = (uint64_t)v69;
      sub_1DFDF7E80();
      uint64_t v38 = (uint64_t)v20;
      goto LABEL_4;
    default:
      sub_1DEFA5E1C();
      uint64_t v34 = v33;
      uint64_t v35 = swift_projectBox();
      uint64_t v36 = *(void *)(v35 + *(int *)(v34 + 48));
      v66 = type metadata accessor for HistoryFeedGroup;
      sub_1DEFA5EA8(v35, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for HistoryFeedGroup);
      v65 = __swift_project_boxed_opaque_existential_1(v31 + 3, v31[6]);
      type metadata accessor for HistoryFeedServiceConfig();
      sub_1DEACECE4((unint64_t *)&unk_1EBAC40B0, (void (*)(uint64_t))type metadata accessor for HistoryFeedServiceConfig);
      uint64_t v68 = v32 & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v67 = v36 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v37 = (uint64_t)v69;
      sub_1DFDF7E80();
      uint64_t v38 = (uint64_t)v20;
LABEL_4:
      sub_1DEFA5EA8(v38, (uint64_t)v18, (uint64_t (*)(void))v66);
      sub_1DED3F490((uint64_t)v18, (uint64_t)v10);
      uint64_t v43 = v74;
      sub_1DEFA5EA8((uint64_t)v10, v74, (uint64_t (*)(void))type metadata accessor for ArticleListHistoryFeedGroup);
      uint64_t v44 = v71;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v43, 0, 1, v71);
      uint64_t v45 = *(void *)&v10[*(int *)(v44 + 24)];
      swift_bridgeObjectRetain();
      uint64_t v46 = v86;
      sub_1DF7B2B74(v43, v37, v45, v86);
      uint64_t v47 = v73;
      uint64_t v48 = v72;
      swift_bridgeObjectRelease();
      sub_1DEFA5F10(v43, (uint64_t (*)(void))type metadata accessor for HistoryFeedSectionDescriptor);
      sub_1DEFA5F10((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ArticleListHistoryFeedGroup);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v37, v47);
      sub_1DFDF5990();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v46, v88);
      sub_1DEFA5F10((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for HistoryFeedGroup);
      swift_release();
      break;
  }
  type metadata accessor for HistoryFeedServiceConfig();
  sub_1DEACECE4((unint64_t *)&unk_1EBAC40B0, (void (*)(uint64_t))type metadata accessor for HistoryFeedServiceConfig);
  swift_retain();
  sub_1DFDF8B10();
  swift_release();
  swift_retain();
  char v49 = sub_1DFDF8AE0();
  swift_release();
  if (v49)
  {
    if ((sub_1DFDF7F20() & 1) == 0) {
      goto LABEL_10;
    }
    uint64_t v50 = v23;
    uint64_t v51 = swift_allocObject();
    sub_1DEFA5D80(0, &qword_1EBAF28D0, MEMORY[0x1E4F7F748]);
    swift_allocObject();
    swift_retain();
    *(void *)(v51 + 16) = sub_1DFDF7F40();
    uint64_t v52 = (uint64_t)v75;
    uint64_t *v75 = v51;
    v53 = (unsigned int *)MEMORY[0x1E4F80570];
  }
  else
  {
    uint64_t v50 = v23;
    uint64_t v54 = swift_allocObject();
    sub_1DEFA5D80(0, &qword_1EBAF28D0, MEMORY[0x1E4F7F748]);
    swift_allocObject();
    swift_retain();
    *(void *)(v54 + 16) = sub_1DFDF7F40();
    uint64_t v52 = (uint64_t)v75;
    uint64_t *v75 = v54;
    v53 = (unsigned int *)MEMORY[0x1E4F80598];
  }
  uint64_t v55 = *v53;
  sub_1DEFA5D80(0, (unint64_t *)&qword_1EBAF2980, MEMORY[0x1E4F805A0]);
  uint64_t v57 = v56;
  uint64_t v58 = *(void *)(v56 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 104))(v52, v55, v56);
  uint64_t v59 = v57;
  uint64_t v23 = v50;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v52, 0, 1, v59);
  uint64_t v60 = v86;
  sub_1DFD801B4(v52, v86);
  sub_1DEFA5F10(v52, type metadata accessor for HistoryFeedGapLocation);
  sub_1DFDF5990();
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v60, v88);
LABEL_10:
  sub_1DFDF8730();
  swift_retain();
  sub_1DFDF8720();
  uint64_t v61 = sub_1DFDF8700();
  swift_release();
  if (v61)
  {
    *((void *)&v91 + 1) = sub_1DFDF7310();
    *(void *)&long long v90 = v61;
  }
  else
  {
    long long v90 = 0u;
    long long v91 = 0u;
  }
  sub_1DFDF5A60();
  swift_release();
  v62 = v81;
  sub_1DFDF3030();
  v85(v62);
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v62, v83);
  return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v25, v23);
}

uint64_t sub_1DEFA5A04(uint64_t a1)
{
  unint64_t v2 = sub_1DEFA5F70();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DEFA5A44()
{
  unint64_t result = qword_1EBAF2330;
  if (!qword_1EBAF2330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF2330);
  }
  return result;
}

uint64_t sub_1DEFA5A98()
{
  return sub_1DEACECE4(&qword_1EBAF0B60, (void (*)(uint64_t))type metadata accessor for HistoryFeedSectionDescriptor);
}

uint64_t sub_1DEFA5AE0()
{
  return sub_1DEACECE4(&qword_1EBAED5F0, (void (*)(uint64_t))type metadata accessor for HistoryFeedModel);
}

void sub_1DEFA5B28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for HistoryFeedSectionDescriptor();
    v8[1] = type metadata accessor for HistoryFeedModel(255);
    long long v8[2] = sub_1DEACECE4(&qword_1EBAF0B60, (void (*)(uint64_t))type metadata accessor for HistoryFeedSectionDescriptor);
    v8[3] = sub_1DEACECE4(&qword_1EBAED5F0, (void (*)(uint64_t))type metadata accessor for HistoryFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DEFA5C1C()
{
  if (!qword_1EBAEBA68)
  {
    sub_1DEFA5B28(255, (unint64_t *)&qword_1EBAEBC40, MEMORY[0x1E4FAC180]);
    sub_1DEFA5CE8(&qword_1EBAEBC38);
    sub_1DEFA5CE8(&qword_1EBAEBC28);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEBA68);
    }
  }
}

uint64_t sub_1DEFA5CE8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEFA5B28(255, (unint64_t *)&qword_1EBAEBC40, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFA5D48()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DEFA5D80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for HistoryFeedServiceConfig();
    uint64_t v7 = sub_1DEACECE4((unint64_t *)&unk_1EBAC40B0, (void (*)(uint64_t))type metadata accessor for HistoryFeedServiceConfig);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DEFA5E1C()
{
  if (!qword_1EAC27150)
  {
    type metadata accessor for HistoryFeedGroup();
    sub_1DEFA5D80(255, (unint64_t *)&unk_1EAC27158, MEMORY[0x1E4F7F730]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC27150);
    }
  }
}

uint64_t sub_1DEFA5EA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEFA5F10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DEFA5F70()
{
  unint64_t result = qword_1EBAF2328;
  if (!qword_1EBAF2328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF2328);
  }
  return result;
}

uint64_t sub_1DEFA5FC8()
{
  uint64_t v1 = sub_1DFDEC4E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC7NewsUI234AppIntentsAppDependencyStartupTask_resolver);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC7NewsUI234AppIntentsAppDependencyStartupTask_resolver), *(void *)(v0 + OBJC_IVAR____TtC7NewsUI234AppIntentsAppDependencyStartupTask_resolver + 24));
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBAB0140);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = (void *)result;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  uint64_t v8 = sub_1DE925C98(0, (unint64_t *)&unk_1EBABA4D0);
  uint64_t result = sub_1DFDECCC0();
  if (!*((void *)&v75 + 1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v67 = v4;
  uint64_t v68 = v2;
  sub_1DE942EC4(&v74, (uint64_t)v82);
  unsigned int v9 = objc_msgSend(v7, sel_narrativeAudio);
  v66[1] = v7;
  if (!v9)
  {
    sub_1DFDE6570();
    uint64_t v22 = sub_1DFDE6560();
    *(void *)&v69[0] = 0xD000000000000018;
    *((void *)&v69[0] + 1) = 0x80000001DFED9010;
    sub_1DFDFF950();
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v22;
    sub_1DE942EC4(v69, v23 + 24);
    sub_1DEFA85A4();
    uint64_t v25 = v24;
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC27170, v23, v25);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
LABEL_9:
    sub_1DFDE6570();
    uint64_t v26 = sub_1DFDE6560();
    uint64_t v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v26;
    sub_1DE942EC4(v69, v27 + 24);
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC27188, v27, v8);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
    uint64_t v28 = sub_1DFDE6560();
    uint64_t v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v28;
    sub_1DE942EC4(v69, v29 + 24);
    uint64_t v30 = sub_1DE925C98(0, (unint64_t *)&unk_1EBAF5810);
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC27198, v29, v30);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
    uint64_t v31 = sub_1DFDE6560();
    uint64_t v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v31;
    sub_1DE942EC4(v69, v32 + 24);
    sub_1DE9A1E44();
    uint64_t v34 = v33;
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC271B0, v32, v34);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
    uint64_t v35 = sub_1DFDE6560();
    uint64_t v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v35;
    sub_1DE942EC4(v69, v36 + 24);
    uint64_t v37 = sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC271C0, v36, v37);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
    uint64_t v38 = sub_1DFDE6560();
    uint64_t v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v38;
    sub_1DE942EC4(v69, v39 + 24);
    uint64_t v40 = sub_1DE925C98(0, (unint64_t *)&qword_1EBAF8D40);
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC271D8, v39, v40);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
    uint64_t v41 = sub_1DFDE6560();
    uint64_t v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v41;
    sub_1DE942EC4(v69, v42 + 24);
    uint64_t v43 = sub_1DE925C98(0, (unint64_t *)&unk_1EBAF3530);
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC271F0, v42, v43);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
    uint64_t v44 = sub_1DFDE6560();
    uint64_t v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v44;
    sub_1DE942EC4(v69, v45 + 24);
    uint64_t v46 = sub_1DE925C98(0, &qword_1EBAD2170);
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC27208, v45, v46);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
    uint64_t v47 = sub_1DFDE6560();
    uint64_t v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v47;
    sub_1DE942EC4(v69, v48 + 24);
    uint64_t v49 = sub_1DE925C98(0, (unint64_t *)&unk_1EBAA70F0);
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC27220, v48, v49);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
    uint64_t v50 = sub_1DFDE6560();
    uint64_t v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v50;
    sub_1DE942EC4(v69, v51 + 24);
    uint64_t v52 = sub_1DE925C98(0, (unint64_t *)&qword_1EBAF45E0);
    swift_retain();
    MEMORY[0x1E01D4D80](&v74, &unk_1EAC27238, v51, v52);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)&v74);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1DFDE8900();
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      uint64_t v54 = v67;
      uint64_t v53 = v68;
      (*(void (**)(char *, void, uint64_t))(v68 + 104))(v67, *MEMORY[0x1E4F7D0C0], v1);
      sub_1DFDE8780();
      swift_release();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v1);
      sub_1DFDE6560();
      uint64_t v76 = 0;
      long long v74 = 0u;
      long long v75 = 0u;
      swift_retain();
      sub_1DFDE6540();
      swift_release();
      swift_release();
      sub_1DEABC2F4((uint64_t)&v74);
      uint64_t v55 = sub_1DFDE6560();
      *(void *)&v69[0] = 0xD000000000000018;
      *((void *)&v69[0] + 1) = 0x80000001DFED9030;
      sub_1DFDFF950();
      sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = v55;
      sub_1DE942EC4(v69, v56 + 24);
      sub_1DEFA85A4();
      uint64_t v58 = v57;
      swift_retain();
      MEMORY[0x1E01D4D80](&v74, &unk_1EAC27250, v56, v58);
      swift_release();
      swift_release();
      sub_1DEABC2F4((uint64_t)&v74);
      uint64_t v59 = sub_1DFDE6560();
      *(void *)&v69[0] = 0xD000000000000018;
      *((void *)&v69[0] + 1) = 0x80000001DFED9050;
      sub_1DFDFF950();
      sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
      uint64_t v60 = swift_allocObject();
      *(void *)(v60 + 16) = v59;
      sub_1DE942EC4(v69, v60 + 24);
      swift_retain();
      MEMORY[0x1E01D4D80](&v74, &unk_1EAC27260, v60, v58);
      swift_release();
      swift_release();
      sub_1DEABC2F4((uint64_t)&v74);
      uint64_t v61 = sub_1DFDE6560();
      *(void *)&v69[0] = 0xD00000000000001ALL;
      *((void *)&v69[0] + 1) = 0x80000001DFED9070;
      sub_1DFDFF950();
      sub_1DE94F204((uint64_t)v5, (uint64_t)v69);
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = v61;
      sub_1DE942EC4(v69, v62 + 24);
      swift_retain();
      MEMORY[0x1E01D4D80](&v74, &unk_1EAC27270, v62, v58);
      swift_release();
      swift_release();
      sub_1DEABC2F4((uint64_t)&v74);
      __swift_project_boxed_opaque_existential_1(v5, v5[3]);
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAFA0);
      uint64_t result = sub_1DFDECCB0();
      if (result)
      {
        uint64_t v63 = result;
        sub_1DFDE6560();
        uint64_t v76 = 0;
        long long v74 = 0u;
        long long v75 = 0u;
        *(void *)(swift_allocObject() + 16) = v63;
        swift_unknownObjectRetain();
        sub_1DFDE6540();
        swift_release();
        swift_release();
        sub_1DEABC2F4((uint64_t)&v74);
        __swift_project_boxed_opaque_existential_1(v5, v5[3]);
        sub_1DEFA95B0();
        uint64_t result = sub_1DFDECCB0();
        if (result)
        {
          uint64_t v64 = (void *)result;
          sub_1DFDE6560();
          uint64_t v76 = 0;
          long long v74 = 0u;
          long long v75 = 0u;
          *(void *)(swift_allocObject() + 16) = v64;
          id v65 = v64;
          sub_1DFDE6540();
          swift_release();
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          sub_1DEABC2F4((uint64_t)&v74);
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
        }
        goto LABEL_17;
      }
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1DE94F204((uint64_t)v82, (uint64_t)v69);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1DE925C98(0, &qword_1EBAADCA8);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v10 = *(void *)&v70[0];
  if (!*(void *)&v70[0])
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v66[0] = v1;
  uint64_t v11 = *((void *)&v70[0] + 1);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v12 = v72;
  if (!v72)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v13 = v73;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAFA0);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v14 = result;
    sub_1DE942EC4(v69, (uint64_t)&v74);
    uint64_t v77 = v10;
    uint64_t v78 = v11;
    uint64_t v79 = v12;
    uint64_t v80 = v13;
    uint64_t v81 = v14;
    sub_1DFDE6570();
    sub_1DFDE6560();
    uint64_t v71 = 0;
    memset(v70, 0, sizeof(v70));
    sub_1DE95108C((uint64_t)&v74, (uint64_t)v69);
    uint64_t v15 = (_OWORD *)swift_allocObject();
    long long v16 = v69[3];
    v15[3] = v69[2];
    v15[4] = v16;
    void v15[5] = v69[4];
    long long v17 = v69[1];
    v15[1] = v69[0];
    v15[2] = v17;
    sub_1DFDE6540();
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)v70);
    uint64_t v18 = sub_1DFDE6560();
    *(void *)&v70[0] = 0xD000000000000018;
    *((void *)&v70[0] + 1) = 0x80000001DFED9010;
    sub_1DFDFF950();
    sub_1DE94F204((uint64_t)v5, (uint64_t)v70);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    sub_1DE942EC4(v70, v19 + 24);
    sub_1DEFA85A4();
    uint64_t v21 = v20;
    swift_retain();
    MEMORY[0x1E01D4D80](v69, &unk_1EAC27288, v19, v21);
    swift_release();
    swift_release();
    sub_1DEABC2F4((uint64_t)v69);
    sub_1DEAD8D90((uint64_t)&v74);
    uint64_t v1 = v66[0];
    goto LABEL_9;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1DEFA6F88()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI234AppIntentsAppDependencyStartupTask_executionPhase;
  uint64_t v2 = sub_1DFDEDAB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI234AppIntentsAppDependencyStartupTask_resolver);
  return swift_deallocClassInstance();
}

uint64_t sub_1DEFA7048()
{
  return type metadata accessor for AppIntentsAppDependencyStartupTask();
}

uint64_t type metadata accessor for AppIntentsAppDependencyStartupTask()
{
  uint64_t result = qword_1EBAD0768;
  if (!qword_1EBAD0768) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFA709C()
{
  uint64_t result = sub_1DFDEDAB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DEFA7144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI234AppIntentsAppDependencyStartupTask_executionPhase;
  uint64_t v4 = sub_1DFDEDAB0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1DEFA71BC()
{
  return sub_1DFDEDF30();
}

uint64_t sub_1DEFA7238(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_1DEFA5FC8();
  return a1(v2);
}

uint64_t sub_1DEFA7274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA7294, 0, 0);
}

uint64_t sub_1DEFA7294()
{
  sub_1DFDFE490();
  *(void *)(v0 + 72) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA7328, v2, v1);
}

uint64_t sub_1DEFA7328()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAF45E0);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t result = sub_1DFDECCC0();
  if (*(void *)(v0 + 40))
  {
    sub_1DE942EC4((long long *)(v0 + 16), *(void *)(v0 + 56));
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA7404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA7424, 0, 0);
}

uint64_t sub_1DEFA7424()
{
  sub_1DFDFE490();
  *(void *)(v0 + 72) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA74B8, v2, v1);
}

uint64_t sub_1DEFA74B8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA70F0);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t result = sub_1DFDECCC0();
  if (*(void *)(v0 + 40))
  {
    sub_1DE942EC4((long long *)(v0 + 16), *(void *)(v0 + 56));
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA7594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA75B4, 0, 0);
}

uint64_t sub_1DEFA75B4()
{
  sub_1DFDFE490();
  *(void *)(v0 + 72) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA7648, v2, v1);
}

uint64_t sub_1DEFA7648()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();
  sub_1DE925C98(0, &qword_1EBAD2170);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t result = sub_1DFDECCC0();
  if (*(void *)(v0 + 40))
  {
    sub_1DE942EC4((long long *)(v0 + 16), *(void *)(v0 + 56));
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA7724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA7744, 0, 0);
}

uint64_t sub_1DEFA7744()
{
  sub_1DFDFE490();
  *(void *)(v0 + 72) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA77D8, v2, v1);
}

uint64_t sub_1DEFA77D8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF3530);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t result = sub_1DFDECCC0();
  if (*(void *)(v0 + 40))
  {
    sub_1DE942EC4((long long *)(v0 + 16), *(void *)(v0 + 56));
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA78B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA78D4, 0, 0);
}

uint64_t sub_1DEFA78D4()
{
  sub_1DFDFE490();
  *(void *)(v0 + 72) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA7968, v2, v1);
}

uint64_t sub_1DEFA7968()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF5810);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t result = sub_1DFDECCC0();
  if (*(void *)(v0 + 40))
  {
    sub_1DE942EC4((long long *)(v0 + 16), *(void *)(v0 + 56));
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA7A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA7A64, 0, 0);
}

uint64_t sub_1DEFA7A64()
{
  sub_1DFDFE490();
  *(void *)(v0 + 72) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA7AF8, v2, v1);
}

uint64_t sub_1DEFA7AF8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();
  sub_1DE925C98(0, (unint64_t *)&unk_1EBABA4D0);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t result = sub_1DFDECCC0();
  if (*(void *)(v0 + 40))
  {
    sub_1DE942EC4((long long *)(v0 + 16), *(void *)(v0 + 56));
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA7BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  void v3[3] = a3;
  sub_1DEFA97D8();
  v3[4] = swift_task_alloc();
  uint64_t v4 = sub_1DFDE9A60();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DEFA7CC0, 0, 0);
}

uint64_t sub_1DEFA7CC0()
{
  sub_1DFDFE490();
  *(void *)(v0 + 64) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA7D54, v2, v1);
}

uint64_t sub_1DEFA7D54()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  swift_release();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1DFDECCC0();
  uint64_t v5 = (uint64_t (*)())(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1);
  if (v5 == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v0[6];
    uint64_t v8 = v0[7];
    uint64_t v10 = v0[4];
    uint64_t v11 = v0[5];
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v0[9] = v12;
    v0[10] = (v9 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v12(v8, v10, v11);
    uint64_t v5 = sub_1DEFA7E4C;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DEFA7E4C()
{
  uint64_t v1 = (void (*)(uint64_t *, uint64_t, uint64_t))v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = (uint64_t *)v0[2];
  uint64_t v5 = MEMORY[0x1E4F7DA78];
  v4[3] = v3;
  v4[4] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4);
  v1(boxed_opaque_existential_1, v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1DEFA7EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA7F14, 0, 0);
}

uint64_t sub_1DEFA7F14()
{
  sub_1DFDFE490();
  *(void *)(v0 + 112) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA7FA8, v2, v1);
}

uint64_t sub_1DEFA7FA8()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v2 = sub_1DFDECCC0();
  if (*(void *)(v0 + 80))
  {
    long long v5 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v5;
    *(void *)(v0 + 48) = *(void *)(v0 + 88);
    uint64_t v2 = (uint64_t)sub_1DEFA8068;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DEFA8068()
{
  uint64_t v1 = *(uint64_t **)(v0 + 96);
  v1[3] = (uint64_t)&type metadata for SaveIntentArticleProvider;
  v1[4] = sub_1DEFA9830();
  uint64_t v2 = swift_allocObject();
  *uint64_t v1 = v2;
  long long v3 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 32) = v3;
  *(void *)(v2 + 48) = *(void *)(v0 + 48);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1DEFA8104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA8124, 0, 0);
}

uint64_t sub_1DEFA8124()
{
  sub_1DFDFE490();
  *(void *)(v0 + 112) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA81B8, v2, v1);
}

uint64_t sub_1DEFA81B8()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v2 = sub_1DFDECCC0();
  if (*(void *)(v0 + 80))
  {
    long long v5 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v5;
    *(void *)(v0 + 48) = *(void *)(v0 + 88);
    uint64_t v2 = (uint64_t)sub_1DEFA8278;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DEFA8278()
{
  uint64_t v1 = *(uint64_t **)(v0 + 96);
  v1[3] = (uint64_t)&type metadata for ArticleHistoryOptionsProvider;
  v1[4] = sub_1DEFA98BC();
  uint64_t v2 = swift_allocObject();
  *uint64_t v1 = v2;
  long long v3 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 32) = v3;
  *(void *)(v2 + 48) = *(void *)(v0 + 48);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1DEFA8314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA8334, 0, 0);
}

uint64_t sub_1DEFA8334()
{
  sub_1DFDFE490();
  *(void *)(v0 + 32) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA83C8, v2, v1);
}

uint64_t sub_1DEFA83C8()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v2 = sub_1DFDECCC0();
  if (*(unsigned char *)(v0 + 40))
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = (uint64_t)sub_1DEFA847C;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DEFA847C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v1 + 24) = &type metadata for NoOpAudioArticleOptionsProvider;
  *(void *)(v1 + 32) = sub_1DEFA9910();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1DEFA84F4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[2] = a1;
  v4[3] = v1 + 24;
  v4[1] = sub_1DEB7BED8;
  return MEMORY[0x1F4188298](sub_1DEFA8334, 0, 0);
}

void sub_1DEFA85A4()
{
  if (!qword_1EBAF3528)
  {
    sub_1DE925C98(255, &qword_1EBAF3520);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF3528);
    }
  }
}

uint64_t sub_1DEFA8614(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DEB7BED8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return MEMORY[0x1F4188298](sub_1DEFA7A64, 0, 0);
}

uint64_t sub_1DEFA86C8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DEB7BED8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return MEMORY[0x1F4188298](sub_1DEFA78D4, 0, 0);
}

uint64_t sub_1DEFA8778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 176) = a1;
  *(void *)(v3 + 184) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA8798, 0, 0);
}

uint64_t sub_1DEFA8798()
{
  sub_1DFDFE490();
  *(void *)(v0 + 192) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA882C, v2, v1);
}

uint64_t sub_1DEFA882C()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v2 = sub_1DFDECCC0();
  if (*(void *)(v0 + 120))
  {
    long long v5 = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 64) = v5;
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 160);
    long long v6 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 32) = v6;
    uint64_t v2 = (uint64_t)sub_1DEFA88F4;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DEFA88F4()
{
  uint64_t v1 = *(void **)(v0 + 176);
  v1[3] = &type metadata for AudioArticleOptionsProvider;
  v1[4] = sub_1DEFA9744();
  uint64_t v2 = (_OWORD *)swift_allocObject();
  *uint64_t v1 = v2;
  long long v3 = *(_OWORD *)(v0 + 32);
  v2[1] = *(_OWORD *)(v0 + 16);
  v2[2] = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  v2[3] = *(_OWORD *)(v0 + 48);
  v2[4] = v4;
  v2[5] = *(_OWORD *)(v0 + 80);
  long long v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1DEFA8998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA89B8, 0, 0);
}

uint64_t sub_1DEFA89B8()
{
  sub_1DFDFE490();
  *(void *)(v0 + 48) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA8A4C, v2, v1);
}

uint64_t sub_1DEFA8A4C()
{
  uint64_t v1 = (void *)v0[5];
  swift_release();
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAF8D40);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v3 = v0[2];
  if (v3)
  {
    uint64_t v5 = v0[3];
    uint64_t v4 = (void *)v0[4];
    void *v4 = v3;
    v4[1] = v5;
    long long v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA8B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA8B48, 0, 0);
}

uint64_t sub_1DEFA8B48()
{
  sub_1DFDFE490();
  *(void *)(v0 + 48) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA8BDC, v2, v1);
}

uint64_t sub_1DEFA8BDC()
{
  uint64_t v1 = (void *)v0[5];
  swift_release();
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v3 = v0[2];
  if (v3)
  {
    uint64_t v5 = v0[3];
    uint64_t v4 = (void *)v0[4];
    void *v4 = v3;
    v4[1] = v5;
    long long v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA8CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a3;
  return MEMORY[0x1F4188298](sub_1DEFA8CD8, 0, 0);
}

uint64_t sub_1DEFA8CD8()
{
  sub_1DFDFE490();
  *(void *)(v0 + 40) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEFA8D6C, v2, v1);
}

uint64_t sub_1DEFA8D6C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_release();
  sub_1DE9A1E44();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v3 = *(void *)(v0 + 16);
  if (v3)
  {
    **(void **)(v0 + 24) = v3;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFA8E38(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DEB7BED8;
  long long v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAC271A8 + dword_1EAC271A8);
  return v6(a1, v4, v1 + 24);
}

uint64_t sub_1DEFA8EF8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DEB7BED8;
  long long v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAC271B8 + dword_1EAC271B8);
  return v6(a1, v4, v1 + 24);
}

uint64_t sub_1DEFA8FB8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DEB7BED8;
  long long v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAC271D0 + dword_1EAC271D0);
  return v6(a1, v4, v1 + 24);
}

uint64_t sub_1DEFA9078(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DEB7BED8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return MEMORY[0x1F4188298](sub_1DEFA7744, 0, 0);
}

uint64_t sub_1DEFA912C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DEB7BED8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return MEMORY[0x1F4188298](sub_1DEFA75B4, 0, 0);
}

uint64_t sub_1DEFA91E0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DEB7BED8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return MEMORY[0x1F4188298](sub_1DEFA7424, 0, 0);
}

uint64_t sub_1DEFA9294(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DEB7BED8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return MEMORY[0x1F4188298](sub_1DEFA7294, 0, 0);
}

uint64_t sub_1DEFA9344@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_1DEFA9354(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DEB7BED8;
  v4[12] = a1;
  v4[13] = v1 + 24;
  return MEMORY[0x1F4188298](sub_1DEFA8124, 0, 0);
}

uint64_t sub_1DEFA9408(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DEB7BED8;
  v4[12] = a1;
  v4[13] = v1 + 24;
  return MEMORY[0x1F4188298](sub_1DEFA7F14, 0, 0);
}

uint64_t sub_1DEFA94BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DEB7BAE0;
  return sub_1DEFA7BD4(a1, v4, v1 + 24);
}

uint64_t sub_1DEFA956C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEFA95A4@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_unknownObjectRetain();
}

unint64_t sub_1DEFA95B0()
{
  unint64_t result = qword_1EBABAEF0;
  if (!qword_1EBABAEF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBABAEF0);
  }
  return result;
}

uint64_t sub_1DEFA95F0()
{
  return swift_deallocObject();
}

id sub_1DEFA9628@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t sub_1DEFA9634()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEFA9684@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE95108C(v1 + 16, a1);
}

uint64_t sub_1DEFA9694(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DEB7BED8;
  v4[22] = a1;
  v4[23] = v1 + 24;
  return MEMORY[0x1F4188298](sub_1DEFA8798, 0, 0);
}

unint64_t sub_1DEFA9744()
{
  unint64_t result = qword_1EAC27290;
  if (!qword_1EAC27290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27290);
  }
  return result;
}

uint64_t sub_1DEFA9798()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocObject();
}

void sub_1DEFA97D8()
{
  if (!qword_1EAC27298)
  {
    sub_1DFDE9A60();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27298);
    }
  }
}

unint64_t sub_1DEFA9830()
{
  unint64_t result = qword_1EAC272A0;
  if (!qword_1EAC272A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC272A0);
  }
  return result;
}

uint64_t sub_1DEFA9884()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_1DEFA98BC()
{
  unint64_t result = qword_1EAC272A8;
  if (!qword_1EAC272A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC272A8);
  }
  return result;
}

unint64_t sub_1DEFA9910()
{
  unint64_t result = qword_1EAC272B0;
  if (!qword_1EAC272B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC272B0);
  }
  return result;
}

uint64_t *sub_1DEFA9968(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DEA536E4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDF7010();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1DEFA9A70(uint64_t a1, uint64_t a2)
{
  sub_1DEA536E4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DFDF7010();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_1DEFA9B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA536E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEFA9BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA536E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEFA9C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA536E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEFA9D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA536E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEFA9DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFA9E0C);
}

uint64_t sub_1DEFA9E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA536E4();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1DFDF7010();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DEFA9F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFA9F18);
}

uint64_t sub_1DEFA9F18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA536E4();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1DFDF7010();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1DEFAA01C(void *a1)
{
  sub_1DEFAAB88(0, &qword_1EAC272E8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFAAA74();
  sub_1DFE001A0();
  v9[15] = 0;
  sub_1DEA536E4();
  sub_1DEFAABEC(&qword_1EAC272F0, (void (*)(uint64_t))sub_1DEA536E4);
  sub_1DFDFFE80();
  if (!v1)
  {
    type metadata accessor for NewIssueMagazineFeedGroup();
    v9[14] = 1;
    sub_1DFDF7010();
    sub_1DEFAABEC((unint64_t *)&unk_1EBACA140, MEMORY[0x1E4F7F240]);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DEFAA230@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v26 = sub_1DFDF7010();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA536E4();
  uint64_t v29 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v27 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFAAB88(0, &qword_1EAC272D0, MEMORY[0x1E4FBBDC0]);
  uint64_t v30 = v8;
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for NewIssueMagazineFeedGroup();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFAAA74();
  sub_1DFE00190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v25;
  uint64_t v15 = v26;
  char v32 = 0;
  sub_1DEFAABEC(&qword_1EAC272E0, (void (*)(uint64_t))sub_1DEA536E4);
  long long v17 = v27;
  sub_1DFDFFD90();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v21 = (uint64_t)v14;
  v18(v14, v17, v29);
  char v31 = 1;
  sub_1DEFAABEC(&qword_1EBACA150, MEMORY[0x1E4F7F240]);
  sub_1DFDFFD90();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v30);
  uint64_t v19 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v21 + *(int *)(v22 + 20), v5, v15);
  sub_1DEFAAAC8(v19, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DEFAAB2C(v19);
}

uint64_t sub_1DEFAA660()
{
  if (*v0) {
    return 0x724774616D726F66;
  }
  else {
    return 0x6769666E6F63;
  }
}

uint64_t sub_1DEFAA6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DEFAAE40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEFAA6C8(uint64_t a1)
{
  unint64_t v2 = sub_1DEFAAA74();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEFAA704(uint64_t a1)
{
  unint64_t v2 = sub_1DEFAAA74();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEFAA740@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEFAA230(a1, a2);
}

uint64_t sub_1DEFAA758(void *a1)
{
  return sub_1DEFAA01C(a1);
}

uint64_t sub_1DEFAA770()
{
  uint64_t v0 = sub_1DFDF6EC0();
  uint64_t v2 = v1;
  if (v0 == sub_1DFDF6EC0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1DFDFFF50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1DEFAA810(uint64_t a1)
{
  uint64_t v2 = sub_1DEFAABEC(&qword_1EAC272C0, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DEFAA87C()
{
  return 0x757373492077654ELL;
}

uint64_t sub_1DEFAA898(void *a1)
{
  a1[1] = sub_1DEFAABEC(&qword_1EAC272C0, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroup);
  a1[2] = sub_1DEFAABEC(&qword_1EAC25DA0, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroup);
  uint64_t result = sub_1DEFAABEC(&qword_1EAC25DB8, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroup);
  a1[3] = result;
  return result;
}

uint64_t sub_1DEFAA944()
{
  return sub_1DEFAABEC(&qword_1EAC25DC0, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroup);
}

uint64_t sub_1DEFAA98C()
{
  return sub_1DEFAABEC((unint64_t *)&unk_1EBAC49B0, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroup);
}

uint64_t sub_1DEFAA9D4()
{
  return sub_1DEFAABEC(&qword_1EAC272C8, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroup);
}

uint64_t sub_1DEFAAA1C(uint64_t a1)
{
  uint64_t result = sub_1DEFAABEC(&qword_1EAC25D80, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroup);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DEFAAA74()
{
  unint64_t result = qword_1EAC272D8;
  if (!qword_1EAC272D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC272D8);
  }
  return result;
}

uint64_t sub_1DEFAAAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewIssueMagazineFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEFAAB2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewIssueMagazineFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DEFAAB88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEFAAA74();
    unint64_t v7 = a3(a1, &type metadata for NewIssueMagazineFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DEFAABEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewIssueMagazineFeedGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFAAD00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewIssueMagazineFeedGroup.CodingKeys()
{
  return &type metadata for NewIssueMagazineFeedGroup.CodingKeys;
}

unint64_t sub_1DEFAAD3C()
{
  unint64_t result = qword_1EAC272F8;
  if (!qword_1EAC272F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC272F8);
  }
  return result;
}

unint64_t sub_1DEFAAD94()
{
  unint64_t result = qword_1EAC27300;
  if (!qword_1EAC27300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27300);
  }
  return result;
}

unint64_t sub_1DEFAADEC()
{
  unint64_t result = qword_1EAC27308;
  if (!qword_1EAC27308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27308);
  }
  return result;
}

uint64_t sub_1DEFAAE40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6769666E6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x724774616D726F66 && a2 == 0xEB0000000070756FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL static WebViewerViewImpression.DismissalType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WebViewerViewImpression.DismissalType.hash(into:)()
{
  return sub_1DFE00110();
}

uint64_t WebViewerViewImpression.DismissalType.hashValue.getter()
{
  return sub_1DFE00140();
}

uint64_t WebViewerViewImpression.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DFDE7600();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t WebViewerViewImpression.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebViewerViewImpression() + 20);
  uint64_t v4 = sub_1DFDE7600();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WebViewerViewImpression()
{
  uint64_t result = qword_1EAC27318;
  if (!qword_1EAC27318) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WebViewerViewImpression.dismissalType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WebViewerViewImpression();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

unint64_t sub_1DEFAB134()
{
  unint64_t result = qword_1EAC27310;
  if (!qword_1EAC27310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27310);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for WebViewerViewImpression(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDE7600();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + *(int *)(a3 + 20)), (void *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for WebViewerViewImpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDE7600();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for WebViewerViewImpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for WebViewerViewImpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for WebViewerViewImpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for WebViewerViewImpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for WebViewerViewImpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFAB5C0);
}

uint64_t sub_1DEFAB5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for WebViewerViewImpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFAB690);
}

uint64_t sub_1DEFAB690(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DFDE7600();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1DEFAB74C()
{
  uint64_t result = sub_1DFDE7600();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WebViewerViewImpression.DismissalType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFAB8B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebViewerViewImpression.DismissalType()
{
  return &type metadata for WebViewerViewImpression.DismissalType;
}

uint64_t *sub_1DEFAB8E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v71 = *a2;
    *a1 = *a2;
    uint64_t v68 = (uint64_t *)(v71 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unsigned int v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v5);
    uint64_t v8 = *(uint64_t *)((char *)a2 + v5 + 8);
    unsigned int v10 = v7;
    *unsigned int v6 = v9;
    v6[1] = v8;
    uint64_t v11 = v6;
    uint64_t v76 = (char *)v6;
    long long v75 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
    uint64_t v12 = v75[6];
    uint64_t v13 = (char *)v11 + v12;
    uint64_t v14 = &v10[v12];
    uint64_t v15 = v10;
    uint64_t v78 = v10;
    sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
    uint64_t v17 = v16;
    uint64_t v74 = v16;
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v79(v13, v14, v17);
    uint64_t v18 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
    v13[v18[5]] = v14[v18[5]];
    *(void *)&v13[v18[6]] = *(void *)&v14[v18[6]];
    *(void *)&v13[v18[7]] = *(void *)&v14[v18[7]];
    *(void *)&v13[v18[8]] = *(void *)&v14[v18[8]];
    *(void *)&v13[v18[9]] = *(void *)&v14[v18[9]];
    v13[v18[10]] = v14[v18[10]];
    uint64_t v19 = v18[11];
    uint64_t v20 = &v13[v19];
    uint64_t v21 = &v14[v19];
    sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
    uint64_t v23 = v22;
    uint64_t v77 = v22;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v24(v20, v21, v23);
    uint64_t v25 = v75[7];
    uint64_t v26 = &v76[v25];
    uint64_t v27 = &v15[v25];
    v79(&v76[v25], &v15[v25], v74);
    uint64_t v28 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
    v26[v28[5]] = v27[v28[5]];
    *(void *)&v26[v28[6]] = *(void *)&v27[v28[6]];
    *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
    *(void *)&v26[v28[8]] = *(void *)&v27[v28[8]];
    *(void *)&v26[v28[9]] = *(void *)&v27[v28[9]];
    v26[v28[10]] = v27[v28[10]];
    uint64_t v29 = v28[11];
    uint64_t v30 = &v26[v29];
    char v31 = &v27[v29];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v24(v30, v31, v77);
    uint64_t v32 = v75[8];
    uint64_t v33 = &v76[v32];
    uint64_t v34 = &v78[v32];
    v79(&v76[v32], &v78[v32], v74);
    uint64_t v35 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
    v33[v35[5]] = v34[v35[5]];
    *(void *)&v33[v35[6]] = *(void *)&v34[v35[6]];
    *(void *)&v33[v35[7]] = *(void *)&v34[v35[7]];
    *(void *)&v33[v35[8]] = *(void *)&v34[v35[8]];
    *(void *)&v33[v35[9]] = *(void *)&v34[v35[9]];
    v33[v35[10]] = v34[v35[10]];
    uint64_t v36 = v35[11];
    uint64_t v37 = &v33[v36];
    uint64_t v38 = &v34[v36];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v24(v37, v38, v77);
    v79(&v76[v75[9]], &v78[v75[9]], v74);
    uint64_t v39 = v75[10];
    uint64_t v40 = &v76[v39];
    uint64_t v41 = &v78[v39];
    v79(&v76[v39], &v78[v39], v74);
    uint64_t v42 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
    *(void *)&v40[*(int *)(v42 + 20)] = *(void *)&v41[*(int *)(v42 + 20)];
    uint64_t v43 = *(int *)(v42 + 24);
    uint64_t v44 = &v40[v43];
    uint64_t v45 = &v41[v43];
    swift_retain();
    v24(v44, v45, v77);
    uint64_t v46 = v75[11];
    uint64_t v47 = &v76[v46];
    uint64_t v48 = &v78[v46];
    v79(&v76[v46], &v78[v46], v74);
    uint64_t v49 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
    v47[v49[5]] = v48[v49[5]];
    v47[v49[6]] = v48[v49[6]];
    *(void *)&v47[v49[7]] = *(void *)&v48[v49[7]];
    v24(&v47[v49[8]], &v48[v49[8]], v77);
    v79(&v76[v75[12]], &v78[v75[12]], v74);
    uint64_t v50 = v75[13];
    uint64_t v51 = &v76[v50];
    uint64_t v52 = &v78[v50];
    *uint64_t v51 = v78[v50];
    *(_OWORD *)(v51 + 8) = *(_OWORD *)&v78[v50 + 8];
    *((void *)v51 + 3) = *(void *)&v78[v50 + 24];
    v51[32] = v78[v50 + 32];
    *(_OWORD *)(v51 + 40) = *(_OWORD *)&v78[v50 + 40];
    *((void *)v51 + 7) = *(void *)&v78[v50 + 56];
    *((_WORD *)v51 + 32) = *(_WORD *)&v78[v50 + 64];
    uint64_t v53 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
    v24(&v51[*(int *)(v53 + 52)], &v52[*(int *)(v53 + 52)], v77);
    uint64_t v54 = v75[14];
    uint64_t v55 = &v76[v54];
    uint64_t v56 = &v78[v54];
    v79(&v76[v54], &v78[v54], v74);
    uint64_t v57 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
    v55[v57[5]] = v56[v57[5]];
    v55[v57[6]] = v56[v57[6]];
    v24(&v55[v57[7]], &v56[v57[7]], v77);
    uint64_t v58 = v75[15];
    uint64_t v59 = &v76[v58];
    uint64_t v60 = &v78[v58];
    v79(&v76[v58], &v78[v58], v74);
    uint64_t v61 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
    *(void *)&v59[v61[5]] = *(void *)&v60[v61[5]];
    *(void *)&v59[v61[6]] = *(void *)&v60[v61[6]];
    v59[v61[7]] = v60[v61[7]];
    v24(&v59[v61[8]], &v60[v61[8]], v77);
    uint64_t v62 = v75[16];
    uint64_t v63 = &v76[v62];
    uint64_t v64 = &v78[v62];
    v79(&v76[v62], &v78[v62], v74);
    id v65 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
    v63[v65[5]] = v64[v65[5]];
    v63[v65[6]] = v64[v65[6]];
    *(void *)&v63[v65[7]] = *(void *)&v64[v65[7]];
    v63[v65[8]] = v64[v65[8]];
    v63[v65[9]] = v64[v65[9]];
    v24(&v63[v65[10]], &v64[v65[10]], v77);
    uint64_t v66 = v75[17];
    uint64_t v67 = &v76[v66];
    uint64_t v68 = a1;
    v69 = &v78[v66];
    v79(&v76[v66], &v78[v66], v74);
    uint64_t v70 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
    *(void *)&v67[v70[5]] = *(void *)&v69[v70[5]];
    *(void *)&v67[v70[6]] = *(void *)&v69[v70[6]];
    *(void *)&v67[v70[7]] = *(void *)&v69[v70[7]];
    swift_bridgeObjectRetain();
  }
  return v68;
}

uint64_t sub_1DEFAC044(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  int v3 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v4 = v2 + v3[6];
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v7(v4, v5);
  uint64_t v8 = type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v4 + *(int *)(v8 + 44);
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v12(v9, v10);
  uint64_t v13 = v2 + v3[7];
  v7(v13, v6);
  uint64_t v14 = type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v12(v13 + *(int *)(v14 + 44), v11);
  uint64_t v15 = v2 + v3[8];
  v7(v15, v6);
  uint64_t v16 = type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v12(v15 + *(int *)(v16 + 44), v11);
  v7(v2 + v3[9], v6);
  uint64_t v17 = v2 + v3[10];
  v7(v17, v6);
  uint64_t v18 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
  swift_release();
  v12(v17 + *(int *)(v18 + 24), v11);
  uint64_t v19 = v2 + v3[11];
  v7(v19, v6);
  uint64_t v20 = type metadata accessor for NewIssueMagazineFeedGroupKnobs();
  v12(v19 + *(int *)(v20 + 32), v11);
  v7(v2 + v3[12], v6);
  uint64_t v21 = v2 + v3[13];
  uint64_t v22 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
  v12(v21 + *(int *)(v22 + 52), v11);
  uint64_t v23 = v2 + v3[14];
  v7(v23, v6);
  uint64_t v24 = type metadata accessor for TopicMagazineFeedGroupKnobs();
  v12(v23 + *(int *)(v24 + 28), v11);
  uint64_t v25 = v2 + v3[15];
  v7(v25, v6);
  uint64_t v26 = type metadata accessor for TrendingMagazineFeedGroupKnobs();
  v12(v25 + *(int *)(v26 + 32), v11);
  uint64_t v27 = v2 + v3[16];
  v7(v27, v6);
  uint64_t v28 = type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  v12(v27 + *(int *)(v28 + 40), v11);
  v7(v2 + v3[17], v6);
  type metadata accessor for NewspaperMagazineFeedGroupKnobs();
  return swift_bridgeObjectRelease();
}

void *sub_1DEFAC448(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (void *)((char *)a1 + v3);
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v7 = *(void *)((char *)a2 + v3);
  uint64_t v6 = *(void *)((char *)a2 + v3 + 8);
  uint64_t v8 = v5;
  void *v4 = v7;
  v4[1] = v6;
  uint64_t v9 = v4;
  uint64_t v73 = (char *)v4;
  uint64_t v71 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v72 = v8;
  uint64_t v10 = v71[6];
  uint64_t v11 = (char *)v9 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = v8;
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
  uint64_t v15 = v14;
  uint64_t v70 = v14;
  long long v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v75(v11, v12, v15);
  uint64_t v16 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
  v11[v16[5]] = v12[v16[5]];
  *(void *)&v11[v16[6]] = *(void *)&v12[v16[6]];
  *(void *)&v11[v16[7]] = *(void *)&v12[v16[7]];
  *(void *)&v11[v16[8]] = *(void *)&v12[v16[8]];
  *(void *)&v11[v16[9]] = *(void *)&v12[v16[9]];
  v11[v16[10]] = v12[v16[10]];
  uint64_t v17 = v16[11];
  uint64_t v18 = &v11[v17];
  uint64_t v19 = &v12[v17];
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
  uint64_t v21 = v20;
  uint64_t v74 = v20;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v22(v18, v19, v21);
  uint64_t v23 = v71[7];
  uint64_t v24 = &v73[v23];
  uint64_t v25 = &v13[v23];
  v75(&v73[v23], &v13[v23], v70);
  uint64_t v26 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
  v24[v26[5]] = v25[v26[5]];
  *(void *)&v24[v26[6]] = *(void *)&v25[v26[6]];
  *(void *)&v24[v26[7]] = *(void *)&v25[v26[7]];
  *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
  *(void *)&v24[v26[9]] = *(void *)&v25[v26[9]];
  v24[v26[10]] = v25[v26[10]];
  uint64_t v27 = v26[11];
  uint64_t v28 = &v24[v27];
  uint64_t v29 = &v25[v27];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v22(v28, v29, v74);
  uint64_t v30 = v71[8];
  char v31 = &v73[v30];
  uint64_t v32 = &v72[v30];
  v75(&v73[v30], &v72[v30], v70);
  uint64_t v33 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
  v31[v33[5]] = v32[v33[5]];
  *(void *)&v31[v33[6]] = *(void *)&v32[v33[6]];
  *(void *)&v31[v33[7]] = *(void *)&v32[v33[7]];
  *(void *)&v31[v33[8]] = *(void *)&v32[v33[8]];
  *(void *)&v31[v33[9]] = *(void *)&v32[v33[9]];
  v31[v33[10]] = v32[v33[10]];
  uint64_t v34 = v33[11];
  uint64_t v35 = &v31[v34];
  uint64_t v36 = &v32[v34];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v22(v35, v36, v74);
  v75(&v73[v71[9]], &v72[v71[9]], v70);
  uint64_t v37 = v71[10];
  uint64_t v38 = &v73[v37];
  uint64_t v39 = &v72[v37];
  v75(&v73[v37], &v72[v37], v70);
  uint64_t v40 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
  *(void *)&v38[*(int *)(v40 + 20)] = *(void *)&v39[*(int *)(v40 + 20)];
  uint64_t v41 = *(int *)(v40 + 24);
  uint64_t v42 = &v38[v41];
  uint64_t v43 = &v39[v41];
  swift_retain();
  v22(v42, v43, v74);
  uint64_t v44 = v71[11];
  uint64_t v45 = &v73[v44];
  uint64_t v46 = &v72[v44];
  v75(&v73[v44], &v72[v44], v70);
  uint64_t v47 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
  v45[v47[5]] = v46[v47[5]];
  v45[v47[6]] = v46[v47[6]];
  *(void *)&v45[v47[7]] = *(void *)&v46[v47[7]];
  v22(&v45[v47[8]], &v46[v47[8]], v74);
  v75(&v73[v71[12]], &v72[v71[12]], v70);
  uint64_t v48 = v71[13];
  uint64_t v49 = &v73[v48];
  uint64_t v50 = &v72[v48];
  *uint64_t v49 = v72[v48];
  *(_OWORD *)(v49 + 8) = *(_OWORD *)&v72[v48 + 8];
  *((void *)v49 + 3) = *(void *)&v72[v48 + 24];
  v49[32] = v72[v48 + 32];
  *(_OWORD *)(v49 + 40) = *(_OWORD *)&v72[v48 + 40];
  *((void *)v49 + 7) = *(void *)&v72[v48 + 56];
  *((_WORD *)v49 + 32) = *(_WORD *)&v72[v48 + 64];
  uint64_t v51 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
  v22(&v49[*(int *)(v51 + 52)], &v50[*(int *)(v51 + 52)], v74);
  uint64_t v52 = v71[14];
  uint64_t v53 = &v73[v52];
  uint64_t v54 = &v72[v52];
  v75(&v73[v52], &v72[v52], v70);
  uint64_t v55 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
  v53[v55[5]] = v54[v55[5]];
  v53[v55[6]] = v54[v55[6]];
  v22(&v53[v55[7]], &v54[v55[7]], v74);
  uint64_t v56 = v71[15];
  uint64_t v57 = &v73[v56];
  uint64_t v58 = &v72[v56];
  v75(&v73[v56], &v72[v56], v70);
  uint64_t v59 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
  *(void *)&v57[v59[5]] = *(void *)&v58[v59[5]];
  *(void *)&v57[v59[6]] = *(void *)&v58[v59[6]];
  v57[v59[7]] = v58[v59[7]];
  v22(&v57[v59[8]], &v58[v59[8]], v74);
  uint64_t v60 = v71[16];
  uint64_t v61 = &v73[v60];
  uint64_t v62 = &v72[v60];
  v75(&v73[v60], &v72[v60], v70);
  uint64_t v63 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  v61[v63[5]] = v62[v63[5]];
  v61[v63[6]] = v62[v63[6]];
  *(void *)&v61[v63[7]] = *(void *)&v62[v63[7]];
  v61[v63[8]] = v62[v63[8]];
  v61[v63[9]] = v62[v63[9]];
  v22(&v61[v63[10]], &v62[v63[10]], v74);
  uint64_t v64 = v71[17];
  id v65 = &v73[v64];
  uint64_t v66 = &v72[v64];
  v75(&v73[v64], &v72[v64], v70);
  uint64_t v67 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
  *(void *)&v65[v67[5]] = *(void *)&v66[v67[5]];
  *(void *)&v65[v67[6]] = *(void *)&v66[v67[6]];
  *(void *)&v65[v67[7]] = *(void *)&v66[v67[7]];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DEFACB48(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  *(void *)((char *)a1 + v3) = *(void *)((char *)a2 + v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 1) = *((void *)v5 + 1);
  uint64_t v56 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v6 = v56[6];
  uint64_t v7 = &v4[v6];
  uint64_t v8 = &v5[v6];
  uint64_t v9 = v5;
  uint64_t v61 = v5;
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
  uint64_t v11 = v10;
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v58(v7, v8, v10);
  uint64_t v12 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
  v7[v12[5]] = v8[v12[5]];
  *(void *)&v7[v12[6]] = *(void *)&v8[v12[6]];
  swift_retain();
  swift_release();
  *(void *)&v7[v12[7]] = *(void *)&v8[v12[7]];
  swift_retain();
  swift_release();
  *(void *)&v7[v12[8]] = *(void *)&v8[v12[8]];
  swift_retain();
  swift_release();
  *(void *)&v7[v12[9]] = *(void *)&v8[v12[9]];
  swift_retain();
  swift_release();
  v7[v12[10]] = v8[v12[10]];
  uint64_t v13 = v12[11];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
  uint64_t v17 = v16;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24);
  uint64_t v60 = v16;
  v59(v14, v15, v16);
  uint64_t v18 = v56[7];
  uint64_t v19 = &v4[v18];
  uint64_t v20 = &v9[v18];
  v58(&v4[v18], &v9[v18], v11);
  uint64_t v21 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
  v19[v21[5]] = v20[v21[5]];
  *(void *)&v19[v21[6]] = *(void *)&v20[v21[6]];
  swift_retain();
  swift_release();
  *(void *)&v19[v21[7]] = *(void *)&v20[v21[7]];
  swift_retain();
  swift_release();
  *(void *)&v19[v21[8]] = *(void *)&v20[v21[8]];
  swift_retain();
  swift_release();
  *(void *)&v19[v21[9]] = *(void *)&v20[v21[9]];
  swift_retain();
  swift_release();
  v19[v21[10]] = v20[v21[10]];
  v59(&v19[v21[11]], &v20[v21[11]], v17);
  uint64_t v22 = v56[8];
  uint64_t v23 = &v4[v22];
  uint64_t v24 = &v61[v22];
  v58(&v4[v22], &v61[v22], v11);
  uint64_t v25 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
  v23[v25[5]] = v24[v25[5]];
  *(void *)&v23[v25[6]] = *(void *)&v24[v25[6]];
  swift_retain();
  swift_release();
  *(void *)&v23[v25[7]] = *(void *)&v24[v25[7]];
  swift_retain();
  swift_release();
  *(void *)&v23[v25[8]] = *(void *)&v24[v25[8]];
  swift_retain();
  swift_release();
  *(void *)&v23[v25[9]] = *(void *)&v24[v25[9]];
  swift_retain();
  swift_release();
  v23[v25[10]] = v24[v25[10]];
  v59(&v23[v25[11]], &v24[v25[11]], v60);
  v58(&v4[v56[9]], &v61[v56[9]], v11);
  uint64_t v26 = v56[10];
  uint64_t v27 = &v4[v26];
  uint64_t v28 = &v61[v26];
  v58(&v4[v26], &v61[v26], v11);
  uint64_t v29 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
  *(void *)&v27[*(int *)(v29 + 20)] = *(void *)&v28[*(int *)(v29 + 20)];
  swift_retain();
  swift_release();
  v59(&v27[*(int *)(v29 + 24)], &v28[*(int *)(v29 + 24)], v60);
  uint64_t v30 = v56[11];
  char v31 = &v4[v30];
  uint64_t v32 = &v61[v30];
  v58(&v4[v30], &v61[v30], v11);
  uint64_t v33 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
  v31[v33[5]] = v32[v33[5]];
  v31[v33[6]] = v32[v33[6]];
  *(void *)&v31[v33[7]] = *(void *)&v32[v33[7]];
  v59(&v31[v33[8]], &v32[v33[8]], v60);
  v58(&v4[v56[12]], &v61[v56[12]], v11);
  uint64_t v34 = v56[13];
  uint64_t v35 = &v4[v34];
  uint64_t v36 = &v61[v34];
  *uint64_t v35 = v61[v34];
  *((void *)v35 + 1) = *(void *)&v61[v34 + 8];
  *((void *)v35 + 2) = *(void *)&v61[v34 + 16];
  *((void *)v35 + 3) = *(void *)&v61[v34 + 24];
  v35[32] = v61[v34 + 32];
  *((void *)v35 + 5) = *(void *)&v61[v34 + 40];
  *((void *)v35 + 6) = *(void *)&v61[v34 + 48];
  uint64_t v37 = *(void *)&v61[v34 + 56];
  v35[64] = v36[64];
  *((void *)v35 + 7) = v37;
  v35[65] = v36[65];
  uint64_t v38 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
  v59(&v35[*(int *)(v38 + 52)], &v36[*(int *)(v38 + 52)], v60);
  uint64_t v39 = v56[14];
  uint64_t v40 = &v4[v39];
  uint64_t v41 = &v61[v39];
  v58(&v4[v39], &v61[v39], v11);
  uint64_t v42 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
  v40[v42[5]] = v41[v42[5]];
  v40[v42[6]] = v41[v42[6]];
  v59(&v40[v42[7]], &v41[v42[7]], v60);
  uint64_t v43 = v56[15];
  uint64_t v44 = &v4[v43];
  uint64_t v45 = &v61[v43];
  v58(&v4[v43], &v61[v43], v11);
  uint64_t v46 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
  *(void *)&v44[v46[5]] = *(void *)&v45[v46[5]];
  *(void *)&v44[v46[6]] = *(void *)&v45[v46[6]];
  v44[v46[7]] = v45[v46[7]];
  v59(&v44[v46[8]], &v45[v46[8]], v60);
  uint64_t v47 = v56[16];
  uint64_t v48 = &v4[v47];
  uint64_t v49 = &v61[v47];
  v58(&v4[v47], &v61[v47], v11);
  uint64_t v50 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  v48[v50[5]] = v49[v50[5]];
  v48[v50[6]] = v49[v50[6]];
  *(void *)&v48[v50[7]] = *(void *)&v49[v50[7]];
  v48[v50[8]] = v49[v50[8]];
  v48[v50[9]] = v49[v50[9]];
  v59(&v48[v50[10]], &v49[v50[10]], v60);
  uint64_t v51 = v56[17];
  uint64_t v52 = &v4[v51];
  uint64_t v53 = &v61[v51];
  v58(&v4[v51], &v61[v51], v11);
  uint64_t v54 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
  *(void *)&v52[v54[5]] = *(void *)&v53[v54[5]];
  *(void *)&v52[v54[6]] = *(void *)&v53[v54[6]];
  *(void *)&v52[v54[7]] = *(void *)&v53[v54[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1DEFAD2B8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v59 = (char *)a2 + v3;
  *(_OWORD *)((char *)a1 + v3) = *(_OWORD *)((char *)a2 + v3);
  uint64_t v6 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v7 = v6[6];
  uint64_t v8 = &v4[v7];
  uint64_t v9 = v4;
  uint64_t v57 = v4;
  uint64_t v10 = &v5[v7];
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
  uint64_t v12 = v11;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
  v60(v8, v10, v11);
  uint64_t v13 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
  v8[v13[5]] = v10[v13[5]];
  *(void *)&v8[v13[6]] = *(void *)&v10[v13[6]];
  *(void *)&v8[v13[7]] = *(void *)&v10[v13[7]];
  *(void *)&v8[v13[8]] = *(void *)&v10[v13[8]];
  *(void *)&v8[v13[9]] = *(void *)&v10[v13[9]];
  v8[v13[10]] = v10[v13[10]];
  uint64_t v14 = v13[11];
  uint64_t v15 = &v8[v14];
  uint64_t v16 = &v10[v14];
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
  v19(v15, v16, v17);
  uint64_t v20 = v6[7];
  uint64_t v21 = &v9[v20];
  uint64_t v22 = &v59[v20];
  v60(&v9[v20], &v59[v20], v12);
  uint64_t v23 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
  v21[v23[5]] = v22[v23[5]];
  *(void *)&v21[v23[6]] = *(void *)&v22[v23[6]];
  *(void *)&v21[v23[7]] = *(void *)&v22[v23[7]];
  *(void *)&v21[v23[8]] = *(void *)&v22[v23[8]];
  *(void *)&v21[v23[9]] = *(void *)&v22[v23[9]];
  v21[v23[10]] = v22[v23[10]];
  v19(&v21[v23[11]], &v22[v23[11]], v18);
  uint64_t v24 = v6[8];
  uint64_t v25 = &v57[v24];
  uint64_t v26 = &v59[v24];
  v60(&v57[v24], &v59[v24], v12);
  uint64_t v27 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
  v25[v27[5]] = v26[v27[5]];
  *(void *)&v25[v27[6]] = *(void *)&v26[v27[6]];
  *(void *)&v25[v27[7]] = *(void *)&v26[v27[7]];
  *(void *)&v25[v27[8]] = *(void *)&v26[v27[8]];
  *(void *)&v25[v27[9]] = *(void *)&v26[v27[9]];
  v25[v27[10]] = v26[v27[10]];
  v19(&v25[v27[11]], &v26[v27[11]], v18);
  v60(&v57[v6[9]], &v59[v6[9]], v12);
  uint64_t v28 = v6[10];
  uint64_t v29 = &v57[v28];
  uint64_t v30 = &v59[v28];
  v60(&v57[v28], &v59[v28], v12);
  uint64_t v31 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
  *(void *)&v29[*(int *)(v31 + 20)] = *(void *)&v30[*(int *)(v31 + 20)];
  v19(&v29[*(int *)(v31 + 24)], &v30[*(int *)(v31 + 24)], v18);
  uint64_t v32 = v6[11];
  uint64_t v33 = &v57[v32];
  uint64_t v34 = &v59[v32];
  v60(&v57[v32], &v59[v32], v12);
  uint64_t v35 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
  v33[v35[5]] = v34[v35[5]];
  v33[v35[6]] = v34[v35[6]];
  *(void *)&v33[v35[7]] = *(void *)&v34[v35[7]];
  v19(&v33[v35[8]], &v34[v35[8]], v18);
  v60(&v57[v6[12]], &v59[v6[12]], v12);
  uint64_t v36 = v6[13];
  uint64_t v37 = &v57[v36];
  uint64_t v38 = &v59[v36];
  *uint64_t v37 = v59[v36];
  *(_OWORD *)(v37 + 8) = *(_OWORD *)&v59[v36 + 8];
  *((void *)v37 + 3) = *(void *)&v59[v36 + 24];
  v37[32] = v59[v36 + 32];
  *(_OWORD *)(v37 + 40) = *(_OWORD *)&v59[v36 + 40];
  *((void *)v37 + 7) = *(void *)&v59[v36 + 56];
  *((_WORD *)v37 + 32) = *(_WORD *)&v59[v36 + 64];
  uint64_t v39 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
  v19(&v37[*(int *)(v39 + 52)], &v38[*(int *)(v39 + 52)], v18);
  uint64_t v40 = v6[14];
  uint64_t v41 = &v57[v40];
  uint64_t v42 = &v59[v40];
  v60(&v57[v40], &v59[v40], v12);
  uint64_t v43 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
  v41[v43[5]] = v42[v43[5]];
  v41[v43[6]] = v42[v43[6]];
  v19(&v41[v43[7]], &v42[v43[7]], v18);
  uint64_t v44 = v6[15];
  uint64_t v45 = &v57[v44];
  uint64_t v46 = &v59[v44];
  v60(&v57[v44], &v59[v44], v12);
  uint64_t v47 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
  *(void *)&v45[v47[5]] = *(void *)&v46[v47[5]];
  *(void *)&v45[v47[6]] = *(void *)&v46[v47[6]];
  v45[v47[7]] = v46[v47[7]];
  v19(&v45[v47[8]], &v46[v47[8]], v18);
  uint64_t v48 = v6[16];
  uint64_t v49 = &v57[v48];
  uint64_t v50 = &v59[v48];
  v60(&v57[v48], &v59[v48], v12);
  uint64_t v51 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  v49[v51[5]] = v50[v51[5]];
  v49[v51[6]] = v50[v51[6]];
  *(void *)&v49[v51[7]] = *(void *)&v50[v51[7]];
  v49[v51[8]] = v50[v51[8]];
  v49[v51[9]] = v50[v51[9]];
  v19(&v49[v51[10]], &v50[v51[10]], v18);
  uint64_t v52 = v6[17];
  uint64_t v53 = &v57[v52];
  uint64_t v54 = &v59[v52];
  v60(&v57[v52], &v59[v52], v12);
  uint64_t v55 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
  *(void *)&v53[v55[5]] = *(void *)&v54[v55[5]];
  *(void *)&v53[v55[6]] = *(void *)&v54[v55[6]];
  *(void *)&v53[v55[7]] = *(void *)&v54[v55[7]];
  return a1;
}

void *sub_1DEFAD8F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  *(void *)((char *)a1 + v3) = *(void *)((char *)a2 + v3);
  swift_bridgeObjectRelease();
  *((void *)v4 + 1) = *((void *)v5 + 1);
  uint64_t v6 = type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (int *)v6;
  uint64_t v9 = &v4[v7];
  uint64_t v57 = v4;
  uint64_t v10 = &v5[v7];
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
  uint64_t v58 = v11;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v59(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
  v9[v12[5]] = v10[v12[5]];
  *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
  swift_release();
  *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
  swift_release();
  *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
  swift_release();
  *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
  swift_release();
  v9[v12[10]] = v10[v12[10]];
  uint64_t v13 = v12[11];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  sub_1DEA82B6C(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40);
  v18(v14, v15, v16);
  uint64_t v60 = v8;
  uint64_t v19 = v8[7];
  uint64_t v20 = &v4[v19];
  uint64_t v21 = &v5[v19];
  v59(&v4[v19], &v5[v19], v58);
  uint64_t v22 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
  v20[v22[5]] = v21[v22[5]];
  *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
  swift_release();
  *(void *)&v20[v22[7]] = *(void *)&v21[v22[7]];
  swift_release();
  *(void *)&v20[v22[8]] = *(void *)&v21[v22[8]];
  swift_release();
  *(void *)&v20[v22[9]] = *(void *)&v21[v22[9]];
  swift_release();
  v20[v22[10]] = v21[v22[10]];
  v18(&v20[v22[11]], &v21[v22[11]], v17);
  uint64_t v23 = v8[8];
  uint64_t v24 = &v4[v23];
  uint64_t v25 = &v5[v23];
  v59(&v4[v23], &v5[v23], v58);
  uint64_t v26 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
  v24[v26[5]] = v25[v26[5]];
  *(void *)&v24[v26[6]] = *(void *)&v25[v26[6]];
  swift_release();
  *(void *)&v24[v26[7]] = *(void *)&v25[v26[7]];
  swift_release();
  *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
  swift_release();
  *(void *)&v24[v26[9]] = *(void *)&v25[v26[9]];
  swift_release();
  v24[v26[10]] = v25[v26[10]];
  v18(&v24[v26[11]], &v25[v26[11]], v17);
  v59(&v4[v60[9]], &v5[v60[9]], v58);
  uint64_t v27 = v8[10];
  uint64_t v28 = &v4[v27];
  uint64_t v29 = &v5[v27];
  v59(&v4[v27], &v5[v27], v58);
  uint64_t v30 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
  *(void *)&v28[*(int *)(v30 + 20)] = *(void *)&v29[*(int *)(v30 + 20)];
  swift_release();
  v18(&v28[*(int *)(v30 + 24)], &v29[*(int *)(v30 + 24)], v17);
  uint64_t v31 = v8[11];
  uint64_t v32 = &v4[v31];
  uint64_t v33 = &v5[v31];
  v59(&v4[v31], &v5[v31], v58);
  uint64_t v34 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
  v32[v34[5]] = v33[v34[5]];
  v32[v34[6]] = v33[v34[6]];
  *(void *)&v32[v34[7]] = *(void *)&v33[v34[7]];
  v18(&v32[v34[8]], &v33[v34[8]], v17);
  v59(&v4[v60[12]], &v5[v60[12]], v58);
  uint64_t v35 = v8[13];
  uint64_t v36 = &v4[v35];
  uint64_t v37 = &v5[v35];
  *uint64_t v36 = v5[v35];
  *(_OWORD *)(v36 + 8) = *(_OWORD *)&v5[v35 + 8];
  *((void *)v36 + 3) = *(void *)&v5[v35 + 24];
  v36[32] = v5[v35 + 32];
  *(_OWORD *)(v36 + 40) = *(_OWORD *)&v5[v35 + 40];
  v36[64] = v5[v35 + 64];
  *((void *)v36 + 7) = *(void *)&v5[v35 + 56];
  v36[65] = v5[v35 + 65];
  uint64_t v38 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
  v18(&v36[*(int *)(v38 + 52)], &v37[*(int *)(v38 + 52)], v17);
  uint64_t v39 = v8[14];
  uint64_t v40 = &v4[v39];
  uint64_t v41 = &v5[v39];
  v59(&v4[v39], &v5[v39], v58);
  uint64_t v42 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
  v40[v42[5]] = v41[v42[5]];
  v40[v42[6]] = v41[v42[6]];
  v18(&v40[v42[7]], &v41[v42[7]], v17);
  uint64_t v43 = v8[15];
  uint64_t v44 = &v4[v43];
  uint64_t v45 = &v5[v43];
  v59(&v4[v43], &v5[v43], v58);
  uint64_t v46 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
  *(void *)&v44[v46[5]] = *(void *)&v45[v46[5]];
  *(void *)&v44[v46[6]] = *(void *)&v45[v46[6]];
  v44[v46[7]] = v45[v46[7]];
  v18(&v44[v46[8]], &v45[v46[8]], v17);
  uint64_t v47 = v8[16];
  uint64_t v48 = &v4[v47];
  uint64_t v49 = &v5[v47];
  v59(&v4[v47], &v5[v47], v58);
  uint64_t v50 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  v48[v50[5]] = v49[v50[5]];
  v48[v50[6]] = v49[v50[6]];
  *(void *)&v48[v50[7]] = *(void *)&v49[v50[7]];
  v48[v50[8]] = v49[v50[8]];
  v48[v50[9]] = v49[v50[9]];
  v18(&v48[v50[10]], &v49[v50[10]], v17);
  uint64_t v51 = v8[17];
  uint64_t v52 = &v4[v51];
  uint64_t v53 = &v5[v51];
  v59(&v57[v51], &v5[v51], v58);
  uint64_t v54 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
  *(void *)&v52[v54[5]] = *(void *)&v53[v54[5]];
  *(void *)&v52[v54[6]] = *(void *)&v53[v54[6]];
  *(void *)&v52[v54[7]] = *(void *)&v53[v54[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DEFADFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFADFE0);
}

uint64_t sub_1DEFADFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1DEFAE050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFAE064);
}

uint64_t sub_1DEFAE064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1DEFAE0D8@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  LODWORD(v82) = a2;
  uint64_t v83 = a1;
  sub_1DE9FB808(0, (unint64_t *)&unk_1EBAB58A0, (void (*)(uint64_t))type metadata accessor for NewspaperMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v80 = (char *)&v69 - v7;
  sub_1DE9FB808(0, qword_1EBAE4748, (void (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v79 = (char *)&v69 - v9;
  sub_1DE9FB808(0, (unint64_t *)&unk_1EBAB5320, (void (*)(uint64_t))type metadata accessor for TrendingMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v78 = (char *)&v69 - v11;
  sub_1DE9FB808(0, qword_1EBADE1B0, (void (*)(uint64_t))type metadata accessor for TopicMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v77 = (char *)&v69 - v13;
  sub_1DE9FB808(0, &qword_1EBAB9400, (void (*)(uint64_t))type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v76 = (char *)&v69 - v15;
  sub_1DE9FB808(0, qword_1EBAE01F8, (void (*)(uint64_t))type metadata accessor for PaywallMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v16 - 8);
  long long v75 = (char *)&v69 - v17;
  sub_1DE9FB808(0, (unint64_t *)&unk_1EBAB4EB8, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v74 = (char *)&v69 - v19;
  sub_1DE9FB808(0, qword_1EBAA5CA0, (void (*)(uint64_t))type metadata accessor for MyMagazinesMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v73 = (char *)&v69 - v21;
  sub_1DE9FB808(0, &qword_1EBAE7728, (void (*)(uint64_t))type metadata accessor for InlineCategoriesMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v81 = (uint64_t)&v69 - v23;
  sub_1DE9FB808(0, &qword_1EBAB7E80, (void (*)(uint64_t))type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v69 - v25;
  sub_1DE9FB808(0, &qword_1EBAB9660, (void (*)(uint64_t))type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v69 - v28;
  sub_1DE9FB808(0, &qword_1EBAB8C40, (void (*)(uint64_t))type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v69 - v31;
  sub_1DE9FB808(0, qword_1EBAAF608, (void (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v69 - v34;
  uint64_t v36 = type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v39 = (unint64_t *)((char *)&v69 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DFDE7FA0();
  sub_1DFDE7F80();
  if (qword_1EBAC0D08 != -1) {
    swift_once();
  }
  sub_1DFDE7F70();
  swift_release();
  uint64_t v40 = 15;
  if ((v82 & 1) == 0) {
    uint64_t v40 = (uint64_t)v83;
  }
  uint64_t v41 = 0x7FFFFFFFFFFFFFFFLL;
  if (!v84) {
    uint64_t v41 = v40;
  }
  *a4 = v41;
  sub_1DEFAF390(a3, (uint64_t)v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
  {
    uint64_t v82 = a3;
    uint64_t v42 = type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
    uint64_t v72 = v32;
    v43(v32, 1, 1, v42);
    uint64_t v44 = type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
    uint64_t v71 = v29;
    v45(v29, 1, 1, v44);
    uint64_t v46 = type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
    uint64_t v70 = v26;
    v47(v26, 1, 1, v46);
    uint64_t v48 = type metadata accessor for InlineCategoriesMagazineFeedGroupKnobs();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v81, 1, 1, v48);
    uint64_t v49 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
    uint64_t v50 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v73, 1, 1, v49);
    uint64_t v51 = type metadata accessor for NewIssueMagazineFeedGroupKnobs();
    uint64_t v52 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v74, 1, 1, v51);
    uint64_t v53 = type metadata accessor for PaywallMagazineFeedGroupKnobs();
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56);
    uint64_t v83 = a4;
    uint64_t v55 = v75;
    v54(v75, 1, 1, v53);
    uint64_t v56 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
    uint64_t v57 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v76, 1, 1, v56);
    uint64_t v58 = type metadata accessor for TopicMagazineFeedGroupKnobs();
    uint64_t v59 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v77, 1, 1, v58);
    uint64_t v60 = type metadata accessor for TrendingMagazineFeedGroupKnobs();
    uint64_t v61 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v78, 1, 1, v60);
    uint64_t v62 = type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
    uint64_t v63 = (uint64_t)v79;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v79, 1, 1, v62);
    uint64_t v64 = type metadata accessor for NewspaperMagazineFeedGroupKnobs();
    uint64_t v65 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v80, 1, 1, v64);
    uint64_t v68 = (uint64_t)v55;
    a4 = v83;
    sub_1DE9F9024(0, 0, 1, (uint64_t)v72, (uint64_t)v71, (uint64_t)v70, v81, v50, v39, v52, v68, v57, v59, v61, v63, v65);
    sub_1DEFAF410(v82);
    sub_1DEFAF410((uint64_t)v35);
  }
  else
  {
    sub_1DEFAF410(a3);
    sub_1DEFAF488((uint64_t)v35, (uint64_t)v39);
  }
  uint64_t v66 = type metadata accessor for MagazineKnobsConfig();
  return sub_1DEFAF488((uint64_t)v39, (uint64_t)a4 + *(int *)(v66 + 20));
}

uint64_t sub_1DEFAEAE8(char *a1, char *a2)
{
  return sub_1DF2A60D0(*a1, *a2);
}

uint64_t sub_1DEFAEAF4()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEFAEB80()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEFAEBF8()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEFAEC80@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1DEFAECE0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x70756F724778616DLL;
  if (*v1) {
    uint64_t v2 = 0x6F6E4B70756F7267;
  }
  unint64_t v3 = 0xE900000000000073;
  if (*v1) {
    unint64_t v3 = 0xEA00000000007362;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DEFAED28()
{
  if (*v0) {
    return 0x6F6E4B70756F7267;
  }
  else {
    return 0x70756F724778616DLL;
  }
}

uint64_t sub_1DEFAED6C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DEFAEDD0(uint64_t a1)
{
  unint64_t v2 = sub_1DEFAF4EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEFAEE0C(uint64_t a1)
{
  unint64_t v2 = sub_1DEFAF4EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEFAEE48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1DE9FB808(0, qword_1EBAAF608, (void (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  sub_1DEFAF540(0, &qword_1EBABB238, (uint64_t (*)(void))sub_1DEFAF4EC, (uint64_t)&type metadata for MagazineKnobsConfig.Keys, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v14 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFAF4EC();
  sub_1DFE00190();
  if (!v2)
  {
    char v19 = 0;
    sub_1DFDFFCD0();
    uint64_t v11 = v16;
    int v12 = v17;
    type metadata accessor for MagazineFeedGroupKnobs();
    char v18 = 1;
    sub_1DEA95FE8(&qword_1EBAAF600, (void (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs);
    sub_1DFDFFCD0();
    sub_1DEFAE0D8(v11, v12, (uint64_t)v6, v15);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DEFAF0BC(void *a1)
{
  sub_1DEFAF540(0, &qword_1EAC27328, (uint64_t (*)(void))sub_1DEFAF5A8, (uint64_t)&type metadata for MagazineKnobsConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFAF5A8();
  sub_1DFE001A0();
  char v11 = 0;
  sub_1DFDFFE70();
  if (!v1)
  {
    type metadata accessor for MagazineKnobsConfig();
    char v10 = 1;
    type metadata accessor for MagazineFeedGroupKnobs();
    sub_1DEA95FE8(&qword_1EBAA4768, (void (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DEFAF2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DEFAF988(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEFAF2D0(uint64_t a1)
{
  unint64_t v2 = sub_1DEFAF5A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEFAF30C(uint64_t a1)
{
  unint64_t v2 = sub_1DEFAF5A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEFAF348@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DEFAEE48(a1, a2);
}

uint64_t sub_1DEFAF360(void *a1)
{
  return sub_1DEFAF0BC(a1);
}

uint64_t sub_1DEFAF378()
{
  return *(void *)v0;
}

uint64_t sub_1DEFAF380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEFAF5FC(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1DEFAF390(uint64_t a1, uint64_t a2)
{
  sub_1DE9FB808(0, qword_1EBAAF608, (void (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEFAF410(uint64_t a1)
{
  sub_1DE9FB808(0, qword_1EBAAF608, (void (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEFAF488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagazineFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DEFAF4EC()
{
  unint64_t result = qword_1EBAAD840;
  if (!qword_1EBAAD840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAAD840);
  }
  return result;
}

void sub_1DEFAF540(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1DEFAF5A8()
{
  unint64_t result = qword_1EAC27330;
  if (!qword_1EAC27330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27330);
  }
  return result;
}

uint64_t sub_1DEFAF5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagazineFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for MagazineKnobsConfig.CodingKeys()
{
  return &type metadata for MagazineKnobsConfig.CodingKeys;
}

unsigned char *_s7NewsUI219MagazineKnobsConfigV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFAF740);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MagazineKnobsConfig.Keys()
{
  return &type metadata for MagazineKnobsConfig.Keys;
}

unint64_t sub_1DEFAF77C()
{
  unint64_t result = qword_1EAC27338;
  if (!qword_1EAC27338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27338);
  }
  return result;
}

unint64_t sub_1DEFAF7D4()
{
  unint64_t result = qword_1EAC27340;
  if (!qword_1EAC27340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27340);
  }
  return result;
}

unint64_t sub_1DEFAF82C()
{
  unint64_t result = qword_1EAC27348;
  if (!qword_1EAC27348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27348);
  }
  return result;
}

unint64_t sub_1DEFAF884()
{
  unint64_t result = qword_1EAC27350;
  if (!qword_1EAC27350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27350);
  }
  return result;
}

unint64_t sub_1DEFAF8DC()
{
  unint64_t result = qword_1EBAAD838;
  if (!qword_1EBAAD838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAAD838);
  }
  return result;
}

unint64_t sub_1DEFAF934()
{
  unint64_t result = qword_1EBAAD830;
  if (!qword_1EBAAD830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAAD830);
  }
  return result;
}

uint64_t sub_1DEFAF988(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x70756F724778616DLL && a2 == 0xE900000000000073;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6E4B70756F7267 && a2 == 0xEA00000000007362)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DEFAFA94(uint64_t (*a1)(void))
{
  uint64_t v2 = sub_1DFDFA9F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  a1(0);
  sub_1DFDF6FB0();
  uint64_t v9 = sub_1DFDFA940();
  unint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v8, v2);
  if (v9)
  {
    sub_1DEA74FD4();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1DFE13CF0;
    *(void *)(v11 + 32) = v9;
    uint64_t v17 = v11;
    sub_1DFDFE250();
    uint64_t v12 = v17;
    swift_unknownObjectRetain();
    sub_1DFDF6FB0();
    sub_1DFDFA960();
    v10(v6, v2);
    uint64_t v17 = v12;
    swift_bridgeObjectRetain();
    unint64_t v13 = swift_bridgeObjectRetain();
    sub_1DEABE108(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v17;
  }
  else
  {
    sub_1DFDF6FB0();
    uint64_t v14 = sub_1DFDFA960();
    v10(v6, v2);
  }
  return v14;
}

uint64_t sub_1DEFAFC88()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for UpNextAudioFeedGroup);
}

uint64_t sub_1DEFAFCB4(uint64_t a1, uint64_t a2)
{
  return sub_1DEFB00EC(a1, a2, MEMORY[0x1E4F80930]);
}

uint64_t sub_1DEFAFCCC(uint64_t a1, uint64_t a2)
{
  return sub_1DEFB00EC(a1, a2, MEMORY[0x1E4F80938]);
}

uint64_t sub_1DEFAFCE4(uint64_t a1, uint64_t a2)
{
  return sub_1DEFB00EC(a1, a2, MEMORY[0x1E4F80928]);
}

uint64_t sub_1DEFAFCFC()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
}

uint64_t sub_1DEFAFD28()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for ArticleListHistoryFeedGroup);
}

uint64_t sub_1DEFAFD54()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for NewIssueMagazineFeedGroup);
}

uint64_t sub_1DEFAFD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t sub_1DEFAFDB4(void *a1)
{
  a1[1] = sub_1DEFAFE40(&qword_1EAC27358);
  a1[2] = sub_1DEFAFE40(&qword_1EBACA150);
  uint64_t result = sub_1DEFAFE40((unint64_t *)&unk_1EBACA140);
  a1[3] = result;
  return result;
}

uint64_t sub_1DEFAFE40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DFDF7010();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFAFE84()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for ArticleListSharedWithYouFeedGroup);
}

uint64_t sub_1DEFAFEB0()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for ForYouAudioFeedGroup);
}

uint64_t sub_1DEFAFEDC()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for ArticleListSavedFeedGroup);
}

uint64_t sub_1DEFAFF08()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
}

uint64_t sub_1DEFAFF34()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
}

uint64_t sub_1DEFAFF60()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for TopicMagazineFeedGroup);
}

uint64_t sub_1DEFAFF8C()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
}

uint64_t sub_1DEFAFFB8()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
}

uint64_t sub_1DEFAFFE4()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
}

uint64_t sub_1DEFB0010()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
}

uint64_t sub_1DEFB003C()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for FeaturedIssueArticleMagazineFeedGroup);
}

uint64_t sub_1DEFB0068()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for FeaturedArticleMagazineFeedGroup);
}

uint64_t sub_1DEFB0094()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for CuratedMagazineFeedGroup);
}

uint64_t sub_1DEFB00C0()
{
  return sub_1DEFAFA94((uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
}

uint64_t sub_1DEFB00EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1DFDFA9F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF6FB0();
  uint64_t v9 = a3(v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

ValueMetadata *type metadata accessor for ChannelIssuesSectionDescriptor()
{
  return &type metadata for ChannelIssuesSectionDescriptor;
}

uint64_t sub_1DEFB01E8()
{
  return 0x736575737369;
}

uint64_t sub_1DEFB01FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEFB023C(MEMORY[0x1E4F7F478], MEMORY[0x1E4F7F480], a1);
}

uint64_t sub_1DEFB021C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEFB023C(MEMORY[0x1E4F80670], MEMORY[0x1E4F806B0], a1);
}

uint64_t sub_1DEFB023C@<X0>(unsigned int *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a3, v4, v5);
}

uint64_t *sub_1DEFB02B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DFDF9D80();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_1DEFB03B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1DFDF9D80();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1DEFB043C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DFDF9D80();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1DEFB04F4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDF9D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DEFB05B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DFDF9D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1DEFB063C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDF9D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DEFB06E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFB06FC);
}

uint64_t sub_1DEFB06FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF9D80();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DEFB07AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFB07C0);
}

void *sub_1DEFB07C0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDF9D80();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SavedFeedRefreshRequest()
{
  uint64_t result = qword_1EAC27360;
  if (!qword_1EAC27360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFB08B4()
{
  uint64_t result = sub_1DFDF9D80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static Settings.Features.magazines.getter()
{
  return sub_1DEB702E0(&qword_1EBABD9D0);
}

uint64_t static Settings.Features.audio.getter()
{
  return sub_1DEB702E0(&qword_1EBABD9C8);
}

uint64_t sub_1DEFB099C(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB280], 0xD00000000000001FLL, 0x80000001DFED95B0, (uint64_t *)&unk_1EBAC0DC0);
}

uint64_t static Settings.Features.audioFeedRedesign.getter()
{
  return sub_1DEB702E0(&qword_1EBAC0DD0);
}

uint64_t sub_1DEFB09EC(uint64_t a1)
{
  return sub_1DEFB16E0(a1, 0xD000000000000033, 0x80000001DFED9570, &qword_1EAC27370);
}

uint64_t static Settings.Features.useGradientInChannelPickerListSection.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD18);
}

uint64_t static Settings.Features.improvedBlockingBehavior.getter()
{
  return sub_1DEB702E0(&qword_1EBAC0DE0);
}

uint64_t sub_1DEFB0A58(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB280], 0xD000000000000025, 0x80000001DFED9510, (uint64_t *)&unk_1EBABD9B8);
}

uint64_t static Settings.Features.iPhoneStateRestoration.getter()
{
  return sub_1DEB702E0(&qword_1EBABE418);
}

uint64_t sub_1DEFB0AA8(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB278], 0xD00000000000001FLL, 0x80000001DFED94F0, &qword_1EAC27378);
}

uint64_t static Settings.Features.useNewsArticleSearch.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD20);
}

uint64_t sub_1DEFB0AF8(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB278], 0xD000000000000029, 0x80000001DFED94C0, &qword_1EBAF7EE0);
}

uint64_t static Settings.Features.widgetUpsellFeaturesEnabled.getter()
{
  return sub_1DEB702E0(&qword_1EBAF7EE8);
}

uint64_t sub_1DEFB0B48(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000025, 0x80000001DFED9490, &qword_1EAC27380);
}

uint64_t static Settings.Features.todayFeedConfigRequests.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD30);
}

uint64_t sub_1DEFB0B94(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000025, 0x80000001DFED9460, &qword_1EAC27388);
}

uint64_t sub_1DEFB0BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  uint64_t v6 = sub_1DFDE8000();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDE8010();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (uint64_t *)((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DE9834AC(0, (unint64_t *)&unk_1EBAA7008);
  uint64_t v19 = a2;
  *unint64_t v13 = sub_1DFDFDD20();
  v13[1] = v14;
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FAB408], v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAB400], v6);
  sub_1DEB7033C();
  sub_1DEB70394();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0CC10;
  uint64_t v18 = 0;
  sub_1DFDE8020();
  uint64_t v18 = 1;
  sub_1DFDE8020();
  uint64_t v18 = 2;
  sub_1DFDE8020();
  uint64_t result = sub_1DFDE8080();
  *uint64_t v17 = result;
  return result;
}

uint64_t static Settings.Features.audioFeedConfigRequests.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD38);
}

uint64_t sub_1DEFB0EFC(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 1, 0xD00000000000001DLL, 0x80000001DFED9440, &qword_1EAC27390);
}

uint64_t static Settings.Features.useSportsRecord.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD40);
}

uint64_t sub_1DEFB0F48(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD00000000000002ALL, 0x80000001DFED9410, &qword_1EAC27398);
}

uint64_t static Settings.Features.personalizationEventTracking.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD48);
}

uint64_t sub_1DEFB0F94(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000026, 0x80000001DFED93E0, &qword_1EAC273A0);
}

uint64_t static Settings.Features.articleEmbeddings.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD50);
}

uint64_t sub_1DEFB0FE0(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000026, 0x80000001DFED93B0, &qword_1EAC273A8);
}

uint64_t static Settings.Features.statelessPersonalization.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD58);
}

uint64_t sub_1DEFB102C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[15] = 0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF8);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC273B0 = result;
  return result;
}

uint64_t static Settings.Features.groupClusterJournaling.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD60);
}

uint64_t sub_1DEFB1238(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000027, 0x80000001DFED9350, &qword_1EAC273B8);
}

uint64_t static Settings.Features.clientSideEngagementBoost.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD68);
}

uint64_t sub_1DEFB1284(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB278], 0xD00000000000002DLL, 0x80000001DFED9320, &qword_1EAC273C0);
}

uint64_t static Settings.Features.fineGrainedNewsletterManagement.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CD70);
}

uint64_t sub_1DEFB12D4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DE9834AC(0, (unint64_t *)&unk_1EBAA7008);
  sub_1DFDFDD20();
  v10[1] = 0;
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  sub_1DEB7033C();
  sub_1DEB70394();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0CC10;
  v10[0] = 0;
  sub_1DFDE8020();
  v10[0] = 1;
  sub_1DFDE8020();
  v10[0] = 2;
  sub_1DFDE8020();
  uint64_t result = sub_1DFDE8080();
  qword_1EAC273C8 = result;
  return result;
}

uint64_t static Settings.Features.foregroundHeartbeatEventEnabled.getter()
{
  return sub_1DEB702E0(qword_1EAC1CD78);
}

uint64_t sub_1DEFB1620(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB278], 0xD00000000000002DLL, 0x80000001DFED92F0, &qword_1EBAD2058);
}

uint64_t static Settings.Features.articleLinkBehaviorImprovements.getter()
{
  return sub_1DEB702E0(&qword_1EBAD2060);
}

uint64_t sub_1DEFB1670(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000026, 0x80000001DFED92C0, &qword_1EAC273D0);
}

uint64_t static Settings.Features.articleEmbeddingsScoring.getter()
{
  return sub_1DEB702E0(qword_1EAC1CD88);
}

uint64_t sub_1DEFB16BC(uint64_t a1)
{
  return sub_1DEFB16E0(a1, 0xD00000000000002DLL, 0x80000001DFED9290, &qword_1EBAD0358);
}

uint64_t sub_1DEFB16E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1DFDE8000();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1DFDE8010();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(unsigned char *, void))(v11 + 104))(&v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410]);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB3F8], v5);
  v13[15] = 0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF8);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  *a4 = result;
  return result;
}

uint64_t static Settings.Features.openArticleLinksInModalOverride.getter()
{
  return sub_1DEB702E0(&qword_1EBAD0360);
}

uint64_t sub_1DEFB18D4(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB288], 0xD000000000000028, 0x80000001DFED9260, &qword_1EAC273D8);
}

uint64_t static Settings.Features.allowForEmbeddingOverrides.getter()
{
  return sub_1DEB702E0(qword_1EAC1CD98);
}

uint64_t sub_1DEFB1924(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB278], 0xD000000000000022, 0x80000001DFED9230, &qword_1EBAD2048);
}

uint64_t static Settings.Features.useMultipleNativeAds.getter()
{
  return sub_1DEB702E0(&qword_1EBAD2050);
}

uint64_t sub_1DEFB1974(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000026, 0x80000001DFED9200, &qword_1EAC273E0);
}

uint64_t static Settings.Features.personalizationAnalytics.getter()
{
  return sub_1DEB702E0(qword_1EAC1CDA8);
}

uint64_t sub_1DEFB19C0(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB280], 0xD000000000000011, 0x80000001DFED91E0, &qword_1EBACB838);
}

uint64_t static Settings.Features.uip.getter()
{
  return sub_1DEB702E0(qword_1EBAD0370);
}

uint64_t sub_1DEFB1A10(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000034, 0x80000001DFED91A0, &qword_1EAC273E8);
}

uint64_t static Settings.Features.newsPersonalizationAutoFavorites.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CDB8);
}

uint64_t sub_1DEFB1A5C(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000022, 0x80000001DFED9170, &qword_1EAC273F0);
}

uint64_t static Settings.Features.tabiTagScoring.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CDC0);
}

uint64_t sub_1DEFB1AA8(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000025, 0x80000001DFED9140, &qword_1EAC273F8);
}

uint64_t static Settings.Features.tabiBackgroundUnloading.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CDC8);
}

uint64_t sub_1DEFB1AF4(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 0, 0xD000000000000027, 0x80000001DFED9110, &qword_1EAC27400);
}

uint64_t static Settings.Features.tabiBasedUserVector.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CDD0);
}

uint64_t sub_1DEFB1B40(uint64_t a1)
{
  return sub_1DEFB0BBC(a1, 2, 0xD000000000000020, 0x80000001DFED90E0, qword_1EAC27408);
}

uint64_t static Settings.Features.useNotificationsV2.getter()
{
  return sub_1DEB702E0(qword_1EAC1CDD8);
}

uint64_t sub_1DEFB1B8C(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB278], 0xD00000000000001ELL, 0x80000001DFED90C0, &qword_1EBAF7268);
}

uint64_t static Settings.Features.useWelcomeSeries.getter()
{
  return sub_1DEB702E0(&qword_1EBAF7EF0);
}

uint64_t sub_1DEFB1BDC(uint64_t a1)
{
  return sub_1DE969B0C(a1, MEMORY[0x1E4FAB280], 0xD000000000000028, 0x80000001DFED9090, (uint64_t *)&unk_1EBAF7EF8);
}

uint64_t static Settings.Features.modernLocalNewspaperEnabled.getter()
{
  return sub_1DEB702E0(&qword_1EBAF7F08);
}

ValueMetadata *type metadata accessor for Settings.Features()
{
  return &type metadata for Settings.Features;
}

uint64_t type metadata accessor for MagazineSectionBarDataManager()
{
  return self;
}

uint64_t *sub_1DEFB1C60(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DEA4B790();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEA81DEC(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(type metadata accessor for ShortcutsTodayFeedGroupKnobs() + 20);
    unint64_t v13 = &v9[v12];
    uint64_t v14 = &v10[v12];
    sub_1DEA81DEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[6];
    long long v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)a1 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DEFB1EA4(uint64_t a1, uint64_t a2)
{
  sub_1DEA4B790();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1DEA81DEC(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v5 + *(int *)(type metadata accessor for ShortcutsTodayFeedGroupKnobs() + 20);
  sub_1DEA81DEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEFB2030(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4B790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81DEC(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for ShortcutsTodayFeedGroupKnobs() + 20);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  sub_1DEA81DEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[6];
  long long v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DEFB2224(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4B790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81DEC(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for ShortcutsTodayFeedGroupKnobs() + 20);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  sub_1DEA81DEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  uint64_t v15 = a3[7];
  long long v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *long long v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DEFB23E8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4B790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81DEC(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for ShortcutsTodayFeedGroupKnobs() + 20);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  sub_1DEA81DEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  return a1;
}

uint64_t sub_1DEFB2594(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4B790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81DEC(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for ShortcutsTodayFeedGroupKnobs() + 20);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  sub_1DEA81DEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  __swift_destroy_boxed_opaque_existential_1(a1 + v15);
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DEFB275C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFB2770);
}

uint64_t sub_1DEFB2770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA4B790();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for ShortcutsTodayFeedGroupKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DEFB2888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFB289C);
}

uint64_t sub_1DEFB289C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA4B790();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for ShortcutsTodayFeedGroupKnobs();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DEFB29B0()
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = type metadata accessor for ShortcutsTodayFeedGroupConfigData();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v35 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShortcutsTodayFeedGroupEmitter();
  LOBYTE(v39) = 20;
  sub_1DEA81DEC(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  uint64_t v37 = sub_1DFDF8030();
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F8F0];
  sub_1DEFB44D8(0, (unint64_t *)&qword_1EBABB670, (unint64_t *)&qword_1EBABA150, MEMORY[0x1E4F7F8F0], MEMORY[0x1E4FBBE00]);
  sub_1DEA81DEC(0, (unint64_t *)&qword_1EBABA150, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, v2);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  uint64_t v36 = v8;
  *(_OWORD *)(v8 + 16) = xmmword_1DFE0FB10;
  uint64_t v9 = (uint64_t *)(v8 + v7);
  sub_1DEA81DEC(0, &qword_1EBABA270, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7FE90]);
  swift_allocObject();
  *uint64_t v9 = sub_1DFDF9140();
  unsigned int v32 = *MEMORY[0x1E4F7F8E8];
  uint64_t v38 = *(void (**)(uint64_t *))(v5 + 104);
  uint64_t v31 = v4;
  v38(v9);
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEFB4640(0, &qword_1EBAEAF68, MEMORY[0x1E4F805B0], MEMORY[0x1E4FBBE00]);
  uint64_t v10 = sub_1DFDFA180();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  long long v33 = xmmword_1DFE0B250;
  *(_OWORD *)(v13 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E4F805A8], v10);
  uint64_t v14 = sub_1DF3C1744(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(uint64_t *)((char *)v9 + v6) = v14;
  uint64_t v15 = v4;
  uint64_t v16 = v38;
  ((void (*)(char *, void, uint64_t))v38)((char *)v9 + v6, *MEMORY[0x1E4F7F8C0], v15);
  sub_1DEA4B790();
  uint64_t v17 = v35;
  sub_1DFDF73B0();
  uint64_t v18 = sub_1DFDFA880();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1DFDFAA20();
  (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v17, v21);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v18;
  *(void *)(v22 + 24) = v20;
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(uint64_t *)((char *)v9 + 2 * v6) = sub_1DFDF9140();
  uint64_t v23 = v31;
  ((void (*)(char *, void, uint64_t))v16)((char *)v9 + 2 * v6, v32, v31);
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t *)((char *)v9 + 3 * v6);
  sub_1DEFB4640(0, &qword_1EBACBD50, MEMORY[0x1E4F80420], v34);
  uint64_t v25 = sub_1DFDF98F0();
  uint64_t v26 = *(void *)(v25 - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = v33;
  (*(void (**)(unint64_t, void, uint64_t))(v26 + 104))(v28 + v27, *MEMORY[0x1E4F80418], v25);
  uint64_t v29 = sub_1DF3C10DC(v28);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *uint64_t v24 = v29;
  ((void (*)(uint64_t *, void, uint64_t))v38)(v24, *MEMORY[0x1E4F7F8A8], v23);
  uint64_t v39 = v37;
  sub_1DF3DDFF0(v36);
  return v39;
}

uint64_t sub_1DEFB2FFC(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEFB4640(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  v3[10] = swift_task_alloc();
  sub_1DEFB4640(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v4);
  v3[11] = swift_task_alloc();
  sub_1DEFB44D8(0, &qword_1EBABA130, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760], MEMORY[0x1E4FBB718]);
  v3[12] = swift_task_alloc();
  uint64_t v5 = sub_1DFDFB960();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v6 = sub_1DFDF9D80();
  v3[16] = v6;
  v3[17] = *(void *)(v6 - 8);
  v3[18] = swift_task_alloc();
  sub_1DEFB4640(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], v4);
  v3[19] = swift_task_alloc();
  uint64_t v7 = sub_1DFDF8C20();
  v3[20] = v7;
  v3[21] = *(void *)(v7 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v8 = sub_1DFDFAA20();
  v3[24] = v8;
  v3[25] = *(void *)(v8 - 8);
  v3[26] = swift_task_alloc();
  type metadata accessor for ShortcutsTodayFeedGroupConfigData();
  v3[27] = swift_task_alloc();
  uint64_t v9 = sub_1DFDF7010();
  v3[28] = v9;
  v3[29] = *(void *)(v9 - 8);
  v3[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DEFB33C8, 0, 0);
}

uint64_t sub_1DEFB33C8()
{
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v24 = *(void *)(v0 + 128);
  uint64_t v25 = *(void *)(v0 + 96);
  uint64_t v26 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v27 = *(void *)(v0 + 80);
  uint64_t v8 = type metadata accessor for ShortcutsTodayFeedGroupEmitter();
  sub_1DE94F204(v7 + *(int *)(v8 + 24), v0 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1DEA4B790();
  sub_1DFDF73B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  sub_1DFDF7360();
  sub_1DFDF7360();
  uint64_t v9 = v7 + *(int *)(v8 + 20);
  type metadata accessor for ShortcutsTodayFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DEA81DEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  sub_1DFDF83B0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v24);
  sub_1DEA81DEC(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v25, v9, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
  uint64_t v13 = sub_1DFDFC340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v26, 1, 1, v13);
  *(unsigned char *)(v0 + 264) = 20;
  sub_1DEA81DEC(0, (unint64_t *)&unk_1EBAE9F40, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F81400]);
  swift_allocObject();
  swift_retain();
  sub_1DFDFC5C0();
  uint64_t v14 = sub_1DFDFB640();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v27, 1, 1, v14);
  uint64_t v15 = qword_1EBAC0170;
  (id)*MEMORY[0x1E4F7E020];
  if (v15 != -1) {
    swift_once();
  }
  (id)qword_1EBB628A8;
  sub_1DFDFB930();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1DEFB3850;
  uint64_t v17 = *(void *)(v0 + 240);
  uint64_t v18 = *(void *)(v0 + 208);
  uint64_t v20 = *(void *)(v0 + 176);
  uint64_t v19 = *(void *)(v0 + 184);
  uint64_t v21 = *(void *)(v0 + 152);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  return sub_1DF11AEAC(v17, v18, 0x74756374726F6873, 0xE900000000000073, v19, v20, v22, v21);
}

uint64_t sub_1DEFB3850()
{
  uint64_t v15 = *(void *)(*(void *)v1 + 208);
  uint64_t v2 = *(void *)(*(void *)v1 + 200);
  uint64_t v14 = *(void *)(*(void *)v1 + 192);
  uint64_t v13 = *(void *)(*(void *)v1 + 184);
  uint64_t v12 = *(void *)(*(void *)v1 + 176);
  uint64_t v3 = *(void *)(*(void *)v1 + 168);
  uint64_t v4 = *(void *)(*(void *)v1 + 160);
  uint64_t v5 = *(void *)(*(void *)v1 + 152);
  uint64_t v6 = *(void *)(*(void *)v1 + 120);
  uint64_t v7 = *(void *)(*(void *)v1 + 112);
  uint64_t v8 = *(void *)(*(void *)v1 + 104);
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_1DEFB444C(v5);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v9(v12, v4);
  v9(v13, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v15, v14);
  if (v0) {
    uint64_t v10 = sub_1DEFB3C90;
  }
  else {
    uint64_t v10 = sub_1DEFB3AD4;
  }
  return MEMORY[0x1F4188298](v10, 0, 0);
}

uint64_t sub_1DEFB3AD4()
{
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[7];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  type metadata accessor for TodayFeedGroup();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1DEA81DEC(0, (unint64_t *)&qword_1EBABA1B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F7FA98]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DEFB3C90()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEFB3D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DEB7BAE0;
  return sub_1DEFB2FFC(a1, a2);
}

uint64_t sub_1DEFB3E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x1F4188298](sub_1DEFB3E54, 0, 0);
}

uint64_t sub_1DEFB3E54()
{
  uint64_t v1 = v0[2];
  sub_1DEFB45A4(v0[3], v1, (uint64_t (*)(void))sub_1DEF1D768);
  sub_1DEF1D768();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DEFB3F10@<X0>(uint64_t a1@<X8>)
{
  sub_1DEA4B790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
  type metadata accessor for TodayFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DEFB3F90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for ShortcutsTodayFeedGroupKnobs();
  a2[4] = sub_1DEA4DF70(&qword_1EBADED68, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroupKnobs);
  a2[5] = sub_1DEA4DF70(&qword_1EBADED60, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DEFB45A4(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroupKnobs);
}

uint64_t sub_1DEFB405C()
{
  sub_1DEA4B790();
  return sub_1DFDF7340();
}

uint64_t sub_1DEFB4088@<X0>(uint64_t *a1@<X8>)
{
  sub_1DEFB4640(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DEA4B790();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DEFB460C(0);
  a1[3] = v5;
  a1[4] = sub_1DEA4DF70(&qword_1EBAD26C8, sub_1DEFB460C);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DEFB41E0()
{
  sub_1DEA4DF70(&qword_1EBAE1818, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DEFB424C()
{
  return sub_1DEA4DF70(&qword_1EBAE1820, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroupEmitter);
}

uint64_t sub_1DEFB4294()
{
  return sub_1DEA4DF70(&qword_1EBAE1810, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroupEmitter);
}

uint64_t sub_1DEFB42DC()
{
  return sub_1DEA4DF70(&qword_1EBAE1818, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroupEmitter);
}

uint64_t sub_1DEFB4324()
{
  return sub_1DEA4DF70(&qword_1EBAF8230, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroupEmitter);
}

uint64_t sub_1DEFB436C@<X0>(void *a1@<X8>)
{
  sub_1DFDE7FA0();
  sub_1DFDE7F80();
  sub_1DFDE7D20();
  char v2 = sub_1DFDE7F60();
  swift_release();
  swift_release();
  if (v2)
  {
    uint64_t v3 = (unsigned int *)MEMORY[0x1E4F7FE98];
  }
  else
  {
    *a1 = 0xD000000000000020;
    a1[1] = 0x80000001DFED9660;
    uint64_t v3 = (unsigned int *)MEMORY[0x1E4F7FEA0];
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_1DFDF9150();
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a1, v4, v5);
}

uint64_t sub_1DEFB444C(uint64_t a1)
{
  sub_1DEFB4640(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DEFB44D8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1DEA81DEC(255, a3, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1DEFB456C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEFB45A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1DEFB460C(uint64_t a1)
{
}

void sub_1DEFB4640(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DEFB46A4()
{
  return sub_1DEE9AAE8();
}

uint64_t sub_1DEFB46AC()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEFB4784()
{
  return sub_1DED6002C();
}

void sub_1DEFB478C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED00006C61636967;
      uint64_t v3 = 0x6F6C6F6E6F726863;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000014;
      a1[1] = 0x80000001DFEB98A0;
      break;
    case 3:
      *a1 = 0x6C616E6F73726570;
      a1[1] = 0xEF6E6F6974617A69;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

ValueMetadata *type metadata accessor for MagazineFeedGroupSortOption()
{
  return &type metadata for MagazineFeedGroupSortOption;
}

uint64_t sub_1DEFB4874()
{
  return sub_1DFDFE180();
}

uint64_t sub_1DEFB48C4(unsigned __int8 *a1, char *a2)
{
  return sub_1DF2A170C(*a1, *a2);
}

unint64_t sub_1DEFB48D4()
{
  unint64_t result = qword_1EAC27428;
  if (!qword_1EAC27428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27428);
  }
  return result;
}

uint64_t sub_1DEFB4928(uint64_t a1, uint64_t a2)
{
  return sub_1DEFB7228(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void **)a2, *(void *)(a2 + 8), *(void **)(a2 + 16), *(unsigned char *)(a2 + 24));
}

void *sub_1DEFB494C@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_1DEFB4960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DFDE7220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFB7618(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v37 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v17 = type metadata accessor for EditorialModelRoute(0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (id *)((char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEFB7440(v2, (uint64_t)v19);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v22 = *v19;
      id v23 = objc_msgSend(*v19, sel_identifier);
      if (!v23)
      {
        sub_1DFDFDD20();
        id v23 = (id)sub_1DFDFDCE0();
        swift_bridgeObjectRelease();
      }
      id v24 = objc_msgSend(v22, sel_routeURL);
      if (v24)
      {
        uint64_t v25 = v24;
        sub_1DFDE7190();

        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v16, v7, v4);
        uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
        v26(v16, 0, 1, v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) == 1)
        {
          uint64_t v27 = 0;
        }
        else
        {
          uint64_t v27 = (void *)sub_1DFDE7130();
          (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v4);
        }
      }
      else
      {
        uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
        v26(v16, 1, 1, v4);
        uint64_t v27 = 0;
      }
      id v35 = objc_msgSend(self, sel_nss_NewsURLForArticleID_routeURL_, v23, v27);

      if (v35)
      {
        sub_1DFDE7190();
        swift_unknownObjectRelease();

        uint64_t v36 = 0;
      }
      else
      {
        swift_unknownObjectRelease();
        uint64_t v36 = 1;
      }
      v26(v14, v36, 1, v4);
      long long v33 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
      uint64_t v34 = (uint64_t)v14;
      return sub_1DEFB76C8(v34, a1, (unint64_t *)&qword_1EBAA6D40, v33);
    case 2u:
      uint64_t v28 = self;
      uint64_t v29 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      id v30 = objc_msgSend(v28, sel_nss_NewsURLForArticleID_, v29);

      if (v30)
      {
        sub_1DFDE7190();

        uint64_t v31 = 0;
      }
      else
      {
        uint64_t v31 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, v31, 1, v4);
      long long v33 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
      uint64_t v34 = (uint64_t)v11;
      return sub_1DEFB76C8(v34, a1, (unint64_t *)&qword_1EBAA6D40, v33);
    case 3u:
      (*(void (**)(uint64_t, id *, uint64_t))(v5 + 32))(a1, v19, v4);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    default:
      id v20 = objc_msgSend(*(id *)(*((void *)*v19 + 3) + 16), sel_identifier);
      if (!v20)
      {
        sub_1DFDFDD20();
        id v20 = (id)sub_1DFDFDCE0();
        swift_bridgeObjectRelease();
      }
      id v21 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v20);

      sub_1DFDE7190();
      swift_release();

      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1DEFB4EAC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, unsigned __int8 a13, uint64_t a14, void *a15)
{
  uint64_t v82 = a8;
  uint64_t v83 = a7;
  uint64_t v87 = a5;
  id v88 = a6;
  v85 = a3;
  uint64_t v86 = a4;
  id v89 = a15;
  int v90 = a13;
  long long v91 = a12;
  uint64_t v84 = a9;
  sub_1DEFB7618(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v80 = (char *)&v78 - v19;
  uint64_t v20 = sub_1DFDE7220();
  uint64_t v79 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  id v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v78 - v24;
  uint64_t v92 = type metadata accessor for EditorialModelRoute(0);
  uint64_t v81 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v27 = (char **)((char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEFB7618(0, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
  MEMORY[0x1F4188790](v28 - 8);
  long long v33 = (char *)&v78 - v32;
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v34 = v86;
  *(void *)(v15 + 32) = v85;
  *(void *)(v15 + 40) = v34;
  id v35 = v88;
  *(void *)(v15 + 48) = v87;
  *(void *)(v15 + 56) = v35;
  uint64_t v36 = v84;
  *(void *)(v15 + 64) = v30;
  *(void *)(v15 + 72) = v36;
  uint64_t v37 = v91;
  *(void *)(v15 + 80) = a10;
  *(void *)(v15 + 88) = a11;
  *(void *)(v15 + 96) = v37;
  unsigned __int8 v38 = v90;
  *(unsigned char *)(v15 + 104) = v90;
  if (a14)
  {
    unsigned __int8 v39 = v38;
    *uint64_t v27 = a14;
    uint64_t v40 = (uint64_t)v33;
    uint64_t v41 = v30;
    swift_storeEnumTagMultiPayload();
    id v88 = v41;
    swift_retain_n();
    sub_1DEFB75E8(a10, a11, v37, v39);
    uint64_t v42 = v82;
    sub_1DEFB5718((uint64_t)v27, v82, v40);
    swift_release();
    swift_unknownObjectRelease();
    sub_1DEFB7600((uint64_t)a10, a11, v37, v39);
    swift_release();

    sub_1DEFB766C(v42, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    sub_1DEFB7524((uint64_t)v27, type metadata accessor for EditorialModelRoute);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v40, 0, 1, v92);
    sub_1DEFB76C8(v40, v15 + OBJC_IVAR____TtC7NewsUI214EditorialModel_route, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
  }
  else
  {
    v85 = v25;
    uint64_t v86 = v20;
    uint64_t v43 = v79;
    uint64_t v44 = v80;
    uint64_t v87 = v27;
    id v88 = a10;
    uint64_t v78 = v33;
    if (v89)
    {
      id v45 = v30;
      sub_1DEFB75E8(v88, a11, v91, v90);
      id v46 = objc_msgSend((id)swift_unknownObjectRetain(), sel_routeURL);
      if (v46)
      {
        uint64_t v47 = v46;
        uint64_t v48 = v23;
        sub_1DFDE7190();

        uint64_t v49 = v43;
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
        uint64_t v51 = (uint64_t)v44;
        uint64_t v52 = v86;
        v50(v44, v48, v86);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v44, 0, 1, v52);
        int v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v44, 1, v52);
        uint64_t v54 = v92;
        uint64_t v56 = v81;
        uint64_t v55 = v82;
        if (v53 != 1)
        {
          swift_unknownObjectRelease();
          sub_1DEFB7600((uint64_t)v88, a11, v91, v90);
          swift_unknownObjectRelease();

          sub_1DEFB766C(v55, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
          uint64_t v57 = v85;
          v50(v85, v80, v52);
          uint64_t v58 = v15 + OBJC_IVAR____TtC7NewsUI214EditorialModel_route;
          v50((char *)(v15 + OBJC_IVAR____TtC7NewsUI214EditorialModel_route), v57, v52);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v54);
          return v15;
        }
      }
      else
      {
        uint64_t v51 = (uint64_t)v44;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v44, 1, 1, v86);
        uint64_t v54 = v92;
        uint64_t v56 = v81;
        uint64_t v55 = v82;
      }
      uint64_t v73 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
      sub_1DEFB766C(v51, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      uint64_t v74 = (uint64_t)v87;
      *uint64_t v87 = v89;
      swift_storeEnumTagMultiPayload();
      uint64_t v75 = (uint64_t)v78;
      sub_1DEFB5718(v74, v55, (uint64_t)v78);
      sub_1DEFB7600((uint64_t)v88, a11, v91, v90);
      swift_unknownObjectRelease();

      sub_1DEFB766C(v55, (unint64_t *)&qword_1EBAA6D40, v73);
      sub_1DEFB7524(v74, type metadata accessor for EditorialModelRoute);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v75, 0, 1, v54);
      sub_1DEFB76C8(v75, v15 + OBJC_IVAR____TtC7NewsUI214EditorialModel_route, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
      return v15;
    }
    uint64_t v59 = v29;
    uint64_t v60 = v31;
    uint64_t v61 = v30;
    sub_1DFDFDBF0();
    id v89 = v61;
    uint64_t v62 = (uint64_t)v88;
    uint64_t v63 = v91;
    unsigned __int8 v64 = v90;
    sub_1DEFB75E8(v88, a11, v91, v90);
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1DFDFDF40();
    swift_bridgeObjectRelease();
    uint64_t v66 = v92;
    uint64_t v67 = v81;
    uint64_t v68 = v82;
    if (v65)
    {
      uint64_t v69 = v60;
      uint64_t v70 = (uint64_t)v87;
      *uint64_t v87 = v59;
      *(void *)(v70 + 8) = v69;
      uint64_t v71 = v66;
      swift_storeEnumTagMultiPayload();
      uint64_t v72 = (uint64_t)v78;
      sub_1DEFB5718(v70, v68, (uint64_t)v78);
      sub_1DEFB7600(v62, a11, v63, v64);

      sub_1DEFB766C(v68, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      sub_1DEFB7524(v70, type metadata accessor for EditorialModelRoute);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v72, 0, 1, v71);
      sub_1DEFB76C8(v72, v15 + OBJC_IVAR____TtC7NewsUI214EditorialModel_route, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
    }
    else
    {
      uint64_t v76 = v92;
      swift_bridgeObjectRelease();
      sub_1DEFB7600(v62, a11, v63, v64);

      sub_1DEFB766C(v68, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v15 + OBJC_IVAR____TtC7NewsUI214EditorialModel_route, 1, 1, v76);
    }
  }
  return v15;
}

uint64_t sub_1DEFB5718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DEFB7618(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = sub_1DFDE7220();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v29 = a1;
  sub_1DEFB4960((uint64_t)v11);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v19(v11, 1, v12) == 1)
  {
    sub_1DEFB766C((uint64_t)v11, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  }
  else
  {
    uint64_t v28 = a3;
    uint64_t v20 = v11;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v21(v18, v20, v12);
    sub_1DEFB7734(a2, (uint64_t)v9, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    if (v19(v9, 1, v12) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      sub_1DEFB766C((uint64_t)v9, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    }
    else
    {
      v21(v16, v9, v12);
      uint64_t v22 = (void *)sub_1DFDE7130();
      unsigned int v23 = objc_msgSend(v22, sel_nss_isNewsURL);

      if (v23)
      {
        sub_1DEFB77A0();
        char v24 = sub_1DFDFDC70();
        uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
        v25(v18, v12);
        if ((v24 & 1) == 0)
        {
          v21((char *)v28, v16, v12);
          type metadata accessor for EditorialModelRoute(0);
          return swift_storeEnumTagMultiPayload();
        }
        v25(v16, v12);
      }
      else
      {
        uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
        v26(v16, v12);
        v26(v18, v12);
      }
    }
    a3 = v28;
  }
  return sub_1DEFB7440(v29, a3);
}

uint64_t sub_1DEFB5A90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1DEFB7600(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void **)(v0 + 96), *(unsigned char *)(v0 + 104));
  sub_1DEFB766C(v0 + OBJC_IVAR____TtC7NewsUI214EditorialModel_route, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
  return swift_deallocClassInstance();
}

uint64_t sub_1DEFB5B48()
{
  return type metadata accessor for EditorialModel(0);
}

uint64_t type metadata accessor for EditorialModel(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EAC27438);
}

void sub_1DEFB5B70()
{
  sub_1DEFB7618(319, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for EditorialModelRoute(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAEE3C8);
}

id sub_1DEFB5C74(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4)
  {
    return (id)swift_unknownObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    return a3;
  }
}

void destroy for EditorialThumbnailImageSource(uint64_t a1)
{
}

void sub_1DEFB5CD8(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for EditorialThumbnailImageSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1DEFB5C74(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for EditorialThumbnailImageSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1DEFB5C74(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1DEFB5CD8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for EditorialThumbnailImageSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1DEFB5CD8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditorialThumbnailImageSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EditorialThumbnailImageSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DEFB5ED8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1DEFB5EE0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for EditorialThumbnailImageSource()
{
  return &type metadata for EditorialThumbnailImageSource;
}

unsigned char *storeEnumTagSinglePayload for EditorialAttributes(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DEFB5F98);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditorialAttributes()
{
  return &type metadata for EditorialAttributes;
}

uint64_t *sub_1DEFB5FD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        swift_unknownObjectRetain();
        break;
      case 2u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v8 = sub_1DFDE7220();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      default:
        *a1 = *a2;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DEFB6134(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t result = swift_release();
      break;
    case 1:
      uint64_t result = swift_unknownObjectRelease();
      break;
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t v3 = sub_1DFDE7220();
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1DEFB6244(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      swift_unknownObjectRetain();
      break;
    case 2u:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v5 = sub_1DFDE7220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      break;
    default:
      *a1 = *a2;
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DEFB6358(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DEFB7524((uint64_t)a1, type metadata accessor for EditorialModelRoute);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        swift_unknownObjectRetain();
        break;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v4 = sub_1DFDE7220();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
      default:
        *a1 = *a2;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DEFB6498(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = sub_1DFDE7220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1DEFB6550(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEFB7524((uint64_t)a1, type metadata accessor for EditorialModelRoute);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = sub_1DFDE7220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DEFB662C()
{
  uint64_t result = sub_1DFDE7220();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1DEFB66DC()
{
  unint64_t result = qword_1EAC27450;
  if (!qword_1EAC27450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27450);
  }
  return result;
}

uint64_t sub_1DEFB6730(uint64_t *a1, uint64_t *a2)
{
  return sub_1DEFB6BAC(*a1, *a2);
}

uint64_t sub_1DEFB673C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDE7220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v47 - v9;
  sub_1DEFB73DC();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (void **)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = (void **)((char *)v14 + *(int *)(v12 + 56));
  sub_1DEFB7440(a1, (uint64_t)v14);
  sub_1DEFB7440(a2, (uint64_t)v15);
  type metadata accessor for EditorialModelRoute(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = *v14;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_unknownObjectRelease();
        goto LABEL_21;
      }
      uint64_t v18 = *v15;
      id v19 = objc_msgSend(v17, sel_identifier);
      uint64_t v20 = sub_1DFDFDD20();
      uint64_t v22 = v21;

      id v23 = objc_msgSend(v18, sel_identifier);
      uint64_t v24 = sub_1DFDFDD20();
      uint64_t v26 = v25;

      if (v20 == v24 && v22 == v26) {
        char v28 = 1;
      }
      else {
        char v28 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      break;
    case 2u:
      id v30 = *v14;
      uint64_t v29 = v14[1];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      uint64_t v31 = *v15;
      uint64_t v32 = v15[1];
      if (v30 == v31 && v29 == v32)
      {
        swift_bridgeObjectRelease_n();
        char v28 = 1;
      }
      else
      {
        char v28 = sub_1DFDFFF50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        (*(void (**)(void **, uint64_t))(v5 + 8))(v14, v4);
        goto LABEL_21;
      }
      uint64_t v34 = *(void (**)(char *, void **, uint64_t))(v5 + 32);
      v34(v10, v14, v4);
      v34(v8, v15, v4);
      char v28 = MEMORY[0x1E01D59B0](v10, v8);
      id v35 = *(void (**)(char *, uint64_t))(v5 + 8);
      v35(v8, v4);
      v35(v10, v4);
      break;
    default:
      uint64_t v16 = *v14;
      if (swift_getEnumCaseMultiPayload())
      {
        swift_release();
LABEL_21:
        sub_1DEFB7524((uint64_t)v15, type metadata accessor for EditorialModelRoute);
        char v28 = 0;
      }
      else
      {
        uint64_t v37 = *v15;
        id v38 = objc_msgSend(*(id *)(v16[3] + 16), sel_identifier);
        uint64_t v39 = sub_1DFDFDD20();
        uint64_t v41 = v40;

        id v42 = objc_msgSend(*(id *)(v37[3] + 16), sel_identifier);
        uint64_t v43 = sub_1DFDFDD20();
        uint64_t v45 = v44;

        if (v39 == v43 && v41 == v45) {
          char v28 = 1;
        }
        else {
          char v28 = sub_1DFDFFF50();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      break;
  }
  return v28 & 1;
}

uint64_t sub_1DEFB6BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditorialModelRoute(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFB7618(0, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v48 - v9;
  sub_1DEFB74A4();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    || (char v15 = 0, (sub_1DFDFFF50() & 1) != 0))
  {
    if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
      || (char v15 = 0, (sub_1DFDFFF50() & 1) != 0))
    {
      uint64_t v16 = *(void *)(a1 + 56);
      uint64_t v17 = *(void *)(a2 + 56);
      if (v16)
      {
        if (!v17) {
          goto LABEL_42;
        }
        if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v16 != v17)
        {
          char v15 = 0;
          if ((sub_1DFDFFF50() & 1) == 0) {
            return v15 & 1;
          }
        }
      }
      else if (v17)
      {
        goto LABEL_42;
      }
      uint64_t v59 = v5;
      uint64_t v18 = *(void **)(a1 + 64);
      id v19 = *(void **)(a2 + 64);
      if (v18)
      {
        if (!v19) {
          goto LABEL_42;
        }
        sub_1DEA9B318();
        id v20 = v19;
        id v21 = v18;
        char v22 = sub_1DFDFF550();

        if ((v22 & 1) == 0) {
          goto LABEL_42;
        }
      }
      else if (v19)
      {
        goto LABEL_42;
      }
      if (sub_1DF64ED58(*(void *)(a1 + 72), *(void *)(a2 + 72)))
      {
        int v23 = *(unsigned __int8 *)(a1 + 104);
        int v24 = *(unsigned __int8 *)(a2 + 104);
        if (v23 == 255)
        {
          BOOL v30 = v24 == 255;
          uint64_t v29 = v59;
          if (!v30) {
            goto LABEL_42;
          }
        }
        else
        {
          if (v24 == 255) {
            goto LABEL_42;
          }
          uint64_t v25 = *(void **)(a1 + 80);
          uint64_t v26 = *(void *)(a1 + 88);
          uint64_t v27 = *(void **)(a2 + 80);
          uint64_t v28 = *(void *)(a2 + 88);
          if (v23)
          {
            if ((v24 & 1) == 0) {
              goto LABEL_42;
            }
            uint64_t v56 = *(void **)(a1 + 96);
            id v57 = v27;
            uint64_t v54 = *(void **)(a2 + 96);
            uint64_t v55 = v28;
            id v58 = v25;
            sub_1DEFB75E8(v25, v26, v56, v23);
            sub_1DEFB75E8(v58, v26, v56, v23);
            sub_1DEFB75E8(v57, v55, v54, v24);
            uint64_t v53 = v26;
            sub_1DEFB75E8(v58, v26, v56, v23);
            sub_1DEFB75E8(v57, v55, v54, v24);
            id v31 = objc_msgSend(v58, sel_identifier);
            uint64_t v32 = sub_1DFDFDD20();
            uint64_t v50 = v33;
            uint64_t v51 = v32;

            id v34 = objc_msgSend(v57, sel_identifier);
            uint64_t v49 = sub_1DFDFDD20();
            uint64_t v52 = v35;

            if (v51 == v49 && v50 == v52)
            {
              swift_bridgeObjectRelease_n();
              sub_1DEFB7600((uint64_t)v57, v55, v54, v24);
              uint64_t v36 = v53;
              sub_1DEFB7600((uint64_t)v58, v53, v56, v23);
              sub_1DEFB7600((uint64_t)v57, v55, v54, v24);
              uint64_t v37 = (uint64_t)v58;
              uint64_t v38 = v36;
              uint64_t v39 = v56;
              sub_1DEFB7600((uint64_t)v58, v38, v56, v23);
              sub_1DEFB7600(v37, v53, v39, v23);
              uint64_t v29 = v59;
            }
            else
            {
              LODWORD(v51) = sub_1DFDFFF50();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1DEFB7600((uint64_t)v57, v55, v54, v24);
              uint64_t v40 = v53;
              sub_1DEFB7600((uint64_t)v58, v53, v56, v23);
              sub_1DEFB7600((uint64_t)v57, v55, v54, v24);
              uint64_t v41 = (uint64_t)v58;
              uint64_t v42 = v40;
              uint64_t v43 = v56;
              sub_1DEFB7600((uint64_t)v58, v42, v56, v23);
              sub_1DEFB7600(v41, v53, v43, v23);
              char v15 = 0;
              uint64_t v29 = v59;
              if ((v51 & 1) == 0) {
                return v15 & 1;
              }
            }
          }
          else
          {
            if (v24) {
              goto LABEL_42;
            }
            uint64_t v29 = v59;
            if (v25 != v27 || v26 != v28)
            {
              char v15 = 0;
              if ((sub_1DFDFFF50() & 1) == 0) {
                return v15 & 1;
              }
            }
          }
        }
        uint64_t v44 = a2 + OBJC_IVAR____TtC7NewsUI214EditorialModel_route;
        uint64_t v45 = (uint64_t)&v14[*(int *)(v12 + 48)];
        sub_1DEFB7734(a1 + OBJC_IVAR____TtC7NewsUI214EditorialModel_route, (uint64_t)v14, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
        sub_1DEFB7734(v44, v45, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
        id v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
        if (v46((uint64_t)v14, 1, v4) == 1)
        {
          if (v46(v45, 1, v4) == 1)
          {
            sub_1DEFB766C((uint64_t)v14, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
            char v15 = 1;
            return v15 & 1;
          }
        }
        else
        {
          sub_1DEFB7734((uint64_t)v14, (uint64_t)v10, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
          if (v46(v45, 1, v4) != 1)
          {
            sub_1DEFB7584(v45, (uint64_t)v7);
            char v15 = sub_1DEFB673C((uint64_t)v10, (uint64_t)v7);
            sub_1DEFB7524((uint64_t)v7, type metadata accessor for EditorialModelRoute);
            sub_1DEFB7524((uint64_t)v10, type metadata accessor for EditorialModelRoute);
            sub_1DEFB766C((uint64_t)v14, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
            return v15 & 1;
          }
          sub_1DEFB7524((uint64_t)v10, type metadata accessor for EditorialModelRoute);
        }
        sub_1DEFB7524((uint64_t)v14, (uint64_t (*)(void))sub_1DEFB74A4);
      }
LABEL_42:
      char v15 = 0;
    }
  }
  return v15 & 1;
}

uint64_t sub_1DEFB7228(void *a1, uint64_t a2, void *a3, char a4, void *a5, uint64_t a6, void *a7, char a8)
{
  if (a4)
  {
    if (a8)
    {
      char v12 = 1;
      sub_1DEFB5C74((uint64_t)a1, a2, a3, 1);
      sub_1DEFB5C74((uint64_t)a5, a6, a7, 1);
      id v14 = objc_msgSend(a1, sel_identifier);
      uint64_t v23 = sub_1DFDFDD20();
      uint64_t v16 = v15;

      id v17 = objc_msgSend(a5, sel_identifier);
      uint64_t v18 = sub_1DFDFDD20();
      uint64_t v20 = v19;

      if (v23 != v18 || v16 != v20) {
        char v12 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DEFB5CD8((uint64_t)a5, a6, a7, 1);
      sub_1DEFB5CD8((uint64_t)a1, a2, a3, 1);
      return v12 & 1;
    }
    goto LABEL_7;
  }
  if (a8)
  {
LABEL_7:
    char v12 = 0;
    return v12 & 1;
  }
  if (a1 == a5 && a2 == a6)
  {
    char v12 = 1;
    return v12 & 1;
  }
  return sub_1DFDFFF50();
}

void sub_1DEFB73DC()
{
  if (!qword_1EAC27458)
  {
    type metadata accessor for EditorialModelRoute(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC27458);
    }
  }
}

uint64_t sub_1DEFB7440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditorialModelRoute(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DEFB74A4()
{
  if (!qword_1EAC27460)
  {
    sub_1DEFB7618(255, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC27460);
    }
  }
}

uint64_t sub_1DEFB7524(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEFB7584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditorialModelRoute(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1DEFB75E8(id result, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1DEFB5C74((uint64_t)result, a2, a3, a4 & 1);
  }
  return result;
}

void sub_1DEFB7600(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    sub_1DEFB5CD8(a1, a2, a3, a4 & 1);
  }
}

void sub_1DEFB7618(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DEFB766C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DEFB7618(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DEFB76C8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DEFB7618(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DEFB7734(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DEFB7618(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1DEFB77A0()
{
  unint64_t result = qword_1EBAF34A0;
  if (!qword_1EBAF34A0)
  {
    sub_1DFDE7220();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF34A0);
  }
  return result;
}

void sub_1DEFB77F8(unsigned char *a1, uint64_t a2, void *a3)
{
  if (*a1 == 1)
  {
    __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC7NewsUI227BundleViaOfferUpsellHandler_paidBundleViaOfferHandler), *(void *)(a2 + OBJC_IVAR____TtC7NewsUI227BundleViaOfferUpsellHandler_paidBundleViaOfferHandler + 24));
    sub_1DFDEF3F0();
    sub_1DEFB793C(a3);
  }
  else
  {
    if (qword_1EBAD2E10 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1DFDF01D0();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBB62E30);
    uint64_t v5 = sub_1DFDF01B0();
    os_log_type_t v6 = sub_1DFDFEA60();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1DE913000, v5, v6, "BundleViaOfferUpsellHandler: Cannot present BundleViaOffer upsell. Skipping.", v7, 2u);
      MEMORY[0x1E01EFA10](v7, -1, -1);
    }
  }
}

uint64_t sub_1DEFB793C(void *a1)
{
  if (qword_1EBAD2E10 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DFDF01D0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB62E30);
  uint64_t v3 = sub_1DFDF01B0();
  os_log_type_t v4 = sub_1DFDFEA60();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1DE913000, v3, v4, "BundleViaOfferUpsellHandler: Attempting to present upsell...", v5, 2u);
    MEMORY[0x1E01EFA10](v5, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFB7BC0();
  return sub_1DFDEF190();
}

uint64_t sub_1DEFB7B04()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7NewsUI227BundleViaOfferUpsellHandler_paidBundleViaOfferHandler), *(void *)(*(void *)(v0 + 16)+ OBJC_IVAR____TtC7NewsUI227BundleViaOfferUpsellHandler_paidBundleViaOfferHandler+ 24));
  return sub_1DFDEF420();
}

uint64_t sub_1DEFB7B60()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

void sub_1DEFB7BA0(unsigned char *a1, uint64_t a2)
{
  sub_1DEFB77F8(a1, a2, (void *)(v2 + 16));
}

unint64_t sub_1DEFB7BC0()
{
  unint64_t result = qword_1EAC27480;
  if (!qword_1EAC27480)
  {
    type metadata accessor for BundleViaOfferUpsellHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27480);
  }
  return result;
}

uint64_t *sub_1DEFB7C14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_1DEFB7DB4();
    uint64_t v8 = v7;
    uint64_t v9 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = sub_1DFDF7010();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      *(uint64_t *)((char *)a1 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
      *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
      *(uint64_t *)((char *)a1 + v8[9]) = *(uint64_t *)((char *)a2 + v8[9]);
      char v12 = *(void (**)(uint64_t *, void, uint64_t, int *))(v9 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(a1, 0, 2, v8);
    }
  }
  return a1;
}

void sub_1DEFB7DB4()
{
  if (!qword_1EBAF6A00)
  {
    sub_1DFDF7010();
    unint64_t v0 = type metadata accessor for AudioFeedLayoutSectionDescriptor.Data();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF6A00);
    }
  }
}

uint64_t type metadata accessor for AudioFeedLayoutSectionDescriptor.Data()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DEFB7E24(uint64_t a1)
{
  sub_1DEFB7DB4();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_1DFDF7010();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1DEFB7EFC(char *a1, char *a2, uint64_t a3)
{
  sub_1DEFB7DB4();
  uint64_t v7 = v6;
  uint64_t v8 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1DFDF7010();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
    *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    uint64_t v10 = *(void (**)(char *, void, uint64_t, int *))(v8 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_1DEFB8060(char *a1, char *a2, uint64_t a3)
{
  sub_1DEFB7DB4();
  uint64_t v7 = v6;
  uint64_t v8 = *((void *)v6 - 1);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, int *))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = sub_1DFDF7010();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(a1, a2, v15);
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DEFB9888((uint64_t)a1, (uint64_t (*)(void))sub_1DEFB7DB4);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
  *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
  *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  uint64_t v13 = *(void (**)(char *, void, uint64_t, int *))(v8 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(a1, 0, 2, v7);
  return a1;
}

char *sub_1DEFB82A0(char *a1, char *a2, uint64_t a3)
{
  sub_1DEFB7DB4();
  uint64_t v7 = v6;
  uint64_t v8 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1DFDF7010();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
    *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_1DEFB83F0(char *a1, char *a2, uint64_t a3)
{
  sub_1DEFB7DB4();
  uint64_t v7 = v6;
  uint64_t v8 = *((void *)v6 - 1);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, int *))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_1DFDF7010();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(a1, a2, v14);
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DEFB9888((uint64_t)a1, (uint64_t (*)(void))sub_1DEFB7DB4);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
  *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
  *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_1DEFB8604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFB8618);
}

uint64_t sub_1DEFB8618(uint64_t a1, uint64_t a2)
{
  sub_1DEFB7DB4();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DEFB8684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFB8698);
}

uint64_t sub_1DEFB8698(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1DEFB7DB4();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1DEFB871C(uint64_t a1)
{
  sub_1DEFB7DB4();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_1DEFB8784(uint64_t a1, uint64_t a2)
{
  sub_1DEFB7DB4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for AudioFeedLayoutSectionDescriptor(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAB6068);
}

void sub_1DEFB8814()
{
  sub_1DEFB7DB4();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t sub_1DEFB888C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DEFB89E8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DEFB89FC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DEFB8BF4);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1DEFB8C1C()
{
  sub_1DEFB7DB4();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AudioFeedLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned int v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFB9820(v0, (uint64_t)v8, type metadata accessor for AudioFeedLayoutSectionDescriptor);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2);
  uint64_t v10 = 0;
  if (!v9)
  {
    sub_1DEFB979C((uint64_t)v8, (uint64_t)v5);
    uint64_t v11 = sub_1DEFB8E20(*(void *)&v5[*(int *)(v2 + 28)], type metadata accessor for AudioFeedLayoutSectionDescriptor.Header, type metadata accessor for AudioFeedLayoutSectionDescriptor.Header, type metadata accessor for AudioFeedLayoutSectionDescriptor.Header);
    uint64_t v12 = sub_1DEFB8E20(*(void *)&v5[*(int *)(v2 + 32)], type metadata accessor for AudioFeedLayoutSectionDescriptor.Footer, type metadata accessor for AudioFeedLayoutSectionDescriptor.Footer, type metadata accessor for AudioFeedLayoutSectionDescriptor.Footer);
    uint64_t v15 = v11;
    sub_1DEA91CE8(v12);
    uint64_t v10 = v15;
    sub_1DEFB9888((uint64_t)v5, (uint64_t (*)(void))sub_1DEFB7DB4);
  }
  return v10;
}

uint64_t sub_1DEFB8E20(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  BOOL v30 = a3;
  id v31 = a4;
  uint64_t v5 = a2(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_1DFDF94D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1DEA928C8(0, v15, 0);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v18 = *(void *)(v6 + 72);
    uint64_t v27 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v28 = v18;
    do
    {
      uint64_t v19 = v30;
      sub_1DEFB9820(v17, (uint64_t)v10, v30);
      uint64_t v20 = v29;
      sub_1DEFB9820((uint64_t)v10, v29, v19);
      (*v27)(v14, v20, v11);
      sub_1DEFB9888((uint64_t)v10, v31);
      uint64_t v21 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA928C8(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v35;
      }
      unint64_t v23 = *(void *)(v21 + 16);
      unint64_t v22 = *(void *)(v21 + 24);
      if (v23 >= v22 >> 1) {
        sub_1DEA928C8(v22 > 1, v23 + 1, 1);
      }
      uint64_t v33 = v11;
      uint64_t v34 = sub_1DEFB9288(&qword_1EBABA298, MEMORY[0x1E4F80118]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v32);
      (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(boxed_opaque_existential_1, v14, v11);
      uint64_t v25 = v35;
      *(void *)(v35 + 16) = v23 + 1;
      sub_1DE942EC4(&v32, v25 + 40 * v23 + 32);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v17 += v28;
      --v15;
    }
    while (v15);
    return v35;
  }
  return result;
}

uint64_t sub_1DEFB9120(uint64_t a1)
{
  uint64_t v2 = sub_1DEFB9288((unint64_t *)&unk_1EAC27488, (void (*)(uint64_t))type metadata accessor for AudioFeedLayoutSectionDescriptor);
  return MEMORY[0x1F4162DE8](a1, v2);
}

uint64_t sub_1DEFB918C(uint64_t a1)
{
  uint64_t v2 = sub_1DEFB9288(&qword_1EBAB6060, (void (*)(uint64_t))type metadata accessor for AudioFeedLayoutSectionDescriptor);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1DEFB91F8()
{
  return sub_1DEFB9288(&qword_1EBAB6058, (void (*)(uint64_t))type metadata accessor for AudioFeedLayoutSectionDescriptor);
}

uint64_t sub_1DEFB9240()
{
  return sub_1DEFB9288(&qword_1EBAB6060, (void (*)(uint64_t))type metadata accessor for AudioFeedLayoutSectionDescriptor);
}

uint64_t sub_1DEFB9288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFB92D0(uint64_t a1)
{
  uint64_t v31 = sub_1DFDF7FE0();
  uint64_t v2 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AudioFeedLayoutSectionDescriptor.Decoration(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v30 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - v9;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1DE9FC370(0, v11, 0);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v14 = *(void *)(v6 + 72);
    uint64_t v28 = (void (**)(char *, uint64_t, uint64_t))(v2 + 32);
    uint64_t v29 = v14;
    int64_t v15 = (void (**)(char *, uint64_t))(v2 + 8);
    do
    {
      sub_1DEFB9820(v13, (uint64_t)v10, type metadata accessor for AudioFeedLayoutSectionDescriptor.Decoration);
      uint64_t v16 = v30;
      sub_1DEFB9820((uint64_t)v10, v30, type metadata accessor for AudioFeedLayoutSectionDescriptor.Decoration);
      uint64_t v17 = v16;
      uint64_t v18 = v31;
      (*v28)(v4, v17, v31);
      sub_1DFDF7FC0();
      (*v15)(v4, v18);
      sub_1DEFB9888((uint64_t)v10, type metadata accessor for AudioFeedLayoutSectionDescriptor.Decoration);
      uint64_t v19 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DE9FC370(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v35;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1) {
        sub_1DE9FC370(v20 > 1, v21 + 1, 1);
      }
      uint64_t v22 = v33;
      uint64_t v23 = v34;
      uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
      MEMORY[0x1F4188790](v24);
      uint64_t v26 = (char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v27 + 16))(v26);
      sub_1DE9FC2D8(v21, (uint64_t)v26, &v35, v22, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      v13 += v29;
      --v11;
    }
    while (v11);
    return v35;
  }
  return result;
}

uint64_t sub_1DEFB9634()
{
  sub_1DEFB7DB4();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFB9820(v0, (uint64_t)v8, type metadata accessor for AudioFeedLayoutSectionDescriptor);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2);
  uint64_t v10 = 0;
  if (!v9)
  {
    sub_1DEFB979C((uint64_t)v8, (uint64_t)v6);
    uint64_t v10 = sub_1DEFB92D0(*(void *)&v6[*(int *)(v2 + 36)]);
    sub_1DEFB9888((uint64_t)v6, (uint64_t (*)(void))sub_1DEFB7DB4);
  }
  return v10;
}

uint64_t sub_1DEFB979C(uint64_t a1, uint64_t a2)
{
  sub_1DEFB7DB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AudioFeedLayoutSectionDescriptor.Decoration(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAB5ED0);
}

uint64_t sub_1DEFB9820(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEFB9888(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for AudioFeedLayoutSectionDescriptor.Footer(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAB5FD0);
}

uint64_t type metadata accessor for AudioFeedLayoutSectionDescriptor.Header(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAF6A08);
}

uint64_t sub_1DEFB9928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DEFB9958(a1, a2, a3, MEMORY[0x1E4F7F758]);
}

uint64_t sub_1DEFB9940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DEFB9958(a1, a2, a3, MEMORY[0x1E4F80118]);
}

uint64_t sub_1DEFB9958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v6 <= 0x3F)
  {
    uint64_t v7 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v7 + 84);
  }
  return result;
}

uint64_t sub_1DEFB9A00(uint64_t a1)
{
  return sub_1DEFB9D30(a1, sub_1DED6F864);
}

uint64_t sub_1DEFB9A18(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1DE9DBA70(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_1DEFB9B98(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1DE9DBA70(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_1DEFB9D18(uint64_t a1)
{
  return sub_1DEFB9D30(a1, sub_1DED70CF8);
}

uint64_t sub_1DEFB9D30(uint64_t result, uint64_t (*a2)(char *, void))
{
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_5:
    uint64_t result = a2(&v15, *(unsigned __int8 *)(*(void *)(v3 + 48) + v11));
  }
  int64_t v14 = v12 + 4;
  if (v14 < v9)
  {
    unint64_t v13 = *(void *)(v5 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v4 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_27;
        }
        if (v4 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        ++v14;
        if (v13) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v14;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

id sub_1DEFB9E9C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  uint64_t v1 = (void *)sub_1DFDFDCE0();
  objc_msgSend(v0, sel_setName_, v1);

  id result = objc_msgSend(v0, sel_setMaxConcurrentOperationCount_, 1);
  qword_1EBAC3BA0 = (uint64_t)v0;
  return result;
}

uint64_t sub_1DEFB9F28(uint64_t a1)
{
  sub_1DEFBD35C(a1);
  if (qword_1EBAC0140 != -1) {
    swift_once();
  }
  sub_1DEA6A9D0(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DFE0B750;
  sub_1DED7DF2C();
  uint64_t v2 = sub_1DFDFE5E0();
  uint64_t v4 = v3;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1DEA08668();
  *(void *)(v1 + 64) = v6;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  type metadata accessor for MagazineFeedServiceContext();
  sub_1DFDFFB10();
  *(void *)(v1 + 96) = v5;
  *(void *)(v1 + 104) = v6;
  *(void *)(v1 + 72) = 0;
  *(void *)(v1 + 80) = 0xE000000000000000;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DF3C1A58((uint64_t)&unk_1F3A67240);
  uint64_t v7 = sub_1DEDF5F14();
  if (v7)
  {
    sub_1DEFBD428();
    swift_allocError();
    unsigned char *v8 = 7;
    sub_1DE9CF710(0, &qword_1EBABDAB0, (uint64_t)&type metadata for MagazineFeedPoolContent, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v9 = sub_1DFDEDE70();
  }
  else
  {
    MEMORY[0x1F4188790](v7);
    sub_1DE9CF710(0, &qword_1EBABDAB0, (uint64_t)&type metadata for MagazineFeedPoolContent, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v9 = sub_1DFDEDF30();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for MagazineFeedPool();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v9;
  return result;
}

void sub_1DEFBA21C(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = 0;
  int64_t v16 = 0;
  uint64_t v17 = a5 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a5 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(a5 + 56);
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (v20)
  {
    unint64_t v22 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    unint64_t v23 = v22 | (v16 << 6);
LABEL_5:
    int v24 = *(unsigned __int8 *)(*(void *)(a5 + 48) + v23);
    if (v24)
    {
      if (v24 == 1)
      {
        v15 |= 4uLL;
      }
      else if (v24 == 2)
      {
        v15 |= 1uLL;
      }
      else
      {
        v15 |= 2uLL;
      }
    }
  }
  int64_t v25 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v25 >= v21) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v17 + 8 * v25);
  ++v16;
  if (v26) {
    goto LABEL_20;
  }
  int64_t v16 = v25 + 1;
  if (v25 + 1 >= v21) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v17 + 8 * v16);
  if (v26) {
    goto LABEL_20;
  }
  int64_t v16 = v25 + 2;
  if (v25 + 2 >= v21) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v17 + 8 * v16);
  if (v26)
  {
LABEL_20:
    unint64_t v20 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v16 << 6);
    goto LABEL_5;
  }
  int64_t v27 = v25 + 3;
  if (v27 < v21)
  {
    unint64_t v26 = *(void *)(v17 + 8 * v27);
    if (!v26)
    {
      while (1)
      {
        int64_t v16 = v27 + 1;
        if (__OFADD__(v27, 1)) {
          break;
        }
        if (v16 >= v21) {
          goto LABEL_26;
        }
        unint64_t v26 = *(void *)(v17 + 8 * v16);
        ++v27;
        if (v26) {
          goto LABEL_20;
        }
      }
LABEL_32:
      __break(1u);
LABEL_33:
      swift_once();
      goto LABEL_30;
    }
    int64_t v16 = v27;
    goto LABEL_20;
  }
LABEL_26:
  uint64_t v39 = v14;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  swift_retain();
  uint64_t v42 = a7;
  uint64_t v28 = (uint64_t *)(a7 + OBJC_IVAR____TtC7NewsUI225MagazineFeedServiceConfig_baseContentConfig);
  id v29 = *(id *)(a6 + 16);
  sub_1DEFBD500(v28, (uint64_t (*)(uint64_t))sub_1DF36EB4C);
  sub_1DEFBD500(v28, (uint64_t (*)(uint64_t))sub_1DF36E2F4);
  sub_1DEFBD5A4(v28);
  uint64_t v31 = v30;
  long long v32 = (void *)sub_1DFDFE200();
  swift_bridgeObjectRelease();
  uint64_t v33 = (void *)sub_1DFDFE200();
  swift_bridgeObjectRelease();
  if (v31)
  {
    uint64_t v34 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = 0;
  }
  a2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E378]), sel_initWithContext_configIssueIDs_configArticleIDs_trendingArticleListID_, v29, v32, v33, v34);

  objc_msgSend(a2, sel_setQualityOfService_, 25);
  objc_msgSend(a2, sel_setRelativePriority_, 1);
  objc_msgSend(a2, sel_setPurpose_, *MEMORY[0x1E4F7DFE0]);
  uint64_t v35 = (void *)sub_1DFDF8140();
  objc_msgSend(a2, sel_setCachedPolicy_, v35);

  objc_msgSend(a2, sel_setContentOptions_, v15);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v36;
  v37[3] = v40;
  v37[4] = v41;
  v37[5] = v42;
  v37[6] = a5;
  v37[7] = sub_1DEFBD4B4;
  v37[8] = v39;
  aBlock[4] = sub_1DEFBD904;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DEFBB270;
  aBlock[3] = &block_descriptor_59;
  uint64_t v38 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_setFetchCompletionHandler_, v38);
  _Block_release(v38);
  if (qword_1EBAC0540 != -1) {
    goto LABEL_33;
  }
LABEL_30:
  objc_msgSend((id)qword_1EBAC3BA0, sel_addOperation_, a2);
}

void sub_1DEFBA6B4(void *a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t *))
{
  uint64_t v15 = sub_1DFDECAF0();
  MEMORY[0x1F4188790](v15);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1DEFBD428();
    uint64_t v31 = (void *)swift_allocError();
    *long long v32 = 0;
    a7();

    return;
  }
  uint64_t v17 = Strong;
  if (!a1)
  {
    sub_1DEFBD428();
    uint64_t v34 = (void *)swift_allocError();
    char v35 = 3;
LABEL_24:
    *uint64_t v33 = v35;
    a7();

    goto LABEL_25;
  }
  if (!a2)
  {
    sub_1DEFBD428();
    uint64_t v34 = (void *)swift_allocError();
    char v35 = 2;
    goto LABEL_24;
  }
  if (!a3)
  {
    sub_1DEFBD428();
    uint64_t v34 = (void *)swift_allocError();
    char v35 = 5;
    goto LABEL_24;
  }
  if (!a4)
  {
    sub_1DEFBD428();
    uint64_t v34 = (void *)swift_allocError();
    char v35 = 6;
    goto LABEL_24;
  }
  sub_1DEFBD93C(0, (unint64_t *)&qword_1EBABA9A0, (uint64_t)&qword_1EBABAD10, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE9266B8);
  sub_1DEBB1F5C();
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1DFDFDFF0();
  uint64_t v38 = sub_1DEFBAC78(a9 + OBJC_IVAR____TtC7NewsUI225MagazineFeedServiceConfig_baseContentConfig, a1, a3);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = a10;
  v18[4] = a9;
  v41[0] = MEMORY[0x1E4FBC860];
  sub_1DEA96030((unint64_t *)&qword_1EBAA7440, MEMORY[0x1E4FAA910]);
  sub_1DEA6A9D0(0, (unint64_t *)&unk_1EBABA6E0, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  sub_1DEA6BABC();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DFDFF830();
  sub_1DEA6A9D0(0, &qword_1EBAD28D8, (uint64_t (*)(uint64_t))sub_1DEFBD9EC, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v19 = sub_1DFDEDBB0();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (!v20)
  {
LABEL_22:
    uint64_t v36 = sub_1DE9DB9D8(v21);
    swift_bridgeObjectRelease();
    v41[0] = v38;
    swift_bridgeObjectRetain();
    sub_1DEFBBCE8(v41);
    swift_bridgeObjectRelease();
    sub_1DFD71254(v39, a4, v19, 0, v41[0], MEMORY[0x1E4FBC870], v36, v41);
    a11(v41);
    sub_1DEE2985C((uint64_t)v41);
LABEL_25:
    swift_release();
    return;
  }
  uint64_t v37 = v19;
  v41[0] = MEMORY[0x1E4FBC860];
  sub_1DEA9B358(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = 0;
    uint64_t v21 = v41[0];
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        unint64_t v23 = (void *)MEMORY[0x1E01EE240](v22, a2);
      }
      else
      {
        unint64_t v23 = *(void **)(a2 + 8 * v22 + 32);
        swift_unknownObjectRetain();
      }
      id v24 = objc_msgSend(v23, sel_identifier, v37);
      uint64_t v25 = sub_1DFDFDD20();
      uint64_t v27 = v26;
      swift_unknownObjectRelease();

      v41[0] = v21;
      unint64_t v29 = *(void *)(v21 + 16);
      unint64_t v28 = *(void *)(v21 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1DEA9B358(v28 > 1, v29 + 1, 1);
        uint64_t v21 = v41[0];
      }
      ++v22;
      *(void *)(v21 + 16) = v29 + 1;
      uint64_t v30 = v21 + 16 * v29;
      *(void *)(v30 + 32) = v25;
      *(void *)(v30 + 40) = v27;
    }
    while (v20 != v22);
    uint64_t v19 = v37;
    goto LABEL_22;
  }
  __break(1u);
  swift_release();
  __break(1u);
}

void sub_1DEFBAC60(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1DEFBAC78(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_1DFDF75B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF8C30();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v57 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DF3DE32C(a3);
  sub_1DEFBD93C(0, (unint64_t *)&qword_1EBABA9E0, (uint64_t)&qword_1EBABB040, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE919914);
  sub_1DEFBDE68();
  unint64_t v14 = sub_1DFDFDFF0();
  uint64_t v50 = 0;
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 24), *(void *)(v4 + 48));
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4F7FC18], v10);
  uint64_t v15 = sub_1DFDF9430();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
    uint64_t v20 = (void *)MEMORY[0x1E4FBC868];
LABEL_23:
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v44 = sub_1DEFBCF58(MEMORY[0x1E4FBC868], v14, v4);
    swift_release();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1DEFBCA54(v14, (uint64_t)v20, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return v45;
  }
  unint64_t v48 = v14;
  uint64_t v49 = v4;
  uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v17 = v8 + 16;
  unint64_t v19 = v15 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
  uint64_t v55 = (void (**)(char *, uint64_t))(v17 - 8);
  uint64_t v56 = v18;
  uint64_t v54 = *(void *)(v17 + 56);
  v47[1] = v15;
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v21 = v53;
  uint64_t v51 = v17;
  uint64_t v52 = v7;
  while (1)
  {
    v56(v21, v19, v7);
    uint64_t v23 = sub_1DFDF7570();
    if (v20[2])
    {
      sub_1DEA6D930(v23, v24);
      char v26 = v25;
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = sub_1DFDF7570();
    uint64_t v29 = v28;
    uint64_t v30 = sub_1DFDF7580();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v57 = v20;
    unint64_t v33 = sub_1DEA6D930(v27, v29);
    uint64_t v34 = v20[2];
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      break;
    }
    char v37 = v32;
    if (v20[3] >= v36)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v20 = v57;
        if ((v32 & 1) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_1DF65A648();
        uint64_t v20 = v57;
        if ((v37 & 1) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      sub_1DF6507B8(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_1DEA6D930(v27, v29);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_26;
      }
      unint64_t v33 = v38;
      uint64_t v20 = v57;
      if ((v37 & 1) == 0)
      {
LABEL_17:
        v20[(v33 >> 6) + 8] |= 1 << v33;
        uint64_t v40 = (uint64_t *)(v20[6] + 16 * v33);
        *uint64_t v40 = v27;
        v40[1] = v29;
        *(void *)(v20[7] + 8 * v33) = v30;
        uint64_t v41 = v20[2];
        BOOL v42 = __OFADD__(v41, 1);
        uint64_t v43 = v41 + 1;
        if (v42) {
          goto LABEL_25;
        }
        v20[2] = v43;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    uint64_t v22 = v20[7];

    *(void *)(v22 + 8 * v33) = v30;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v52;
    uint64_t v21 = v53;
LABEL_5:
    (*v55)(v21, v7);
    v19 += v54;
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      unint64_t v14 = v48;
      uint64_t v4 = v49;
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_1DFE00000();
  __break(1u);
  return result;
}

uint64_t sub_1DEFBB18C@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF3C1A58((uint64_t)&unk_1F3A67268);
  if (sub_1DEDF5F14())
  {
    sub_1DEFBD428();
    swift_allocError();
    *uint64_t v2 = 7;
    sub_1DEFBD9EC();
    swift_allocObject();
    uint64_t v3 = sub_1DFDEDE70();
  }
  else
  {
    sub_1DEFBD9EC();
    swift_allocObject();
    uint64_t v3 = sub_1DFDEDF30();
  }
  uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  return result;
}

uint64_t sub_1DEFBB270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = a2;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB040);
    uint64_t v10 = sub_1DFDFE220();
  }
  if (a3)
  {
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
    a3 = sub_1DFDFE220();
  }
  if (a4)
  {
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB040);
    a4 = sub_1DFDFE220();
  }
  if (a5)
  {
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
    a5 = sub_1DFDFE220();
  }
  swift_retain();
  id v12 = a6;
  v11(v10, a3, a4, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEFBB3D0(void (*a1)(void **), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a5;
  v11[3] = sub_1DEB1D34C;
  v11[4] = v10;
  id v12 = *(void **)(a5 + 144);
  swift_retain_n();
  swift_retain();
  swift_retain();
  id v13 = objc_msgSend(objc_msgSend(v12, sel_globalInventory), sel_allFeedItems);
  swift_unknownObjectRelease();
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAAA0);
  unint64_t v14 = sub_1DFDFE220();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    if (qword_1EBAC0140 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_retain();
    sub_1DEFBDABC(v14, a5, a1);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release_n();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (qword_1EBAC0140 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E3E8]), sel_initWithContext_, *(void *)(a5 + 16));
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = sub_1DEFBDAB0;
  v18[3] = v11;
  v18[4] = a3;
  v18[5] = a4;
  v20[4] = sub_1DEFBDE5C;
  v20[5] = v18;
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 1107296256;
  v20[2] = sub_1DEFBBBA4;
  void v20[3] = &block_descriptor_23_0;
  unint64_t v19 = _Block_copy(v20);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_setFetchCompletionHandler_, v19);
  _Block_release(v19);
  if (qword_1EBAC0540 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EBAC3BA0, sel_addOperation_, v17);

  return swift_release();
}

uint64_t sub_1DEFBB7A8(unint64_t a1, uint64_t a2, void (*a3)(void *))
{
  unint64_t v6 = *(void **)(a2 + 16);
  id v7 = objc_msgSend(objc_msgSend(v6, sel_configurationManager), sel_configuration);
  uint64_t result = swift_unknownObjectRelease();
  if (v7)
  {
    id v9 = objc_msgSend(self, sel_transformationWithFilterOptions_configuration_context_, 0x140220128, v7, v6);
    swift_unknownObjectRelease();
    if (a1 >> 62)
    {
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAEC0);
      swift_bridgeObjectRetain();
      sub_1DFDFFBD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DFDFFF80();
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAEC0);
    }
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAEC0);
    uint64_t v10 = (void *)sub_1DFDFE200();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v9, sel_transformFeedItems_, v10);

    unint64_t v12 = sub_1DFDFE220();
    uint64_t v13 = sub_1DEC786C0(v12);
    swift_bridgeObjectRelease();
    if (v13) {
      unint64_t v14 = v13;
    }
    else {
      unint64_t v14 = MEMORY[0x1E4FBC860];
    }
    swift_retain();
    uint64_t v15 = sub_1DEFBCCAC(v14, a2);
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_1EBAC0140 != -1) {
      swift_once();
    }
    sub_1DEA6A9D0(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1DFE0B750;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v18 = MEMORY[0x1E4FBB550];
    uint64_t v19 = MEMORY[0x1E4FBB5C8];
    *(void *)(v16 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v16 + 64) = v19;
    *(void *)(v16 + 32) = v17;
    uint64_t v20 = v15[2];
    *(void *)(v16 + 96) = v18;
    *(void *)(v16 + 104) = v19;
    *(void *)(v16 + 72) = v20;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    a3(v15);

    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DEFBBAFC(uint64_t a1, id a2, void (*a3)(uint64_t, id), uint64_t a4, void (*a5)(uint64_t))
{
  if (a1)
  {
    a3(a1, a2);
  }
  else
  {
    id v6 = a2;
    if (a2)
    {
      id v7 = a2;
      uint64_t v8 = (uint64_t)v6;
    }
    else
    {
      sub_1DEFBD428();
      uint64_t v8 = swift_allocError();
      id v6 = (id)v8;
      *id v9 = 4;
    }
    a5(v8);
  }
}

uint64_t sub_1DEFBBBA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAAA0);
    uint64_t v4 = sub_1DFDFE220();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEFBBC48()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);

  return swift_deallocClassInstance();
}

uint64_t sub_1DEFBBCA0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DEFB9F28(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DEFBBCD0()
{
  return sub_1DFDF8160();
}

void sub_1DEFBBCE8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DEE48434(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1DEFBBD54(v4);
  *a1 = v2;
}

void sub_1DEFBBD54(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_1DFDFFED0();
  if (v5 < v4)
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1)
    {
LABEL_144:
      sub_1DFDFFBA0();
      __break(1u);
      return;
    }
    uint64_t v132 = v5;
    v129 = a1;
    if (v4 < 2)
    {
      id v9 = (char *)MEMORY[0x1E4FBC860];
      __dst = (id *)(MEMORY[0x1E4FBC860] + 32);
      uint64_t v131 = MEMORY[0x1E4FBC860];
      if (v4 != 1)
      {
        unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        if (v12 < 2) {
          goto LABEL_113;
        }
        goto LABEL_101;
      }
      uint64_t v137 = v1;
    }
    else
    {
      uint64_t v137 = v1;
      uint64_t v7 = v6 >> 1;
      uint64_t v8 = sub_1DFDFE350();
      *(void *)(v8 + 16) = v7;
      uint64_t v131 = v8;
      __dst = (id *)(v8 + 32);
    }
    uint64_t v10 = 0;
    uint64_t v11 = *a1;
    uint64_t v130 = *a1 + 56;
    uint64_t v128 = *a1 - 24;
    id v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v135 = v4;
    uint64_t v138 = *a1;
    while (1)
    {
      uint64_t v13 = v10++;
      uint64_t v134 = v13;
      if (v10 >= v4) {
        goto LABEL_32;
      }
      uint64_t v14 = v11 + 24 * v10;
      uint64_t v15 = *(void **)v14;
      uint64_t v16 = *(void **)(v14 + 8);
      uint64_t v17 = v11 + 24 * v13;
      uint64_t v18 = *(void **)v17;
      uint64_t v19 = *(void **)(v17 + 8);
      id v20 = v15;
      id v21 = v16;
      id v22 = v18;
      id v23 = v19;
      objc_msgSend(v21, sel_agedPersonalizationScore);
      double v25 = v24;
      objc_msgSend(v23, sel_agedPersonalizationScore);
      double v27 = v26;

      uint64_t v4 = v135;
      uint64_t v10 = v13 + 2;
      if (v13 + 2 < v135)
      {
        uint64_t v28 = v9;
        uint64_t v29 = (void **)(v130 + 24 * v13);
        while (1)
        {
          uint64_t v30 = *v29;
          uint64_t v31 = *(v29 - 4);
          char v32 = *(v29 - 3);
          id v33 = *(v29 - 1);
          id v34 = v30;
          id v35 = v31;
          id v36 = v32;
          objc_msgSend(v34, sel_agedPersonalizationScore);
          double v38 = v37;
          objc_msgSend(v36, sel_agedPersonalizationScore);
          double v40 = v39;

          if (v27 < v25 == v40 >= v38) {
            break;
          }
          ++v10;
          v29 += 3;
          uint64_t v4 = v135;
          if (v135 == v10)
          {
            uint64_t v10 = v135;
            id v9 = v28;
            goto LABEL_23;
          }
        }
        id v9 = v28;
        uint64_t v4 = v135;
      }
LABEL_23:
      uint64_t v11 = v138;
      if (v27 >= v25)
      {
LABEL_32:
        if (v10 >= v4) {
          goto LABEL_52;
        }
      }
      else
      {
        if (v10 < v13) {
          goto LABEL_137;
        }
        if (v13 < v10)
        {
          uint64_t v41 = 24 * v10;
          uint64_t v42 = 24 * v13;
          uint64_t v43 = v10;
          uint64_t v44 = v13;
          while (1)
          {
            if (v44 != --v43)
            {
              if (!v138) {
                goto LABEL_142;
              }
              uint64_t v45 = v138 + v42;
              uint64_t v46 = v138 + v41;
              uint64_t v47 = *(void *)(v138 + v42 + 16);
              long long v48 = *(_OWORD *)(v138 + v42);
              uint64_t v49 = *(void *)(v138 + v41 - 8);
              *(_OWORD *)uint64_t v45 = *(_OWORD *)(v138 + v41 - 24);
              *(void *)(v45 + 16) = v49;
              *(_OWORD *)(v46 - 24) = v48;
              *(void *)(v46 - 8) = v47;
            }
            ++v44;
            v41 -= 24;
            v42 += 24;
            if (v44 >= v43) {
              goto LABEL_32;
            }
          }
        }
        if (v10 >= v4) {
          goto LABEL_52;
        }
      }
      if (__OFSUB__(v10, v13)) {
        goto LABEL_135;
      }
      if (v10 - v13 < v132)
      {
        if (__OFADD__(v13, v132)) {
          goto LABEL_138;
        }
        if (v13 + v132 >= v4) {
          uint64_t v50 = v4;
        }
        else {
          uint64_t v50 = v13 + v132;
        }
        if (v50 < v13)
        {
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (v10 != v50)
        {
          v127 = v9;
          uint64_t v51 = v128 + 24 * v10;
          uint64_t v133 = v50;
          do
          {
            uint64_t v52 = v11 + 24 * v10;
            uint64_t v53 = *(void **)v52;
            uint64_t v54 = *(void **)(v52 + 8);
            uint64_t v55 = v51;
            while (1)
            {
              uint64_t v56 = *(void **)v55;
              id v57 = *(void **)(v55 + 8);
              id v58 = v53;
              id v59 = v54;
              id v60 = v56;
              id v61 = v57;
              objc_msgSend(v59, sel_agedPersonalizationScore);
              double v63 = v62;
              objc_msgSend(v61, sel_agedPersonalizationScore);
              double v65 = v64;

              if (v65 >= v63) {
                break;
              }
              uint64_t v11 = v138;
              if (!v138) {
                goto LABEL_140;
              }
              uint64_t v54 = *(void **)(v55 + 32);
              uint64_t v66 = *(void *)(v55 + 40);
              uint64_t v67 = *(void *)(v55 + 16);
              uint64_t v53 = *(void **)(v55 + 24);
              *(_OWORD *)(v55 + 24) = *(_OWORD *)v55;
              *(void *)(v55 + 40) = v67;
              *(void *)uint64_t v55 = v53;
              *(void *)(v55 + 8) = v54;
              *(void *)(v55 + 16) = v66;
              v55 -= 24;
              if (v10 == ++v13) {
                goto LABEL_43;
              }
            }
            uint64_t v11 = v138;
LABEL_43:
            ++v10;
            v51 += 24;
            uint64_t v13 = v134;
          }
          while (v10 != v133);
          uint64_t v10 = v133;
          id v9 = v127;
        }
      }
LABEL_52:
      if (v10 < v13) {
        goto LABEL_130;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v9 = sub_1DEE47AC8(0, *((void *)v9 + 2) + 1, 1, v9);
      }
      unint64_t v69 = *((void *)v9 + 2);
      unint64_t v68 = *((void *)v9 + 3);
      unint64_t v12 = v69 + 1;
      uint64_t v11 = v138;
      if (v69 >= v68 >> 1)
      {
        v118 = sub_1DEE47AC8((char *)(v68 > 1), v69 + 1, 1, v9);
        uint64_t v11 = v138;
        id v9 = v118;
      }
      *((void *)v9 + 2) = v12;
      uint64_t v70 = v9 + 32;
      uint64_t v71 = &v9[16 * v69 + 32];
      *(void *)uint64_t v71 = v13;
      *((void *)v71 + 1) = v10;
      if (v69)
      {
        while (1)
        {
          unint64_t v72 = v12 - 1;
          if (v12 >= 4)
          {
            uint64_t v77 = &v70[16 * v12];
            uint64_t v78 = *((void *)v77 - 8);
            uint64_t v79 = *((void *)v77 - 7);
            BOOL v83 = __OFSUB__(v79, v78);
            uint64_t v80 = v79 - v78;
            if (v83) {
              goto LABEL_119;
            }
            uint64_t v82 = *((void *)v77 - 6);
            uint64_t v81 = *((void *)v77 - 5);
            BOOL v83 = __OFSUB__(v81, v82);
            uint64_t v75 = v81 - v82;
            char v76 = v83;
            if (v83) {
              goto LABEL_120;
            }
            unint64_t v84 = v12 - 2;
            v85 = &v70[16 * v12 - 32];
            uint64_t v87 = *(void *)v85;
            uint64_t v86 = *((void *)v85 + 1);
            BOOL v83 = __OFSUB__(v86, v87);
            uint64_t v88 = v86 - v87;
            if (v83) {
              goto LABEL_122;
            }
            BOOL v83 = __OFADD__(v75, v88);
            uint64_t v89 = v75 + v88;
            if (v83) {
              goto LABEL_125;
            }
            if (v89 >= v80)
            {
              v107 = &v70[16 * v72];
              uint64_t v109 = *(void *)v107;
              uint64_t v108 = *((void *)v107 + 1);
              BOOL v83 = __OFSUB__(v108, v109);
              uint64_t v110 = v108 - v109;
              if (v83) {
                goto LABEL_129;
              }
              BOOL v100 = v75 < v110;
              goto LABEL_89;
            }
          }
          else
          {
            if (v12 != 3)
            {
              uint64_t v101 = *((void *)v9 + 4);
              uint64_t v102 = *((void *)v9 + 5);
              BOOL v83 = __OFSUB__(v102, v101);
              uint64_t v94 = v102 - v101;
              char v95 = v83;
              goto LABEL_83;
            }
            uint64_t v74 = *((void *)v9 + 4);
            uint64_t v73 = *((void *)v9 + 5);
            BOOL v83 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            char v76 = v83;
          }
          if (v76) {
            goto LABEL_121;
          }
          unint64_t v84 = v12 - 2;
          int v90 = &v70[16 * v12 - 32];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *((void *)v90 + 1);
          BOOL v93 = __OFSUB__(v91, v92);
          uint64_t v94 = v91 - v92;
          char v95 = v93;
          if (v93) {
            goto LABEL_124;
          }
          v96 = &v70[16 * v72];
          uint64_t v98 = *(void *)v96;
          uint64_t v97 = *((void *)v96 + 1);
          BOOL v83 = __OFSUB__(v97, v98);
          uint64_t v99 = v97 - v98;
          if (v83) {
            goto LABEL_127;
          }
          if (__OFADD__(v94, v99)) {
            goto LABEL_128;
          }
          if (v94 + v99 >= v75)
          {
            BOOL v100 = v75 < v99;
LABEL_89:
            if (v100) {
              unint64_t v72 = v84;
            }
            goto LABEL_91;
          }
LABEL_83:
          if (v95) {
            goto LABEL_123;
          }
          v103 = &v70[16 * v72];
          uint64_t v105 = *(void *)v103;
          uint64_t v104 = *((void *)v103 + 1);
          BOOL v83 = __OFSUB__(v104, v105);
          uint64_t v106 = v104 - v105;
          if (v83) {
            goto LABEL_126;
          }
          if (v106 < v94) {
            goto LABEL_15;
          }
LABEL_91:
          unint64_t v111 = v72 - 1;
          if (v72 - 1 >= v12)
          {
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
            goto LABEL_139;
          }
          if (!v11) {
            goto LABEL_141;
          }
          v112 = v9;
          v113 = &v70[16 * v111];
          uint64_t v114 = *(void *)v113;
          v115 = &v70[16 * v72];
          uint64_t v116 = *((void *)v115 + 1);
          sub_1DEFBC6AC((id *)(v11 + 24 * *(void *)v113), (id *)(v11 + 24 * *(void *)v115), v11 + 24 * v116, __dst);
          if (v137) {
            goto LABEL_113;
          }
          if (v116 < v114) {
            goto LABEL_116;
          }
          if (v72 > *((void *)v112 + 2)) {
            goto LABEL_117;
          }
          *(void *)v113 = v114;
          *(void *)&v70[16 * v111 + 8] = v116;
          unint64_t v117 = *((void *)v112 + 2);
          if (v72 >= v117) {
            goto LABEL_118;
          }
          id v9 = v112;
          unint64_t v12 = v117 - 1;
          memmove(&v70[16 * v72], v115 + 16, 16 * (v117 - 1 - v72));
          *((void *)v112 + 2) = v117 - 1;
          uint64_t v11 = v138;
          if (v117 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v12 = 1;
LABEL_15:
      uint64_t v4 = v135;
      if (v10 >= v135)
      {
        uint64_t v2 = v137;
        if (v12 < 2)
        {
LABEL_113:
          swift_bridgeObjectRelease();
          *(void *)(v131 + 16) = 0;
          swift_bridgeObjectRelease();
          return;
        }
LABEL_101:
        uint64_t v119 = *v129;
        while (1)
        {
          unint64_t v120 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v119) {
            goto LABEL_143;
          }
          v121 = v9;
          v122 = v9 + 32;
          uint64_t v123 = *(void *)&v9[16 * v120 + 32];
          uint64_t v124 = *(void *)&v9[16 * v12 + 24];
          sub_1DEFBC6AC((id *)(v119 + 24 * v123), (id *)(v119 + 24 * *(void *)&v122[16 * v12 - 16]), v119 + 24 * v124, __dst);
          if (v2) {
            goto LABEL_113;
          }
          if (v124 < v123) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v121 = sub_1DEE48394((uint64_t)v121);
          }
          if (v120 >= *((void *)v121 + 2)) {
            goto LABEL_133;
          }
          v125 = &v121[16 * v120 + 32];
          *(void *)v125 = v123;
          *((void *)v125 + 1) = v124;
          unint64_t v126 = *((void *)v121 + 2);
          if (v12 > v126) {
            goto LABEL_134;
          }
          id v9 = v121;
          memmove(&v121[16 * v12 + 16], &v121[16 * v12 + 32], 16 * (v126 - v12));
          *((void *)v121 + 2) = v126 - 1;
          unint64_t v12 = v126 - 1;
          if (v126 <= 2) {
            goto LABEL_113;
          }
        }
      }
    }
  }
  if (v4 < 0) {
    goto LABEL_136;
  }
  if (v4) {
    sub_1DEFBC56C(0, v4, 1, a1);
  }
}

void sub_1DEFBC56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 24 * a3 - 24;
LABEL_5:
    uint64_t v7 = v5 + 24 * v4;
    uint64_t v8 = *(void **)v7;
    id v9 = *(void **)(v7 + 8);
    uint64_t v10 = a1;
    uint64_t v25 = v6;
    while (1)
    {
      uint64_t v11 = *(void **)v6;
      unint64_t v12 = *(void **)(v6 + 8);
      id v13 = v8;
      id v14 = v9;
      id v15 = v11;
      id v16 = v12;
      objc_msgSend(v14, sel_agedPersonalizationScore);
      double v18 = v17;
      objc_msgSend(v16, sel_agedPersonalizationScore);
      double v20 = v19;

      if (v20 >= v18)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v25 + 24;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      id v9 = *(void **)(v6 + 32);
      uint64_t v21 = *(void *)(v6 + 40);
      uint64_t v22 = *(void *)(v6 + 16);
      uint64_t v8 = *(void **)(v6 + 24);
      *(_OWORD *)(v6 + 24) = *(_OWORD *)v6;
      *(void *)(v6 + 40) = v22;
      *(void *)uint64_t v6 = v8;
      *(void *)(v6 + 8) = v9;
      *(void *)(v6 + 16) = v21;
      v6 -= 24;
      if (v4 == ++v10) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DEFBC6AC(id *__src, id *a2, unint64_t a3, id *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = ((char *)a2 - (char *)__src) / 24;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v55 = __src;
  uint64_t v54 = __dst;
  if (v8 >= v10)
  {
    if (v9 >= -23)
    {
      if (__dst != a2 || &a2[3 * v10] <= __dst) {
        memmove(__dst, a2, 24 * v10);
      }
      double v27 = &v4[3 * v10];
      uint64_t v53 = v27;
      uint64_t v55 = v5;
      if (v6 < v5 && v9 >= 24)
      {
        unint64_t v28 = a3 - 24;
        uint64_t v29 = v5;
        uint64_t v47 = v6;
        long long v48 = v4;
        while (1)
        {
          uint64_t v50 = (id *)(v28 + 24);
          uint64_t v52 = v5;
          uint64_t v30 = *(v27 - 2);
          uint64_t v31 = (char *)(v27 - 3);
          char v32 = *(v29 - 3);
          id v33 = *(v29 - 2);
          v29 -= 3;
          id v34 = v27;
          id v35 = *(v27 - 3);
          id v36 = v30;
          id v37 = v32;
          id v38 = v33;
          objc_msgSend(v36, sel_agedPersonalizationScore);
          double v40 = v39;
          objc_msgSend(v38, sel_agedPersonalizationScore);
          double v42 = v41;

          if (v42 >= v40)
          {
            uint64_t v53 = (id *)v31;
            if (v50 < v34 || v28 >= (unint64_t)v34 || v50 != v34)
            {
              long long v45 = *(_OWORD *)v31;
              *(void *)(v28 + 16) = *((void *)v31 + 2);
              *(_OWORD *)unint64_t v28 = v45;
            }
            uint64_t v29 = v52;
            double v27 = (id *)v31;
            uint64_t v44 = (char *)v48;
            if (v52 <= v47) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v50 != v52 || v28 >= (unint64_t)v52)
            {
              long long v43 = *(_OWORD *)v29;
              *(void *)(v28 + 16) = v29[2];
              *(_OWORD *)unint64_t v28 = v43;
            }
            uint64_t v55 = v29;
            uint64_t v44 = (char *)v48;
            double v27 = v34;
            if (v29 <= v47) {
              goto LABEL_38;
            }
          }
          v28 -= 24;
          uint64_t v5 = v29;
          if (v27 <= (id *)v44) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v7 >= -23)
  {
    if (__dst != __src || &__src[3 * v8] <= __dst) {
      memmove(__dst, __src, 24 * v8);
    }
    uint64_t v49 = &v4[3 * v8];
    uint64_t v53 = v49;
    if ((unint64_t)v5 < a3 && v7 >= 24)
    {
      do
      {
        uint64_t v11 = v6;
        id v12 = v5[1];
        id v13 = *v4;
        id v14 = v4[1];
        id v15 = *v5;
        id v16 = v12;
        id v17 = v13;
        id v18 = v14;
        objc_msgSend(v16, sel_agedPersonalizationScore);
        double v20 = v19;
        objc_msgSend(v18, sel_agedPersonalizationScore);
        double v22 = v21;

        if (v22 >= v20)
        {
          double v24 = v11;
          if (v11 != v4)
          {
            long long v26 = *(_OWORD *)v4;
            v11[2] = v4[2];
            *(_OWORD *)uint64_t v11 = v26;
          }
          v4 += 3;
          uint64_t v54 = v4;
          id v23 = v5;
        }
        else
        {
          id v23 = v5 + 3;
          double v24 = v11;
          if (v11 < v5 || v11 >= v23 || v11 != v5)
          {
            long long v25 = *(_OWORD *)v5;
            v11[2] = v5[2];
            *(_OWORD *)uint64_t v11 = v25;
          }
        }
        uint64_t v6 = v24 + 3;
        if (v4 >= v49) {
          break;
        }
        uint64_t v5 = v23;
      }
      while ((unint64_t)v23 < a3);
      uint64_t v55 = v6;
    }
LABEL_38:
    sub_1DEE47BF4((void **)&v55, (const void **)&v54, &v53);
    return 1;
  }
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DEFBCA54(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (!v6) {
      return v7;
    }
    uint64_t v33 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEDF735C(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    unint64_t v29 = v5 & 0xC000000000000001;
    uint64_t v7 = v33;
    uint64_t v31 = a2;
    uint64_t v32 = a3;
    unint64_t v30 = v5;
    while (v6 != v9)
    {
      if (v29) {
        id v10 = (id)MEMORY[0x1E01EE240](v9, v5);
      }
      else {
        id v10 = *(id *)(v5 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v10, sel_identifier);
      uint64_t v13 = sub_1DFDFDD20();
      uint64_t v15 = v14;

      if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1DEA6D930(v13, v15), (v17 & 1) != 0))
      {
        id v18 = *(id *)(*(void *)(a2 + 56) + 8 * v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }
      id v19 = objc_msgSend(v11, sel_identifier);
      uint64_t v20 = sub_1DFDFDD20();
      uint64_t v22 = v21;

      if (*(void *)(a3 + 16) && (unint64_t v23 = sub_1DEA6D930(v20, v22), (v24 & 1) != 0)) {
        uint64_t v25 = *(void *)(*(void *)(a3 + 56) + 8 * v23);
      }
      else {
        uint64_t v25 = 0;
      }
      swift_bridgeObjectRelease();
      unint64_t v27 = *(void *)(v33 + 16);
      unint64_t v26 = *(void *)(v33 + 24);
      if (v27 >= v26 >> 1) {
        sub_1DEDF735C(v26 > 1, v27 + 1, 1);
      }
      ++v9;
      *(void *)(v33 + 16) = v27 + 1;
      unint64_t v28 = (void *)(v33 + 24 * v27);
      v28[4] = v11;
      v28[5] = v18;
      v28[6] = v25;
      a2 = v31;
      a3 = v32;
      unint64_t v5 = v30;
      if (v6 == v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_1DEFBCCAC(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (!v3) {
      return (id)v4;
    }
    uint64_t v31 = MEMORY[0x1E4FBC860];
    id result = (id)sub_1DEDF733C(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v27 = v3;
    uint64_t v6 = 0;
    uint64_t v4 = v31;
    unint64_t v29 = v2 & 0xC000000000000001;
    unint64_t v28 = v2;
    while (v3 != v6)
    {
      if (v29) {
        id v7 = (id)MEMORY[0x1E01EE240](v6, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v6 + 32);
      }
      int64_t v8 = v7;
      uint64_t v9 = *__swift_project_boxed_opaque_existential_1((void *)(a2 + 64), *(void *)(a2 + 88));
      id v10 = v8;
      id result = objc_msgSend(v10, sel_articleID);
      if (!result) {
        goto LABEL_29;
      }
      uint64_t v11 = result;
      sub_1DFDFDD20();

      id v12 = *(void **)(v9 + OBJC_IVAR____TtC7NewsUI214HistoryService_readingHistory);
      uint64_t v13 = (void *)sub_1DFDFDCE0();
      unsigned int v14 = objc_msgSend(v12, sel_hasArticleBeenRead_, v13);

      if (v14) {
        uint64_t v15 = 2;
      }
      else {
        uint64_t v15 = 0;
      }
      unint64_t v16 = (void *)sub_1DFDFDCE0();
      unsigned int v17 = objc_msgSend(v12, sel_hasArticleBeenSeen_, v16);

      if (v17) {
        v15 |= 4uLL;
      }
      id v18 = (void *)sub_1DFDFDCE0();
      unsigned int v19 = objc_msgSend(v12, sel_hasArticleBeenVisited_, v18);

      if (v19) {
        uint64_t v20 = v15 | 8;
      }
      else {
        uint64_t v20 = v15;
      }
      uint64_t v21 = (void *)sub_1DFDFDCE0();
      unsigned int v22 = objc_msgSend(v12, sel_hasArticleBeenConsumed_, v21);

      swift_bridgeObjectRelease();
      if (v22) {
        uint64_t v23 = v20 | 0x10;
      }
      else {
        uint64_t v23 = v20;
      }
      unint64_t v25 = *(void *)(v31 + 16);
      unint64_t v24 = *(void *)(v31 + 24);
      if (v25 >= v24 >> 1) {
        sub_1DEDF733C(v24 > 1, v25 + 1, 1);
      }
      ++v6;
      *(void *)(v31 + 16) = v25 + 1;
      uint64_t v26 = v31 + 16 * v25;
      *(void *)(v26 + 32) = v10;
      *(void *)(v26 + 40) = v23;
      uint64_t v3 = v27;
      unint64_t v2 = v28;
      if (v27 == v6) {
        return (id)v4;
      }
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DEFBCF58(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  if (a2 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DFDFFBE0();
    if (!v6) {
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_32;
    }
  }
  uint64_t v7 = 0;
  unint64_t v38 = v4;
  unint64_t v39 = v4 & 0xC000000000000001;
  uint64_t v33 = (void *)(a3 + 64);
  uint64_t v34 = a3;
  int64_t v8 = &selRef_handleCloseActionOnPresenter_;
  do
  {
    a3 = v7;
    while (1)
    {
      if (v39)
      {
        id v13 = (id)MEMORY[0x1E01EE240](a3, v4);
        uint64_t v7 = a3 + 1;
        if (__OFADD__(a3, 1)) {
          goto LABEL_30;
        }
      }
      else
      {
        id v13 = *(id *)(v4 + 8 * a3 + 32);
        uint64_t v7 = a3 + 1;
        if (__OFADD__(a3, 1))
        {
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
      }
      uint64_t v14 = v6;
      uint64_t v15 = v8;
      unint64_t v16 = v13;
      id v17 = objc_msgSend(v13, v8[228], v33, v34);
      uint64_t v18 = sub_1DFDFDD20();
      uint64_t v20 = v19;

      if (!*(void *)(a1 + 16)) {
        break;
      }
      sub_1DEA6D930(v18, v20);
      if ((v21 & 1) == 0) {
        break;
      }

      swift_bridgeObjectRelease();
      ++a3;
      uint64_t v6 = v14;
      BOOL v12 = v7 == v14;
      unint64_t v4 = v38;
      int64_t v8 = v15;
      if (v12) {
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRelease();
    id v22 = [v16 v15[228]];
    uint64_t v35 = sub_1DFDFDD20();
    uint64_t v36 = v23;

    unint64_t v24 = v16;
    unint64_t v25 = *(void **)(*__swift_project_boxed_opaque_existential_1(v33, *(void *)(v34 + 88))
                   + OBJC_IVAR____TtC7NewsUI214HistoryService_issueReadingHistory);
    id v26 = [v24 v15[228]];
    if (!v26)
    {
      sub_1DFDFDD20();
      id v26 = (id)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
    }
    unsigned int v27 = objc_msgSend(v25, sel_hasIssueWithIDBeenSeen_, v26);

    if (v27) {
      uint64_t v28 = 4;
    }
    else {
      uint64_t v28 = 0;
    }
    id v29 = [v24 v15[228]];
    id v37 = v24;
    if (!v29)
    {
      sub_1DFDFDD20();
      id v29 = (id)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
    }
    unsigned int v30 = objc_msgSend(v25, sel_hasIssueWithIDBeenVisited_, v29);

    if (v30) {
      uint64_t v28 = 14;
    }
    id v31 = [v24 v15[228]];
    int64_t v8 = v15;
    if (!v31)
    {
      sub_1DFDFDD20();
      id v31 = (id)sub_1DFDFDCE0();
      int64_t v8 = v15;
      swift_bridgeObjectRelease();
    }
    unsigned int v9 = objc_msgSend(v25, sel_hasIssueWithIDBeenEngaged_, v31);

    if (v9) {
      uint64_t v10 = 30;
    }
    else {
      uint64_t v10 = v28;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1DFBC7540(v10, v35, v36, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v14;
    BOOL v12 = v7 == v14;
    unint64_t v4 = v38;
  }
  while (!v12);
LABEL_32:
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1DEFBD28C(unint64_t a1)
{
  if (a1 >> 62)
  {
    uint64_t v2 = sub_1DFDFFBE0();
    if (!v2) {
      return;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
  }
  else if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      unint64_t v4 = (void *)MEMORY[0x1E01EE240](i, a1);
      sub_1DED71694(&v7, v4);
    }
  }
  else
  {
    unint64_t v5 = (void **)(a1 + 32);
    do
    {
      uint64_t v6 = *v5++;
      sub_1DED71694(&v7, v6);

      --v2;
    }
    while (v2);
  }
}

uint64_t sub_1DEFBD35C(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC870];
  uint64_t v8 = MEMORY[0x1E4FBC870];
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC7NewsUI225MagazineFeedServiceConfig_baseContentConfig);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    do
    {
      unint64_t v6 = *(void *)(v3 + 8 * v5++ + 32);
      swift_retain();
      uint64_t v7 = sub_1DF36F208(v6);
      sub_1DEFB9D30(v7, sub_1DED712B8);
      swift_release();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

void sub_1DEFBD41C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1DEFBA21C(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

unint64_t sub_1DEFBD428()
{
  unint64_t result = qword_1EBAC3BA8;
  if (!qword_1EBAC3BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC3BA8);
  }
  return result;
}

uint64_t sub_1DEFBD47C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEFBD4B4(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  long long v3 = *(_OWORD *)(a1 + 48);
  v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v3;
  uint64_t v7 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  return v2(v6);
}

uint64_t sub_1DEFBD500(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = *a1;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(v2 + 8 * v6++ + 32);
      swift_retain();
      uint64_t v8 = a2(v7);
      sub_1DEA8C598(v8);
      swift_release();
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1DEFBD5A4(uint64_t *a1)
{
  uint64_t v26 = type metadata accessor for TrendingMagazineFeedGroupConfigData();
  MEMORY[0x1F4188790](v26);
  long long v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA53618();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unint64_t v25 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = *a1;
  uint64_t v28 = *(void *)(*a1 + 16);
  if (v28)
  {
    BOOL v12 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    id v13 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = 0;
    uint64_t v27 = 0;
    unint64_t v15 = 0xE000000000000000;
    while (1)
    {
      unint64_t v18 = *(void *)(v11 + 8 * v14 + 32);
      unint64_t v19 = v18 >> 60;
      uint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFLL;
      if (v18 >> 60 == 10)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v16 = swift_projectBox();
        (*v12)(v10, v16, v5);
        sub_1DFDF73B0();
        (*v13)(v10, v5);
      }
      else
      {
        swift_retain();
        if (v19 != 14 || *(void *)(v20 + 16) >> 60 != 10) {
          goto LABEL_5;
        }
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v21 = swift_projectBox();
        id v22 = v25;
        (*v12)(v25, v21, v5);
        swift_release();
        sub_1DFDF73B0();
        (*v13)(v22, v5);
      }
      id v17 = &v3[*(int *)(v26 + 36)];
      unint64_t v15 = *((void *)v17 + 1);
      uint64_t v27 = *(void *)v17;
      swift_bridgeObjectRetain();
      sub_1DEFBDEEC((uint64_t)v3);
LABEL_5:
      swift_release();
      if (v28 == ++v14)
      {
        swift_bridgeObjectRelease_n();
        uint64_t result = v27;
        goto LABEL_12;
      }
    }
  }
  uint64_t result = 0;
  unint64_t v15 = 0xE000000000000000;
LABEL_12:
  uint64_t v24 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v24 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v24)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1DEFBD874()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DEFBD8AC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1DEFBD904(void *a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1DEFBA6B4(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void (**)(void))(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void (**)(uint64_t *))(v5 + 56));
}

void sub_1DEFBD93C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1DFDFE400();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DEFBD998()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEFBD9E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DEFBB18C(a1);
}

void sub_1DEFBD9EC()
{
  if (!qword_1EBAD2B80)
  {
    sub_1DE9CF710(255, (unint64_t *)&qword_1EBAEA1F8, (uint64_t)&type metadata for MagazineFeedPoolFeedItem, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1DFDEDFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAD2B80);
    }
  }
}

uint64_t sub_1DEFBDA68(void (*a1)(void **), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEFBB3D0(a1, a2, a3, a4, v4);
}

uint64_t sub_1DEFBDA70()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEFBDAB0(unint64_t a1)
{
  return sub_1DEFBB7A8(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

uint64_t sub_1DEFBDABC(unint64_t a1, uint64_t a2, void (*a3)(void **))
{
  unint64_t v6 = *(void **)(a2 + 16);
  id v7 = objc_msgSend(objc_msgSend(v6, sel_configurationManager), sel_configuration);
  swift_unknownObjectRelease();
  if (v7)
  {
    id v8 = objc_msgSend(self, sel_transformationWithFilterOptions_configuration_context_, 0x140220128, v7, v6);
    swift_unknownObjectRelease();
    if (a1 >> 62)
    {
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAEC0);
      swift_bridgeObjectRetain();
      sub_1DFDFFBD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DFDFFF80();
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAEC0);
    }
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAEC0);
    uint64_t v9 = (void *)sub_1DFDFE200();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v8, sel_transformFeedItems_, v9);

    unint64_t v11 = sub_1DFDFE220();
    uint64_t v12 = sub_1DEC786C0(v11);
    swift_bridgeObjectRelease();
    if (v12) {
      unint64_t v13 = v12;
    }
    else {
      unint64_t v13 = MEMORY[0x1E4FBC860];
    }
    swift_retain();
    uint64_t v14 = sub_1DEFBCCAC(v13, a2);
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_1EBAC0140 != -1) {
      swift_once();
    }
    sub_1DEA6A9D0(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DFE0B750;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v17 = MEMORY[0x1E4FBB550];
    uint64_t v18 = MEMORY[0x1E4FBB5C8];
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v15 + 64) = v18;
    *(void *)(v15 + 32) = v16;
    uint64_t v19 = v14[2];
    *(void *)(v15 + 96) = v17;
    *(void *)(v15 + 104) = v18;
    *(void *)(v15 + 72) = v19;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v21 = v14;
    a3(&v21);

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFBDE1C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DEFBDE5C(uint64_t a1, void *a2)
{
  sub_1DEFBBAFC(a1, a2, *(void (**)(uint64_t, id))(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32));
}

unint64_t sub_1DEFBDE68()
{
  unint64_t result = qword_1EBABA9F0;
  if (!qword_1EBABA9F0)
  {
    sub_1DEFBD93C(255, (unint64_t *)&qword_1EBABA9E0, (uint64_t)&qword_1EBABB040, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE919914);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABA9F0);
  }
  return result;
}

uint64_t sub_1DEFBDEEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrendingMagazineFeedGroupConfigData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for MagazineFeedPoolService.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFBE014);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MagazineFeedPoolService.Errors()
{
  return &type metadata for MagazineFeedPoolService.Errors;
}

unint64_t sub_1DEFBE050()
{
  unint64_t result = qword_1EAC27498;
  if (!qword_1EAC27498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27498);
  }
  return result;
}

uint64_t sub_1DEFBE0B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (a2 == 3)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    uint64_t v6 = type metadata accessor for ExplicitContentRestrictionAlertPresenter();
    id v7 = (void *)swift_allocObject();
    v7[3] = 0;
    v7[4] = 0;
    v7[2] = v5;
    a3[3] = v6;
    a3[4] = sub_1DEFBE29C(&qword_1EAC22310, (void (*)(uint64_t))type metadata accessor for ExplicitContentRestrictionAlertPresenter);
    *a3 = (uint64_t)v7;
    return swift_unknownObjectRetain();
  }
  else
  {
    if (a1)
    {
      uint64_t v14 = sub_1DFDE96E0();
      uint64_t v15 = sub_1DEFBE29C(&qword_1EAC222C8, MEMORY[0x1E4F7D8C8]);
      __swift_allocate_boxed_opaque_existential_1(v13);
      id v10 = a1;
      sub_1DFDE96B0();
    }
    else
    {
      uint64_t v14 = sub_1DFDE96E0();
      uint64_t v15 = sub_1DEFBE29C(&qword_1EAC222C8, MEMORY[0x1E4F7D8C8]);
      __swift_allocate_boxed_opaque_existential_1(v13);
      sub_1DFDE96A0();
    }
    uint64_t v11 = sub_1DFDF4F90();
    swift_allocObject();
    uint64_t result = sub_1DFDF4F10();
    uint64_t v12 = MEMORY[0x1E4FAD730];
    a3[3] = v11;
    a3[4] = v12;
    *a3 = result;
  }
  return result;
}

uint64_t type metadata accessor for ArticleErrorAlertPresenterFactory()
{
  return self;
}

uint64_t sub_1DEFBE29C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEFBE2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEABCA3C();
  sub_1DFDEE090();
  uint64_t v5 = (void *)sub_1DFDEDCE0();
  type metadata accessor for OptimizedStorageStartupTask();
  sub_1DFDEDE20();
  swift_release();

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain();
  id v7 = (id)sub_1DFDEDCE0();
  sub_1DFDEDEA0();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1DEFBE414(uint64_t a1)
{
  id v1 = objc_msgSend(*(id *)(a1 + 16), sel_appConfigurationManager);
  swift_getObjectType();
  uint64_t v2 = sub_1DFDFF1E0();
  swift_unknownObjectRelease();
  return v2;
}

void sub_1DEFBE47C(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  id v4 = (id)NewsCoreUserDefaults();
  uint64_t v5 = *MEMORY[0x1E4F7E038];
  unsigned __int8 v6 = objc_msgSend(v4, sel_BOOLForKey_, *MEMORY[0x1E4F7E038]);

  if (v6)
  {
    if (qword_1EBAD0600 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1DFDF01D0();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBB629F8);
    id v8 = sub_1DFDF01B0();
    os_log_type_t v9 = sub_1DFDFEA60();
    if (!os_log_type_enabled(v8, v9)) {
      goto LABEL_8;
    }
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v10 = 0;
    uint64_t v11 = "will not consider auto-enabling Optimized Storage because it's already enabled";
    goto LABEL_6;
  }
  id v13 = (id)NewsCoreUserDefaults();
  id v14 = objc_msgSend(v13, sel_objectForKey_, *MEMORY[0x1E4F7E040]);

  if (v14)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
    sub_1DEA6FDEC(v32, v33);
    if (qword_1EBAD0600 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1DFDF01D0();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EBB629F8);
    sub_1DEA6FC28((uint64_t)v33, (uint64_t)v32);
    uint64_t v16 = sub_1DFDF01B0();
    os_log_type_t v17 = sub_1DFDFEA60();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v34 = v19;
      sub_1DFDFFB10();
      sub_1DEA5CAB8(0, 0xE000000000000000, &v34);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      _os_log_impl(&dword_1DE913000, v16, v17, "will not consider auto-enabling Optimized Storage because the user modified the setting on %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v19, -1, -1);
      MEMORY[0x1E01EFA10](v18, -1, -1);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    if ((objc_msgSend(v3, sel_respondsToSelector_, sel_optimizedStorageAutoEnablementThreshold) & 1) == 0)
    {
      if (qword_1EBAD0600 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1DFDF01D0();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EBB629F8);
      id v8 = sub_1DFDF01B0();
      os_log_type_t v9 = sub_1DFDFEA60();
      if (!os_log_type_enabled(v8, v9)) {
        goto LABEL_8;
      }
      id v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v10 = 0;
      uint64_t v11 = "will not consider auto-enabling Optimized Storage because there's no configured threshold";
LABEL_6:
      _os_log_impl(&dword_1DE913000, v8, v9, v11, v10, 2u);
      uint64_t v12 = (uint64_t)v10;
LABEL_7:
      MEMORY[0x1E01EFA10](v12, -1, -1);
LABEL_8:

      return;
    }
    id v20 = objc_msgSend(v3, sel_optimizedStorageAutoEnablementThreshold);
    id v21 = objc_msgSend(*(id *)(a2 + 16), sel_contentHostDirectoryURL);
    if (v21)
    {
      id v22 = v21;
      id v23 = objc_msgSend(v21, sel_fc_fileSystemFreeSize);

      if ((uint64_t)v23 < (uint64_t)v20)
      {
        if (qword_1EBAD0600 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_1DFDF01D0();
        __swift_project_value_buffer(v24, (uint64_t)qword_1EBB629F8);
        unint64_t v25 = sub_1DFDF01B0();
        os_log_type_t v26 = sub_1DFDFEA60();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = swift_slowAlloc();
          *(_DWORD *)uint64_t v27 = 134349312;
          sub_1DFDFF680();
          *(_WORD *)(v27 + 12) = 2050;
          *(void *)&v33[0] = v20;
          sub_1DFDFF680();
          _os_log_impl(&dword_1DE913000, v25, v26, "will auto-enable Optimized Storage because available=%{public}lld < threshold=%{public}lld", (uint8_t *)v27, 0x16u);
          MEMORY[0x1E01EFA10](v27, -1, -1);
        }

        id v8 = (id)NewsCoreUserDefaults();
        [v8 setBool:1 forKey:v5];
        goto LABEL_8;
      }
      if (qword_1EBAD0600 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1DFDF01D0();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EBB629F8);
      id v8 = sub_1DFDF01B0();
      os_log_type_t v30 = sub_1DFDFEA60();
      if (!os_log_type_enabled(v8, v30)) {
        goto LABEL_8;
      }
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 134349312;
      sub_1DFDFF680();
      *(_WORD *)(v31 + 12) = 2050;
      *(void *)&v33[0] = v20;
      sub_1DFDFF680();
      _os_log_impl(&dword_1DE913000, v8, v30, "will not auto-enable Optimized Storage because available=%{public}lld >= threshold=%{public}lld", (uint8_t *)v31, 0x16u);
      uint64_t v12 = v31;
      goto LABEL_7;
    }
    __break(1u);
  }
}

uint64_t sub_1DEFBEAB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEFBEAF0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DEFBEB30()
{
  sub_1DEFBE2E4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1DEFBEB3C()
{
  return sub_1DEFBE414(v0);
}

uint64_t type metadata accessor for ArticleContextFactory()
{
  return self;
}

uint64_t sub_1DEFBEB80(void *a1)
{
  return sub_1DEFBEBD8(a1, MEMORY[0x1E4F819E8], MEMORY[0x1E4F819D8]);
}

uint64_t sub_1DEFBEBAC(void *a1)
{
  return sub_1DEFBEBD8(a1, MEMORY[0x1E4F81840], MEMORY[0x1E4F81830]);
}

uint64_t sub_1DEFBEBD8(void *a1, void (*a2)(void), uint64_t (*a3)(unsigned char *))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAE9F00);
  uint64_t result = sub_1DFDECCC0();
  if (v7)
  {
    a2(0);
    swift_allocObject();
    return a3(v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1DEFBEC88(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
  uint64_t result = (char *)sub_1DFDECCC0();
  if (v3)
  {
    id v2 = objc_allocWithZone((Class)type metadata accessor for NotificationsStateCommandHandler());
    return sub_1DFDB6D64(v3, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFBED24(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
  uint64_t result = sub_1DFDECCC0();
  if (v14)
  {
    uint64_t v3 = v15;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8680);
    uint64_t result = sub_1DFDECCC0();
    uint64_t v4 = v12;
    if (v12)
    {
      uint64_t v5 = v13;
      unsigned __int8 v6 = (objc_class *)type metadata accessor for FamilyStatusStateCommandHandler();
      uint64_t v7 = (char *)objc_allocWithZone(v6);
      *(void *)&v7[OBJC_IVAR____TtC7NewsUI231FamilyStatusStateCommandHandler_commandCenter + 8] = 0;
      *(void *)(swift_unknownObjectWeakInit() + 8) = v3;
      swift_unknownObjectWeakAssign();
      id v8 = &v7[OBJC_IVAR____TtC7NewsUI231FamilyStatusStateCommandHandler_familyStatusManager];
      *(void *)id v8 = v4;
      *((void *)v8 + 1) = v5;
      v11.receiver = v7;
      v11.super_class = v6;
      swift_unknownObjectRetain();
      id v9 = objc_msgSendSuper2(&v11, sel_init);
      swift_getObjectType();
      sub_1DE9F51AC((unint64_t *)&unk_1EBAF8288, (void (*)(uint64_t))type metadata accessor for FamilyStatusStateCommandHandler);
      id v10 = v9;
      sub_1DFDFCF00();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return (uint64_t)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFBEEF0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
  uint64_t result = sub_1DFDECCC0();
  if (v9)
  {
    uint64_t v3 = v10;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD30);
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      uint64_t v4 = (void *)result;
      uint64_t v5 = (objc_class *)type metadata accessor for NewslettersStateCommandHandler();
      unsigned __int8 v6 = (char *)objc_allocWithZone(v5);
      *(void *)&v6[OBJC_IVAR____TtC7NewsUI230NewslettersStateCommandHandler_commandCenter + 8] = 0;
      *(void *)(swift_unknownObjectWeakInit() + 8) = v3;
      swift_unknownObjectWeakAssign();
      *(void *)&v6[OBJC_IVAR____TtC7NewsUI230NewslettersStateCommandHandler_newsletterManager] = v4;
      v8.receiver = v6;
      v8.super_class = v5;
      swift_unknownObjectRetain();
      id v7 = objc_msgSendSuper2(&v8, sel_init);
      objc_msgSend(v4, sel_addObserver_, v7, v8.receiver, v8.super_class);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return (uint64_t)v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFBF060(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAD0BF0);
  uint64_t result = sub_1DFDECCC0();
  if (!v13)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBABA480);
  uint64_t result = sub_1DFDECCC0();
  if (!v11)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBAB0140);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAFA0);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    MEMORY[0x1F4188790](v5);
    id v7 = (uint64_t *)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    id v9 = sub_1DEFC0AC4(*v7, (uint64_t)v10, v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return (uint64_t)v9;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DEFBF288(void *a1)
{
  return sub_1DEFBF324(a1, (void (*)(void))type metadata accessor for NewsOpenInNewWindowCommandHandler);
}

void sub_1DEFBF2A0(uint64_t a1, void *a2)
{
}

uint64_t sub_1DEFBF2E0(uint64_t a1)
{
  return sub_1DE9D9684(a1, (void (*)(void))type metadata accessor for NewsOpenInNewTabCommandHandler);
}

uint64_t sub_1DEFBF30C(void *a1)
{
  return sub_1DEFBF324(a1, (void (*)(void))type metadata accessor for NewsOpenInNewTabCommandHandler);
}

uint64_t sub_1DEFBF324(void *a1, void (*a2)(void))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA7F20);
  uint64_t result = sub_1DFDECCC0();
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1DE942EC4(&v9, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAD1860);
  uint64_t result = sub_1DFDECCC0();
  if (v8)
  {
    a2(0);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    sub_1DEFC0CD4((uint64_t)v11, v6 + 24);
    sub_1DE942EC4(&v7, v6 + 64);
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1DEFBF47C(uint64_t a1, void *a2)
{
}

void sub_1DEFBF4BC(uint64_t a1, void *a2, void (*a3)(void), void (*a4)(void), void (*a5)(void))
{
  id v9 = objc_msgSend(self, sel_sharedApplication);
  unsigned int v10 = objc_msgSend(v9, sel_supportsMultipleScenes);

  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    a3(0);
    if (sub_1DFDECCB0())
    {
      swift_getObjectType();
      sub_1DFDF5710();
      a4();
      sub_1DFDFB390();
      a5();
      sub_1DFDF1B60();
      swift_release();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DEFBF604(uint64_t a1)
{
  return sub_1DE98FB58(a1, (void (*)(void))type metadata accessor for OpenMainWindowCommandHandler);
}

uint64_t sub_1DEFBF630(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for OpenMainWindowCommandHandler();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DEFBF6A0(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(self, sel_sharedApplication);
  unsigned int v4 = objc_msgSend(v3, sel_supportsMultipleScenes);

  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    type metadata accessor for OpenMainWindowCommandHandler();
    if (sub_1DFDECCB0())
    {
      swift_getObjectType();
      if (qword_1EBAEC318 != -1) {
        swift_once();
      }
      sub_1DE9F51AC(&qword_1EBAF0BF0, (void (*)(uint64_t))type metadata accessor for OpenMainWindowCommandHandler);
      sub_1DFDF1B60();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DEFBF804(uint64_t a1)
{
  return sub_1DE98FB58(a1, (void (*)(void))type metadata accessor for DebugMenuCommandHandler);
}

uint64_t sub_1DEFBF830()
{
  type metadata accessor for DebugMenuCommandHandler();
  return swift_allocObject();
}

uint64_t sub_1DEFBF864(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for DebugMenuCommandHandler();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EBABE5F8 != -1) {
      swift_once();
    }
    sub_1DE9F51AC(&qword_1EBAAFFE0, (void (*)(uint64_t))type metadata accessor for DebugMenuCommandHandler);
    sub_1DFDF1B60();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEFBF988(uint64_t a1)
{
  return sub_1DE9D9684(a1, (void (*)(void))type metadata accessor for CommandObserver);
}

uint64_t sub_1DEFBF9B4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
  uint64_t result = sub_1DFDECCC0();
  if (!v15)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDEB260();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDEB320();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAF8D40);
  uint64_t result = sub_1DFDECCC0();
  if (!v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAB0740);
  uint64_t result = sub_1DFDECCC0();
  if (!v12)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAE9FE0);
  uint64_t result = sub_1DFDECCC0();
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAE9F00);
  uint64_t result = sub_1DFDECCC0();
  if (v8)
  {
    type metadata accessor for CommandObserver();
    swift_allocObject();
    uint64_t v6 = sub_1DE9DBF98(v15, v16, v3, v4, v13, v14, (uint64_t)v11, v5, (uint64_t)v9, (uint64_t)v7);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    return (uint64_t)v6;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1DEFBFCB8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v3 = v24;
  if (!v24)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = v25;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAD5F60);
  uint64_t result = sub_1DFDECCC0();
  if (!v23)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA7AB0);
  uint64_t result = sub_1DFDECCC0();
  if (v21)
  {
    uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    MEMORY[0x1F4188790](v5);
    long long v7 = (void *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for UpsellManager();
    v19[3] = v10;
    void v19[4] = &off_1F3ACA200;
    v19[0] = v9;
    type metadata accessor for ChannelUpsellCommandObserver();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    MEMORY[0x1F4188790](v12);
    uint64_t v14 = (void *)((char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = *v14;
    v18[3] = v10;
    v18[4] = &off_1F3ACA200;
    v18[0] = v16;
    *(void *)(v11 + 16) = v3;
    *(void *)(v11 + 24) = v4;
    sub_1DE94F204((uint64_t)v20, v11 + 32);
    uint64_t v17 = *__swift_project_boxed_opaque_existential_1(v18, v10);
    swift_unknownObjectRetain();
    sub_1DE96E6AC(v17, v11);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return v11;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DEFBFFD0(void *a1)
{
  return sub_1DE9A1D88(a1, (void (*)(void))type metadata accessor for DiscoverChannelTopicCommandHandler);
}

uint64_t sub_1DEFBFFE8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAB0FF0);
  uint64_t result = sub_1DFDECCC0();
  if (!v17)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAEF0);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAE2840);
  uint64_t result = sub_1DFDECCC0();
  if (!v16)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAB0740);
  uint64_t result = sub_1DFDECCC0();
  if (!v14)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBAB0140);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBABA480);
  uint64_t result = sub_1DFDECCC0();
  if (!v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBADDD00);
  uint64_t result = sub_1DFDECCC0();
  if (v10)
  {
    type metadata accessor for ManageChannelNotificationsCommandHandler();
    uint64_t v8 = (void *)swift_allocObject();
    void v8[4] = v17;
    v8[5] = v3;
    long long v8[2] = v4;
    v8[3] = v5;
    v8[6] = v6;
    sub_1DE942EC4(&v15, (uint64_t)(v8 + 7));
    sub_1DE942EC4(&v13, (uint64_t)(v8 + 12));
    v8[17] = v7;
    sub_1DE942EC4(&v11, (uint64_t)(v8 + 18));
    sub_1DE942EC4(&v9, (uint64_t)(v8 + 23));
    return (uint64_t)v8;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1DEFC031C(uint64_t a1)
{
  return sub_1DE9D9684(a1, (void (*)(void))type metadata accessor for ManageMySportsCommandHandler);
}

uint64_t sub_1DEFC0348(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBAB0140);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBABA480);
  uint64_t result = sub_1DFDECCC0();
  if (v8)
  {
    type metadata accessor for ManageMySportsCommandHandler();
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = v3;
    v6[3] = v4;
    _OWORD v6[4] = v5;
    sub_1DE942EC4(&v7, (uint64_t)(v6 + 5));
    return (uint64_t)v6;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DEFC04BC(uint64_t a1, void *a2)
{
  return sub_1DEFC0874(a1, a2, (void (*)(void))type metadata accessor for ManageMySportsCommandHandler, MEMORY[0x1E4F7F120], (void (*)(void))sub_1DEACEAB8);
}

uint64_t sub_1DEFC04FC(uint64_t a1)
{
  return sub_1DE9D9684(a1, (void (*)(void))type metadata accessor for ManageNotificationsCommandHandler);
}

void *sub_1DEFC0528(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAB0FF0);
  uint64_t result = (void *)sub_1DFDECCC0();
  if (!v5)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = (void *)sub_1DFDECCB0();
  if (result)
  {
    uint64_t v4 = result;
    type metadata accessor for ManageNotificationsCommandHandler();
    uint64_t result = (void *)swift_allocObject();
    result[4] = v5;
    result[5] = v6;
    result[2] = v3;
    result[3] = v4;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DEFC0644(uint64_t a1, void *a2)
{
  return sub_1DEFC0874(a1, a2, (void (*)(void))type metadata accessor for ManageNotificationsCommandHandler, MEMORY[0x1E4F7F108], (void (*)(void))sub_1DEAC8040);
}

uint64_t sub_1DEFC0684(uint64_t a1)
{
  return sub_1DE9D9684(a1, (void (*)(void))type metadata accessor for ManageBlockedChannelTopicCommandHandler);
}

uint64_t sub_1DEFC06B0(void *a1)
{
  return sub_1DE9A1D88(a1, (void (*)(void))type metadata accessor for ManageBlockedChannelTopicCommandHandler);
}

uint64_t sub_1DEFC06C8(uint64_t a1, void *a2)
{
  return sub_1DEFC0874(a1, a2, (void (*)(void))type metadata accessor for ManageBlockedChannelTopicCommandHandler, MEMORY[0x1E4F7F128], (void (*)(void))sub_1DEAC42CC);
}

uint64_t sub_1DEFC0708(uint64_t a1)
{
  return sub_1DE9D9684(a1, (void (*)(void))type metadata accessor for ManageSubscriptionsCommandHandler);
}

void *sub_1DEFC0734(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&unk_1EBABAB20);
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = (void *)sub_1DFDECCB0();
  if (result)
  {
    uint64_t v5 = result;
    type metadata accessor for ManageSubscriptionsCommandHandler();
    uint64_t result = (void *)swift_allocObject();
    result[3] = v5;
    result[4] = v4;
    result[2] = v3;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DEFC0834(uint64_t a1, void *a2)
{
  return sub_1DEFC0874(a1, a2, (void (*)(void))type metadata accessor for ManageSubscriptionsCommandHandler, MEMORY[0x1E4F7F110], (void (*)(void))sub_1DEAC800C);
}

uint64_t sub_1DEFC0874(uint64_t a1, void *a2, void (*a3)(void), void (*a4)(void), void (*a5)(void))
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  a3(0);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    swift_getObjectType();
    a4();
    a5();
    sub_1DFDF1B60();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DEFC096C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleArchiveFilterOptionsManager();
  v16[3] = v4;
  v16[4] = &off_1F3AB0A98;
  v16[0] = a1;
  uint64_t v5 = (objc_class *)type metadata accessor for PuzzleArchiveFilterCommandHandler();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v4);
  MEMORY[0x1F4188790](v7);
  long long v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  uint64_t v11 = *v9;
  v15[3] = v4;
  v15[4] = &off_1F3AB0A98;
  v15[0] = v11;
  sub_1DE94F204((uint64_t)v15, (uint64_t)&v6[OBJC_IVAR____TtC7NewsUI233PuzzleArchiveFilterCommandHandler_puzzleArchiveFilterOptionManager]);
  *(void *)&v6[OBJC_IVAR____TtC7NewsUI233PuzzleArchiveFilterCommandHandler_networkReachability] = a2;
  v14.receiver = v6;
  v14.super_class = v5;
  id v12 = objc_msgSendSuper2(&v14, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v12;
}

id sub_1DEFC0AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ShortcutsService();
  void v20[3] = v8;
  v20[4] = &off_1F3A78DD0;
  v20[0] = a1;
  long long v9 = (objc_class *)type metadata accessor for RemoveShortcutCommandHandler();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v8);
  MEMORY[0x1F4188790](v11);
  long long v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = *v13;
  v19[3] = v8;
  void v19[4] = &off_1F3A78DD0;
  v19[0] = v15;
  sub_1DE94F204((uint64_t)v19, (uint64_t)&v10[OBJC_IVAR____TtC7NewsUI228RemoveShortcutCommandHandler_shortcutsService]);
  sub_1DE94F204(a2, (uint64_t)&v10[OBJC_IVAR____TtC7NewsUI228RemoveShortcutCommandHandler_offlineProvider]);
  *(void *)&v10[OBJC_IVAR____TtC7NewsUI228RemoveShortcutCommandHandler_featureAvailability] = a3;
  *(void *)&v10[OBJC_IVAR____TtC7NewsUI228RemoveShortcutCommandHandler_bundleSubscriptionManager] = a4;
  v18.receiver = v10;
  v18.super_class = v9;
  id v16 = objc_msgSendSuper2(&v18, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v16;
}

uint64_t sub_1DEFC0C54()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEFC0C94(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_1DF416EB4(a1, a2, a3, (void *)(v3 + 16), *(void *)(v3 + 56));
}

uint64_t sub_1DEFC0CA0()
{
  return sub_1DE9F51AC((unint64_t *)&unk_1EBAEC6A8, (void (*)(uint64_t))type metadata accessor for NewsOpenInNewTabCommandHandler);
}

uint64_t sub_1DEFC0CD4(uint64_t a1, uint64_t a2)
{
  sub_1DEFC0D38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DEFC0D38()
{
  if (!qword_1EBAA7F30)
  {
    sub_1DE925C98(255, (unint64_t *)&unk_1EBAA7F20);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA7F30);
    }
  }
}

uint64_t sub_1DEFC0DA4()
{
  return sub_1DE9F51AC((unint64_t *)&unk_1EBAEC6B8, (void (*)(uint64_t))type metadata accessor for NewsOpenInNewWindowCommandHandler);
}

uint64_t sub_1DEFC0DD8()
{
  return sub_1DE9F51AC((unint64_t *)&unk_1EBAF8208, (void (*)(uint64_t))type metadata accessor for NewslettersStateCommandHandler);
}

uint64_t sub_1DEFC0E0C()
{
  return sub_1DE9F51AC((unint64_t *)&unk_1EBAF8298, (void (*)(uint64_t))type metadata accessor for FamilyStatusStateCommandHandler);
}

uint64_t sub_1DEFC0E40()
{
  return sub_1DE9F51AC((unint64_t *)&unk_1EBAF8340, (void (*)(uint64_t))type metadata accessor for NotificationsStateCommandHandler);
}

uint64_t sub_1DEFC0E74()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DEFC0EAC(uint64_t a1, uint64_t a2)
{
  return sub_1DF213588(a1, a2, v2);
}

uint64_t *sub_1DEFC0EB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *a1 = *a2;
      sub_1DEC84AA4();
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1DFDEEE80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1DEFC0FC8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    sub_1DEC84AA4();
    uint64_t v4 = a1 + *(int *)(v3 + 48);
    uint64_t v5 = sub_1DFDEEE80();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *sub_1DEFC1050(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    sub_1DEC84AA4();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DEFC1120(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEFC545C((uint64_t)a1, type metadata accessor for FeedPaywallType);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      sub_1DEC84AA4();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1DFDEEE80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1DEFC1214(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    sub_1DEC84AA4();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DEFC12E4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEFC545C((uint64_t)a1, type metadata accessor for FeedPaywallType);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      sub_1DEC84AA4();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1DFDEEE80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t *sub_1DEFC13D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DFDE7220();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    uint64_t v15 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    id v16 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v16;
    uint64_t v17 = a3[10];
    uint64_t v18 = a3[11];
    uint64_t v19 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v4 + v17) = (uint64_t)v19;
    id v20 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)v4 + v18) = (uint64_t)v20;
    uint64_t v21 = a3[12];
    uint64_t v22 = a3[13];
    uint64_t v23 = *(void **)((char *)a2 + v21);
    *(uint64_t *)((char *)v4 + v21) = (uint64_t)v23;
    unint64_t v68 = *(void **)((char *)a2 + v22);
    *(uint64_t *)((char *)v4 + v22) = (uint64_t)v68;
    uint64_t v24 = a3[14];
    uint64_t v25 = a3[15];
    uint64_t v67 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)v4 + v24) = (uint64_t)v67;
    uint64_t v71 = *(void **)((char *)a2 + v25);
    *(uint64_t *)((char *)v4 + v25) = (uint64_t)v71;
    uint64_t v26 = a3[16];
    uint64_t v27 = a3[17];
    uint64_t v70 = *(void **)((char *)a2 + v26);
    *(uint64_t *)((char *)v4 + v26) = (uint64_t)v70;
    uint64_t v73 = *(void **)((char *)a2 + v27);
    *(uint64_t *)((char *)v4 + v27) = (uint64_t)v73;
    uint64_t v28 = a3[18];
    uint64_t v29 = a3[19];
    unint64_t v72 = *(void **)((char *)a2 + v28);
    *(uint64_t *)((char *)v4 + v28) = (uint64_t)v72;
    os_log_type_t v30 = (uint64_t *)((char *)v4 + v29);
    uint64_t v31 = (uint64_t *)((char *)a2 + v29);
    uint64_t v69 = v31[1];
    *os_log_type_t v30 = *v31;
    v30[1] = v69;
    uint64_t v32 = a3[20];
    uint64_t v33 = a3[21];
    uint64_t v34 = (uint64_t *)((char *)v4 + v32);
    uint64_t v35 = (uint64_t *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    id v37 = (uint64_t *)((char *)v4 + v33);
    unint64_t v38 = (uint64_t *)((char *)a2 + v33);
    uint64_t v39 = v38[1];
    *id v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = a3[22];
    double v65 = (char *)a2 + v40;
    uint64_t v66 = (char *)v4 + v40;
    uint64_t v41 = sub_1DFDEF360();
    double v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    id v42 = v16;
    id v43 = v19;
    id v44 = v20;
    id v45 = v23;
    id v46 = v68;
    id v47 = v67;
    id v48 = v71;
    id v49 = v70;
    id v50 = v73;
    id v51 = v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64(v66, v65, v41);
    uint64_t v52 = a3[23];
    uint64_t v53 = a3[24];
    uint64_t v54 = (uint64_t *)((char *)v4 + v52);
    uint64_t v55 = (uint64_t *)((char *)a2 + v52);
    uint64_t v56 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v56;
    id v57 = (char *)v4 + v53;
    id v58 = (char *)a2 + v53;
    uint64_t v59 = sub_1DFDEF130();
    uint64_t v60 = *(void *)(v59 - 8);
    id v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
    swift_bridgeObjectRetain();
    if (v61(v58, 1, v59))
    {
      sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      memcpy(v57, v58, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
  }
  return v4;
}

uint64_t sub_1DEFC17F8(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1DFDE7220();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[22];
  uint64_t v8 = sub_1DFDEF360();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[24];
  uint64_t v10 = sub_1DFDEF130();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

unsigned char *sub_1DEFC1A60(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DFDE7220();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v14 = *(void **)&a2[v13];
  *(void *)&a1[v13] = v14;
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  uint64_t v17 = *(void **)&a2[v15];
  *(void *)&a1[v15] = v17;
  uint64_t v18 = *(void **)&a2[v16];
  *(void *)&a1[v16] = v18;
  uint64_t v19 = a3[12];
  uint64_t v20 = a3[13];
  uint64_t v21 = *(void **)&a2[v19];
  *(void *)&a1[v19] = v21;
  uint64_t v66 = *(void **)&a2[v20];
  *(void *)&a1[v20] = v66;
  uint64_t v22 = a3[14];
  uint64_t v23 = a3[15];
  double v65 = *(void **)&a2[v22];
  *(void *)&a1[v22] = v65;
  uint64_t v69 = *(void **)&a2[v23];
  *(void *)&a1[v23] = v69;
  uint64_t v24 = a3[16];
  uint64_t v25 = a3[17];
  unint64_t v68 = *(void **)&a2[v24];
  *(void *)&a1[v24] = v68;
  uint64_t v71 = *(void **)&a2[v25];
  *(void *)&a1[v25] = v71;
  uint64_t v26 = a3[18];
  uint64_t v27 = a3[19];
  uint64_t v70 = *(void **)&a2[v26];
  *(void *)&a1[v26] = v70;
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v67 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v67;
  uint64_t v30 = a3[20];
  uint64_t v31 = a3[21];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = &a2[v30];
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = &a1[v31];
  uint64_t v36 = &a2[v31];
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = a3[22];
  double v63 = &a2[v38];
  double v64 = &a1[v38];
  uint64_t v39 = sub_1DFDEF360();
  uint64_t v62 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 16);
  id v40 = v14;
  id v41 = v17;
  id v42 = v18;
  id v43 = v21;
  id v44 = v66;
  id v45 = v65;
  id v46 = v69;
  id v47 = v68;
  id v48 = v71;
  id v49 = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v62(v64, v63, v39);
  uint64_t v50 = a3[23];
  uint64_t v51 = a3[24];
  uint64_t v52 = &a1[v50];
  uint64_t v53 = &a2[v50];
  uint64_t v54 = v53[1];
  *uint64_t v52 = *v53;
  v52[1] = v54;
  uint64_t v55 = &a1[v51];
  uint64_t v56 = &a2[v51];
  uint64_t v57 = sub_1DFDEF130();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v58 + 48);
  swift_bridgeObjectRetain();
  if (v59(v56, 1, v57))
  {
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v55, v56, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  return a1;
}

unsigned char *sub_1DEFC1E30(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DFDE7220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v15 = a3[9];
  uint64_t v16 = *(void **)&a1[v15];
  uint64_t v17 = *(void **)&a2[v15];
  *(void *)&a1[v15] = v17;
  id v18 = v17;

  uint64_t v19 = a3[10];
  uint64_t v20 = *(void **)&a1[v19];
  uint64_t v21 = *(void **)&a2[v19];
  *(void *)&a1[v19] = v21;
  id v22 = v21;

  uint64_t v23 = a3[11];
  uint64_t v24 = *(void **)&a1[v23];
  uint64_t v25 = *(void **)&a2[v23];
  *(void *)&a1[v23] = v25;
  id v26 = v25;

  uint64_t v27 = a3[12];
  uint64_t v28 = *(void **)&a2[v27];
  uint64_t v29 = *(void **)&a1[v27];
  *(void *)&a1[v27] = v28;
  id v30 = v28;

  uint64_t v31 = a3[13];
  uint64_t v32 = *(void **)&a1[v31];
  uint64_t v33 = *(void **)&a2[v31];
  *(void *)&a1[v31] = v33;
  id v34 = v33;

  uint64_t v35 = a3[14];
  uint64_t v36 = *(void **)&a1[v35];
  uint64_t v37 = *(void **)&a2[v35];
  *(void *)&a1[v35] = v37;
  id v38 = v37;

  uint64_t v39 = a3[15];
  id v40 = *(void **)&a1[v39];
  id v41 = *(void **)&a2[v39];
  *(void *)&a1[v39] = v41;
  id v42 = v41;

  uint64_t v43 = a3[16];
  id v44 = *(void **)&a1[v43];
  id v45 = *(void **)&a2[v43];
  *(void *)&a1[v43] = v45;
  id v46 = v45;

  uint64_t v47 = a3[17];
  id v48 = *(void **)&a1[v47];
  id v49 = *(void **)&a2[v47];
  *(void *)&a1[v47] = v49;
  id v50 = v49;

  uint64_t v51 = a3[18];
  uint64_t v52 = *(void **)&a1[v51];
  uint64_t v53 = *(void **)&a2[v51];
  *(void *)&a1[v51] = v53;
  id v54 = v53;

  uint64_t v55 = a3[19];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  *uint64_t v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = a3[20];
  uint64_t v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  *uint64_t v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = a3[21];
  uint64_t v62 = &a1[v61];
  double v63 = &a2[v61];
  void *v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = a3[22];
  double v65 = &a1[v64];
  uint64_t v66 = &a2[v64];
  uint64_t v67 = sub_1DFDEF360();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v67 - 8) + 24))(v65, v66, v67);
  uint64_t v68 = a3[23];
  uint64_t v69 = &a1[v68];
  uint64_t v70 = &a2[v68];
  void *v69 = *v70;
  v69[1] = v70[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v71 = a3[24];
  unint64_t v72 = &a1[v71];
  uint64_t v73 = &a2[v71];
  uint64_t v74 = sub_1DFDEF130();
  uint64_t v75 = *(void *)(v74 - 8);
  char v76 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v75 + 48);
  LODWORD(v66) = v76(v72, 1, v74);
  int v77 = v76(v73, 1, v74);
  if (!v66)
  {
    if (!v77)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v75 + 24))(v72, v73, v74);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v72, v74);
    goto LABEL_12;
  }
  if (v77)
  {
LABEL_12:
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v72, v73, *(void *)(*(void *)(v78 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v75 + 16))(v72, v73, v74);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  return a1;
}

unsigned char *sub_1DEFC2328(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DFDE7220();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v14 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  uint64_t v16 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  uint64_t v17 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[19];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[21];
  *(_OWORD *)&a1[a3[20]] = *(_OWORD *)&a2[a3[20]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  uint64_t v20 = a3[22];
  uint64_t v21 = &a1[v20];
  id v22 = &a2[v20];
  uint64_t v23 = sub_1DFDEF360();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[24];
  *(_OWORD *)&a1[a3[23]] = *(_OWORD *)&a2[a3[23]];
  uint64_t v25 = &a1[v24];
  id v26 = &a2[v24];
  uint64_t v27 = sub_1DFDEF130();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  return a1;
}

unsigned char *sub_1DEFC2644(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DFDE7220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  uint64_t v16 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v17 = *(void **)&a1[v16];
  *(void *)&a1[v16] = *(void *)&a2[v16];

  uint64_t v18 = a3[10];
  uint64_t v19 = *(void **)&a1[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];

  uint64_t v20 = a3[11];
  uint64_t v21 = *(void **)&a1[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];

  uint64_t v22 = a3[12];
  uint64_t v23 = *(void **)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];

  uint64_t v24 = a3[13];
  uint64_t v25 = *(void **)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];

  uint64_t v26 = a3[14];
  uint64_t v27 = *(void **)&a1[v26];
  *(void *)&a1[v26] = *(void *)&a2[v26];

  uint64_t v28 = a3[15];
  uint64_t v29 = *(void **)&a1[v28];
  *(void *)&a1[v28] = *(void *)&a2[v28];

  uint64_t v30 = a3[16];
  uint64_t v31 = *(void **)&a1[v30];
  *(void *)&a1[v30] = *(void *)&a2[v30];

  uint64_t v32 = a3[17];
  uint64_t v33 = *(void **)&a1[v32];
  *(void *)&a1[v32] = *(void *)&a2[v32];

  uint64_t v34 = a3[18];
  uint64_t v35 = *(void **)&a1[v34];
  *(void *)&a1[v34] = *(void *)&a2[v34];

  uint64_t v36 = a3[19];
  uint64_t v37 = &a1[v36];
  id v38 = (uint64_t *)&a2[v36];
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[20];
  id v42 = &a1[v41];
  uint64_t v43 = (uint64_t *)&a2[v41];
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *id v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[21];
  uint64_t v47 = &a1[v46];
  id v48 = (uint64_t *)&a2[v46];
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  *uint64_t v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[22];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  uint64_t v54 = sub_1DFDEF360();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = a3[23];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = (uint64_t *)&a2[v55];
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  *uint64_t v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = a3[24];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  uint64_t v63 = sub_1DFDEF130();
  uint64_t v64 = *(void *)(v63 - 8);
  double v65 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v64 + 48);
  LODWORD(v53) = v65(v61, 1, v63);
  int v66 = v65(v62, 1, v63);
  if (!v53)
  {
    if (!v66)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v64 + 40))(v61, v62, v63);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_12;
  }
  if (v66)
  {
LABEL_12:
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v64 + 32))(v61, v62, v63);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  return a1;
}

uint64_t sub_1DEFC2ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFC2AE0);
}

uint64_t sub_1DEFC2AE0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_9:
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v13(a1 + v9, a2, v7);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + a3[12]);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v12 = sub_1DFDEF360();
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
    {
      uint64_t v7 = v12;
      uint64_t v8 = *(void *)(v12 - 8);
      uint64_t v9 = a3[22];
      goto LABEL_9;
    }
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[24];
    return v15(v17, a2, v16);
  }
}

uint64_t sub_1DEFC2C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFC2CA8);
}

void sub_1DEFC2CA8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    int v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13(a1 + v11, a2, a2, v9);
    return;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[12]) = (a2 - 1);
    return;
  }
  uint64_t v12 = sub_1DFDEF360();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[22];
    goto LABEL_7;
  }
  sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a4[24];
  v15(v17, a2, a2, v16);
}

void *sub_1DEFC2E5C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v8 = (void *)a2[1];
    uint64_t v7 = (void *)a2[2];
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v7;
    uint64_t v9 = (void *)a2[3];
    uint64_t v37 = (void *)a2[4];
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v37;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v34 = (void *)a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v34;
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    uint64_t v11 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    uint64_t v12 = a2[14];
    uint64_t v13 = a3[16];
    uint64_t v35 = (uint64_t)a2 + v13;
    uint64_t v36 = a1 + v13;
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v12;
    uint64_t v14 = sub_1DFDEF360();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    id v15 = v8;
    id v16 = v7;
    id v17 = v9;
    id v18 = v37;
    id v19 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v36, v35, v14);
    uint64_t v20 = a3[17];
    uint64_t v21 = a3[18];
    uint64_t v22 = (void *)((char *)v4 + v20);
    uint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (char *)v4 + v21;
    uint64_t v26 = (char *)a2 + v21;
    uint64_t v27 = sub_1DFDEF130();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    if (v29(v26, 1, v27))
    {
      sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return v4;
}

uint64_t sub_1DEFC30D4(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 64);
  uint64_t v5 = sub_1DFDEF360();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 72);
  uint64_t v7 = sub_1DFDEF130();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t sub_1DEFC3238(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v34 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v34;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v8 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  uint64_t v12 = a3[16];
  uint64_t v32 = a2 + v12;
  uint64_t v33 = a1 + v12;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v13 = sub_1DFDEF360();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  id v14 = v6;
  id v15 = v5;
  id v16 = v7;
  id v17 = v34;
  id v18 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31(v33, v32, v13);
  uint64_t v19 = a3[17];
  uint64_t v20 = a3[18];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)(a1 + v20);
  uint64_t v25 = (const void *)(a2 + v20);
  uint64_t v26 = sub_1DFDEF130();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  if (v28(v25, 1, v26))
  {
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_1DEFC3458(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v7 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v7;
  id v8 = v7;

  uint64_t v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v10;
  id v11 = v10;

  uint64_t v12 = *(void **)(a1 + 24);
  uint64_t v13 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v13;
  id v14 = v13;

  id v15 = *(void **)(a1 + 32);
  id v16 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v16;
  id v17 = v16;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  id v18 = *(void **)(a2 + 64);
  uint64_t v19 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v18;
  id v20 = v18;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[16];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1DFDEF360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = a3[17];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[18];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = sub_1DFDEF130();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  LODWORD(v23) = v33(v29, 1, v31);
  int v34 = v33(v30, 1, v31);
  if (!v23)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 24))(v29, v30, v31);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_6;
  }
  if (v34)
  {
LABEL_6:
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v29, v30, v31);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  return a1;
}

uint64_t sub_1DEFC3740(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v7 = a3[16];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v10 = sub_1DFDEF360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_1DFDEF130();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DEFC38FC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v9 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v10 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[16];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1DFDEF360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = a3[17];
  uint64_t v19 = (void *)(a1 + v18);
  id v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[18];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = sub_1DFDEF130();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v16) = v28(v24, 1, v26);
  int v29 = v28(v25, 1, v26);
  if (!v16)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1DEFC3B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFC3B9C);
}

uint64_t sub_1DEFC3B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDEF360();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 64);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 72);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DEFC3CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFC3CF8);
}

uint64_t sub_1DEFC3CF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 64) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDEF360();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 64);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 72);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1DEFC3E40(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (void *)(a1 + v8);
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1DFDE7220();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(void *)(a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      *(void *)(a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(void *)(a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      uint64_t v40 = v7[9];
      uint64_t v41 = *(void **)((char *)a2 + v40);
      *(void *)(a1 + v40) = v41;
      uint64_t v42 = v7[10];
      uint64_t v43 = *(void **)((char *)a2 + v42);
      *(void *)(a1 + v42) = v43;
      uint64_t v44 = v7[11];
      uint64_t v45 = *(void **)((char *)a2 + v44);
      *(void *)(a1 + v44) = v45;
      uint64_t v46 = v7[12];
      uint64_t v47 = *(void **)((char *)a2 + v46);
      *(void *)(a1 + v46) = v47;
      uint64_t v48 = v7[13];
      uint64_t v87 = *(void **)((char *)a2 + v48);
      *(void *)(a1 + v48) = v87;
      uint64_t v49 = v7[14];
      int v90 = *(void **)((char *)a2 + v49);
      *(void *)(a1 + v49) = v90;
      uint64_t v50 = v7[15];
      uint64_t v92 = *(void **)((char *)a2 + v50);
      *(void *)(a1 + v50) = v92;
      uint64_t v51 = v7[16];
      uint64_t v94 = *(void **)((char *)a2 + v51);
      *(void *)(a1 + v51) = v94;
      uint64_t v52 = v7[17];
      v96 = *(void **)((char *)a2 + v52);
      *(void *)(a1 + v52) = v96;
      uint64_t v53 = v7[18];
      uint64_t v98 = *(void **)((char *)a2 + v53);
      *(void *)(a1 + v53) = v98;
      uint64_t v54 = v7[19];
      uint64_t v55 = (void *)(a1 + v54);
      uint64_t v56 = (uint64_t *)((char *)a2 + v54);
      uint64_t v88 = v56[1];
      *uint64_t v55 = *v56;
      v55[1] = v88;
      uint64_t v57 = v7[20];
      uint64_t v58 = (void *)(a1 + v57);
      uint64_t v59 = (uint64_t *)((char *)a2 + v57);
      uint64_t v60 = v59[1];
      *uint64_t v58 = *v59;
      v58[1] = v60;
      uint64_t v61 = v7[21];
      uint64_t v62 = (void *)(a1 + v61);
      uint64_t v63 = (uint64_t *)((char *)a2 + v61);
      uint64_t v64 = v63[1];
      void *v62 = *v63;
      v62[1] = v64;
      uint64_t v65 = v7[22];
      uint64_t v85 = (uint64_t)a2 + v65;
      uint64_t v86 = a1 + v65;
      uint64_t v66 = sub_1DFDEF360();
      unint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16);
      id v67 = v41;
      id v68 = v43;
      id v69 = v45;
      id v70 = v47;
      id v71 = v87;
      id v72 = v90;
      id v73 = v92;
      id v74 = v94;
      id v75 = v96;
      id v76 = v98;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84(v86, v85, v66);
      uint64_t v77 = v7[23];
      uint64_t v78 = (void *)(a1 + v77);
      uint64_t v79 = (uint64_t *)((char *)a2 + v77);
      uint64_t v80 = v79[1];
      *uint64_t v78 = *v79;
      v78[1] = v80;
      uint64_t v81 = v7[24];
      int v34 = (void *)(a1 + v81);
      uint64_t v35 = (char *)a2 + v81;
      uint64_t v36 = sub_1DFDEF130();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v82 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain();
      if (!v82(v35, 1, v36)) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v15 = (void *)a2[1];
      uint64_t v16 = (void *)a2[2];
      *(void *)(a1 + 8) = v15;
      *(void *)(a1 + 16) = v16;
      uint64_t v17 = (void *)a2[3];
      uint64_t v97 = (void *)a2[4];
      *(void *)(a1 + 24) = v17;
      *(void *)(a1 + 32) = v97;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      char v95 = (void *)a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = v95;
      uint64_t v18 = a2[10];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = v18;
      uint64_t v19 = a2[12];
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = v19;
      uint64_t v20 = a2[14];
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = v20;
      uint64_t v21 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
      uint64_t v22 = v21[16];
      uint64_t v91 = (uint64_t)a2 + v22;
      uint64_t v93 = a1 + v22;
      uint64_t v23 = sub_1DFDEF360();
      uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
      id v24 = v15;
      id v25 = v16;
      id v26 = v17;
      id v27 = v97;
      id v28 = v95;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v89(v93, v91, v23);
      uint64_t v29 = v21[17];
      uint64_t v30 = (void *)(a1 + v29);
      uint64_t v31 = (uint64_t *)((char *)a2 + v29);
      uint64_t v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      uint64_t v33 = v21[18];
      int v34 = (void *)(a1 + v33);
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_1DFDEF130();
      uint64_t v37 = *(void *)(v36 - 8);
      id v38 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain();
      if (!v38(v35, 1, v36))
      {
LABEL_10:
        (*(void (**)(void *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        goto LABEL_11;
      }
    }
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  uint64_t v14 = *a2;
  *(void *)a1 = *a2;
  a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_1DEFC44A0(id *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v3 = (char *)a1 + v2[5];
    uint64_t v4 = sub_1DFDE7220();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (char *)a1 + v2[22];
    uint64_t v7 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    uint64_t v8 = v2[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v10 = (char *)a1 + *(int *)(v9 + 64);
    uint64_t v11 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease();
    uint64_t v8 = *(int *)(v9 + 72);
  }
  uint64_t v12 = (char *)a1 + v8;
  uint64_t v13 = sub_1DFDEF130();
  uint64_t v16 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v13);
  if (!result)
  {
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
    return v15(v12, v13);
  }
  return result;
}

uint64_t sub_1DEFC47AC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v6 = v5[5];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    uint64_t v9 = sub_1DFDE7220();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
    *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
    *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
    uint64_t v37 = v5[9];
    id v38 = *(void **)(a2 + v37);
    *(void *)(a1 + v37) = v38;
    uint64_t v39 = v5[10];
    uint64_t v40 = *(void **)(a2 + v39);
    *(void *)(a1 + v39) = v40;
    uint64_t v41 = v5[11];
    uint64_t v42 = *(void **)(a2 + v41);
    *(void *)(a1 + v41) = v42;
    uint64_t v43 = v5[12];
    uint64_t v44 = *(void **)(a2 + v43);
    *(void *)(a1 + v43) = v44;
    uint64_t v45 = v5[13];
    unint64_t v84 = *(void **)(a2 + v45);
    *(void *)(a1 + v45) = v84;
    uint64_t v46 = v5[14];
    uint64_t v87 = *(void **)(a2 + v46);
    *(void *)(a1 + v46) = v87;
    uint64_t v47 = v5[15];
    uint64_t v89 = *(void **)(a2 + v47);
    *(void *)(a1 + v47) = v89;
    uint64_t v48 = v5[16];
    uint64_t v91 = *(void **)(a2 + v48);
    *(void *)(a1 + v48) = v91;
    uint64_t v49 = v5[17];
    uint64_t v93 = *(void **)(a2 + v49);
    *(void *)(a1 + v49) = v93;
    uint64_t v50 = v5[18];
    char v95 = *(void **)(a2 + v50);
    *(void *)(a1 + v50) = v95;
    uint64_t v51 = v5[19];
    uint64_t v52 = (void *)(a1 + v51);
    uint64_t v53 = (void *)(a2 + v51);
    uint64_t v85 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v85;
    uint64_t v54 = v5[20];
    uint64_t v55 = (void *)(a1 + v54);
    uint64_t v56 = (void *)(a2 + v54);
    uint64_t v57 = v56[1];
    *uint64_t v55 = *v56;
    v55[1] = v57;
    uint64_t v58 = v5[21];
    uint64_t v59 = (void *)(a1 + v58);
    uint64_t v60 = (void *)(a2 + v58);
    uint64_t v61 = v60[1];
    *uint64_t v59 = *v60;
    v59[1] = v61;
    uint64_t v62 = v5[22];
    uint64_t v82 = a2 + v62;
    uint64_t v83 = a1 + v62;
    uint64_t v63 = sub_1DFDEF360();
    uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16);
    id v64 = v38;
    id v65 = v40;
    id v66 = v42;
    id v67 = v44;
    id v68 = v84;
    id v69 = v87;
    id v70 = v89;
    id v71 = v91;
    id v72 = v93;
    id v73 = v95;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v81(v83, v82, v63);
    uint64_t v74 = v5[23];
    id v75 = (void *)(a1 + v74);
    id v76 = (void *)(a2 + v74);
    uint64_t v77 = v76[1];
    void *v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = v5[24];
    uint64_t v31 = (void *)(a1 + v78);
    uint64_t v32 = (const void *)(a2 + v78);
    uint64_t v33 = sub_1DFDEF130();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v79 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    if (!v79(v32, 1, v33)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v12 = *(void **)(a2 + 8);
    uint64_t v13 = *(void **)(a2 + 16);
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v13;
    uint64_t v14 = *(void **)(a2 + 24);
    uint64_t v94 = *(void **)(a2 + 32);
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v94;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    uint64_t v92 = *(void **)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v92;
    uint64_t v15 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v15;
    uint64_t v16 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v16;
    uint64_t v17 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v17;
    uint64_t v18 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v19 = v18[16];
    uint64_t v88 = a2 + v19;
    uint64_t v90 = a1 + v19;
    uint64_t v20 = sub_1DFDEF360();
    uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    id v21 = v12;
    id v22 = v13;
    id v23 = v14;
    id v24 = v94;
    id v25 = v92;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v86(v90, v88, v20);
    uint64_t v26 = v18[17];
    id v27 = (void *)(a1 + v26);
    id v28 = (void *)(a2 + v26);
    uint64_t v29 = v28[1];
    *id v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = v18[18];
    uint64_t v31 = (void *)(a1 + v30);
    uint64_t v32 = (const void *)(a2 + v30);
    uint64_t v33 = sub_1DFDEF130();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    if (!v35(v32, 1, v33))
    {
LABEL_8:
      (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_9;
    }
  }
  sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
  memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
LABEL_9:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DEFC4DC0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DEFC545C(a1, type metadata accessor for FeedPaywallModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = sub_1DFDE7220();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
      *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
      *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
      uint64_t v33 = v5[9];
      uint64_t v34 = *(void **)(a2 + v33);
      *(void *)(a1 + v33) = v34;
      uint64_t v35 = v5[10];
      uint64_t v36 = *(void **)(a2 + v35);
      *(void *)(a1 + v35) = v36;
      uint64_t v37 = v5[11];
      id v38 = *(void **)(a2 + v37);
      *(void *)(a1 + v37) = v38;
      uint64_t v39 = v5[12];
      uint64_t v40 = *(void **)(a2 + v39);
      *(void *)(a1 + v39) = v40;
      uint64_t v41 = v5[13];
      uint64_t v77 = *(void **)(a2 + v41);
      *(void *)(a1 + v41) = v77;
      uint64_t v42 = v5[14];
      uint64_t v79 = *(void **)(a2 + v42);
      *(void *)(a1 + v42) = v79;
      uint64_t v43 = v5[15];
      uint64_t v81 = *(void **)(a2 + v43);
      *(void *)(a1 + v43) = v81;
      uint64_t v44 = v5[16];
      uint64_t v83 = *(void **)(a2 + v44);
      *(void *)(a1 + v44) = v83;
      uint64_t v45 = v5[17];
      uint64_t v85 = *(void **)(a2 + v45);
      *(void *)(a1 + v45) = v85;
      uint64_t v46 = v5[18];
      uint64_t v87 = *(void **)(a2 + v46);
      *(void *)(a1 + v46) = v87;
      uint64_t v47 = v5[19];
      uint64_t v48 = (void *)(a1 + v47);
      uint64_t v49 = (void *)(a2 + v47);
      *uint64_t v48 = *v49;
      v48[1] = v49[1];
      uint64_t v50 = v5[20];
      uint64_t v51 = (void *)(a1 + v50);
      uint64_t v52 = (void *)(a2 + v50);
      *uint64_t v51 = *v52;
      v51[1] = v52[1];
      uint64_t v53 = v5[21];
      uint64_t v54 = (void *)(a1 + v53);
      uint64_t v55 = (void *)(a2 + v53);
      *uint64_t v54 = *v55;
      v54[1] = v55[1];
      uint64_t v56 = v5[22];
      uint64_t v75 = a2 + v56;
      uint64_t v76 = a1 + v56;
      uint64_t v57 = sub_1DFDEF360();
      uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
      id v58 = v34;
      id v59 = v36;
      id v60 = v38;
      id v61 = v40;
      id v62 = v77;
      id v63 = v79;
      id v64 = v81;
      id v65 = v83;
      id v66 = v85;
      id v67 = v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v74(v76, v75, v57);
      uint64_t v68 = v5[23];
      id v69 = (void *)(a1 + v68);
      id v70 = (void *)(a2 + v68);
      void *v69 = *v70;
      v69[1] = v70[1];
      uint64_t v71 = v5[24];
      id v27 = (void *)(a1 + v71);
      id v28 = (const void *)(a2 + v71);
      uint64_t v29 = sub_1DFDEF130();
      uint64_t v30 = *(void *)(v29 - 8);
      id v72 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      if (!v72(v28, 1, v29)) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v12 = *(void **)(a2 + 8);
      *(void *)(a1 + 8) = v12;
      uint64_t v13 = *(void **)(a2 + 16);
      *(void *)(a1 + 16) = v13;
      unint64_t v84 = *(void **)(a2 + 24);
      *(void *)(a1 + 24) = v84;
      uint64_t v86 = *(void **)(a2 + 32);
      *(void *)(a1 + 32) = v86;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v14 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v14;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      uint64_t v15 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
      uint64_t v16 = v15[16];
      uint64_t v80 = a2 + v16;
      uint64_t v82 = a1 + v16;
      uint64_t v17 = sub_1DFDEF360();
      uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
      id v18 = v12;
      id v19 = v13;
      id v20 = v84;
      id v21 = v86;
      id v22 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v78(v82, v80, v17);
      uint64_t v23 = v15[17];
      id v24 = (void *)(a1 + v23);
      id v25 = (void *)(a2 + v23);
      *id v24 = *v25;
      v24[1] = v25[1];
      uint64_t v26 = v15[18];
      id v27 = (void *)(a1 + v26);
      id v28 = (const void *)(a2 + v26);
      uint64_t v29 = sub_1DFDEF130();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      if (!v31(v28, 1, v29))
      {
LABEL_9:
        (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        goto LABEL_10;
      }
    }
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
LABEL_10:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DEFC545C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEFC54BC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v6 = v5[5];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    uint64_t v9 = sub_1DFDE7220();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
    *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
    *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
    *(void *)(a1 + v5[9]) = *(void *)(a2 + v5[9]);
    *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
    *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
    *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
    *(void *)(a1 + v5[13]) = *(void *)(a2 + v5[13]);
    *(void *)(a1 + v5[14]) = *(void *)(a2 + v5[14]);
    *(void *)(a1 + v5[15]) = *(void *)(a2 + v5[15]);
    *(void *)(a1 + v5[16]) = *(void *)(a2 + v5[16]);
    *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
    *(void *)(a1 + v5[18]) = *(void *)(a2 + v5[18]);
    *(_OWORD *)(a1 + v5[19]) = *(_OWORD *)(a2 + v5[19]);
    *(_OWORD *)(a1 + v5[20]) = *(_OWORD *)(a2 + v5[20]);
    *(_OWORD *)(a1 + v5[21]) = *(_OWORD *)(a2 + v5[21]);
    uint64_t v24 = v5[22];
    uint64_t v25 = a1 + v24;
    uint64_t v26 = a2 + v24;
    uint64_t v27 = sub_1DFDEF360();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
    *(_OWORD *)(a1 + v5[23]) = *(_OWORD *)(a2 + v5[23]);
    uint64_t v28 = v5[24];
    id v19 = (void *)(a1 + v28);
    id v20 = (const void *)(a2 + v28);
    uint64_t v21 = sub_1DFDEF130();
    uint64_t v22 = *(void *)(v21 - 8);
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
      goto LABEL_8;
    }
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v12;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    uint64_t v13 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v14 = v13[16];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    uint64_t v17 = sub_1DFDEF360();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)(a1 + v13[17]) = *(_OWORD *)(a2 + v13[17]);
    uint64_t v18 = v13[18];
    id v19 = (void *)(a1 + v18);
    id v20 = (const void *)(a2 + v18);
    uint64_t v21 = sub_1DFDEF130();
    uint64_t v22 = *(void *)(v21 - 8);
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
LABEL_8:
      (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_9;
    }
  }
  sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
  memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_9:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DEFC59C8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DEFC545C(a1, type metadata accessor for FeedPaywallModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = sub_1DFDE7220();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_1DE936104(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
      *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
      *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
      *(void *)(a1 + v5[9]) = *(void *)(a2 + v5[9]);
      *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
      *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
      *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
      *(void *)(a1 + v5[13]) = *(void *)(a2 + v5[13]);
      *(void *)(a1 + v5[14]) = *(void *)(a2 + v5[14]);
      *(void *)(a1 + v5[15]) = *(void *)(a2 + v5[15]);
      *(void *)(a1 + v5[16]) = *(void *)(a2 + v5[16]);
      *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
      *(void *)(a1 + v5[18]) = *(void *)(a2 + v5[18]);
      *(_OWORD *)(a1 + v5[19]) = *(_OWORD *)(a2 + v5[19]);
      *(_OWORD *)(a1 + v5[20]) = *(_OWORD *)(a2 + v5[20]);
      *(_OWORD *)(a1 + v5[21]) = *(_OWORD *)(a2 + v5[21]);
      uint64_t v24 = v5[22];
      uint64_t v25 = a1 + v24;
      uint64_t v26 = a2 + v24;
      uint64_t v27 = sub_1DFDEF360();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      *(_OWORD *)(a1 + v5[23]) = *(_OWORD *)(a2 + v5[23]);
      uint64_t v28 = v5[24];
      id v19 = (void *)(a1 + v28);
      id v20 = (const void *)(a2 + v28);
      uint64_t v21 = sub_1DFDEF130();
      uint64_t v22 = *(void *)(v21 - 8);
      if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
        goto LABEL_9;
      }
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v12 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v12;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      uint64_t v13 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
      uint64_t v14 = v13[16];
      uint64_t v15 = a1 + v14;
      uint64_t v16 = a2 + v14;
      uint64_t v17 = sub_1DFDEF360();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      *(_OWORD *)(a1 + v13[17]) = *(_OWORD *)(a2 + v13[17]);
      uint64_t v18 = v13[18];
      id v19 = (void *)(a1 + v18);
      id v20 = (const void *)(a2 + v18);
      uint64_t v21 = sub_1DFDEF130();
      uint64_t v22 = *(void *)(v21 - 8);
      if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
LABEL_9:
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        goto LABEL_10;
      }
    }
    sub_1DE936104(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_10:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FeedPaywallSizeVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFC5FC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedPaywallSizeVariant()
{
  return &type metadata for FeedPaywallSizeVariant;
}

unint64_t sub_1DEFC6000()
{
  unint64_t result = qword_1EAC274A0;
  if (!qword_1EAC274A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC274A0);
  }
  return result;
}

uint64_t sub_1DEFC6054(unint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (!v5) {
      return v6;
    }
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEA9B358(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0) {
      break;
    }
    uint64_t v8 = 0;
    uint64_t v6 = v19;
    while (v5 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1E01EE240](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v17 = v9;
      sub_1DEFC6D54(&v17, a2, v18);
      if (v3)
      {
        swift_release();

        return v6;
      }
      uint64_t v3 = 0;

      uint64_t v12 = v18[0];
      uint64_t v11 = v18[1];
      uint64_t v19 = v6;
      unint64_t v14 = *(void *)(v6 + 16);
      unint64_t v13 = *(void *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1DEA9B358(v13 > 1, v14 + 1, 1);
        uint64_t v6 = v19;
      }
      ++v8;
      *(void *)(v6 + 16) = v14 + 1;
      uint64_t v15 = v6 + 16 * v14;
      *(void *)(v15 + 32) = v12;
      *(void *)(v15 + 40) = v11;
      if (v5 == v8) {
        return v6;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFC61E0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81060], (uint64_t (*)(void))sub_1DEE17A24, type metadata accessor for AudioFeedModel);
}

uint64_t sub_1DEFC6234(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81060], (uint64_t (*)(void))sub_1DEE17C04, type metadata accessor for TagFeedModel);
}

uint64_t sub_1DEFC6288(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEE18140, (uint64_t (*)(void))type metadata accessor for AudioPlaylistFeedModel);
}

uint64_t sub_1DEFC62DC(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_1DEFC6B58(a1, a2, a3, (void (*)(uint64_t))sub_1DF3DD8C4);
}

uint64_t sub_1DEFC6308(void (*a1)(unint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v17 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v19 = *(void *)(*(void *)(a3 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    a1(&v18, &v19);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DF3DD8C4(v18);
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v17) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v17) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v17) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v17) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v17)
  {
LABEL_26:
    swift_release();
    return v20;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v17) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DEFC6500(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_1DEFC6B58(a1, a2, a3, (void (*)(uint64_t))sub_1DF3DDF4C);
}

uint64_t sub_1DEFC652C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEE18F80, type metadata accessor for SavedFeedModel);
}

uint64_t sub_1DEFC6580(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81060], (uint64_t (*)(void))sub_1DEE1965C, type metadata accessor for MagazineFeedModel);
}

uint64_t sub_1DEFC65D4(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEE199AC, type metadata accessor for HistoryFeedModel);
}

uint64_t sub_1DEFC6628(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEE17A24, type metadata accessor for AudioFeedModel);
}

uint64_t sub_1DEFC667C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEE1A528, type metadata accessor for SearchMoreModel);
}

uint64_t sub_1DEFC66D0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEE1AAF8, type metadata accessor for SearchModel);
}

uint64_t sub_1DEFC6724(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_1DEFC6B58(a1, a2, a3, (void (*)(uint64_t))sub_1DF3DF57C);
}

uint64_t sub_1DEFC6750(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEE1B494, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedModel);
}

uint64_t sub_1DEFC67A4(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DEFC67F8(a1, a2, a3, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEE1B624, type metadata accessor for SharedWithYouFeedModel);
}

uint64_t sub_1DEFC67F8(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v7 = *(void *)(a3 + 16);
  if (!v7) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v9 = *(void *)(a4(0) - 8);
  uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v32 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  while (1)
  {
    a1(&v34, v10);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11;
    }
    uint64_t v12 = v34;
    uint64_t v13 = *(void *)(v34 + 16);
    uint64_t v14 = *(void *)(v11 + 16);
    if (__OFADD__(v14, v13)) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native() && v14 + v13 <= *(void *)(v11 + 24) >> 1)
    {
      if (*(void *)(v12 + 16)) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v11 = a5();
      if (*(void *)(v12 + 16))
      {
LABEL_12:
        uint64_t v15 = *(void *)(v11 + 16);
        uint64_t v16 = (*(void *)(v11 + 24) >> 1) - v15;
        uint64_t v17 = *(void *)(a6(0) - 8);
        uint64_t v18 = *(void *)(v17 + 72);
        if (v16 < v13) {
          goto LABEL_27;
        }
        unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
        unint64_t v20 = v11 + v19 + v18 * v15;
        unint64_t v21 = v12 + v19;
        uint64_t v22 = v18 * v13;
        unint64_t v23 = v20 + v22;
        unint64_t v24 = v21 + v22;
        if (v21 < v23 && v20 < v24) {
          goto LABEL_29;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v26 = *(void *)(v11 + 16);
          BOOL v27 = __OFADD__(v26, v13);
          uint64_t v28 = v26 + v13;
          if (v27) {
            goto LABEL_28;
          }
          *(void *)(v11 + 16) = v28;
        }
        goto LABEL_4;
      }
    }
    if (v13) {
      goto LABEL_26;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v10 += v32;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DEFC6AA8(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_1DEFC6B58(a1, a2, a3, (void (*)(uint64_t))sub_1DF3DDF94);
}

uint64_t sub_1DEFC6AD4(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_1DEFC6B58(a1, a2, a3, (void (*)(uint64_t))sub_1DF3DF9A4);
}

uint64_t sub_1DEFC6B00(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_1DEFC6B58(a1, a2, a3, (void (*)(uint64_t))sub_1DF3DDF7C);
}

uint64_t sub_1DEFC6B2C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_1DEFC6B58(a1, a2, a3, (void (*)(uint64_t))sub_1DF3E0530);
}

uint64_t sub_1DEFC6B58(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (a3 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1DFDFFBE0();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v9 = i - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = MEMORY[0x1E01EE240](i - 4, a3);
          uint64_t v11 = i - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(a3 + 8 * i);
          swift_retain();
          uint64_t v11 = i - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        uint64_t v15 = v10;
        a1(&v14, &v15);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        swift_release();
        a4(v14);
        if (v11 == v7)
        {
          swift_bridgeObjectRelease();
          return v16;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void sub_1DEFC6D54(id *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  id v4 = *a1;
  id v5 = objc_msgSend(*a1, sel_identifier);
  uint64_t v28 = sub_1DFDFDD20();
  uint64_t v29 = v6;

  id v30 = v4;
  id v7 = objc_msgSend(v4, sel_identifier);
  uint64_t v8 = sub_1DFDFDD20();
  uint64_t v10 = v9;

  uint64_t v11 = *a2;
  if (*(void *)(*a2 + 16) && (unint64_t v12 = sub_1DEA6D930(v8, v10), (v13 & 1) != 0))
  {
    uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAF6EB0, MEMORY[0x1E4F7EFC0], MEMORY[0x1E4FBBE00]);
  uint64_t v15 = sub_1DFDF0590();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1DFE0CC10;
  unint64_t v20 = v19 + v18;
  unint64_t v21 = *(void (**)(unint64_t, void, uint64_t))(v16 + 104);
  v21(v20, *MEMORY[0x1E4F7EF30], v15);
  v21(v20 + v17, *MEMORY[0x1E4F7EF28], v15);
  v21(v20 + 2 * v17, *MEMORY[0x1E4F7EFB0], v15);
  uint64_t v22 = sub_1DF755F08(v19, v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v32 = *a2;
  *a2 = 0x8000000000000000;
  sub_1DFBC6818(v22, v28, v29, isUniquelyReferenced_nonNull_native);
  *a2 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v30, sel_identifier);
  uint64_t v25 = sub_1DFDFDD20();
  uint64_t v27 = v26;

  *a3 = v25;
  a3[1] = v27;
}

uint64_t sub_1DEFC7018@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v117 = a3;
  unint64_t v118 = a5;
  uint64_t v116 = a4;
  uint64_t v123 = a6;
  sub_1DEA75598(0, (unint64_t *)&unk_1EBAA7BC0, type metadata accessor for TodayModel, sub_1DEA9BDC4, MEMORY[0x1E4FABD50]);
  uint64_t v122 = v10;
  uint64_t v126 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  v127 = (char *)&v111 - v11;
  uint64_t v128 = type metadata accessor for TodayModel(0);
  uint64_t v124 = *(void *)(v128 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v128);
  uint64_t v125 = (uint64_t)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v129 = (uint64_t)&v111 - v14;
  sub_1DEA75880();
  MEMORY[0x1F4188790](v15 - 8);
  v121 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1DFDFA9F0();
  uint64_t v17 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v19 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = *(void *)(v6 + 88);
  uint64_t v119 = a2;
  sub_1DFDF6FB0();
  uint64_t v120 = a1;
  uint64_t v111 = sub_1DEA8605C(a1);
  uint64_t v113 = v20;
  uint64_t v131 = MEMORY[0x1E4FBC860];
  uint64_t v114 = v19;
  uint64_t v21 = sub_1DFDFA9E0();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    unint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v47 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v47) {
      goto LABEL_47;
    }
LABEL_24:
    uint64_t v48 = *(void *)(sub_1DFDFB040() - 8);
    unint64_t v49 = v26 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
    uint64_t v50 = *(void *)(v48 + 72);
    swift_bridgeObjectRetain();
    uint64_t v51 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v52 = sub_1DFDFB030();
      uint64_t v53 = *(void *)(v52 + 16);
      int64_t v54 = *(void *)(v51 + 16);
      int64_t v55 = v54 + v53;
      if (__OFADD__(v54, v53)) {
        goto LABEL_69;
      }
      uint64_t v7 = v52;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v55 <= *(void *)(v51 + 24) >> 1)
      {
        if (*(void *)(v7 + 16)) {
          goto LABEL_36;
        }
      }
      else
      {
        if (v54 <= v55) {
          int64_t v57 = v54 + v53;
        }
        else {
          int64_t v57 = v54;
        }
        uint64_t v51 = sub_1DEA9BDF8(isUniquelyReferenced_nonNull_native, v57, 1, v51);
        if (*(void *)(v7 + 16))
        {
LABEL_36:
          uint64_t v58 = *(void *)(v51 + 16);
          uint64_t v59 = (*(void *)(v51 + 24) >> 1) - v58;
          uint64_t v60 = *(void *)(sub_1DFDFC900() - 8);
          uint64_t v61 = *(void *)(v60 + 72);
          if (v59 < v53) {
            goto LABEL_72;
          }
          unint64_t v62 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
          unint64_t v63 = v51 + v62 + v61 * v58;
          unint64_t v64 = v7 + v62;
          uint64_t v65 = v61 * v53;
          unint64_t v66 = v63 + v65;
          unint64_t v67 = v64 + v65;
          if (v64 < v66 && v63 < v67) {
            goto LABEL_76;
          }
          swift_arrayInitWithCopy();
          if (v53)
          {
            uint64_t v69 = *(void *)(v51 + 16);
            BOOL v45 = __OFADD__(v69, v53);
            uint64_t v70 = v69 + v53;
            if (v45) {
              goto LABEL_74;
            }
            *(void *)(v51 + 16) = v70;
          }
          goto LABEL_26;
        }
      }
      if (v53) {
        goto LABEL_70;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      v49 += v50;
      if (!--v47)
      {
        uint64_t v71 = swift_bridgeObjectRelease_n();
        goto LABEL_48;
      }
    }
  }
  uint64_t v23 = *(void *)(sub_1DFDFBBE0() - 8);
  unint64_t v24 = v21 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  uint64_t v25 = *(void *)(v23 + 72);
  swift_bridgeObjectRetain();
  unint64_t v26 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v27 = sub_1DFDFBBC0();
    uint64_t v28 = *(void *)(v27 + 16);
    int64_t v29 = *(void *)(v26 + 16);
    int64_t v30 = v29 + v28;
    if (__OFADD__(v29, v28))
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    uint64_t v7 = v27;
    int v31 = swift_isUniquelyReferenced_nonNull_native();
    if (v31 && v30 <= *(void *)(v26 + 24) >> 1)
    {
      if (!*(void *)(v7 + 16)) {
        goto LABEL_3;
      }
    }
    else
    {
      if (v29 <= v30) {
        int64_t v32 = v29 + v28;
      }
      else {
        int64_t v32 = v29;
      }
      unint64_t v26 = sub_1DEE17D24(v31, v32, 1, v26);
      if (!*(void *)(v7 + 16))
      {
LABEL_3:
        if (v28) {
          goto LABEL_68;
        }
        goto LABEL_4;
      }
    }
    uint64_t v33 = *(void *)(v26 + 16);
    uint64_t v34 = (*(void *)(v26 + 24) >> 1) - v33;
    uint64_t v35 = *(void *)(sub_1DFDFB040() - 8);
    uint64_t v36 = *(void *)(v35 + 72);
    if (v34 < v28) {
      goto LABEL_71;
    }
    unint64_t v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    unint64_t v38 = v26 + v37 + v36 * v33;
    unint64_t v39 = v7 + v37;
    uint64_t v40 = v36 * v28;
    unint64_t v41 = v38 + v40;
    unint64_t v42 = v39 + v40;
    if (v39 < v41 && v38 < v42)
    {
LABEL_76:
      uint64_t result = sub_1DFDFFC60();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v28)
    {
      uint64_t v44 = *(void *)(v26 + 16);
      BOOL v45 = __OFADD__(v44, v28);
      uint64_t v46 = v44 + v28;
      if (v45) {
        goto LABEL_73;
      }
      *(void *)(v26 + 16) = v46;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v24 += v25;
    --v22;
  }
  while (v22);
  swift_bridgeObjectRelease_n();
  uint64_t v47 = *(void *)(v26 + 16);
  if (v47) {
    goto LABEL_24;
  }
LABEL_47:
  uint64_t v71 = swift_bridgeObjectRelease();
  uint64_t v51 = MEMORY[0x1E4FBC860];
LABEL_48:
  MEMORY[0x1F4188790](v71);
  uint64_t v72 = v112;
  *(&v111 - 8) = v116;
  *(&v111 - 7) = v72;
  uint64_t v73 = v111;
  *(&v111 - 6) = v117;
  *(&v111 - 5) = v73;
  uint64_t v108 = v113;
  unint64_t v109 = v118;
  uint64_t v110 = &v131;
  uint64_t v7 = sub_1DEFC67F8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1DEFCD0E4, (uint64_t)(&v111 - 10), v51, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEA9C680, type metadata accessor for TodayModel);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v114, v115);
  if (qword_1EBAC0170 != -1) {
LABEL_75:
  }
    swift_once();
  uint64_t v74 = qword_1EBB628A8;
  int v75 = sub_1DFDFEA60();
  sub_1DEA6AA34(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v76 = swift_allocObject();
  *(_OWORD *)(v76 + 16) = xmmword_1DFE0B750;
  uint64_t v77 = sub_1DFDF6EC0();
  uint64_t v79 = v78;
  *(void *)(v76 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v118 = sub_1DEA08668();
  uint64_t v119 = (void *)v76;
  *(void *)(v76 + 64) = v118;
  *(void *)(v76 + 32) = v77;
  *(void *)(v76 + 40) = v79;
  uint64_t v131 = 0;
  unint64_t v132 = 0xE000000000000000;
  int64_t v80 = *(void *)(v7 + 16);
  uint64_t v81 = MEMORY[0x1E4FBC860];
  if (v80)
  {
    LODWORD(v115) = v75;
    uint64_t v116 = v74;
    uint64_t v130 = MEMORY[0x1E4FBC860];
    sub_1DEA9B358(0, v80, 0);
    uint64_t v82 = *(unsigned __int8 *)(v124 + 80);
    uint64_t v117 = v7;
    uint64_t v83 = v7 + ((v82 + 32) & ~v82);
    uint64_t v84 = *(void *)(v124 + 72);
    uint64_t v81 = v130;
    int64_t v85 = v80;
    do
    {
      uint64_t v86 = v129;
      sub_1DEA8832C(v83, v129, type metadata accessor for TodayModel);
      uint64_t v87 = sub_1DEA8F24C();
      uint64_t v89 = v88;
      sub_1DEFC8BE4(v86, type metadata accessor for TodayModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA9B358(0, *(void *)(v81 + 16) + 1, 1);
        uint64_t v81 = v130;
      }
      unint64_t v91 = *(void *)(v81 + 16);
      unint64_t v90 = *(void *)(v81 + 24);
      if (v91 >= v90 >> 1)
      {
        sub_1DEA9B358(v90 > 1, v91 + 1, 1);
        uint64_t v81 = v130;
      }
      *(void *)(v81 + 16) = v91 + 1;
      uint64_t v92 = v81 + 16 * v91;
      *(void *)(v92 + 32) = v87;
      *(void *)(v92 + 40) = v89;
      v83 += v84;
      --v85;
    }
    while (v85);
    uint64_t v7 = v117;
  }
  uint64_t v93 = MEMORY[0x1E4FBB1A0];
  MEMORY[0x1E01ECA60](v81, MEMORY[0x1E4FBB1A0]);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v94 = v131;
  unint64_t v95 = v132;
  unint64_t v96 = v118;
  uint64_t v97 = v119;
  v119[12] = v93;
  v97[13] = v96;
  v97[9] = v94;
  v97[10] = v95;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v131 = v120;
  uint64_t v98 = v122;
  if (v80)
  {
    uint64_t v130 = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1DEA9D1E0(0, v80, 0);
    uint64_t v99 = v7 + ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80));
    uint64_t v100 = *(void *)(v124 + 72);
    uint64_t v101 = v129;
    do
    {
      sub_1DEA8832C(v99, v101, type metadata accessor for TodayModel);
      sub_1DEA8832C(v101, v125, type metadata accessor for TodayModel);
      sub_1DEA9BDC4();
      sub_1DFDF0B40();
      sub_1DEFC8BE4(v101, type metadata accessor for TodayModel);
      uint64_t v102 = v130;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA9D1E0(0, *(void *)(v102 + 16) + 1, 1);
        uint64_t v102 = v130;
      }
      unint64_t v104 = *(void *)(v102 + 16);
      unint64_t v103 = *(void *)(v102 + 24);
      if (v104 >= v103 >> 1)
      {
        sub_1DEA9D1E0(v103 > 1, v104 + 1, 1);
        uint64_t v102 = v130;
      }
      *(void *)(v102 + 16) = v104 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v126 + 32))(v102+ ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80))+ *(void *)(v126 + 72) * v104, v127, v98);
      uint64_t v130 = v102;
      v99 += v100;
      --v80;
    }
    while (v80);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v102 = MEMORY[0x1E4FBC860];
  }
  uint64_t v105 = sub_1DEA9D228((unint64_t *)&unk_1EBAA7BB0);
  uint64_t v106 = sub_1DEA9D228(&qword_1EBAA7BA8);
  MEMORY[0x1E01DBA90](v102, v98, v105, v106);
  sub_1DEA98AA4();
  sub_1DEA9BDC4();
  return sub_1DFDF14C0();
}

uint64_t sub_1DEFC7C30(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v6 = sub_1DFDF98F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 88))(v9, v6);
  int v11 = *MEMORY[0x1E4F80418];
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  id v12 = objc_msgSend(*(id *)(a2 + 232), sel_allSortedArticleIDsInReadingList);
  uint64_t v13 = sub_1DFDFE220();

  if (v10 == v11)
  {
    MEMORY[0x1F4188790](v14);
    *(void *)&v32[-16] = a2;
    uint64_t v15 = sub_1DE9C661C((uint64_t)sub_1DEFCD134, (uint64_t)&v32[-32], v13);
    uint64_t v16 = type metadata accessor for SavedStoriesTodayFeedGroup();
    a3 = sub_1DEC77BBC(*(void *)(a3 + *(int *)(v16 + 20)), v15);
    uint64_t v18 = v17;
    uint64_t v13 = v19;
    unint64_t v21 = v20;
    if ((v20 & 1) == 0) {
      goto LABEL_9;
    }
    sub_1DFDFFF90();
    swift_unknownObjectRetain_n();
    uint64_t v22 = swift_dynamicCastClass();
    if (!v22)
    {
      swift_unknownObjectRelease();
      uint64_t v22 = MEMORY[0x1E4FBC860];
    }
    uint64_t v23 = *(void *)(v22 + 16);
    swift_release();
    unint64_t v24 = (v21 >> 1) - v13;
    if (!__OFSUB__(v21 >> 1, v13))
    {
LABEL_13:
      if (v23 == v24)
      {
        uint64_t v29 = swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (v29) {
          return v29;
        }
        uint64_t v29 = MEMORY[0x1E4FBC860];
LABEL_16:
        swift_unknownObjectRelease();
        return v29;
      }
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v29 = sub_1DEC79154(a3, v18, v13, v21);
      goto LABEL_16;
    }
    __break(1u);
  }
  uint64_t v25 = type metadata accessor for SavedStoriesTodayFeedGroup();
  a3 = sub_1DEC77BBC(*(void *)(a3 + *(int *)(v25 + 20)), v13);
  uint64_t v18 = v26;
  uint64_t v13 = v27;
  unint64_t v21 = v28;
  if ((v28 & 1) == 0) {
    goto LABEL_9;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain_n();
  uint64_t v30 = swift_dynamicCastClass();
  if (!v30)
  {
    swift_unknownObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = *(void *)(v30 + 16);
  uint64_t result = swift_release();
  unint64_t v24 = (v21 >> 1) - v13;
  if (!__OFSUB__(v21 >> 1, v13)) {
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFC7F28@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  v121 = a4;
  unint64_t v122 = a3;
  uint64_t v127 = a5;
  sub_1DEA75598(0, (unint64_t *)&unk_1EBAA7BC0, type metadata accessor for TodayModel, sub_1DEA9BDC4, MEMORY[0x1E4FABD50]);
  uint64_t v126 = v8;
  uint64_t v130 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v131 = (char *)&v115 - v9;
  uint64_t v132 = type metadata accessor for TodayModel(0);
  uint64_t v128 = *(void *)(v132 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v132);
  uint64_t v129 = (uint64_t)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v133 = (uint64_t)&v115 - v12;
  sub_1DEA75880();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v125 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBCA06C(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1DFDFA9F0();
  uint64_t v18 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  unint64_t v20 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = *(void *)(v5 + 88);
  uint64_t v123 = a2;
  sub_1DFDF6FB0();
  uint64_t v124 = a1;
  uint64_t v115 = sub_1DEA8605C(a1);
  uint64_t v117 = v21;
  uint64_t v22 = sub_1DFDF6490();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v119 = v17;
  v23(v17, 1, 1, v22);
  uint64_t v135 = MEMORY[0x1E4FBC860];
  unint64_t v118 = v20;
  uint64_t v24 = sub_1DFDFA9E0();
  uint64_t v25 = *(void *)(v24 + 16);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    unint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t v50 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v50) {
      goto LABEL_47;
    }
LABEL_24:
    uint64_t v51 = *(void *)(sub_1DFDFB040() - 8);
    unint64_t v52 = v29 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
    uint64_t v53 = *(void *)(v51 + 72);
    swift_bridgeObjectRetain();
    uint64_t v54 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v55 = sub_1DFDFB030();
      uint64_t v56 = *(void *)(v55 + 16);
      int64_t v57 = *(void *)(v54 + 16);
      int64_t v58 = v57 + v56;
      if (__OFADD__(v57, v56)) {
        goto LABEL_69;
      }
      unint64_t v20 = (char *)v55;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v58 <= *(void *)(v54 + 24) >> 1)
      {
        if (*((void *)v20 + 2)) {
          goto LABEL_36;
        }
      }
      else
      {
        if (v57 <= v58) {
          int64_t v60 = v57 + v56;
        }
        else {
          int64_t v60 = v57;
        }
        uint64_t v54 = sub_1DEA9BDF8(isUniquelyReferenced_nonNull_native, v60, 1, v54);
        if (*((void *)v20 + 2))
        {
LABEL_36:
          uint64_t v61 = *(void *)(v54 + 16);
          uint64_t v62 = (*(void *)(v54 + 24) >> 1) - v61;
          uint64_t v63 = *(void *)(sub_1DFDFC900() - 8);
          uint64_t v64 = *(void *)(v63 + 72);
          if (v62 < v56) {
            goto LABEL_72;
          }
          unint64_t v65 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
          unint64_t v66 = v54 + v65 + v64 * v61;
          unint64_t v67 = &v20[v65];
          uint64_t v68 = v64 * v56;
          unint64_t v69 = v66 + v68;
          uint64_t v70 = &v67[v68];
          if ((unint64_t)v67 < v69 && v66 < (unint64_t)v70) {
            goto LABEL_76;
          }
          swift_arrayInitWithCopy();
          if (v56)
          {
            uint64_t v72 = *(void *)(v54 + 16);
            BOOL v48 = __OFADD__(v72, v56);
            uint64_t v73 = v72 + v56;
            if (v48) {
              goto LABEL_74;
            }
            *(void *)(v54 + 16) = v73;
          }
          goto LABEL_26;
        }
      }
      if (v56) {
        goto LABEL_70;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      v52 += v53;
      if (!--v50)
      {
        uint64_t v74 = swift_bridgeObjectRelease_n();
        goto LABEL_48;
      }
    }
  }
  uint64_t v26 = *(void *)(sub_1DFDFBBE0() - 8);
  unint64_t v27 = v24 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  uint64_t v28 = *(void *)(v26 + 72);
  swift_bridgeObjectRetain();
  unint64_t v29 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v30 = sub_1DFDFBBC0();
    uint64_t v31 = *(void *)(v30 + 16);
    int64_t v32 = *(void *)(v29 + 16);
    int64_t v33 = v32 + v31;
    if (__OFADD__(v32, v31))
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    unint64_t v20 = (char *)v30;
    int v34 = swift_isUniquelyReferenced_nonNull_native();
    if (v34 && v33 <= *(void *)(v29 + 24) >> 1)
    {
      if (!*((void *)v20 + 2)) {
        goto LABEL_3;
      }
    }
    else
    {
      if (v32 <= v33) {
        int64_t v35 = v32 + v31;
      }
      else {
        int64_t v35 = v32;
      }
      unint64_t v29 = sub_1DEE17D24(v34, v35, 1, v29);
      if (!*((void *)v20 + 2))
      {
LABEL_3:
        if (v31) {
          goto LABEL_68;
        }
        goto LABEL_4;
      }
    }
    uint64_t v36 = *(void *)(v29 + 16);
    uint64_t v37 = (*(void *)(v29 + 24) >> 1) - v36;
    uint64_t v38 = *(void *)(sub_1DFDFB040() - 8);
    uint64_t v39 = *(void *)(v38 + 72);
    if (v37 < v31) {
      goto LABEL_71;
    }
    unint64_t v40 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    unint64_t v41 = v29 + v40 + v39 * v36;
    unint64_t v42 = &v20[v40];
    uint64_t v43 = v39 * v31;
    unint64_t v44 = v41 + v43;
    BOOL v45 = &v42[v43];
    if ((unint64_t)v42 < v44 && v41 < (unint64_t)v45)
    {
LABEL_76:
      uint64_t result = sub_1DFDFFC60();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v31)
    {
      uint64_t v47 = *(void *)(v29 + 16);
      BOOL v48 = __OFADD__(v47, v31);
      uint64_t v49 = v47 + v31;
      if (v48) {
        goto LABEL_73;
      }
      *(void *)(v29 + 16) = v49;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v27 += v28;
    --v25;
  }
  while (v25);
  swift_bridgeObjectRelease_n();
  uint64_t v50 = *(void *)(v29 + 16);
  if (v50) {
    goto LABEL_24;
  }
LABEL_47:
  uint64_t v74 = swift_bridgeObjectRelease();
  uint64_t v54 = MEMORY[0x1E4FBC860];
LABEL_48:
  MEMORY[0x1F4188790](v74);
  uint64_t v75 = v116;
  *(&v115 - 8) = (uint64_t)v121;
  *(&v115 - 7) = v75;
  uint64_t v76 = v115;
  *(&v115 - 6) = v122;
  *(&v115 - 5) = v76;
  uint64_t v77 = (uint64_t)v119;
  uint64_t v112 = v117;
  uint64_t v113 = v119;
  uint64_t v114 = &v135;
  unint64_t v20 = (char *)sub_1DEFC67F8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1DEFCD10C, (uint64_t)(&v115 - 10), v54, MEMORY[0x1E4F81610], (uint64_t (*)(void))sub_1DEA9C680, type metadata accessor for TodayModel);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DEFC8BE4(v77, (uint64_t (*)(void))sub_1DEBCA06C);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v118, v120);
  if (qword_1EBAC0170 != -1) {
LABEL_75:
  }
    swift_once();
  uint64_t v78 = qword_1EBB628A8;
  int v79 = sub_1DFDFEA60();
  sub_1DEA6AA34(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = xmmword_1DFE0B750;
  uint64_t v81 = sub_1DFDF6EC0();
  uint64_t v83 = v82;
  *(void *)(v80 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v122 = sub_1DEA08668();
  uint64_t v123 = (void *)v80;
  *(void *)(v80 + 64) = v122;
  *(void *)(v80 + 32) = v81;
  *(void *)(v80 + 40) = v83;
  uint64_t v135 = 0;
  unint64_t v136 = 0xE000000000000000;
  int64_t v84 = *((void *)v20 + 2);
  uint64_t v85 = MEMORY[0x1E4FBC860];
  if (v84)
  {
    LODWORD(v119) = v79;
    uint64_t v120 = v78;
    uint64_t v134 = MEMORY[0x1E4FBC860];
    sub_1DEA9B358(0, v84, 0);
    uint64_t v86 = *(unsigned __int8 *)(v128 + 80);
    v121 = v20;
    uint64_t v87 = (uint64_t)&v20[(v86 + 32) & ~v86];
    uint64_t v88 = *(void *)(v128 + 72);
    uint64_t v85 = v134;
    int64_t v89 = v84;
    do
    {
      uint64_t v90 = v133;
      sub_1DEA8832C(v87, v133, type metadata accessor for TodayModel);
      uint64_t v91 = sub_1DEA8F24C();
      uint64_t v93 = v92;
      sub_1DEFC8BE4(v90, type metadata accessor for TodayModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA9B358(0, *(void *)(v85 + 16) + 1, 1);
        uint64_t v85 = v134;
      }
      unint64_t v95 = *(void *)(v85 + 16);
      unint64_t v94 = *(void *)(v85 + 24);
      if (v95 >= v94 >> 1)
      {
        sub_1DEA9B358(v94 > 1, v95 + 1, 1);
        uint64_t v85 = v134;
      }
      *(void *)(v85 + 16) = v95 + 1;
      uint64_t v96 = v85 + 16 * v95;
      *(void *)(v96 + 32) = v91;
      *(void *)(v96 + 40) = v93;
      v87 += v88;
      --v89;
    }
    while (v89);
    unint64_t v20 = v121;
  }
  uint64_t v97 = MEMORY[0x1E4FBB1A0];
  MEMORY[0x1E01ECA60](v85, MEMORY[0x1E4FBB1A0]);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v98 = v135;
  unint64_t v99 = v136;
  unint64_t v100 = v122;
  uint64_t v101 = v123;
  v123[12] = v97;
  v101[13] = v100;
  v101[9] = v98;
  v101[10] = v99;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v135 = v124;
  uint64_t v102 = v126;
  if (v84)
  {
    uint64_t v134 = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1DEA9D1E0(0, v84, 0);
    uint64_t v103 = (uint64_t)&v20[(*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80)];
    uint64_t v104 = *(void *)(v128 + 72);
    uint64_t v105 = v133;
    do
    {
      sub_1DEA8832C(v103, v105, type metadata accessor for TodayModel);
      sub_1DEA8832C(v105, v129, type metadata accessor for TodayModel);
      sub_1DEA9BDC4();
      sub_1DFDF0B40();
      sub_1DEFC8BE4(v105, type metadata accessor for TodayModel);
      uint64_t v106 = v134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA9D1E0(0, *(void *)(v106 + 16) + 1, 1);
        uint64_t v106 = v134;
      }
      unint64_t v108 = *(void *)(v106 + 16);
      unint64_t v107 = *(void *)(v106 + 24);
      if (v108 >= v107 >> 1)
      {
        sub_1DEA9D1E0(v107 > 1, v108 + 1, 1);
        uint64_t v106 = v134;
      }
      *(void *)(v106 + 16) = v108 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v130 + 32))(v106+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(void *)(v130 + 72) * v108, v131, v102);
      uint64_t v134 = v106;
      v103 += v104;
      --v84;
    }
    while (v84);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v106 = MEMORY[0x1E4FBC860];
  }
  uint64_t v109 = sub_1DEA9D228((unint64_t *)&unk_1EBAA7BB0);
  uint64_t v110 = sub_1DEA9D228(&qword_1EBAA7BA8);
  MEMORY[0x1E01DBA90](v106, v102, v109, v110);
  sub_1DEA98AA4();
  sub_1DEA9BDC4();
  return sub_1DFDF14C0();
}

uint64_t sub_1DEFC8BE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1DEFC8C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v49 = a3;
  uint64_t v48 = a2;
  uint64_t v45 = a4;
  sub_1DEA75880();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF8F10();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA87830();
  sub_1DFDF14D0();
  id v14 = sub_1DEA75980();
  swift_release();
  if (v14)
  {
    id v15 = objc_msgSend(v14, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v42 = sub_1DFDFDD20();
    uint64_t v43 = v16;

    sub_1DFDF14D0();
    uint64_t v17 = a1;
    if (((v51 >> 58) & 0x3C | (v51 >> 1) & 3) == 1)
    {
      uint64_t v18 = swift_projectBox();
      sub_1DEA8832C(v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, &v9[*(int *)(v7 + 28)], v10);
      sub_1DEFC8BE4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
    }
    else
    {
      (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4F7FCF0], v10);
    }
    uint64_t v21 = v47;
    uint64_t v20 = v48;
    swift_release();
    char v22 = sub_1DFDF8F00();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v23 = v43;
    if (v22)
    {
      swift_bridgeObjectRelease();
      unsigned int v19 = v49;
      goto LABEL_8;
    }
    unint64_t v27 = (void *)v21[5];
    id result = objc_msgSend(v27, sel_mutedTagIDs);
    unsigned int v19 = v49;
    if (result)
    {
      unint64_t v29 = result;
      uint64_t v30 = sub_1DFDFE5D0();

      uint64_t v31 = v42;
      LOBYTE(v29) = sub_1DEAAB55C(v42, v23, v30);
      swift_bridgeObjectRelease();
      if (v29) {
        goto LABEL_17;
      }
      id result = objc_msgSend(v27, sel_ignoredTagIDs);
      if (result)
      {
        uint64_t v38 = result;
        uint64_t v39 = sub_1DFDFE5D0();

        LOBYTE(v38) = sub_1DEAAB55C(v31, v23, v39);
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
LABEL_17:
        type metadata accessor for TodaySectionFactoryError();
        sub_1DEA94B78(&qword_1EAC274A8, (void (*)(uint64_t))type metadata accessor for TodaySectionFactoryError);
        swift_allocError();
        *unint64_t v40 = v31;
        v40[1] = v23;
        swift_storeEnumTagMultiPayload();
        return (id)swift_willThrow();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v17 = a1;
  unsigned int v19 = v49;
  uint64_t v21 = v47;
  uint64_t v20 = v48;
LABEL_8:
  sub_1DFDF7C30();
  sub_1DECC0B88(v20, v19);
  uint64_t v24 = sub_1DECC0814(v20, v19);
  uint64_t v25 = v46;
  unint64_t v26 = sub_1DEFC92D4(v17, v21, v20, v19, v24);
  if (!v25)
  {
    unint64_t v51 = v26;
    uint64_t v32 = MEMORY[0x1F4188790](v26);
    *(&v41 - 6) = v24;
    *(&v41 - 5) = (uint64_t)v21;
    *(&v41 - 4) = v32;
    *(&v41 - 3) = v20;
    *((unsigned char *)&v41 - 16) = v19;
    swift_retain();
    uint64_t v33 = sub_1DEB01968((void (*)(char *))sub_1DEFD81C4, (uint64_t)(&v41 - 8), (uint64_t)v50);
    sub_1DEA75598(0, (unint64_t *)&unk_1EBAA7BC0, type metadata accessor for TodayModel, sub_1DEA9BDC4, MEMORY[0x1E4FABD50]);
    uint64_t v35 = v34;
    uint64_t v36 = sub_1DEA9D228((unint64_t *)&unk_1EBAA7BB0);
    uint64_t v37 = sub_1DEA9D228(&qword_1EBAA7BA8);
    MEMORY[0x1E01DBA90](v33, v35, v36, v37);
    type metadata accessor for TodayModel(0);
    sub_1DEA98AA4();
    sub_1DEA9BDC4();
    sub_1DFDF14C0();
    swift_release();
  }
  return (id)swift_release();
}

unint64_t sub_1DEFC92D4(uint64_t a1, void *a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  uint64_t v87 = a5;
  unsigned int v84 = a4;
  uint64_t v83 = a3;
  uint64_t v80 = a2;
  uint64_t v78 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v78);
  uint64_t v79 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDF7010();
  uint64_t v85 = *(void *)(v7 - 8);
  uint64_t v86 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v77);
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MyMagazinesMagazineFeedGroup();
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA87830();
  uint64_t v16 = v15;
  uint64_t v75 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v76 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v74 - v19;
  uint64_t v21 = type metadata accessor for TodayBlueprintCollapsedSection(0);
  uint64_t v81 = *(void *)(v21 - 8);
  uint64_t v82 = v21;
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v74 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v74 - v24;
  uint64_t v26 = type metadata accessor for TodaySectionGapDescriptor(0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = a1;
  uint64_t v89 = v16;
  sub_1DFDF14D0();
  switch((v92 >> 58) & 0x3C | (v92 >> 1) & 3)
  {
    case 0uLL:
      uint64_t v29 = swift_projectBox();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v29, 1, v82) == 1) {
        goto LABEL_3;
      }
      sub_1DEA8832C(v29, (uint64_t)v28, type metadata accessor for TodaySectionGapDescriptor);
      sub_1DEFD83F0((uint64_t)v28, (uint64_t)v25, type metadata accessor for TodayBlueprintCollapsedSection);
      uint64_t v55 = v90;
      sub_1DEFC8C44(v25, v83, v84);
      if (v55)
      {
        sub_1DEFC8BE4((uint64_t)v25, type metadata accessor for TodayBlueprintCollapsedSection);
      }
      else
      {
        uint64_t v90 = *(void (**)(void, void, void))(v75 + 32);
        uint64_t v64 = v89;
        v90(v76, v20, v89);
        uint64_t v65 = v82;
        uint64_t v66 = *(int *)(v82 + 24);
        unint64_t v67 = &v25[*(int *)(v82 + 20)];
        uint64_t v68 = *((void *)v67 + 1);
        uint64_t v88 = *(void *)v67;
        uint64_t v69 = *(void *)&v25[v66];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DEFC8BE4((uint64_t)v25, type metadata accessor for TodayBlueprintCollapsedSection);
        uint64_t v70 = (uint64_t)v74;
        v90(v74, v76, v64);
        uint64_t v71 = (void *)(v70 + *(int *)(v65 + 20));
        *uint64_t v71 = v88;
        v71[1] = v68;
        *(void *)(v70 + *(int *)(v65 + 24)) = v69;
        uint64_t v29 = swift_allocBox();
        uint64_t v73 = v72;
        sub_1DEFD83F0(v70, v72, type metadata accessor for TodayBlueprintCollapsedSection);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v73, 0, 1, v65);
      }
      swift_release();
      return v29;
    case 1uLL:
      uint64_t v30 = swift_projectBox();
      sub_1DEA8832C(v30, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      uint64_t v32 = v85;
      uint64_t v31 = v86;
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v9, v11, v86);
      char v33 = sub_1DFDF7BF0();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
      if (v33)
      {
        uint64_t v34 = (void (*)(void *, void))sub_1DFDF6FC0();
        if (!__OFADD__(*v35, 1))
        {
          ++*v35;
          v34(v91, 0);
          uint64_t v36 = swift_allocBox();
          sub_1DEFD83F0((uint64_t)v11, v37, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
          swift_release();
          return v36 | 2;
        }
        __break(1u);
LABEL_26:
        __break(1u);
        JUMPOUT(0x1DEFC9B9CLL);
      }
      sub_1DFDF14D0();
      uint64_t v56 = type metadata accessor for CuratedTodayFeedGroup;
      uint64_t v57 = (uint64_t)v11;
      break;
    case 0xEuLL:
      uint64_t v38 = swift_projectBox();
      uint64_t v39 = v79;
      sub_1DEA8832C(v38, v79, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      uint64_t v41 = v85;
      uint64_t v40 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v9, v39, v86);
      char v42 = sub_1DFDF7BF0();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v40);
      if (v42)
      {
        uint64_t v43 = (void (*)(void *, void))sub_1DFDF6FC0();
        if (!__OFADD__(*v44, 1))
        {
          ++*v44;
          v43(v91, 0);
          uint64_t v45 = swift_allocBox();
          sub_1DEFD83F0(v39, v46, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
          swift_release();
          return v45 | 0x3000000000000004;
        }
        goto LABEL_26;
      }
      sub_1DFDF14D0();
      uint64_t v56 = type metadata accessor for SpotlightTodayFeedGroup;
      uint64_t v57 = v39;
      break;
    case 0x20uLL:
      sub_1DEFCD078();
      uint64_t v48 = v47;
      uint64_t v49 = swift_projectBox();
      uint64_t v50 = *(void *)(v49 + *(int *)(v48 + 48));
      sub_1DEA8832C(v49, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MyMagazinesMagazineFeedGroup);
      if (v84 != 3
        || v83
        || (unint64_t v51 = v80,
            uint64_t v52 = v80[22],
            uint64_t v53 = v80[23],
            __swift_project_boxed_opaque_existential_1(v80 + 19, v52),
            uint64_t v54 = sub_1DF7D3E9C(v51 + 24, v52, v53),
            v54 == v50))
      {
        sub_1DFDF14D0();
        sub_1DEFC8BE4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MyMagazinesMagazineFeedGroup);
        goto LABEL_20;
      }
      uint64_t v59 = v54;
      uint64_t v60 = swift_allocBox();
      uint64_t v62 = v61;
      uint64_t v63 = *(int *)(v48 + 48);
      sub_1DEFD83F0((uint64_t)v14, v61, (uint64_t (*)(void))type metadata accessor for MyMagazinesMagazineFeedGroup);
      swift_release();
      *(void *)(v62 + v63) = v59;
      return v60 | 0x8000000000000000;
    default:
LABEL_3:
      swift_release();
      sub_1DFDF14D0();
      return v91[0];
  }
  sub_1DEFC8BE4(v57, (uint64_t (*)(void))v56);
LABEL_20:
  swift_release();
  return v91[0];
}

uint64_t sub_1DEFC9C20@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v151 = a6;
  unint64_t v157 = a5;
  uint64_t v173 = a3;
  uint64_t v174 = a4;
  v167 = a2;
  uint64_t v178 = a7;
  sub_1DEBCAD64(0);
  MEMORY[0x1F4188790](v8 - 8);
  v160 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_1DFDF81A0();
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x1F4188790](v155);
  v153 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_1DFDFADB0();
  uint64_t v156 = *(void *)(v161 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v161);
  v152 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v128 = (char *)&v124 - v13;
  sub_1DEFD81EC(0, (unint64_t *)&qword_1EBAD1690, MEMORY[0x1E4F7F838], (void (*)(void))sub_1DEBCAD84, (void (*)(void))sub_1DEBCADB8);
  uint64_t v159 = v14;
  uint64_t v165 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  v158 = (char *)&v124 - v15;
  uint64_t v141 = sub_1DFDF7240();
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  v139 = (char *)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFD81EC(0, (unint64_t *)&qword_1EBAE9AC0, MEMORY[0x1E4F7F3B8], (void (*)(void))sub_1DEBCADEC, (void (*)(void))sub_1DEBCAE20);
  uint64_t v144 = v17;
  uint64_t v143 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  v142 = (char *)&v124 - v18;
  uint64_t v147 = sub_1DFDF9D20();
  uint64_t v146 = *(void *)(v147 - 8);
  MEMORY[0x1F4188790](v147);
  v145 = (char *)&v124 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFD81EC(0, (unint64_t *)&qword_1EBAE9B30, MEMORY[0x1E4F804D0], (void (*)(void))sub_1DEBCAE54, (void (*)(void))sub_1DEBCAE88);
  uint64_t v150 = v20;
  uint64_t v149 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  v148 = (char *)&v124 - v21;
  sub_1DEBCAEBC(0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v126 = (char *)&v124 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_1DFDF9A50();
  uint64_t v135 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v134 = (char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFD81EC(0, (unint64_t *)&qword_1EBAE9B10, MEMORY[0x1E4F80490], (void (*)(void))sub_1DEBCAEDC, (void (*)(void))sub_1DEBCAF10);
  uint64_t v138 = v25;
  uint64_t v137 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  v163 = (char *)&v124 - v26;
  sub_1DEBC9F44(0);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v131 = (char *)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_1DFDFA250();
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x1F4188790](v130);
  uint64_t v30 = (char *)&v124 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFD81EC(0, (unint64_t *)&qword_1EBAE9B90, MEMORY[0x1E4F805F8], (void (*)(void))sub_1DEBCA004, (void (*)(void))sub_1DEBCA038);
  uint64_t v133 = v31;
  uint64_t v162 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v132 = (char *)&v124 - v32;
  sub_1DEBCA06C(0);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v127 = (char *)&v124 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1DFDF9D80();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v171 = v35;
  uint64_t v172 = v36;
  MEMORY[0x1F4188790](v35);
  v175 = (char *)&v124 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_1DFDFA100();
  uint64_t v164 = *(void *)(v166 - 8);
  uint64_t v38 = MEMORY[0x1F4188790](v166);
  uint64_t v125 = (char *)&v124 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  char v42 = (char *)&v124 - v41;
  MEMORY[0x1F4188790](v40);
  unint64_t v44 = (char *)&v124 - v43;
  sub_1DEFD81EC(0, (unint64_t *)&qword_1EBAE9B60, MEMORY[0x1E4F80560], (void (*)(void))sub_1DEBCA08C, (void (*)(void))sub_1DEBCA0C0);
  uint64_t v46 = v45;
  uint64_t v47 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v49 = (char *)&v124 - v48;
  uint64_t v50 = type metadata accessor for TodayModel(0);
  uint64_t v51 = MEMORY[0x1F4188790](v50);
  uint64_t v168 = (uint64_t)&v124 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  uint64_t v169 = (uint64_t)&v124 - v54;
  MEMORY[0x1F4188790](v53);
  uint64_t v56 = (char *)&v124 - v55;
  sub_1DEA75598(0, (unint64_t *)&unk_1EBAA7BC0, type metadata accessor for TodayModel, sub_1DEA9BDC4, MEMORY[0x1E4FABD50]);
  uint64_t v176 = v57;
  uint64_t v177 = a1;
  sub_1DFDF0B50();
  uint64_t v170 = v50;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEBD7618();
      uint64_t v87 = &v56[*(int *)(v86 + 48)];
      uint64_t v88 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v88 - 8) + 8))(v87, v88);
      int64_t v58 = type metadata accessor for TodayGapLocation;
      goto LABEL_3;
    case 2u:
      uint64_t v168 = v47;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v49, v56, v46);
      sub_1DFDF9A80();
      sub_1DFDFA0D0();
      uint64_t v61 = *(void (**)(char *, uint64_t))(v164 + 8);
      uint64_t v62 = v166;
      v61(v44, v166);
      char v63 = sub_1DFDF7C10();
      swift_unknownObjectRelease();
      if (v63)
      {
        uint64_t v177 = *(void *)(v173 + 88);
        sub_1DFDF9A80();
        uint64_t v176 = sub_1DFDFA0D0();
        v61(v44, v62);
        sub_1DFDF9A90();
        uint64_t v174 = sub_1DEA8605C(v174);
        sub_1DFDF9A80();
        uint64_t v64 = (uint64_t)v127;
        sub_1DFDFA010();
        v61(v42, v62);
        uint64_t v65 = v175;
        sub_1DFDF7870();
        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DEFC8BE4(v64, (uint64_t (*)(void))sub_1DEBCA06C);
        (*(void (**)(char *, uint64_t))(v172 + 8))(v65, v171);
        sub_1DEA9BDC4();
        sub_1DFDF0B40();
        return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v49, v46);
      }
      (*(void (**)(char *, uint64_t))(v168 + 8))(v49, v46);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v178, v177);
    case 3u:
      uint64_t v67 = v162;
      uint64_t v68 = v132;
      uint64_t v69 = v133;
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v132, v56, v133);
      sub_1DFDF9A80();
      uint64_t v70 = (uint64_t)v131;
      sub_1DFDFA230();
      (*(void (**)(char *, uint64_t))(v129 + 8))(v30, v130);
      uint64_t v71 = v164;
      uint64_t v72 = v166;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v70, 1, v166) == 1)
      {
        (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
        sub_1DEFC8BE4(v70, (uint64_t (*)(void))sub_1DEBC9F44);
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v178, v177);
      }
      uint64_t v104 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v125, v70, v72);
      sub_1DFDFA0D0();
      char v105 = sub_1DFDF7C10();
      swift_unknownObjectRelease();
      if (v105)
      {
        uint64_t v177 = *(void *)(v173 + 88);
        uint64_t v106 = sub_1DFDFA0D0();
        uint64_t v107 = (uint64_t)v68;
        uint64_t v108 = (uint64_t)v175;
        sub_1DFDF9A90();
        uint64_t v109 = sub_1DEA8605C(v174);
        sub_1DFB3F3A0(v107, v106, v108, v109, v110, v169);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v108, v171);
        sub_1DEA9BDC4();
        sub_1DFDF0B40();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v104, v166);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v162 + 8))(v107, v69);
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v104, v72);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v178, v177);
    case 4u:
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v178, v177);
    case 5u:
    case 7u:
    case 9u:
    case 0xBu:
      int64_t v58 = type metadata accessor for TodayModel;
LABEL_3:
      uint64_t v59 = v58;
      uint64_t v60 = (uint64_t)v56;
      goto LABEL_4;
    case 6u:
      sub_1DEFD828C();
      (*(void (**)(char *, uint64_t))(v47 + 8))(&v56[*(int *)(v89 + 48)], v46);
      sub_1DEFD81EC(0, (unint64_t *)&qword_1EBAA63A0, MEMORY[0x1E4F7B0B8], (void (*)(void))sub_1DEFD8388, (void (*)(void))sub_1DEFD83BC);
      (*(void (**)(char *, uint64_t))(*(void *)(v90 - 8) + 8))(v56, v90);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v178, v177);
    case 8u:
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v178, v177);
    case 0xAu:
      uint64_t v91 = v137;
      unint64_t v92 = v163;
      uint64_t v93 = v138;
      (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v163, v56, v138);
      unint64_t v94 = v134;
      sub_1DFDF9A80();
      unint64_t v95 = (void *)sub_1DFDF9960();
      uint64_t v96 = *(void (**)(char *, uint64_t))(v135 + 8);
      uint64_t v97 = v136;
      v96(v94, v136);
      char v98 = sub_1DFDF7C00();

      if (v98)
      {
        sub_1DFDF9A80();
        uint64_t v177 = sub_1DFDF9960();
        v96(v94, v97);
        unint64_t v99 = v175;
        sub_1DFDF9A90();
        sub_1DEA8605C(v174);
        uint64_t v100 = sub_1DFDF99F0();
        uint64_t v101 = (uint64_t)v126;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v126, 1, 1, v100);
        uint64_t v102 = (void *)v177;
        sub_1DFDF7820();
        sub_1DEFC8BE4(v101, (uint64_t (*)(void))sub_1DEBCAEBC);
        swift_storeEnumTagMultiPayload();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v172 + 8))(v99, v171);
        sub_1DEA9BDC4();
        sub_1DFDF0B40();
        return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v163, v93);
      }
      (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v178, v177);
    case 0xCu:
      uint64_t v73 = v149;
      uint64_t v74 = v148;
      uint64_t v75 = v150;
      (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v148, v56, v150);
      uint64_t v76 = v145;
      sub_1DFDF9A80();
      sub_1DFDF9D00();
      (*(void (**)(char *, uint64_t))(v146 + 8))(v76, v147);
      uint64_t v77 = v175;
      sub_1DFDF9A90();
      sub_1DEA8605C(v174);
      uint64_t v78 = v169;
      sub_1DFDF7850();
      goto LABEL_21;
    case 0xDu:
      uint64_t v73 = v143;
      uint64_t v74 = v142;
      uint64_t v75 = v144;
      (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v142, v56, v144);
      uint64_t v103 = v139;
      sub_1DFDF9A80();
      sub_1DFDF7220();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v103, v141);
      uint64_t v77 = v175;
      sub_1DFDF9A90();
      sub_1DEA8605C(v174);
      uint64_t v78 = v169;
      sub_1DFDF77C0();
LABEL_21:
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v172 + 8))(v77, v171);
      sub_1DEA8832C(v78, v168, type metadata accessor for TodayModel);
      sub_1DEA9BDC4();
      sub_1DFDF0B40();
      sub_1DEFC8BE4(v78, type metadata accessor for TodayModel);
      return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v74, v75);
    case 0xEu:
      uint64_t v79 = v158;
      uint64_t v80 = v56;
      uint64_t v81 = v159;
      (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v158, v80, v159);
      uint64_t v82 = v161;
      unint64_t v83 = v157;
      uint64_t v84 = v156;
      if (v151 == 2) {
        swift_bridgeObjectRetain();
      }
      else {
        unint64_t v83 = sub_1DF34A4B0(MEMORY[0x1E4FBC860]);
      }
      uint64_t v111 = v153;
      sub_1DFDF9A80();
      uint64_t v112 = v152;
      sub_1DFDF8180();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v111, v155);
      uint64_t v113 = sub_1DFDFAD80();
      uint64_t v115 = v114;
      v167 = *(void (**)(char *, uint64_t))(v84 + 8);
      v167(v112, v82);
      if (*(void *)(v83 + 16) && (unint64_t v116 = sub_1DEA6D930(v113, v115), (v117 & 1) != 0))
      {
        uint64_t v118 = (uint64_t)v160;
        (*(void (**)(char *, unint64_t, uint64_t))(v84 + 16))(v160, *(void *)(v83 + 56) + *(void *)(v84 + 72) * v116, v82);
        uint64_t v119 = 0;
      }
      else
      {
        uint64_t v119 = 1;
        uint64_t v118 = (uint64_t)v160;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v118, v119, 1, v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v118, 1, v82) == 1)
      {
        (*(void (**)(char *, uint64_t))(v165 + 8))(v79, v81);
        sub_1DEFC8BE4(v118, (uint64_t (*)(void))sub_1DEBCAD64);
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v178, v177);
      }
      else
      {
        uint64_t v120 = v128;
        (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v128, v118, v82);
        v121 = v79;
        unint64_t v122 = v175;
        sub_1DFDF9A90();
        sub_1DEA8605C(v174);
        uint64_t v123 = v169;
        sub_1DFDF77E0();
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v172 + 8))(v122, v171);
        sub_1DEA8832C(v123, v168, type metadata accessor for TodayModel);
        sub_1DEA9BDC4();
        sub_1DFDF0B40();
        sub_1DEFC8BE4(v123, type metadata accessor for TodayModel);
        v167(v120, v82);
        return (*(uint64_t (**)(char *, uint64_t))(v165 + 8))(v121, v81);
      }
    default:
      swift_bridgeObjectRelease();
      sub_1DEA8FD50();
      uint64_t v60 = (uint64_t)&v56[*(int *)(v85 + 48)];
      uint64_t v59 = type metadata accessor for TodayGapLocation;
LABEL_4:
      sub_1DEFC8BE4(v60, v59);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v178, v177);
  }
}

uint64_t sub_1DEFCB594@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  unint64_t v83 = a3;
  LODWORD(v101) = a4;
  unint64_t v80 = a2;
  uint64_t v81 = a5;
  uint64_t v6 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v96 = (void *)((char *)v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v84 = (void *)((char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDF8F10();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA87830();
  uint64_t v18 = v17;
  sub_1DFDF14D0();
  id v19 = sub_1DEA75980();
  swift_release();
  if (!v19)
  {
    uint64_t v23 = v18;
    goto LABEL_8;
  }
  uint64_t v20 = a1;
  id v21 = objc_msgSend(v19, sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v94 = sub_1DFDFDD20();
  uint64_t v95 = v22;

  a1 = v20;
  sub_1DFDF14D0();
  uint64_t v23 = v18;
  if (((v99 >> 58) & 0x3C | (v99 >> 1) & 3) == 1)
  {
    uint64_t v24 = swift_projectBox();
    sub_1DEA8832C(v24, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, &v12[*(int *)(v10 + 28)], v13);
    sub_1DEFC8BE4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4F7FCF0], v13);
  }
  swift_release();
  char v25 = sub_1DFDF8F00();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v26 = v94;
  if ((v25 & 1) == 0)
  {
    uint64_t v36 = *(void **)(v82 + 40);
    id v37 = objc_msgSend(v36, sel_mutedTagIDs);
    uint64_t v38 = v95;
    if (v37)
    {
      uint64_t v39 = v37;
      uint64_t v40 = sub_1DFDFE5D0();

      LOBYTE(v39) = sub_1DEAAB55C(v26, v38, v40);
      swift_bridgeObjectRelease();
      if (v39) {
        goto LABEL_36;
      }
      id v70 = objc_msgSend(v36, sel_ignoredTagIDs);
      if (v70)
      {
        uint64_t v71 = v70;
        uint64_t v72 = sub_1DFDFE5D0();

        LOBYTE(v71) = sub_1DEAAB55C(v26, v38, v72);
        swift_bridgeObjectRelease();
        if ((v71 & 1) == 0) {
          goto LABEL_7;
        }
LABEL_36:
        type metadata accessor for TodaySectionFactoryError();
        sub_1DEA94B78(&qword_1EAC274A8, (void (*)(uint64_t))type metadata accessor for TodaySectionFactoryError);
        swift_allocError();
        *uint64_t v73 = v26;
        v73[1] = v38;
        goto LABEL_37;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_50:
    uint64_t result = sub_1DFE00000();
    __break(1u);
    return result;
  }
LABEL_7:
  swift_bridgeObjectRelease();
LABEL_8:
  sub_1DFDF14D0();
  if (((v99 >> 58) & 0x3C | (v99 >> 1) & 3) == 0x16)
  {
    uint64_t v27 = swift_projectBox();
    sub_1DEA8832C(v27, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
    swift_release();
    if ((v101 & 1) == 0)
    {
      if (qword_1EBAC0170 != -1) {
        goto LABEL_47;
      }
      goto LABEL_11;
    }
    uint64_t v41 = (void *)sub_1DEAAB694(MEMORY[0x1E4FBC860]);
    char v42 = v83;
    uint64_t v43 = *((void *)v83 + 2);
    if (!v43)
    {
LABEL_39:
      sub_1DFDF14D0();
      uint64_t v74 = v99;
      swift_bridgeObjectRetain();
      uint64_t v75 = v84;
      sub_1DEFC7018(v74, v84, v80, (uint64_t)v42, (unint64_t)v41, v81);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1DEFC8BE4((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      return swift_bridgeObjectRelease();
    }
    v79[0] = v23;
    v79[1] = a1;
    j__swift_bridgeObjectRetain(v83, 1);
    LODWORD(v96) = *MEMORY[0x1E4F7EF30];
    LODWORD(v95) = *MEMORY[0x1E4F7EF28];
    LODWORD(v94) = *MEMORY[0x1E4F7EFB0];
    sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAF6EB0, MEMORY[0x1E4F7EFC0], MEMORY[0x1E4FBBE00]);
    uint64_t v93 = v44;
    uint64_t v92 = sub_1DFDF0590();
    uint64_t v45 = *(void *)(v92 - 8);
    uint64_t v46 = *(void *)(v45 + 72);
    uint64_t v47 = *(unsigned __int8 *)(v45 + 80);
    uint64_t v90 = (v47 + 32) & ~v47;
    uint64_t v91 = v46;
    uint64_t v89 = 2 * v46;
    uint64_t v87 = v47 | 7;
    uint64_t v88 = v90 + 3 * v46;
    uint64_t v86 = (void (**)(uint64_t, void, uint64_t))(v45 + 104);
    uint64_t v48 = (uint64_t *)(v42 + 40);
    long long v85 = xmmword_1DFE0CC10;
    while (1)
    {
      uint64_t v101 = v43;
      uint64_t v50 = *(v48 - 1);
      a1 = *v48;
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = v85;
      uint64_t v52 = v51 + v90;
      uint64_t v53 = *v86;
      uint64_t v54 = v92;
      (*v86)(v51 + v90, v96, v92);
      v53(v52 + v91, v95, v54);
      v53(v52 + v89, v94, v54);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = sub_1DF3C0924(v51);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v99 = (unint64_t)v41;
      unint64_t v57 = sub_1DEA6D930(v50, a1);
      uint64_t v58 = v41[2];
      BOOL v59 = (v56 & 1) == 0;
      uint64_t v60 = v58 + v59;
      if (__OFADD__(v58, v59))
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        swift_once();
LABEL_11:
        sub_1DFDFEA40();
        sub_1DEA6AA34(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1DFE0B250;
        unint64_t v99 = 0;
        unint64_t v100 = 0xE000000000000000;
        uint64_t v97 = v83;
        char v98 = 0;
        sub_1DFDFFB10();
        unint64_t v29 = v99;
        unint64_t v30 = v100;
        *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v28 + 64) = sub_1DEA08668();
        *(void *)(v28 + 32) = v29;
        *(void *)(v28 + 40) = v30;
        sub_1DFDF00C0();
        swift_bridgeObjectRelease();
        uint64_t v31 = type metadata accessor for ShortcutsTodayFeedGroup;
        uint64_t v32 = v84;
LABEL_43:
        sub_1DEFC8BE4((uint64_t)v32, (uint64_t (*)(void))v31);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v81, a1, v23);
      }
      char v61 = v56;
      if (v41[3] >= v60)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v41 = (void *)v99;
          if (v56) {
            goto LABEL_20;
          }
        }
        else
        {
          sub_1DF65B364();
          uint64_t v41 = (void *)v99;
          if (v61) {
            goto LABEL_20;
          }
        }
      }
      else
      {
        sub_1DF650F7C(v60, isUniquelyReferenced_nonNull_native);
        unint64_t v62 = sub_1DEA6D930(v50, a1);
        if ((v61 & 1) != (v63 & 1)) {
          goto LABEL_50;
        }
        unint64_t v57 = v62;
        uint64_t v41 = (void *)v99;
        if (v61)
        {
LABEL_20:
          uint64_t v49 = v41[7];
          swift_bridgeObjectRelease();
          *(void *)(v49 + 8 * v57) = v23;
          goto LABEL_21;
        }
      }
      v41[(v57 >> 6) + 8] |= 1 << v57;
      uint64_t v64 = (uint64_t *)(v41[6] + 16 * v57);
      *uint64_t v64 = v50;
      v64[1] = a1;
      *(void *)(v41[7] + 8 * v57) = v23;
      uint64_t v65 = v41[2];
      BOOL v66 = __OFADD__(v65, 1);
      uint64_t v67 = v65 + 1;
      if (v66) {
        goto LABEL_46;
      }
      v41[2] = v67;
      swift_bridgeObjectRetain();
LABEL_21:
      v48 += 2;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v43 = v101 - 1;
      if (v101 == 1)
      {
        char v42 = v83;
        j__swift_bridgeObjectRelease(v83, 1);
        goto LABEL_39;
      }
    }
  }
  swift_release();
  sub_1DFDF14D0();
  if (((v99 >> 58) & 0x3C | (v99 >> 1) & 3) != 0x18)
  {
    swift_release();
    type metadata accessor for TodaySectionFactoryError();
    sub_1DEA94B78(&qword_1EAC274A8, (void (*)(uint64_t))type metadata accessor for TodaySectionFactoryError);
    swift_allocError();
    uint64_t v69 = v68;
    sub_1DFDF14D0();
    unint64_t *v69 = v99;
LABEL_37:
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v33 = swift_projectBox();
  uint64_t v34 = v96;
  sub_1DEA8832C(v33, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
  swift_release();
  if (v101)
  {
    if (qword_1EBAC0170 != -1) {
      swift_once();
    }
    sub_1DFDFEA40();
    sub_1DEA6AA34(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = xmmword_1DFE0B250;
    unint64_t v99 = 0;
    unint64_t v100 = 0xE000000000000000;
    uint64_t v97 = v83;
    char v98 = 1;
    sub_1DFDFFB10();
    unint64_t v77 = v99;
    unint64_t v78 = v100;
    *(void *)(v76 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v76 + 64) = sub_1DEA08668();
    *(void *)(v76 + 32) = v77;
    *(void *)(v76 + 40) = v78;
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v31 = type metadata accessor for SavedStoriesTodayFeedGroup;
    uint64_t v32 = v96;
    goto LABEL_43;
  }
  sub_1DFDF14D0();
  sub_1DEFC7F28(v99, v34, v80, v83, v81);
  swift_release();
  return sub_1DEFC8BE4((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
}

uint64_t sub_1DEFCC2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v82 = a3;
  uint64_t v79 = type metadata accessor for TodayModel(0);
  MEMORY[0x1F4188790](v79);
  unint64_t v78 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAD2CB0, MEMORY[0x1E4F7EDB8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v73 = (char *)v58 - v6;
  uint64_t v67 = sub_1DFDE7630();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDEE430();
  MEMORY[0x1F4188790](v8 - 8);
  id v70 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF8330();
  uint64_t v76 = *(void *)(v10 - 8);
  uint64_t v77 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v75 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAE7D00(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1DFDEE610();
  uint64_t v72 = *(void *)(v81 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v81);
  uint64_t v64 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v80 = (char *)v58 - v17;
  sub_1DEAA23C8();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DFDEE740();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  char v63 = (char *)v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  unint64_t v83 = (char *)v58 - v25;
  sub_1DEA51414(0);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1DFDEE390();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  char v61 = (char *)v58 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)v58 - v33;
  sub_1DEAC2768();
  uint64_t v60 = v35;
  uint64_t v74 = a1;
  sub_1DFDF73B0();
  swift_bridgeObjectRelease();
  sub_1DFDEE360();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    sub_1DEFC8BE4((uint64_t)v28, (uint64_t (*)(void))sub_1DEA51414);
    sub_1DEA75598(0, (unint64_t *)&unk_1EBAA7BC0, type metadata accessor for TodayModel, sub_1DEA9BDC4, MEMORY[0x1E4FABD50]);
    uint64_t v37 = v36;
    uint64_t v38 = sub_1DEA9D228((unint64_t *)&unk_1EBAA7BB0);
    uint64_t v39 = sub_1DEA9D228(&qword_1EBAA7BA8);
    return MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v37, v38, v39);
  }
  else
  {
    uint64_t v68 = v30;
    uint64_t v69 = v29;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v34, v28, v29);
    uint64_t v41 = v62;
    __swift_project_boxed_opaque_existential_1((void *)(v62 + 48), *(void *)(v62 + 72));
    sub_1DFDEE930();
    int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21);
    uint64_t v71 = v22;
    uint64_t v59 = v21;
    if (v42 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v22 + 104))(v83, *MEMORY[0x1E4F7EC00], v21);
      sub_1DEFC8BE4((uint64_t)v20, (uint64_t (*)(void))sub_1DEAA23C8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v83, v20, v21);
    }
    uint64_t v43 = v80;
    __swift_project_boxed_opaque_existential_1((void *)(v41 + 48), *(void *)(v41 + 72));
    sub_1DFDEE940();
    uint64_t v44 = v72;
    uint64_t v45 = v81;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v14, 1, v81) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x1E4F7EB58], v45);
      sub_1DEFC8BE4((uint64_t)v14, (uint64_t (*)(void))sub_1DEAE7D00);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v14, v45);
    }
    __swift_project_boxed_opaque_existential_1((void *)(v41 + 48), *(void *)(v41 + 72));
    v58[1] = sub_1DFDEE950();
    v58[0] = v46;
    uint64_t v72 = sub_1DFDEE370();
    uint64_t v62 = v47;
    uint64_t v48 = v65;
    sub_1DFDE7620();
    sub_1DFDE7610();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v48, v67);
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v61, v34, v69);
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v63, v83, v59);
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v64, v43, v45);
    uint64_t v49 = sub_1DFDEEA70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v73, 1, 1, v49);
    sub_1DFDF73B0();
    swift_bridgeObjectRelease();
    sub_1DFDEE3C0();
    uint64_t v50 = v75;
    sub_1DFDF82F0();
    sub_1DEA982F4();
    sub_1DEA75598(0, (unint64_t *)&unk_1EBAA7BC0, type metadata accessor for TodayModel, sub_1DEA9BDC4, MEMORY[0x1E4FABD50]);
    uint64_t v52 = v51;
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1DFE0B250;
    uint64_t v55 = v76;
    uint64_t v54 = v77;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v78, v50, v77);
    swift_storeEnumTagMultiPayload();
    sub_1DEA9BDC4();
    sub_1DFDF0B40();
    uint64_t v56 = sub_1DEA9D228((unint64_t *)&unk_1EBAA7BB0);
    uint64_t v57 = sub_1DEA9D228(&qword_1EBAA7BA8);
    MEMORY[0x1E01DBA70](v53, v52, v56, v57);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v54);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v80, v81);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v83, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v34, v69);
  }
}

uint64_t sub_1DEFCCE6C()
{
  sub_1DEBCAEBC(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TodayModel(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1DFDF99F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  sub_1DFDF7820();
  sub_1DEFC8BE4((uint64_t)v2, (uint64_t (*)(void))sub_1DEBCAEBC);
  swift_storeEnumTagMultiPayload();
  sub_1DEA9BDC4();
  return sub_1DFDF0B40();
}

uint64_t type metadata accessor for TodaySectionFactoryError()
{
  uint64_t result = qword_1EAC274B0;
  if (!qword_1EAC274B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFCD054()
{
  return sub_1DEFCCE6C();
}

void sub_1DEFCD078()
{
  if (!qword_1EAC2D4D0)
  {
    type metadata accessor for MyMagazinesMagazineFeedGroup();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC2D4D0);
    }
  }
}

uint64_t sub_1DEFCD0E4@<X0>(char *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1DFB3F938(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unint64_t **)(v2 + 64), a2);
}

uint64_t sub_1DEFCD10C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1DFB400DC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unint64_t **)(v2 + 64), a2);
}

uint64_t sub_1DEFCD134(uint64_t *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = v2[33];
  uint64_t v6 = v2[34];
  __swift_project_boxed_opaque_existential_1(v2 + 30, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, v4, v5, v6) & 1;
}

uint64_t sub_1DEFCD1B0@<X0>(unint64_t *a1@<X8>)
{
  return sub_1DFB3F734(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

char *sub_1DEFCD1D4(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        type metadata accessor for MagazineFeedGroup();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1DEA530F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
            uint64_t v18 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
            uint64_t v19 = &a1[v18];
            uint64_t v20 = &a2[v18];
            uint64_t v21 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
            goto LABEL_48;
          case 2u:
          case 0xAu:
          case 0xBu:
            uint64_t v107 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(a1, a2, v107);
            goto LABEL_48;
          case 3u:
            sub_1DEA52F58();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
            uint64_t v23 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
            uint64_t v24 = &a1[v23];
            uint64_t v25 = &a2[v23];
            uint64_t v26 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
            goto LABEL_48;
          case 4u:
            uint64_t v27 = *((void *)a2 + 1);
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v27;
            uint64_t v28 = *((void *)a2 + 3);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = v28;
            uint64_t v30 = (void *)*((void *)a2 + 4);
            uint64_t v29 = *((void *)a2 + 5);
            *((void *)a1 + 4) = v30;
            *((void *)a1 + 5) = v29;
            uint64_t v417 = *((void *)a2 + 7);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = v417;
            uint64_t v31 = *((void *)a2 + 9);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = v31;
            uint64_t v32 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
            uint64_t v33 = v32[10];
            v412 = &a1[v33];
            v410 = &a2[v33];
            uint64_t v34 = sub_1DFDF8C20();
            v404 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v35 = v30;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v404(v412, v410, v34);
            *(void *)&a1[v32[11]] = *(void *)&a2[v32[11]];
            *(void *)&a1[v32[12]] = *(void *)&a2[v32[12]];
            goto LABEL_48;
          case 5u:
            uint64_t v36 = *((void *)a2 + 1);
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v36;
            uint64_t v37 = *((void *)a2 + 3);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = v37;
            uint64_t v38 = (void *)*((void *)a2 + 4);
            v418 = (void *)*((void *)a2 + 5);
            *((void *)a1 + 4) = v38;
            *((void *)a1 + 5) = v418;
            uint64_t v413 = *((void *)a2 + 7);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = v413;
            uint64_t v39 = *((void *)a2 + 9);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = v39;
            uint64_t v40 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
            uint64_t v41 = v40[10];
            v395 = &a2[v41];
            v405 = &a1[v41];
            uint64_t v42 = sub_1DFDF8C20();
            uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v44 = v38;
            id v45 = v418;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v43(v405, v395, v42);
            v43(&a1[v40[11]], &a2[v40[11]], v42);
            *(void *)&a1[v40[12]] = *(void *)&a2[v40[12]];
            uint64_t v46 = v40[13];
            uint64_t v47 = &a1[v46];
            uint64_t v48 = &a2[v46];
            sub_1DEA75598(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
            uint64_t v50 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
            *(void *)&v47[*(int *)(v50 + 20)] = *(void *)&v48[*(int *)(v50 + 20)];
            uint64_t v51 = *(int *)(v50 + 24);
            uint64_t v52 = &v47[v51];
            uint64_t v53 = &v48[v51];
            sub_1DEA75598(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
            uint64_t v55 = v54;
            uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
            swift_retain();
            v56(v52, v53, v55);
            *(void *)&a1[v40[14]] = *(void *)&a2[v40[14]];
            a1[v40[15]] = a2[v40[15]];
            uint64_t v57 = v40[16];
            uint64_t v58 = &a1[v57];
            uint64_t v59 = &a2[v57];
            uint64_t v60 = sub_1DFDF8F10();
            char v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
            swift_unknownObjectRetain();
            v61(v58, v59, v60);
            uint64_t v62 = v40[17];
            char v63 = &a1[v62];
            uint64_t v64 = &a2[v62];
            uint64_t v65 = sub_1DFDF7CB0();
            uint64_t v66 = *(void *)(v65 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
            {
              sub_1DEA6AA34(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
              memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
            }
            *(void *)&a1[v40[18]] = *(void *)&a2[v40[18]];
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 6u:
            sub_1DEA536E4();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
            uint64_t v69 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
            id v70 = &a1[v69];
            uint64_t v71 = &a2[v69];
            uint64_t v72 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
            goto LABEL_48;
          case 7u:
            uint64_t v73 = *((void *)a2 + 1);
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v73;
            uint64_t v74 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
            uint64_t v75 = v74[5];
            uint64_t v76 = &a1[v75];
            uint64_t v77 = &a2[v75];
            uint64_t v78 = sub_1DFDF8C20();
            uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
            swift_bridgeObjectRetain();
            v79(v76, v77, v78);
            v79(&a1[v74[6]], &a2[v74[6]], v78);
            *(void *)&a1[v74[7]] = *(void *)&a2[v74[7]];
            *(void *)&a1[v74[8]] = *(void *)&a2[v74[8]];
            uint64_t v80 = v74[9];
            uint64_t v81 = &a1[v80];
            uint64_t v82 = &a2[v80];
            type metadata accessor for FeedPaywallModel(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            char *v81 = *v82;
            v419 = v81;
            v414 = v82;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v84 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v85 = v84[5];
              uint64_t v86 = &v81[v85];
              uint64_t v87 = &v82[v85];
              uint64_t v88 = sub_1DFDE7220();
              uint64_t v89 = *(void *)(v88 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
              {
                sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
              }
              *(void *)&v81[v84[6]] = *(void *)&v82[v84[6]];
              *(void *)&v81[v84[7]] = *(void *)&v82[v84[7]];
              *(void *)&v81[v84[8]] = *(void *)&v82[v84[8]];
              uint64_t v145 = v84[9];
              uint64_t v146 = *(void **)&v82[v145];
              *(void *)&v81[v145] = v146;
              uint64_t v147 = v84[10];
              v148 = *(void **)&v82[v147];
              *(void *)&v81[v147] = v148;
              uint64_t v149 = v84[11];
              uint64_t v150 = *(void **)&v82[v149];
              *(void *)&v81[v149] = v150;
              uint64_t v151 = v84[12];
              v362 = *(void **)&v82[v151];
              *(void *)&v81[v151] = v362;
              uint64_t v152 = v84[13];
              v367 = *(void **)&v82[v152];
              *(void *)&v81[v152] = v367;
              uint64_t v153 = v84[14];
              v379 = *(void **)&v82[v153];
              *(void *)&v81[v153] = v379;
              uint64_t v154 = v84[15];
              v385 = *(void **)&v82[v154];
              *(void *)&v81[v154] = v385;
              uint64_t v155 = v84[16];
              v390 = *(void **)&v82[v155];
              *(void *)&v81[v155] = v390;
              uint64_t v156 = v84[17];
              v398 = *(void **)&v82[v156];
              *(void *)&v81[v156] = v398;
              uint64_t v157 = v84[18];
              v407 = *(void **)&v82[v157];
              *(void *)&v81[v157] = v407;
              uint64_t v158 = v84[19];
              uint64_t v159 = &v81[v158];
              v160 = &v82[v158];
              uint64_t v373 = *((void *)v160 + 1);
              *(void *)uint64_t v159 = *(void *)v160;
              *((void *)v159 + 1) = v373;
              uint64_t v161 = v84[20];
              uint64_t v162 = &v81[v161];
              v163 = &v82[v161];
              uint64_t v164 = *((void *)v163 + 1);
              *(void *)uint64_t v162 = *(void *)v163;
              *((void *)v162 + 1) = v164;
              uint64_t v165 = v84[21];
              uint64_t v166 = &v419[v165];
              v167 = &v82[v165];
              uint64_t v168 = *((void *)v167 + 1);
              *(void *)uint64_t v166 = *(void *)v167;
              *((void *)v166 + 1) = v168;
              uint64_t v169 = v84[22];
              v356 = &v82[v169];
              v359 = &v419[v169];
              uint64_t v170 = sub_1DFDEF360();
              v353 = *(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16);
              id v171 = v146;
              uint64_t v131 = v419;
              id v172 = v148;
              id v173 = v150;
              id v174 = v362;
              id v175 = v367;
              id v176 = v379;
              id v177 = v385;
              id v178 = v390;
              id v179 = v398;
              id v180 = v407;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v353(v359, v356, v170);
              uint64_t v181 = v84[23];
              v182 = &v419[v181];
              v183 = &v82[v181];
              uint64_t v184 = *((void *)v183 + 1);
              *(void *)v182 = *(void *)v183;
              *((void *)v182 + 1) = v184;
              uint64_t v185 = v84[24];
              v139 = &v419[v185];
              uint64_t v140 = &v82[v185];
              uint64_t v141 = sub_1DFDEF130();
              uint64_t v142 = *(void *)(v141 - 8);
              v186 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48);
              swift_bridgeObjectRetain();
              if (!v186(v140, 1, v141)) {
                goto LABEL_28;
              }
            }
            else
            {
              uint64_t v120 = (void *)*((void *)v82 + 1);
              v121 = (void *)*((void *)v82 + 2);
              *((void *)v81 + 1) = v120;
              *((void *)v81 + 2) = v121;
              v389 = (void *)*((void *)v82 + 3);
              v406 = (void *)*((void *)v82 + 4);
              *((void *)v81 + 3) = v389;
              *((void *)v81 + 4) = v406;
              *(_OWORD *)(v81 + 40) = *(_OWORD *)(v82 + 40);
              v397 = (void *)*((void *)v82 + 8);
              *((void *)v81 + 7) = *((void *)v82 + 7);
              *((void *)v81 + 8) = v397;
              uint64_t v122 = *((void *)v82 + 10);
              *((void *)v81 + 9) = *((void *)v82 + 9);
              *((void *)v81 + 10) = v122;
              uint64_t v123 = *((void *)v82 + 12);
              *((void *)v81 + 11) = *((void *)v82 + 11);
              *((void *)v81 + 12) = v123;
              uint64_t v124 = *((void *)v82 + 14);
              *((void *)v81 + 13) = *((void *)v82 + 13);
              *((void *)v81 + 14) = v124;
              uint64_t v125 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v126 = v125[16];
              v378 = &v82[v126];
              v384 = &v81[v126];
              uint64_t v127 = sub_1DFDEF360();
              v372 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
              id v128 = v120;
              id v129 = v121;
              id v130 = v389;
              uint64_t v131 = v419;
              id v132 = v406;
              id v133 = v397;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v372(v384, v378, v127);
              uint64_t v134 = v125[17];
              uint64_t v135 = &v419[v134];
              uint64_t v136 = &v82[v134];
              uint64_t v137 = *((void *)v136 + 1);
              *(void *)uint64_t v135 = *(void *)v136;
              *((void *)v135 + 1) = v137;
              uint64_t v138 = v125[18];
              v139 = &v419[v138];
              uint64_t v140 = &v82[v138];
              uint64_t v141 = sub_1DFDEF130();
              uint64_t v142 = *(void *)(v141 - 8);
              uint64_t v143 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48);
              swift_bridgeObjectRetain();
              if (!v143(v140, 1, v141))
              {
LABEL_28:
                (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
LABEL_29:
                swift_storeEnumTagMultiPayload();
                v408 = (int *)type metadata accessor for FeedPaywallConfig();
                uint64_t v187 = v408[5];
                v188 = &v131[v187];
                v189 = &v414[v187];
                int v190 = swift_getEnumCaseMultiPayload();
                char *v188 = *v189;
                if (v190 == 1)
                {
                  v191 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                  uint64_t v192 = v191[5];
                  v193 = &v188[v192];
                  v194 = &v189[v192];
                  uint64_t v195 = sub_1DFDE7220();
                  uint64_t v196 = *(void *)(v195 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48))(v194, 1, v195))
                  {
                    sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                    memcpy(v193, v194, *(void *)(*(void *)(v197 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v193, v194, v195);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v196 + 56))(v193, 0, 1, v195);
                  }
                  *(void *)&v188[v191[6]] = *(void *)&v189[v191[6]];
                  *(void *)&v188[v191[7]] = *(void *)&v189[v191[7]];
                  *(void *)&v188[v191[8]] = *(void *)&v189[v191[8]];
                  uint64_t v222 = v191[9];
                  v223 = *(void **)&v189[v222];
                  *(void *)&v188[v222] = v223;
                  uint64_t v224 = v191[10];
                  v225 = *(void **)&v189[v224];
                  *(void *)&v188[v224] = v225;
                  uint64_t v226 = v191[11];
                  v357 = *(void **)&v189[v226];
                  *(void *)&v188[v226] = v357;
                  uint64_t v227 = v191[12];
                  v360 = *(void **)&v189[v227];
                  *(void *)&v188[v227] = v360;
                  uint64_t v228 = v191[13];
                  v364 = *(void **)&v189[v228];
                  *(void *)&v188[v228] = v364;
                  uint64_t v229 = v191[14];
                  v375 = *(void **)&v189[v229];
                  *(void *)&v188[v229] = v375;
                  uint64_t v230 = v191[15];
                  v381 = *(void **)&v189[v230];
                  *(void *)&v188[v230] = v381;
                  uint64_t v231 = v191[16];
                  v386 = *(void **)&v189[v231];
                  *(void *)&v188[v231] = v386;
                  uint64_t v232 = v191[17];
                  v392 = *(void **)&v189[v232];
                  *(void *)&v188[v232] = v392;
                  uint64_t v233 = v191[18];
                  v400 = *(void **)&v189[v233];
                  *(void *)&v188[v233] = v400;
                  uint64_t v234 = v191[19];
                  v235 = &v188[v234];
                  v236 = &v189[v234];
                  uint64_t v369 = *((void *)v236 + 1);
                  *(void *)v235 = *(void *)v236;
                  *((void *)v235 + 1) = v369;
                  uint64_t v237 = v191[20];
                  v238 = &v188[v237];
                  v239 = &v189[v237];
                  uint64_t v240 = *((void *)v239 + 1);
                  *(void *)v238 = *(void *)v239;
                  *((void *)v238 + 1) = v240;
                  uint64_t v241 = v191[21];
                  v242 = &v188[v241];
                  v243 = &v189[v241];
                  uint64_t v244 = *((void *)v243 + 1);
                  *(void *)v242 = *(void *)v243;
                  *((void *)v242 + 1) = v244;
                  uint64_t v245 = v191[22];
                  v351 = &v189[v245];
                  v354 = &v188[v245];
                  uint64_t v246 = sub_1DFDEF360();
                  v349 = *(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 16);
                  id v247 = v223;
                  id v248 = v225;
                  id v249 = v357;
                  id v250 = v360;
                  id v251 = v364;
                  id v252 = v375;
                  id v253 = v381;
                  id v254 = v386;
                  id v255 = v392;
                  id v256 = v400;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v349(v354, v351, v246);
                  uint64_t v257 = v191[23];
                  v258 = &v188[v257];
                  v259 = &v189[v257];
                  uint64_t v260 = *((void *)v259 + 1);
                  *(void *)v258 = *(void *)v259;
                  *((void *)v258 + 1) = v260;
                  uint64_t v261 = v191[24];
                  v216 = &v188[v261];
                  v217 = &v189[v261];
                  uint64_t v218 = sub_1DFDEF130();
                  uint64_t v219 = *(void *)(v218 - 8);
                  v262 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v219 + 48);
                  swift_bridgeObjectRetain();
                  if (!v262(v217, 1, v218)) {
                    goto LABEL_36;
                  }
                }
                else
                {
                  v199 = (void *)*((void *)v189 + 1);
                  v198 = (void *)*((void *)v189 + 2);
                  *((void *)v188 + 1) = v199;
                  *((void *)v188 + 2) = v198;
                  v380 = (void *)*((void *)v189 + 3);
                  v399 = (void *)*((void *)v189 + 4);
                  *((void *)v188 + 3) = v380;
                  *((void *)v188 + 4) = v399;
                  *(_OWORD *)(v188 + 40) = *(_OWORD *)(v189 + 40);
                  v391 = (void *)*((void *)v189 + 8);
                  *((void *)v188 + 7) = *((void *)v189 + 7);
                  *((void *)v188 + 8) = v391;
                  uint64_t v200 = *((void *)v189 + 10);
                  *((void *)v188 + 9) = *((void *)v189 + 9);
                  *((void *)v188 + 10) = v200;
                  uint64_t v201 = *((void *)v189 + 12);
                  *((void *)v188 + 11) = *((void *)v189 + 11);
                  *((void *)v188 + 12) = v201;
                  uint64_t v202 = *((void *)v189 + 14);
                  *((void *)v188 + 13) = *((void *)v189 + 13);
                  *((void *)v188 + 14) = v202;
                  v203 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                  uint64_t v204 = v203[16];
                  v368 = &v189[v204];
                  v374 = &v188[v204];
                  uint64_t v205 = sub_1DFDEF360();
                  v363 = *(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16);
                  id v206 = v199;
                  id v207 = v198;
                  id v208 = v380;
                  id v209 = v399;
                  id v210 = v391;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v363(v374, v368, v205);
                  uint64_t v211 = v203[17];
                  v212 = &v188[v211];
                  v213 = &v189[v211];
                  uint64_t v214 = *((void *)v213 + 1);
                  *(void *)v212 = *(void *)v213;
                  *((void *)v212 + 1) = v214;
                  uint64_t v215 = v203[18];
                  v216 = &v188[v215];
                  v217 = &v189[v215];
                  uint64_t v218 = sub_1DFDEF130();
                  uint64_t v219 = *(void *)(v218 - 8);
                  v220 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v219 + 48);
                  swift_bridgeObjectRetain();
                  if (!v220(v217, 1, v218))
                  {
LABEL_36:
                    (*(void (**)(char *, char *, uint64_t))(v219 + 16))(v216, v217, v218);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v219 + 56))(v216, 0, 1, v218);
LABEL_37:
                    swift_storeEnumTagMultiPayload();
                    uint64_t v263 = v408[6];
                    v264 = &v419[v263];
                    v265 = &v414[v263];
                    int v266 = swift_getEnumCaseMultiPayload();
                    char *v264 = *v265;
                    if (v266 == 1)
                    {
                      v267 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                      uint64_t v268 = v267[5];
                      v269 = &v264[v268];
                      v270 = &v265[v268];
                      uint64_t v271 = sub_1DFDE7220();
                      uint64_t v272 = *(void *)(v271 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v272 + 48))(v270, 1, v271))
                      {
                        sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                        memcpy(v269, v270, *(void *)(*(void *)(v273 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(v272 + 16))(v269, v270, v271);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v272 + 56))(v269, 0, 1, v271);
                      }
                      *(void *)&v264[v267[6]] = *(void *)&v265[v267[6]];
                      *(void *)&v264[v267[7]] = *(void *)&v265[v267[7]];
                      *(void *)&v264[v267[8]] = *(void *)&v265[v267[8]];
                      uint64_t v298 = v267[9];
                      v299 = *(void **)&v265[v298];
                      *(void *)&v264[v298] = v299;
                      uint64_t v300 = v267[10];
                      v301 = *(void **)&v265[v300];
                      *(void *)&v264[v300] = v301;
                      uint64_t v302 = v267[11];
                      v358 = *(void **)&v265[v302];
                      *(void *)&v264[v302] = v358;
                      uint64_t v303 = v267[12];
                      v361 = *(void **)&v265[v303];
                      *(void *)&v264[v303] = v361;
                      uint64_t v304 = v267[13];
                      v366 = *(void **)&v265[v304];
                      *(void *)&v264[v304] = v366;
                      uint64_t v305 = v267[14];
                      v377 = *(void **)&v265[v305];
                      *(void *)&v264[v305] = v377;
                      uint64_t v306 = v267[15];
                      v383 = *(void **)&v265[v306];
                      *(void *)&v264[v306] = v383;
                      uint64_t v307 = v267[16];
                      v387 = *(void **)&v265[v307];
                      *(void *)&v264[v307] = v387;
                      uint64_t v308 = v267[17];
                      v394 = *(void **)&v265[v308];
                      *(void *)&v264[v308] = v394;
                      uint64_t v309 = v267[18];
                      v402 = *(void **)&v265[v309];
                      *(void *)&v264[v309] = v402;
                      uint64_t v310 = v267[19];
                      v311 = &v264[v310];
                      v312 = &v265[v310];
                      uint64_t v371 = *((void *)v312 + 1);
                      *(void *)v311 = *(void *)v312;
                      *((void *)v311 + 1) = v371;
                      uint64_t v313 = v267[20];
                      v314 = &v264[v313];
                      v315 = &v265[v313];
                      uint64_t v316 = *((void *)v315 + 1);
                      *(void *)v314 = *(void *)v315;
                      *((void *)v314 + 1) = v316;
                      uint64_t v317 = v267[21];
                      v318 = &v264[v317];
                      v319 = &v265[v317];
                      uint64_t v320 = *((void *)v319 + 1);
                      *(void *)v318 = *(void *)v319;
                      *((void *)v318 + 1) = v320;
                      uint64_t v321 = v267[22];
                      v352 = &v265[v321];
                      v355 = &v264[v321];
                      uint64_t v322 = sub_1DFDEF360();
                      v350 = *(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16);
                      id v323 = v299;
                      id v324 = v301;
                      id v325 = v358;
                      id v326 = v361;
                      id v327 = v366;
                      id v328 = v377;
                      id v329 = v383;
                      id v330 = v387;
                      id v331 = v394;
                      id v332 = v402;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v350(v355, v352, v322);
                      uint64_t v333 = v267[23];
                      v334 = &v264[v333];
                      v335 = &v265[v333];
                      uint64_t v336 = *((void *)v335 + 1);
                      *(void *)v334 = *(void *)v335;
                      *((void *)v334 + 1) = v336;
                      uint64_t v337 = v267[24];
                      v292 = &v264[v337];
                      v293 = &v265[v337];
                      uint64_t v294 = sub_1DFDEF130();
                      uint64_t v295 = *(void *)(v294 - 8);
                      v338 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v295 + 48);
                      swift_bridgeObjectRetain();
                      if (!v338(v293, 1, v294)) {
                        goto LABEL_44;
                      }
                    }
                    else
                    {
                      v275 = (void *)*((void *)v265 + 1);
                      v274 = (void *)*((void *)v265 + 2);
                      *((void *)v264 + 1) = v275;
                      *((void *)v264 + 2) = v274;
                      v382 = (void *)*((void *)v265 + 3);
                      v401 = (void *)*((void *)v265 + 4);
                      *((void *)v264 + 3) = v382;
                      *((void *)v264 + 4) = v401;
                      *(_OWORD *)(v264 + 40) = *(_OWORD *)(v265 + 40);
                      v393 = (void *)*((void *)v265 + 8);
                      *((void *)v264 + 7) = *((void *)v265 + 7);
                      *((void *)v264 + 8) = v393;
                      uint64_t v276 = *((void *)v265 + 10);
                      *((void *)v264 + 9) = *((void *)v265 + 9);
                      *((void *)v264 + 10) = v276;
                      uint64_t v277 = *((void *)v265 + 12);
                      *((void *)v264 + 11) = *((void *)v265 + 11);
                      *((void *)v264 + 12) = v277;
                      uint64_t v278 = *((void *)v265 + 14);
                      *((void *)v264 + 13) = *((void *)v265 + 13);
                      *((void *)v264 + 14) = v278;
                      v279 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                      uint64_t v280 = v279[16];
                      v370 = &v265[v280];
                      v376 = &v264[v280];
                      uint64_t v281 = sub_1DFDEF360();
                      v365 = *(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16);
                      id v282 = v275;
                      id v283 = v274;
                      id v284 = v382;
                      id v285 = v401;
                      id v286 = v393;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v365(v376, v370, v281);
                      uint64_t v287 = v279[17];
                      v288 = &v264[v287];
                      v289 = &v265[v287];
                      uint64_t v290 = *((void *)v289 + 1);
                      *(void *)v288 = *(void *)v289;
                      *((void *)v288 + 1) = v290;
                      uint64_t v291 = v279[18];
                      v292 = &v264[v291];
                      v293 = &v265[v291];
                      uint64_t v294 = sub_1DFDEF130();
                      uint64_t v295 = *(void *)(v294 - 8);
                      v296 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v295 + 48);
                      swift_bridgeObjectRetain();
                      if (!v296(v293, 1, v294))
                      {
LABEL_44:
                        (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v293, v294);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
                        goto LABEL_45;
                      }
                    }
                    sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                    memcpy(v292, v293, *(void *)(*(void *)(v297 - 8) + 64));
LABEL_45:
                    swift_storeEnumTagMultiPayload();
                    uint64_t v339 = v408[7];
                    v340 = &v419[v339];
                    v341 = &v414[v339];
                    uint64_t v342 = type metadata accessor for FeedPaywallType(0);
                    if (swift_getEnumCaseMultiPayload())
                    {
                      memcpy(v340, v341, *(void *)(*(void *)(v342 - 8) + 64));
                    }
                    else
                    {
                      *(void *)v340 = *(void *)v341;
                      sub_1DEC84AA4();
                      uint64_t v344 = *(int *)(v343 + 48);
                      v345 = &v340[v344];
                      v346 = &v341[v344];
                      uint64_t v347 = sub_1DFDEEE80();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 16))(v345, v346, v347);
                      swift_storeEnumTagMultiPayload();
                    }
LABEL_48:
                    swift_storeEnumTagMultiPayload();
LABEL_49:
                    swift_storeEnumTagMultiPayload();
                    return a1;
                  }
                }
                sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v216, v217, *(void *)(*(void *)(v221 - 8) + 64));
                goto LABEL_37;
              }
            }
            sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
            memcpy(v139, v140, *(void *)(*(void *)(v144 - 8) + 64));
            goto LABEL_29;
          case 8u:
            uint64_t v91 = *((void *)a2 + 1);
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v91;
            uint64_t v92 = *((void *)a2 + 3);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = v92;
            uint64_t v93 = (void *)*((void *)a2 + 4);
            v415 = (void *)*((void *)a2 + 5);
            *((void *)a1 + 4) = v93;
            *((void *)a1 + 5) = v415;
            uint64_t v94 = *((void *)a2 + 7);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = v94;
            uint64_t v95 = *((void *)a2 + 9);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = v95;
            *((void *)a1 + 10) = *((void *)a2 + 10);
            uint64_t v96 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
            uint64_t v97 = v96[11];
            v388 = &a2[v97];
            v396 = &a1[v97];
            uint64_t v98 = sub_1DFDF8C20();
            unint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v100 = v93;
            id v101 = v415;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v99(v396, v388, v98);
            v99(&a1[v96[12]], &a2[v96[12]], v98);
            *(void *)&a1[v96[13]] = *(void *)&a2[v96[13]];
            goto LABEL_48;
          case 9u:
            sub_1DEA53948();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(a1, a2, v102);
            uint64_t v103 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
            uint64_t v104 = &a1[v103];
            char v105 = &a2[v103];
            uint64_t v106 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
            goto LABEL_48;
          case 0xCu:
            uint64_t v108 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(a1, a2, v108);
            uint64_t v109 = type metadata accessor for NewspaperMagazineFeedGroup();
            *(void *)&a1[*(int *)(v109 + 20)] = *(void *)&a2[*(int *)(v109 + 20)];
            *(void *)&a1[*(int *)(v109 + 24)] = *(void *)&a2[*(int *)(v109 + 24)];
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 0xDu:
            sub_1DEA5387C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(a1, a2, v110);
            uint64_t v111 = type metadata accessor for CuratedMagazineFeedGroup();
            uint64_t v112 = *(int *)(v111 + 20);
            uint64_t v113 = &a1[v112];
            uint64_t v114 = &a2[v112];
            uint64_t v115 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
            uint64_t v116 = *(int *)(v111 + 24);
            char v117 = &a1[v116];
            uint64_t v118 = &a2[v116];
            uint64_t v119 = sub_1DFDF8F10();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
            goto LABEL_48;
          default:
            uint64_t v8 = *((void *)a2 + 1);
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v8;
            uint64_t v9 = *((void *)a2 + 3);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = v9;
            uint64_t v11 = (void *)*((void *)a2 + 4);
            uint64_t v10 = *((void *)a2 + 5);
            *((void *)a1 + 4) = v11;
            *((void *)a1 + 5) = v10;
            uint64_t v12 = *((void *)a2 + 7);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = v12;
            uint64_t v13 = *((void *)a2 + 9);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = v13;
            uint64_t v416 = type metadata accessor for CategoriesMagazineFeedGroup();
            uint64_t v14 = *(int *)(v416 + 40);
            v411 = &a1[v14];
            v409 = &a2[v14];
            uint64_t v15 = sub_1DFDF8C20();
            v403 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v16 = v11;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v403(v411, v409, v15);
            *(void *)&a1[*(int *)(v416 + 44)] = *(void *)&a2[*(int *)(v416 + 44)];
            goto LABEL_48;
        }
      case 3u:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        goto LABEL_49;
      default:
        uint64_t v6 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v6;
        swift_bridgeObjectRetain();
        goto LABEL_49;
    }
  }
  uint64_t v7 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = (char *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1DEFCF338(char *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
LABEL_2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
      type metadata accessor for MagazineFeedGroup();
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = type metadata accessor for CategoriesMagazineFeedGroup();
          goto LABEL_13;
        case 1:
          sub_1DEA530F0();
          (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          uint64_t v5 = type metadata accessor for FeaturedArticleMagazineFeedGroup();
          goto LABEL_24;
        case 2:
        case 10:
        case 11:
          goto LABEL_25;
        case 3:
          sub_1DEA52F58();
          (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
          uint64_t v5 = type metadata accessor for FeaturedIssueArticleMagazineFeedGroup();
          goto LABEL_24;
        case 4:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = type metadata accessor for InlineCategoriesMagazineFeedGroup();
LABEL_13:
          a1 += *(int *)(v3 + 40);
          uint64_t v7 = sub_1DFDF8C20();
          goto LABEL_26;
        case 5:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v8 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
          uint64_t v9 = &a1[v8[10]];
          uint64_t v10 = sub_1DFDF8C20();
          uint64_t v11 = *(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
          v11(v9, v10);
          v11(&a1[v8[11]], v10);
          uint64_t v12 = &a1[v8[13]];
          sub_1DEA75598(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
          (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
          uint64_t v14 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
          swift_release();
          uint64_t v15 = &v12[*(int *)(v14 + 24)];
          sub_1DEA75598(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
          (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
          swift_unknownObjectRelease();
          uint64_t v17 = &a1[v8[16]];
          uint64_t v18 = sub_1DFDF8F10();
          (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
          uint64_t v19 = &a1[v8[17]];
          uint64_t v20 = sub_1DFDF7CB0();
          uint64_t v21 = *(void *)(v20 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
            (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
          }
          goto LABEL_2;
        case 6:
          sub_1DEA536E4();
          (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
          uint64_t v5 = type metadata accessor for NewIssueMagazineFeedGroup();
          goto LABEL_24;
        case 7:
          swift_bridgeObjectRelease();
          uint64_t v23 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
          uint64_t v24 = &a1[v23[5]];
          uint64_t v25 = sub_1DFDF8C20();
          uint64_t v26 = *(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8);
          v26(v24, v25);
          v26(&a1[v23[6]], v25);
          uint64_t v27 = (id *)&a1[v23[9]];
          type metadata accessor for FeedPaywallModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v28 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            uint64_t v29 = (char *)v27 + v28[5];
            uint64_t v30 = sub_1DFDE7220();
            uint64_t v31 = *(void *)(v30 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30)) {
              (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v32 = (char *)v27 + v28[22];
            uint64_t v33 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
            swift_bridgeObjectRelease();
            uint64_t v34 = v28[24];
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v47 = type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v48 = (char *)v27 + *(int *)(v47 + 64);
            uint64_t v49 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
            swift_bridgeObjectRelease();
            uint64_t v34 = *(int *)(v47 + 72);
          }
          uint64_t v50 = (char *)v27 + v34;
          uint64_t v51 = sub_1DFDEF130();
          uint64_t v52 = *(void *)(v51 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51)) {
            (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v51);
          }
          uint64_t v53 = (int *)type metadata accessor for FeedPaywallConfig();
          uint64_t v54 = (id *)((char *)v27 + v53[5]);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v55 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            uint64_t v56 = (char *)v54 + v55[5];
            uint64_t v57 = sub_1DFDE7220();
            uint64_t v58 = *(void *)(v57 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57)) {
              (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v57);
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v59 = (char *)v54 + v55[22];
            uint64_t v60 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
            swift_bridgeObjectRelease();
            uint64_t v61 = v55[24];
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v62 = type metadata accessor for FeedRegularPaywallModel(0);
            char v63 = (char *)v54 + *(int *)(v62 + 64);
            uint64_t v64 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
            swift_bridgeObjectRelease();
            uint64_t v61 = *(int *)(v62 + 72);
          }
          uint64_t v65 = (char *)v54 + v61;
          uint64_t v66 = sub_1DFDEF130();
          uint64_t v67 = *(void *)(v66 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66)) {
            (*(void (**)(char *, uint64_t))(v67 + 8))(v65, v66);
          }
          uint64_t v68 = (id *)((char *)v27 + v53[6]);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v69 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            id v70 = (char *)v68 + v69[5];
            uint64_t v71 = sub_1DFDE7220();
            uint64_t v72 = *(void *)(v71 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71)) {
              (*(void (**)(char *, uint64_t))(v72 + 8))(v70, v71);
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v73 = (char *)v68 + v69[22];
            uint64_t v74 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v74 - 8) + 8))(v73, v74);
            swift_bridgeObjectRelease();
            uint64_t v75 = v69[24];
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v76 = type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v77 = (char *)v68 + *(int *)(v76 + 64);
            uint64_t v78 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v78 - 8) + 8))(v77, v78);
            swift_bridgeObjectRelease();
            uint64_t v75 = *(int *)(v76 + 72);
          }
          uint64_t v79 = (char *)v68 + v75;
          uint64_t v80 = sub_1DFDEF130();
          uint64_t v81 = *(void *)(v80 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80)) {
            (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v80);
          }
          uint64_t v82 = (char *)v27 + v53[7];
          type metadata accessor for FeedPaywallType(0);
          uint64_t result = swift_getEnumCaseMultiPayload();
          if (result) {
            return result;
          }
          sub_1DEC84AA4();
          a1 = &v82[*(int *)(v83 + 48)];
          uint64_t v7 = sub_1DFDEEE80();
          goto LABEL_26;
        case 8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v35 = type metadata accessor for RecommendedIssuesMagazineFeedGroup();
          uint64_t v36 = &a1[*(int *)(v35 + 44)];
          uint64_t v37 = sub_1DFDF8C20();
          uint64_t v84 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8);
          ((void (*)(void *__return_ptr, char *, uint64_t))v84)((void *)(v37 - 8), v36, v37);
          uint64_t v38 = &a1[*(int *)(v35 + 48)];
          uint64_t v39 = v37;
          uint64_t v40 = v84;
          goto LABEL_27;
        case 9:
          sub_1DEA53948();
          (*(void (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(a1, v41);
          uint64_t v5 = type metadata accessor for TopicMagazineFeedGroup();
LABEL_24:
          a1 += *(int *)(v5 + 20);
LABEL_25:
          uint64_t v7 = sub_1DFDF7010();
          goto LABEL_26;
        case 12:
          uint64_t v42 = sub_1DFDF7010();
          (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(a1, v42);
          type metadata accessor for NewspaperMagazineFeedGroup();
          swift_unknownObjectRelease();
          goto LABEL_2;
        case 13:
          sub_1DEA5387C();
          (*(void (**)(char *, uint64_t))(*(void *)(v43 - 8) + 8))(a1, v43);
          uint64_t v44 = type metadata accessor for CuratedMagazineFeedGroup();
          id v45 = &a1[*(int *)(v44 + 20)];
          uint64_t v46 = sub_1DFDF7010();
          (*(void (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
          a1 += *(int *)(v44 + 24);
          uint64_t v7 = sub_1DFDF8F10();
LABEL_26:
          uint64_t v40 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
          uint64_t v39 = v7;
          uint64_t v38 = a1;
LABEL_27:
          uint64_t result = v40(v38, v39);
          break;
        default:
          return result;
      }
      break;
    case 3:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1DEFD0398(char *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      type metadata accessor for MagazineFeedGroup();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1DEA530F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
          uint64_t v15 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
          uint64_t v16 = &a1[v15];
          uint64_t v17 = &a2[v15];
          uint64_t v18 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
          goto LABEL_46;
        case 2u:
        case 0xAu:
        case 0xBu:
          uint64_t v104 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(a1, a2, v104);
          goto LABEL_46;
        case 3u:
          sub_1DEA52F58();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
          uint64_t v20 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
          uint64_t v21 = &a1[v20];
          uint64_t v22 = &a2[v20];
          uint64_t v23 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          goto LABEL_46;
        case 4u:
          uint64_t v24 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v24;
          uint64_t v25 = *((void *)a2 + 3);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          *((void *)a1 + 3) = v25;
          uint64_t v27 = (void *)*((void *)a2 + 4);
          uint64_t v26 = *((void *)a2 + 5);
          *((void *)a1 + 4) = v27;
          *((void *)a1 + 5) = v26;
          uint64_t v414 = *((void *)a2 + 7);
          *((void *)a1 + 6) = *((void *)a2 + 6);
          *((void *)a1 + 7) = v414;
          uint64_t v28 = *((void *)a2 + 9);
          *((void *)a1 + 8) = *((void *)a2 + 8);
          *((void *)a1 + 9) = v28;
          uint64_t v29 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
          uint64_t v30 = v29[10];
          v409 = &a1[v30];
          v407 = &a2[v30];
          uint64_t v31 = sub_1DFDF8C20();
          v401 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v32 = v27;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v401(v409, v407, v31);
          *(void *)&a1[v29[11]] = *(void *)&a2[v29[11]];
          *(void *)&a1[v29[12]] = *(void *)&a2[v29[12]];
          goto LABEL_46;
        case 5u:
          uint64_t v33 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v33;
          uint64_t v34 = *((void *)a2 + 3);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          *((void *)a1 + 3) = v34;
          uint64_t v35 = (void *)*((void *)a2 + 4);
          v415 = (void *)*((void *)a2 + 5);
          *((void *)a1 + 4) = v35;
          *((void *)a1 + 5) = v415;
          uint64_t v410 = *((void *)a2 + 7);
          *((void *)a1 + 6) = *((void *)a2 + 6);
          *((void *)a1 + 7) = v410;
          uint64_t v36 = *((void *)a2 + 9);
          *((void *)a1 + 8) = *((void *)a2 + 8);
          *((void *)a1 + 9) = v36;
          uint64_t v37 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
          uint64_t v38 = v37[10];
          v392 = &a2[v38];
          v402 = &a1[v38];
          uint64_t v39 = sub_1DFDF8C20();
          uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v41 = v35;
          id v42 = v415;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v40(v402, v392, v39);
          v40(&a1[v37[11]], &a2[v37[11]], v39);
          *(void *)&a1[v37[12]] = *(void *)&a2[v37[12]];
          uint64_t v43 = v37[13];
          uint64_t v44 = &a1[v43];
          id v45 = &a2[v43];
          sub_1DEA75598(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
          uint64_t v47 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
          *(void *)&v44[*(int *)(v47 + 20)] = *(void *)&v45[*(int *)(v47 + 20)];
          uint64_t v48 = *(int *)(v47 + 24);
          uint64_t v49 = &v44[v48];
          uint64_t v50 = &v45[v48];
          sub_1DEA75598(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
          uint64_t v52 = v51;
          uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
          swift_retain();
          v53(v49, v50, v52);
          *(void *)&a1[v37[14]] = *(void *)&a2[v37[14]];
          a1[v37[15]] = a2[v37[15]];
          uint64_t v54 = v37[16];
          uint64_t v55 = &a1[v54];
          uint64_t v56 = &a2[v54];
          uint64_t v57 = sub_1DFDF8F10();
          uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
          swift_unknownObjectRetain();
          v58(v55, v56, v57);
          uint64_t v59 = v37[17];
          uint64_t v60 = &a1[v59];
          uint64_t v61 = &a2[v59];
          uint64_t v62 = sub_1DFDF7CB0();
          uint64_t v63 = *(void *)(v62 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
          {
            sub_1DEA6AA34(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
            memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
          }
          *(void *)&a1[v37[18]] = *(void *)&a2[v37[18]];
          swift_bridgeObjectRetain();
          goto LABEL_46;
        case 6u:
          sub_1DEA536E4();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
          uint64_t v66 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
          uint64_t v67 = &a1[v66];
          uint64_t v68 = &a2[v66];
          uint64_t v69 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
          goto LABEL_46;
        case 7u:
          uint64_t v70 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v70;
          uint64_t v71 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
          uint64_t v72 = v71[5];
          uint64_t v73 = &a1[v72];
          uint64_t v74 = &a2[v72];
          uint64_t v75 = sub_1DFDF8C20();
          uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
          swift_bridgeObjectRetain();
          v76(v73, v74, v75);
          v76(&a1[v71[6]], &a2[v71[6]], v75);
          *(void *)&a1[v71[7]] = *(void *)&a2[v71[7]];
          *(void *)&a1[v71[8]] = *(void *)&a2[v71[8]];
          uint64_t v77 = v71[9];
          uint64_t v78 = &a1[v77];
          uint64_t v79 = &a2[v77];
          type metadata accessor for FeedPaywallModel(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *uint64_t v78 = *v79;
          uint64_t v416 = v78;
          v411 = v79;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v81 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            uint64_t v82 = v81[5];
            uint64_t v83 = &v78[v82];
            uint64_t v84 = &v79[v82];
            uint64_t v85 = sub_1DFDE7220();
            uint64_t v86 = *(void *)(v85 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
            {
              sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v84, v85);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
            }
            *(void *)&v78[v81[6]] = *(void *)&v79[v81[6]];
            *(void *)&v78[v81[7]] = *(void *)&v79[v81[7]];
            *(void *)&v78[v81[8]] = *(void *)&v79[v81[8]];
            uint64_t v142 = v81[9];
            uint64_t v143 = *(void **)&v79[v142];
            *(void *)&v78[v142] = v143;
            uint64_t v144 = v81[10];
            uint64_t v145 = *(void **)&v79[v144];
            *(void *)&v78[v144] = v145;
            uint64_t v146 = v81[11];
            uint64_t v147 = *(void **)&v79[v146];
            *(void *)&v78[v146] = v147;
            uint64_t v148 = v81[12];
            v359 = *(void **)&v79[v148];
            *(void *)&v78[v148] = v359;
            uint64_t v149 = v81[13];
            v364 = *(void **)&v79[v149];
            *(void *)&v78[v149] = v364;
            uint64_t v150 = v81[14];
            v376 = *(void **)&v79[v150];
            *(void *)&v78[v150] = v376;
            uint64_t v151 = v81[15];
            v382 = *(void **)&v79[v151];
            *(void *)&v78[v151] = v382;
            uint64_t v152 = v81[16];
            v387 = *(void **)&v79[v152];
            *(void *)&v78[v152] = v387;
            uint64_t v153 = v81[17];
            v395 = *(void **)&v79[v153];
            *(void *)&v78[v153] = v395;
            uint64_t v154 = v81[18];
            v404 = *(void **)&v79[v154];
            *(void *)&v78[v154] = v404;
            uint64_t v155 = v81[19];
            uint64_t v156 = &v78[v155];
            uint64_t v157 = &v79[v155];
            uint64_t v370 = *((void *)v157 + 1);
            *(void *)uint64_t v156 = *(void *)v157;
            *((void *)v156 + 1) = v370;
            uint64_t v158 = v81[20];
            uint64_t v159 = &v78[v158];
            v160 = &v79[v158];
            uint64_t v161 = *((void *)v160 + 1);
            *(void *)uint64_t v159 = *(void *)v160;
            *((void *)v159 + 1) = v161;
            uint64_t v162 = v81[21];
            v163 = &v416[v162];
            uint64_t v164 = &v79[v162];
            uint64_t v165 = *((void *)v164 + 1);
            *(void *)v163 = *(void *)v164;
            *((void *)v163 + 1) = v165;
            uint64_t v166 = v81[22];
            v353 = &v79[v166];
            v356 = &v416[v166];
            uint64_t v167 = sub_1DFDEF360();
            v350 = *(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16);
            id v168 = v143;
            id v128 = v416;
            id v169 = v145;
            id v170 = v147;
            id v171 = v359;
            id v172 = v364;
            id v173 = v376;
            id v174 = v382;
            id v175 = v387;
            id v176 = v395;
            id v177 = v404;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v350(v356, v353, v167);
            uint64_t v178 = v81[23];
            id v179 = &v416[v178];
            id v180 = &v79[v178];
            uint64_t v181 = *((void *)v180 + 1);
            *(void *)id v179 = *(void *)v180;
            *((void *)v179 + 1) = v181;
            uint64_t v182 = v81[24];
            uint64_t v136 = &v416[v182];
            uint64_t v137 = &v79[v182];
            uint64_t v138 = sub_1DFDEF130();
            uint64_t v139 = *(void *)(v138 - 8);
            v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48);
            swift_bridgeObjectRetain();
            if (!v183(v137, 1, v138)) {
              goto LABEL_26;
            }
          }
          else
          {
            char v117 = (void *)*((void *)v79 + 1);
            uint64_t v118 = (void *)*((void *)v79 + 2);
            *((void *)v78 + 1) = v117;
            *((void *)v78 + 2) = v118;
            v386 = (void *)*((void *)v79 + 3);
            v403 = (void *)*((void *)v79 + 4);
            *((void *)v78 + 3) = v386;
            *((void *)v78 + 4) = v403;
            *(_OWORD *)(v78 + 40) = *(_OWORD *)(v79 + 40);
            v394 = (void *)*((void *)v79 + 8);
            *((void *)v78 + 7) = *((void *)v79 + 7);
            *((void *)v78 + 8) = v394;
            uint64_t v119 = *((void *)v79 + 10);
            *((void *)v78 + 9) = *((void *)v79 + 9);
            *((void *)v78 + 10) = v119;
            uint64_t v120 = *((void *)v79 + 12);
            *((void *)v78 + 11) = *((void *)v79 + 11);
            *((void *)v78 + 12) = v120;
            uint64_t v121 = *((void *)v79 + 14);
            *((void *)v78 + 13) = *((void *)v79 + 13);
            *((void *)v78 + 14) = v121;
            uint64_t v122 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v123 = v122[16];
            v375 = &v79[v123];
            v381 = &v78[v123];
            uint64_t v124 = sub_1DFDEF360();
            uint64_t v369 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
            id v125 = v117;
            id v126 = v118;
            id v127 = v386;
            id v128 = v416;
            id v129 = v403;
            id v130 = v394;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v369(v381, v375, v124);
            uint64_t v131 = v122[17];
            id v132 = &v416[v131];
            id v133 = &v79[v131];
            uint64_t v134 = *((void *)v133 + 1);
            *(void *)id v132 = *(void *)v133;
            *((void *)v132 + 1) = v134;
            uint64_t v135 = v122[18];
            uint64_t v136 = &v416[v135];
            uint64_t v137 = &v79[v135];
            uint64_t v138 = sub_1DFDEF130();
            uint64_t v139 = *(void *)(v138 - 8);
            uint64_t v140 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48);
            swift_bridgeObjectRetain();
            if (!v140(v137, 1, v138))
            {
LABEL_26:
              (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v136, v137, v138);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v136, 0, 1, v138);
LABEL_27:
              swift_storeEnumTagMultiPayload();
              v405 = (int *)type metadata accessor for FeedPaywallConfig();
              uint64_t v184 = v405[5];
              uint64_t v185 = &v128[v184];
              v186 = &v411[v184];
              int v187 = swift_getEnumCaseMultiPayload();
              *uint64_t v185 = *v186;
              if (v187 == 1)
              {
                v188 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                uint64_t v189 = v188[5];
                int v190 = &v185[v189];
                v191 = &v186[v189];
                uint64_t v192 = sub_1DFDE7220();
                uint64_t v193 = *(void *)(v192 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v191, 1, v192))
                {
                  sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                  memcpy(v190, v191, *(void *)(*(void *)(v194 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v190, v191, v192);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
                }
                *(void *)&v185[v188[6]] = *(void *)&v186[v188[6]];
                *(void *)&v185[v188[7]] = *(void *)&v186[v188[7]];
                *(void *)&v185[v188[8]] = *(void *)&v186[v188[8]];
                uint64_t v219 = v188[9];
                v220 = *(void **)&v186[v219];
                *(void *)&v185[v219] = v220;
                uint64_t v221 = v188[10];
                uint64_t v222 = *(void **)&v186[v221];
                *(void *)&v185[v221] = v222;
                uint64_t v223 = v188[11];
                v354 = *(void **)&v186[v223];
                *(void *)&v185[v223] = v354;
                uint64_t v224 = v188[12];
                v357 = *(void **)&v186[v224];
                *(void *)&v185[v224] = v357;
                uint64_t v225 = v188[13];
                v361 = *(void **)&v186[v225];
                *(void *)&v185[v225] = v361;
                uint64_t v226 = v188[14];
                v372 = *(void **)&v186[v226];
                *(void *)&v185[v226] = v372;
                uint64_t v227 = v188[15];
                v378 = *(void **)&v186[v227];
                *(void *)&v185[v227] = v378;
                uint64_t v228 = v188[16];
                v383 = *(void **)&v186[v228];
                *(void *)&v185[v228] = v383;
                uint64_t v229 = v188[17];
                v389 = *(void **)&v186[v229];
                *(void *)&v185[v229] = v389;
                uint64_t v230 = v188[18];
                v397 = *(void **)&v186[v230];
                *(void *)&v185[v230] = v397;
                uint64_t v231 = v188[19];
                uint64_t v232 = &v185[v231];
                uint64_t v233 = &v186[v231];
                uint64_t v366 = *((void *)v233 + 1);
                *(void *)uint64_t v232 = *(void *)v233;
                *((void *)v232 + 1) = v366;
                uint64_t v234 = v188[20];
                v235 = &v185[v234];
                v236 = &v186[v234];
                uint64_t v237 = *((void *)v236 + 1);
                *(void *)v235 = *(void *)v236;
                *((void *)v235 + 1) = v237;
                uint64_t v238 = v188[21];
                v239 = &v185[v238];
                uint64_t v240 = &v186[v238];
                uint64_t v241 = *((void *)v240 + 1);
                *(void *)v239 = *(void *)v240;
                *((void *)v239 + 1) = v241;
                uint64_t v242 = v188[22];
                v348 = &v186[v242];
                v351 = &v185[v242];
                uint64_t v243 = sub_1DFDEF360();
                v346 = *(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 16);
                id v244 = v220;
                id v245 = v222;
                id v246 = v354;
                id v247 = v357;
                id v248 = v361;
                id v249 = v372;
                id v250 = v378;
                id v251 = v383;
                id v252 = v389;
                id v253 = v397;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v346(v351, v348, v243);
                uint64_t v254 = v188[23];
                id v255 = &v185[v254];
                id v256 = &v186[v254];
                uint64_t v257 = *((void *)v256 + 1);
                *(void *)id v255 = *(void *)v256;
                *((void *)v255 + 1) = v257;
                uint64_t v258 = v188[24];
                v213 = &v185[v258];
                uint64_t v214 = &v186[v258];
                uint64_t v215 = sub_1DFDEF130();
                uint64_t v216 = *(void *)(v215 - 8);
                v259 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48);
                swift_bridgeObjectRetain();
                if (!v259(v214, 1, v215)) {
                  goto LABEL_34;
                }
              }
              else
              {
                uint64_t v196 = (void *)*((void *)v186 + 1);
                uint64_t v195 = (void *)*((void *)v186 + 2);
                *((void *)v185 + 1) = v196;
                *((void *)v185 + 2) = v195;
                v377 = (void *)*((void *)v186 + 3);
                v396 = (void *)*((void *)v186 + 4);
                *((void *)v185 + 3) = v377;
                *((void *)v185 + 4) = v396;
                *(_OWORD *)(v185 + 40) = *(_OWORD *)(v186 + 40);
                v388 = (void *)*((void *)v186 + 8);
                *((void *)v185 + 7) = *((void *)v186 + 7);
                *((void *)v185 + 8) = v388;
                uint64_t v197 = *((void *)v186 + 10);
                *((void *)v185 + 9) = *((void *)v186 + 9);
                *((void *)v185 + 10) = v197;
                uint64_t v198 = *((void *)v186 + 12);
                *((void *)v185 + 11) = *((void *)v186 + 11);
                *((void *)v185 + 12) = v198;
                uint64_t v199 = *((void *)v186 + 14);
                *((void *)v185 + 13) = *((void *)v186 + 13);
                *((void *)v185 + 14) = v199;
                uint64_t v200 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                uint64_t v201 = v200[16];
                v365 = &v186[v201];
                uint64_t v371 = &v185[v201];
                uint64_t v202 = sub_1DFDEF360();
                v360 = *(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16);
                id v203 = v196;
                id v204 = v195;
                id v205 = v377;
                id v206 = v396;
                id v207 = v388;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v360(v371, v365, v202);
                uint64_t v208 = v200[17];
                id v209 = &v185[v208];
                id v210 = &v186[v208];
                uint64_t v211 = *((void *)v210 + 1);
                *(void *)id v209 = *(void *)v210;
                *((void *)v209 + 1) = v211;
                uint64_t v212 = v200[18];
                v213 = &v185[v212];
                uint64_t v214 = &v186[v212];
                uint64_t v215 = sub_1DFDEF130();
                uint64_t v216 = *(void *)(v215 - 8);
                v217 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48);
                swift_bridgeObjectRetain();
                if (!v217(v214, 1, v215))
                {
LABEL_34:
                  (*(void (**)(char *, char *, uint64_t))(v216 + 16))(v213, v214, v215);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v216 + 56))(v213, 0, 1, v215);
LABEL_35:
                  swift_storeEnumTagMultiPayload();
                  uint64_t v260 = v405[6];
                  uint64_t v261 = &v416[v260];
                  v262 = &v411[v260];
                  int v263 = swift_getEnumCaseMultiPayload();
                  *uint64_t v261 = *v262;
                  if (v263 == 1)
                  {
                    v264 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                    uint64_t v265 = v264[5];
                    int v266 = &v261[v265];
                    v267 = &v262[v265];
                    uint64_t v268 = sub_1DFDE7220();
                    uint64_t v269 = *(void *)(v268 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v269 + 48))(v267, 1, v268))
                    {
                      sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                      memcpy(v266, v267, *(void *)(*(void *)(v270 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v269 + 16))(v266, v267, v268);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v269 + 56))(v266, 0, 1, v268);
                    }
                    *(void *)&v261[v264[6]] = *(void *)&v262[v264[6]];
                    *(void *)&v261[v264[7]] = *(void *)&v262[v264[7]];
                    *(void *)&v261[v264[8]] = *(void *)&v262[v264[8]];
                    uint64_t v295 = v264[9];
                    v296 = *(void **)&v262[v295];
                    *(void *)&v261[v295] = v296;
                    uint64_t v297 = v264[10];
                    uint64_t v298 = *(void **)&v262[v297];
                    *(void *)&v261[v297] = v298;
                    uint64_t v299 = v264[11];
                    v355 = *(void **)&v262[v299];
                    *(void *)&v261[v299] = v355;
                    uint64_t v300 = v264[12];
                    v358 = *(void **)&v262[v300];
                    *(void *)&v261[v300] = v358;
                    uint64_t v301 = v264[13];
                    v363 = *(void **)&v262[v301];
                    *(void *)&v261[v301] = v363;
                    uint64_t v302 = v264[14];
                    v374 = *(void **)&v262[v302];
                    *(void *)&v261[v302] = v374;
                    uint64_t v303 = v264[15];
                    v380 = *(void **)&v262[v303];
                    *(void *)&v261[v303] = v380;
                    uint64_t v304 = v264[16];
                    v384 = *(void **)&v262[v304];
                    *(void *)&v261[v304] = v384;
                    uint64_t v305 = v264[17];
                    v391 = *(void **)&v262[v305];
                    *(void *)&v261[v305] = v391;
                    uint64_t v306 = v264[18];
                    v399 = *(void **)&v262[v306];
                    *(void *)&v261[v306] = v399;
                    uint64_t v307 = v264[19];
                    uint64_t v308 = &v261[v307];
                    uint64_t v309 = &v262[v307];
                    uint64_t v368 = *((void *)v309 + 1);
                    *(void *)uint64_t v308 = *(void *)v309;
                    *((void *)v308 + 1) = v368;
                    uint64_t v310 = v264[20];
                    v311 = &v261[v310];
                    v312 = &v262[v310];
                    uint64_t v313 = *((void *)v312 + 1);
                    *(void *)v311 = *(void *)v312;
                    *((void *)v311 + 1) = v313;
                    uint64_t v314 = v264[21];
                    v315 = &v261[v314];
                    uint64_t v316 = &v262[v314];
                    uint64_t v317 = *((void *)v316 + 1);
                    *(void *)v315 = *(void *)v316;
                    *((void *)v315 + 1) = v317;
                    uint64_t v318 = v264[22];
                    v349 = &v262[v318];
                    v352 = &v261[v318];
                    uint64_t v319 = sub_1DFDEF360();
                    uint64_t v347 = *(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 16);
                    id v320 = v296;
                    id v321 = v298;
                    id v322 = v355;
                    id v323 = v358;
                    id v324 = v363;
                    id v325 = v374;
                    id v326 = v380;
                    id v327 = v384;
                    id v328 = v391;
                    id v329 = v399;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v347(v352, v349, v319);
                    uint64_t v330 = v264[23];
                    id v331 = &v261[v330];
                    id v332 = &v262[v330];
                    uint64_t v333 = *((void *)v332 + 1);
                    *(void *)id v331 = *(void *)v332;
                    *((void *)v331 + 1) = v333;
                    uint64_t v334 = v264[24];
                    v289 = &v261[v334];
                    uint64_t v290 = &v262[v334];
                    uint64_t v291 = sub_1DFDEF130();
                    uint64_t v292 = *(void *)(v291 - 8);
                    v335 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v292 + 48);
                    swift_bridgeObjectRetain();
                    if (!v335(v290, 1, v291)) {
                      goto LABEL_42;
                    }
                  }
                  else
                  {
                    uint64_t v272 = (void *)*((void *)v262 + 1);
                    uint64_t v271 = (void *)*((void *)v262 + 2);
                    *((void *)v261 + 1) = v272;
                    *((void *)v261 + 2) = v271;
                    v379 = (void *)*((void *)v262 + 3);
                    v398 = (void *)*((void *)v262 + 4);
                    *((void *)v261 + 3) = v379;
                    *((void *)v261 + 4) = v398;
                    *(_OWORD *)(v261 + 40) = *(_OWORD *)(v262 + 40);
                    v390 = (void *)*((void *)v262 + 8);
                    *((void *)v261 + 7) = *((void *)v262 + 7);
                    *((void *)v261 + 8) = v390;
                    uint64_t v273 = *((void *)v262 + 10);
                    *((void *)v261 + 9) = *((void *)v262 + 9);
                    *((void *)v261 + 10) = v273;
                    uint64_t v274 = *((void *)v262 + 12);
                    *((void *)v261 + 11) = *((void *)v262 + 11);
                    *((void *)v261 + 12) = v274;
                    uint64_t v275 = *((void *)v262 + 14);
                    *((void *)v261 + 13) = *((void *)v262 + 13);
                    *((void *)v261 + 14) = v275;
                    uint64_t v276 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                    uint64_t v277 = v276[16];
                    v367 = &v262[v277];
                    uint64_t v373 = &v261[v277];
                    uint64_t v278 = sub_1DFDEF360();
                    v362 = *(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16);
                    id v279 = v272;
                    id v280 = v271;
                    id v281 = v379;
                    id v282 = v398;
                    id v283 = v390;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v362(v373, v367, v278);
                    uint64_t v284 = v276[17];
                    id v285 = &v261[v284];
                    id v286 = &v262[v284];
                    uint64_t v287 = *((void *)v286 + 1);
                    *(void *)id v285 = *(void *)v286;
                    *((void *)v285 + 1) = v287;
                    uint64_t v288 = v276[18];
                    v289 = &v261[v288];
                    uint64_t v290 = &v262[v288];
                    uint64_t v291 = sub_1DFDEF130();
                    uint64_t v292 = *(void *)(v291 - 8);
                    v293 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v292 + 48);
                    swift_bridgeObjectRetain();
                    if (!v293(v290, 1, v291))
                    {
LABEL_42:
                      (*(void (**)(char *, char *, uint64_t))(v292 + 16))(v289, v290, v291);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v292 + 56))(v289, 0, 1, v291);
LABEL_43:
                      swift_storeEnumTagMultiPayload();
                      uint64_t v336 = v405[7];
                      uint64_t v337 = &v416[v336];
                      v338 = &v411[v336];
                      uint64_t v339 = type metadata accessor for FeedPaywallType(0);
                      if (swift_getEnumCaseMultiPayload())
                      {
                        memcpy(v337, v338, *(void *)(*(void *)(v339 - 8) + 64));
                      }
                      else
                      {
                        *(void *)uint64_t v337 = *(void *)v338;
                        sub_1DEC84AA4();
                        uint64_t v341 = *(int *)(v340 + 48);
                        uint64_t v342 = &v337[v341];
                        uint64_t v343 = &v338[v341];
                        uint64_t v344 = sub_1DFDEEE80();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v344 - 8) + 16))(v342, v343, v344);
                        swift_storeEnumTagMultiPayload();
                      }
LABEL_46:
                      swift_storeEnumTagMultiPayload();
                      goto LABEL_47;
                    }
                  }
                  sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                  memcpy(v289, v290, *(void *)(*(void *)(v294 - 8) + 64));
                  goto LABEL_43;
                }
              }
              sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
              memcpy(v213, v214, *(void *)(*(void *)(v218 - 8) + 64));
              goto LABEL_35;
            }
          }
          sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
          memcpy(v136, v137, *(void *)(*(void *)(v141 - 8) + 64));
          goto LABEL_27;
        case 8u:
          uint64_t v88 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v88;
          uint64_t v89 = *((void *)a2 + 3);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          *((void *)a1 + 3) = v89;
          uint64_t v90 = (void *)*((void *)a2 + 4);
          v412 = (void *)*((void *)a2 + 5);
          *((void *)a1 + 4) = v90;
          *((void *)a1 + 5) = v412;
          uint64_t v91 = *((void *)a2 + 7);
          *((void *)a1 + 6) = *((void *)a2 + 6);
          *((void *)a1 + 7) = v91;
          uint64_t v92 = *((void *)a2 + 9);
          *((void *)a1 + 8) = *((void *)a2 + 8);
          *((void *)a1 + 9) = v92;
          *((void *)a1 + 10) = *((void *)a2 + 10);
          uint64_t v93 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
          uint64_t v94 = v93[11];
          v385 = &a2[v94];
          v393 = &a1[v94];
          uint64_t v95 = sub_1DFDF8C20();
          uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v97 = v90;
          id v98 = v412;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v96(v393, v385, v95);
          v96(&a1[v93[12]], &a2[v93[12]], v95);
          *(void *)&a1[v93[13]] = *(void *)&a2[v93[13]];
          goto LABEL_46;
        case 9u:
          sub_1DEA53948();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(a1, a2, v99);
          uint64_t v100 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
          id v101 = &a1[v100];
          uint64_t v102 = &a2[v100];
          uint64_t v103 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v101, v102, v103);
          goto LABEL_46;
        case 0xCu:
          uint64_t v105 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(a1, a2, v105);
          uint64_t v106 = type metadata accessor for NewspaperMagazineFeedGroup();
          *(void *)&a1[*(int *)(v106 + 20)] = *(void *)&a2[*(int *)(v106 + 20)];
          *(void *)&a1[*(int *)(v106 + 24)] = *(void *)&a2[*(int *)(v106 + 24)];
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_46;
        case 0xDu:
          sub_1DEA5387C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(a1, a2, v107);
          uint64_t v108 = type metadata accessor for CuratedMagazineFeedGroup();
          uint64_t v109 = *(int *)(v108 + 20);
          uint64_t v110 = &a1[v109];
          uint64_t v111 = &a2[v109];
          uint64_t v112 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
          uint64_t v113 = *(int *)(v108 + 24);
          uint64_t v114 = &a1[v113];
          uint64_t v115 = &a2[v113];
          uint64_t v116 = sub_1DFDF8F10();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
          goto LABEL_46;
        default:
          uint64_t v5 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v5;
          uint64_t v6 = *((void *)a2 + 3);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          *((void *)a1 + 3) = v6;
          uint64_t v8 = (void *)*((void *)a2 + 4);
          uint64_t v7 = *((void *)a2 + 5);
          *((void *)a1 + 4) = v8;
          *((void *)a1 + 5) = v7;
          uint64_t v9 = *((void *)a2 + 7);
          *((void *)a1 + 6) = *((void *)a2 + 6);
          *((void *)a1 + 7) = v9;
          uint64_t v10 = *((void *)a2 + 9);
          *((void *)a1 + 8) = *((void *)a2 + 8);
          *((void *)a1 + 9) = v10;
          uint64_t v413 = type metadata accessor for CategoriesMagazineFeedGroup();
          uint64_t v11 = *(int *)(v413 + 40);
          v408 = &a1[v11];
          v406 = &a2[v11];
          uint64_t v12 = sub_1DFDF8C20();
          v400 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v13 = v8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v400(v408, v406, v12);
          *(void *)&a1[*(int *)(v413 + 44)] = *(void *)&a2[*(int *)(v413 + 44)];
          goto LABEL_46;
      }
    case 3u:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      goto LABEL_47;
    default:
      uint64_t v4 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v4;
      swift_bridgeObjectRetain();
LABEL_47:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

char *sub_1DEFD24AC(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1DEFC8BE4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TodaySectionFactoryError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        type metadata accessor for MagazineFeedGroup();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1DEA530F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
            uint64_t v10 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
            uint64_t v11 = &a1[v10];
            uint64_t v12 = &a2[v10];
            uint64_t v13 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
            goto LABEL_47;
          case 2u:
          case 0xAu:
          case 0xBu:
            uint64_t v87 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(a1, a2, v87);
            goto LABEL_47;
          case 3u:
            sub_1DEA52F58();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
            uint64_t v15 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
            uint64_t v16 = &a1[v15];
            uint64_t v17 = &a2[v15];
            uint64_t v18 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
            goto LABEL_47;
          case 4u:
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = *((void *)a2 + 3);
            uint64_t v19 = (void *)*((void *)a2 + 4);
            *((void *)a1 + 4) = v19;
            *((void *)a1 + 5) = *((void *)a2 + 5);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = *((void *)a2 + 7);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = *((void *)a2 + 9);
            uint64_t v20 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
            uint64_t v21 = v20[10];
            uint64_t v371 = &a1[v21];
            uint64_t v368 = &a2[v21];
            uint64_t v22 = sub_1DFDF8C20();
            v362 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v23 = v19;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v362(v371, v368, v22);
            *(void *)&a1[v20[11]] = *(void *)&a2[v20[11]];
            *(void *)&a1[v20[12]] = *(void *)&a2[v20[12]];
            goto LABEL_47;
          case 5u:
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = *((void *)a2 + 3);
            uint64_t v24 = (void *)*((void *)a2 + 4);
            *((void *)a1 + 4) = v24;
            v374 = (void *)*((void *)a2 + 5);
            *((void *)a1 + 5) = v374;
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = *((void *)a2 + 7);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = *((void *)a2 + 9);
            uint64_t v25 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
            uint64_t v26 = v25[10];
            v353 = &a2[v26];
            v363 = &a1[v26];
            uint64_t v27 = sub_1DFDF8C20();
            uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v29 = v24;
            id v30 = v374;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v28(v363, v353, v27);
            v28(&a1[v25[11]], &a2[v25[11]], v27);
            *(void *)&a1[v25[12]] = *(void *)&a2[v25[12]];
            uint64_t v31 = v25[13];
            id v32 = &a1[v31];
            uint64_t v33 = &a2[v31];
            sub_1DEA75598(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
            uint64_t v35 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
            *(void *)&v32[*(int *)(v35 + 20)] = *(void *)&v33[*(int *)(v35 + 20)];
            uint64_t v36 = *(int *)(v35 + 24);
            uint64_t v37 = &v32[v36];
            uint64_t v38 = &v33[v36];
            sub_1DEA75598(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
            uint64_t v40 = v39;
            id v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
            swift_retain();
            v41(v37, v38, v40);
            *(void *)&a1[v25[14]] = *(void *)&a2[v25[14]];
            a1[v25[15]] = a2[v25[15]];
            uint64_t v42 = v25[16];
            uint64_t v43 = &a1[v42];
            uint64_t v44 = &a2[v42];
            uint64_t v45 = sub_1DFDF8F10();
            uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
            swift_unknownObjectRetain();
            v46(v43, v44, v45);
            uint64_t v47 = v25[17];
            uint64_t v48 = &a1[v47];
            uint64_t v49 = &a2[v47];
            uint64_t v50 = sub_1DFDF7CB0();
            uint64_t v51 = *(void *)(v50 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
            {
              sub_1DEA6AA34(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
              memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
            }
            *(void *)&a1[v25[18]] = *(void *)&a2[v25[18]];
            swift_bridgeObjectRetain();
            goto LABEL_47;
          case 6u:
            sub_1DEA536E4();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
            uint64_t v54 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
            uint64_t v55 = &a1[v54];
            uint64_t v56 = &a2[v54];
            uint64_t v57 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
            goto LABEL_47;
          case 7u:
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            uint64_t v58 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
            uint64_t v59 = v58[5];
            uint64_t v60 = &a1[v59];
            uint64_t v61 = &a2[v59];
            uint64_t v62 = sub_1DFDF8C20();
            uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
            swift_bridgeObjectRetain();
            v63(v60, v61, v62);
            v63(&a1[v58[6]], &a2[v58[6]], v62);
            *(void *)&a1[v58[7]] = *(void *)&a2[v58[7]];
            *(void *)&a1[v58[8]] = *(void *)&a2[v58[8]];
            uint64_t v64 = v58[9];
            uint64_t v65 = &a1[v64];
            uint64_t v66 = &a2[v64];
            type metadata accessor for FeedPaywallModel(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            char *v65 = *v66;
            v372 = v66;
            v375 = v65;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v68 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v69 = v68[5];
              uint64_t v70 = &v65[v69];
              uint64_t v71 = &v66[v69];
              uint64_t v72 = sub_1DFDE7220();
              uint64_t v73 = *(void *)(v72 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
              {
                sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
              }
              *(void *)&v65[v68[6]] = *(void *)&v66[v68[6]];
              *(void *)&v65[v68[7]] = *(void *)&v66[v68[7]];
              *(void *)&v65[v68[8]] = *(void *)&v66[v68[8]];
              uint64_t v122 = v68[9];
              uint64_t v123 = *(void **)&v66[v122];
              *(void *)&v65[v122] = v123;
              uint64_t v124 = v68[10];
              id v125 = *(void **)&v66[v124];
              *(void *)&v65[v124] = v125;
              uint64_t v126 = v68[11];
              id v127 = *(void **)&v66[v126];
              *(void *)&v65[v126] = v127;
              uint64_t v128 = v68[12];
              id v321 = *(void **)&v66[v128];
              *(void *)&v65[v128] = v321;
              uint64_t v129 = v68[13];
              id v326 = *(void **)&v66[v129];
              *(void *)&v65[v129] = v326;
              uint64_t v130 = v68[14];
              v335 = *(void **)&v66[v130];
              *(void *)&v65[v130] = v335;
              uint64_t v131 = v68[15];
              uint64_t v341 = *(void **)&v66[v131];
              *(void *)&v65[v131] = v341;
              uint64_t v132 = v68[16];
              v348 = *(void **)&v66[v132];
              *(void *)&v65[v132] = v348;
              uint64_t v133 = v68[17];
              v356 = *(void **)&v66[v133];
              *(void *)&v65[v133] = v356;
              uint64_t v134 = v68[18];
              v365 = *(void **)&v66[v134];
              *(void *)&v65[v134] = v365;
              uint64_t v135 = v68[19];
              uint64_t v136 = &v65[v135];
              uint64_t v137 = &v66[v135];
              *(void *)uint64_t v136 = *(void *)v137;
              *((void *)v136 + 1) = *((void *)v137 + 1);
              uint64_t v138 = v68[20];
              uint64_t v139 = &v65[v138];
              uint64_t v140 = &v66[v138];
              *(void *)uint64_t v139 = *(void *)v140;
              *((void *)v139 + 1) = *((void *)v140 + 1);
              uint64_t v141 = v68[21];
              uint64_t v142 = &v65[v141];
              uint64_t v143 = &v66[v141];
              *(void *)uint64_t v142 = *(void *)v143;
              *((void *)v142 + 1) = *((void *)v143 + 1);
              uint64_t v144 = v68[22];
              v315 = &v66[v144];
              uint64_t v318 = &v65[v144];
              uint64_t v145 = sub_1DFDEF360();
              v312 = *(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16);
              id v146 = v123;
              id v147 = v125;
              id v148 = v127;
              id v149 = v321;
              id v150 = v326;
              id v151 = v335;
              id v152 = v341;
              id v153 = v348;
              id v154 = v356;
              id v155 = v365;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v156 = v145;
              uint64_t v111 = v375;
              v312(v318, v315, v156);
              uint64_t v157 = v68[23];
              uint64_t v158 = &v375[v157];
              uint64_t v159 = &v66[v157];
              *(void *)uint64_t v158 = *(void *)v159;
              *((void *)v158 + 1) = *((void *)v159 + 1);
              uint64_t v160 = v68[24];
              uint64_t v116 = &v375[v160];
              char v117 = &v66[v160];
              uint64_t v118 = sub_1DFDEF130();
              uint64_t v119 = *(void *)(v118 - 8);
              uint64_t v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48);
              swift_bridgeObjectRetain();
              if (!v161(v117, 1, v118)) {
                goto LABEL_27;
              }
            }
            else
            {
              uint64_t v100 = (void *)*((void *)v66 + 1);
              *((void *)v65 + 1) = v100;
              uint64_t v347 = (void *)*((void *)v66 + 2);
              *((void *)v65 + 2) = v347;
              v355 = (void *)*((void *)v66 + 3);
              *((void *)v65 + 3) = v355;
              v364 = (void *)*((void *)v66 + 4);
              *((void *)v65 + 4) = v364;
              *((void *)v65 + 5) = *((void *)v66 + 5);
              *((void *)v65 + 6) = *((void *)v66 + 6);
              *((void *)v65 + 7) = *((void *)v66 + 7);
              id v101 = (void *)*((void *)v66 + 8);
              *((void *)v65 + 8) = v101;
              *((void *)v65 + 9) = *((void *)v66 + 9);
              *((void *)v65 + 10) = *((void *)v66 + 10);
              *((void *)v65 + 11) = *((void *)v66 + 11);
              *((void *)v65 + 12) = *((void *)v66 + 12);
              *((void *)v65 + 13) = *((void *)v66 + 13);
              *((void *)v65 + 14) = *((void *)v66 + 14);
              uint64_t v102 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v103 = v102[16];
              uint64_t v334 = &v66[v103];
              uint64_t v340 = &v65[v103];
              uint64_t v104 = sub_1DFDEF360();
              id v329 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
              id v105 = v100;
              id v106 = v347;
              id v107 = v355;
              id v108 = v364;
              id v109 = v101;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v110 = v104;
              uint64_t v111 = v375;
              v329(v340, v334, v110);
              uint64_t v112 = v102[17];
              uint64_t v113 = &v375[v112];
              uint64_t v114 = &v66[v112];
              *(void *)uint64_t v113 = *(void *)v114;
              *((void *)v113 + 1) = *((void *)v114 + 1);
              uint64_t v115 = v102[18];
              uint64_t v116 = &v375[v115];
              char v117 = &v66[v115];
              uint64_t v118 = sub_1DFDEF130();
              uint64_t v119 = *(void *)(v118 - 8);
              uint64_t v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48);
              swift_bridgeObjectRetain();
              if (!v120(v117, 1, v118))
              {
LABEL_27:
                (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v116, v117, v118);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
LABEL_28:
                swift_storeEnumTagMultiPayload();
                uint64_t v366 = (int *)type metadata accessor for FeedPaywallConfig();
                uint64_t v162 = v366[5];
                v163 = &v111[v162];
                uint64_t v164 = &v372[v162];
                int v165 = swift_getEnumCaseMultiPayload();
                char *v163 = *v164;
                if (v165 == 1)
                {
                  uint64_t v166 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                  uint64_t v167 = v166[5];
                  id v168 = &v163[v167];
                  id v169 = &v164[v167];
                  uint64_t v170 = sub_1DFDE7220();
                  uint64_t v171 = *(void *)(v170 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v169, 1, v170))
                  {
                    sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                    memcpy(v168, v169, *(void *)(*(void *)(v172 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v168, v169, v170);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v170);
                  }
                  *(void *)&v163[v166[6]] = *(void *)&v164[v166[6]];
                  *(void *)&v163[v166[7]] = *(void *)&v164[v166[7]];
                  *(void *)&v163[v166[8]] = *(void *)&v164[v166[8]];
                  uint64_t v192 = v166[9];
                  uint64_t v193 = *(void **)&v164[v192];
                  *(void *)&v163[v192] = v193;
                  uint64_t v194 = v166[10];
                  uint64_t v195 = *(void **)&v164[v194];
                  *(void *)&v163[v194] = v195;
                  uint64_t v196 = v166[11];
                  uint64_t v316 = *(void **)&v164[v196];
                  *(void *)&v163[v196] = v316;
                  uint64_t v197 = v166[12];
                  uint64_t v319 = *(void **)&v164[v197];
                  *(void *)&v163[v197] = v319;
                  uint64_t v198 = v166[13];
                  id v323 = *(void **)&v164[v198];
                  *(void *)&v163[v198] = v323;
                  uint64_t v199 = v166[14];
                  id v331 = *(void **)&v164[v199];
                  *(void *)&v163[v199] = v331;
                  uint64_t v200 = v166[15];
                  uint64_t v337 = *(void **)&v164[v200];
                  *(void *)&v163[v200] = v337;
                  uint64_t v201 = v166[16];
                  uint64_t v343 = *(void **)&v164[v201];
                  *(void *)&v163[v201] = v343;
                  uint64_t v202 = v166[17];
                  v350 = *(void **)&v164[v202];
                  *(void *)&v163[v202] = v350;
                  uint64_t v203 = v166[18];
                  v358 = *(void **)&v164[v203];
                  *(void *)&v163[v203] = v358;
                  uint64_t v204 = v166[19];
                  id v205 = &v163[v204];
                  id v206 = &v164[v204];
                  *(void *)id v205 = *(void *)v206;
                  *((void *)v205 + 1) = *((void *)v206 + 1);
                  uint64_t v207 = v166[20];
                  uint64_t v208 = &v163[v207];
                  id v209 = &v164[v207];
                  *(void *)uint64_t v208 = *(void *)v209;
                  *((void *)v208 + 1) = *((void *)v209 + 1);
                  uint64_t v210 = v166[21];
                  uint64_t v211 = &v163[v210];
                  uint64_t v212 = &v164[v210];
                  *(void *)uint64_t v211 = *(void *)v212;
                  *((void *)v211 + 1) = *((void *)v212 + 1);
                  uint64_t v213 = v166[22];
                  uint64_t v310 = &v164[v213];
                  uint64_t v313 = &v163[v213];
                  uint64_t v214 = sub_1DFDEF360();
                  uint64_t v308 = *(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16);
                  id v215 = v193;
                  id v216 = v195;
                  id v217 = v316;
                  id v218 = v319;
                  id v219 = v323;
                  id v220 = v331;
                  id v221 = v337;
                  id v222 = v343;
                  id v223 = v350;
                  id v224 = v358;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v308(v313, v310, v214);
                  uint64_t v225 = v166[23];
                  uint64_t v226 = &v163[v225];
                  uint64_t v227 = &v164[v225];
                  *(void *)uint64_t v226 = *(void *)v227;
                  *((void *)v226 + 1) = *((void *)v227 + 1);
                  uint64_t v228 = v166[24];
                  v186 = &v163[v228];
                  int v187 = &v164[v228];
                  uint64_t v188 = sub_1DFDEF130();
                  uint64_t v189 = *(void *)(v188 - 8);
                  uint64_t v229 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48);
                  swift_bridgeObjectRetain();
                  if (!v229(v187, 1, v188)) {
                    goto LABEL_35;
                  }
                }
                else
                {
                  id v173 = (void *)*((void *)v164 + 1);
                  *((void *)v163 + 1) = v173;
                  uint64_t v342 = (void *)*((void *)v164 + 2);
                  *((void *)v163 + 2) = v342;
                  v349 = (void *)*((void *)v164 + 3);
                  *((void *)v163 + 3) = v349;
                  v357 = (void *)*((void *)v164 + 4);
                  *((void *)v163 + 4) = v357;
                  *((void *)v163 + 5) = *((void *)v164 + 5);
                  *((void *)v163 + 6) = *((void *)v164 + 6);
                  *((void *)v163 + 7) = *((void *)v164 + 7);
                  uint64_t v336 = (void *)*((void *)v164 + 8);
                  *((void *)v163 + 8) = v336;
                  *((void *)v163 + 9) = *((void *)v164 + 9);
                  *((void *)v163 + 10) = *((void *)v164 + 10);
                  *((void *)v163 + 11) = *((void *)v164 + 11);
                  *((void *)v163 + 12) = *((void *)v164 + 12);
                  *((void *)v163 + 13) = *((void *)v164 + 13);
                  *((void *)v163 + 14) = *((void *)v164 + 14);
                  id v174 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                  uint64_t v175 = v174[16];
                  id v327 = &v164[v175];
                  uint64_t v330 = &v163[v175];
                  uint64_t v176 = sub_1DFDEF360();
                  id v322 = *(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16);
                  id v177 = v173;
                  id v178 = v342;
                  id v179 = v349;
                  id v180 = v357;
                  id v181 = v336;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v322(v330, v327, v176);
                  uint64_t v182 = v174[17];
                  v183 = &v163[v182];
                  uint64_t v184 = &v164[v182];
                  *(void *)v183 = *(void *)v184;
                  *((void *)v183 + 1) = *((void *)v184 + 1);
                  uint64_t v185 = v174[18];
                  v186 = &v163[v185];
                  int v187 = &v164[v185];
                  uint64_t v188 = sub_1DFDEF130();
                  uint64_t v189 = *(void *)(v188 - 8);
                  int v190 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48);
                  swift_bridgeObjectRetain();
                  if (!v190(v187, 1, v188))
                  {
LABEL_35:
                    (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v186, v187, v188);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v189 + 56))(v186, 0, 1, v188);
LABEL_36:
                    swift_storeEnumTagMultiPayload();
                    uint64_t v230 = v366[6];
                    uint64_t v231 = &v375[v230];
                    uint64_t v232 = &v372[v230];
                    int v233 = swift_getEnumCaseMultiPayload();
                    *uint64_t v231 = *v232;
                    if (v233 == 1)
                    {
                      uint64_t v234 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                      uint64_t v235 = v234[5];
                      v236 = &v231[v235];
                      uint64_t v237 = &v232[v235];
                      uint64_t v238 = sub_1DFDE7220();
                      uint64_t v239 = *(void *)(v238 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v239 + 48))(v237, 1, v238))
                      {
                        sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                        memcpy(v236, v237, *(void *)(*(void *)(v240 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(v239 + 16))(v236, v237, v238);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v239 + 56))(v236, 0, 1, v238);
                      }
                      *(void *)&v231[v234[6]] = *(void *)&v232[v234[6]];
                      *(void *)&v231[v234[7]] = *(void *)&v232[v234[7]];
                      *(void *)&v231[v234[8]] = *(void *)&v232[v234[8]];
                      uint64_t v260 = v234[9];
                      uint64_t v261 = *(void **)&v232[v260];
                      *(void *)&v231[v260] = v261;
                      uint64_t v262 = v234[10];
                      int v263 = *(void **)&v232[v262];
                      *(void *)&v231[v262] = v263;
                      uint64_t v264 = v234[11];
                      uint64_t v317 = *(void **)&v232[v264];
                      *(void *)&v231[v264] = v317;
                      uint64_t v265 = v234[12];
                      id v320 = *(void **)&v232[v265];
                      *(void *)&v231[v265] = v320;
                      uint64_t v266 = v234[13];
                      id v325 = *(void **)&v232[v266];
                      *(void *)&v231[v266] = v325;
                      uint64_t v267 = v234[14];
                      uint64_t v333 = *(void **)&v232[v267];
                      *(void *)&v231[v267] = v333;
                      uint64_t v268 = v234[15];
                      uint64_t v339 = *(void **)&v232[v268];
                      *(void *)&v231[v268] = v339;
                      uint64_t v269 = v234[16];
                      v345 = *(void **)&v232[v269];
                      *(void *)&v231[v269] = v345;
                      uint64_t v270 = v234[17];
                      v352 = *(void **)&v232[v270];
                      *(void *)&v231[v270] = v352;
                      uint64_t v271 = v234[18];
                      v360 = *(void **)&v232[v271];
                      *(void *)&v231[v271] = v360;
                      uint64_t v272 = v234[19];
                      uint64_t v273 = &v231[v272];
                      uint64_t v274 = &v232[v272];
                      *(void *)uint64_t v273 = *(void *)v274;
                      *((void *)v273 + 1) = *((void *)v274 + 1);
                      uint64_t v275 = v234[20];
                      uint64_t v276 = &v231[v275];
                      uint64_t v277 = &v232[v275];
                      *(void *)uint64_t v276 = *(void *)v277;
                      *((void *)v276 + 1) = *((void *)v277 + 1);
                      uint64_t v278 = v234[21];
                      id v279 = &v231[v278];
                      id v280 = &v232[v278];
                      *(void *)id v279 = *(void *)v280;
                      *((void *)v279 + 1) = *((void *)v280 + 1);
                      uint64_t v281 = v234[22];
                      v311 = &v232[v281];
                      uint64_t v314 = &v231[v281];
                      uint64_t v282 = sub_1DFDEF360();
                      uint64_t v309 = *(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 16);
                      id v283 = v261;
                      id v284 = v263;
                      id v285 = v317;
                      id v286 = v320;
                      id v287 = v325;
                      id v288 = v333;
                      id v289 = v339;
                      id v290 = v345;
                      id v291 = v352;
                      id v292 = v360;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v309(v314, v311, v282);
                      uint64_t v293 = v234[23];
                      uint64_t v294 = &v231[v293];
                      uint64_t v295 = &v232[v293];
                      *(void *)uint64_t v294 = *(void *)v295;
                      *((void *)v294 + 1) = *((void *)v295 + 1);
                      uint64_t v296 = v234[24];
                      uint64_t v254 = &v231[v296];
                      id v255 = &v232[v296];
                      uint64_t v256 = sub_1DFDEF130();
                      uint64_t v257 = *(void *)(v256 - 8);
                      uint64_t v297 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v257 + 48);
                      swift_bridgeObjectRetain();
                      if (!v297(v255, 1, v256)) {
                        goto LABEL_43;
                      }
                    }
                    else
                    {
                      uint64_t v241 = (void *)*((void *)v232 + 1);
                      *((void *)v231 + 1) = v241;
                      uint64_t v344 = (void *)*((void *)v232 + 2);
                      *((void *)v231 + 2) = v344;
                      v351 = (void *)*((void *)v232 + 3);
                      *((void *)v231 + 3) = v351;
                      v359 = (void *)*((void *)v232 + 4);
                      *((void *)v231 + 4) = v359;
                      *((void *)v231 + 5) = *((void *)v232 + 5);
                      *((void *)v231 + 6) = *((void *)v232 + 6);
                      *((void *)v231 + 7) = *((void *)v232 + 7);
                      v338 = (void *)*((void *)v232 + 8);
                      *((void *)v231 + 8) = v338;
                      *((void *)v231 + 9) = *((void *)v232 + 9);
                      *((void *)v231 + 10) = *((void *)v232 + 10);
                      *((void *)v231 + 11) = *((void *)v232 + 11);
                      *((void *)v231 + 12) = *((void *)v232 + 12);
                      *((void *)v231 + 13) = *((void *)v232 + 13);
                      *((void *)v231 + 14) = *((void *)v232 + 14);
                      uint64_t v242 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                      uint64_t v243 = v242[16];
                      id v328 = &v232[v243];
                      id v332 = &v231[v243];
                      uint64_t v244 = sub_1DFDEF360();
                      id v324 = *(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 16);
                      id v245 = v241;
                      id v246 = v344;
                      id v247 = v351;
                      id v248 = v359;
                      id v249 = v338;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v324(v332, v328, v244);
                      uint64_t v250 = v242[17];
                      id v251 = &v231[v250];
                      id v252 = &v232[v250];
                      *(void *)id v251 = *(void *)v252;
                      *((void *)v251 + 1) = *((void *)v252 + 1);
                      uint64_t v253 = v242[18];
                      uint64_t v254 = &v231[v253];
                      id v255 = &v232[v253];
                      uint64_t v256 = sub_1DFDEF130();
                      uint64_t v257 = *(void *)(v256 - 8);
                      uint64_t v258 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v257 + 48);
                      swift_bridgeObjectRetain();
                      if (!v258(v255, 1, v256))
                      {
LABEL_43:
                        (*(void (**)(char *, char *, uint64_t))(v257 + 16))(v254, v255, v256);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v257 + 56))(v254, 0, 1, v256);
                        goto LABEL_44;
                      }
                    }
                    sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                    memcpy(v254, v255, *(void *)(*(void *)(v259 - 8) + 64));
LABEL_44:
                    swift_storeEnumTagMultiPayload();
                    uint64_t v298 = v366[7];
                    uint64_t v299 = &v375[v298];
                    uint64_t v300 = &v372[v298];
                    uint64_t v301 = type metadata accessor for FeedPaywallType(0);
                    if (swift_getEnumCaseMultiPayload())
                    {
                      memcpy(v299, v300, *(void *)(*(void *)(v301 - 8) + 64));
                    }
                    else
                    {
                      *(void *)uint64_t v299 = *(void *)v300;
                      sub_1DEC84AA4();
                      uint64_t v303 = *(int *)(v302 + 48);
                      uint64_t v304 = &v299[v303];
                      uint64_t v305 = &v300[v303];
                      uint64_t v306 = sub_1DFDEEE80();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 16))(v304, v305, v306);
                      swift_storeEnumTagMultiPayload();
                    }
LABEL_47:
                    swift_storeEnumTagMultiPayload();
LABEL_48:
                    swift_storeEnumTagMultiPayload();
                    return a1;
                  }
                }
                sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v186, v187, *(void *)(*(void *)(v191 - 8) + 64));
                goto LABEL_36;
              }
            }
            sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
            memcpy(v116, v117, *(void *)(*(void *)(v121 - 8) + 64));
            goto LABEL_28;
          case 8u:
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = *((void *)a2 + 3);
            uint64_t v75 = (void *)*((void *)a2 + 4);
            *((void *)a1 + 4) = v75;
            uint64_t v369 = (void *)*((void *)a2 + 5);
            *((void *)a1 + 5) = v369;
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = *((void *)a2 + 7);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = *((void *)a2 + 9);
            *((void *)a1 + 10) = *((void *)a2 + 10);
            uint64_t v76 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
            uint64_t v77 = v76[11];
            v346 = &a2[v77];
            v354 = &a1[v77];
            uint64_t v78 = sub_1DFDF8C20();
            uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v80 = v75;
            id v81 = v369;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v79(v354, v346, v78);
            v79(&a1[v76[12]], &a2[v76[12]], v78);
            *(void *)&a1[v76[13]] = *(void *)&a2[v76[13]];
            goto LABEL_47;
          case 9u:
            sub_1DEA53948();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(a1, a2, v82);
            uint64_t v83 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
            uint64_t v84 = &a1[v83];
            uint64_t v85 = &a2[v83];
            uint64_t v86 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
            goto LABEL_47;
          case 0xCu:
            uint64_t v88 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(a1, a2, v88);
            uint64_t v89 = type metadata accessor for NewspaperMagazineFeedGroup();
            *(void *)&a1[*(int *)(v89 + 20)] = *(void *)&a2[*(int *)(v89 + 20)];
            *(void *)&a1[*(int *)(v89 + 24)] = *(void *)&a2[*(int *)(v89 + 24)];
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_47;
          case 0xDu:
            sub_1DEA5387C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(a1, a2, v90);
            uint64_t v91 = type metadata accessor for CuratedMagazineFeedGroup();
            uint64_t v92 = *(int *)(v91 + 20);
            uint64_t v93 = &a1[v92];
            uint64_t v94 = &a2[v92];
            uint64_t v95 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
            uint64_t v96 = *(int *)(v91 + 24);
            id v97 = &a1[v96];
            id v98 = &a2[v96];
            uint64_t v99 = sub_1DFDF8F10();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
            goto LABEL_47;
          default:
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = *((void *)a2 + 3);
            uint64_t v4 = (void *)*((void *)a2 + 4);
            *((void *)a1 + 4) = v4;
            *((void *)a1 + 5) = *((void *)a2 + 5);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = *((void *)a2 + 7);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = *((void *)a2 + 9);
            uint64_t v5 = type metadata accessor for CategoriesMagazineFeedGroup();
            uint64_t v6 = *(int *)(v5 + 40);
            uint64_t v370 = &a1[v6];
            uint64_t v373 = v5;
            v367 = &a2[v6];
            uint64_t v7 = sub_1DFDF8C20();
            v361 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v8 = v4;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v361(v370, v367, v7);
            *(void *)&a1[*(int *)(v373 + 44)] = *(void *)&a2[*(int *)(v373 + 44)];
            goto LABEL_47;
        }
      case 3u:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        goto LABEL_48;
      default:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_48;
    }
  }
  return a1;
}

_OWORD *sub_1DEFD4740(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    type metadata accessor for MagazineFeedGroup();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1DEA530F0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        uint64_t v13 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        goto LABEL_48;
      case 2u:
      case 0xAu:
      case 0xBu:
        uint64_t v90 = sub_1DFDF7010();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v90 - 8) + 32))(a1, a2, v90);
        goto LABEL_48;
      case 3u:
        sub_1DEA52F58();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v18 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        goto LABEL_48;
      case 4u:
        long long v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        a1[4] = a2[4];
        id v23 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
        uint64_t v24 = v23[10];
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_1DFDF8C20();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        *(void *)((char *)a1 + v23[11]) = *(void *)((char *)a2 + v23[11]);
        *(void *)((char *)a1 + v23[12]) = *(void *)((char *)a2 + v23[12]);
        goto LABEL_48;
      case 5u:
        long long v28 = a2[1];
        *a1 = *a2;
        a1[1] = v28;
        long long v29 = a2[3];
        a1[2] = a2[2];
        a1[3] = v29;
        a1[4] = a2[4];
        id v30 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
        uint64_t v31 = v30[10];
        id v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = sub_1DFDF8C20();
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32);
        v35(v32, v33, v34);
        v35((char *)a1 + v30[11], (char *)a2 + v30[11], v34);
        *(void *)((char *)a1 + v30[12]) = *(void *)((char *)a2 + v30[12]);
        uint64_t v36 = v30[13];
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        sub_1DEA75598(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        uint64_t v40 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
        *(void *)&v37[*(int *)(v40 + 20)] = *(void *)&v38[*(int *)(v40 + 20)];
        uint64_t v41 = *(int *)(v40 + 24);
        uint64_t v42 = &v37[v41];
        uint64_t v43 = &v38[v41];
        sub_1DEA75598(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        *(void *)((char *)a1 + v30[14]) = *(void *)((char *)a2 + v30[14]);
        *((unsigned char *)a1 + v30[15]) = *((unsigned char *)a2 + v30[15]);
        uint64_t v45 = v30[16];
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        uint64_t v48 = sub_1DFDF8F10();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        uint64_t v49 = v30[17];
        uint64_t v50 = (char *)a1 + v49;
        uint64_t v51 = (char *)a2 + v49;
        uint64_t v52 = sub_1DFDF7CB0();
        uint64_t v53 = *(void *)(v52 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
        {
          sub_1DEA6AA34(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
          memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
        }
        *(void *)((char *)a1 + v30[18]) = *(void *)((char *)a2 + v30[18]);
        goto LABEL_48;
      case 6u:
        sub_1DEA536E4();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v55 - 8) + 32))(a1, a2, v55);
        uint64_t v56 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        uint64_t v59 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
        goto LABEL_48;
      case 7u:
        *a1 = *a2;
        uint64_t v60 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
        uint64_t v61 = v60[5];
        uint64_t v62 = (char *)a1 + v61;
        uint64_t v63 = (char *)a2 + v61;
        uint64_t v64 = sub_1DFDF8C20();
        uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32);
        v65(v62, v63, v64);
        v65((char *)a1 + v60[6], (char *)a2 + v60[6], v64);
        *(void *)((char *)a1 + v60[7]) = *(void *)((char *)a2 + v60[7]);
        *(void *)((char *)a1 + v60[8]) = *(void *)((char *)a2 + v60[8]);
        uint64_t v66 = v60[9];
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        type metadata accessor for FeedPaywallModel(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *uint64_t v67 = *v68;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v70 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
          uint64_t v71 = v70[5];
          uint64_t v72 = &v67[v71];
          uint64_t v73 = &v68[v71];
          uint64_t v74 = sub_1DFDE7220();
          uint64_t v75 = *(void *)(v74 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
          {
            sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
            memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v72, v73, v74);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
          }
          *(void *)&v67[v70[6]] = *(void *)&v68[v70[6]];
          *(void *)&v67[v70[7]] = *(void *)&v68[v70[7]];
          *(void *)&v67[v70[8]] = *(void *)&v68[v70[8]];
          *(void *)&v67[v70[9]] = *(void *)&v68[v70[9]];
          *(void *)&v67[v70[10]] = *(void *)&v68[v70[10]];
          *(void *)&v67[v70[11]] = *(void *)&v68[v70[11]];
          *(void *)&v67[v70[12]] = *(void *)&v68[v70[12]];
          *(void *)&v67[v70[13]] = *(void *)&v68[v70[13]];
          *(void *)&v67[v70[14]] = *(void *)&v68[v70[14]];
          *(void *)&v67[v70[15]] = *(void *)&v68[v70[15]];
          *(void *)&v67[v70[16]] = *(void *)&v68[v70[16]];
          *(void *)&v67[v70[17]] = *(void *)&v68[v70[17]];
          *(void *)&v67[v70[18]] = *(void *)&v68[v70[18]];
          *(_OWORD *)&v67[v70[19]] = *(_OWORD *)&v68[v70[19]];
          *(_OWORD *)&v67[v70[20]] = *(_OWORD *)&v68[v70[20]];
          *(_OWORD *)&v67[v70[21]] = *(_OWORD *)&v68[v70[21]];
          uint64_t v115 = v70[22];
          uint64_t v116 = &v67[v115];
          char v117 = &v68[v115];
          uint64_t v118 = sub_1DFDEF360();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
          *(_OWORD *)&v67[v70[23]] = *(_OWORD *)&v68[v70[23]];
          uint64_t v119 = v70[24];
          uint64_t v110 = &v67[v119];
          uint64_t v111 = &v68[v119];
          uint64_t v112 = sub_1DFDEF130();
          uint64_t v113 = *(void *)(v112 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112)) {
            goto LABEL_25;
          }
        }
        else
        {
          *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
          *(_OWORD *)(v67 + 24) = *(_OWORD *)(v68 + 24);
          *(_OWORD *)(v67 + 40) = *(_OWORD *)(v68 + 40);
          uint64_t v103 = *((void *)v68 + 8);
          *((void *)v67 + 7) = *((void *)v68 + 7);
          *((void *)v67 + 8) = v103;
          *(_OWORD *)(v67 + 72) = *(_OWORD *)(v68 + 72);
          *(_OWORD *)(v67 + 88) = *(_OWORD *)(v68 + 88);
          *(_OWORD *)(v67 + 104) = *(_OWORD *)(v68 + 104);
          uint64_t v104 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
          uint64_t v105 = v104[16];
          id v106 = &v67[v105];
          id v107 = &v68[v105];
          uint64_t v108 = sub_1DFDEF360();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
          *(_OWORD *)&v67[v104[17]] = *(_OWORD *)&v68[v104[17]];
          uint64_t v109 = v104[18];
          uint64_t v110 = &v67[v109];
          uint64_t v111 = &v68[v109];
          uint64_t v112 = sub_1DFDEF130();
          uint64_t v113 = *(void *)(v112 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112))
          {
LABEL_25:
            (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v110, v111, v112);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            uint64_t v192 = (int *)type metadata accessor for FeedPaywallConfig();
            uint64_t v120 = v192[5];
            uint64_t v121 = &v67[v120];
            uint64_t v122 = &v68[v120];
            int v123 = swift_getEnumCaseMultiPayload();
            char *v121 = *v122;
            uint64_t v191 = v67;
            if (v123 == 1)
            {
              uint64_t v124 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v125 = v124[5];
              __dst = &v121[v125];
              uint64_t v126 = &v122[v125];
              uint64_t v127 = sub_1DFDE7220();
              uint64_t v128 = *(void *)(v127 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
              {
                sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(__dst, v126, *(void *)(*(void *)(v129 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v128 + 32))(__dst, v126, v127);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(__dst, 0, 1, v127);
              }
              *(void *)&v121[v124[6]] = *(void *)&v122[v124[6]];
              *(void *)&v121[v124[7]] = *(void *)&v122[v124[7]];
              *(void *)&v121[v124[8]] = *(void *)&v122[v124[8]];
              *(void *)&v121[v124[9]] = *(void *)&v122[v124[9]];
              *(void *)&v121[v124[10]] = *(void *)&v122[v124[10]];
              *(void *)&v121[v124[11]] = *(void *)&v122[v124[11]];
              *(void *)&v121[v124[12]] = *(void *)&v122[v124[12]];
              *(void *)&v121[v124[13]] = *(void *)&v122[v124[13]];
              *(void *)&v121[v124[14]] = *(void *)&v122[v124[14]];
              *(void *)&v121[v124[15]] = *(void *)&v122[v124[15]];
              *(void *)&v121[v124[16]] = *(void *)&v122[v124[16]];
              *(void *)&v121[v124[17]] = *(void *)&v122[v124[17]];
              *(void *)&v121[v124[18]] = *(void *)&v122[v124[18]];
              *(_OWORD *)&v121[v124[19]] = *(_OWORD *)&v122[v124[19]];
              *(_OWORD *)&v121[v124[20]] = *(_OWORD *)&v122[v124[20]];
              *(_OWORD *)&v121[v124[21]] = *(_OWORD *)&v122[v124[21]];
              uint64_t v142 = v124[22];
              uint64_t v143 = &v121[v142];
              uint64_t v144 = &v122[v142];
              uint64_t v145 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
              *(_OWORD *)&v121[v124[23]] = *(_OWORD *)&v122[v124[23]];
              uint64_t v146 = v124[24];
              id v147 = &v121[v146];
              id v148 = &v122[v146];
              uint64_t v149 = sub_1DFDEF130();
              uint64_t v150 = *(void *)(v149 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v148, 1, v149))
              {
                sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v147, v148, *(void *)(*(void *)(v151 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v147, v148, v149);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v147, 0, 1, v149);
              }
              uint64_t v67 = v191;
            }
            else
            {
              *(_OWORD *)(v121 + 8) = *(_OWORD *)(v122 + 8);
              *(_OWORD *)(v121 + 24) = *(_OWORD *)(v122 + 24);
              *(_OWORD *)(v121 + 40) = *(_OWORD *)(v122 + 40);
              uint64_t v130 = *((void *)v122 + 8);
              *((void *)v121 + 7) = *((void *)v122 + 7);
              *((void *)v121 + 8) = v130;
              *(_OWORD *)(v121 + 72) = *(_OWORD *)(v122 + 72);
              *(_OWORD *)(v121 + 88) = *(_OWORD *)(v122 + 88);
              *(_OWORD *)(v121 + 104) = *(_OWORD *)(v122 + 104);
              uint64_t v131 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v132 = v131[16];
              uint64_t v133 = &v121[v132];
              uint64_t v134 = &v122[v132];
              uint64_t v135 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v133, v134, v135);
              *(_OWORD *)&v121[v131[17]] = *(_OWORD *)&v122[v131[17]];
              uint64_t v136 = v131[18];
              uint64_t v137 = &v121[v136];
              uint64_t v138 = &v122[v136];
              uint64_t v139 = sub_1DFDEF130();
              uint64_t v140 = *(void *)(v139 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139))
              {
                sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v137, v138, *(void *)(*(void *)(v141 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v137, v138, v139);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
              }
            }
            swift_storeEnumTagMultiPayload();
            uint64_t v152 = v192[6];
            id v153 = &v67[v152];
            id v154 = &v68[v152];
            int v155 = swift_getEnumCaseMultiPayload();
            char *v153 = *v154;
            if (v155 == 1)
            {
              uint64_t v156 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v157 = v156[5];
              __dsta = &v153[v157];
              uint64_t v158 = &v154[v157];
              uint64_t v159 = sub_1DFDE7220();
              uint64_t v160 = *(void *)(v159 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159))
              {
                sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(__dsta, v158, *(void *)(*(void *)(v161 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v160 + 32))(__dsta, v158, v159);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(__dsta, 0, 1, v159);
              }
              *(void *)&v153[v156[6]] = *(void *)&v154[v156[6]];
              *(void *)&v153[v156[7]] = *(void *)&v154[v156[7]];
              *(void *)&v153[v156[8]] = *(void *)&v154[v156[8]];
              *(void *)&v153[v156[9]] = *(void *)&v154[v156[9]];
              *(void *)&v153[v156[10]] = *(void *)&v154[v156[10]];
              *(void *)&v153[v156[11]] = *(void *)&v154[v156[11]];
              *(void *)&v153[v156[12]] = *(void *)&v154[v156[12]];
              *(void *)&v153[v156[13]] = *(void *)&v154[v156[13]];
              *(void *)&v153[v156[14]] = *(void *)&v154[v156[14]];
              *(void *)&v153[v156[15]] = *(void *)&v154[v156[15]];
              *(void *)&v153[v156[16]] = *(void *)&v154[v156[16]];
              *(void *)&v153[v156[17]] = *(void *)&v154[v156[17]];
              *(void *)&v153[v156[18]] = *(void *)&v154[v156[18]];
              *(_OWORD *)&v153[v156[19]] = *(_OWORD *)&v154[v156[19]];
              *(_OWORD *)&v153[v156[20]] = *(_OWORD *)&v154[v156[20]];
              *(_OWORD *)&v153[v156[21]] = *(_OWORD *)&v154[v156[21]];
              uint64_t v174 = v156[22];
              uint64_t v175 = &v153[v174];
              uint64_t v176 = &v154[v174];
              uint64_t v177 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v175, v176, v177);
              *(_OWORD *)&v153[v156[23]] = *(_OWORD *)&v154[v156[23]];
              uint64_t v178 = v156[24];
              id v169 = &v153[v178];
              uint64_t v170 = &v154[v178];
              uint64_t v171 = sub_1DFDEF130();
              uint64_t v172 = *(void *)(v171 - 8);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v170, 1, v171)) {
                goto LABEL_44;
              }
            }
            else
            {
              *(_OWORD *)(v153 + 8) = *(_OWORD *)(v154 + 8);
              *(_OWORD *)(v153 + 24) = *(_OWORD *)(v154 + 24);
              *(_OWORD *)(v153 + 40) = *(_OWORD *)(v154 + 40);
              uint64_t v162 = *((void *)v154 + 8);
              *((void *)v153 + 7) = *((void *)v154 + 7);
              *((void *)v153 + 8) = v162;
              *(_OWORD *)(v153 + 72) = *(_OWORD *)(v154 + 72);
              *(_OWORD *)(v153 + 88) = *(_OWORD *)(v154 + 88);
              *(_OWORD *)(v153 + 104) = *(_OWORD *)(v154 + 104);
              v163 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v164 = v163[16];
              int v165 = &v153[v164];
              uint64_t v166 = &v154[v164];
              uint64_t v167 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
              *(_OWORD *)&v153[v163[17]] = *(_OWORD *)&v154[v163[17]];
              uint64_t v168 = v163[18];
              id v169 = &v153[v168];
              uint64_t v170 = &v154[v168];
              uint64_t v171 = sub_1DFDEF130();
              uint64_t v172 = *(void *)(v171 - 8);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v170, 1, v171))
              {
LABEL_44:
                (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v169, v170, v171);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v169, 0, 1, v171);
LABEL_45:
                swift_storeEnumTagMultiPayload();
                uint64_t v179 = v192[7];
                id v180 = &v191[v179];
                id v181 = &v68[v179];
                uint64_t v182 = type metadata accessor for FeedPaywallType(0);
                if (swift_getEnumCaseMultiPayload())
                {
                  memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
                }
                else
                {
                  *(void *)id v180 = *(void *)v181;
                  sub_1DEC84AA4();
                  uint64_t v184 = *(int *)(v183 + 48);
                  uint64_t v185 = &v180[v184];
                  v186 = &v181[v184];
                  uint64_t v187 = sub_1DFDEEE80();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 32))(v185, v186, v187);
                  swift_storeEnumTagMultiPayload();
                }
LABEL_48:
                swift_storeEnumTagMultiPayload();
                swift_storeEnumTagMultiPayload();
                return a1;
              }
            }
            sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
            memcpy(v169, v170, *(void *)(*(void *)(v173 - 8) + 64));
            goto LABEL_45;
          }
        }
        sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
        memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64));
        goto LABEL_26;
      case 8u:
        long long v77 = a2[1];
        *a1 = *a2;
        a1[1] = v77;
        long long v78 = a2[3];
        a1[2] = a2[2];
        a1[3] = v78;
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        uint64_t v79 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
        uint64_t v80 = v79[11];
        id v81 = (char *)a1 + v80;
        uint64_t v82 = (char *)a2 + v80;
        uint64_t v83 = sub_1DFDF8C20();
        uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32);
        v84(v81, v82, v83);
        v84((char *)a1 + v79[12], (char *)a2 + v79[12], v83);
        *(void *)((char *)a1 + v79[13]) = *(void *)((char *)a2 + v79[13]);
        goto LABEL_48;
      case 9u:
        sub_1DEA53948();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v85 - 8) + 32))(a1, a2, v85);
        uint64_t v86 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
        uint64_t v87 = (char *)a1 + v86;
        uint64_t v88 = (char *)a2 + v86;
        uint64_t v89 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
        goto LABEL_48;
      case 0xCu:
        uint64_t v91 = sub_1DFDF7010();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v91 - 8) + 32))(a1, a2, v91);
        uint64_t v92 = type metadata accessor for NewspaperMagazineFeedGroup();
        *(void *)((char *)a1 + *(int *)(v92 + 20)) = *(void *)((char *)a2 + *(int *)(v92 + 20));
        *(void *)((char *)a1 + *(int *)(v92 + 24)) = *(void *)((char *)a2 + *(int *)(v92 + 24));
        goto LABEL_48;
      case 0xDu:
        sub_1DEA5387C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v93 - 8) + 32))(a1, a2, v93);
        uint64_t v94 = type metadata accessor for CuratedMagazineFeedGroup();
        uint64_t v95 = *(int *)(v94 + 20);
        uint64_t v96 = (char *)a1 + v95;
        id v97 = (char *)a2 + v95;
        uint64_t v98 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
        uint64_t v99 = *(int *)(v94 + 24);
        uint64_t v100 = (char *)a1 + v99;
        id v101 = (char *)a2 + v99;
        uint64_t v102 = sub_1DFDF8F10();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
        goto LABEL_48;
      default:
        long long v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        a1[4] = a2[4];
        uint64_t v7 = type metadata accessor for CategoriesMagazineFeedGroup();
        uint64_t v8 = *(int *)(v7 + 40);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1DFDF8C20();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        *(void *)((char *)a1 + *(int *)(v7 + 44)) = *(void *)((char *)a2 + *(int *)(v7 + 44));
        goto LABEL_48;
    }
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1DEFD62D0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEFC8BE4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TodaySectionFactoryError);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      type metadata accessor for MagazineFeedGroup();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1DEA530F0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
          uint64_t v13 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
          uint64_t v14 = (char *)a1 + v13;
          uint64_t v15 = (char *)a2 + v13;
          uint64_t v16 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
          goto LABEL_49;
        case 2u:
        case 0xAu:
        case 0xBu:
          uint64_t v90 = sub_1DFDF7010();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v90 - 8) + 32))(a1, a2, v90);
          goto LABEL_49;
        case 3u:
          sub_1DEA52F58();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
          uint64_t v18 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
          uint64_t v19 = (char *)a1 + v18;
          uint64_t v20 = (char *)a2 + v18;
          uint64_t v21 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
          goto LABEL_49;
        case 4u:
          long long v22 = a2[1];
          *a1 = *a2;
          a1[1] = v22;
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
          *((void *)a1 + 7) = *((void *)a2 + 7);
          a1[4] = a2[4];
          id v23 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
          uint64_t v24 = v23[10];
          uint64_t v25 = (char *)a1 + v24;
          uint64_t v26 = (char *)a2 + v24;
          uint64_t v27 = sub_1DFDF8C20();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
          *(void *)((char *)a1 + v23[11]) = *(void *)((char *)a2 + v23[11]);
          *(void *)((char *)a1 + v23[12]) = *(void *)((char *)a2 + v23[12]);
          goto LABEL_49;
        case 5u:
          long long v28 = a2[1];
          *a1 = *a2;
          a1[1] = v28;
          long long v29 = a2[3];
          a1[2] = a2[2];
          a1[3] = v29;
          a1[4] = a2[4];
          id v30 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
          uint64_t v31 = v30[10];
          id v32 = (char *)a1 + v31;
          uint64_t v33 = (char *)a2 + v31;
          uint64_t v34 = sub_1DFDF8C20();
          uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32);
          v35(v32, v33, v34);
          v35((char *)a1 + v30[11], (char *)a2 + v30[11], v34);
          *(void *)((char *)a1 + v30[12]) = *(void *)((char *)a2 + v30[12]);
          uint64_t v36 = v30[13];
          uint64_t v37 = (char *)a1 + v36;
          uint64_t v38 = (char *)a2 + v36;
          sub_1DEA75598(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
          uint64_t v40 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
          *(void *)&v37[*(int *)(v40 + 20)] = *(void *)&v38[*(int *)(v40 + 20)];
          uint64_t v41 = *(int *)(v40 + 24);
          uint64_t v42 = &v37[v41];
          uint64_t v43 = &v38[v41];
          sub_1DEA75598(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
          *(void *)((char *)a1 + v30[14]) = *(void *)((char *)a2 + v30[14]);
          *((unsigned char *)a1 + v30[15]) = *((unsigned char *)a2 + v30[15]);
          uint64_t v45 = v30[16];
          uint64_t v46 = (char *)a1 + v45;
          uint64_t v47 = (char *)a2 + v45;
          uint64_t v48 = sub_1DFDF8F10();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
          uint64_t v49 = v30[17];
          uint64_t v50 = (char *)a1 + v49;
          uint64_t v51 = (char *)a2 + v49;
          uint64_t v52 = sub_1DFDF7CB0();
          uint64_t v53 = *(void *)(v52 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
          {
            sub_1DEA6AA34(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
            memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          }
          *(void *)((char *)a1 + v30[18]) = *(void *)((char *)a2 + v30[18]);
          goto LABEL_49;
        case 6u:
          sub_1DEA536E4();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v55 - 8) + 32))(a1, a2, v55);
          uint64_t v56 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
          uint64_t v57 = (char *)a1 + v56;
          uint64_t v58 = (char *)a2 + v56;
          uint64_t v59 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
          goto LABEL_49;
        case 7u:
          *a1 = *a2;
          uint64_t v60 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
          uint64_t v61 = v60[5];
          uint64_t v62 = (char *)a1 + v61;
          uint64_t v63 = (char *)a2 + v61;
          uint64_t v64 = sub_1DFDF8C20();
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32);
          v65(v62, v63, v64);
          v65((char *)a1 + v60[6], (char *)a2 + v60[6], v64);
          *(void *)((char *)a1 + v60[7]) = *(void *)((char *)a2 + v60[7]);
          *(void *)((char *)a1 + v60[8]) = *(void *)((char *)a2 + v60[8]);
          uint64_t v66 = v60[9];
          uint64_t v67 = (char *)a1 + v66;
          uint64_t v68 = (char *)a2 + v66;
          type metadata accessor for FeedPaywallModel(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *uint64_t v67 = *v68;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v70 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            uint64_t v71 = v70[5];
            uint64_t v72 = &v67[v71];
            uint64_t v73 = &v68[v71];
            uint64_t v74 = sub_1DFDE7220();
            uint64_t v75 = *(void *)(v74 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
            {
              sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v72, v73, v74);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
            }
            *(void *)&v67[v70[6]] = *(void *)&v68[v70[6]];
            *(void *)&v67[v70[7]] = *(void *)&v68[v70[7]];
            *(void *)&v67[v70[8]] = *(void *)&v68[v70[8]];
            *(void *)&v67[v70[9]] = *(void *)&v68[v70[9]];
            *(void *)&v67[v70[10]] = *(void *)&v68[v70[10]];
            *(void *)&v67[v70[11]] = *(void *)&v68[v70[11]];
            *(void *)&v67[v70[12]] = *(void *)&v68[v70[12]];
            *(void *)&v67[v70[13]] = *(void *)&v68[v70[13]];
            *(void *)&v67[v70[14]] = *(void *)&v68[v70[14]];
            *(void *)&v67[v70[15]] = *(void *)&v68[v70[15]];
            *(void *)&v67[v70[16]] = *(void *)&v68[v70[16]];
            *(void *)&v67[v70[17]] = *(void *)&v68[v70[17]];
            *(void *)&v67[v70[18]] = *(void *)&v68[v70[18]];
            *(_OWORD *)&v67[v70[19]] = *(_OWORD *)&v68[v70[19]];
            *(_OWORD *)&v67[v70[20]] = *(_OWORD *)&v68[v70[20]];
            *(_OWORD *)&v67[v70[21]] = *(_OWORD *)&v68[v70[21]];
            uint64_t v115 = v70[22];
            uint64_t v116 = &v67[v115];
            char v117 = &v68[v115];
            uint64_t v118 = sub_1DFDEF360();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
            *(_OWORD *)&v67[v70[23]] = *(_OWORD *)&v68[v70[23]];
            uint64_t v119 = v70[24];
            uint64_t v110 = &v67[v119];
            uint64_t v111 = &v68[v119];
            uint64_t v112 = sub_1DFDEF130();
            uint64_t v113 = *(void *)(v112 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112)) {
              goto LABEL_26;
            }
          }
          else
          {
            *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
            *(_OWORD *)(v67 + 24) = *(_OWORD *)(v68 + 24);
            *(_OWORD *)(v67 + 40) = *(_OWORD *)(v68 + 40);
            uint64_t v103 = *((void *)v68 + 8);
            *((void *)v67 + 7) = *((void *)v68 + 7);
            *((void *)v67 + 8) = v103;
            *(_OWORD *)(v67 + 72) = *(_OWORD *)(v68 + 72);
            *(_OWORD *)(v67 + 88) = *(_OWORD *)(v68 + 88);
            *(_OWORD *)(v67 + 104) = *(_OWORD *)(v68 + 104);
            uint64_t v104 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v105 = v104[16];
            id v106 = &v67[v105];
            id v107 = &v68[v105];
            uint64_t v108 = sub_1DFDEF360();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
            *(_OWORD *)&v67[v104[17]] = *(_OWORD *)&v68[v104[17]];
            uint64_t v109 = v104[18];
            uint64_t v110 = &v67[v109];
            uint64_t v111 = &v68[v109];
            uint64_t v112 = sub_1DFDEF130();
            uint64_t v113 = *(void *)(v112 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112))
            {
LABEL_26:
              (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v110, v111, v112);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
LABEL_27:
              swift_storeEnumTagMultiPayload();
              uint64_t v192 = (int *)type metadata accessor for FeedPaywallConfig();
              uint64_t v120 = v192[5];
              uint64_t v121 = &v67[v120];
              uint64_t v122 = &v68[v120];
              int v123 = swift_getEnumCaseMultiPayload();
              char *v121 = *v122;
              uint64_t v191 = v67;
              if (v123 == 1)
              {
                uint64_t v124 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                uint64_t v125 = v124[5];
                __dst = &v121[v125];
                uint64_t v126 = &v122[v125];
                uint64_t v127 = sub_1DFDE7220();
                uint64_t v128 = *(void *)(v127 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
                {
                  sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                  memcpy(__dst, v126, *(void *)(*(void *)(v129 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v128 + 32))(__dst, v126, v127);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(__dst, 0, 1, v127);
                }
                *(void *)&v121[v124[6]] = *(void *)&v122[v124[6]];
                *(void *)&v121[v124[7]] = *(void *)&v122[v124[7]];
                *(void *)&v121[v124[8]] = *(void *)&v122[v124[8]];
                *(void *)&v121[v124[9]] = *(void *)&v122[v124[9]];
                *(void *)&v121[v124[10]] = *(void *)&v122[v124[10]];
                *(void *)&v121[v124[11]] = *(void *)&v122[v124[11]];
                *(void *)&v121[v124[12]] = *(void *)&v122[v124[12]];
                *(void *)&v121[v124[13]] = *(void *)&v122[v124[13]];
                *(void *)&v121[v124[14]] = *(void *)&v122[v124[14]];
                *(void *)&v121[v124[15]] = *(void *)&v122[v124[15]];
                *(void *)&v121[v124[16]] = *(void *)&v122[v124[16]];
                *(void *)&v121[v124[17]] = *(void *)&v122[v124[17]];
                *(void *)&v121[v124[18]] = *(void *)&v122[v124[18]];
                *(_OWORD *)&v121[v124[19]] = *(_OWORD *)&v122[v124[19]];
                *(_OWORD *)&v121[v124[20]] = *(_OWORD *)&v122[v124[20]];
                *(_OWORD *)&v121[v124[21]] = *(_OWORD *)&v122[v124[21]];
                uint64_t v142 = v124[22];
                uint64_t v143 = &v121[v142];
                uint64_t v144 = &v122[v142];
                uint64_t v145 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
                *(_OWORD *)&v121[v124[23]] = *(_OWORD *)&v122[v124[23]];
                uint64_t v146 = v124[24];
                id v147 = &v121[v146];
                id v148 = &v122[v146];
                uint64_t v149 = sub_1DFDEF130();
                uint64_t v150 = *(void *)(v149 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v148, 1, v149))
                {
                  sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                  memcpy(v147, v148, *(void *)(*(void *)(v151 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v147, v148, v149);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v147, 0, 1, v149);
                }
                uint64_t v67 = v191;
              }
              else
              {
                *(_OWORD *)(v121 + 8) = *(_OWORD *)(v122 + 8);
                *(_OWORD *)(v121 + 24) = *(_OWORD *)(v122 + 24);
                *(_OWORD *)(v121 + 40) = *(_OWORD *)(v122 + 40);
                uint64_t v130 = *((void *)v122 + 8);
                *((void *)v121 + 7) = *((void *)v122 + 7);
                *((void *)v121 + 8) = v130;
                *(_OWORD *)(v121 + 72) = *(_OWORD *)(v122 + 72);
                *(_OWORD *)(v121 + 88) = *(_OWORD *)(v122 + 88);
                *(_OWORD *)(v121 + 104) = *(_OWORD *)(v122 + 104);
                uint64_t v131 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                uint64_t v132 = v131[16];
                uint64_t v133 = &v121[v132];
                uint64_t v134 = &v122[v132];
                uint64_t v135 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v133, v134, v135);
                *(_OWORD *)&v121[v131[17]] = *(_OWORD *)&v122[v131[17]];
                uint64_t v136 = v131[18];
                uint64_t v137 = &v121[v136];
                uint64_t v138 = &v122[v136];
                uint64_t v139 = sub_1DFDEF130();
                uint64_t v140 = *(void *)(v139 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139))
                {
                  sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                  memcpy(v137, v138, *(void *)(*(void *)(v141 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v137, v138, v139);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
                }
              }
              swift_storeEnumTagMultiPayload();
              uint64_t v152 = v192[6];
              id v153 = &v67[v152];
              id v154 = &v68[v152];
              int v155 = swift_getEnumCaseMultiPayload();
              char *v153 = *v154;
              if (v155 == 1)
              {
                uint64_t v156 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                uint64_t v157 = v156[5];
                __dsta = &v153[v157];
                uint64_t v158 = &v154[v157];
                uint64_t v159 = sub_1DFDE7220();
                uint64_t v160 = *(void *)(v159 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159))
                {
                  sub_1DEA6AA34(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                  memcpy(__dsta, v158, *(void *)(*(void *)(v161 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v160 + 32))(__dsta, v158, v159);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(__dsta, 0, 1, v159);
                }
                *(void *)&v153[v156[6]] = *(void *)&v154[v156[6]];
                *(void *)&v153[v156[7]] = *(void *)&v154[v156[7]];
                *(void *)&v153[v156[8]] = *(void *)&v154[v156[8]];
                *(void *)&v153[v156[9]] = *(void *)&v154[v156[9]];
                *(void *)&v153[v156[10]] = *(void *)&v154[v156[10]];
                *(void *)&v153[v156[11]] = *(void *)&v154[v156[11]];
                *(void *)&v153[v156[12]] = *(void *)&v154[v156[12]];
                *(void *)&v153[v156[13]] = *(void *)&v154[v156[13]];
                *(void *)&v153[v156[14]] = *(void *)&v154[v156[14]];
                *(void *)&v153[v156[15]] = *(void *)&v154[v156[15]];
                *(void *)&v153[v156[16]] = *(void *)&v154[v156[16]];
                *(void *)&v153[v156[17]] = *(void *)&v154[v156[17]];
                *(void *)&v153[v156[18]] = *(void *)&v154[v156[18]];
                *(_OWORD *)&v153[v156[19]] = *(_OWORD *)&v154[v156[19]];
                *(_OWORD *)&v153[v156[20]] = *(_OWORD *)&v154[v156[20]];
                *(_OWORD *)&v153[v156[21]] = *(_OWORD *)&v154[v156[21]];
                uint64_t v174 = v156[22];
                uint64_t v175 = &v153[v174];
                uint64_t v176 = &v154[v174];
                uint64_t v177 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v175, v176, v177);
                *(_OWORD *)&v153[v156[23]] = *(_OWORD *)&v154[v156[23]];
                uint64_t v178 = v156[24];
                id v169 = &v153[v178];
                uint64_t v170 = &v154[v178];
                uint64_t v171 = sub_1DFDEF130();
                uint64_t v172 = *(void *)(v171 - 8);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v170, 1, v171)) {
                  goto LABEL_45;
                }
              }
              else
              {
                *(_OWORD *)(v153 + 8) = *(_OWORD *)(v154 + 8);
                *(_OWORD *)(v153 + 24) = *(_OWORD *)(v154 + 24);
                *(_OWORD *)(v153 + 40) = *(_OWORD *)(v154 + 40);
                uint64_t v162 = *((void *)v154 + 8);
                *((void *)v153 + 7) = *((void *)v154 + 7);
                *((void *)v153 + 8) = v162;
                *(_OWORD *)(v153 + 72) = *(_OWORD *)(v154 + 72);
                *(_OWORD *)(v153 + 88) = *(_OWORD *)(v154 + 88);
                *(_OWORD *)(v153 + 104) = *(_OWORD *)(v154 + 104);
                v163 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                uint64_t v164 = v163[16];
                int v165 = &v153[v164];
                uint64_t v166 = &v154[v164];
                uint64_t v167 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
                *(_OWORD *)&v153[v163[17]] = *(_OWORD *)&v154[v163[17]];
                uint64_t v168 = v163[18];
                id v169 = &v153[v168];
                uint64_t v170 = &v154[v168];
                uint64_t v171 = sub_1DFDEF130();
                uint64_t v172 = *(void *)(v171 - 8);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v170, 1, v171))
                {
LABEL_45:
                  (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v169, v170, v171);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v169, 0, 1, v171);
LABEL_46:
                  swift_storeEnumTagMultiPayload();
                  uint64_t v179 = v192[7];
                  id v180 = &v191[v179];
                  id v181 = &v68[v179];
                  uint64_t v182 = type metadata accessor for FeedPaywallType(0);
                  if (swift_getEnumCaseMultiPayload())
                  {
                    memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
                  }
                  else
                  {
                    *(void *)id v180 = *(void *)v181;
                    sub_1DEC84AA4();
                    uint64_t v184 = *(int *)(v183 + 48);
                    uint64_t v185 = &v180[v184];
                    v186 = &v181[v184];
                    uint64_t v187 = sub_1DFDEEE80();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 32))(v185, v186, v187);
                    swift_storeEnumTagMultiPayload();
                  }
LABEL_49:
                  swift_storeEnumTagMultiPayload();
                  swift_storeEnumTagMultiPayload();
                  return a1;
                }
              }
              sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
              memcpy(v169, v170, *(void *)(*(void *)(v173 - 8) + 64));
              goto LABEL_46;
            }
          }
          sub_1DEA6AA34(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
          memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64));
          goto LABEL_27;
        case 8u:
          long long v77 = a2[1];
          *a1 = *a2;
          a1[1] = v77;
          long long v78 = a2[3];
          a1[2] = a2[2];
          a1[3] = v78;
          *((void *)a1 + 8) = *((void *)a2 + 8);
          *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
          uint64_t v79 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
          uint64_t v80 = v79[11];
          id v81 = (char *)a1 + v80;
          uint64_t v82 = (char *)a2 + v80;
          uint64_t v83 = sub_1DFDF8C20();
          uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32);
          v84(v81, v82, v83);
          v84((char *)a1 + v79[12], (char *)a2 + v79[12], v83);
          *(void *)((char *)a1 + v79[13]) = *(void *)((char *)a2 + v79[13]);
          goto LABEL_49;
        case 9u:
          sub_1DEA53948();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v85 - 8) + 32))(a1, a2, v85);
          uint64_t v86 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
          uint64_t v87 = (char *)a1 + v86;
          uint64_t v88 = (char *)a2 + v86;
          uint64_t v89 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
          goto LABEL_49;
        case 0xCu:
          uint64_t v91 = sub_1DFDF7010();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v91 - 8) + 32))(a1, a2, v91);
          uint64_t v92 = type metadata accessor for NewspaperMagazineFeedGroup();
          *(void *)((char *)a1 + *(int *)(v92 + 20)) = *(void *)((char *)a2 + *(int *)(v92 + 20));
          *(void *)((char *)a1 + *(int *)(v92 + 24)) = *(void *)((char *)a2 + *(int *)(v92 + 24));
          goto LABEL_49;
        case 0xDu:
          sub_1DEA5387C();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v93 - 8) + 32))(a1, a2, v93);
          uint64_t v94 = type metadata accessor for CuratedMagazineFeedGroup();
          uint64_t v95 = *(int *)(v94 + 20);
          uint64_t v96 = (char *)a1 + v95;
          id v97 = (char *)a2 + v95;
          uint64_t v98 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
          uint64_t v99 = *(int *)(v94 + 24);
          uint64_t v100 = (char *)a1 + v99;
          id v101 = (char *)a2 + v99;
          uint64_t v102 = sub_1DFDF8F10();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          goto LABEL_49;
        default:
          long long v6 = a2[1];
          *a1 = *a2;
          a1[1] = v6;
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
          *((void *)a1 + 7) = *((void *)a2 + 7);
          a1[4] = a2[4];
          uint64_t v7 = type metadata accessor for CategoriesMagazineFeedGroup();
          uint64_t v8 = *(int *)(v7 + 40);
          uint64_t v9 = (char *)a1 + v8;
          uint64_t v10 = (char *)a2 + v8;
          uint64_t v11 = sub_1DFDF8C20();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
          *(void *)((char *)a1 + *(int *)(v7 + 44)) = *(void *)((char *)a2 + *(int *)(v7 + 44));
          goto LABEL_49;
      }
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1DEFD7E84()
{
  uint64_t result = type metadata accessor for MagazineFeedGroup();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *assignWithCopy for TodaySectionFactory(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = (uint64_t)v4;
  id v6 = v4;

  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  uint64_t v7 = a2[13];
  a1[12] = a2[12];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[13] = v7;
  __swift_assign_boxed_opaque_existential_1(a1 + 14, a2 + 14);
  __swift_assign_boxed_opaque_existential_1(a1 + 19, a2 + 19);
  __swift_assign_boxed_opaque_existential_1(a1 + 24, a2 + 24);
  uint64_t v8 = (void *)a2[29];
  uint64_t v9 = (void *)a1[29];
  a1[29] = (uint64_t)v8;
  id v10 = v8;

  __swift_assign_boxed_opaque_existential_1(a1 + 30, a2 + 30);
  return a1;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for TodaySectionFactory(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_release();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_unknownObjectRelease();
  *(void *)(a1 + 104) = v9;
  __swift_destroy_boxed_opaque_existential_1(a1 + 112);
  long long v10 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v10;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  __swift_destroy_boxed_opaque_existential_1(a1 + 152);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  __swift_destroy_boxed_opaque_existential_1(a1 + 192);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  uint64_t v12 = *(void *)(a2 + 232);
  uint64_t v13 = *(void **)(a1 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v12;

  __swift_destroy_boxed_opaque_existential_1(a1 + 240);
  long long v14 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v14;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for TodaySectionFactory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 280)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TodaySectionFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 280) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 280) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodaySectionFactory()
{
  return &type metadata for TodaySectionFactory;
}

uint64_t sub_1DEFD81C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEFC9C20(a1, *(void (**)(char *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), a2);
}

void sub_1DEFD81EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    a5();
    unint64_t v8 = sub_1DFDF9B00();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DEFD828C()
{
  if (!qword_1EBAF8CD0)
  {
    sub_1DEFD81EC(255, (unint64_t *)&qword_1EBAA63A0, MEMORY[0x1E4F7B0B8], (void (*)(void))sub_1DEFD8388, (void (*)(void))sub_1DEFD83BC);
    sub_1DEFD81EC(255, (unint64_t *)&qword_1EBAE9B60, MEMORY[0x1E4F80560], (void (*)(void))sub_1DEBCA08C, (void (*)(void))sub_1DEBCA0C0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAF8CD0);
    }
  }
}

uint64_t sub_1DEFD8388()
{
  return sub_1DEA94B78(&qword_1EBAA3BD0, MEMORY[0x1E4F7B0B8]);
}

uint64_t sub_1DEFD83BC()
{
  return sub_1DEA94B78((unint64_t *)&unk_1EBAA3BC0, MEMORY[0x1E4F7B0B8]);
}

uint64_t sub_1DEFD83F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t SystemNotificationsRouteModel.identifier.getter()
{
  if (!*(unsigned char *)(v0 + 16))
  {
    sub_1DFDFF9B0();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "channel(tagID:");
    HIBYTE(v2[1]) = -18;
    sub_1DFDFDE90();
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_1DFDFF9B0();
    swift_bridgeObjectRelease();
    v2[0] = 0xD000000000000012;
    v2[1] = 0x80000001DFED9B80;
    sub_1DFDFDE90();
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1DFDFDE90();
    return v2[0];
  }
  return 0x746C7561666564;
}

uint64_t SystemNotificationsRouteModel.description.getter()
{
  return SystemNotificationsRouteModel.identifier.getter();
}

uint64_t sub_1DEFD85CC()
{
  return SystemNotificationsRouteModel.identifier.getter();
}

uint64_t sub_1DEFD860C(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SystemNotificationsRouteModel(uint64_t a1)
{
  return sub_1DEFD8630(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1DEFD8630(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s7NewsUI229SystemNotificationsRouteModelOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1DEFD860C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SystemNotificationsRouteModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1DEFD860C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1DEFD8630(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SystemNotificationsRouteModel(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1DEFD8630(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SystemNotificationsRouteModel()
{
  return &type metadata for SystemNotificationsRouteModel;
}

uint64_t destroy for AudioFeedRefreshResult()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s7NewsUI222AudioFeedRefreshResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AudioFeedRefreshResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AudioFeedRefreshResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AudioFeedRefreshResult()
{
  return &type metadata for AudioFeedRefreshResult;
}

void *sub_1DEFD8884(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a3;
    sub_1DEA84D04();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, v3, v6);
    uint64_t v7 = v5[5];
    char v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)v3 + v7;
    sub_1DEA81E6C(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = type metadata accessor for MagazineTodayFeedGroupKnobs();
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = &v8[v12];
    long long v14 = &v9[v12];
    sub_1DEA81E6C(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = *(int *)(v11 + 24);
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    uint64_t v19 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
    uint64_t v20 = *((void *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      sub_1DE9E0078(0, qword_1EBAAF608, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs, MEMORY[0x1E4FBB718]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v23 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v23;
      uint64_t v24 = v19[6];
      uint64_t v100 = v20;
      uint64_t v25 = &v17[v24];
      uint64_t v26 = &v18[v24];
      sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
      uint64_t v28 = v27;
      uint64_t v106 = v27;
      uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      uint64_t v103 = v19;
      swift_bridgeObjectRetain();
      v105(v25, v26, v28);
      long long v29 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
      v25[v29[5]] = v26[v29[5]];
      *(void *)&v25[v29[6]] = *(void *)&v26[v29[6]];
      *(void *)&v25[v29[7]] = *(void *)&v26[v29[7]];
      id v101 = v5;
      uint64_t v102 = v3;
      *(void *)&v25[v29[8]] = *(void *)&v26[v29[8]];
      *(void *)&v25[v29[9]] = *(void *)&v26[v29[9]];
      v25[v29[10]] = v26[v29[10]];
      uint64_t v30 = v29[11];
      uint64_t v104 = &v25[v30];
      uint64_t v31 = &v26[v30];
      sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
      uint64_t v33 = v32;
      id v107 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v107(v104, v31, v33);
      uint64_t v34 = v19[7];
      uint64_t v35 = &v17[v34];
      uint64_t v36 = &v18[v34];
      v105(&v17[v34], &v18[v34], v106);
      uint64_t v37 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
      v35[v37[5]] = v36[v37[5]];
      *(void *)&v35[v37[6]] = *(void *)&v36[v37[6]];
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
      *(void *)&v35[v37[9]] = *(void *)&v36[v37[9]];
      v35[v37[10]] = v36[v37[10]];
      uint64_t v38 = v37[11];
      uint64_t v39 = &v35[v38];
      uint64_t v40 = &v36[v38];
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v107(v39, v40, v33);
      uint64_t v41 = v19[8];
      uint64_t v42 = &v17[v41];
      uint64_t v43 = &v18[v41];
      v105(&v17[v41], &v18[v41], v106);
      uint64_t v44 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
      v42[v44[5]] = v43[v44[5]];
      *(void *)&v42[v44[6]] = *(void *)&v43[v44[6]];
      *(void *)&v42[v44[7]] = *(void *)&v43[v44[7]];
      *(void *)&v42[v44[8]] = *(void *)&v43[v44[8]];
      *(void *)&v42[v44[9]] = *(void *)&v43[v44[9]];
      v42[v44[10]] = v43[v44[10]];
      uint64_t v45 = v44[11];
      uint64_t v46 = &v42[v45];
      uint64_t v47 = &v43[v45];
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v107(v46, v47, v33);
      v105(&v17[v103[9]], &v18[v103[9]], v106);
      uint64_t v48 = v19[10];
      uint64_t v49 = &v17[v48];
      uint64_t v50 = &v18[v48];
      v105(&v17[v48], &v18[v48], v106);
      uint64_t v51 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
      *(void *)&v49[*(int *)(v51 + 20)] = *(void *)&v50[*(int *)(v51 + 20)];
      uint64_t v52 = *(int *)(v51 + 24);
      uint64_t v53 = &v49[v52];
      uint64_t v54 = &v50[v52];
      swift_retain();
      v107(v53, v54, v33);
      uint64_t v55 = v19[11];
      uint64_t v56 = &v17[v55];
      uint64_t v57 = &v18[v55];
      v105(&v17[v55], &v18[v55], v106);
      uint64_t v58 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
      v56[v58[5]] = v57[v58[5]];
      v56[v58[6]] = v57[v58[6]];
      *(void *)&v56[v58[7]] = *(void *)&v57[v58[7]];
      v107(&v56[v58[8]], &v57[v58[8]], v33);
      v105(&v17[v103[12]], &v18[v103[12]], v106);
      uint64_t v59 = v19[13];
      uint64_t v60 = &v17[v59];
      uint64_t v61 = &v18[v59];
      *uint64_t v60 = v18[v59];
      *(_OWORD *)(v60 + 8) = *(_OWORD *)&v18[v59 + 8];
      *((void *)v60 + 3) = *(void *)&v18[v59 + 24];
      v60[32] = v18[v59 + 32];
      *(_OWORD *)(v60 + 40) = *(_OWORD *)&v18[v59 + 40];
      *((void *)v60 + 7) = *(void *)&v18[v59 + 56];
      *((_WORD *)v60 + 32) = *(_WORD *)&v18[v59 + 64];
      uint64_t v62 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
      v107(&v60[*(int *)(v62 + 52)], &v61[*(int *)(v62 + 52)], v33);
      uint64_t v63 = v19[14];
      uint64_t v64 = &v17[v63];
      uint64_t v65 = &v18[v63];
      v105(&v17[v63], &v18[v63], v106);
      uint64_t v66 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
      v64[v66[5]] = v65[v66[5]];
      v64[v66[6]] = v65[v66[6]];
      v107(&v64[v66[7]], &v65[v66[7]], v33);
      uint64_t v67 = v19[15];
      uint64_t v68 = &v17[v67];
      uint64_t v69 = &v18[v67];
      v105(&v17[v67], &v18[v67], v106);
      uint64_t v70 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
      *(void *)&v68[v70[5]] = *(void *)&v69[v70[5]];
      *(void *)&v68[v70[6]] = *(void *)&v69[v70[6]];
      v68[v70[7]] = v69[v70[7]];
      v107(&v68[v70[8]], &v69[v70[8]], v33);
      uint64_t v71 = v19[16];
      uint64_t v72 = &v17[v71];
      uint64_t v73 = &v18[v71];
      v105(&v17[v71], &v18[v71], v106);
      uint64_t v74 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
      v72[v74[5]] = v73[v74[5]];
      v72[v74[6]] = v73[v74[6]];
      *(void *)&v72[v74[7]] = *(void *)&v73[v74[7]];
      v72[v74[8]] = v73[v74[8]];
      v72[v74[9]] = v73[v74[9]];
      v107(&v72[v74[10]], &v73[v74[10]], v33);
      uint64_t v75 = v19[17];
      uint64_t v76 = &v17[v75];
      long long v77 = &v18[v75];
      v105(&v17[v75], &v18[v75], v106);
      long long v78 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
      *(void *)&v76[v78[5]] = *(void *)&v77[v78[5]];
      *(void *)&v76[v78[6]] = *(void *)&v77[v78[6]];
      uint64_t v79 = v78[7];
      uint64_t v80 = *(void *)&v77[v79];
      uint64_t v5 = v101;
      *(void *)&v76[v79] = v80;
      id v81 = *(void (**)(char *, void, uint64_t, int *))(v100 + 56);
      swift_bridgeObjectRetain();
      v81(v17, 0, 1, v19);
      uint64_t v3 = v102;
    }
    uint64_t v82 = v5[7];
    *(void *)((char *)a1 + v5[6]) = *(void *)((char *)v3 + v5[6]);
    uint64_t v83 = v3;
    uint64_t v84 = (char *)a1 + v82;
    uint64_t v85 = v5;
    uint64_t v86 = (uint64_t)v83 + v82;
    long long v87 = *(_OWORD *)((char *)v83 + v82 + 24);
    *(_OWORD *)((char *)a1 + v82 + 24) = v87;
    uint64_t v88 = v87;
    uint64_t v89 = **(void (***)(char *, uint64_t, uint64_t))(v87 - 8);
    swift_retain();
    v89(v84, v86, v88);
    uint64_t v90 = v85[8];
    uint64_t v91 = v85[9];
    uint64_t v92 = *(void **)((char *)v83 + v90);
    *(void *)((char *)a1 + v90) = v92;
    uint64_t v93 = (char *)a1 + v91;
    uint64_t v94 = (uint64_t)v83 + v91;
    long long v95 = *(_OWORD *)((char *)v83 + v91 + 24);
    *(_OWORD *)(v93 + 24) = v95;
    uint64_t v96 = v95;
    id v97 = **(void (***)(char *, uint64_t, uint64_t))(v95 - 8);
    id v98 = v92;
    v97(v93, v94, v96);
  }
  return a1;
}

uint64_t sub_1DEFD9310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA84D04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v147 = a1;
  uint64_t v148 = a3;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v149 = a2;
  uint64_t v9 = a2 + v7;
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for MagazineTodayFeedGroupKnobs();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA81E6C(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = (char *)(v8 + v16);
  uint64_t v18 = (char *)(v9 + v16);
  uint64_t v19 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v17 + 1) = *((void *)v18 + 1);
      uint64_t v89 = v19[6];
      uint64_t v90 = &v17[v89];
      uint64_t v91 = &v18[v89];
      sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
      uint64_t v93 = v92;
      uint64_t v140 = *(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 24);
      v140(v90, v91, v92);
      uint64_t v94 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
      v90[v94[5]] = v91[v94[5]];
      *(void *)&v90[v94[6]] = *(void *)&v91[v94[6]];
      swift_retain();
      swift_release();
      *(void *)&v90[v94[7]] = *(void *)&v91[v94[7]];
      swift_retain();
      swift_release();
      *(void *)&v90[v94[8]] = *(void *)&v91[v94[8]];
      swift_retain();
      swift_release();
      *(void *)&v90[v94[9]] = *(void *)&v91[v94[9]];
      swift_retain();
      swift_release();
      v90[v94[10]] = v91[v94[10]];
      uint64_t v95 = v94[11];
      uint64_t v96 = &v90[v95];
      id v97 = &v91[v95];
      sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
      uint64_t v99 = v17;
      uint64_t v146 = v17;
      uint64_t v143 = *(void (**)(char *, char *))(*(void *)(v98 - 8) + 24);
      uint64_t v100 = v18;
      uint64_t v101 = v98;
      v143(v96, v97);
      uint64_t v102 = v19[7];
      uint64_t v103 = &v99[v102];
      uint64_t v104 = &v100[v102];
      uint64_t v145 = v100;
      v140(&v99[v102], &v100[v102], v93);
      uint64_t v105 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
      v103[v105[5]] = v104[v105[5]];
      *(void *)&v103[v105[6]] = *(void *)&v104[v105[6]];
      swift_retain();
      swift_release();
      *(void *)&v103[v105[7]] = *(void *)&v104[v105[7]];
      swift_retain();
      swift_release();
      *(void *)&v103[v105[8]] = *(void *)&v104[v105[8]];
      swift_retain();
      swift_release();
      *(void *)&v103[v105[9]] = *(void *)&v104[v105[9]];
      swift_retain();
      swift_release();
      v103[v105[10]] = v104[v105[10]];
      ((void (*)(char *, char *, uint64_t))v143)(&v103[v105[11]], &v104[v105[11]], v101);
      uint64_t v106 = v19[8];
      id v107 = &v146[v106];
      uint64_t v108 = &v100[v106];
      v140(&v146[v106], &v100[v106], v93);
      uint64_t v109 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
      v107[v109[5]] = v108[v109[5]];
      *(void *)&v107[v109[6]] = *(void *)&v108[v109[6]];
      swift_retain();
      swift_release();
      *(void *)&v107[v109[7]] = *(void *)&v108[v109[7]];
      swift_retain();
      swift_release();
      *(void *)&v107[v109[8]] = *(void *)&v108[v109[8]];
      swift_retain();
      swift_release();
      *(void *)&v107[v109[9]] = *(void *)&v108[v109[9]];
      swift_retain();
      swift_release();
      v107[v109[10]] = v108[v109[10]];
      ((void (*)(char *, char *, uint64_t))v143)(&v107[v109[11]], &v108[v109[11]], v101);
      v140(&v146[v19[9]], &v100[v19[9]], v93);
      uint64_t v110 = v19[10];
      uint64_t v111 = &v146[v110];
      uint64_t v112 = &v100[v110];
      v140(&v146[v110], &v100[v110], v93);
      uint64_t v113 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
      *(void *)&v111[*(int *)(v113 + 20)] = *(void *)&v112[*(int *)(v113 + 20)];
      swift_retain();
      swift_release();
      ((void (*)(char *, char *, uint64_t))v143)(&v111[*(int *)(v113 + 24)], &v112[*(int *)(v113 + 24)], v101);
      uint64_t v114 = v19[11];
      uint64_t v115 = &v146[v114];
      uint64_t v116 = &v100[v114];
      v140(&v146[v114], &v100[v114], v93);
      char v117 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
      v115[v117[5]] = v116[v117[5]];
      v115[v117[6]] = v116[v117[6]];
      *(void *)&v115[v117[7]] = *(void *)&v116[v117[7]];
      ((void (*)(char *, char *, uint64_t))v143)(&v115[v117[8]], &v116[v117[8]], v101);
      v140(&v146[v19[12]], &v100[v19[12]], v93);
      uint64_t v118 = v19[13];
      uint64_t v119 = &v146[v118];
      uint64_t v120 = &v100[v118];
      *uint64_t v119 = v100[v118];
      *((void *)v119 + 1) = *(void *)&v100[v118 + 8];
      *((void *)v119 + 2) = *(void *)&v100[v118 + 16];
      *((void *)v119 + 3) = *(void *)&v100[v118 + 24];
      v119[32] = v100[v118 + 32];
      *((void *)v119 + 5) = *(void *)&v100[v118 + 40];
      *((void *)v119 + 6) = *(void *)&v100[v118 + 48];
      uint64_t v121 = *(void *)&v100[v118 + 56];
      v119[64] = v120[64];
      *((void *)v119 + 7) = v121;
      v119[65] = v120[65];
      uint64_t v122 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
      ((void (*)(char *, char *, uint64_t))v143)(&v119[*(int *)(v122 + 52)], &v120[*(int *)(v122 + 52)], v101);
      uint64_t v123 = v19[14];
      uint64_t v124 = &v146[v123];
      uint64_t v125 = &v100[v123];
      v140(&v146[v123], &v100[v123], v93);
      uint64_t v126 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
      v124[v126[5]] = v125[v126[5]];
      v124[v126[6]] = v125[v126[6]];
      ((void (*)(char *, char *, uint64_t))v143)(&v124[v126[7]], &v125[v126[7]], v101);
      uint64_t v127 = v19[15];
      uint64_t v128 = &v146[v127];
      uint64_t v129 = &v100[v127];
      v140(&v146[v127], &v100[v127], v93);
      uint64_t v130 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
      *(void *)&v128[v130[5]] = *(void *)&v129[v130[5]];
      *(void *)&v128[v130[6]] = *(void *)&v129[v130[6]];
      v128[v130[7]] = v129[v130[7]];
      ((void (*)(char *, char *, uint64_t))v143)(&v128[v130[8]], &v129[v130[8]], v101);
      uint64_t v131 = v19[16];
      uint64_t v132 = &v146[v131];
      uint64_t v133 = &v100[v131];
      v140(&v146[v131], &v100[v131], v93);
      uint64_t v134 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
      v132[v134[5]] = v133[v134[5]];
      v132[v134[6]] = v133[v134[6]];
      *(void *)&v132[v134[7]] = *(void *)&v133[v134[7]];
      v132[v134[8]] = v133[v134[8]];
      v132[v134[9]] = v133[v134[9]];
      ((void (*)(char *, char *, uint64_t))v143)(&v132[v134[10]], &v133[v134[10]], v101);
      uint64_t v135 = v19[17];
      uint64_t v136 = &v146[v135];
      uint64_t v137 = &v145[v135];
      v140(&v146[v135], &v145[v135], v93);
      uint64_t v138 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
      *(void *)&v136[v138[5]] = *(void *)&v137[v138[5]];
      *(void *)&v136[v138[6]] = *(void *)&v137[v138[6]];
      *(void *)&v136[v138[7]] = *(void *)&v137[v138[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1DEA51588((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupKnobs);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    sub_1DE9E0078(0, qword_1EBAAF608, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs, MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  uint64_t v24 = v19[6];
  uint64_t v25 = &v17[v24];
  uint64_t v26 = &v18[v24];
  sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
  uint64_t v28 = v27;
  uint64_t v139 = v27;
  uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  v144(v25, v26, v28);
  long long v29 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
  v25[v29[5]] = v26[v29[5]];
  *(void *)&v25[v29[6]] = *(void *)&v26[v29[6]];
  *(void *)&v25[v29[7]] = *(void *)&v26[v29[7]];
  *(void *)&v25[v29[8]] = *(void *)&v26[v29[8]];
  *(void *)&v25[v29[9]] = *(void *)&v26[v29[9]];
  v25[v29[10]] = v26[v29[10]];
  uint64_t v30 = v29[11];
  uint64_t v31 = &v25[v30];
  uint64_t v32 = &v26[v30];
  sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
  uint64_t v34 = v33;
  uint64_t v142 = v33;
  uint64_t v141 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v141(v31, v32, v34);
  uint64_t v35 = v19[7];
  uint64_t v36 = &v17[v35];
  uint64_t v37 = &v18[v35];
  v144(&v17[v35], &v18[v35], v139);
  uint64_t v38 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
  v36[v38[5]] = v37[v38[5]];
  *(void *)&v36[v38[6]] = *(void *)&v37[v38[6]];
  *(void *)&v36[v38[7]] = *(void *)&v37[v38[7]];
  *(void *)&v36[v38[8]] = *(void *)&v37[v38[8]];
  *(void *)&v36[v38[9]] = *(void *)&v37[v38[9]];
  v36[v38[10]] = v37[v38[10]];
  uint64_t v39 = v38[11];
  uint64_t v40 = &v36[v39];
  uint64_t v41 = &v37[v39];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v141(v40, v41, v142);
  uint64_t v42 = v19[8];
  uint64_t v43 = &v17[v42];
  uint64_t v44 = &v18[v42];
  v144(&v17[v42], &v18[v42], v139);
  uint64_t v45 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
  v43[v45[5]] = v44[v45[5]];
  *(void *)&v43[v45[6]] = *(void *)&v44[v45[6]];
  *(void *)&v43[v45[7]] = *(void *)&v44[v45[7]];
  *(void *)&v43[v45[8]] = *(void *)&v44[v45[8]];
  *(void *)&v43[v45[9]] = *(void *)&v44[v45[9]];
  v43[v45[10]] = v44[v45[10]];
  uint64_t v46 = v45[11];
  uint64_t v47 = &v43[v46];
  uint64_t v48 = &v44[v46];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v141(v47, v48, v142);
  v144(&v17[v19[9]], &v18[v19[9]], v139);
  uint64_t v49 = v19[10];
  uint64_t v50 = &v17[v49];
  uint64_t v51 = &v18[v49];
  v144(&v17[v49], &v18[v49], v139);
  uint64_t v52 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
  *(void *)&v50[*(int *)(v52 + 20)] = *(void *)&v51[*(int *)(v52 + 20)];
  uint64_t v53 = *(int *)(v52 + 24);
  uint64_t v54 = &v50[v53];
  uint64_t v55 = &v51[v53];
  swift_retain();
  v141(v54, v55, v142);
  uint64_t v56 = v19[11];
  uint64_t v57 = &v17[v56];
  uint64_t v58 = &v18[v56];
  v144(&v17[v56], &v18[v56], v139);
  uint64_t v59 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
  v57[v59[5]] = v58[v59[5]];
  v57[v59[6]] = v58[v59[6]];
  *(void *)&v57[v59[7]] = *(void *)&v58[v59[7]];
  v141(&v57[v59[8]], &v58[v59[8]], v142);
  v144(&v17[v19[12]], &v18[v19[12]], v139);
  uint64_t v60 = v19[13];
  uint64_t v61 = &v17[v60];
  uint64_t v62 = &v18[v60];
  *uint64_t v61 = v18[v60];
  *((void *)v61 + 1) = *(void *)&v18[v60 + 8];
  *((void *)v61 + 2) = *(void *)&v18[v60 + 16];
  *((void *)v61 + 3) = *(void *)&v18[v60 + 24];
  v61[32] = v18[v60 + 32];
  *((void *)v61 + 5) = *(void *)&v18[v60 + 40];
  *((void *)v61 + 6) = *(void *)&v18[v60 + 48];
  uint64_t v63 = *(void *)&v18[v60 + 56];
  v61[64] = v62[64];
  *((void *)v61 + 7) = v63;
  v61[65] = v62[65];
  uint64_t v64 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
  v141(&v61[*(int *)(v64 + 52)], &v62[*(int *)(v64 + 52)], v142);
  uint64_t v65 = v19[14];
  uint64_t v66 = &v17[v65];
  uint64_t v67 = &v18[v65];
  v144(&v17[v65], &v18[v65], v139);
  uint64_t v68 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
  v66[v68[5]] = v67[v68[5]];
  v66[v68[6]] = v67[v68[6]];
  v141(&v66[v68[7]], &v67[v68[7]], v142);
  uint64_t v69 = v19[15];
  uint64_t v70 = &v17[v69];
  uint64_t v71 = &v18[v69];
  v144(&v17[v69], &v18[v69], v139);
  uint64_t v72 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
  *(void *)&v70[v72[5]] = *(void *)&v71[v72[5]];
  *(void *)&v70[v72[6]] = *(void *)&v71[v72[6]];
  v70[v72[7]] = v71[v72[7]];
  v141(&v70[v72[8]], &v71[v72[8]], v142);
  uint64_t v73 = v19[16];
  uint64_t v74 = &v17[v73];
  uint64_t v75 = &v18[v73];
  v144(&v17[v73], &v18[v73], v139);
  uint64_t v76 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  v74[v76[5]] = v75[v76[5]];
  v74[v76[6]] = v75[v76[6]];
  *(void *)&v74[v76[7]] = *(void *)&v75[v76[7]];
  v74[v76[8]] = v75[v76[8]];
  v74[v76[9]] = v75[v76[9]];
  v141(&v74[v76[10]], &v75[v76[10]], v142);
  uint64_t v77 = v19[17];
  long long v78 = &v17[v77];
  uint64_t v79 = &v18[v77];
  v144(&v17[v77], &v18[v77], v139);
  uint64_t v80 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
  *(void *)&v78[v80[5]] = *(void *)&v79[v80[5]];
  *(void *)&v78[v80[6]] = *(void *)&v79[v80[6]];
  *(void *)&v78[v80[7]] = *(void *)&v79[v80[7]];
  id v81 = *(void (**)(char *, void, uint64_t, int *))(v20 + 56);
  swift_bridgeObjectRetain();
  v81(v17, 0, 1, v19);
LABEL_7:
  uint64_t v83 = v148;
  *(void *)(v147 + *(int *)(v148 + 24)) = *(void *)(v149 + *(int *)(v148 + 24));
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v147 + *(int *)(v83 + 28)), (uint64_t *)(v149 + *(int *)(v83 + 28)));
  uint64_t v84 = *(int *)(v148 + 32);
  uint64_t v85 = *(void **)(v149 + v84);
  uint64_t v86 = *(void **)(v147 + v84);
  *(void *)(v147 + v84) = v85;
  id v87 = v85;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v147 + *(int *)(v83 + 36)), (uint64_t *)(v149 + *(int *)(v83 + 36)));
  return v147;
}

__n128 sub_1DEFDA424(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA84D04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v86 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for MagazineTodayFeedGroupKnobs();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA81E6C(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = (_OWORD *)(v8 + v16);
  uint64_t v18 = (_OWORD *)(v9 + v16);
  uint64_t v19 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    sub_1DE9E0078(0, qword_1EBAAF608, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs, MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    id v81 = (char *)v17;
    *uint64_t v17 = *v18;
    uint64_t v22 = v19[6];
    int v23 = (char *)v17 + v22;
    uint64_t v24 = (char *)v18 + v22;
    uint64_t v82 = a3;
    sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
    uint64_t v26 = v25;
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32);
    v84(v23, v24, v25);
    uint64_t v27 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
    v23[v27[5]] = v24[v27[5]];
    *(void *)&v23[v27[6]] = *(void *)&v24[v27[6]];
    *(void *)&v23[v27[7]] = *(void *)&v24[v27[7]];
    *(void *)&v23[v27[8]] = *(void *)&v24[v27[8]];
    *(void *)&v23[v27[9]] = *(void *)&v24[v27[9]];
    v23[v27[10]] = v24[v27[10]];
    uint64_t v28 = v27[11];
    uint64_t v83 = a2;
    long long v29 = &v23[v28];
    uint64_t v30 = &v24[v28];
    sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
    uint64_t v32 = v31;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
    uint64_t v85 = v31;
    v33(v29, v30, v31);
    uint64_t v34 = v19[7];
    uint64_t v35 = &v81[v34];
    uint64_t v36 = (char *)v18 + v34;
    v84(&v81[v34], (char *)v18 + v34, v26);
    uint64_t v37 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
    v35[v37[5]] = v36[v37[5]];
    *(void *)&v35[v37[6]] = *(void *)&v36[v37[6]];
    *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
    *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
    *(void *)&v35[v37[9]] = *(void *)&v36[v37[9]];
    v35[v37[10]] = v36[v37[10]];
    v33(&v35[v37[11]], &v36[v37[11]], v32);
    uint64_t v38 = v19[8];
    uint64_t v39 = &v81[v38];
    uint64_t v40 = (char *)v18 + v38;
    v84(&v81[v38], (char *)v18 + v38, v26);
    uint64_t v41 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
    v39[v41[5]] = v40[v41[5]];
    *(void *)&v39[v41[6]] = *(void *)&v40[v41[6]];
    *(void *)&v39[v41[7]] = *(void *)&v40[v41[7]];
    *(void *)&v39[v41[8]] = *(void *)&v40[v41[8]];
    *(void *)&v39[v41[9]] = *(void *)&v40[v41[9]];
    v39[v41[10]] = v40[v41[10]];
    v33(&v39[v41[11]], &v40[v41[11]], v85);
    v84(&v81[v19[9]], (char *)v18 + v19[9], v26);
    uint64_t v42 = v19[10];
    uint64_t v43 = &v81[v42];
    uint64_t v44 = (char *)v18 + v42;
    v84(&v81[v42], (char *)v18 + v42, v26);
    uint64_t v45 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
    *(void *)&v43[*(int *)(v45 + 20)] = *(void *)&v44[*(int *)(v45 + 20)];
    v33(&v43[*(int *)(v45 + 24)], &v44[*(int *)(v45 + 24)], v85);
    uint64_t v46 = v19[11];
    uint64_t v47 = &v81[v46];
    uint64_t v48 = (char *)v18 + v46;
    v84(&v81[v46], (char *)v18 + v46, v26);
    uint64_t v49 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
    v47[v49[5]] = v48[v49[5]];
    v47[v49[6]] = v48[v49[6]];
    *(void *)&v47[v49[7]] = *(void *)&v48[v49[7]];
    v33(&v47[v49[8]], &v48[v49[8]], v85);
    v84(&v81[v19[12]], (char *)v18 + v19[12], v26);
    uint64_t v50 = v19[13];
    uint64_t v51 = &v81[v50];
    uint64_t v52 = (char *)v18 + v50;
    *uint64_t v51 = *((unsigned char *)v18 + v50);
    *(_OWORD *)(v51 + 8) = *(_OWORD *)((char *)v18 + v50 + 8);
    *((void *)v51 + 3) = *(void *)((char *)v18 + v50 + 24);
    v51[32] = *((unsigned char *)v18 + v50 + 32);
    *(_OWORD *)(v51 + 40) = *(_OWORD *)((char *)v18 + v50 + 40);
    *((void *)v51 + 7) = *(void *)((char *)v18 + v50 + 56);
    *((_WORD *)v51 + 32) = *(_WORD *)((char *)v18 + v50 + 64);
    uint64_t v53 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
    v33(&v51[*(int *)(v53 + 52)], &v52[*(int *)(v53 + 52)], v85);
    uint64_t v54 = v19[14];
    uint64_t v55 = &v81[v54];
    uint64_t v56 = (char *)v18 + v54;
    v84(&v81[v54], (char *)v18 + v54, v26);
    uint64_t v57 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
    v55[v57[5]] = v56[v57[5]];
    v55[v57[6]] = v56[v57[6]];
    v33(&v55[v57[7]], &v56[v57[7]], v85);
    uint64_t v58 = v19[15];
    uint64_t v59 = &v81[v58];
    uint64_t v60 = (char *)v18 + v58;
    v84(&v81[v58], (char *)v18 + v58, v26);
    uint64_t v61 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
    *(void *)&v59[v61[5]] = *(void *)&v60[v61[5]];
    *(void *)&v59[v61[6]] = *(void *)&v60[v61[6]];
    v59[v61[7]] = v60[v61[7]];
    v33(&v59[v61[8]], &v60[v61[8]], v85);
    uint64_t v62 = v19[16];
    uint64_t v63 = &v81[v62];
    uint64_t v64 = (char *)v18 + v62;
    v84(&v81[v62], (char *)v18 + v62, v26);
    uint64_t v65 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
    v63[v65[5]] = v64[v65[5]];
    v63[v65[6]] = v64[v65[6]];
    *(void *)&v63[v65[7]] = *(void *)&v64[v65[7]];
    v63[v65[8]] = v64[v65[8]];
    v63[v65[9]] = v64[v65[9]];
    v33(&v63[v65[10]], &v64[v65[10]], v85);
    uint64_t v66 = v19[17];
    uint64_t v67 = &v81[v66];
    uint64_t v68 = (char *)v18 + v66;
    v84(&v81[v66], (char *)v18 + v66, v26);
    uint64_t v69 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
    *(void *)&v67[v69[5]] = *(void *)&v68[v69[5]];
    *(void *)&v67[v69[6]] = *(void *)&v68[v69[6]];
    *(void *)&v67[v69[7]] = *(void *)&v68[v69[7]];
    a3 = v82;
    a2 = v83;
    (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v81, 0, 1, v19);
  }
  uint64_t v70 = a3[7];
  *(void *)(v86 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v71 = v86 + v70;
  uint64_t v72 = (long long *)(a2 + v70);
  long long v73 = *v72;
  long long v74 = v72[1];
  *(void *)(v71 + 32) = *((void *)v72 + 4);
  uint64_t v75 = a3[8];
  uint64_t v76 = a3[9];
  uint64_t v77 = *(void *)(a2 + v75);
  *(_OWORD *)uint64_t v71 = v73;
  *(_OWORD *)(v71 + 16) = v74;
  *(void *)(v86 + v75) = v77;
  uint64_t v78 = v86 + v76;
  __n128 result = *(__n128 *)(a2 + v76);
  long long v80 = *(_OWORD *)(a2 + v76 + 16);
  *(__n128 *)uint64_t v78 = result;
  *(_OWORD *)(v78 + 16) = v80;
  *(void *)(v78 + 32) = *(void *)(a2 + v76 + 32);
  return result;
}

uint64_t sub_1DEFDAD20(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA84D04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v141 = a1;
  uint64_t v142 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v143 = a2;
  uint64_t v9 = a2 + v7;
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for MagazineTodayFeedGroupKnobs();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA81E6C(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = (char *)(v8 + v16);
  uint64_t v18 = (char *)(v9 + v16);
  uint64_t v19 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v18;
  uint64_t v24 = v19;
  int v25 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v25)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      swift_bridgeObjectRelease();
      *((void *)v17 + 1) = *((void *)v18 + 1);
      uint64_t v88 = v19[6];
      uint64_t v89 = &v17[v88];
      uint64_t v90 = &v18[v88];
      sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
      uint64_t v139 = v91;
      uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 40);
      v92(v89, v90, v91);
      uint64_t v93 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
      v89[v93[5]] = v90[v93[5]];
      *(void *)&v89[v93[6]] = *(void *)&v90[v93[6]];
      swift_release();
      *(void *)&v89[v93[7]] = *(void *)&v90[v93[7]];
      swift_release();
      *(void *)&v89[v93[8]] = *(void *)&v90[v93[8]];
      swift_release();
      *(void *)&v89[v93[9]] = *(void *)&v90[v93[9]];
      swift_release();
      v89[v93[10]] = v90[v93[10]];
      uint64_t v94 = v93[11];
      uint64_t v95 = &v89[v94];
      uint64_t v96 = &v90[v94];
      sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
      uint64_t v140 = v97;
      uint64_t v137 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 40);
      v137(v95, v96, v97);
      uint64_t v98 = v19[7];
      uint64_t v99 = &v17[v98];
      uint64_t v100 = &v18[v98];
      v92(&v17[v98], &v23[v98], v139);
      uint64_t v101 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
      v99[v101[5]] = v100[v101[5]];
      *(void *)&v99[v101[6]] = *(void *)&v100[v101[6]];
      swift_release();
      *(void *)&v99[v101[7]] = *(void *)&v100[v101[7]];
      swift_release();
      *(void *)&v99[v101[8]] = *(void *)&v100[v101[8]];
      swift_release();
      *(void *)&v99[v101[9]] = *(void *)&v100[v101[9]];
      swift_release();
      v99[v101[10]] = v100[v101[10]];
      v137(&v99[v101[11]], &v100[v101[11]], v140);
      uint64_t v102 = v19[8];
      uint64_t v103 = &v17[v102];
      uint64_t v104 = &v23[v102];
      v92(&v17[v102], &v23[v102], v139);
      uint64_t v105 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
      v103[v105[5]] = v104[v105[5]];
      *(void *)&v103[v105[6]] = *(void *)&v104[v105[6]];
      swift_release();
      *(void *)&v103[v105[7]] = *(void *)&v104[v105[7]];
      swift_release();
      *(void *)&v103[v105[8]] = *(void *)&v104[v105[8]];
      swift_release();
      *(void *)&v103[v105[9]] = *(void *)&v104[v105[9]];
      swift_release();
      v103[v105[10]] = v104[v105[10]];
      v137(&v103[v105[11]], &v104[v105[11]], v140);
      v92(&v17[v19[9]], &v23[v19[9]], v139);
      uint64_t v106 = v19[10];
      id v107 = &v17[v106];
      uint64_t v108 = &v23[v106];
      v92(&v17[v106], &v23[v106], v139);
      uint64_t v109 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
      *(void *)&v107[*(int *)(v109 + 20)] = *(void *)&v108[*(int *)(v109 + 20)];
      swift_release();
      v137(&v107[*(int *)(v109 + 24)], &v108[*(int *)(v109 + 24)], v140);
      uint64_t v110 = v19[11];
      uint64_t v111 = &v17[v110];
      uint64_t v112 = &v23[v110];
      uint64_t v113 = v23;
      v92(&v17[v110], &v23[v110], v139);
      uint64_t v114 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
      v111[v114[5]] = v112[v114[5]];
      v111[v114[6]] = v112[v114[6]];
      *(void *)&v111[v114[7]] = *(void *)&v112[v114[7]];
      v137(&v111[v114[8]], &v112[v114[8]], v140);
      v92(&v17[v19[12]], &v23[v19[12]], v139);
      uint64_t v115 = v19[13];
      uint64_t v116 = &v17[v115];
      char v117 = &v23[v115];
      *uint64_t v116 = v23[v115];
      *(_OWORD *)(v116 + 8) = *(_OWORD *)&v23[v115 + 8];
      *((void *)v116 + 3) = *(void *)&v23[v115 + 24];
      v116[32] = v23[v115 + 32];
      *(_OWORD *)(v116 + 40) = *(_OWORD *)&v23[v115 + 40];
      v116[64] = v23[v115 + 64];
      *((void *)v116 + 7) = *(void *)&v23[v115 + 56];
      v116[65] = v23[v115 + 65];
      uint64_t v118 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
      v137(&v116[*(int *)(v118 + 52)], &v117[*(int *)(v118 + 52)], v140);
      uint64_t v119 = v19[14];
      uint64_t v120 = &v17[v119];
      uint64_t v121 = &v23[v119];
      v92(&v17[v119], &v23[v119], v139);
      uint64_t v122 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
      v120[v122[5]] = v121[v122[5]];
      v120[v122[6]] = v121[v122[6]];
      v137(&v120[v122[7]], &v121[v122[7]], v140);
      uint64_t v123 = v19[15];
      uint64_t v124 = &v17[v123];
      uint64_t v125 = &v23[v123];
      v92(&v17[v123], &v23[v123], v139);
      uint64_t v126 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
      *(void *)&v124[v126[5]] = *(void *)&v125[v126[5]];
      *(void *)&v124[v126[6]] = *(void *)&v125[v126[6]];
      v124[v126[7]] = v125[v126[7]];
      v137(&v124[v126[8]], &v125[v126[8]], v140);
      uint64_t v127 = v19[16];
      uint64_t v128 = &v17[v127];
      uint64_t v129 = &v23[v127];
      v92(&v17[v127], &v23[v127], v139);
      uint64_t v130 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
      v128[v130[5]] = v129[v130[5]];
      v128[v130[6]] = v129[v130[6]];
      *(void *)&v128[v130[7]] = *(void *)&v129[v130[7]];
      v128[v130[8]] = v129[v130[8]];
      v128[v130[9]] = v129[v130[9]];
      v137(&v128[v130[10]], &v129[v130[10]], v140);
      uint64_t v131 = v19[17];
      uint64_t v132 = &v17[v131];
      uint64_t v133 = &v23[v131];
      v92(v132, &v113[v131], v139);
      uint64_t v134 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
      *(void *)&v132[v134[5]] = *(void *)&v133[v134[5]];
      *(void *)&v132[v134[6]] = *(void *)&v133[v134[6]];
      *(void *)&v132[v134[7]] = *(void *)&v133[v134[7]];
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1DEA51588((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupKnobs);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    sub_1DE9E0078(0, qword_1EBAAF608, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedGroupKnobs, MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  uint64_t v26 = v19[6];
  uint64_t v136 = v20;
  uint64_t v27 = &v17[v26];
  uint64_t v28 = &v18[v26];
  sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
  uint64_t v30 = v29;
  uint64_t v135 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32);
  v135(v27, v28, v29);
  uint64_t v31 = (int *)type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
  v27[v31[5]] = v28[v31[5]];
  *(void *)&v27[v31[6]] = *(void *)&v28[v31[6]];
  *(void *)&v27[v31[7]] = *(void *)&v28[v31[7]];
  *(void *)&v27[v31[8]] = *(void *)&v28[v31[8]];
  *(void *)&v27[v31[9]] = *(void *)&v28[v31[9]];
  v27[v31[10]] = v28[v31[10]];
  uint64_t v32 = v31[11];
  uint64_t v33 = &v27[v32];
  uint64_t v34 = &v28[v32];
  sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
  uint64_t v36 = v35;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32);
  v37(v33, v34, v35);
  uint64_t v38 = v37;
  uint64_t v39 = v24[7];
  uint64_t v40 = &v17[v39];
  uint64_t v41 = &v23[v39];
  uint64_t v138 = v30;
  v135(&v17[v39], &v23[v39], v30);
  uint64_t v42 = (int *)type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
  v40[v42[5]] = v41[v42[5]];
  *(void *)&v40[v42[6]] = *(void *)&v41[v42[6]];
  *(void *)&v40[v42[7]] = *(void *)&v41[v42[7]];
  *(void *)&v40[v42[8]] = *(void *)&v41[v42[8]];
  *(void *)&v40[v42[9]] = *(void *)&v41[v42[9]];
  v40[v42[10]] = v41[v42[10]];
  v38(&v40[v42[11]], &v41[v42[11]], v36);
  uint64_t v43 = v24[8];
  uint64_t v44 = &v17[v43];
  uint64_t v45 = &v23[v43];
  v135(&v17[v43], &v23[v43], v30);
  uint64_t v46 = (int *)type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
  v44[v46[5]] = v45[v46[5]];
  *(void *)&v44[v46[6]] = *(void *)&v45[v46[6]];
  *(void *)&v44[v46[7]] = *(void *)&v45[v46[7]];
  *(void *)&v44[v46[8]] = *(void *)&v45[v46[8]];
  *(void *)&v44[v46[9]] = *(void *)&v45[v46[9]];
  v44[v46[10]] = v45[v46[10]];
  uint64_t v47 = v24;
  v38(&v44[v46[11]], &v45[v46[11]], v36);
  v135(&v17[v47[9]], &v23[v47[9]], v138);
  uint64_t v48 = v24[10];
  uint64_t v49 = &v17[v48];
  uint64_t v50 = &v23[v48];
  v135(&v17[v48], &v23[v48], v138);
  uint64_t v51 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
  *(void *)&v49[*(int *)(v51 + 20)] = *(void *)&v50[*(int *)(v51 + 20)];
  v38(&v49[*(int *)(v51 + 24)], &v50[*(int *)(v51 + 24)], v36);
  uint64_t v52 = v24[11];
  uint64_t v53 = &v17[v52];
  uint64_t v54 = &v23[v52];
  v135(&v17[v52], &v23[v52], v138);
  uint64_t v55 = (int *)type metadata accessor for NewIssueMagazineFeedGroupKnobs();
  v53[v55[5]] = v54[v55[5]];
  v53[v55[6]] = v54[v55[6]];
  *(void *)&v53[v55[7]] = *(void *)&v54[v55[7]];
  v38(&v53[v55[8]], &v54[v55[8]], v36);
  v135(&v17[v47[12]], &v23[v47[12]], v138);
  uint64_t v56 = v24[13];
  uint64_t v57 = &v17[v56];
  uint64_t v58 = &v23[v56];
  *uint64_t v57 = v23[v56];
  *(_OWORD *)(v57 + 8) = *(_OWORD *)&v23[v56 + 8];
  *((void *)v57 + 3) = *(void *)&v23[v56 + 24];
  v57[32] = v23[v56 + 32];
  *(_OWORD *)(v57 + 40) = *(_OWORD *)&v23[v56 + 40];
  *((void *)v57 + 7) = *(void *)&v23[v56 + 56];
  *((_WORD *)v57 + 32) = *(_WORD *)&v23[v56 + 64];
  uint64_t v59 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
  v38(&v57[*(int *)(v59 + 52)], &v58[*(int *)(v59 + 52)], v36);
  uint64_t v60 = v24[14];
  uint64_t v61 = &v17[v60];
  uint64_t v62 = &v23[v60];
  v135(&v17[v60], &v23[v60], v138);
  uint64_t v63 = (int *)type metadata accessor for TopicMagazineFeedGroupKnobs();
  v61[v63[5]] = v62[v63[5]];
  v61[v63[6]] = v62[v63[6]];
  v38(&v61[v63[7]], &v62[v63[7]], v36);
  uint64_t v64 = v24[15];
  uint64_t v65 = &v17[v64];
  uint64_t v66 = &v23[v64];
  v135(&v17[v64], &v23[v64], v138);
  uint64_t v67 = (int *)type metadata accessor for TrendingMagazineFeedGroupKnobs();
  *(void *)&v65[v67[5]] = *(void *)&v66[v67[5]];
  *(void *)&v65[v67[6]] = *(void *)&v66[v67[6]];
  v65[v67[7]] = v66[v67[7]];
  v38(&v65[v67[8]], &v66[v67[8]], v36);
  uint64_t v68 = v24[16];
  uint64_t v69 = &v17[v68];
  uint64_t v70 = &v23[v68];
  v135(&v17[v68], &v23[v68], v138);
  uint64_t v71 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  v69[v71[5]] = v70[v71[5]];
  v69[v71[6]] = v70[v71[6]];
  *(void *)&v69[v71[7]] = *(void *)&v70[v71[7]];
  v69[v71[8]] = v70[v71[8]];
  v69[v71[9]] = v70[v71[9]];
  v38(&v69[v71[10]], &v70[v71[10]], v36);
  uint64_t v72 = v24[17];
  long long v73 = &v17[v72];
  long long v74 = &v23[v72];
  v135(&v17[v72], &v23[v72], v138);
  uint64_t v75 = (int *)type metadata accessor for NewspaperMagazineFeedGroupKnobs();
  *(void *)&v73[v75[5]] = *(void *)&v74[v75[5]];
  *(void *)&v73[v75[6]] = *(void *)&v74[v75[6]];
  *(void *)&v73[v75[7]] = *(void *)&v74[v75[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v136 + 56))(v17, 0, 1, v24);
LABEL_7:
  *(void *)(v141 + v142[6]) = *(void *)(v143 + v142[6]);
  swift_release();
  uint64_t v77 = v142[7];
  uint64_t v78 = v141 + v77;
  uint64_t v79 = v143 + v77;
  __swift_destroy_boxed_opaque_existential_1(v141 + v77);
  long long v80 = *(_OWORD *)(v79 + 16);
  *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
  *(_OWORD *)(v78 + 16) = v80;
  *(void *)(v78 + 32) = *(void *)(v79 + 32);
  uint64_t v81 = v142[8];
  uint64_t v82 = *(void **)(v141 + v81);
  *(void *)(v141 + v81) = *(void *)(v143 + v81);

  uint64_t v83 = v142[9];
  uint64_t v84 = v141 + v83;
  uint64_t v85 = v143 + v83;
  __swift_destroy_boxed_opaque_existential_1(v141 + v83);
  long long v86 = *(_OWORD *)(v85 + 16);
  *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
  *(_OWORD *)(v84 + 16) = v86;
  *(void *)(v84 + 32) = *(void *)(v85 + 32);
  return v141;
}

uint64_t sub_1DEFDBD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFDBD30);
}

uint64_t sub_1DEFDBD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA84D04();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for MagazineTodayFeedGroupKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DEFDBE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFDBE58);
}

uint64_t sub_1DEFDBE58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA84D04();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for MagazineTodayFeedGroupKnobs();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DEFDBF68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v4 = type metadata accessor for MagazineTodayFeedGroupEmitter();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAF8630, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F270]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = *(void *)(sub_1DEFDC2B0() + 16);
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = __swift_project_boxed_opaque_existential_1((void *)(v3 + *(int *)(v4 + 28)), *(void *)(v3 + *(int *)(v4 + 28) + 24));
    unint64_t v16 = sub_1DEFDC2B0();
    uint64_t v29 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = v5;
    unint64_t v18 = v16;
    uint64_t v19 = *v15;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v19;
    *(void *)(v20 + 24) = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1DFDEE310();
    uint64_t v5 = v17;
    uint64_t v7 = v29;
    swift_bridgeObjectRelease();
    swift_release();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v30, v9);
  sub_1DEFE0154(v3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitter);
  unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v22 = (v11 + *(unsigned __int8 *)(v5 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v23 + v21, v13, v9);
  sub_1DEFE0CC0((uint64_t)v7, v23 + v22, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitter);
  sub_1DE9E0078(0, &qword_1EBAF8628, (uint64_t (*)(uint64_t))type metadata accessor for MagazineTodayFeedGroupEmitterCursor, MEMORY[0x1E4F7F150]);
  uint64_t v25 = v24;
  swift_allocObject();
  uint64_t result = sub_1DFDF6C30();
  uint64_t v27 = v31;
  v31[3] = v25;
  *uint64_t v27 = result;
  return result;
}

unint64_t sub_1DEFDC2B0()
{
  sub_1DEA51414(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DFDEE390();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)v37 - v8;
  uint64_t v9 = type metadata accessor for MyMagazinesMagazineFeedGroupConfigData();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA51204();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA84D04();
  sub_1DFDF73B0();
  unsigned __int8 v17 = v47;
  if (v47 == 255 || (v47 & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = v46;
  if (v46 >> 60 != 5)
  {
    uint64_t v31 = v46;
LABEL_18:
    sub_1DEA51398(v31, v17);
    return MEMORY[0x1E4FBC860];
  }
  int v42 = v47;
  uint64_t v19 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v19, v13);
  sub_1DEA511A8(v18, 1);
  uint64_t v41 = v18;
  sub_1DFDF73B0();
  uint64_t v20 = *(void *)&v11[*(int *)(v9 + 36)];
  swift_bridgeObjectRetain();
  sub_1DEA51588((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MyMagazinesMagazineFeedGroupConfigData);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v32 = v41;
    unsigned __int8 v33 = v42;
    sub_1DEA51398(v41, v42);
    uint64_t v31 = v32;
    unsigned __int8 v17 = v33;
    goto LABEL_18;
  }
  uint64_t v40 = v16;
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v38 = v14;
    uint64_t v39 = v13;
    unint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v44 = v4;
    uint64_t v23 = (void (**)(char *, char *, uint64_t))(v4 + 32);
    swift_bridgeObjectRetain();
    v37[1] = v20;
    uint64_t v24 = v20 + 40;
    unint64_t v25 = MEMORY[0x1E4FBC860];
    uint64_t v43 = v7;
    do
    {
      swift_bridgeObjectRetain();
      sub_1DFDEE360();
      if ((*v22)(v2, 1, v3) == 1)
      {
        sub_1DEA51588((uint64_t)v2, (uint64_t (*)(void))sub_1DEA51414);
      }
      else
      {
        uint64_t v26 = *v23;
        uint64_t v27 = v45;
        (*v23)(v45, v2, v3);
        v26(v7, v27, v3);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v25 = sub_1DEA51674(0, *(void *)(v25 + 16) + 1, 1, v25);
        }
        unint64_t v29 = *(void *)(v25 + 16);
        unint64_t v28 = *(void *)(v25 + 24);
        if (v29 >= v28 >> 1) {
          unint64_t v25 = sub_1DEA51674(v28 > 1, v29 + 1, 1, v25);
        }
        *(void *)(v25 + 16) = v29 + 1;
        unint64_t v30 = v25
            + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))
            + *(void *)(v44 + 72) * v29;
        uint64_t v7 = v43;
        v26((char *)v30, v43, v3);
      }
      v24 += 16;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    uint64_t v14 = v38;
    uint64_t v13 = v39;
  }
  else
  {
    unint64_t v25 = MEMORY[0x1E4FBC860];
  }
  uint64_t v35 = v41;
  unsigned __int8 v36 = v42;
  sub_1DEA51398(v41, v42);
  sub_1DEA51398(v35, v36);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v40, v13);
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1DEFDC768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagazineTodayFeedGroupEmitter();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAF8630, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F270]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v21 - v11;
  sub_1DE9E0078(0, (unint64_t *)&qword_1EBAEA400, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = sub_1DFDFE4B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  sub_1DEFE0154(a2, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitter);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (v10 + *(unsigned __int8 *)(v5 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v17, v12, v8);
  sub_1DEFE0CC0((uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitter);
  return sub_1DF28C854((uint64_t)v15, (uint64_t)&unk_1EAC274F0, v19);
}

uint64_t sub_1DEFDCA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  v5[8] = a1;
  sub_1DEABF8F4();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DEFDCB28, 0, 0);
}

uint64_t sub_1DEFDCB28()
{
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAF8630, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F270]);
  sub_1DFDF7080();
  swift_retain();
  swift_release();
  sub_1DFDEDB90();
  swift_release();
  v0[14] = v0[6];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DEFDCCC0;
  return MEMORY[0x1F415EBC8](v0 + 4);
}

uint64_t sub_1DEFDCCC0()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DEFDCF5C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1DEFDCDDC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DEFDCDDC()
{
  uint64_t v1 = (const char **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  sub_1DEA84D04();
  sub_1DFDF73B0();
  int v3 = *(unsigned __int8 *)(v0 + 24);
  if (v3 == 255)
  {
    swift_retain();
    uint64_t v5 = v2;
  }
  else
  {
    uint64_t v4 = *v1;
    uint64_t v5 = sub_1DF533704(v2, *v1, v3 & 1);
    sub_1DEA51398((uint64_t)v4, v3);
  }
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 64);
  *(void *)(v0 + 56) = v5;
  type metadata accessor for MagazineFeedServiceConfig();
  sub_1DEA95ABC();
  sub_1DFDFA110();
  swift_release();
  swift_release();
  uint64_t v11 = type metadata accessor for MagazineTodayFeedGroupEmitter();
  uint64_t v12 = *(void **)(v9 + *(int *)(v11 + 32));
  uint64_t v13 = v9 + *(int *)(v11 + 36);
  uint64_t v14 = type metadata accessor for MagazineTodayFeedGroupEmitterCursor();
  sub_1DE94F204(v13, v10 + *(int *)(v14 + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v6, v8);
  *(void *)(v10 + *(int *)(v14 + 20)) = v12;
  id v15 = v12;
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1DEFDCF5C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEFDCFC8()
{
  type metadata accessor for MagazineTodayFeedGroupEmitter();
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  uint64_t v0 = sub_1DFDF8030();
  sub_1DEFE171C();
  sub_1DEA81E6C(0, (unint64_t *)&qword_1EBABA150, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F0]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE0B250;
  uint64_t v6 = (uint64_t *)(v5 + v4);
  uint64_t v7 = swift_allocObject();
  sub_1DEA81E6C(0, &qword_1EBABA270, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7FE90]);
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  swift_allocObject();
  *uint64_t v6 = sub_1DFDF9140();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4F7F8E8], v2);
  sub_1DF3DDFF0(v5);
  return v0;
}

uint64_t sub_1DEFDD238(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  void v3[3] = a1;
  type metadata accessor for MagazineTodayFeedGroupEmitterCursor();
  v3[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DEFDD2CC, 0, 0);
}

uint64_t sub_1DEFDD2CC()
{
  sub_1DE9E0078(0, &qword_1EBAF8628, (uint64_t (*)(uint64_t))type metadata accessor for MagazineTodayFeedGroupEmitterCursor, MEMORY[0x1E4F7F150]);
  sub_1DFDF87A0();
  v0[7] = v0[2];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DEFDD408;
  uint64_t v2 = v0[6];
  return MEMORY[0x1F41347D8](v2);
}

uint64_t sub_1DEFDD408()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1DEFDD730, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[10] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_1DEFDD57C;
    uint64_t v4 = v2[6];
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    return sub_1DEFDD808(v5, v6, v4);
  }
}

uint64_t sub_1DEFDD57C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  sub_1DEA51588(*(void *)(v2 + 48), (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
  if (v0) {
    uint64_t v3 = sub_1DEFDD79C;
  }
  else {
    uint64_t v3 = sub_1DEFDD6C4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1DEFDD6C4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEFDD730()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEFDD79C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEFDD808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  type metadata accessor for MagazineFeedGroup();
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MagazineTodayFeedGroupEmitterCursor();
  v4[9] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[10] = v6;
  v4[11] = *(void *)(v6 + 64);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  sub_1DEABF8F4();
  v4[14] = v7;
  v4[15] = *(void *)(v7 - 8);
  v4[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DEFDD97C, 0, 0);
}

uint64_t sub_1DEFDD97C()
{
  uint64_t v1 = v0;
  uint64_t v19 = v0 + 2;
  uint64_t v4 = v0 + 15;
  uint64_t v3 = v0[15];
  uint64_t v2 = (uint64_t *)v4[1];
  uint64_t v6 = v1[13];
  uint64_t v5 = v1[14];
  uint64_t v7 = v1[10];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[4];
  v1[17] = type metadata accessor for MagazineTodayFeedGroupEmitter();
  sub_1DEFE0334(0, &qword_1EBAE9C38, (void (*)(uint64_t))sub_1DEABF8F4, (void (*)(uint64_t))sub_1DEDDB2BC);
  uint64_t v11 = v10;
  uint64_t v12 = swift_allocBox();
  uint64_t v14 = (uint64_t (**)(uint64_t))(v13 + *(int *)(v11 + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v13, v8, v5);
  sub_1DEFE0154(v8, v6, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v9;
  sub_1DEFE0CC0(v6, v16 + v15, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
  char *v14 = sub_1DEFE02C0;
  v14[1] = (uint64_t (*)(uint64_t))v16;
  *uint64_t v2 = v12;
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4F80588], v5);
  swift_retain();
  v1[18] = sub_1DFDF9E90();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v2, v5);
  unint64_t v17 = (void *)swift_task_alloc();
  v1[19] = v17;
  *unint64_t v17 = v1;
  v17[1] = sub_1DEFDDBC4;
  return MEMORY[0x1F415EBC8](v19);
}

uint64_t sub_1DEFDDBC4()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DEFDF570;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1DEFDDCE0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DEFDDCE0()
{
  unint64_t v1 = v0[2];
  v0[21] = v1;
  switch(v1 >> 61)
  {
    case 1uLL:
      uint64_t v24 = (void *)v0[3];
      unint64_t v25 = "Got next groups from the magazine feed service which is not expected";
      goto LABEL_22;
    case 2uLL:
      uint64_t v26 = v0[7];
      sub_1DEFE04C4(0, (unint64_t *)&qword_1EBAD57D8, (void (*)(uint64_t))type metadata accessor for MagazineFeedGroup, sub_1DEFE045C);
      uint64_t v28 = v27;
      uint64_t v29 = swift_projectBox();
      uint64_t v30 = *(void *)(v29 + *(int *)(v28 + 48));
      sub_1DEFE0154(v29, v26, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      swift_retain();
      uint64_t v31 = sub_1DFDF87B0();
      uint64_t v32 = *(void *)(v31 + 16);
      uint64_t v134 = v30;
      if (v32)
      {
        sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAB9EF0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F400]);
        unint64_t v34 = v31
            + ((*(unsigned __int8 *)(*(void *)(v33 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v33 - 8) + 80));
        uint64_t v35 = *(void *)(*(void *)(v33 - 8) + 72);
        while (1)
        {
          uint64_t v36 = sub_1DFDF72D0();
          uint64_t v38 = v37;
          if (v36 == sub_1DEA9F190() && v38 == v39) {
            break;
          }
          char v41 = sub_1DFDFFF50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v41) {
            goto LABEL_46;
          }
          v34 += v35;
          if (!--v32)
          {
            swift_bridgeObjectRelease();
            uint64_t v30 = v134;
            goto LABEL_34;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_46:
        uint64_t v73 = v0[7];
        long long v74 = (unint64_t *)v0[3];
        swift_bridgeObjectRelease();
        sub_1DEFE0334(0, &qword_1EBAE99F0, sub_1DEFE03BC, (void (*)(uint64_t))sub_1DEFE0404);
        uint64_t v76 = (unint64_t *)((char *)v74 + *(int *)(v75 + 48));
        unint64_t v77 = 0xD000000000000038;
        uint64_t v78 = "Last magazine group for today already seen in downstream";
LABEL_63:
        *long long v74 = v77;
        v74[1] = (unint64_t)(v78 - 32) | 0x8000000000000000;
        uint64_t v112 = *MEMORY[0x1E4F800E0];
        sub_1DEFE03BC(0);
        (*(void (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v113 - 8) + 104))(v74, v112, v113);
        sub_1DEFE045C(0);
        v76[3] = v114;
        v76[4] = sub_1DEA4AFB4(&qword_1EBAE9580, sub_1DEFE045C);
        *uint64_t v76 = v134;
        goto LABEL_67;
      }
      swift_bridgeObjectRelease();
LABEL_34:
      uint64_t v60 = sub_1DFDF87E0();
      uint64_t v61 = *(void *)(v60 + 16);
      if (!v61)
      {
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
      sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAB9EF0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F400]);
      unint64_t v63 = v60
          + ((*(unsigned __int8 *)(*(void *)(v62 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v62 - 8) + 80));
      uint64_t v64 = *(void *)(*(void *)(v62 - 8) + 72);
      do
      {
        uint64_t v65 = sub_1DFDF72D0();
        uint64_t v67 = v66;
        if (v65 == sub_1DEA9F190() && v67 == v68)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_62:
          uint64_t v73 = v0[7];
          long long v74 = (unint64_t *)v0[3];
          swift_bridgeObjectRelease();
          sub_1DEFE0334(0, &qword_1EBAE99F0, sub_1DEFE03BC, (void (*)(uint64_t))sub_1DEFE0404);
          uint64_t v76 = (unint64_t *)((char *)v74 + *(int *)(v111 + 48));
          unint64_t v77 = 0xD000000000000036;
          uint64_t v78 = "Last magazine group for today already seen in upstream";
          goto LABEL_63;
        }
        char v70 = sub_1DFDFFF50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v70) {
          goto LABEL_62;
        }
        v63 += v64;
        --v61;
      }
      while (v61);
      swift_bridgeObjectRelease();
      uint64_t v30 = v134;
LABEL_50:
      uint64_t v83 = v0[7];
      unint64_t v84 = sub_1DFDF8810();
      uint64_t v85 = swift_task_alloc();
      *(void *)(v85 + 16) = v83;
      char v86 = sub_1DEB46D48((uint64_t (*)(uint64_t *))sub_1DEFE17F0, v85, v84);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v87 = v0[7];
      if (v86)
      {
        uint64_t v88 = (void *)v0[3];
        sub_1DEFE0334(0, &qword_1EBAE99F0, sub_1DEFE03BC, (void (*)(uint64_t))sub_1DEFE0404);
        uint64_t v90 = (void *)((char *)v88 + *(int *)(v89 + 48));
        *uint64_t v88 = 0xD000000000000041;
        v88[1] = 0x80000001DFED9CF0;
        uint64_t v91 = *MEMORY[0x1E4F800E0];
        sub_1DEFE03BC(0);
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v88, v91, v92);
        sub_1DEFE045C(0);
        v90[3] = v93;
        v90[4] = sub_1DEA4AFB4(&qword_1EBAE9580, sub_1DEFE045C);
        *uint64_t v90 = v30;
        uint64_t v94 = v87;
        goto LABEL_68;
      }
      uint64_t v99 = v0[3];
      unint64_t v100 = sub_1DFDF8830();
      uint64_t v101 = swift_task_alloc();
      *(void *)(v101 + 16) = v87;
      char v102 = sub_1DEB46D48((uint64_t (*)(uint64_t *))sub_1DEFE17F0, v101, v100);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      sub_1DEFE0334(0, &qword_1EBAE99F0, sub_1DEFE03BC, (void (*)(uint64_t))sub_1DEFE0404);
      uint64_t v104 = (void *)(v99 + *(int *)(v103 + 48));
      uint64_t v73 = v0[7];
      uint64_t v105 = (void *)v0[3];
      if (v102)
      {
        *uint64_t v105 = 0xD00000000000003FLL;
        v105[1] = 0x80000001DFED9CB0;
        uint64_t v106 = (unsigned int *)MEMORY[0x1E4F800E0];
      }
      else
      {
        sub_1DEFE0154(v0[7], v0[3], (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
        type metadata accessor for TodayFeedGroup();
        swift_storeEnumTagMultiPayload();
        uint64_t v106 = (unsigned int *)MEMORY[0x1E4F800D0];
      }
      uint64_t v129 = *v106;
      sub_1DEFE03BC(0);
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v130 - 8) + 104))(v105, v129, v130);
      sub_1DEFE045C(0);
      v104[3] = v131;
      v104[4] = sub_1DEA4AFB4(&qword_1EBAE9580, sub_1DEFE045C);
      *uint64_t v104 = v30;
LABEL_67:
      uint64_t v94 = v73;
LABEL_68:
      sub_1DEA51588(v94, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      sub_1DEA81E6C(0, (unint64_t *)&qword_1EBABA1B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F7FA98]);
LABEL_69:
      swift_storeEnumTagMultiPayload();
LABEL_70:
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v132 = (uint64_t (*)(void))v0[1];
      return v132();
    case 3uLL:
      uint64_t v24 = (void *)v0[3];
      unint64_t v25 = "Got last groups from the magazine feed service which is not expected";
LABEL_22:
      *uint64_t v24 = 0xD000000000000044;
      v24[1] = (unint64_t)(v25 - 32) | 0x8000000000000000;
      sub_1DEA81E6C(0, (unint64_t *)&qword_1EBABA1B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F7FA98]);
      goto LABEL_69;
    case 4uLL:
      int v42 = (void *)v0[3];
      uint64_t v43 = *(void *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1DEFE0334(0, &qword_1EBAE99F0, sub_1DEFE03BC, (void (*)(uint64_t))sub_1DEFE0404);
      uint64_t v45 = (void *)((char *)v42 + *(int *)(v44 + 48));
      *int v42 = 0xD000000000000036;
      v42[1] = 0x80000001DFED9BD0;
      uint64_t v46 = *MEMORY[0x1E4F800E0];
      sub_1DEFE03BC(0);
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v42, v46, v47);
      sub_1DEFE045C(0);
      v45[3] = v48;
      v45[4] = sub_1DEA4AFB4(&qword_1EBAE9580, sub_1DEFE045C);
      *uint64_t v45 = v43;
      sub_1DEA81E6C(0, (unint64_t *)&qword_1EBABA1B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F7FA98]);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      goto LABEL_70;
    default:
      uint64_t v2 = v0[17];
      uint64_t v3 = v0[12];
      uint64_t v5 = v0[8];
      uint64_t v4 = v0[9];
      uint64_t v6 = v0[6];
      sub_1DEFE04C4(0, (unint64_t *)&qword_1EBAD57D8, (void (*)(uint64_t))type metadata accessor for MagazineFeedGroup, sub_1DEFE045C);
      uint64_t v8 = v7;
      uint64_t v9 = swift_projectBox();
      uint64_t v10 = *(void *)(v9 + *(int *)(v8 + 48));
      v0[22] = v10;
      sub_1DEFE0154(v9, v5, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      type metadata accessor for MagazineFeedServiceConfig();
      sub_1DEA95ABC();
      swift_retain();
      uint64_t v133 = v10;
      sub_1DFDFA150();
      uint64_t v11 = *(void **)(v6 + *(int *)(v2 + 32));
      sub_1DE94F204(v6 + *(int *)(v2 + 36), v3 + *(int *)(v4 + 24));
      *(void *)(v3 + *(int *)(v4 + 20)) = v11;
      id v12 = v11;
      uint64_t v13 = sub_1DFDF87B0();
      uint64_t v14 = *(void *)(v13 + 16);
      if (!v14) {
        goto LABEL_24;
      }
      sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAB9EF0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F400]);
      unint64_t v16 = v13
          + ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80));
      uint64_t v17 = *(void *)(*(void *)(v15 - 8) + 72);
      while (1)
      {
        uint64_t v18 = sub_1DFDF72D0();
        uint64_t v20 = v19;
        if (v18 == sub_1DEA9F190() && v20 == v21) {
          break;
        }
        char v23 = sub_1DFDFFF50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v23) {
          goto LABEL_44;
        }
        v16 += v17;
        if (!--v14)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          uint64_t v49 = sub_1DFDF87E0();
          uint64_t v50 = *(void *)(v49 + 16);
          if (v50)
          {
            sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAB9EF0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F400]);
            unint64_t v52 = v49
                + ((*(unsigned __int8 *)(*(void *)(v51 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v51 - 8) + 80));
            uint64_t v53 = *(void *)(*(void *)(v51 - 8) + 72);
            while (1)
            {
              uint64_t v54 = sub_1DFDF72D0();
              uint64_t v56 = v55;
              if (v54 == sub_1DEA9F190() && v56 == v57) {
                break;
              }
              char v59 = sub_1DFDFFF50();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v59) {
                goto LABEL_57;
              }
              v52 += v53;
              if (!--v50) {
                goto LABEL_47;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_57:
            swift_bridgeObjectRelease();
            uint64_t v71 = (void *)swift_task_alloc();
            v0[25] = v71;
            *uint64_t v71 = v0;
            uint64_t v72 = sub_1DEFDF13C;
          }
          else
          {
LABEL_47:
            swift_bridgeObjectRelease();
            uint64_t v79 = v0[8];
            unint64_t v80 = sub_1DFDF8810();
            uint64_t v81 = swift_task_alloc();
            *(void *)(v81 + 16) = v79;
            char v82 = sub_1DEB46D48((uint64_t (*)(uint64_t *))sub_1DEFE04A4, v81, v80);
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            if (v82)
            {
              uint64_t v71 = (void *)swift_task_alloc();
              v0[29] = v71;
              *uint64_t v71 = v0;
              uint64_t v72 = sub_1DEFDF364;
            }
            else
            {
              uint64_t v95 = v0[8];
              unint64_t v96 = sub_1DFDF8830();
              uint64_t v97 = swift_task_alloc();
              *(void *)(v97 + 16) = v95;
              char v98 = sub_1DEB46D48((uint64_t (*)(uint64_t *))sub_1DEFE17F0, v97, v96);
              swift_bridgeObjectRelease();
              swift_task_dealloc();
              if ((v98 & 1) == 0)
              {
                uint64_t v116 = v0[12];
                uint64_t v115 = v0[13];
                uint64_t v117 = v0[8];
                uint64_t v118 = v0[3];
                sub_1DEFE0334(0, &qword_1EBAE99F0, sub_1DEFE03BC, (void (*)(uint64_t))sub_1DEFE0404);
                uint64_t v120 = (void *)(v118 + *(int *)(v119 + 48));
                sub_1DEFE04C4(0, (unint64_t *)&qword_1EBAAB000, (void (*)(uint64_t))type metadata accessor for TodayFeedGroup, (void (*)(uint64_t))sub_1DE9E4C7C);
                uint64_t v122 = (uint64_t *)(v118 + *(int *)(v121 + 48));
                sub_1DEFE0154(v117, v118, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
                type metadata accessor for TodayFeedGroup();
                swift_storeEnumTagMultiPayload();
                sub_1DEFE0154(v116, v115, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
                sub_1DE9E0078(0, &qword_1EBAF8628, (uint64_t (*)(uint64_t))type metadata accessor for MagazineTodayFeedGroupEmitterCursor, MEMORY[0x1E4F7F150]);
                uint64_t v124 = v123;
                swift_allocObject();
                uint64_t v125 = sub_1DFDF6C40();
                v122[3] = v124;
                uint64_t *v122 = v125;
                uint64_t v126 = *MEMORY[0x1E4F800D8];
                sub_1DEFE03BC(0);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 104))(v118, v126, v127);
                sub_1DEFE045C(0);
                v120[3] = v128;
                v120[4] = sub_1DEA4AFB4(&qword_1EBAE9580, sub_1DEFE045C);
                *uint64_t v120 = v133;
                sub_1DEA51588(v116, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
                sub_1DEA51588(v117, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
                sub_1DEA81E6C(0, (unint64_t *)&qword_1EBABA1B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F7FA98]);
                swift_storeEnumTagMultiPayload();
                goto LABEL_70;
              }
              uint64_t v71 = (void *)swift_task_alloc();
              v0[27] = v71;
              *uint64_t v71 = v0;
              uint64_t v72 = sub_1DEFDF250;
            }
          }
          goto LABEL_58;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_44:
      swift_bridgeObjectRelease();
      uint64_t v71 = (void *)swift_task_alloc();
      v0[23] = v71;
      *uint64_t v71 = v0;
      uint64_t v72 = sub_1DEFDF028;
LABEL_58:
      v71[1] = v72;
      uint64_t v107 = v0[12];
      uint64_t v108 = v0[3];
      uint64_t v109 = v0[4];
      return sub_1DEFDD808(v108, v109, v107);
  }
}

uint64_t sub_1DEFDF028()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1DEFDF614;
  }
  else {
    uint64_t v2 = sub_1DEFDF478;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DEFDF13C()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1DEFDF708;
  }
  else {
    uint64_t v2 = sub_1DEFE180C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DEFDF250()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1DEFDF8F0;
  }
  else {
    uint64_t v2 = sub_1DEFE180C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DEFDF364()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1DEFDF7FC;
  }
  else {
    uint64_t v2 = sub_1DEFE180C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DEFDF478()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  swift_release();
  sub_1DEA51588(v1, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
  sub_1DEA51588(v2, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DEFDF570()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEFDF614()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  swift_release();
  sub_1DEA51588(v1, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
  sub_1DEA51588(v2, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DEFDF708()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  swift_release();
  sub_1DEA51588(v1, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
  sub_1DEA51588(v2, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DEFDF7FC()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  swift_release();
  sub_1DEA51588(v1, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
  sub_1DEA51588(v2, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DEFDF8F0()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  swift_release();
  sub_1DEA51588(v1, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupEmitterCursor);
  sub_1DEA51588(v2, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DEFDF9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  void v3[3] = a1;
  sub_1DEAE1B58(0);
  v3[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TodayFeedGroup();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DEFDFAD4, 0, 0);
}

uint64_t sub_1DEFDFAD4()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  sub_1DEF1D768();
  uint64_t v5 = v4;
  sub_1DFDF92B0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DEA51588(v0[6], (uint64_t (*)(void))sub_1DEAE1B58);
  }
  else
  {
    sub_1DEFE0CC0(v0[6], v0[9], (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    sub_1DFDF88A0();
    uint64_t v8 = v0[9];
    char v10 = sub_1DEB617C8(v0[2]);
    swift_release();
    sub_1DEA51588(v8, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    if (v10)
    {
      sub_1DEFE0154(v0[5], v0[3], (uint64_t (*)(void))sub_1DEF1D768);
      uint64_t v6 = 0;
      goto LABEL_4;
    }
  }
  uint64_t v6 = 1;
LABEL_4:
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v0[3], v6, 1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1DEFDFCC8()
{
  uint64_t v0 = sub_1DFDF7A40();
  uint64_t v2 = v1;
  if (v0 == sub_1DEA9F190() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1DFDFFF50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1DEFDFD68(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_1DEB7BED8;
  return sub_1DEFDD238(a1, a2);
}

uint64_t sub_1DEFDFE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1DEB7BAE0;
  return sub_1DEFDF9E4(a1, a2, a3);
}

uint64_t sub_1DEFDFEC4@<X0>(uint64_t a1@<X8>)
{
  sub_1DEA84D04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
  type metadata accessor for TodayFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DEFDFF44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for MagazineTodayFeedGroupKnobs();
  a2[4] = sub_1DEA4AFB4(&qword_1EBAB2D10, (void (*)(uint64_t))type metadata accessor for MagazineTodayFeedGroupKnobs);
  a2[5] = sub_1DEA4AFB4(&qword_1EBAA5310, (void (*)(uint64_t))type metadata accessor for MagazineTodayFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DEFE0154(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for MagazineTodayFeedGroupKnobs);
}

uint64_t sub_1DEFE0010()
{
  sub_1DEA4AFB4(&qword_1EBADFE80, (void (*)(uint64_t))type metadata accessor for MagazineTodayFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DEFE007C()
{
  return sub_1DEA4AFB4(&qword_1EBADFE78, (void (*)(uint64_t))type metadata accessor for MagazineTodayFeedGroupEmitter);
}

uint64_t sub_1DEFE00C4()
{
  return sub_1DEA4AFB4(&qword_1EBADFE80, (void (*)(uint64_t))type metadata accessor for MagazineTodayFeedGroupEmitter);
}

uint64_t sub_1DEFE010C()
{
  return sub_1DEA4AFB4(&qword_1EBAF81A0, (void (*)(uint64_t))type metadata accessor for MagazineTodayFeedGroupEmitter);
}

uint64_t sub_1DEFE0154(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEFE01BC()
{
  uint64_t v1 = (int *)(type metadata accessor for MagazineTodayFeedGroupEmitterCursor() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  sub_1DEABF8F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  __swift_destroy_boxed_opaque_existential_1(v3 + v1[8]);
  return swift_deallocObject();
}

uint64_t sub_1DEFE02C0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MagazineTodayFeedGroupEmitterCursor() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DF8132C8(a1, v4, v5);
}

void sub_1DEFE0334(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1DEFE03BC(uint64_t a1)
{
}

unint64_t sub_1DEFE0404()
{
  unint64_t result = qword_1EBAE9678;
  if (!qword_1EBAE9678)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAE9678);
  }
  return result;
}

void sub_1DEFE045C(uint64_t a1)
{
}

uint64_t sub_1DEFE04A4()
{
  return sub_1DEFDFCC8() & 1;
}

void sub_1DEFE04C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1DEFE0540()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEFE0580()
{
  uint64_t v1 = v0;
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAF8630, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F270]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = (int *)type metadata accessor for MagazineTodayFeedGroupEmitter();
  uint64_t v44 = *(unsigned __int8 *)(*((void *)v7 - 1) + 80);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v1 + v5, v3);
  uint64_t v8 = v1 + ((v5 + v6 + v44) & ~v44);
  sub_1DEA84D04();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v8 + v7[5];
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = type metadata accessor for MagazineTodayFeedGroupKnobs();
  uint64_t v13 = v10 + *(int *)(v12 + 20);
  sub_1DEA81E6C(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v10 + *(int *)(v12 + 24);
  unint64_t v16 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v16 - 1) + 48))(v15, 1, v16))
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = v15 + v16[6];
    sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
    uint64_t v19 = v18;
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
    v20(v17, v18);
    uint64_t v43 = v7;
    uint64_t v21 = type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v22 = v17 + *(int *)(v21 + 44);
    sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
    uint64_t v24 = v23;
    unint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);
    v25(v22, v23);
    uint64_t v26 = v15 + v16[7];
    v20(v26, v19);
    uint64_t v27 = type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v25(v26 + *(int *)(v27 + 44), v24);
    uint64_t v28 = v15 + v16[8];
    v20(v28, v19);
    uint64_t v29 = type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v25(v28 + *(int *)(v29 + 44), v24);
    v20(v15 + v16[9], v19);
    uint64_t v30 = v15 + v16[10];
    v20(v30, v19);
    uint64_t v31 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
    swift_release();
    v25(v30 + *(int *)(v31 + 24), v24);
    uint64_t v32 = v15 + v16[11];
    v20(v32, v19);
    uint64_t v33 = type metadata accessor for NewIssueMagazineFeedGroupKnobs();
    v25(v32 + *(int *)(v33 + 32), v24);
    v20(v15 + v16[12], v19);
    uint64_t v34 = v16[13];
    uint64_t v35 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
    v25(v15 + v34 + *(int *)(v35 + 52), v24);
    uint64_t v36 = v15 + v16[14];
    v20(v36, v19);
    uint64_t v37 = type metadata accessor for TopicMagazineFeedGroupKnobs();
    v25(v36 + *(int *)(v37 + 28), v24);
    uint64_t v38 = v15 + v16[15];
    v20(v38, v19);
    uint64_t v39 = type metadata accessor for TrendingMagazineFeedGroupKnobs();
    v25(v38 + *(int *)(v39 + 32), v24);
    uint64_t v40 = v15 + v16[16];
    v20(v40, v19);
    uint64_t v41 = type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
    v25(v40 + *(int *)(v41 + 40), v24);
    uint64_t v7 = v43;
    v20(v15 + v16[17], v19);
    type metadata accessor for NewspaperMagazineFeedGroupKnobs();
    swift_bridgeObjectRelease();
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v8 + v7[7]);

  __swift_destroy_boxed_opaque_existential_1(v8 + v7[9]);
  return swift_deallocObject();
}

uint64_t sub_1DEFE0CC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEFE0D28()
{
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAF8630, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F270]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(type metadata accessor for MagazineTodayFeedGroupEmitter() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_1DEFDC768(v0 + v2, v5);
}

uint64_t sub_1DEFE0E38()
{
  uint64_t v1 = v0;
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAF8630, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F270]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = (int *)type metadata accessor for MagazineTodayFeedGroupEmitter();
  uint64_t v44 = *(unsigned __int8 *)(*((void *)v7 - 1) + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v1 + v5, v3);
  uint64_t v8 = v1 + ((v5 + v6 + v44) & ~v44);
  sub_1DEA84D04();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v8 + v7[5];
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = type metadata accessor for MagazineTodayFeedGroupKnobs();
  uint64_t v13 = v10 + *(int *)(v12 + 20);
  sub_1DEA81E6C(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v10 + *(int *)(v12 + 24);
  unint64_t v16 = (int *)type metadata accessor for MagazineFeedGroupKnobs();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v16 - 1) + 48))(v15, 1, v16))
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = v15 + v16[6];
    sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
    uint64_t v19 = v18;
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
    v20(v17, v18);
    uint64_t v43 = v7;
    uint64_t v21 = type metadata accessor for FeaturedArticleMagazineFeedGroupKnobs();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v22 = v17 + *(int *)(v21 + 44);
    sub_1DEA81E6C(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
    uint64_t v24 = v23;
    unint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);
    v25(v22, v23);
    uint64_t v26 = v15 + v16[7];
    v20(v26, v19);
    uint64_t v27 = type metadata accessor for FeaturedIssueArticleMagazineFeedGroupKnobs();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v25(v26 + *(int *)(v27 + 44), v24);
    uint64_t v28 = v15 + v16[8];
    v20(v28, v19);
    uint64_t v29 = type metadata accessor for FeaturedIssueMagazineFeedGroupKnobs();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v25(v28 + *(int *)(v29 + 44), v24);
    v20(v15 + v16[9], v19);
    uint64_t v30 = v15 + v16[10];
    v20(v30, v19);
    uint64_t v31 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
    swift_release();
    v25(v30 + *(int *)(v31 + 24), v24);
    uint64_t v32 = v15 + v16[11];
    v20(v32, v19);
    uint64_t v33 = type metadata accessor for NewIssueMagazineFeedGroupKnobs();
    v25(v32 + *(int *)(v33 + 32), v24);
    v20(v15 + v16[12], v19);
    uint64_t v34 = v16[13];
    uint64_t v35 = type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
    v25(v15 + v34 + *(int *)(v35 + 52), v24);
    uint64_t v36 = v15 + v16[14];
    v20(v36, v19);
    uint64_t v37 = type metadata accessor for TopicMagazineFeedGroupKnobs();
    v25(v36 + *(int *)(v37 + 28), v24);
    uint64_t v38 = v15 + v16[15];
    v20(v38, v19);
    uint64_t v39 = type metadata accessor for TrendingMagazineFeedGroupKnobs();
    v25(v38 + *(int *)(v39 + 32), v24);
    uint64_t v40 = v15 + v16[16];
    v20(v40, v19);
    uint64_t v41 = type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
    v25(v40 + *(int *)(v41 + 40), v24);
    uint64_t v7 = v43;
    v20(v15 + v16[17], v19);
    type metadata accessor for NewspaperMagazineFeedGroupKnobs();
    swift_bridgeObjectRelease();
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v8 + v7[7]);

  __swift_destroy_boxed_opaque_existential_1(v8 + v7[9]);
  return swift_deallocObject();
}

uint64_t sub_1DEFE1580(uint64_t a1)
{
  uint64_t v3 = v2;
  sub_1DEA81E6C(0, (unint64_t *)&unk_1EBAF8630, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F270]);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MagazineTodayFeedGroupEmitter() - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = v1 + (v9 & ~v8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  void *v14 = v3;
  v14[1] = sub_1DEB7BAE0;
  return sub_1DEFDCA64(a1, v10, v11, v12, v13);
}

void sub_1DEFE171C()
{
  if (!qword_1EBABB670)
  {
    sub_1DEA81E6C(255, (unint64_t *)&qword_1EBABA150, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F0]);
    unint64_t v0 = sub_1DFDFFEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABB670);
    }
  }
}

uint64_t sub_1DEFE17B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEFE17F0()
{
  return sub_1DEFE04A4() & 1;
}

uint64_t sub_1DEFE1810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFE1824);
}

uint64_t sub_1DEFE1824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF7010();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DEFE18D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFE18E8);
}

uint64_t sub_1DEFE18E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDF7010();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ArticleListSharedWithYouFeedGroup()
{
  uint64_t result = qword_1EAC274F8;
  if (!qword_1EAC274F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFE19DC()
{
  uint64_t result = sub_1DFDF7010();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DEFE1A84()
{
  unint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ArticleListSharedWithYouFeedGroup() + 24));
  if (v1 >> 62)
  {
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DFDFFBD0();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1DFDFFF80();
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
    if (!swift_dynamicCastMetatype())
    {
      uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4)
      {
        uint64_t v5 = v2 + 32;
        while (swift_dynamicCastObjCProtocolConditional())
        {
          v5 += 8;
          if (!--v4) {
            return v1;
          }
        }
        return v2 | 1;
      }
    }
    return v1;
  }
}

uint64_t sub_1DEFE1BA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEFE1BBC(a1, a2);
}

uint64_t sub_1DEFE1BBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  sub_1DEECCE84();
  uint64_t v28 = v3;
  uint64_t v26 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDF7010();
  uint64_t v31 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFE2790(0, &qword_1EAC27540, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = v8;
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = type metadata accessor for ArticleListSharedWithYouFeedGroup();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFE267C();
  uint64_t v32 = v10;
  uint64_t v14 = v34;
  sub_1DFE00190();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v30;
  uint64_t v15 = v31;
  unint64_t v25 = v13;
  char v38 = 0;
  uint64_t v17 = sub_1DFDFFD50();
  uint64_t v18 = v25;
  uint64_t *v25 = v17;
  v18[1] = v19;
  char v37 = 1;
  sub_1DEFE2504(&qword_1EBACA150, MEMORY[0x1E4F7F240]);
  sub_1DFDFFD90();
  uint64_t v34 = v11;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v25 + *(int *)(v11 + 20), v7, v5);
  char v36 = 2;
  sub_1DEFE2504((unint64_t *)&unk_1EBAA39E8, (void (*)(uint64_t))sub_1DEECCE84);
  uint64_t v20 = v28;
  uint64_t v21 = v29;
  sub_1DFDFFD90();
  sub_1DFDEE210();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v20);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v32, v33);
  uint64_t v22 = (uint64_t)v25;
  *(uint64_t *)((char *)v25 + *(int *)(v34 + 24)) = v35;
  sub_1DEFE26D0(v22, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DEFE2734(v22);
}

uint64_t sub_1DEFE204C(void *a1)
{
  return sub_1DEFE2064(a1);
}

uint64_t sub_1DEFE2064(void *a1)
{
  uint64_t v2 = v1;
  sub_1DEECCE84();
  uint64_t v5 = v4;
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFE2790(0, (unint64_t *)&unk_1EAC27550, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v17 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFE267C();
  sub_1DFE001A0();
  char v23 = 0;
  uint64_t v13 = v19;
  sub_1DFDFFE40();
  if (!v13)
  {
    uint64_t v19 = v10;
    uint64_t v17 = v7;
    uint64_t v15 = type metadata accessor for ArticleListSharedWithYouFeedGroup();
    char v22 = 1;
    sub_1DFDF7010();
    sub_1DEFE2504((unint64_t *)&unk_1EBACA140, MEMORY[0x1E4F7F240]);
    sub_1DFDFFE80();
    uint64_t v20 = *(void *)(v2 + *(int *)(v15 + 24));
    sub_1DEBFF55C();
    sub_1DEFE2504((unint64_t *)&qword_1EBABA9B0, (void (*)(uint64_t))sub_1DEBFF55C);
    swift_bridgeObjectRetain();
    uint64_t v16 = v17;
    sub_1DFDEE250();
    char v21 = 2;
    sub_1DEFE2504((unint64_t *)&unk_1EBAA39D8, (void (*)(uint64_t))sub_1DEECCE84);
    sub_1DFDFFE80();
    uint64_t v10 = v19;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1DEFE23EC(uint64_t a1)
{
  uint64_t v2 = sub_1DEFE2504(&qword_1EAC27508, (void (*)(uint64_t))type metadata accessor for ArticleListSharedWithYouFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DEFE2458(void *a1)
{
  a1[1] = sub_1DEFE2504(&qword_1EAC27508, (void (*)(uint64_t))type metadata accessor for ArticleListSharedWithYouFeedGroup);
  a1[2] = sub_1DEFE2504(&qword_1EAC27510, (void (*)(uint64_t))type metadata accessor for ArticleListSharedWithYouFeedGroup);
  uint64_t result = sub_1DEFE2504(&qword_1EAC27518, (void (*)(uint64_t))type metadata accessor for ArticleListSharedWithYouFeedGroup);
  a1[3] = result;
  return result;
}

uint64_t sub_1DEFE2504(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFE254C()
{
  return sub_1DEFE2504((unint64_t *)&qword_1EAC27520, (void (*)(uint64_t))type metadata accessor for ArticleListSharedWithYouFeedGroup);
}

uint64_t sub_1DEFE2594()
{
  return sub_1DEFE2504(&qword_1EAC27528, (void (*)(uint64_t))type metadata accessor for ArticleListSharedWithYouFeedGroup);
}

uint64_t sub_1DEFE25DC()
{
  return sub_1DEFE2504(&qword_1EAC27530, (void (*)(uint64_t))type metadata accessor for ArticleListSharedWithYouFeedGroup);
}

uint64_t sub_1DEFE2624(uint64_t a1)
{
  uint64_t result = sub_1DEFE2504(&qword_1EAC27538, (void (*)(uint64_t))type metadata accessor for ArticleListSharedWithYouFeedGroup);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DEFE267C()
{
  unint64_t result = qword_1EAC27548;
  if (!qword_1EAC27548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27548);
  }
  return result;
}

uint64_t sub_1DEFE26D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleListSharedWithYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEFE2734(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArticleListSharedWithYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DEFE2790(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEFE267C();
    unint64_t v7 = a3(a1, &type metadata for ArticleListSharedWithYouFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ArticleListSharedWithYouFeedGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFE28C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleListSharedWithYouFeedGroup.CodingKeys()
{
  return &type metadata for ArticleListSharedWithYouFeedGroup.CodingKeys;
}

uint64_t sub_1DEFE28F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF2A060C(*a1, *a2);
}

uint64_t sub_1DEFE2904@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DEFE2ADC();
  *a1 = result;
  return result;
}

uint64_t sub_1DEFE2934@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DEFE2ADC();
  *a1 = result;
  return result;
}

uint64_t sub_1DEFE295C(uint64_t a1)
{
  unint64_t v2 = sub_1DEFE267C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEFE2998(uint64_t a1)
{
  unint64_t v2 = sub_1DEFE267C();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DEFE29D8()
{
  unint64_t result = qword_1EAC27560;
  if (!qword_1EAC27560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27560);
  }
  return result;
}

unint64_t sub_1DEFE2A30()
{
  unint64_t result = qword_1EAC27568;
  if (!qword_1EAC27568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27568);
  }
  return result;
}

unint64_t sub_1DEFE2A88()
{
  unint64_t result = qword_1EAC27570;
  if (!qword_1EAC27570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27570);
  }
  return result;
}

uint64_t sub_1DEFE2ADC()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t *sub_1DEFE2B28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1DFDF7010();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      sub_1DED3C96C();
      *(uint64_t *)((char *)a1 + v9[7]) = *(uint64_t *)((char *)a2 + v9[7]);
      *(uint64_t *)((char *)a1 + v9[8]) = *(uint64_t *)((char *)a2 + v9[8]);
      *(uint64_t *)((char *)a1 + v9[9]) = *(uint64_t *)((char *)a2 + v9[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for TagFeedLayoutSectionDescriptor.Data()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DEFE2CFC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_1DFDF7010();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    sub_1DED3C96C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *sub_1DEFE2DD0(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1DFDF7010();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    sub_1DED3C96C();
    *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
    *(void *)((char *)a1 + v8[8]) = *(void *)((char *)a2 + v8[8]);
    *(void *)((char *)a1 + v8[9]) = *(void *)((char *)a2 + v8[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DEFE2F48(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEFE42D8((uint64_t)a1, type metadata accessor for TagFeedLayoutSectionDescriptor);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1DFDF7010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1DED3C96C();
      *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
      *(void *)((char *)a1 + v8[8]) = *(void *)((char *)a2 + v8[8]);
      *(void *)((char *)a1 + v8[9]) = *(void *)((char *)a2 + v8[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for TagFeedLayoutSectionDescriptor(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAE1F40);
}

char *sub_1DEFE3114(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1DFDF7010();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_1DED3C96C();
    *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
    *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1DEFE31F4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEFE42D8((uint64_t)a1, type metadata accessor for TagFeedLayoutSectionDescriptor);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1DFDF7010();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      sub_1DED3C96C();
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1DEFE32F8()
{
  sub_1DED3C96C();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1DEFE338C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DEFE34E8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DEFE34FC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DEFE36F4);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1DEFE371C()
{
  sub_1DED3C96C();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TagFeedLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v5);
  unsigned int v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFE4358(v0, (uint64_t)v7, type metadata accessor for TagFeedLayoutSectionDescriptor);
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = 0;
      break;
    case 3u:
    case 4u:
      return v8;
    default:
      sub_1DED3C9C4((uint64_t)v7, (uint64_t)v4);
      uint64_t v9 = sub_1DEFE3944(*(void *)&v4[*(int *)(v2 + 28)], type metadata accessor for TagFeedLayoutSectionDescriptor.Header, type metadata accessor for TagFeedLayoutSectionDescriptor.Header, type metadata accessor for TagFeedLayoutSectionDescriptor.Header);
      uint64_t v10 = sub_1DEFE3944(*(void *)&v4[*(int *)(v2 + 32)], type metadata accessor for TagFeedLayoutSectionDescriptor.Footer, type metadata accessor for TagFeedLayoutSectionDescriptor.Footer, type metadata accessor for TagFeedLayoutSectionDescriptor.Footer);
      uint64_t v13 = v9;
      sub_1DEA91CE8(v10);
      uint64_t v8 = v13;
      sub_1DEFE42D8((uint64_t)v4, (uint64_t (*)(void))sub_1DED3C96C);
      break;
  }
  return v8;
}

uint64_t sub_1DEFE3944(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v5 = a2(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_1DFDF94D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1DEA928C8(0, v15, 0);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v18 = *(void *)(v6 + 72);
    uint64_t v27 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v28 = v18;
    do
    {
      uint64_t v19 = v30;
      sub_1DEFE4358(v17, (uint64_t)v10, v30);
      uint64_t v20 = v29;
      sub_1DEFE4358((uint64_t)v10, v29, v19);
      (*v27)(v14, v20, v11);
      sub_1DEFE42D8((uint64_t)v10, v31);
      uint64_t v21 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA928C8(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v35;
      }
      unint64_t v23 = *(void *)(v21 + 16);
      unint64_t v22 = *(void *)(v21 + 24);
      if (v23 >= v22 >> 1) {
        sub_1DEA928C8(v22 > 1, v23 + 1, 1);
      }
      uint64_t v33 = v11;
      uint64_t v34 = sub_1DEFE3DAC(&qword_1EBABA298, MEMORY[0x1E4F80118]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v32);
      (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(boxed_opaque_existential_1, v14, v11);
      uint64_t v25 = v35;
      *(void *)(v35 + 16) = v23 + 1;
      sub_1DE942EC4(&v32, v25 + 40 * v23 + 32);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v17 += v28;
      --v15;
    }
    while (v15);
    return v35;
  }
  return result;
}

uint64_t sub_1DEFE3C44(uint64_t a1)
{
  uint64_t v2 = sub_1DEFE3DAC(&qword_1EAC27580, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
  return MEMORY[0x1F4162DE8](a1, v2);
}

uint64_t sub_1DEFE3CB0(uint64_t a1)
{
  uint64_t v2 = sub_1DEFE3DAC(&qword_1EBAE1F38, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1DEFE3D1C()
{
  return sub_1DEFE3DAC(&qword_1EBAE1F30, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
}

uint64_t sub_1DEFE3D64()
{
  return sub_1DEFE3DAC(&qword_1EBAE1F38, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
}

uint64_t sub_1DEFE3DAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFE3DF4()
{
  sub_1DED3C96C();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TagFeedLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFE4358(v0, (uint64_t)v7, type metadata accessor for TagFeedLayoutSectionDescriptor);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    uint64_t v9 = sub_1DEFE3F70(*((void *)v7 + 2));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
    if ((EnumCaseMultiPayload - 3) >= 2)
    {
      sub_1DED3C9C4((uint64_t)v7, (uint64_t)v4);
      uint64_t v9 = sub_1DEFE3F70(*(void *)&v4[*(int *)(v2 + 36)]);
      sub_1DEFE42D8((uint64_t)v4, (uint64_t (*)(void))sub_1DED3C96C);
    }
  }
  return v9;
}

uint64_t sub_1DEFE3F70(uint64_t a1)
{
  uint64_t v31 = sub_1DFDF7FE0();
  uint64_t v2 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TagFeedLayoutSectionDescriptor.Decoration(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v30 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - v9;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1DE9FC370(0, v11, 0);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v14 = *(void *)(v6 + 72);
    uint64_t v28 = (void (**)(char *, uint64_t, uint64_t))(v2 + 32);
    uint64_t v29 = v14;
    int64_t v15 = (void (**)(char *, uint64_t))(v2 + 8);
    do
    {
      sub_1DEFE4358(v13, (uint64_t)v10, type metadata accessor for TagFeedLayoutSectionDescriptor.Decoration);
      uint64_t v16 = v30;
      sub_1DEFE4358((uint64_t)v10, v30, type metadata accessor for TagFeedLayoutSectionDescriptor.Decoration);
      uint64_t v17 = v16;
      uint64_t v18 = v31;
      (*v28)(v4, v17, v31);
      sub_1DFDF7FC0();
      (*v15)(v4, v18);
      sub_1DEFE42D8((uint64_t)v10, type metadata accessor for TagFeedLayoutSectionDescriptor.Decoration);
      uint64_t v19 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DE9FC370(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v35;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1) {
        sub_1DE9FC370(v20 > 1, v21 + 1, 1);
      }
      uint64_t v22 = v33;
      uint64_t v23 = v34;
      uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
      MEMORY[0x1F4188790](v24);
      uint64_t v26 = (char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v27 + 16))(v26);
      sub_1DE9FC2D8(v21, (uint64_t)v26, &v35, v22, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      v13 += v29;
      --v11;
    }
    while (v11);
    return v35;
  }
  return result;
}

uint64_t sub_1DEFE42D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for TagFeedLayoutSectionDescriptor.Decoration(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAE1D28);
}

uint64_t sub_1DEFE4358(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for TagFeedLayoutSectionDescriptor.Footer(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAE1E30);
}

uint64_t type metadata accessor for TagFeedLayoutSectionDescriptor.Header(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAE1EB0);
}

uint64_t sub_1DEFE4400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v70 = a1;
  uint64_t v5 = type metadata accessor for ChannelIssuesModel();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v69 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v67 = (uint64_t)&v58 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v68 = (char *)&v58 - v10;
  uint64_t v11 = sub_1DFDF8A10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int64_t v15 = (uint64_t *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v58 - v16;
  uint64_t v18 = sub_1DFDF8FD0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ChannelIssuesLayoutModel();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE02D58();
  sub_1DFDF2120();
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v24, v18);
  uint64_t v71 = v4;
  swift_getObjectType();
  uint64_t v25 = v17;
  sub_1DFDF8420();
  (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  uint64_t v26 = v12;
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v12 + 88))(v15, v11) == *MEMORY[0x1E4F7FAD8])
  {
    uint64_t v64 = v21;
    uint64_t v65 = v25;
    uint64_t v66 = v19;
    uint64_t v72 = v18;
    uint64_t v73 = v11;
    uint64_t v62 = v12;
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v15, v11);
    uint64_t v63 = *v15;
    uint64_t v61 = sub_1DFDF1E50();
    uint64_t v27 = *(void *)(v71 + 40);
    uint64_t ObjectType = swift_getObjectType();
    sub_1DEB0D750(0);
    uint64_t v60 = v28;
    uint64_t v29 = (uint64_t)v68;
    sub_1DFDF0B50();
    uint64_t v30 = v67;
    sub_1DEFE4E20(v29, v67);
    uint64_t v31 = *(void **)v30;
    long long v32 = *(void **)(v30 + 16);
    sub_1DEB8A284();
    uint64_t v34 = v30 + *(int *)(v33 + 48);
    id v35 = objc_msgSend(v31, sel_identifier);
    uint64_t v36 = sub_1DFDFDD20();
    uint64_t v38 = v37;

    uint64_t v39 = sub_1DFDF99F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v34, v39);
    sub_1DEFE4E84(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 32))(v36, v38, ObjectType, v27);
    swift_bridgeObjectRelease();
    sub_1DEFE4FA4(&qword_1EBAAA358, (void (*)(uint64_t))type metadata accessor for IssueDownload);
    uint64_t v40 = (void *)v61;
    sub_1DFDFAA90();

    uint64_t v41 = (uint64_t)v69;
    sub_1DFDF0B50();
    uint64_t v42 = sub_1DFC30518();
    sub_1DEFE4E84(v41);
    uint64_t v43 = v63;
    uint64_t v44 = (void *)sub_1DFDF1E50();
    uint64_t v45 = (void *)sub_1DFDFAA80();

    if (v42)
    {
      objc_msgSend(v45, sel_setShowsMenuAsPrimaryAction_, 1);

      uint64_t v46 = (void *)sub_1DFDF1E50();
      uint64_t v47 = (void *)sub_1DFDFAA80();

      sub_1DEB3C948();
      uint64_t v48 = (void *)sub_1DFDFF380();
      objc_msgSend(v47, sel_setMenu_, v48);

      uint64_t v49 = (void *)sub_1DFDF1E50();
      uint64_t v50 = (void *)sub_1DFDFAA80();

      uint64_t v51 = (void *)sub_1DFDFBB10();
      uint64_t v52 = swift_allocObject();
      swift_weakInit();
      uint64_t v53 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v52;
      v54[3] = v53;
      v54[4] = v42;
      swift_retain();
      uint64_t v55 = (void *)sub_1DFDF5050();
      swift_release();

      swift_release();
    }
    else
    {
      objc_msgSend(v45, sel_setHidden_, 1);
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v65, v73);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v64, v72);
  }
  else
  {
    uint64_t v43 = sub_1DFDF8A00();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v26 + 8);
    v56(v25, v11);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v56((char *)v15, v11);
  }
  return v43;
}

void sub_1DEFE4AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DFDF33E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    swift_beginAccess();
    uint64_t v9 = MEMORY[0x1E01EFB70](a2 + 16);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FACB48], v3);
      uint64_t v11 = *(void *)(v8 + 64);
      v16[4] = sub_1DFDE8900();
      void v16[5] = sub_1DEFE4FA4((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
      v16[1] = v11;
      swift_retain();
      uint64_t v12 = (void *)sub_1DFDF1E50();
      sub_1DFDFAA80();

      long long v17 = 0u;
      long long v18 = 0u;
      char v19 = 1;
      sub_1DFDF2D90();
      swift_allocObject();
      sub_1DFDF2D70();
      uint64_t v13 = (void *)sub_1DFDF1E50();
      uint64_t v14 = (void *)sub_1DFDFAA80();

      sub_1DEB3C948();
      swift_unknownObjectRetain();
      sub_1DFDF0520();
      swift_unknownObjectRelease();
      int64_t v15 = (void *)sub_1DFDFF380();
      objc_msgSend(v14, sel_setMenu_, v15);
      swift_release();

      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t type metadata accessor for ChannelIssuesBlueprintViewCellProvider()
{
  return self;
}

uint64_t sub_1DEFE4D60()
{
  return sub_1DEFE4FA4(&qword_1EAC20408, (void (*)(uint64_t))type metadata accessor for ChannelIssuesLayoutModel);
}

uint64_t sub_1DEFE4DA8()
{
  return sub_1DEFE4FA4(&qword_1EAC203F0, (void (*)(uint64_t))type metadata accessor for ChannelIssuesModel);
}

uint64_t sub_1DEFE4DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1DEFE4400(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_1DEFE4E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChannelIssuesModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEFE4E84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChannelIssuesModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEFE4EE0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DEFE4F18()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DEFE4F50()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DEFE4F98()
{
  sub_1DEFE4AB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DEFE4FA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFE4FEC()
{
  sub_1DEA98C58(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v6 - v1;
  uint64_t v3 = sub_1DFDEAB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  swift_retain();
  sub_1DFBB5128(0xD000000000000010, 0, (uint64_t)v2, (uint64_t)v8, 0, 0, 0, 0, (uint64_t)v6);
  swift_release();
  sub_1DE932EE8((uint64_t)v6, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460);
  sub_1DE932EE8((uint64_t)v8, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0);
  sub_1DEBFF970((uint64_t)v2);
  swift_release();
  return 1;
}

uint64_t type metadata accessor for AudioPlaylistURLHandler()
{
  return self;
}

uint64_t sub_1DEFE538C()
{
  return sub_1DEFE4FEC() & 1;
}

unint64_t sub_1DEFE53B8()
{
  unint64_t result = qword_1EBAD9FD0;
  if (!qword_1EBAD9FD0)
  {
    type metadata accessor for AudioPlaylistURLHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9FD0);
  }
  return result;
}

uint64_t sub_1DEFE540C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DEABF360(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v64 = (uint64_t)&v60 - v5;
  sub_1DEABF360(0, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v60 - v7;
  uint64_t v9 = (int *)type metadata accessor for NewspaperTodayFeedGroupConfigData();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v60 - v13;
  sub_1DEA48DA8();
  uint64_t v16 = v15;
  *a2 = sub_1DFDF7340();
  a2[1] = v17;
  sub_1DFDF73B0();
  sub_1DEFE6218((uint64_t)&v14[v9[5]], (uint64_t)v8, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  uint64_t v65 = type metadata accessor for NewspaperGroupConfig();
  sub_1DEFE6284((uint64_t)v8, (uint64_t)a2 + *(int *)(v65 + 20), &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
  uint64_t v66 = v16;
  sub_1DFDF73B0();
  uint64_t v18 = *(void *)&v12[v9[7]];
  swift_bridgeObjectRetain();
  sub_1DE9EA6D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  int64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v61 = v9;
    uint64_t v62 = a1;
    uint64_t v63 = a2;
    uint64_t v67 = MEMORY[0x1E4FBC860];
    sub_1DEDF75CC(0, v19, 0);
    uint64_t v20 = v67;
    uint64_t v60 = v18;
    unint64_t v21 = (uint64_t *)(v18 + 40);
    do
    {
      uint64_t v22 = *(v21 - 1);
      uint64_t v23 = *v21;
      uint64_t v67 = v20;
      unint64_t v25 = *(void *)(v20 + 16);
      unint64_t v24 = *(void *)(v20 + 24);
      swift_bridgeObjectRetain();
      if (v25 >= v24 >> 1)
      {
        sub_1DEDF75CC(v24 > 1, v25 + 1, 1);
        uint64_t v20 = v67;
      }
      v21 += 2;
      *(void *)(v20 + 16) = v25 + 1;
      unint64_t v26 = v20 + 16 * v25;
      *(void *)(v26 + 32) = v22;
      *(void *)(v26 + 40) = v23;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    a1 = v62;
    a2 = v63;
    uint64_t v9 = v61;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  uint64_t v27 = (int *)v65;
  *(uint64_t *)((char *)a2 + *(int *)(v65 + 24)) = v20;
  uint64_t v28 = v66;
  sub_1DFDF73B0();
  uint64_t v29 = &v14[v9[9]];
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  long long v32 = (uint64_t *)((char *)a2 + v27[7]);
  *long long v32 = v30;
  v32[1] = v31;
  sub_1DFDF73B0();
  uint64_t v33 = (void (*)(uint64_t))MEMORY[0x1E4F80E60];
  uint64_t v34 = v64;
  sub_1DEFE6218((uint64_t)&v14[v9[10]], v64, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  sub_1DEFE6284(v34, (uint64_t)a2 + v27[8], &qword_1EBAC0040, v33);
  uint64_t v35 = sub_1DFDF7350();
  uint64_t v36 = (uint64_t *)((char *)a2 + v27[9]);
  *uint64_t v36 = v35;
  v36[1] = v37;
  sub_1DFDF7360();
  sub_1DFDF7360();
  sub_1DFDF73B0();
  LOBYTE(v30) = v14[v9[11]];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  *((unsigned char *)a2 + v27[12]) = v30;
  sub_1DFDF73B0();
  LOBYTE(v30) = v14[v9[12]];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  *((unsigned char *)a2 + v27[13]) = v30;
  sub_1DFDF73B0();
  uint64_t v38 = *(void *)&v14[v9[13]];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v27[14]) = v38;
  sub_1DFDF73B0();
  uint64_t v39 = *(void *)&v14[v9[14]];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v27[15]) = v39;
  sub_1DFDF73B0();
  uint64_t v40 = *(void *)&v14[v9[15]];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v27[16]) = v40;
  sub_1DFDF73B0();
  uint64_t v41 = *(void *)&v14[v9[16]];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v27[17]) = v41;
  sub_1DFDF73B0();
  uint64_t v42 = *(void *)&v14[v9[17]];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v27[18]) = v42;
  sub_1DFDF73B0();
  uint64_t v43 = *(void *)&v14[v9[18]];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v27[19]) = v43;
  sub_1DFDF73B0();
  uint64_t v44 = &v14[v9[19]];
  uint64_t v45 = *(void *)v44;
  LOBYTE(v33) = v44[8];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  uint64_t v46 = (char *)a2 + v27[20];
  *(void *)uint64_t v46 = v45;
  v46[8] = (char)v33;
  sub_1DFDF73B0();
  uint64_t v47 = &v14[v9[20]];
  uint64_t v48 = *(void *)v47;
  LOBYTE(v33) = v47[8];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  uint64_t v49 = (char *)a2 + v27[21];
  *(void *)uint64_t v49 = v48;
  v49[8] = (char)v33;
  sub_1DFDF73B0();
  uint64_t v50 = &v14[v9[21]];
  uint64_t v51 = *(void *)v50;
  LOBYTE(v33) = v50[8];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  uint64_t v52 = (char *)a2 + v27[22];
  *(void *)uint64_t v52 = v51;
  v52[8] = (char)v33;
  sub_1DFDF73B0();
  uint64_t v53 = &v14[v9[22]];
  uint64_t v54 = *(void *)v53;
  LOBYTE(v33) = v53[8];
  sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  uint64_t v55 = (char *)a2 + v27[23];
  *(void *)uint64_t v55 = v54;
  v55[8] = (char)v33;
  if (qword_1EBAC0170 != -1) {
    swift_once();
  }
  uint64_t v56 = (void *)qword_1EBB628A8;
  *(uint64_t *)((char *)a2 + v27[24]) = qword_1EBB628A8;
  id v57 = v56;
  sub_1DFDF73B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(a1, v28);
  uint64_t v58 = *(void *)&v14[v9[23]];
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DE9EA6D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v27[25]) = v58;
  return result;
}

uint64_t type metadata accessor for NewspaperGroupConfig()
{
  uint64_t result = qword_1EBAAE318;
  if (!qword_1EBAAE318) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFE5B04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1DFDF8C20();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v65 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEABF360(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v64 = (uint64_t)v61 - v7;
  uint64_t v8 = type metadata accessor for NewspaperMagazineFeedGroupConfigData();
  uint64_t v70 = (int *)v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v61 - v12;
  uint64_t v69 = sub_1DEA34164;
  sub_1DEABF360(0, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v61 - v15;
  sub_1DEA53354();
  uint64_t v18 = v17;
  *a2 = sub_1DFDF7340();
  a2[1] = v19;
  sub_1DFDF73B0();
  uint64_t v20 = &v13[*(int *)(v8 + 20)];
  sub_1DEA34164();
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v16, v20, v21);
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v22);
  uint64_t v68 = type metadata accessor for NewspaperGroupConfig();
  sub_1DEFE6284((uint64_t)v16, (uint64_t)a2 + *(int *)(v68 + 20), &qword_1EBABA5A0, (void (*)(uint64_t))v69);
  uint64_t v69 = (void (*)())v18;
  sub_1DFDF73B0();
  uint64_t v24 = *(void *)&v11[v70[6]];
  swift_bridgeObjectRetain();
  sub_1DE9EA6D4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  int64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v62 = a1;
    uint64_t v63 = a2;
    uint64_t v71 = MEMORY[0x1E4FBC860];
    sub_1DEDF75CC(0, v25, 0);
    uint64_t v26 = v71;
    v61[1] = v24;
    uint64_t v27 = (uint64_t *)(v24 + 40);
    do
    {
      uint64_t v28 = *(v27 - 1);
      uint64_t v29 = *v27;
      uint64_t v71 = v26;
      unint64_t v30 = *(void *)(v26 + 16);
      unint64_t v31 = *(void *)(v26 + 24);
      swift_bridgeObjectRetain();
      if (v30 >= v31 >> 1)
      {
        sub_1DEDF75CC(v31 > 1, v30 + 1, 1);
        uint64_t v26 = v71;
      }
      v27 += 2;
      *(void *)(v26 + 16) = v30 + 1;
      unint64_t v32 = v26 + 16 * v30;
      *(void *)(v32 + 32) = v28;
      *(void *)(v32 + 40) = v29;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    a1 = v62;
    a2 = v63;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBC860];
  }
  uint64_t v33 = (int *)v68;
  *(uint64_t *)((char *)a2 + *(int *)(v68 + 24)) = v26;
  uint64_t v34 = v69;
  sub_1DFDF73B0();
  uint64_t v35 = v70;
  uint64_t v36 = &v13[v70[7]];
  uint64_t v37 = *(void *)v36;
  uint64_t v38 = *((void *)v36 + 1);
  swift_bridgeObjectRetain();
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  uint64_t v39 = (uint64_t *)((char *)a2 + v33[7]);
  *uint64_t v39 = v37;
  v39[1] = v38;
  sub_1DFDF73B0();
  uint64_t v40 = (void (*)(uint64_t))MEMORY[0x1E4F80E60];
  uint64_t v41 = v64;
  sub_1DEFE6218((uint64_t)&v13[v35[8]], v64, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  sub_1DEFE6284(v41, (uint64_t)a2 + v33[8], &qword_1EBAC0040, v40);
  uint64_t v42 = sub_1DFDF7350();
  uint64_t v43 = (uint64_t *)((char *)a2 + v33[9]);
  *uint64_t v43 = v42;
  v43[1] = v44;
  sub_1DFDF7360();
  sub_1DFDF73B0();
  uint64_t v46 = v65;
  uint64_t v45 = v66;
  uint64_t v47 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v65, &v13[v35[11]], v67);
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))((char *)a2 + v33[11], v46, v47);
  sub_1DFDF73B0();
  LOBYTE(v47) = v13[v35[12]];
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  *((unsigned char *)a2 + v33[12]) = v47;
  sub_1DFDF73B0();
  LOBYTE(v47) = v13[v35[13]];
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  *((unsigned char *)a2 + v33[13]) = v47;
  sub_1DFDF73B0();
  uint64_t v48 = *(void *)&v13[v35[15]];
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v33[14]) = v48;
  sub_1DFDF73B0();
  uint64_t v49 = *(void *)&v13[v35[16]];
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v33[15]) = v49;
  sub_1DFDF73B0();
  uint64_t v50 = *(void *)&v13[v35[17]];
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v33[16]) = v50;
  sub_1DFDF73B0();
  uint64_t v51 = *(void *)&v13[v35[18]];
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v33[17]) = v51;
  sub_1DFDF73B0();
  uint64_t v52 = *(void *)&v13[v35[19]];
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v33[18]) = v52;
  sub_1DFDF73B0();
  uint64_t v53 = *(void *)&v13[v35[20]];
  sub_1DE9EA6D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewspaperMagazineFeedGroupConfigData);
  *(uint64_t *)((char *)a2 + v33[19]) = v53;
  uint64_t v54 = (char *)a2 + v33[20];
  *(void *)uint64_t v54 = 0;
  v54[8] = 1;
  uint64_t v55 = (char *)a2 + v33[21];
  *(void *)uint64_t v55 = 0;
  v55[8] = 1;
  uint64_t v56 = (char *)a2 + v33[22];
  *(void *)uint64_t v56 = 0;
  v56[8] = 1;
  id v57 = (char *)a2 + v33[23];
  *(void *)id v57 = 0;
  v57[8] = 1;
  if (qword_1EBAC0140 != -1) {
    swift_once();
  }
  uint64_t v58 = *(uint64_t (**)(uint64_t, void (*)()))(*((void *)v34 - 1) + 8);
  id v59 = (id)qword_1EBB62888;
  uint64_t result = v58(a1, v34);
  *(uint64_t *)((char *)a2 + v33[24]) = (uint64_t)v59;
  *(uint64_t *)((char *)a2 + v33[25]) = 0;
  return result;
}

uint64_t sub_1DEFE6218(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DEABF360(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DEFE6284(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DEABF360(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

ValueMetadata *type metadata accessor for NewspaperGroupConfig.Channel()
{
  return &type metadata for NewspaperGroupConfig.Channel;
}

char *sub_1DEFE6300(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_1DEA34164();
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)(v11 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v10, 1, v12))
    {
      sub_1DEABF360(0, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    uint64_t v17 = a3[7];
    *(void *)&v4[a3[6]] = *(void *)&a2[a3[6]];
    uint64_t v18 = &v4[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = a3[8];
    __dst = &v4[v21];
    uint64_t v22 = &a2[v21];
    uint64_t v23 = sub_1DFDFB5C0();
    uint64_t v24 = *(void *)(v23 - 8);
    int64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      sub_1DEABF360(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
      memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    uint64_t v27 = a3[9];
    uint64_t v28 = a3[10];
    uint64_t v29 = &v4[v27];
    unint64_t v30 = &a2[v27];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    unint64_t v32 = &v4[v28];
    uint64_t v33 = &a2[v28];
    uint64_t v34 = sub_1DFDF8C20();
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v35(v32, v33, v34);
    v35(&v4[a3[11]], &a2[a3[11]], v34);
    uint64_t v36 = a3[13];
    v4[a3[12]] = a2[a3[12]];
    v4[v36] = a2[v36];
    uint64_t v37 = a3[15];
    *(void *)&v4[a3[14]] = *(void *)&a2[a3[14]];
    *(void *)&v4[v37] = *(void *)&a2[v37];
    uint64_t v38 = a3[17];
    *(void *)&v4[a3[16]] = *(void *)&a2[a3[16]];
    *(void *)&v4[v38] = *(void *)&a2[v38];
    uint64_t v39 = a3[19];
    *(void *)&v4[a3[18]] = *(void *)&a2[a3[18]];
    *(void *)&v4[v39] = *(void *)&a2[v39];
    uint64_t v40 = a3[20];
    uint64_t v41 = a3[21];
    uint64_t v42 = &v4[v40];
    uint64_t v43 = &a2[v40];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = &v4[v41];
    uint64_t v45 = &a2[v41];
    *(void *)uint64_t v44 = *(void *)v45;
    v44[8] = v45[8];
    uint64_t v46 = a3[22];
    uint64_t v47 = a3[23];
    uint64_t v48 = &v4[v46];
    uint64_t v49 = &a2[v46];
    *(void *)uint64_t v48 = *(void *)v49;
    v48[8] = v49[8];
    uint64_t v50 = &v4[v47];
    uint64_t v51 = &a2[v47];
    *(void *)uint64_t v50 = *(void *)v51;
    char v50[8] = v51[8];
    uint64_t v52 = a3[24];
    uint64_t v53 = a3[25];
    uint64_t v54 = *(void **)&a2[v52];
    *(void *)&v4[v52] = v54;
    *(void *)&v4[v53] = *(void *)&a2[v53];
    id v55 = v54;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DEFE6720(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  sub_1DEA34164();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_1DFDFB5C0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[10];
  uint64_t v12 = sub_1DFDF8C20();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(a1 + a2[11], v12);

  return swift_bridgeObjectRelease();
}

char *sub_1DEFE6900(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  sub_1DEA34164();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v9, 1, v11))
  {
    sub_1DEABF360(0, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v9, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  }
  uint64_t v15 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  uint64_t v19 = a3[8];
  __dst = &a1[v19];
  uint64_t v20 = &a2[v19];
  uint64_t v21 = sub_1DFDFB5C0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    sub_1DEABF360(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
    memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  unint64_t v30 = &a1[v26];
  uint64_t v31 = &a2[v26];
  uint64_t v32 = sub_1DFDF8C20();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
  swift_bridgeObjectRetain();
  v33(v30, v31, v32);
  v33(&a1[a3[11]], &a2[a3[11]], v32);
  uint64_t v34 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v34] = a2[v34];
  uint64_t v35 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[v35] = *(void *)&a2[v35];
  uint64_t v36 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  *(void *)&a1[v36] = *(void *)&a2[v36];
  uint64_t v37 = a3[19];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  *(void *)&a1[v37] = *(void *)&a2[v37];
  uint64_t v38 = a3[20];
  uint64_t v39 = a3[21];
  uint64_t v40 = &a1[v38];
  uint64_t v41 = &a2[v38];
  *(void *)uint64_t v40 = *(void *)v41;
  v40[8] = v41[8];
  uint64_t v42 = &a1[v39];
  uint64_t v43 = &a2[v39];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  uint64_t v44 = a3[22];
  uint64_t v45 = a3[23];
  uint64_t v46 = &a1[v44];
  uint64_t v47 = &a2[v44];
  *(void *)uint64_t v46 = *(void *)v47;
  v46[8] = v47[8];
  uint64_t v48 = &a1[v45];
  uint64_t v49 = &a2[v45];
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v49[8];
  uint64_t v50 = a3[24];
  uint64_t v51 = a3[25];
  uint64_t v52 = *(void **)&a2[v50];
  *(void *)&a1[v50] = v52;
  *(void *)&a1[v51] = *(void *)&a2[v51];
  id v53 = v52;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1DEFE6CD0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  sub_1DEA34164();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v7, 1, v9);
  int v14 = v12(v8, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
LABEL_6:
    sub_1DEABF360(0, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v7, v8, v10);
LABEL_7:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_1DFDFB5C0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_1DEABF360(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  unint64_t v30 = &a2[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = sub_1DFDF8C20();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24);
  v35(v32, v33, v34);
  v35(&a1[a3[11]], &a2[a3[11]], v34);
  a1[a3[12]] = a2[a3[12]];
  a1[a3[13]] = a2[a3[13]];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  uint64_t v36 = a3[20];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  char v39 = v38[8];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v39;
  uint64_t v40 = a3[21];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  char v43 = v42[8];
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v43;
  uint64_t v44 = a3[22];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  char v47 = v46[8];
  *(void *)uint64_t v45 = *(void *)v46;
  v45[8] = v47;
  uint64_t v48 = a3[23];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  char v51 = v50[8];
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v51;
  uint64_t v52 = a3[24];
  id v53 = *(void **)&a2[v52];
  uint64_t v54 = *(void **)&a1[v52];
  *(void *)&a1[v52] = v53;
  id v55 = v53;

  *(void *)&a1[a3[25]] = *(void *)&a2[a3[25]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1DEFE71B4(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  sub_1DEA34164();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9))
  {
    sub_1DEABF360(0, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_1DFDFB5C0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1DEABF360(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_1DFDF8C20();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v24(&a1[a3[11]], &a2[a3[11]], v23);
  uint64_t v25 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v25] = a2[v25];
  uint64_t v26 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[v26] = *(void *)&a2[v26];
  uint64_t v27 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  *(void *)&a1[v27] = *(void *)&a2[v27];
  uint64_t v28 = a3[19];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  *(void *)&a1[v28] = *(void *)&a2[v28];
  uint64_t v29 = a3[20];
  uint64_t v30 = a3[21];
  uint64_t v31 = &a1[v29];
  uint64_t v32 = &a2[v29];
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  uint64_t v33 = &a1[v30];
  uint64_t v34 = &a2[v30];
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  uint64_t v35 = a3[22];
  uint64_t v36 = a3[23];
  uint64_t v37 = &a1[v35];
  uint64_t v38 = &a2[v35];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  char v39 = &a1[v36];
  uint64_t v40 = &a2[v36];
  *(void *)char v39 = *(void *)v40;
  v39[8] = v40[8];
  uint64_t v41 = a3[25];
  *(void *)&a1[a3[24]] = *(void *)&a2[a3[24]];
  *(void *)&a1[v41] = *(void *)&a2[v41];
  return a1;
}

char *sub_1DEFE7530(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  sub_1DEA34164();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v8, 1, v10);
  int v15 = v13(v9, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
LABEL_6:
    sub_1DEABF360(0, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v8, v9, v11);
LABEL_7:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (uint64_t *)&a2[v17];
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_1DFDFB5C0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    sub_1DEABF360(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_13:
  uint64_t v31 = a3[9];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (uint64_t *)&a2[v31];
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *(void *)uint64_t v32 = v35;
  *((void *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[10];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = sub_1DFDF8C20();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40);
  v40(v37, v38, v39);
  v40(&a1[a3[11]], &a2[a3[11]], v39);
  uint64_t v41 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v41] = a2[v41];
  uint64_t v42 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[v42] = *(void *)&a2[v42];
  uint64_t v43 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  *(void *)&a1[v43] = *(void *)&a2[v43];
  uint64_t v44 = a3[19];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  *(void *)&a1[v44] = *(void *)&a2[v44];
  uint64_t v45 = a3[20];
  uint64_t v46 = a3[21];
  char v47 = &a1[v45];
  uint64_t v48 = &a2[v45];
  *(void *)char v47 = *(void *)v48;
  v47[8] = v48[8];
  uint64_t v49 = &a1[v46];
  uint64_t v50 = &a2[v46];
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = a3[22];
  uint64_t v52 = a3[23];
  id v53 = &a1[v51];
  uint64_t v54 = &a2[v51];
  *(void *)id v53 = *(void *)v54;
  v53[8] = v54[8];
  id v55 = &a1[v52];
  uint64_t v56 = &a2[v52];
  *(void *)id v55 = *(void *)v56;
  v55[8] = v56[8];
  uint64_t v57 = a3[24];
  uint64_t v58 = *(void **)&a1[v57];
  *(void *)&a1[v57] = *(void *)&a2[v57];

  *(void *)&a1[a3[25]] = *(void *)&a2[a3[25]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DEFE79B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFE79CC);
}

uint64_t sub_1DEFE79CC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_1DEABF360(0, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_1DEABF360(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1DFDF8C20();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[10];
  return v15(v17, a2, v16);
}

uint64_t sub_1DEFE7B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFE7B90);
}

uint64_t sub_1DEFE7B90(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_1DEABF360(0, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_1DEABF360(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1DFDF8C20();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[10];
  return v15(v17, a2, a2, v16);
}

void sub_1DEFE7D40()
{
  sub_1DEABF360(319, &qword_1EBABA5A0, (void (*)(uint64_t))sub_1DEA34164);
  if (v0 <= 0x3F)
  {
    sub_1DEABF360(319, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
    if (v1 <= 0x3F)
    {
      sub_1DFDF8C20();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1DEFE7EEC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDE81F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_userInterfaceIdiom);
  char v9 = (_BYTE)v8 + 1;
  if ((unint64_t)v8 + 1 > 6) {
    goto LABEL_12;
  }
  if (((1 << v9) & 0x1B) != 0)
  {
LABEL_3:

    uint64_t v10 = sub_1DFDE8160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a2, v10);
    return 0;
  }
  if (((1 << v9) & 0x44) == 0) {
    goto LABEL_12;
  }
  sub_1DFDE8150();
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v12 == *MEMORY[0x1E4FAB900]) {
    goto LABEL_3;
  }
  if (v12 != *MEMORY[0x1E4FAB908] && v12 != *MEMORY[0x1E4FAB910])
  {
LABEL_12:
    while (1)
    {
      sub_1DFDFFBB0();
      __break(1u);
    }
  }

  uint64_t v14 = sub_1DFDE8160();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a2, v14);
  return 1;
}

unsigned char *storeEnumTagSinglePayload for MagazineFeedGroupTitleViewVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFE81ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MagazineFeedGroupTitleViewVariant()
{
  return &type metadata for MagazineFeedGroupTitleViewVariant;
}

unint64_t sub_1DEFE8228()
{
  unint64_t result = qword_1EAC27588;
  if (!qword_1EAC27588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27588);
  }
  return result;
}

uint64_t sub_1DEFE827C(void *a1, char a2)
{
  sub_1DE968190(0, &qword_1EBAEAC88, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE968248();
  sub_1DFE001A0();
  switch(a2)
  {
    case 1:
      char v12 = 1;
      char v11 = 0;
      sub_1DEFE87B8();
      break;
    case 2:
      char v14 = 2;
      char v13 = 0;
      sub_1DEFE87B8();
      break;
    case 3:
      char v16 = 3;
      char v15 = 0;
      sub_1DEFE87B8();
      break;
    default:
      v10[4] = 0;
      sub_1DEFE87B8();
      break;
  }
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DEFE8484(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x756F59726F66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DEFE8514@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DEFE8574@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DEFE85D8(uint64_t a1)
{
  unint64_t v2 = sub_1DE968248();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEFE8614(uint64_t a1)
{
  unint64_t v2 = sub_1DE968248();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEFE8650(unsigned __int8 *a1, char *a2)
{
  return sub_1DF2A22E8(*a1, *a2);
}

uint64_t sub_1DEFE865C()
{
  return sub_1DEE9ABD8();
}

uint64_t sub_1DEFE8664()
{
  return sub_1DF3DBF7C();
}

uint64_t sub_1DEFE866C()
{
  return sub_1DED5FD28();
}

unint64_t sub_1DEFE8674@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DEFE8484(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DEFE86A0()
{
  return sub_1DFDFE180();
}

uint64_t sub_1DEFE86F0(void *a1)
{
  return sub_1DEFE827C(a1, *v1);
}

unint64_t sub_1DEFE870C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x756F59726F66;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DEFE879C()
{
  return sub_1DEFE870C(*v0);
}

ValueMetadata *type metadata accessor for SportsSectionHeroStrategy()
{
  return &type metadata for SportsSectionHeroStrategy;
}

unint64_t sub_1DEFE87B8()
{
  unint64_t result = qword_1EBADC1A8;
  if (!qword_1EBADC1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADC1A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsSectionHeroStrategy.CodingType()
{
  return &type metadata for SportsSectionHeroStrategy.CodingType;
}

unsigned char *storeEnumTagSinglePayload for SportsSectionHeroStrategy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFE8910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsSectionHeroStrategy.CodingKeys()
{
  return &type metadata for SportsSectionHeroStrategy.CodingKeys;
}

unint64_t sub_1DEFE894C()
{
  unint64_t result = qword_1EAC27590;
  if (!qword_1EAC27590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27590);
  }
  return result;
}

unint64_t sub_1DEFE89A4()
{
  unint64_t result = qword_1EAC27598;
  if (!qword_1EAC27598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27598);
  }
  return result;
}

id sub_1DEFE89F8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC7NewsUI220FollowingDataManager_sportsOnboardingManager + 32];
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC7NewsUI220FollowingDataManager_sportsOnboardingManager], *(void *)&v0[OBJC_IVAR____TtC7NewsUI220FollowingDataManager_sportsOnboardingManager + 24]);
  int v3 = *(void (**)(void))(v2 + 56);
  unsigned int v4 = v0;
  v3();

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t sub_1DEFE8C9C()
{
  uint64_t v1 = v0;
  sub_1DF4728F8(v0, *(void *)(v0 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_subscriptionService));
  uint64_t v2 = __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_shortcutService), *(void *)(v0 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_shortcutService + 24));
  sub_1DF605890(v0, *v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_editorialService;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  objc_super v6 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = swift_unknownObjectRetain();
  v6(v7, &off_1F3A87BA8, v4, v5);
  swift_endAccess();
  uint64_t v8 = v1 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_followingBadgingCoordinator;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v8 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v8, v9);
  char v11 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 16);
  uint64_t v12 = swift_unknownObjectRetain();
  v11(v12, &off_1F3A87B90, v9, v10);
  swift_endAccess();
  uint64_t v13 = v1 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_magazinesBadgingCoordinator;
  swift_beginAccess();
  uint64_t v14 = *(void *)(v13 + 24);
  uint64_t v15 = *(void *)(v13 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v13, v14);
  char v16 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v15 + 16);
  uint64_t v17 = swift_unknownObjectRetain();
  v16(v17, &off_1F3A87B80, v14, v15);
  swift_endAccess();
  swift_getObjectType();
  sub_1DEFE9A38(&qword_1EAC27638, v18, (void (*)(uint64_t))type metadata accessor for FollowingDataManager);
  swift_unknownObjectRetain();
  sub_1DFDFCF00();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_puzzleBadgingCoordinator), *(void *)(v1 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_puzzleBadgingCoordinator + 24));
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1DFDECF90();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

void sub_1DEFE8F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1E01EFB70](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = v3 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate;
    if (MEMORY[0x1E01EFB70](v3 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate))
    {
      uint64_t v6 = *(void *)(v5 + 8);
      swift_getObjectType();
      uint64_t v7 = *(void (**)(void))(v6 + 64);
      id v8 = v4;
      v7();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

BOOL sub_1DEFE9008()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_purchaseController);
  uint64_t v2 = (void *)sub_1DFDFDCE0();
  id v3 = objc_msgSend(v1, sel_purchaseLookUpEntryForTagID_, v2);

  if (!v3) {
    return 0;
  }
  if (objc_msgSend(v3, sel_purchaseType) != (id)1)
  {

    return 0;
  }
  if (objc_msgSend(v3, sel_purchaseValidationState) == (id)1)
  {

    return 1;
  }
  else
  {
    id v5 = objc_msgSend(v3, sel_purchaseValidationState);

    return v5 == (id)3;
  }
}

BOOL sub_1DEFE90C4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_purchaseController);
  uint64_t v2 = (void *)sub_1DFDFDCE0();
  id v3 = objc_msgSend(v1, sel_purchaseLookUpEntryForTagID_, v2);

  if (!v3) {
    return 0;
  }
  if (objc_msgSend(v3, sel_purchaseType) != (id)2)
  {

    return 0;
  }
  if (objc_msgSend(v3, sel_purchaseValidationState) == (id)1)
  {

    return 1;
  }
  else
  {
    id v5 = objc_msgSend(v3, sel_purchaseValidationState);

    return v5 == (id)3;
  }
}

unint64_t sub_1DEFE9180()
{
  uint64_t v1 = v0;
  sub_1DE9371E8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = sub_1DE9A3B54();
  unint64_t v8 = result;
  unint64_t v22 = MEMORY[0x1E4FBC860];
  if (!(result >> 62))
  {
    uint64_t v9 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_16:
    uint64_t v13 = v1;
    uint64_t v14 = sub_1DEFE9A80(v12, v13);
    swift_release();

    uint64_t v15 = type metadata accessor for FollowingTagModel();
    uint64_t v16 = sub_1DEFE9A38(&qword_1EBAAC0B0, 255, (void (*)(uint64_t))type metadata accessor for FollowingTagModel);
    uint64_t v17 = sub_1DEFE9A38((unint64_t *)&unk_1EBAAC0A0, 255, (void (*)(uint64_t))type metadata accessor for FollowingTagModel);
    MEMORY[0x1E01DBA90](v14, v15, v16, v17);
    uint64_t v18 = sub_1DFDED270();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return v18;
  }
  unint64_t result = sub_1DFDFFBE0();
  uint64_t v9 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v9 >= 1)
  {
    uint64_t v20 = v0;
    uint64_t v21 = v3;
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = MEMORY[0x1E01EE240](i, v8);
      }
      else
      {
        uint64_t v11 = *(void *)(v8 + 8 * i + 32);
        swift_retain();
      }
      if (objc_msgSend(*(id *)(v11 + 16), sel_tagType) == (id)2 && *(unsigned char *)(v11 + 25))
      {
        sub_1DFDFFA50();
        sub_1DFDFFA90();
        sub_1DFDFFAA0();
        sub_1DFDFFA60();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = v22;
    uint64_t v1 = v20;
    uint64_t v3 = v21;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEFE9438(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1DEFE9490()
{
  uint64_t v1 = v0;
  sub_1DE9371E8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = off_1F3A8B688;
  type metadata accessor for TagService();
  unint64_t v8 = v7();
  uint64_t v9 = v1;
  uint64_t v10 = sub_1DEFE9A80(v8, v9);
  swift_bridgeObjectRelease();

  uint64_t v11 = type metadata accessor for FollowingTagModel();
  uint64_t v12 = sub_1DEFE9A38(&qword_1EBAAC0B0, 255, (void (*)(uint64_t))type metadata accessor for FollowingTagModel);
  uint64_t v13 = sub_1DEFE9A38((unint64_t *)&unk_1EBAAC0A0, 255, (void (*)(uint64_t))type metadata accessor for FollowingTagModel);
  MEMORY[0x1E01DBA90](v10, v11, v12, v13);
  uint64_t v14 = sub_1DFDED270();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  return v14;
}

uint64_t sub_1DEFE9664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = v5 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate;
  uint64_t result = MEMORY[0x1E01EFB70](v5 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate);
  if (result)
  {
    uint64_t v11 = *(void *)(v9 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v5, &off_1F3A87BE8, a3, a4, a5, ObjectType, v11);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DEFE9720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = v4 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate;
  uint64_t result = MEMORY[0x1E01EFB70](v4 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate);
  if (result)
  {
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, &off_1F3A87BE8, a2, a3, a4, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DEFE98B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate;
  uint64_t result = MEMORY[0x1E01EFB70](v3 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate);
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v7 + 72))(v3, &off_1F3A87BE8, a3, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DEFE9958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate;
  uint64_t result = MEMORY[0x1E01EFB70](v2 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_delegate);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v6 + 80))(v2, &off_1F3A87BE8, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DEFE99F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DEFE9A30(uint64_t a1)
{
  sub_1DEFE8F30(a1, v1);
}

uint64_t sub_1DEFE9A38(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFE9A80(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = sub_1DFDFBB00();
  uint64_t v6 = *(char **)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v8 = (void *)((char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_1DFDFB530();
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v24 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v11) {
      break;
    }
    uint64_t v27 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DFDFFA70();
    if (v11 < 0)
    {
      __break(1u);
      return result;
    }
    v16[1] = v3;
    uint64_t v13 = 0;
    unint64_t v21 = a1 & 0xC000000000000001;
    a2 = (void *)((char *)a2 + OBJC_IVAR____TtC7NewsUI220FollowingDataManager_contentAvailabilityValidator);
    unsigned int v20 = *MEMORY[0x1E4F81010];
    uint64_t v18 = (void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v19 = (void (**)(void *, void, uint64_t))(v6 + 104);
    uint64_t v17 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v22 = v11;
    unint64_t v23 = a1;
    while (v11 != v13)
    {
      if (v21)
      {
        uint64_t v9 = MEMORY[0x1E01EE240](v13, a1);
      }
      else
      {
        uint64_t v9 = *(void *)(a1 + 8 * v13 + 32);
        swift_retain();
      }
      ++v13;
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      void *v8 = *(void *)(v9 + 16);
      uint64_t v14 = v26;
      (*v19)(v8, v20, v26);
      swift_unknownObjectRetain();
      uint64_t v6 = v24;
      sub_1DFDFD2A0();
      (*v18)(v8, v14);
      char v15 = sub_1DFDFB510();
      (*v17)(v6, v25);
      type metadata accessor for FollowingTagModel();
      uint64_t v3 = swift_allocObject();
      *(unsigned char *)(v3 + 16) = 2;
      *(void *)(v3 + 24) = v9;
      *(unsigned char *)(v3 + 32) = v15 & 1;
      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
      uint64_t v11 = v22;
      a1 = v23;
      if (v22 == v13) {
        return v27;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for RootPathURLHandler()
{
  return self;
}

unint64_t sub_1DEFE9DE0()
{
  unint64_t result = qword_1EBAD6508;
  if (!qword_1EBAD6508)
  {
    type metadata accessor for RootPathURLHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD6508);
  }
  return result;
}

uint64_t sub_1DEFE9E34()
{
  sub_1DEBEE754(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFEA114(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  sub_1DFDF5AF0();
  sub_1DEFEA114(0, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) == 1)
  {
    sub_1DECD10B4((uint64_t)v2);
    return 0;
  }
  sub_1DFDF14D0();
  uint64_t v6 = v25;
  uint64_t v23 = v27;
  uint64_t v24 = v26;
  uint64_t v7 = v30;
  uint64_t v21 = v28;
  uint64_t v22 = v29;
  uint64_t v9 = v31;
  uint64_t v8 = v32;
  uint64_t v11 = v33;
  uint64_t v10 = v34;
  int v12 = v35;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  if (v12 != 1)
  {
    sub_1DEB8E004(v6, v24, v23, v21, v22, v7, v9, v8, v11, v10, v12);
    return 0;
  }
  uint64_t v13 = v10;
  uint64_t v14 = v11;
  uint64_t v15 = v22;
  uint64_t v16 = v23;
  uint64_t v17 = v24;
  if (v6 == 0x6C6F686563616C70 && v24 == 0xEB00000000726564)
  {
    uint64_t v18 = 1;
    sub_1DEB8E004(0x6C6F686563616C70, 0xEB00000000726564, v23, v21, v22, v7, v9, v8, v14, v13, 1u);
  }
  else
  {
    HIDWORD(v20) = sub_1DFDFFF50();
    uint64_t v18 = 1;
    sub_1DEB8E004(v6, v17, v16, v21, v15, v7, v9, v8, v14, v13, 1u);
    if ((v20 & 0x100000000) == 0) {
      return 0;
    }
  }
  return v18;
}

void sub_1DEFEA114(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FollowingDescriptor;
    v8[1] = type metadata accessor for FollowingModel();
    _OWORD v8[2] = sub_1DEADC298();
    v8[3] = sub_1DEAE2210();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t type metadata accessor for MagazineGridBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_1DEFEA1C8()
{
  return sub_1DEFEC324(&qword_1EAC201D0, (void (*)(uint64_t))type metadata accessor for MagazineGridLayoutModel);
}

uint64_t sub_1DEFEA210()
{
  return sub_1DEFEC324((unint64_t *)&qword_1EAC24E30, (void (*)(uint64_t))type metadata accessor for MagazineGridItemModel);
}

uint64_t sub_1DEFEA258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v117 = a2;
  uint64_t v116 = sub_1DFDF98E0();
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v114 = (char *)v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DFDF8D40();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v113 = (char *)v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1DFDF8C60();
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v110 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF8C80();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v109 = (char *)v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF8CE0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v108 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF8D00();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v104 = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1DFDF8D10();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v99 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFEC3F4(0, (unint64_t *)&unk_1EBAF57C8, MEMORY[0x1E4F7FC48]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v97 = (char *)v79 - v14;
  uint64_t v15 = sub_1DFDF8CA0();
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v96 = (char *)v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1DFDF8D50();
  uint64_t v105 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  char v98 = (char *)v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DFDE8170();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v120 = v18;
  uint64_t v121 = v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v95 = (char *)v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v100 = (void (*)(uint64_t))MEMORY[0x1E4F804E0];
  sub_1DEFEC3F4(0, (unint64_t *)&qword_1EBACA3B0, MEMORY[0x1E4F804E0]);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v119 = (char *)v79 - v22;
  uint64_t v23 = sub_1DFDE81B0();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v90 = (char *)v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1DFDE81A0();
  uint64_t v103 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v118 = (char *)v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFEC3F4(0, (unint64_t *)&unk_1EBAC15B8, MEMORY[0x1E4FAD4D8]);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)v79 - v27;
  uint64_t v29 = sub_1DFDF13B0();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v30 = sub_1DFDF2B50();
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v31 = sub_1DFDF3900();
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v94 = sub_1DFDF2BF0();
  uint64_t v92 = *(void *)(v94 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v94);
  uint64_t v91 = (char *)v79 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  unsigned __int8 v35 = (char *)v79 - v34;
  sub_1DEFEB260();
  sub_1DFDF2BC0();
  sub_1DFDF2BA0();
  sub_1DFDF2BE0();
  uint64_t v89 = v36;
  uint64_t v88 = v37;
  sub_1DFDF2A90();
  uint64_t v87 = v38;
  uint64_t v86 = v39;
  sub_1DFDF2B60();
  uint64_t v85 = v40;
  uint64_t v84 = v41;
  uint64_t v83 = v42;
  uint64_t v82 = v43;
  sub_1DFDF2B40();
  uint64_t v81 = v44;
  uint64_t v80 = v45;
  v79[10] = v46;
  v79[9] = v47;
  sub_1DFDF2AA0();
  v79[6] = v48;
  sub_1DFDF2B10();
  v79[5] = v49;
  v79[4] = v50;
  v79[8] = sub_1DFDF2AF0();
  v79[7] = sub_1DFDF2B20();
  sub_1DFDF2BD0();
  sub_1DFDF2B30();
  sub_1DFDF2AB0();
  sub_1DFDFE8D0();
  v79[3] = v51;
  void v79[2] = v52;
  v79[1] = v53;
  v79[0] = v54;
  sub_1DFDF2A60();
  sub_1DFDF2AE0();
  sub_1DFDF2AD0();
  sub_1DFDF2A80();
  sub_1DFDF2A70();
  uint64_t v55 = sub_1DFDF47E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v28, 0, 1, v55);
  sub_1DFDF2BB0();
  sub_1DFDF2AC0();
  sub_1DFDFF2F0();
  uint64_t v89 = v56;
  uint64_t v88 = v57;
  sub_1DFDF2AC0();
  uint64_t v87 = v58;
  uint64_t v86 = v59;
  sub_1DFDF2B00();
  uint64_t v85 = v60;
  uint64_t v84 = v61;
  sub_1DFDF2A90();
  uint64_t v83 = v62;
  uint64_t v82 = v63;
  sub_1DFDF2B10();
  uint64_t v81 = v64;
  uint64_t v80 = v65;
  sub_1DFDF2AF0();
  sub_1DFDF2AB0();
  sub_1DFDF2AE0();
  sub_1DFDF2B30();
  sub_1DFDF2AD0();
  sub_1DFDF7D50();
  sub_1DFDF7D40();
  sub_1DFDF7D30();
  swift_release();
  sub_1DFDE8180();
  uint64_t v90 = *(char **)(v122 + 16);
  uint64_t v66 = sub_1DFDF9D80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v119, 1, 1, v66);
  uint64_t v67 = v95;
  (*(void (**)(char *, void, uint64_t))(v121 + 104))(v95, *MEMORY[0x1E4FAB6D8], v120);
  sub_1DFDF8C90();
  uint64_t v68 = sub_1DFDF8CC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v97, 1, 1, v68);
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v99, *MEMORY[0x1E4F7FC50], v102);
  sub_1DFDF8CF0();
  sub_1DFDF8C90();
  (*(void (**)(char *, void, uint64_t))(v111 + 104))(v110, *MEMORY[0x1E4F7FC38], v112);
  sub_1DFDF8C70();
  sub_1DFDF8D30();
  uint64_t v69 = v98;
  sub_1DFDF8D20();
  uint64_t v70 = v115;
  uint64_t v71 = v114;
  uint64_t v72 = v116;
  (*(void (**)(char *, void, uint64_t))(v115 + 104))(v114, *MEMORY[0x1E4F803E8], v116);
  uint64_t v73 = v118;
  uint64_t v74 = (uint64_t)v119;
  uint64_t v75 = sub_1DFDF7770();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v69, v107);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v67, v120);
  sub_1DEA94068(v74, (unint64_t *)&qword_1EBACA3B0, v100);
  uint64_t v76 = v92;
  uint64_t v77 = v94;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v91, v35, v94);
  uint64_t v124 = v122;
  uint64_t v125 = v35;
  uint64_t v126 = v75;
  sub_1DEB036BC((void (*)(char *))sub_1DEFEC18C, (uint64_t)v123);
  type metadata accessor for MagazineGridLayoutModel();
  sub_1DEB0BF3C();
  sub_1DEFEC324(&qword_1EAC201D0, (void (*)(uint64_t))type metadata accessor for MagazineGridLayoutModel);
  sub_1DFDF10D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v73, v106);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v35, v77);
}

double sub_1DEFEB260()
{
  sub_1DEFEC3F4(0, (unint64_t *)&qword_1EAC213A0, (void (*)(uint64_t))sub_1DEB0BD78);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v16 - v1;
  sub_1DEE535A4((uint64_t)&v16 - v1);
  sub_1DEB0BD78();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) == 1)
  {
    sub_1DEA94068((uint64_t)v2, (unint64_t *)&qword_1EAC213A0, (void (*)(uint64_t))sub_1DEB0BD78);
    uint64_t v6 = 0;
  }
  else
  {
    sub_1DFDF14D0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
    uint64_t v7 = v16;
    uint64_t v8 = v17;
    uint64_t v9 = v18;
    unsigned __int8 v10 = v19;
    uint64_t v6 = sub_1DF283D84(v16, v17, v18, v19);
    sub_1DEE81130(v7, v8, v9, v10);
  }
  uint64_t v16 = v6;
  sub_1DEFEC3F4(0, (unint64_t *)&qword_1EBACA540, (void (*)(uint64_t))sub_1DE9CB798);
  char v11 = sub_1DFDFF650();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v12 = (void *)sub_1DFDF2AF0();
  id v13 = objc_msgSend(v12, sel_userInterfaceIdiom);

  if ((unint64_t)v13 + 1 > 6 || ((1 << (v13 + 1)) & 0x59) != 0) {
    goto LABEL_7;
  }
  if (!v13) {
    return 20.0;
  }
  double result = 30.0;
  if (v13 != (id)1)
  {
LABEL_7:
    sub_1DFDF2AB0();
    return v14;
  }
  return result;
}

uint64_t sub_1DEFEB498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void (**a3)(char *, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v122 = a4;
  uint64_t v124 = a3;
  uint64_t v114 = a2;
  uint64_t v132 = type metadata accessor for MagazineGridLayoutModel();
  MEMORY[0x1F4188790](v132);
  uint64_t v130 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1DFDF8FD0();
  uint64_t v133 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  uint64_t v128 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB3C7C4();
  uint64_t v127 = v7;
  uint64_t v131 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_1DFDF7710();
  uint64_t v121 = *(char **)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v120 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF4820();
  uint64_t v118 = *(void *)(v11 - 8);
  uint64_t v119 = v11;
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDF2BF0();
  uint64_t v125 = *(void *)(v14 - 8);
  uint64_t v126 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v112 = (uint64_t)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v111 = (uint64_t)&v109 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v109 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v109 - v22;
  uint64_t v115 = type metadata accessor for MagazineGridSectionHeaderViewLayoutOptions();
  uint64_t v24 = MEMORY[0x1F4188790](v115);
  uint64_t v110 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v109 = (char *)&v109 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v109 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v109 - v31;
  sub_1DEB0BD78();
  uint64_t v116 = a1;
  uint64_t v117 = v33;
  sub_1DFDF14D0();
  uint64_t v34 = v153;
  switch(v155)
  {
    case 1:
      uint64_t v111 = v153;
      uint64_t v112 = v152;
      uint64_t v113 = v154;
      uint64_t v41 = v13;
      (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v21, v114, v126);
      uint64_t v42 = (void *)sub_1DFDF2AF0();
      id v43 = objc_msgSend(v42, sel_horizontalSizeClass);

      if (v43 == (id)2)
      {
        sub_1DFDF2A60();
        double v45 = 9.0;
      }
      else
      {
        double v45 = 4.0;
        double v44 = 16.0;
      }
      id v13 = v41;
      uint64_t v69 = (int *)v115;
      *(double *)&v30[*(int *)(v115 + 32)] = v44;
      *(void *)&v30[v69[7]] = 0x403E000000000000;
      sub_1DFDF2AB0();
      uint64_t v71 = v70;
      sub_1DFDF2AB0();
      uint64_t v73 = v72;
      (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v30, v21, v126);
      uint64_t v74 = (double *)&v30[v69[5]];
      *uint64_t v74 = v45;
      *((void *)v74 + 1) = v71;
      v74[2] = 16.0;
      *((void *)v74 + 3) = v73;
      *(void *)&v30[v69[6]] = 0x404C000000000000;
      uint64_t v75 = v111;
      uint64_t v76 = v112;
      uint64_t v77 = v113;
      sub_1DF39D494(v112, v111, v113, 1, (uint64_t)v30, (uint64_t)&v134);
      sub_1DEFEC36C((uint64_t)v30);
      sub_1DEE81130(v76, v75, v77, 1u);
      long long v149 = v140;
      long long v150 = v141;
      uint64_t v151 = v142;
      long long v145 = v136;
      long long v146 = v137;
      long long v147 = v138;
      long long v148 = v139;
      long long v143 = v134;
      long long v144 = v135;
      sub_1DEFEC3E0((uint64_t)&v143);
      goto LABEL_19;
    case 2:
      uint64_t v112 = v152;
      uint64_t v113 = v154;
      uint64_t v46 = v13;
      uint64_t v47 = v125;
      uint64_t v48 = v111;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v111, v114, v126);
      uint64_t v49 = (void *)sub_1DFDF2AF0();
      id v50 = objc_msgSend(v49, sel_horizontalSizeClass);

      if (v50 == (id)2)
      {
        sub_1DFDF2A60();
        double v52 = 9.0;
      }
      else
      {
        double v52 = 4.0;
        double v51 = 16.0;
      }
      id v13 = v46;
      uint64_t v78 = (int *)v115;
      uint64_t v79 = (uint64_t)v109;
      *(double *)&v109[*(int *)(v115 + 32)] = v51;
      *(void *)(v79 + v78[7]) = 0x403E000000000000;
      sub_1DFDF2AB0();
      uint64_t v81 = v80;
      sub_1DFDF2AB0();
      uint64_t v83 = v82;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v79, v48, v126);
      uint64_t v84 = (double *)(v79 + v78[5]);
      *uint64_t v84 = v52;
      *((void *)v84 + 1) = v81;
      v84[2] = 16.0;
      *((void *)v84 + 3) = v83;
      *(void *)(v79 + v78[6]) = 0x404C000000000000;
      sub_1DF39D494(v112, v34, v113, 2, v79, (uint64_t)&v134);
      sub_1DEFEC36C(v79);
      long long v149 = v140;
      long long v150 = v141;
      uint64_t v151 = v142;
      long long v145 = v136;
      long long v146 = v137;
      long long v147 = v138;
      long long v148 = v139;
      long long v143 = v134;
      long long v144 = v135;
      sub_1DEFEC3D4((uint64_t)&v143);
      sub_1DEE810D4((uint64_t)&v143, (uint64_t)&v152);
      goto LABEL_20;
    case 3:
      uint64_t v53 = v152;
      uint64_t v111 = v153;
      uint64_t v113 = v154;
      uint64_t v54 = v13;
      uint64_t v55 = v125;
      uint64_t v56 = v112;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v112, v114, v126);
      uint64_t v57 = (void *)sub_1DFDF2AF0();
      id v58 = objc_msgSend(v57, sel_horizontalSizeClass);

      if (v58 == (id)2)
      {
        sub_1DFDF2A60();
        double v60 = 9.0;
      }
      else
      {
        double v60 = 4.0;
        double v59 = 16.0;
      }
      id v13 = v54;
      uint64_t v85 = (int *)v115;
      uint64_t v86 = (uint64_t)v110;
      *(double *)&v110[*(int *)(v115 + 32)] = v59;
      *(void *)(v86 + v85[7]) = 0x403E000000000000;
      sub_1DFDF2AB0();
      uint64_t v88 = v87;
      sub_1DFDF2AB0();
      uint64_t v90 = v89;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v86, v56, v126);
      uint64_t v91 = (double *)(v86 + v85[5]);
      *uint64_t v91 = v60;
      *((void *)v91 + 1) = v88;
      v91[2] = 16.0;
      *((void *)v91 + 3) = v90;
      *(void *)(v86 + v85[6]) = 0x404C000000000000;
      uint64_t v92 = v111;
      uint64_t v93 = v113;
      sub_1DF39D494(v53, v111, v113, 3, v86, (uint64_t)&v134);
      sub_1DEFEC36C(v86);
      sub_1DEE81130(v53, v92, v93, 3u);
      long long v149 = v140;
      long long v150 = v141;
      uint64_t v151 = v142;
      long long v145 = v136;
      long long v146 = v137;
      long long v147 = v138;
      long long v148 = v139;
      long long v143 = v134;
      long long v144 = v135;
      sub_1DEFEC3C8((uint64_t)&v143);
      goto LABEL_19;
    case 4:
      sub_1DEE81130(v152, v153, v154, 4u);
      sub_1DEFEC1B0((uint64_t)&v143);
      goto LABEL_19;
    default:
      uint64_t v112 = v152;
      uint64_t v113 = v154;
      unsigned __int8 v35 = v13;
      uint64_t v36 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v23, v114, v126);
      uint64_t v37 = (void *)sub_1DFDF2AF0();
      id v38 = objc_msgSend(v37, sel_horizontalSizeClass);

      if (v38 == (id)2)
      {
        sub_1DFDF2A60();
        double v40 = 9.0;
      }
      else
      {
        double v40 = 4.0;
        double v39 = 16.0;
      }
      id v13 = v35;
      uint64_t v61 = (int *)v115;
      *(double *)&v32[*(int *)(v115 + 32)] = v39;
      *(void *)&v32[v61[7]] = 0x403E000000000000;
      sub_1DFDF2AB0();
      uint64_t v63 = v62;
      sub_1DFDF2AB0();
      uint64_t v65 = v64;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v23, v126);
      uint64_t v66 = (double *)&v32[v61[5]];
      *uint64_t v66 = v40;
      *((void *)v66 + 1) = v63;
      void v66[2] = 16.0;
      *((void *)v66 + 3) = v65;
      *(void *)&v32[v61[6]] = 0x404C000000000000;
      uint64_t v68 = v112;
      uint64_t v67 = v113;
      sub_1DF39D494(v112, v34, v113, 0, (uint64_t)v32, (uint64_t)&v134);
      sub_1DEFEC36C((uint64_t)v32);
      sub_1DEE81130(v68, v34, v67, 0);
      long long v149 = v140;
      long long v150 = v141;
      uint64_t v151 = v142;
      long long v145 = v136;
      long long v146 = v137;
      long long v147 = v138;
      long long v148 = v139;
      long long v143 = v134;
      long long v144 = v135;
      sub_1DEFEC3EC((uint64_t)&v143);
LABEL_19:
      sub_1DEE810D4((uint64_t)&v143, (uint64_t)&v152);
LABEL_20:
      sub_1DEE810D4((uint64_t)&v152, (uint64_t)&v143);
      (*(void (**)(char *, void, uint64_t))(v118 + 104))(v13, *MEMORY[0x1E4FAD568], v119);
      sub_1DEFEC1D4();
      long long v134 = 0u;
      long long v135 = 0u;
      *(void *)&long long v136 = 0;
      uint64_t v94 = v120;
      sub_1DFDF7750();
      sub_1DEA94068((uint64_t)&v134, &qword_1EBABA290, (void (*)(uint64_t))sub_1DEAC0498);
      uint64_t v95 = sub_1DFDF76A0();
      (*((void (**)(char *, uint64_t))v121 + 1))(v94, v123);
      int64_t v96 = *(void *)(v95 + 16);
      if (v96)
      {
        uint64_t v121 = v13;
        *(void *)&long long v134 = MEMORY[0x1E4FBC860];
        sub_1DEDF7934(0, v96, 0);
        uint64_t v97 = *(void (**)(char *, unint64_t, uint64_t))(v133 + 16);
        unint64_t v98 = (*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
        uint64_t v120 = (char *)v95;
        unint64_t v99 = v95 + v98;
        uint64_t v125 = *(void *)(v133 + 72);
        uint64_t v126 = (uint64_t)v97;
        v133 += 16;
        uint64_t v123 = v131 + 32;
        uint64_t v124 = (void (**)(char *, uint64_t))(v133 - 8);
        unint64_t v100 = v128;
        uint64_t v101 = v97;
        do
        {
          uint64_t v102 = v129;
          uint64_t v103 = v9;
          v101(v100, v99, v129);
          v101(v130, (unint64_t)v100, v102);
          sub_1DEFEC324(&qword_1EAC201D0, (void (*)(uint64_t))type metadata accessor for MagazineGridLayoutModel);
          sub_1DFDF2110();
          (*v124)(v100, v102);
          uint64_t v104 = v134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DEDF7934(0, *(void *)(v104 + 16) + 1, 1);
            uint64_t v104 = v134;
          }
          unint64_t v106 = *(void *)(v104 + 16);
          unint64_t v105 = *(void *)(v104 + 24);
          if (v106 >= v105 >> 1)
          {
            sub_1DEDF7934(v105 > 1, v106 + 1, 1);
            uint64_t v104 = v134;
          }
          *(void *)(v104 + 16) = v106 + 1;
          unint64_t v107 = v104
               + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))
               + *(void *)(v131 + 72) * v106;
          uint64_t v9 = v103;
          (*(void (**)(unint64_t, char *, uint64_t))(v131 + 32))(v107, v103, v127);
          *(void *)&long long v134 = v104;
          v99 += v125;
          --v96;
        }
        while (v96);
      }
      swift_bridgeObjectRelease();
      sub_1DEFEC2D0();
      sub_1DEFEC324(&qword_1EAC29BA0, (void (*)(uint64_t))type metadata accessor for MagazineGridLayoutModel);
      return sub_1DFDF2C30();
  }
}

uint64_t sub_1DEFEC168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEFEA258(a1, a2);
}

uint64_t sub_1DEFEC18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEFEB498(a1, *(void *)(v2 + 24), *(void (***)(char *, uint64_t))(v2 + 32), a2);
}

double sub_1DEFEC1B0(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 136) = 4;
  return result;
}

unint64_t sub_1DEFEC1D4()
{
  unint64_t result = qword_1EAC27640;
  if (!qword_1EAC27640)
  {
    sub_1DEB0BD78();
    sub_1DEFEC27C();
    sub_1DEFEC324(&qword_1EAC27650, (void (*)(uint64_t))type metadata accessor for MagazineGridItemModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27640);
  }
  return result;
}

unint64_t sub_1DEFEC27C()
{
  unint64_t result = qword_1EAC27648;
  if (!qword_1EAC27648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27648);
  }
  return result;
}

unint64_t sub_1DEFEC2D0()
{
  unint64_t result = qword_1EAC27658;
  if (!qword_1EAC27658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27658);
  }
  return result;
}

uint64_t sub_1DEFEC324(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFEC36C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MagazineGridSectionHeaderViewLayoutOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEFEC3C8(uint64_t result)
{
  *(unsigned char *)(result + 136) = 3;
  return result;
}

uint64_t sub_1DEFEC3D4(uint64_t result)
{
  *(unsigned char *)(result + 136) = 2;
  return result;
}

uint64_t sub_1DEFEC3E0(uint64_t result)
{
  *(unsigned char *)(result + 136) = 1;
  return result;
}

uint64_t sub_1DEFEC3EC(uint64_t result)
{
  *(unsigned char *)(result + 136) = 0;
  return result;
}

void sub_1DEFEC3F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DEFEC448@<X0>(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(v1 + 88), sel_possiblyUnfetchedAppConfiguration);
  id v34 = v3;
  if ((objc_msgSend(v3, sel_respondsToSelector_, sel_sportsFavoritesSyncModalConfig) & 1) != 0
    && (id v4 = objc_msgSend(v3, sel_sportsFavoritesSyncModalConfig),
        id v5 = objc_msgSend(v4, sel_titleText),
        v4,
        id v3 = v34,
        v5))
  {
    uint64_t v6 = sub_1DFDFDD20();
  }
  else
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v6 = sub_1DFDE6ED0();
  }
  uint64_t v32 = v7;
  uint64_t v33 = v6;

  if ((objc_msgSend(v3, sel_respondsToSelector_, sel_sportsFavoritesSyncModalConfig) & 1) != 0
    && (id v9 = objc_msgSend(v3, sel_sportsFavoritesSyncModalConfig),
        id v10 = objc_msgSend(v9, sel_bodyText),
        v9,
        v10))
  {
    uint64_t v11 = sub_1DFDFDD20();
  }
  else
  {
    type metadata accessor for Localized();
    uint64_t v13 = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, v13);
    uint64_t v11 = sub_1DFDE6ED0();
  }
  uint64_t v30 = v12;
  uint64_t v31 = v11;

  uint64_t v29 = sub_1DEFECBB4();
  uint64_t v15 = v14;
  type metadata accessor for Localized();
  uint64_t v16 = swift_getObjCClassFromMetadata();
  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_bundleForClass_, v16);
  uint64_t v19 = sub_1DFDE6ED0();
  uint64_t v21 = v20;

  id v22 = objc_msgSend(v17, sel_bundleForClass_, v16, 0x80000001DFEDA0A0);
  uint64_t v23 = sub_1DFDE6ED0();
  uint64_t v25 = v24;

  uint64_t v27 = *(void *)(v1 + 72);
  uint64_t v26 = *(void *)(v1 + 80);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 48), v27);
  (*(void (**)(uint64_t, uint64_t))(v26 + 24))(v27, v26);
  uint64_t result = swift_unknownObjectRelease();
  *a1 = v33;
  a1[1] = v32;
  a1[2] = v31;
  a1[3] = v30;
  a1[4] = v29;
  a1[5] = v15;
  a1[6] = 0xD00000000000001DLL;
  a1[7] = 0x80000001DFEDA080;
  a1[8] = v19;
  a1[9] = v21;
  a1[10] = v23;
  a1[11] = v25;
  return result;
}

uint64_t sub_1DEFEC800()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = MEMORY[0x1E01EFB70](result + 16);
    if (v2)
    {
      uint64_t v3 = *(void *)(v1 + 32);
      uint64_t v5 = *(void *)(v3 + 16);
      unint64_t v4 = *(void *)(v3 + 24);
      uint64_t v6 = *__swift_project_boxed_opaque_existential_1((void *)(v2 + 48), *(void *)(v2 + 72));
      uint64_t v7 = MEMORY[0x1E01EFB70](v6 + 16);
      if (v7)
      {
        uint64_t v8 = (void *)v7;
        id v9 = (void *)swift_allocObject();
        v9[2] = v5;
        v9[3] = v4;
        v9[4] = v6;
        aBlock[4] = sub_1DEFECF04;
        aBlock[5] = v9;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DE9744A8;
        aBlock[3] = &block_descriptor_14_1;
        id v10 = _Block_copy(aBlock);
        sub_1DEFECED4(v5, v4);
        sub_1DEFECED4(v5, v4);
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v8, sel_dismissViewControllerAnimated_completion_, 1, v10);
        _Block_release(v10);
        swift_unknownObjectRelease();
        swift_release_n();
      }
      else
      {
        sub_1DEFECED4(v5, v4);
        swift_release();
        swift_unknownObjectRelease();
      }
      return sub_1DEFECEE8(v5, v4);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_1DEFEC9C0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = MEMORY[0x1E01EFB70](Strong + 16);
    if (v1)
    {
      uint64_t v2 = *__swift_project_boxed_opaque_existential_1((void *)(v1 + 48), *(void *)(v1 + 72));
      uint64_t v3 = MEMORY[0x1E01EFB70](v2 + 16);
      if (v3)
      {
        unint64_t v4 = (void *)v3;
        uint64_t v5 = (void *)swift_allocObject();
        v5[2] = 0;
        v5[3] = 0;
        v5[4] = v2;
        aBlock[4] = sub_1DEFECEC4;
        aBlock[5] = v5;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DE9744A8;
        aBlock[3] = &block_descriptor_61;
        uint64_t v6 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, v6);
        _Block_release(v6);
        swift_unknownObjectRelease();
        swift_release_n();
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1DEFECB40()
{
  sub_1DEB1DDEC(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SportsFavoritesSyncInteractor()
{
  return self;
}

uint64_t sub_1DEFECBB4()
{
  id v0 = objc_msgSend(self, sel_sharedAccount);
  id v1 = objc_msgSend(v0, sel_contentStoreFrontID);

  if (!v1)
  {
    sub_1DFDFDD20();
    goto LABEL_10;
  }
  uint64_t v2 = sub_1DFDFDD20();
  uint64_t v4 = v3;

  uint64_t v5 = sub_1DFDFDD20();
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1DFDFDD20();
    swift_bridgeObjectRelease();
    sub_1DFDFDD20();
    swift_bridgeObjectRelease();
    sub_1DFDFDD20();
    swift_bridgeObjectRelease();
    sub_1DFDFDD20();
    goto LABEL_11;
  }
  if (v5 == v2 && v4 == v6) {
    goto LABEL_21;
  }
  char v8 = sub_1DFDFFF50();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_11;
  }
  if (sub_1DFDFDD20() == v2 && v4 == v9) {
    goto LABEL_21;
  }
  char v11 = sub_1DFDFFF50();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_11;
  }
  if (sub_1DFDFDD20() == v2 && v4 == v12) {
    goto LABEL_21;
  }
  char v14 = sub_1DFDFFF50();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_11;
  }
  if (sub_1DFDFDD20() == v2 && v4 == v15)
  {
LABEL_21:
    swift_bridgeObjectRelease_n();
    return 0x676F6C2D636E7973;
  }
  char v16 = sub_1DFDFFF50();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    if (sub_1DFDFDD20() != v2 || v4 != v17)
    {
      sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0x676F6C2D636E7973;
    }
    goto LABEL_21;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0x676F6C2D636E7973;
}

uint64_t sub_1DEFECEC4()
{
  return sub_1DF8E5520(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DEFECED4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DEFECEE8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DEFECF08(long long *a1)
{
  id v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEFEF178(0, (unint64_t *)&unk_1EBAEAD80, MEMORY[0x1E4FAAC40], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = sub_1DFDED4D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DFE0B750;
  uint64_t v7 = (char *)(v6 + v5);
  *(void *)uint64_t v7 = 0x6569766572706461;
  *((void *)v7 + 1) = 0xEB00000000646977;
  char v8 = *(void (**)(void))(v3 + 104);
  ((void (*)(unint64_t, void, uint64_t))v8)(v6 + v5, *MEMORY[0x1E4FAAC28], v2);
  strcpy(&v7[v4], "adpreviewlimit");
  v7[v4 + 15] = -18;
  v8();
  sub_1DEFEF178(0, (unint64_t *)&unk_1EBAEAFD0, (uint64_t (*)(uint64_t))sub_1DEBB9370, v1);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  *(void *)(inited + 32) = 0x49656C6369747261;
  *(void *)(inited + 40) = 0xE900000000000044;
  sub_1DEFEF178(0, (unint64_t *)&unk_1EBAEAD90, MEMORY[0x1E4FAAC58], v1);
  uint64_t v10 = sub_1DFDED550();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v22 = *(void *)(v11 + 72);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DFE0B750;
  char v14 = (void *)(v13 + v12);
  void *v14 = 65;
  v14[1] = 0xE100000000000000;
  uint64_t v15 = *(void (**)(void))(v11 + 104);
  unsigned int v21 = *MEMORY[0x1E4FAAC48];
  uint64_t result = ((uint64_t (*)(unint64_t))v15)(v13 + v12);
  uint64_t v17 = *MEMORY[0x1E4F7DE68];
  if ((*MEMORY[0x1E4F7DE68] & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)((char *)v14 + v22) = v17;
    v15();
    *(void *)(inited + 48) = v13;
    *(void *)(inited + 56) = 0x4449676174;
    *(void *)(inited + 64) = 0xE500000000000000;
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1DFE0B750;
    uint64_t v19 = (void *)(v18 + v12);
    *uint64_t v19 = 84;
    v19[1] = 0xE100000000000000;
    ((void (*)(void *, void, uint64_t))v15)(v19, v21, v10);
    *(void *)((char *)v19 + v22) = v17;
    v15();
    *(void *)(inited + 72) = v18;
    sub_1DF3496D4(inited);
    uint64_t v20 = sub_1DFDED510();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v24 + 16) = v20;
    sub_1DE942EC4(a1, v24 + 24);
    return v24;
  }
  return result;
}

uint64_t sub_1DEFED2E0(uint64_t a1)
{
  uint64_t v2 = sub_1DFDED560();
  uint64_t v70 = *(void *)(v2 - 8);
  uint64_t v71 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v69 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF6B00();
  uint64_t v78 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v85 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDED140();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v74 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v68 - v11;
  MEMORY[0x1F4188790](v10);
  char v14 = (char *)&v68 - v13;
  uint64_t v15 = sub_1DFDED180();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v68 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v73 = (char *)&v68 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v68 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v68 - v24;
  sub_1DEFEF178(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  uint64_t v81 = a1;
  uint64_t v82 = v26;
  sub_1DFDED420();
  sub_1DFDED160();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v79 = v15;
  uint64_t v84 = v27;
  v27(v25, v15);
  uint64_t v28 = sub_1DFDED150();
  uint64_t v30 = v29;
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v80 = v6;
  uint64_t result = v31(v14, v6);
  if (v30)
  {
    uint64_t v75 = (void (*)(char *, uint64_t))v31;
    uint64_t v76 = v4;
    if (qword_1EAC1D410 != -1) {
      swift_once();
    }
    sub_1DEFEF178(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1DFE0B250;
    *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v33 + 64) = sub_1DEA08668();
    *(void *)(v33 + 32) = v28;
    *(void *)(v33 + 40) = v30;
    swift_bridgeObjectRetain();
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    sub_1DFDF6AE0();
    uint64_t v83 = sub_1DEFEE0B8();
    sub_1DFDED420();
    sub_1DFDED160();
    uint64_t v34 = v79;
    v84(v23, v79);
    uint64_t v35 = sub_1DFDED150();
    uint64_t v36 = v12;
    uint64_t v38 = v37;
    uint64_t v39 = v80;
    double v40 = v75;
    v75(v36, v80);
    if (v38)
    {
      uint64_t v41 = v77;
      uint64_t v84 = (void (*)(char *, uint64_t))(v77 + 3);
      uint64_t v42 = v77[6];
      uint64_t v82 = v77[7];
      __swift_project_boxed_opaque_existential_1(v77 + 3, v42);
      sub_1DFDF6360();
      uint64_t v43 = swift_allocObject();
      uint64_t v72 = v35;
      *(void *)(v43 + 16) = v35;
      *(void *)(v43 + 24) = v38;
      sub_1DFDF68B0();
      sub_1DFDF68F0();
      sub_1DFDF6980();
      sub_1DEFEF3D0((unint64_t *)&unk_1EBAA86C0, 255, MEMORY[0x1E4F7AF00]);
      swift_bridgeObjectRetain();
      sub_1DFDF66B0();
      swift_release();
      swift_release();
      uint64_t v44 = v41[6];
      uint64_t v82 = v41[7];
      __swift_project_boxed_opaque_existential_1(v84, v44);
      sub_1DFDF6370();
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v72;
      *(void *)(v45 + 24) = v38;
      sub_1DFDF6900();
      sub_1DFDF6690();
      sub_1DFDF6720();
      sub_1DEFEF3D0(&qword_1EBAD34C8, 255, MEMORY[0x1E4F7AF40]);
      swift_bridgeObjectRetain();
      sub_1DFDF66B0();
      swift_release();
      swift_release();
      __swift_project_boxed_opaque_existential_1(v84, v41[6]);
      sub_1DFDF6380();
      sub_1DFDF6350();
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v72;
      *(void *)(v46 + 24) = v38;
      sub_1DFDF65C0();
      sub_1DFDF6640();
      sub_1DFDF6680();
      sub_1DEFEF3D0((unint64_t *)&unk_1EBAA8668, 255, MEMORY[0x1E4F7AC20]);
      uint64_t v47 = v85;
      sub_1DFDF66B0();
    }
    else
    {
      uint64_t v48 = v73;
      uint64_t v49 = v39;
      sub_1DFDED420();
      id v50 = v74;
      sub_1DFDED160();
      double v51 = v84;
      v84(v48, v34);
      uint64_t v52 = sub_1DFDED150();
      uint64_t v54 = v53;
      v40(v50, v49);
      if (!v54)
      {
        uint64_t v61 = v68;
        sub_1DFDED420();
        uint64_t v62 = v69;
        sub_1DFDED170();
        v51(v61, v34);
        uint64_t v63 = sub_1DFDED4C0();
        uint64_t v65 = v64;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v62, v71);
        uint64_t v60 = v76;
        uint64_t v59 = v78;
        uint64_t v47 = v85;
        if (!v65) {
          return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v47, v60);
        }
        if (v63 == 0x756F79726F662FLL && v65 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v66 = sub_1DFDFFF50();
          swift_bridgeObjectRelease();
          if ((v66 & 1) == 0) {
            return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v47, v60);
          }
        }
        uint64_t v67 = v77;
        __swift_project_boxed_opaque_existential_1(v77 + 3, v77[6]);
        sub_1DFDF6330();
        sub_1DFDF6760();
        sub_1DFDF67B0();
        sub_1DFDF6880();
        sub_1DEFEF3D0((unint64_t *)&unk_1EBAA86A0, 255, MEMORY[0x1E4F7AE10]);
        uint64_t v47 = v85;
        sub_1DFDF66B0();
        swift_release();
        __swift_project_boxed_opaque_existential_1(v67 + 3, v67[6]);
        sub_1DFDF6380();
        sub_1DFDF6350();
        sub_1DFDF65C0();
        sub_1DFDF6640();
        sub_1DFDF6680();
        sub_1DEFEF3D0((unint64_t *)&unk_1EBAA8668, 255, MEMORY[0x1E4F7AC20]);
        sub_1DFDF66B0();
LABEL_9:
        swift_release();
        uint64_t v60 = v76;
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v47, v60);
      }
      uint64_t v55 = v77;
      uint64_t v84 = (void (*)(char *, uint64_t))(v77 + 3);
      uint64_t v56 = v77[6];
      uint64_t v82 = v77[7];
      __swift_project_boxed_opaque_existential_1(v77 + 3, v56);
      sub_1DFDF6330();
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v52;
      *(void *)(v57 + 24) = v54;
      sub_1DFDF6760();
      sub_1DFDF67B0();
      sub_1DFDF6880();
      sub_1DEFEF3D0((unint64_t *)&unk_1EBAA86A0, 255, MEMORY[0x1E4F7AE10]);
      uint64_t v81 = v52;
      swift_bridgeObjectRetain();
      sub_1DFDF66B0();
      swift_release();
      swift_release();
      __swift_project_boxed_opaque_existential_1(v84, v55[6]);
      sub_1DFDF6380();
      sub_1DFDF6350();
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = v81;
      *(void *)(v58 + 24) = v54;
      sub_1DFDF65C0();
      sub_1DFDF6640();
      sub_1DFDF6680();
      sub_1DEFEF3D0((unint64_t *)&unk_1EBAA8668, 255, MEMORY[0x1E4F7AC20]);
      uint64_t v47 = v85;
      sub_1DFDF66B0();
    }
    swift_release();
    uint64_t v59 = v78;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1DEFEE0B8()
{
  uint64_t v0 = sub_1DFDED140();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v32[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDED180();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFEF178(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  sub_1DFDED420();
  sub_1DFDED160();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v8 = sub_1DFDED150();
  unint64_t v10 = v9;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!v10) {
    return 1;
  }
  uint64_t v12 = HIBYTE(v10) & 0xF;
  uint64_t v13 = v8 & 0xFFFFFFFFFFFFLL;
  if ((v10 & 0x2000000000000000) != 0) {
    uint64_t v14 = HIBYTE(v10) & 0xF;
  }
  else {
    uint64_t v14 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if ((v10 & 0x1000000000000000) == 0)
  {
    if ((v10 & 0x2000000000000000) == 0)
    {
      if ((v8 & 0x1000000000000000) != 0) {
        uint64_t v15 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v15 = (unsigned __int8 *)sub_1DFDFFA40();
      }
      uint64_t v16 = (uint64_t)sub_1DEE57B90(v15, v13, 10);
      LOBYTE(v8) = v17 & 1;
      goto LABEL_45;
    }
    v32[0] = v8;
    v32[1] = v10 & 0xFFFFFFFFFFFFFFLL;
    if (v8 == 43)
    {
      if (!v12) {
        goto LABEL_59;
      }
      if (v12 == 1 || (BYTE1(v8) - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v16 = (BYTE1(v8) - 48);
      if (v12 != 2)
      {
        if ((BYTE2(v8) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v16 = 10 * (BYTE1(v8) - 48) + (BYTE2(v8) - 48);
        uint64_t v18 = v12 - 3;
        if (v18)
        {
          uint64_t v19 = (unsigned __int8 *)v32 + 3;
          while (1)
          {
            unsigned int v20 = *v19 - 48;
            if (v20 > 9) {
              goto LABEL_32;
            }
            uint64_t v21 = 10 * v16;
            if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
              goto LABEL_32;
            }
            uint64_t v16 = v21 + v20;
            if (__OFADD__(v21, v20)) {
              goto LABEL_32;
            }
            LOBYTE(v8) = 0;
            ++v19;
            if (!--v18) {
              goto LABEL_45;
            }
          }
        }
      }
    }
    else
    {
      if (v8 == 45)
      {
        if (v12)
        {
          if (v12 != 1 && (BYTE1(v8) - 48) <= 9u)
          {
            if (v12 == 2)
            {
              LOBYTE(v8) = 0;
              uint64_t v16 = -(uint64_t)(BYTE1(v8) - 48);
              goto LABEL_45;
            }
            if ((BYTE2(v8) - 48) <= 9u)
            {
              uint64_t v16 = -10 * (BYTE1(v8) - 48) - (BYTE2(v8) - 48);
              uint64_t v26 = v12 - 3;
              if (!v26) {
                goto LABEL_44;
              }
              uint64_t v27 = (unsigned __int8 *)v32 + 3;
              while (1)
              {
                unsigned int v28 = *v27 - 48;
                if (v28 > 9) {
                  break;
                }
                uint64_t v29 = 10 * v16;
                if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                  break;
                }
                uint64_t v16 = v29 - v28;
                if (__OFSUB__(v29, v28)) {
                  break;
                }
                LOBYTE(v8) = 0;
                ++v27;
                if (!--v26) {
                  goto LABEL_45;
                }
              }
            }
          }
LABEL_32:
          uint64_t v16 = 0;
          LOBYTE(v8) = 1;
          goto LABEL_45;
        }
        __break(1u);
LABEL_59:
        __break(1u);
        return result;
      }
      if (!v12 || (v8 - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v16 = (v8 - 48);
      if (v12 != 1)
      {
        if ((BYTE1(v8) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v16 = 10 * (v8 - 48) + (BYTE1(v8) - 48);
        uint64_t v22 = v12 - 2;
        if (v22)
        {
          uint64_t v23 = (unsigned __int8 *)v32 + 2;
          while (1)
          {
            unsigned int v24 = *v23 - 48;
            if (v24 > 9) {
              goto LABEL_32;
            }
            uint64_t v25 = 10 * v16;
            if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
              goto LABEL_32;
            }
            uint64_t v16 = v25 + v24;
            if (__OFADD__(v25, v24)) {
              goto LABEL_32;
            }
            LOBYTE(v8) = 0;
            ++v23;
            if (!--v22) {
              goto LABEL_45;
            }
          }
        }
      }
    }
LABEL_44:
    LOBYTE(v8) = 0;
    goto LABEL_45;
  }
  uint64_t v16 = sub_1DEE57BA8(v8, v10, 10);
  LOBYTE(v8) = v30;
LABEL_45:
  swift_bridgeObjectRelease();
  if (v8) {
    return 1;
  }
  else {
    return v16;
  }
}

uint64_t sub_1DEFEE538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEFEF178(0, &qword_1EAC27660, MEMORY[0x1E4F7A890], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - v6;
  sub_1DFDF65A0();
  uint64_t v8 = sub_1DFDF64B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1DEFEF1DC((uint64_t)v7, &qword_1EAC27660, MEMORY[0x1E4F7A890]);
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  else
  {
    uint64_t v10 = sub_1DFDF64A0();
    unint64_t v11 = v12;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  if (v10 == a2 && v11 == a3) {
    char v14 = 1;
  }
  else {
    char v14 = sub_1DFDFFF50();
  }
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t sub_1DEFEE6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t))
{
  uint64_t v10 = a4(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  char v14 = (char *)&v22 - v13;
  uint64_t v15 = a5(v12);
  uint64_t v16 = a6(v15);
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (v16 == a2 && v18 == a3) {
    char v20 = 1;
  }
  else {
    char v20 = sub_1DFDFFF50();
  }
  swift_bridgeObjectRelease();
  return v20 & 1;
}

uint64_t sub_1DEFEE828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEFEF178(0, &qword_1EAC27668, MEMORY[0x1E4F7A7D8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - v6;
  sub_1DFDF65B0();
  uint64_t v8 = sub_1DFDF63D0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1DEFEF1DC((uint64_t)v7, &qword_1EAC27668, MEMORY[0x1E4F7A7D8]);
    char v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_1DFDF63A0();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (v11 == a2 && v13 == a3)
    {
      swift_bridgeObjectRelease();
      char v10 = 1;
    }
    else
    {
      char v10 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
    }
  }
  return v10 & 1;
}

uint64_t sub_1DEFEE9DC()
{
  uint64_t v0 = sub_1DFDF63D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF6750();
  if (qword_1EBABE6C0 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62738);
  char v5 = MEMORY[0x1E01E4BF0](v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5 & 1;
}

uint64_t sub_1DEFEEAF4()
{
  uint64_t v0 = sub_1DFDF63D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFEF24C();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFEF178(0, &qword_1EAC27668, MEMORY[0x1E4F7A7D8], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  char v14 = (char *)&v26 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v26 - v15;
  sub_1DFDF65B0();
  if (qword_1EBABE6C0 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62738);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v14, v17, v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v14, 0, 1, v0);
  uint64_t v18 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_1DEFEF2E0((uint64_t)v16, (uint64_t)v7);
  sub_1DEFEF2E0((uint64_t)v14, v18);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v19((uint64_t)v7, 1, v0) != 1)
  {
    sub_1DEFEF2E0((uint64_t)v7, (uint64_t)v11);
    if (v19(v18, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v18, v0);
      sub_1DEFEF3D0(&qword_1EAC27678, 255, MEMORY[0x1E4F7A7D8]);
      char v21 = sub_1DFDFDC70();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v1 + 8);
      v23(v3, v0);
      unsigned int v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7A7D8];
      sub_1DEFEF1DC((uint64_t)v14, &qword_1EAC27668, MEMORY[0x1E4F7A7D8]);
      sub_1DEFEF1DC((uint64_t)v16, &qword_1EAC27668, v24);
      v23(v11, v0);
      sub_1DEFEF1DC((uint64_t)v7, &qword_1EAC27668, v24);
      return v21 & 1;
    }
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7A7D8];
    sub_1DEFEF1DC((uint64_t)v14, &qword_1EAC27668, MEMORY[0x1E4F7A7D8]);
    sub_1DEFEF1DC((uint64_t)v16, &qword_1EAC27668, v22);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v11, v0);
    goto LABEL_8;
  }
  char v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7A7D8];
  sub_1DEFEF1DC((uint64_t)v14, &qword_1EAC27668, MEMORY[0x1E4F7A7D8]);
  sub_1DEFEF1DC((uint64_t)v16, &qword_1EAC27668, v20);
  if (v19(v18, 1, v0) != 1)
  {
LABEL_8:
    sub_1DEFEF374((uint64_t)v7);
    char v21 = 0;
    return v21 & 1;
  }
  sub_1DEFEF1DC((uint64_t)v7, &qword_1EAC27668, MEMORY[0x1E4F7A7D8]);
  char v21 = 1;
  return v21 & 1;
}

uint64_t type metadata accessor for AdPreviewURLHandlerProcessor()
{
  return self;
}

uint64_t sub_1DEFEEFB0(uint64_t a1)
{
  return sub_1DEFED2E0(a1);
}

uint64_t sub_1DEFEEFD4(uint64_t a1, uint64_t a2)
{
  return sub_1DEFEF3D0((unint64_t *)&unk_1EBADE3B8, a2, (void (*)(uint64_t))type metadata accessor for AdPreviewURLHandlerProcessor);
}

uint64_t sub_1DEFEF01C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEFEF054(uint64_t a1)
{
  return sub_1DEFEE6EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), MEMORY[0x1E4F7A7D8], MEMORY[0x1E4F7AE00], MEMORY[0x1E4F7A7C8]) & 1;
}

uint64_t sub_1DEFEF0B0(uint64_t a1)
{
  return sub_1DEFEE828(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DEFEF0B8(uint64_t a1)
{
  return sub_1DEFEE6EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), MEMORY[0x1E4F7A890], MEMORY[0x1E4F7AEF0], MEMORY[0x1E4F7A880]) & 1;
}

uint64_t sub_1DEFEF114(uint64_t a1)
{
  return sub_1DEFEE6EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), MEMORY[0x1E4F7A890], MEMORY[0x1E4F7AF30], MEMORY[0x1E4F7A880]) & 1;
}

uint64_t sub_1DEFEF170(uint64_t a1)
{
  return sub_1DEFEE538(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1DEFEF178(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DEFEF1DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DEFEF178(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1DEFEF24C()
{
  if (!qword_1EAC27670)
  {
    sub_1DEFEF178(255, &qword_1EAC27668, MEMORY[0x1E4F7A7D8], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC27670);
    }
  }
}

uint64_t sub_1DEFEF2E0(uint64_t a1, uint64_t a2)
{
  sub_1DEFEF178(0, &qword_1EAC27668, MEMORY[0x1E4F7A7D8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEFEF374(uint64_t a1)
{
  sub_1DEFEF24C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEFEF3D0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFEF428()
{
  sub_1DEFEF570(v0 + OBJC_IVAR____TtC7NewsUI214WebEmbedStyler_resource);
  return swift_deallocClassInstance();
}

uint64_t sub_1DEFEF48C()
{
  return type metadata accessor for WebEmbedStyler();
}

uint64_t type metadata accessor for WebEmbedStyler()
{
  uint64_t result = qword_1EAC27688;
  if (!qword_1EAC27688) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFEF4E0()
{
  uint64_t result = type metadata accessor for WebEmbedResource();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DEFEF570(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WebEmbedResource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TodayModule.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return v0;
}

uint64_t sub_1DEFEF60C()
{
  return objectdestroyTm_23(MEMORY[0x1E4FBC938]);
}

uint64_t sub_1DEFEF624()
{
  return objectdestroyTm_23(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1DEFEF63C()
{
  return objectdestroyTm_23(MEMORY[0x1E4FBC938]);
}

uint64_t dispatch thunk of TodayModuleType.createViewController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for TodayModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TodayModule);
}

uint64_t sub_1DEFEF680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFEF694);
}

uint64_t sub_1DEFEF694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEBE3100();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DEFEF754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFEF768);
}

void sub_1DEFEF768(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEBE3100();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for SportsScheduleTagFeedGroupKnobs()
{
  uint64_t result = qword_1EBAE2B18;
  if (!qword_1EBAE2B18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFEF870()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEFEF908()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEFEF98C()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEFEFA20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DEFF0BD8();
  *a1 = result;
  return result;
}

void sub_1DEFEFA50(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE300000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x65756761656CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x676E696D6F637075;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 7954788;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DEFEFAA4()
{
  return sub_1DFDFE1D0();
}

uint64_t sub_1DEFEFB04()
{
  return sub_1DFDFE180();
}

uint64_t sub_1DEFEFB54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF2A40B8(*a1, *a2);
}

uint64_t sub_1DEFEFB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v25 = a4;
  sub_1DEC49A20();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBE3100();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1;
  sub_1DED26B68(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    type metadata accessor for TagFeedServiceConfig();
    sub_1DEAD9608(&qword_1EBAD8430, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
    sub_1DFDF8040();
    sub_1DED26BCC((uint64_t)v11);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v18(v16, v11, v13);
  }
  uint64_t v19 = v17;
  uint64_t v20 = v25;
  v18(a5, v16, v13);
  if (a2)
  {
    uint64_t v21 = a2;
  }
  else
  {
    char v28 = 0;
    sub_1DEFF0638();
    swift_allocObject();
    uint64_t v21 = sub_1DFDF8C00();
  }
  uint64_t v22 = (int *)type metadata accessor for SportsScheduleTagFeedGroupKnobs();
  *(void *)&a5[v22[5]] = v21;
  if (a3)
  {
    swift_retain();
  }
  else
  {
    char v27 = 1;
    sub_1DEAC05D8();
    swift_allocObject();
    swift_retain();
    a3 = sub_1DFDF8C00();
  }
  *(void *)&a5[v22[6]] = a3;
  if (!v20)
  {
    uint64_t v26 = 14;
    sub_1DEA0F99C();
    swift_allocObject();
    uint64_t v20 = sub_1DFDF8C00();
  }
  swift_release();
  uint64_t result = sub_1DED26BCC(v19);
  *(void *)&a5[v22[7]] = v20;
  return result;
}

uint64_t sub_1DEFEFE88@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  sub_1DEC49A20();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF080C(0, &qword_1EAC27698, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v16 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFF07B8();
  sub_1DFE00190();
  if (!v2)
  {
    sub_1DEBE3100();
    LOBYTE(v20) = 0;
    sub_1DEAD9608((unint64_t *)&unk_1EBAE95D0, (void (*)(uint64_t))sub_1DEBE3100);
    sub_1DFDFFCD0();
    sub_1DEFF0638();
    LOBYTE(v19) = 1;
    sub_1DEAD9608(&qword_1EAC276A8, (void (*)(uint64_t))sub_1DEFF0638);
    sub_1DFDFFCD0();
    uint64_t v15 = v20;
    sub_1DEAC05D8();
    LOBYTE(v18) = 2;
    sub_1DEAD9608(&qword_1EBAE9898, (void (*)(uint64_t))sub_1DEAC05D8);
    sub_1DFDFFCD0();
    uint64_t v12 = v19;
    sub_1DEA0F99C();
    char v17 = 3;
    sub_1DEAD9608(&qword_1EBAE9920, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFCD0();
    sub_1DEFEFB60((uint64_t)v7, v15, v12, v18, a2);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DEFF01BC(void *a1)
{
  uint64_t v3 = v1;
  sub_1DEFF080C(0, &qword_1EAC276B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFF07B8();
  sub_1DFE001A0();
  LOBYTE(v13) = 0;
  sub_1DEBE3100();
  sub_1DEAD9608(&qword_1EAC22F98, (void (*)(uint64_t))sub_1DEBE3100);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for SportsScheduleTagFeedGroupKnobs();
    uint64_t v13 = *(void *)(v3 + v10[5]);
    HIBYTE(v12) = 1;
    sub_1DEFF0638();
    sub_1DEAD9608(&qword_1EAC276B8, (void (*)(uint64_t))sub_1DEFF0638);
    sub_1DFDFFE80();
    uint64_t v13 = *(void *)(v3 + v10[6]);
    HIBYTE(v12) = 2;
    sub_1DEAC05D8();
    sub_1DEAD9608(&qword_1EBAE9890, (void (*)(uint64_t))sub_1DEAC05D8);
    sub_1DFDFFE80();
    uint64_t v13 = *(void *)(v3 + v10[7]);
    HIBYTE(v12) = 3;
    sub_1DEA0F99C();
    sub_1DEAD9608(&qword_1EBAE9918, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DEFF04D0()
{
  unint64_t result = 0x73656C7572;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x676E6970756F7267;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DEFF0568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DEFF0C24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEFF0590(uint64_t a1)
{
  unint64_t v2 = sub_1DEFF07B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEFF05CC(uint64_t a1)
{
  unint64_t v2 = sub_1DEFF07B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEFF0608@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1DEFEFE88(a1, a2);
}

uint64_t sub_1DEFF0620(void *a1)
{
  return sub_1DEFF01BC(a1);
}

void sub_1DEFF0638()
{
  if (!qword_1EBAE9858)
  {
    sub_1DEFF06BC();
    sub_1DEFF0710();
    sub_1DEFF0764();
    unint64_t v0 = sub_1DFDF8C10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9858);
    }
  }
}

unint64_t sub_1DEFF06BC()
{
  unint64_t result = qword_1EBAD9AC8;
  if (!qword_1EBAD9AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9AC8);
  }
  return result;
}

unint64_t sub_1DEFF0710()
{
  unint64_t result = qword_1EBAD9AB8;
  if (!qword_1EBAD9AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9AB8);
  }
  return result;
}

unint64_t sub_1DEFF0764()
{
  unint64_t result = qword_1EBAD9AC0;
  if (!qword_1EBAD9AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9AC0);
  }
  return result;
}

unint64_t sub_1DEFF07B8()
{
  unint64_t result = qword_1EAC276A0;
  if (!qword_1EAC276A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC276A0);
  }
  return result;
}

void sub_1DEFF080C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEFF07B8();
    unint64_t v7 = a3(a1, &type metadata for SportsScheduleTagFeedGroupKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsScheduleTagFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFF093CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsScheduleTagFeedGroupKnobs.CodingKeys()
{
  return &type metadata for SportsScheduleTagFeedGroupKnobs.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SportsScheduleGrouping(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFF0A40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsScheduleGrouping()
{
  return &type metadata for SportsScheduleGrouping;
}

unint64_t sub_1DEFF0A80()
{
  unint64_t result = qword_1EAC276C0;
  if (!qword_1EAC276C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC276C0);
  }
  return result;
}

unint64_t sub_1DEFF0AD8()
{
  unint64_t result = qword_1EAC276C8;
  if (!qword_1EAC276C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC276C8);
  }
  return result;
}

unint64_t sub_1DEFF0B30()
{
  unint64_t result = qword_1EAC276D0;
  if (!qword_1EAC276D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC276D0);
  }
  return result;
}

unint64_t sub_1DEFF0B84()
{
  unint64_t result = qword_1EAC276D8;
  if (!qword_1EAC276D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC276D8);
  }
  return result;
}

uint64_t sub_1DEFF0BD8()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DEFF0C24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6970756F7267 && a2 == 0xE800000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFED5B10 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DFEDA2C0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DEFF0DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a3;
  sub_1DEE0084C();
  uint64_t v7 = v6;
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFB7DB4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AudioFeedLayoutSectionDescriptor(0);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v23 - v19;
  sub_1DFDF2C10();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v20, 2, v11))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v9, a2, v7);
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1DFDFF9B0();
    sub_1DFDF2C10();
    sub_1DFDFFB10();
    sub_1DEFF19D4((uint64_t)v18, type metadata accessor for AudioFeedLayoutSectionDescriptor);
    sub_1DFDFDE90();
    uint64_t result = sub_1DFDFFBB0();
    __break(1u);
  }
  else
  {
    sub_1DEFB979C((uint64_t)v20, (uint64_t)v14);
    uint64_t v21 = sub_1DEFF10D4(*(void *)&v14[*(int *)(v11 + 28)], *(void *)&v14[*(int *)(v11 + 32)], a4, v26, v25);
    sub_1DEFF19D4((uint64_t)v14, (uint64_t (*)(void))sub_1DEFB7DB4);
    return v21;
  }
  return result;
}

uint64_t sub_1DEFF10D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a5;
  uint64_t v45 = a1;
  uint64_t v41 = a2;
  uint64_t v42 = a4;
  uint64_t v5 = type metadata accessor for AudioFeedLayoutSectionDescriptor.Footer(0);
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v40 = (uint64_t)&v38 - v9;
  uint64_t v43 = sub_1DFDF94D0();
  uint64_t v10 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AudioFeedLayoutSectionDescriptor.Header(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = sub_1DFDF4140();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF3F10();
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if (v24 == *MEMORY[0x1E4FAD2B0])
  {
    unint64_t v25 = sub_1DFDF3F20();
    if ((v25 & 0x8000000000000000) == 0)
    {
      if (v25 < *(void *)(v45 + 16))
      {
        sub_1DEFF196C(v45+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v25, (uint64_t)v19, type metadata accessor for AudioFeedLayoutSectionDescriptor.Header);
        sub_1DEFF196C((uint64_t)v19, (uint64_t)v17, type metadata accessor for AudioFeedLayoutSectionDescriptor.Header);
        uint64_t v26 = v17;
        uint64_t v27 = v43;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v26, v43);
        __swift_project_boxed_opaque_existential_1((void *)(v42 + 16), *(void *)(v42 + 40));
        uint64_t v28 = sub_1DFDF95C0();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
        uint64_t v29 = type metadata accessor for AudioFeedLayoutSectionDescriptor.Header;
        uint64_t v30 = (uint64_t)v19;
LABEL_10:
        sub_1DEFF19D4(v30, v29);
        return v28;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v24 == *MEMORY[0x1E4FAD2A8])
  {
    uint64_t v31 = sub_1DFDF3F20();
    uint64_t v32 = *(void *)(v45 + 16);
    BOOL v33 = __OFSUB__(v31, v32);
    unint64_t v34 = v31 - v32;
    if (!v33)
    {
      if ((v34 & 0x8000000000000000) == 0)
      {
        if (v34 < *(void *)(v41 + 16))
        {
          uint64_t v35 = v40;
          sub_1DEFF196C(v41+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v34, v40, type metadata accessor for AudioFeedLayoutSectionDescriptor.Footer);
          sub_1DEFF196C(v35, (uint64_t)v8, type metadata accessor for AudioFeedLayoutSectionDescriptor.Footer);
          uint64_t v36 = v43;
          (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v43);
          __swift_project_boxed_opaque_existential_1((void *)(v42 + 16), *(void *)(v42 + 40));
          uint64_t v28 = sub_1DFDF95C0();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v36);
          uint64_t v29 = type metadata accessor for AudioFeedLayoutSectionDescriptor.Footer;
          uint64_t v30 = v35;
          goto LABEL_10;
        }
        goto LABEL_15;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  uint64_t result = sub_1DFDFFBB0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AudioFeedBlueprintViewSupplementaryViewProvider()
{
  return self;
}

uint64_t sub_1DEFF1634()
{
  return sub_1DEFF1754(&qword_1EBAB2020, (void (*)(uint64_t))type metadata accessor for AudioFeedSectionDescriptor);
}

uint64_t sub_1DEFF167C()
{
  return sub_1DEFF1754(&qword_1EBAB6058, (void (*)(uint64_t))type metadata accessor for AudioFeedLayoutSectionDescriptor);
}

uint64_t sub_1DEFF16C4()
{
  return sub_1DEFF1754(&qword_1EBAADDB0, (void (*)(uint64_t))type metadata accessor for AudioFeedLayoutModel);
}

uint64_t sub_1DEFF170C()
{
  return sub_1DEFF1754(&qword_1EBAF3D00, (void (*)(uint64_t))type metadata accessor for AudioFeedModel);
}

uint64_t sub_1DEFF1754(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFF179C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_1DEFF0DCC(a1, a2, *a3, a4);
}

uint64_t sub_1DEFF17C4()
{
  uint64_t v1 = sub_1DFDF8FD0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AudioFeedLayoutModel();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  sub_1DEE00A08();
  sub_1DFDF2120();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  __swift_project_boxed_opaque_existential_1((void *)(v8 + 16), *(void *)(v8 + 40));
  uint64_t v9 = sub_1DFDF95B0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

uint64_t sub_1DEFF196C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEFF19D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for MagazineSectionBarEventHandler()
{
  return self;
}

uint64_t sub_1DEFF1A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1DED9E71C();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DFDF0B10();
    uint64_t v8 = v7;
    unsigned __int8 v9 = 2;
  }
  else
  {
    a2 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    unsigned __int8 v9 = -1;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 48), *(void *)(v3 + 72));
  sub_1DEED9F2C();
  return sub_1DED236B0(a2, a3, v6, v8, v9);
}

ValueMetadata *type metadata accessor for LegacyAudioFeedServiceContext()
{
  return &type metadata for LegacyAudioFeedServiceContext;
}

uint64_t sub_1DEFF1B3C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v52 = sub_1DFDE8BE0();
  MEMORY[0x1F4188790](v52);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE8C10();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v58 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEFF26D4(0, &qword_1EBAD03B8, MEMORY[0x1E4F7D4E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v53 = (uint64_t)&v48 - v10;
  sub_1DEFF26D4(0, (unint64_t *)&unk_1EBAD03E0, MEMORY[0x1E4F7D5B0], v8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v48 - v12);
  uint64_t v14 = sub_1DFDE8BC0();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v57 = sub_1DFDE8C20();
  uint64_t v59 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v54 = v15;
  uint64_t v55 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v56 = (char *)&v48 - v17;
  uint64_t v18 = *a1;
  unint64_t v19 = a1[1];
  uint64_t v20 = (void *)a1[2];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v2[10]);
  v61[0] = v18;
  v61[1] = v19;
  void v61[2] = (uint64_t)v20;
  uint64_t v21 = (id *)sub_1DF740BCC((uint64_t)v61);
  if (v23 != -1)
  {
    int v24 = v21;
    unsigned __int8 v25 = v23;
    double v51 = v5;
    uint64_t v48 = v2;
    unint64_t v26 = v22;
    sub_1DFAA757C(v21, v22, v23);
    unsigned int v49 = v25;
    sub_1DFAA7C00(v24, v26, v25);
    sub_1DFAA8304(v24, v26, v25, v13);
    unint64_t v50 = v26;
    sub_1DFAA8CB0((unint64_t)v24, v26, v25, v53);
    unsigned int v27 = v49;
    sub_1DFDE8BB0();
    if (v27 >= 6)
    {
      sub_1DFDE8C00();
      uint64_t v29 = v48;
      uint64_t v28 = v59;
    }
    else
    {
      sub_1DFDE8C00();
      uint64_t v28 = v59;
      uint64_t v29 = v48;
      if (((1 << v27) & 0x1B) == 0)
      {
        sub_1DFDE8BD0();
LABEL_12:
        uint64_t v37 = v56;
        uint64_t v38 = v57;
        sub_1DFDE8BF0();
        uint64_t v39 = v29[5];
        uint64_t v58 = (char *)v29[6];
        uint64_t v57 = (uint64_t)__swift_project_boxed_opaque_existential_1(v29 + 2, v39);
        sub_1DFDE8FE0();
        uint64_t v40 = v55;
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v55, v37, v38);
        unint64_t v41 = (*(unsigned __int8 *)(v28 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        uint64_t v42 = swift_allocObject();
        uint64_t v43 = v50;
        *(void *)(v42 + 16) = v24;
        *(void *)(v42 + 24) = v43;
        *(unsigned char *)(v42 + 32) = v25;
        unint64_t v44 = v42 + v41;
        uint64_t v45 = v59;
        (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v44, v40, v38);
        sub_1DEFF2908(v24, v43, v25);
        uint64_t v46 = sub_1DFDECC90();
        swift_release();
        if (!v46)
        {
          __break(1u);
          JUMPOUT(0x1DEFF2360);
        }
        (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v38);
        sub_1DEEC7610(v24, v43, v25);
        return v46;
      }
    }
    v61[0] = MEMORY[0x1E4FBC860];
    sub_1DEFF267C();
    sub_1DEFF26D4(0, &qword_1EBAD1948, MEMORY[0x1E4F7D4E8], MEMORY[0x1E4FBB320]);
    sub_1DEFF2738();
    sub_1DFDFF830();
    goto LABEL_12;
  }
  if (qword_1EBAD2E28 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1DFDF01D0();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EBB62BB8);
  sub_1DEFF2588(v18, v19, v20);
  sub_1DEFF2588(v18, v19, v20);
  uint64_t v31 = sub_1DFDF01B0();
  os_log_type_t v32 = sub_1DFDFEA60();
  if (os_log_type_enabled(v31, v32))
  {
    BOOL v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v61[0] = v34;
    *(_DWORD *)BOOL v33 = 136315138;
    unint64_t v35 = 0xE800000000000000;
    uint64_t v36 = 0x6465776F6C6C6F66;
    switch(v19 >> 61)
    {
      case 1uLL:
        unint64_t v35 = 0xED00006C6562614CLL;
        goto LABEL_21;
      case 2uLL:
        unint64_t v35 = 0xE900000000000073;
        uint64_t v36 = 0x74756374726F6873;
        break;
      case 3uLL:
        unint64_t v35 = 0xEB0000000065726FLL;
        uint64_t v36 = 0x63537374726F7073;
        break;
      case 4uLL:
        unint64_t v35 = 0xED00006F666E4962;
        uint64_t v36 = 0x7548656C7A7A7570;
        break;
      case 5uLL:
        uint64_t v36 = 0xD000000000000016;
        unint64_t v35 = 0x80000001DFEDA3D0;
        break;
      case 6uLL:
        unint64_t v35 = 0x80000001DFEDA3B0;
        uint64_t v36 = 0xD000000000000015;
        break;
      case 7uLL:
        unint64_t v35 = 0xEF736569726F7453;
LABEL_21:
        uint64_t v36 = 0x73756C507377656ELL;
        break;
      default:
        break;
    }
    uint64_t v60 = sub_1DEA5CAB8(v36, v35, v61);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    sub_1DEFF25DC(v18, v19, v20);
    sub_1DEFF25DC(v18, v19, v20);
    _os_log_impl(&dword_1DE913000, v31, v32, "Unable to present tip, reason=no model for tip=%s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v34, -1, -1);
    MEMORY[0x1E01EFA10](v33, -1, -1);
  }
  else
  {
    sub_1DEFF25DC(v18, v19, v20);
    sub_1DEFF25DC(v18, v19, v20);
  }

  return 0;
}

void sub_1DEFF2380(uint64_t *a1@<X8>)
{
  sub_1DEFF29B4();
  uint64_t v2 = (void *)sub_1DFDFEA10();
  if (!v2
    || (uint64_t v3 = v2,
        id v8 = objc_msgSend(v2, sel_traitCollection),
        v3,
        (id v4 = v8) == 0))
  {
    id v4 = objc_msgSend(self, sel_currentTraitCollection);
  }
  id v9 = v4;
  id v5 = objc_msgSend(v4, sel_horizontalSizeClass);
  uint64_t v6 = sub_1DFDE9410();
  uint64_t v7 = MEMORY[0x1E4F7D7F0];
  a1[3] = v6;
  a1[4] = v7;
  __swift_allocate_boxed_opaque_existential_1(a1);
  if (v5 == (id)1) {
    sub_1DFDE93F0();
  }
  else {
    sub_1DFDE9400();
  }
}

uint64_t sub_1DEFF2464(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9[0] = a2;
  v9[1] = a3;
  char v10 = a4;
  sub_1DFDECAA0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8C20();
  sub_1DFDECAA0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEFF2380(v9);
  sub_1DEFF295C();
  sub_1DFDECAA0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t type metadata accessor for TipsModule()
{
  return self;
}

uint64_t sub_1DEFF2588(uint64_t a1, unint64_t a2, void *a3)
{
  if (!(a2 >> 61))
  {
    id v3 = a3;
    swift_retain();
  }
  return swift_retain();
}

void sub_1DEFF25DC(uint64_t a1, unint64_t a2, void *a3)
{
  switch(a2 >> 61)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      swift_release();
      break;
    default:
      swift_release();
      swift_release();

      break;
  }
}

unint64_t sub_1DEFF267C()
{
  unint64_t result = qword_1EBAD03C0;
  if (!qword_1EBAD03C0)
  {
    sub_1DFDE8BE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD03C0);
  }
  return result;
}

void sub_1DEFF26D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1DEFF2738()
{
  unint64_t result = qword_1EBAD1950;
  if (!qword_1EBAD1950)
  {
    sub_1DEFF26D4(255, &qword_1EBAD1948, MEMORY[0x1E4F7D4E8], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD1950);
  }
  return result;
}

uint64_t sub_1DEFF27C0()
{
  uint64_t v1 = sub_1DFDE8C20();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_1DEEC7624(*(id *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DEFF2890(void *a1)
{
  sub_1DFDE8C20();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  return sub_1DEFF2464(a1, v3, v4, v5);
}

id sub_1DEFF2908(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
      unint64_t result = (id)swift_retain();
      break;
    case 2:
    case 3:
    case 5:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DEFF295C()
{
  unint64_t result = qword_1EBAD0418;
  if (!qword_1EBAD0418)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAD0418);
  }
  return result;
}

unint64_t sub_1DEFF29B4()
{
  unint64_t result = qword_1EBABAB30;
  if (!qword_1EBABAB30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBABAB30);
  }
  return result;
}

uint64_t *sub_1DEFF29F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    char v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    unint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for ShortcutsCustomizeAffordance();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v23 = v10;
      uint64_t v13 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v13;
      uint64_t v14 = v8[3];
      v7[2] = v8[2];
      v7[3] = v14;
      uint64_t v15 = (void *)v8[4];
      v7[4] = v15;
      uint64_t v16 = *(int *)(v9 + 28);
      __dst = (char *)v7 + v16;
      unsigned __int8 v25 = (char *)v8 + v16;
      uint64_t v17 = sub_1DFDF0BF0();
      uint64_t v18 = *(void *)(v17 - 8);
      int v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v19 = v15;
      if (v24(v25, 1, v17))
      {
        sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
        memcpy(__dst, v25, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v25, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      *((unsigned char *)v7 + *(int *)(v9 + 32)) = *((unsigned char *)v8 + *(int *)(v9 + 32));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

void sub_1DEFF2CC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DEFF2D18(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v7 = v4 + *(int *)(v5 + 28);
    uint64_t v8 = sub_1DFDF0BF0();
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8);
    if (!result)
    {
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      return v9(v7, v8);
    }
  }
  return result;
}

void *sub_1DEFF2E4C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = v6[1];
    *uint64_t v5 = *v6;
    v5[1] = v11;
    uint64_t v12 = v6[3];
    v5[2] = v6[2];
    v5[3] = v12;
    uint64_t v13 = (void *)v6[4];
    v5[4] = v13;
    uint64_t v14 = *(int *)(v7 + 28);
    uint64_t v21 = (char *)v6 + v14;
    __dst = (char *)v5 + v14;
    uint64_t v15 = sub_1DFDF0BF0();
    uint64_t v19 = *(void *)(v15 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v13;
    if (v20(v21, 1, v15))
    {
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      memcpy(__dst, v21, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v15);
    }
    *((unsigned char *)v5 + *(int *)(v7 + 32)) = *((unsigned char *)v6 + *(int *)(v7 + 32));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_1DEFF30B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1DEFF4544((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShortcutsCustomizeAffordance);
      goto LABEL_7;
    }
    *uint64_t v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[2] = v8[2];
    v7[3] = v8[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)v7[4];
    uint64_t v21 = (void *)v8[4];
    v7[4] = v21;
    id v22 = v21;

    uint64_t v23 = *(int *)(v9 + 28);
    int v24 = (char *)v7 + v23;
    unsigned __int8 v25 = (char *)v8 + v23;
    uint64_t v26 = sub_1DFDF0BF0();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    uint64_t v38 = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    int v29 = v28(v25, 1, v26);
    if (v24)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v38, v25, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v38, 0, 1, v26);
        goto LABEL_18;
      }
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      size_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
      os_log_type_t v32 = v38;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 24))(v38, v25, v26);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v27 + 8))(v38, v26);
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      size_t v31 = *(void *)(*(void *)(v33 - 8) + 64);
      os_log_type_t v32 = v38;
    }
    memcpy(v32, v25, v31);
LABEL_18:
    *((unsigned char *)v7 + *(int *)(v9 + 32)) = *((unsigned char *)v8 + *(int *)(v9 + 32));
    return a1;
  }
  if (v13)
  {
LABEL_7:
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  uint64_t v14 = (void *)v8[4];
  v7[4] = v14;
  uint64_t v15 = *(int *)(v9 + 28);
  uint64_t v37 = (char *)v8 + v15;
  __dst = (char *)v7 + v15;
  uint64_t v16 = sub_1DFDF0BF0();
  uint64_t v35 = *(void *)(v16 - 8);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v17 = v14;
  if (v36(v37, 1, v16))
  {
    sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
    memcpy(__dst, v37, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v37, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v16);
  }
  *((unsigned char *)v7 + *(int *)(v9 + 32)) = *((unsigned char *)v8 + *(int *)(v9 + 32));
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

void *sub_1DEFF356C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (_OWORD *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    long long v10 = v6[1];
    *uint64_t v5 = *v6;
    v5[1] = v10;
    *((void *)v5 + 4) = *((void *)v6 + 4);
    uint64_t v11 = *(int *)(v7 + 28);
    int v12 = (char *)v5 + v11;
    int v13 = (char *)v6 + v11;
    uint64_t v14 = sub_1DFDF0BF0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *((unsigned char *)v5 + *(int *)(v7 + 32)) = *((unsigned char *)v6 + *(int *)(v7 + 32));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_1DEFF3794(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1DEFF4544((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShortcutsCustomizeAffordance);
      goto LABEL_7;
    }
    uint64_t v22 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = v8[3];
    v7[2] = v8[2];
    v7[3] = v23;
    swift_bridgeObjectRelease();
    int v24 = (void *)v7[4];
    v7[4] = v8[4];

    uint64_t v25 = *(int *)(v9 + 28);
    uint64_t v26 = (char *)v7 + v25;
    uint64_t v27 = (char *)v8 + v25;
    uint64_t v28 = sub_1DFDF0BF0();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
    uint64_t v37 = v26;
    LODWORD(v26) = v30(v26, 1, v28);
    int v31 = v30(v27, 1, v28);
    if (v26)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v29 + 32))(v37, v27, v28);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v37, 0, 1, v28);
        goto LABEL_18;
      }
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      size_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
      uint64_t v34 = v37;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v29 + 40))(v37, v27, v28);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v29 + 8))(v37, v28);
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      size_t v33 = *(void *)(*(void *)(v35 - 8) + 64);
      uint64_t v34 = v37;
    }
    memcpy(v34, v27, v33);
LABEL_18:
    *((unsigned char *)v7 + *(int *)(v9 + 32)) = *((unsigned char *)v8 + *(int *)(v9 + 32));
    return a1;
  }
  if (v13)
  {
LABEL_7:
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    memcpy(v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  long long v14 = *((_OWORD *)v8 + 1);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v14;
  v7[4] = v8[4];
  uint64_t v15 = *(int *)(v9 + 28);
  uint64_t v16 = (char *)v7 + v15;
  id v17 = (char *)v8 + v15;
  uint64_t v18 = sub_1DFDF0BF0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  *((unsigned char *)v7 + *(int *)(v9 + 32)) = *((unsigned char *)v8 + *(int *)(v9 + 32));
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1DEFF3BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFF3BFC);
}

uint64_t sub_1DEFF3BFC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DEFF3CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFF3CDC);
}

void *sub_1DEFF3CDC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ShortcutsUpdateAllRequest()
{
  uint64_t result = qword_1EAC276E0;
  if (!qword_1EAC276E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DEFF3DEC()
{
  sub_1DEFF2CC4(319, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1DEFF3EA4()
{
  uint64_t v1 = type metadata accessor for Shortcut();
  uint64_t v36 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ShortcutsModel();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE03D94();
  uint64_t v38 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v39 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  int v12 = (char *)v35 - v11;
  sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v35 - v14;
  uint64_t v16 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t updated = type metadata accessor for ShortcutsUpdateAllRequest();
  sub_1DEFF43E4((uint64_t)v0 + *(int *)(updated + 20), (uint64_t)v15);
  BOOL v21 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1;
  uint64_t v37 = v4;
  if (v21)
  {
    sub_1DEFF4464((uint64_t)v15);
  }
  else
  {
    sub_1DEFF45A4((uint64_t)v15, (uint64_t)v19);
    sub_1DEFF44DC((uint64_t)v19, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ShortcutsCustomizeAffordance);
    swift_storeEnumTagMultiPayload();
    sub_1DEB0D584();
    sub_1DFDF0B40();
    unint64_t v22 = sub_1DEE199F4(0, 1, 1, MEMORY[0x1E4FBC860]);
    uint64_t v23 = v22;
    unint64_t v25 = *(void *)(v22 + 16);
    unint64_t v24 = *(void *)(v22 + 24);
    if (v25 >= v24 >> 1) {
      uint64_t v23 = sub_1DEE199F4(v24 > 1, v25 + 1, 1, v22);
    }
    uint64_t v26 = v38;
    *(void *)(v23 + 16) = v25 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v23+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v25, v12, v26);
    uint64_t v41 = v23;
    sub_1DEFF4544((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ShortcutsCustomizeAffordance);
  }
  uint64_t v27 = *v0;
  int64_t v28 = *(void *)(*v0 + 16);
  uint64_t v29 = MEMORY[0x1E4FBC860];
  if (v28)
  {
    uint64_t v40 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DEDF797C(0, v28, 0);
    uint64_t v30 = v27 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    uint64_t v31 = *(void *)(v36 + 72);
    v35[1] = v27;
    uint64_t v36 = v31;
    do
    {
      sub_1DEFF44DC(v30, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for Shortcut);
      sub_1DEFF44DC((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Shortcut);
      swift_storeEnumTagMultiPayload();
      sub_1DEB0D584();
      sub_1DFDF0B40();
      sub_1DEFF4544((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for Shortcut);
      uint64_t v29 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF797C(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v40;
      }
      unint64_t v33 = *(void *)(v29 + 16);
      unint64_t v32 = *(void *)(v29 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1DEDF797C(v32 > 1, v33 + 1, 1);
        uint64_t v29 = v40;
      }
      *(void *)(v29 + 16) = v33 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v29+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v33, v39, v38);
      uint64_t v40 = v29;
      v30 += v36;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  sub_1DF3DE344(v29);
  return v41;
}

uint64_t sub_1DEFF43E4(uint64_t a1, uint64_t a2)
{
  sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEFF4464(uint64_t a1)
{
  sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEFF44DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEFF4544(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEFF45A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutsCustomizeAffordance();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for MagazineCategoriesPickerSectionDescriptor(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DEFF46A4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MagazineCategoriesPickerSectionDescriptor()
{
  return &type metadata for MagazineCategoriesPickerSectionDescriptor;
}

uint64_t sub_1DEFF46DC()
{
  return 0x69726F6765746163;
}

unint64_t sub_1DEFF46FC()
{
  unint64_t result = qword_1EAC276F0;
  if (!qword_1EAC276F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC276F0);
  }
  return result;
}

uint64_t sub_1DEFF4750@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEFB023C(MEMORY[0x1E4F80658], MEMORY[0x1E4F806B0], a1);
}

char *sub_1DEFF4770(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    a1[8] = *((unsigned char *)a2 + 8);
    a1[9] = *((unsigned char *)a2 + 9);
    a1[10] = *((unsigned char *)a2 + 10);
    a1[11] = *((unsigned char *)a2 + 11);
    a1[12] = *((unsigned char *)a2 + 12);
    uint64_t v7 = a2[2];
    *((void *)a1 + 2) = v7;
    a1[24] = *((unsigned char *)a2 + 24);
    sub_1DED4A6B8();
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = &v6[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_1DFDF99F0();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v4;
    uint64_t v15 = v7;
    v13(v10, v11, v12);
  }
  return v6;
}

uint64_t sub_1DEFF4894(id *a1)
{
  sub_1DED4A6B8();
  int v3 = (char *)a1 + *(int *)(v2 + 48);
  uint64_t v4 = sub_1DFDF99F0();
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);
  return v5(v3, v4);
}

uint64_t sub_1DEFF4918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  sub_1DED4A6B8();
  uint64_t v7 = *(int *)(v6 + 48);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF99F0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v4;
  id v13 = v5;
  v11(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEFF49F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  sub_1DED4A6B8();
  uint64_t v11 = *(int *)(v10 + 48);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DFDF99F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

_OWORD *sub_1DEFF4ACC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  sub_1DED4A6B8();
  uint64_t v5 = *(int *)(v4 + 48);
  id v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DFDF99F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1DEFF4B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  sub_1DED4A6B8();
  uint64_t v7 = *(int *)(v6 + 48);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF99F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEFF4C2C(uint64_t a1, uint64_t a2)
{
  sub_1DED4A6B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DEFF4C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DED4A6B8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t type metadata accessor for MyMagazinesModel()
{
  uint64_t result = qword_1EAC276F8;
  if (!qword_1EAC276F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFF4D60(uint64_t a1)
{
  uint64_t result = sub_1DFDF99F0();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_1DEFF4E1C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1 - 8);
  unint64_t v3 = (void **)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEFF5E70(v1, (uint64_t)v3);
  int v4 = *v3;
  uint64_t v5 = v3[2];
  sub_1DED4A6B8();
  uint64_t v7 = (char *)v3 + *(int *)(v6 + 48);
  id v8 = objc_msgSend(v4, sel_identifier);
  uint64_t v9 = sub_1DFDFDD20();

  uint64_t v10 = sub_1DFDF99F0();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
  return v9;
}

uint64_t sub_1DEFF4F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DEFF660C(&qword_1EAC27720, (void (*)(uint64_t))type metadata accessor for MyMagazinesModel);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1DEFF4FA0()
{
  return sub_1DEFF660C(&qword_1EAC27708, (void (*)(uint64_t))type metadata accessor for MyMagazinesModel);
}

uint64_t sub_1DEFF4FE8()
{
  return sub_1DEFF660C(&qword_1EAC27710, (void (*)(uint64_t))type metadata accessor for MyMagazinesModel);
}

uint64_t sub_1DEFF5030()
{
  return sub_1DEFF660C(&qword_1EAC27718, (void (*)(uint64_t))type metadata accessor for MyMagazinesModel);
}

uint64_t sub_1DEFF5078()
{
  return sub_1DEFF660C(&qword_1EAC27720, (void (*)(uint64_t))type metadata accessor for MyMagazinesModel);
}

uint64_t sub_1DEFF50C0()
{
  return sub_1DEFF660C(&qword_1EAC27728, (void (*)(uint64_t))type metadata accessor for MyMagazinesModel);
}

uint64_t sub_1DEFF5108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEFF5148(a1, MEMORY[0x1E4FABF20], MEMORY[0x1E4FABF28], a2);
}

uint64_t sub_1DEFF5128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEFF5148(a1, MEMORY[0x1E4FABF80], MEMORY[0x1E4FABF88], a2);
}

uint64_t sub_1DEFF5148@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t a4@<X8>)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v9 = (id *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEFF5E70(v4, (uint64_t)v9);
  id v10 = *v9;

  sub_1DED4A6B8();
  uint64_t v12 = (char *)v9 + *(int *)(v11 + 48);
  uint64_t v13 = *a2;
  uint64_t v14 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a4, v13, v14);
  uint64_t v15 = sub_1DFDF99F0();
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v12, v15);
}

uint64_t sub_1DEFF5268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v60 = a1;
  uint64_t v3 = sub_1DFDF9820();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v57 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF6434(0, (unint64_t *)&qword_1EBABA2C8, MEMORY[0x1E4F80488], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v56 = (char *)&v47 - v6;
  uint64_t v7 = sub_1DFDF99F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = type metadata accessor for MyMagazinesModel();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v47 - v18;
  sub_1DEFF5E70(v2, (uint64_t)&v47 - v18);
  uint64_t v20 = *(void **)v19;
  uint64_t v50 = v19[8];
  int v21 = v19[10];
  int v48 = v19[9];
  int v49 = v21;
  int v22 = v19[12];
  int v51 = v19[11];
  int v52 = v22;
  uint64_t v54 = (void *)*((void *)v19 + 2);
  uint64_t v55 = v20;
  int v53 = v19[24];
  sub_1DED4A6B8();
  uint64_t v24 = v23;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, &v19[*(int *)(v23 + 48)], v7);
  sub_1DEFF5E70(v2, (uint64_t)v17);
  id v25 = *(id *)v17;
  uint64_t v26 = (void *)*((void *)v17 + 2);
  uint64_t v27 = &v17[*(int *)(v24 + 48)];
  id v28 = objc_msgSend(*(id *)v17, sel_identifier);
  uint64_t v29 = sub_1DFDFDD20();
  uint64_t v31 = v30;

  unint64_t v32 = *(void (**)(char *, uint64_t))(v8 + 8);
  v32(v27, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  uint64_t v33 = sub_1DFDF9A40();
  uint64_t v34 = v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v56, 1, 1, v33);
  uint64_t v35 = (uint64_t)v57;
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x1E4F802A8], v59);
  uint64_t v36 = 256;
  if (!v48) {
    uint64_t v36 = 0;
  }
  uint64_t v37 = v36 | v50;
  uint64_t v38 = 0x10000;
  if (!v49) {
    uint64_t v38 = 0;
  }
  uint64_t v39 = 0x1000000;
  if (!v51) {
    uint64_t v39 = 0;
  }
  uint64_t v40 = v37 | v38 | v39;
  uint64_t v41 = 0x100000000;
  if (!v52) {
    uint64_t v41 = 0;
  }
  uint64_t v46 = (uint64_t)v34;
  uint64_t v42 = v60;
  sub_1DFA942E0(v29, v31, v55, v40 | v41, v54, v53, (uint64_t)v11, v35, v60, v46, 2u);
  v32(v13, v7);
  uint64_t v43 = *MEMORY[0x1E4F802F8];
  uint64_t v44 = sub_1DFDF98C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v42, v43, v44);
}

uint64_t sub_1DEFF56EC()
{
  uint64_t v1 = sub_1DFDF98C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (id *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEFF5E70(v0, (uint64_t)v7);
  id v8 = *v7;

  sub_1DED4A6B8();
  uint64_t v10 = (char *)v7 + *(int *)(v9 + 48);
  sub_1DEFF5268((uint64_t)v5);
  uint64_t v11 = sub_1DFDF9860();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  uint64_t v12 = sub_1DFDF99F0();
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  return v11;
}

uint64_t sub_1DEFF5870(uint64_t a1)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v3 = (id *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEFF5E70(v1, (uint64_t)v3);
  id v4 = *v3;

  sub_1DED4A6B8();
  uint64_t v6 = (char *)v3 + *(int *)(v5 + 48);
  uint64_t v7 = sub_1DFDF99F0();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return 1;
}

uint64_t sub_1DEFF5934()
{
  sub_1DEFF6434(0, &qword_1EAC22670, MEMORY[0x1E4F818B0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v31 - v2;
  uint64_t v4 = sub_1DFDF0580();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for MyMagazinesModel();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF5E70(v0, (uint64_t)v10);
  unint64_t v32 = *(void **)v10;
  int v11 = v10[8];
  int v38 = v10[9];
  int v39 = v11;
  int v12 = v10[10];
  int v36 = v10[11];
  int v37 = v12;
  int v35 = v10[12];
  uint64_t v34 = *((void *)v10 + 2);
  int v33 = v10[24];
  sub_1DED4A6B8();
  uint64_t v40 = &v10[*(int *)(v13 + 48)];
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEFF6434(0, (unint64_t *)&unk_1EBAF6EB0, MEMORY[0x1E4F7EFC0], MEMORY[0x1E4FBBE00]);
  uint64_t v15 = sub_1DFDF0590();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  long long v31 = xmmword_1DFE0B250;
  *(_OWORD *)(v18 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E4F7EF50], v15);
  uint64_t v19 = sub_1DEDFEF34(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1DFDF05A0();
  sub_1DEFF6434(0, (unint64_t *)&unk_1EBAF8D10, MEMORY[0x1E4F7F040], v14);
  uint64_t v20 = sub_1DFDF5330();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v31;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v23 + v22, *MEMORY[0x1E4F7F038], v20);
  uint64_t v24 = v32;
  *uint64_t v7 = v32;
  v7[1] = v23;
  v7[2] = 0;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F7EEE0], v4);
  uint64_t v25 = sub_1DFDFD0B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v3, 1, 1, v25);
  id v26 = v24;
  MEMORY[0x1E01DEDA0](v7, v19, v3);
  swift_bridgeObjectRelease();
  sub_1DEFF6498((uint64_t)v3);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  *(unsigned char *)(v27 + 24) = v39;
  *(unsigned char *)(v27 + 25) = v38;
  *(unsigned char *)(v27 + 26) = v37;
  *(unsigned char *)(v27 + 27) = v36;
  *(unsigned char *)(v27 + 28) = v35;
  *(void *)(v27 + 32) = v34;
  *(unsigned char *)(v27 + 40) = v33;
  swift_allocObject();
  uint64_t v28 = sub_1DFDF0540();
  uint64_t v29 = sub_1DFDF99F0();
  (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v40, v29);
  return v28;
}

uint64_t sub_1DEFF5E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MyMagazinesModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1DEFF5ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v62 = sub_1DFDF98C0();
  uint64_t v64 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MyMagazinesModel();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (id *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1DFDF99F0();
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v10 = v63;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v58 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v57 = (char *)&v55 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v55 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v55 - v18;
  sub_1DEFF65A8();
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v23 = (id *)((char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = (uint64_t)v23 + *(int *)(v21 + 56);
  sub_1DEFF5E70(a1, (uint64_t)v23);
  sub_1DEFF5E70(a2, v24);
  id v25 = *v23;

  sub_1DED4A6B8();
  uint64_t v27 = v26;
  uint64_t v28 = (char *)v23 + *(int *)(v26 + 48);
  uint64_t v29 = *(void **)v24;

  uint64_t v30 = v24 + *(int *)(v27 + 48);
  long long v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v55 = v19;
  v31(v19, v28, v9);
  uint64_t v56 = v17;
  v31(v17, (char *)v30, v9);
  sub_1DEFF5E70(v60, (uint64_t)v8);
  id v32 = *v8;

  int v33 = (char *)v8 + *(int *)(v27 + 48);
  sub_1DEFF5268((uint64_t)v5);
  uint64_t v34 = sub_1DFDF9860();
  uint64_t v59 = v35;
  uint64_t v60 = v34;
  int v36 = *(void (**)(char *, uint64_t))(v64 + 8);
  v64 += 8;
  uint64_t v37 = v62;
  v36(v5, v62);
  int v38 = *(void (**)(char *, uint64_t))(v63 + 8);
  v38(v33, v9);
  sub_1DEFF5E70(v61, (uint64_t)v8);
  id v39 = *v8;

  uint64_t v40 = (char *)v8 + *(int *)(v27 + 48);
  sub_1DEFF5268((uint64_t)v5);
  uint64_t v41 = sub_1DFDF9860();
  uint64_t v43 = v42;
  uint64_t v44 = v37;
  uint64_t v45 = v59;
  v36(v5, v44);
  v38(v40, v9);
  if (v60 == v41 && v45 == v43)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    uint64_t v47 = v57;
    int v48 = v55;
    v46(v57, v55, v9);
    int v49 = v58;
    uint64_t v50 = v56;
    v46(v58, v56, v9);
LABEL_5:
    sub_1DEFF660C((unint64_t *)&unk_1EAC2A640, MEMORY[0x1E4F80458]);
    sub_1DFDFE170();
    sub_1DFDFE170();
    BOOL v53 = v66 == v65;
    goto LABEL_6;
  }
  char v51 = sub_1DFDFFF50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v52 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v47 = v57;
  int v48 = v55;
  v52(v57, v55, v9);
  int v49 = v58;
  uint64_t v50 = v56;
  v52(v58, v56, v9);
  BOOL v53 = 0;
  if (v51) {
    goto LABEL_5;
  }
LABEL_6:
  v38(v49, v9);
  v38(v47, v9);
  v38(v50, v9);
  v38(v48, v9);
  return v53;
}

void sub_1DEFF6434(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DEFF6498(uint64_t a1)
{
  sub_1DEFF6434(0, &qword_1EAC22670, MEMORY[0x1E4F818B0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEFF6524()
{
  return swift_deallocObject();
}

uint64_t sub_1DEFF6564()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1DFDFD0E0();
  id v2 = v1;
  return sub_1DFDFD0D0();
}

void sub_1DEFF65A8()
{
  if (!qword_1EAC27730)
  {
    type metadata accessor for MyMagazinesModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC27730);
    }
  }
}

uint64_t sub_1DEFF660C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFF6654(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = *(void *)(sub_1DFDFB040() - 8);
  uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  unint64_t v6 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v7 = sub_1DFDFB030();
    uint64_t v8 = *(void *)(v7 + 16);
    int64_t v9 = *(void *)(v6 + 16);
    int64_t v10 = v9 + v8;
    if (__OFADD__(v9, v8)) {
      break;
    }
    uint64_t v11 = v7;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v10 <= *(void *)(v6 + 24) >> 1)
    {
      if (*(void *)(v11 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v9 <= v10) {
        int64_t v13 = v9 + v8;
      }
      else {
        int64_t v13 = v9;
      }
      unint64_t v6 = sub_1DEA9BDF8(isUniquelyReferenced_nonNull_native, v13, 1, v6);
      if (*(void *)(v11 + 16))
      {
LABEL_14:
        uint64_t v14 = *(void *)(v6 + 16);
        uint64_t v15 = (*(void *)(v6 + 24) >> 1) - v14;
        uint64_t v16 = *(void *)(sub_1DFDFC900() - 8);
        uint64_t v17 = *(void *)(v16 + 72);
        if (v15 < v8) {
          goto LABEL_28;
        }
        unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
        unint64_t v19 = v6 + v18 + v17 * v14;
        unint64_t v20 = v11 + v18;
        uint64_t v21 = v17 * v8;
        unint64_t v22 = v19 + v21;
        unint64_t v23 = v20 + v21;
        if (v20 < v22 && v19 < v23) {
          goto LABEL_30;
        }
        swift_arrayInitWithCopy();
        if (v8)
        {
          uint64_t v25 = *(void *)(v6 + 16);
          BOOL v26 = __OFADD__(v25, v8);
          uint64_t v27 = v25 + v8;
          if (v26) {
            goto LABEL_29;
          }
          *(void *)(v6 + 16) = v27;
        }
        goto LABEL_4;
      }
    }
    if (v8) {
      goto LABEL_27;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v4 += v5;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DEFF68AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v33 = a1;
  uint64_t v39 = a3;
  uint64_t v3 = sub_1DFDFA100();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v34 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDFA250();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v32 = (char *)&v26 - v9;
  uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7A860];
  sub_1DEFF84EC(0, &qword_1EBAA8660, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v28 = sub_1DFDF9D80();
  uint64_t v13 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA8E984();
  uint64_t v27 = v16;
  uint64_t v30 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF8980();
  sub_1DFDF9A90();
  sub_1DF68054C(v31);
  uint64_t v19 = sub_1DFDF6490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
  sub_1DFDF7870();
  swift_bridgeObjectRelease();
  sub_1DEFF8400((uint64_t)v12, &qword_1EBAA8660, v29);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  sub_1DFDF9A80();
  unint64_t v20 = v34;
  uint64_t v21 = v27;
  sub_1DFDF9A80();
  unint64_t v22 = v32;
  sub_1DFDFA210();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v38);
  uint64_t v23 = v36;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v35 + 8);
  v24(v8, v36);
  sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
  sub_1DFDF9AC0();
  v24(v22, v23);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v21);
  type metadata accessor for TagFeedModel(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DEFF6D44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t *a6@<X8>)
{
  uint64_t v24 = a6;
  uint64_t v11 = sub_1DFDFBBA0();
  if (*(void *)(a1 + 16) && (unint64_t v13 = sub_1DEA6D930(v11, v12), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v13);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1DEFF84EC(0, &qword_1EBAEAE70, type metadata accessor for TagFeedModel, MEMORY[0x1E4FBBE00]);
    uint64_t v16 = *(void *)(type metadata accessor for TagFeedModel(0) - 8);
    unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1DFE0B250;
    *(void *)(v18 + v17) = v15;
    uint64_t result = swift_storeEnumTagMultiPayload();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_1DFDFBBC0();
    uint64_t v21 = sub_1DEFF6654(v20);
    uint64_t v22 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v22);
    v23[2] = a2;
    void v23[3] = a3;
    v23[4] = a4;
    v23[5] = a5;
    unint64_t v18 = sub_1DF19559C((void (*)(uint64_t))sub_1DEFF8470, (uint64_t)v23, v21);
    uint64_t result = swift_bridgeObjectRelease();
  }
  *uint64_t v24 = v18;
  return result;
}

uint64_t sub_1DEFF6F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v109 = a5;
  uint64_t v121 = a3;
  uint64_t v122 = a4;
  uint64_t v120 = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEFF84EC(0, qword_1EBAF46E8, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedModelPlaceholder, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v107 = (uint64_t)&v102 - v12;
  uint64_t v13 = type metadata accessor for TagFeedModelPlaceholder();
  uint64_t v105 = *(void *)(v13 - 8);
  uint64_t v106 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v103 = (uint64_t)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v104 = (uint64_t)&v102 - v16;
  uint64_t v17 = sub_1DFDFB0F0();
  uint64_t v111 = *(void *)(v17 - 8);
  uint64_t v112 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v110 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DFDFADB0();
  uint64_t v117 = *(void *)(v19 - 8);
  uint64_t v118 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v116 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DFDFAE30();
  uint64_t v114 = *(void *)(v21 - 8);
  uint64_t v115 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v113 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF84EC(0, (unint64_t *)&unk_1EBAE9A70, MEMORY[0x1E4F80458], v10);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v102 - v24;
  uint64_t v26 = sub_1DFDFABA0();
  uint64_t v119 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF84EC(0, &qword_1EBAA8660, MEMORY[0x1E4F7A860], v10);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v102 - v30;
  uint64_t v32 = sub_1DFDFC900();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v35 = (id *)((char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = *(void (**)(id *, uint64_t, uint64_t))(v33 + 16);
  uint64_t v108 = a1;
  v36(v35, a1, v32);
  int v37 = (*(uint64_t (**)(id *, uint64_t))(v33 + 88))(v35, v32);
  if (v37 != *MEMORY[0x1E4F81600])
  {
    uint64_t v102 = a6;
    if (v37 == *MEMORY[0x1E4F815E8])
    {
      (*(void (**)(id *, uint64_t))(v33 + 96))(v35, v32);
      id v44 = *v35;
      id v123 = *(id *)(v7 + 24);
      id v45 = v123;
      uint64_t v46 = sub_1DFDF99F0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v25, 1, 1, v46);
      sub_1DEBC9E14();
      sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
      id v47 = v45;
      uint64_t v48 = v102;
      sub_1DFDF7830();
      sub_1DEFF8400((uint64_t)v25, (unint64_t *)&unk_1EBAE9A70, MEMORY[0x1E4F80458]);

      uint64_t v41 = type metadata accessor for TagFeedModel(0);
      swift_storeEnumTagMultiPayload();

      uint64_t v42 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
      uint64_t v43 = v48;
      goto LABEL_8;
    }
    if (v37 == *MEMORY[0x1E4F815E0])
    {
      (*(void (**)(id *, uint64_t))(v33 + 96))(v35, v32);
      id v123 = *(id *)(v7 + 24);
      id v49 = v123;
      sub_1DEBC9E14();
      sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
      id v50 = v49;
      uint64_t v51 = v102;
      sub_1DFDF77F0();

      uint64_t v41 = type metadata accessor for TagFeedModel(0);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      uint64_t v42 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
      uint64_t v43 = v51;
      goto LABEL_8;
    }
    if (v37 == *MEMORY[0x1E4F81608])
    {
      (*(void (**)(id *, uint64_t))(v33 + 96))(v35, v32);
      uint64_t v54 = v119;
      (*(void (**)(char *, id *, uint64_t))(v119 + 32))(v28, v35, v26);
      id v123 = *(id *)(v7 + 24);
      id v55 = v123;
      sub_1DEBC9E14();
      sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
      id v56 = v55;
      uint64_t v57 = v102;
      sub_1DFDF7890();

      uint64_t v58 = type metadata accessor for TagFeedModel(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v26);
      uint64_t v42 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56);
      uint64_t v43 = v57;
      goto LABEL_13;
    }
    if (v37 == *MEMORY[0x1E4F815F8])
    {
      (*(void (**)(id *, uint64_t))(v33 + 96))(v35, v32);
      id v59 = objc_msgSend(*v35, sel_puzzleType);
      swift_getObjectType();
      char v60 = sub_1DFDFF090();
      swift_unknownObjectRelease();
      if (v60)
      {
        id v123 = *(id *)(v7 + 24);
        id v61 = v123;
        sub_1DEBC9E14();
        sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
        id v62 = v61;
        uint64_t v51 = v102;
        sub_1DFDF7840();

        uint64_t v41 = type metadata accessor for TagFeedModel(0);
        goto LABEL_7;
      }
    }
    else
    {
      if (v37 != *MEMORY[0x1E4F815C8])
      {
        if (v37 == *MEMORY[0x1E4F815D8])
        {
          (*(void (**)(id *, uint64_t))(v33 + 96))(v35, v32);
          uint64_t v67 = v116;
          uint64_t v66 = v117;
          uint64_t v68 = v118;
          (*(void (**)(char *, id *, uint64_t))(v117 + 32))(v116, v35, v118);
          id v123 = *(id *)(v7 + 24);
          id v69 = v123;
          sub_1DEBC9E14();
          sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
          id v70 = v69;
          uint64_t v71 = v102;
          sub_1DFDF77D0();

          uint64_t v58 = type metadata accessor for TagFeedModel(0);
        }
        else
        {
          if (v37 != *MEMORY[0x1E4F815F0])
          {
            if (v37 != *MEMORY[0x1E4F815D0])
            {
              sub_1DEFF84EC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
              uint64_t v87 = swift_allocObject();
              *(_OWORD *)(v87 + 16) = xmmword_1DFE0B250;
              id v123 = 0;
              unint64_t v124 = 0xE000000000000000;
              sub_1DFDFFB10();
              id v88 = v123;
              unint64_t v89 = v124;
              *(void *)(v87 + 56) = MEMORY[0x1E4FBB1A0];
              *(void *)(v87 + 64) = sub_1DEA08668();
              *(void *)(v87 + 32) = v88;
              *(void *)(v87 + 40) = v89;
              MEMORY[0x1E01DB6A0]("Unknown format item %{public}@ encountered. Please update this switch statement to handle the new case.", 103, 2, v87);
              swift_bridgeObjectRelease();
              uint64_t v90 = type metadata accessor for TagFeedModel(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v102, 1, 1, v90);
              return (*(uint64_t (**)(id *, uint64_t))(v33 + 8))(v35, v32);
            }
            (*(void (**)(id *, uint64_t))(v33 + 96))(v35, v32);
            uint64_t v74 = v110;
            (*(void (**)(char *, id *, uint64_t))(v111 + 32))(v110, v35, v112);
            uint64_t v75 = sub_1DFDFB0E0();
            uint64_t v77 = v109;
            if (*(void *)(v109 + 16))
            {
              unint64_t v78 = sub_1DEA6D930(v75, v76);
              uint64_t v79 = v102;
              uint64_t v81 = v121;
              uint64_t v80 = v122;
              uint64_t v83 = v106;
              uint64_t v82 = v107;
              uint64_t v84 = v105;
              if (v85)
              {
                sub_1DEFF8340(*(void *)(v77 + 56) + *(void *)(v105 + 72) * v78, v107);
                uint64_t v86 = 0;
              }
              else
              {
                uint64_t v86 = 1;
              }
              uint64_t v91 = v81;
            }
            else
            {
              uint64_t v86 = 1;
              uint64_t v79 = v102;
              uint64_t v91 = v121;
              uint64_t v80 = v122;
              uint64_t v83 = v106;
              uint64_t v82 = v107;
              uint64_t v84 = v105;
            }
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v82, v86, 1, v83);
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83) == 1)
            {
              (*(void (**)(char *, uint64_t))(v111 + 8))(v74, v112);
              sub_1DEFF8400(v82, qword_1EBAF46E8, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedModelPlaceholder);
              uint64_t v92 = type metadata accessor for TagFeedModel(0);
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v79, 1, 1, v92);
            }
            uint64_t v93 = v104;
            sub_1DEFF82DC(v82, v104);
            uint64_t v94 = v103;
            sub_1DEFF8340(v93, v103);
            int64_t v96 = v116;
            uint64_t v95 = v117;
            (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v116, v94, v118);
            sub_1DEAB957C();
            uint64_t v97 = swift_allocObject();
            *(_OWORD *)(v97 + 16) = xmmword_1DFE0B750;
            *(void *)(v97 + 32) = v91;
            *(void *)(v97 + 40) = v80;
            swift_bridgeObjectRetain();
            *(void *)(v97 + 48) = sub_1DFDFB0E0();
            *(void *)(v97 + 56) = v98;
            sub_1DFDFA490();
            swift_bridgeObjectRelease();
            id v123 = *(id *)(v7 + 24);
            id v99 = v123;
            sub_1DEBC9E14();
            sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
            id v100 = v99;
            uint64_t v101 = v102;
            sub_1DFDF77D0();

            uint64_t v41 = type metadata accessor for TagFeedModel(0);
            swift_storeEnumTagMultiPayload();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v118);
            sub_1DEFF83A4(v93);
            (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v112);
            uint64_t v42 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
            uint64_t v43 = v101;
            goto LABEL_8;
          }
          (*(void (**)(id *, uint64_t))(v33 + 96))(v35, v32);
          uint64_t v67 = v113;
          uint64_t v66 = v114;
          uint64_t v68 = v115;
          (*(void (**)(char *, id *, uint64_t))(v114 + 32))(v113, v35, v115);
          id v123 = *(id *)(v7 + 24);
          id v72 = v123;
          sub_1DEBC9E14();
          sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
          id v73 = v72;
          uint64_t v71 = v102;
          sub_1DFDF7790();

          uint64_t v58 = type metadata accessor for TagFeedModel(0);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
        uint64_t v42 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56);
        uint64_t v43 = v71;
LABEL_13:
        uint64_t v52 = v58;
        return v42(v43, 0, 1, v52);
      }
      (*(void (**)(id *, uint64_t))(v33 + 96))(v35, v32);
      swift_getObjectType();
      if (sub_1DFDFF090())
      {
        id v123 = *(id *)(v7 + 24);
        id v63 = v123;
        sub_1DEBC9E14();
        sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
        id v64 = v63;
        uint64_t v51 = v102;
        sub_1DFDF77B0();

        uint64_t v41 = type metadata accessor for TagFeedModel(0);
        goto LABEL_7;
      }
    }
    uint64_t v65 = type metadata accessor for TagFeedModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v102, 1, 1, v65);
    return swift_unknownObjectRelease();
  }
  (*(void (**)(id *, uint64_t))(v33 + 96))(v35, v32);
  uint64_t v38 = sub_1DFDF6490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v31, 1, 1, v38);
  id v123 = *(id *)(v7 + 24);
  id v39 = v123;
  sub_1DEBC9E14();
  sub_1DEFF8A68(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
  id v40 = v39;
  sub_1DFDF7880();

  uint64_t v41 = type metadata accessor for TagFeedModel(0);
  swift_storeEnumTagMultiPayload();
  swift_unknownObjectRelease();
  sub_1DEFF8400((uint64_t)v31, &qword_1EBAA8660, MEMORY[0x1E4F7A860]);
  uint64_t v42 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
  uint64_t v43 = a6;
LABEL_8:
  uint64_t v52 = v41;
  return v42(v43, 0, 1, v52);
}

uint64_t type metadata accessor for TagFeedModelFactory()
{
  return self;
}

uint64_t sub_1DEFF81BC()
{
  return sub_1DEFF8A68(&qword_1EBAD3F10, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
}

uint64_t sub_1DEFF8204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v10 = sub_1DF349960(MEMORY[0x1E4FBC860]);
  sub_1DEFF6F48(a1, a2, a3, a4, v10, a5);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for TagFeedModelPlaceholder()
{
  uint64_t result = qword_1EBAF46D8;
  if (!qword_1EBAF46D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFF82DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TagFeedModelPlaceholder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEFF8340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TagFeedModelPlaceholder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEFF83A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TagFeedModelPlaceholder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEFF8400(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DEFF84EC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DEFF8470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = sub_1DF68054C(v6);
  sub_1DEFF6F48(a1, v5, v8, v9, v7, a2);
  return swift_bridgeObjectRelease();
}

void sub_1DEFF84EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *sub_1DEFF8550(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1DFDFADB0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_1DEFF8600(uint64_t a1)
{
  uint64_t v2 = sub_1DFDFADB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1DEFF8664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFADB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DEFF86C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFADB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DEFF872C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFADB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DEFF8790(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFADB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DEFF87F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFADB0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DEFF8860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDFADB0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t sub_1DEFF88DC(uint64_t a1)
{
  uint64_t result = sub_1DFDFADB0();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

void sub_1DEFF8980()
{
  if (!qword_1EBAE9B80)
  {
    sub_1DFDFA250();
    sub_1DEBC9E14();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F805F8];
    sub_1DEFF8A68(&qword_1EBAE9C70, MEMORY[0x1E4F805F8]);
    sub_1DEFF8A68((unint64_t *)&unk_1EBAE9C60, v0);
    unint64_t v1 = sub_1DFDF9B00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAE9B80);
    }
  }
}

uint64_t sub_1DEFF8A68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEFF8AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v31 = type metadata accessor for TodayConfig();
  MEMORY[0x1F4188790](v31);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEFFC3A4(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v31 - v7;
  sub_1DEFFC3A4(0, qword_1EBAAE488, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroupConfig, v5);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for TodayFeedGroupConfig();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TodayFeedConfig();
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v31 - v20;
  sub_1DF1D389C((uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1DEFFA8D4((uint64_t)v11, qword_1EBAAE488, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroupConfig);
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1DEFFC33C((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupConfig);
    sub_1DEFFC3A4(0, &qword_1EBABB588, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroupConfig, MEMORY[0x1E4FBBE00]);
    unint64_t v23 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
    sub_1DEFFC33C((uint64_t)v15, v22 + v23, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupConfig);
  }
  sub_1DEA1F784(a1, (uint64_t)v8);
  sub_1DEA1F784((uint64_t)v8, (uint64_t)v19);
  swift_bridgeObjectRetain();
  sub_1DEFFA8D4((uint64_t)v8, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
  *(void *)&v19[*(int *)(v16 + 20)] = v22;
  sub_1DEFFC33C((uint64_t)v19, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
  swift_bridgeObjectRelease();
  sub_1DEFFA86C((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
  uint64_t v24 = v31;
  uint64_t v25 = (uint64_t *)(a1 + *(int *)(v31 + 20));
  uint64_t v26 = *v25;
  uint64_t v27 = v25[1];
  uint64_t v28 = v25[2];
  sub_1DEFFA86C((uint64_t)v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
  swift_retain();
  swift_retain();
  sub_1DEAD4450((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
  uint64_t v29 = &v4[*(int *)(v24 + 20)];
  *(void *)uint64_t v29 = v26;
  *((void *)v29 + 1) = v27;
  *((void *)v29 + 2) = v28;
  sub_1DEFFC33C((uint64_t)v4, v32, (uint64_t (*)(void))type metadata accessor for TodayConfig);
  return sub_1DEAD4450((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
}

uint64_t sub_1DEFF8F0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TodayFeedServiceContext();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v6 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = &v24[-v7];
  CFTimeInterval v9 = CACurrentMediaTime();
  if (qword_1EBAD0608 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1DFDF01D0();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBB62D20);
  uint64_t v11 = sub_1DFDF01B0();
  os_log_type_t v12 = sub_1DFDFEA60();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1DE913000, v11, v12, "Will micro-update offline feed", v13, 2u);
    MEMORY[0x1E01EFA10](v13, -1, -1);
  }

  char v25 = 1;
  uint64_t v14 = sub_1DE9FEF48(&v25, (uint64_t)v8);
  MEMORY[0x1F4188790](v14);
  *(void *)&v24[-16] = v1;
  *(void *)&v24[-8] = v8;
  type metadata accessor for TodayFeedServiceConfig();
  sub_1DFDEE090();
  uint64_t v15 = (void *)sub_1DFDEDCE0();
  sub_1DEAA41F0(0);
  sub_1DFDEDE10();
  swift_release();

  uint64_t v16 = (void *)sub_1DFDEDCE0();
  sub_1DEFFBFD8(0, &qword_1EAC27738, sub_1DEAA41F0, (void (*)(uint64_t))type metadata accessor for OfflineFeedManifest);
  sub_1DFDEDE10();
  swift_release();

  sub_1DEFFA86C((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TodayFeedServiceContext);
  unint64_t v17 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = swift_allocObject();
  sub_1DEFFC33C((uint64_t)v6, v18 + v17, (uint64_t (*)(void))type metadata accessor for TodayFeedServiceContext);
  uint64_t v19 = (void *)sub_1DFDEDCE0();
  type metadata accessor for OfflineFeedManifest(0);
  sub_1DFDEDE10();
  swift_release();
  swift_release();

  *(CFTimeInterval *)(swift_allocObject() + 16) = v9;
  uint64_t v20 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE00();
  swift_release();
  swift_release();

  uint64_t v21 = (void *)sub_1DFDEDCE0();
  uint64_t v22 = sub_1DFDEDE50();
  swift_release();

  sub_1DEAD4450((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TodayFeedServiceContext);
  return v22;
}

uint64_t sub_1DEFF9370(void *a1, uint64_t a2)
{
  sub_1DEA08324(0, (unint64_t *)&qword_1EBABA390, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F805A0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)v12 - v7;
  uint64_t v9 = *(void *)(a2 + 16);
  v12[0] = *a1;
  v12[1] = v9;
  type metadata accessor for TodayFeedServiceConfig();
  sub_1DEA2BBE8();
  swift_retain();
  sub_1DFDFA110();
  sub_1DEA08324(0, (unint64_t *)&qword_1EBABA330, (uint64_t (*)(uint64_t))sub_1DEAC15C0, sub_1DEAC16C0, MEMORY[0x1E4F80510]);
  sub_1DEABFD44();
  uint64_t v10 = sub_1DFDF75D0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  return v10;
}

uint64_t sub_1DEFF9538(uint64_t *a1)
{
  uint64_t v2 = sub_1DFDF01D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  if (qword_1EBAD0608 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBB62D20);
  unint64_t v8 = sub_1DFDF01B0();
  os_log_type_t v9 = sub_1DFDFEA60();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1DE913000, v8, v9, "Will process micro-updated groups", v10, 2u);
    MEMORY[0x1E01EFA10](v10, -1, -1);
  }

  type metadata accessor for TodayFeedServiceConfig();
  sub_1DEA2BBE8();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DFDF8B00();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = swift_bridgeObjectRetain();
  *(void *)(v12 + 16) = sub_1DECE81F0(v13);
  uint64_t v14 = type metadata accessor for OfflineFeedManifest(0);
  uint64_t v15 = swift_allocBox();
  uint64_t v25 = v2;
  uint64_t v16 = v6;
  uint64_t v17 = v15;
  uint64_t v19 = v18;
  if (qword_1EBAD0AC8 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1EBAD0AB0);
  sub_1DEFFA86C(v20, v19, type metadata accessor for OfflineFeedManifest);
  sub_1DECE9498(v12, v17, v11, (uint64_t)v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v16;
  swift_retain();
  uint64_t v21 = (void *)sub_1DFDEDCE0();
  sub_1DEFFBFD8(0, &qword_1EAC27738, sub_1DEAA41F0, (void (*)(uint64_t))type metadata accessor for OfflineFeedManifest);
  uint64_t v22 = sub_1DFDEDE00();
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_1DEFF98AC(uint64_t *a1, uint64_t (*a2)(), uint64_t a3)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  sub_1DEFFC3A4(0, &qword_1EBAAAF80, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v40 - v5;
  uint64_t v46 = (uint64_t (*)(void))type metadata accessor for TodayFeedGroup();
  uint64_t v7 = *((void *)v46 - 1);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v46);
  uint64_t v45 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v42 = (uint64_t)&v40 - v10;
  sub_1DEFFBFD8(0, &qword_1EAC27738, sub_1DEAA41F0, (void (*)(uint64_t))type metadata accessor for OfflineFeedManifest);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v47 = type metadata accessor for OfflineFeedManifest(0);
  uint64_t v41 = *(void *)(v47 - 8);
  uint64_t v15 = *(void *)(v41 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v47);
  uint64_t v48 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = *(int *)(v12 + 56);
  uint64_t v20 = (uint64_t)&v14[v19];
  uint64_t v21 = *a1;
  sub_1DEFFA86C((uint64_t)a1 + v19, (uint64_t)&v14[v19], type metadata accessor for OfflineFeedManifest);
  id v49 = v18;
  sub_1DEFFC33C(v20, (uint64_t)v18, type metadata accessor for OfflineFeedManifest);
  uint64_t v22 = qword_1EBAD0608;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1DFDF01D0();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EBB62D20);
  uint64_t v24 = sub_1DFDF01B0();
  os_log_type_t v25 = sub_1DFDFEA60();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_1DE913000, v24, v25, "Did process micro-updated groups", v26, 2u);
    MEMORY[0x1E01EFA10](v26, -1, -1);
  }

  sub_1DF7F86EC((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t (*)(void)))(v7 + 48))(v6, 1, v46) == 1)
  {
    sub_1DEFFA8D4((uint64_t)v6, &qword_1EBAAAF80, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup);
    if (qword_1EBAD0AC8 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v47, (uint64_t)qword_1EBAD0AB0);
    sub_1DEFFA86C(v27, v48, type metadata accessor for OfflineFeedManifest);
    sub_1DEFFC3A4(0, (unint64_t *)&unk_1EAC38A90, type metadata accessor for OfflineFeedManifest, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v28 = sub_1DFDEDE90();
    swift_release();
    uint64_t v29 = (uint64_t)v49;
    uint64_t v30 = type metadata accessor for OfflineFeedManifest;
  }
  else
  {
    uint64_t v40 = v7;
    uint64_t v31 = v42;
    uint64_t v32 = sub_1DEFFC33C((uint64_t)v6, v42, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    MEMORY[0x1F4188790](v32);
    *(&v40 - 4) = (uint64_t)v43;
    *(&v40 - 3) = v31;
    *(&v40 - 2) = v44;
    sub_1DFDEE090();
    uint64_t v46 = type metadata accessor for OfflineFeedManifest;
    uint64_t v44 = v21 & 0x1FFFFFFFFFFFFFFFLL;
    uint64_t v33 = v48;
    sub_1DEFFA86C((uint64_t)v49, v48, type metadata accessor for OfflineFeedManifest);
    uint64_t v43 = type metadata accessor for TodayFeedGroup;
    uint64_t v34 = v45;
    sub_1DEFFA86C(v31, v45, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    unint64_t v35 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    unint64_t v36 = (v15 + *(unsigned __int8 *)(v40 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v37 = swift_allocObject();
    sub_1DEFFC33C(v33, v37 + v35, type metadata accessor for OfflineFeedManifest);
    sub_1DEFFC33C(v34, v37 + v36, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    uint64_t v38 = (void *)sub_1DFDEDCE0();
    uint64_t v28 = sub_1DFDEDE00();
    swift_release();
    swift_release();

    swift_release();
    sub_1DEAD4450((uint64_t)v49, v46);
    uint64_t v29 = v31;
    uint64_t v30 = (uint64_t (*)(uint64_t))v43;
  }
  sub_1DEAD4450(v29, v30);
  return v28;
}

uint64_t sub_1DEFF9F08()
{
  swift_retain();
  sub_1DFDF9EC0();
  sub_1DE94A838();
  sub_1DEA4AFFC((unint64_t *)&unk_1EBAA63D0, (void (*)(uint64_t))sub_1DE94A838);
  uint64_t v0 = sub_1DFDF7600();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DEFF9FE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v19[0] = a2;
  v19[1] = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEFFC3A4(0, (unint64_t *)&unk_1EBACA420, MEMORY[0x1E4F80940], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v19 - v4;
  sub_1DEFFC3A4(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], v2);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = sub_1DFDE7600();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  sub_1DEA77CD8((uint64_t)v5);
  uint64_t v14 = sub_1DFDFA9F0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14) == 1)
  {
    sub_1DEFFA8D4((uint64_t)v5, (unint64_t *)&unk_1EBACA420, MEMORY[0x1E4F80940]);
    uint64_t v16 = 1;
  }
  else
  {
    sub_1DFDFA8F0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v14);
    uint64_t v16 = 0;
  }
  v13(v9, v16, 1, v12);
  OfflineFeedManifest.with(createdAt:updatedAt:groups:assetURLs:assetWrappingKeyIDs:recordIDs:avAssetIDs:avAssetKeyIDs:avAssetKeyURIs:)((uint64_t)v11, (uint64_t)v9, 0, 0, 0, 0, 0, 0, v19[0], 0);
  uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1DEFFA8D4((uint64_t)v9, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
  return sub_1DEFFA8D4((uint64_t)v11, (unint64_t *)&qword_1EBAA6DB0, v17);
}

uint64_t sub_1DEFFA2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1EBAD0608 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1DFDF01D0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBB62D20);
  uint64_t v5 = sub_1DFDF01B0();
  os_log_type_t v6 = sub_1DFDFEA60();
  if (!os_log_type_enabled(v5, v6)) {
    goto LABEL_8;
  }
  uint64_t v7 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v7 = 134349056;
  uint64_t result = sub_1DFDFE560();
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v9 < 9.22337204e18)
  {
    sub_1DFDFF680();
    _os_log_impl(&dword_1DE913000, v5, v6, "Did micro-update offline feed, time=%{public}lldms", v7, 0xCu);
    MEMORY[0x1E01EFA10](v7, -1, -1);
LABEL_8:

    return sub_1DEFFA86C(a1, a2, type metadata accessor for OfflineFeedManifest);
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1DEFFA454(void *a1)
{
  if (qword_1EBAD0608 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DFDF01D0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB62D20);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_1DFDF01B0();
  os_log_type_t v5 = sub_1DFDFEA40();
  if (os_log_type_enabled(oslog, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v6 = 138543362;
    id v8 = a1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    sub_1DFDFF680();
    *uint64_t v7 = v10;

    _os_log_impl(&dword_1DE913000, oslog, v5, "Failed to micro-update offline feed, error=%{public}@", v6, 0xCu);
    sub_1DEFFC3A4(0, (unint64_t *)&qword_1EBAEA670, (uint64_t (*)(uint64_t))sub_1DEB20C50, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v7, -1, -1);
    MEMORY[0x1E01EFA10](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1DEFFA65C()
{
  return sub_1DEFF8F0C();
}

uint64_t sub_1DEFFA680()
{
  return sub_1DF6D5B64(*(void *)(v0 + 24));
}

uint64_t sub_1DEFFA6B0()
{
  uint64_t v1 = (int *)(type metadata accessor for TodayFeedServiceContext() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v3 = (char *)v2 + v1[12];
  uint64_t v4 = sub_1DFDF7E30();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1DEFFA7C4(uint64_t *a1, uint64_t (*a2)())
{
  uint64_t v5 = *(void *)(type metadata accessor for TodayFeedServiceContext() - 8);
  return sub_1DEFF98AC(a1, a2, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_1DEFFA840()
{
  return swift_deallocObject();
}

uint64_t sub_1DEFFA850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEFFA2B4(a1, a2);
}

uint64_t sub_1DEFFA86C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEFFA8D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DEFFC3A4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DEFFA944()
{
  return sub_1DEFF9F08();
}

uint64_t sub_1DEFFA964()
{
  uint64_t v1 = (int *)(type metadata accessor for OfflineFeedManifest(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for TodayFeedGroup() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v2;
  uint64_t v7 = sub_1DFDE7600();
  id v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[7], v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v9 = (char *)(v0 + v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v12 = sub_1DFDF7010();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v0 + v5, v12);
      uint64_t v13 = type metadata accessor for CuratedTodayFeedGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = *(int *)(v13 + 28);
LABEL_8:
      v9 += v14;
      uint64_t v10 = sub_1DFDF8F10();
      goto LABEL_3;
    case 1u:
      uint64_t v15 = sub_1DFDF7010();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v0 + v5, v15);
      type metadata accessor for NewspaperTodayFeedGroup();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 2u:
      uint64_t v16 = sub_1DFDF7010();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v0 + v5, v16);
      uint64_t v17 = type metadata accessor for LocalNewsTodayFeedGroup();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = &v9[*(int *)(v17 + 28)];
      uint64_t v19 = sub_1DFDF9EE0();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
      }
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
      goto LABEL_2;
    case 9u:
      type metadata accessor for MagazineFeedGroup();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v21 = type metadata accessor for CategoriesMagazineFeedGroup();
          goto LABEL_24;
        case 1u:
          sub_1DEFFC054(0, (unint64_t *)&qword_1EBACA220, (void (*)(uint64_t))type metadata accessor for FeaturedArticleMagazineFeedGroupConfigData, (void (*)(void))sub_1DEF50E1C, (void (*)(void))sub_1DEF50E50);
          (*(void (**)(unint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v0 + v5, v25);
          uint64_t v23 = type metadata accessor for FeaturedArticleMagazineFeedGroup();
          goto LABEL_17;
        case 2u:
        case 0xAu:
        case 0xBu:
          goto LABEL_2;
        case 3u:
          sub_1DEFFC054(0, (unint64_t *)&qword_1EBACA240, (void (*)(uint64_t))type metadata accessor for FeaturedIssueArticleMagazineFeedGroupConfigData, (void (*)(void))sub_1DEF50F10, (void (*)(void))sub_1DEF50F44);
          (*(void (**)(unint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v0 + v5, v26);
          uint64_t v23 = type metadata accessor for FeaturedIssueArticleMagazineFeedGroup();
          goto LABEL_17;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v21 = type metadata accessor for InlineCategoriesMagazineFeedGroup();
LABEL_24:
          v9 += *(int *)(v21 + 40);
          uint64_t v10 = sub_1DFDF8C20();
          goto LABEL_3;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v27 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
          uint64_t v28 = &v9[v27[10]];
          uint64_t v29 = sub_1DFDF8C20();
          uint64_t v30 = *(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8);
          v30(v28, v29);
          v30(&v9[v27[11]], v29);
          uint64_t v31 = &v9[v27[13]];
          sub_1DEA08324(0, (unint64_t *)&qword_1EBAE9610, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F760]);
          (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
          uint64_t v33 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
          swift_release();
          uint64_t v34 = &v31[*(int *)(v33 + 24)];
          sub_1DEA08324(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
          (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
          swift_unknownObjectRelease();
          unint64_t v36 = &v9[v27[16]];
          uint64_t v37 = sub_1DFDF8F10();
          (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
          uint64_t v38 = &v9[v27[17]];
          uint64_t v39 = sub_1DFDF7CB0();
          uint64_t v40 = *(void *)(v39 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39)) {
            (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
          }
          goto LABEL_20;
        case 6u:
          sub_1DEFFC054(0, (unint64_t *)&qword_1EBACA1D0, (void (*)(uint64_t))type metadata accessor for NewIssueMagazineFeedGroupConfigData, (void (*)(void))sub_1DEF50F78, (void (*)(void))sub_1DEF50FAC);
          (*(void (**)(unint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v0 + v5, v41);
          uint64_t v23 = type metadata accessor for NewIssueMagazineFeedGroup();
          goto LABEL_17;
        case 7u:
          swift_bridgeObjectRelease();
          uint64_t v42 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
          uint64_t v43 = &v9[v42[5]];
          uint64_t v44 = sub_1DFDF8C20();
          uint64_t v45 = *(void (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8);
          v45(v43, v44);
          v45(&v9[v42[6]], v44);
          uint64_t v46 = (id *)&v9[v42[9]];
          type metadata accessor for FeedPaywallModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v47 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            uint64_t v48 = (char *)v46 + v47[5];
            uint64_t v49 = sub_1DFDE7220();
            uint64_t v50 = *(void *)(v49 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49)) {
              (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v51 = (char *)v46 + v47[22];
            uint64_t v52 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
            swift_bridgeObjectRelease();
            uint64_t v53 = v47[24];
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v64 = type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v65 = (char *)v46 + *(int *)(v64 + 64);
            uint64_t v66 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
            swift_bridgeObjectRelease();
            uint64_t v53 = *(int *)(v64 + 72);
          }
          uint64_t v67 = (char *)v46 + v53;
          uint64_t v68 = sub_1DFDEF130();
          uint64_t v69 = *(void *)(v68 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68)) {
            (*(void (**)(char *, uint64_t))(v69 + 8))(v67, v68);
          }
          uint64_t v102 = (int *)type metadata accessor for FeedPaywallConfig();
          id v70 = (id *)((char *)v46 + v102[5]);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v71 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            id v72 = (char *)v70 + v71[5];
            uint64_t v73 = sub_1DFDE7220();
            uint64_t v74 = *(void *)(v73 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73)) {
              (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v75 = (char *)v70 + v71[22];
            uint64_t v76 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v76 - 8) + 8))(v75, v76);
            swift_bridgeObjectRelease();
            uint64_t v77 = (char *)v70 + v71[24];
            uint64_t v78 = sub_1DFDEF130();
            uint64_t v79 = *(void *)(v78 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78)) {
              (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v78);
            }
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v80 = type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v81 = (char *)v70 + *(int *)(v80 + 64);
            uint64_t v82 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v82 - 8) + 8))(v81, v82);
            swift_bridgeObjectRelease();
            uint64_t v83 = (char *)v70 + *(int *)(v80 + 72);
            uint64_t v84 = sub_1DFDEF130();
            uint64_t v85 = *(void *)(v84 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84)) {
              (*(void (**)(char *, uint64_t))(v85 + 8))(v83, v84);
            }
          }
          uint64_t v86 = (id *)((char *)v46 + v102[6]);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v87 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            id v88 = (char *)v86 + v87[5];
            uint64_t v89 = sub_1DFDE7220();
            uint64_t v90 = *(void *)(v89 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89)) {
              (*(void (**)(char *, uint64_t))(v90 + 8))(v88, v89);
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v91 = (char *)v86 + v87[22];
            uint64_t v92 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v92 - 8) + 8))(v91, v92);
            swift_bridgeObjectRelease();
            uint64_t v93 = v87[24];
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v94 = type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v95 = (char *)v86 + *(int *)(v94 + 64);
            uint64_t v96 = sub_1DFDEF360();
            (*(void (**)(char *, uint64_t))(*(void *)(v96 - 8) + 8))(v95, v96);
            swift_bridgeObjectRelease();
            uint64_t v93 = *(int *)(v94 + 72);
          }
          uint64_t v97 = (char *)v86 + v93;
          uint64_t v98 = sub_1DFDEF130();
          uint64_t v99 = *(void *)(v98 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98)) {
            (*(void (**)(char *, uint64_t))(v99 + 8))(v97, v98);
          }
          id v100 = (char *)v46 + v102[7];
          type metadata accessor for FeedPaywallType(0);
          if (swift_getEnumCaseMultiPayload()) {
            goto LABEL_4;
          }
          sub_1DEFFBFD8(0, (unint64_t *)&qword_1EBAC0120, type metadata accessor for FCFeedPaywallSubtype, MEMORY[0x1E4F823C0]);
          double v9 = &v100[*(int *)(v101 + 48)];
          uint64_t v10 = sub_1DFDEEE80();
          break;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v54 = type metadata accessor for RecommendedIssuesMagazineFeedGroup();
          id v55 = &v9[*(int *)(v54 + 44)];
          uint64_t v56 = sub_1DFDF8C20();
          uint64_t v57 = *(void (**)(char *, uint64_t))(*(void *)(v56 - 8) + 8);
          v57(v55, v56);
          v57(&v9[*(int *)(v54 + 48)], v56);
          goto LABEL_4;
        case 9u:
          sub_1DEFFC054(0, (unint64_t *)&qword_1EBACA190, (void (*)(uint64_t))type metadata accessor for TopicMagazineFeedGroupConfigData, (void (*)(void))sub_1DEF50FE0, (void (*)(void))sub_1DEF51014);
          (*(void (**)(unint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v0 + v5, v58);
          uint64_t v23 = type metadata accessor for TopicMagazineFeedGroup();
          goto LABEL_17;
        case 0xCu:
          uint64_t v59 = sub_1DFDF7010();
          (*(void (**)(unint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v0 + v5, v59);
          type metadata accessor for NewspaperMagazineFeedGroup();
          swift_unknownObjectRelease();
          goto LABEL_20;
        case 0xDu:
          sub_1DEFFC054(0, (unint64_t *)&qword_1EBACA1A0, (void (*)(uint64_t))type metadata accessor for CuratedMagazineFeedGroupConfigData, (void (*)(void))sub_1DEF51048, (void (*)(void))sub_1DEF5107C);
          (*(void (**)(unint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v0 + v5, v60);
          uint64_t v61 = type metadata accessor for CuratedMagazineFeedGroup();
          id v62 = &v9[*(int *)(v61 + 20)];
          uint64_t v63 = sub_1DFDF7010();
          (*(void (**)(char *, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
          uint64_t v14 = *(int *)(v61 + 24);
          goto LABEL_8;
        default:
          goto LABEL_4;
      }
      goto LABEL_3;
    case 0xCu:
      uint64_t v10 = sub_1DFDF6D40();
      goto LABEL_3;
    case 0x10u:
      sub_1DEFFC054(0, (unint64_t *)&qword_1EBACA1F0, (void (*)(uint64_t))type metadata accessor for SharedWithYouTodayFeedGroupConfigData, (void (*)(void))sub_1DEFFC0E0, (void (*)(void))sub_1DEFFC114);
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v0 + v5, v22);
      uint64_t v23 = type metadata accessor for SharedWithYouTodayFeedGroup();
LABEL_17:
      v9 += *(int *)(v23 + 20);
LABEL_2:
      uint64_t v10 = sub_1DFDF7010();
      goto LABEL_3;
    case 0x11u:
      sub_1DEAC2768();
LABEL_3:
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      break;
    case 0x17u:
      uint64_t v24 = sub_1DFDF7010();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v0 + v5, v24);
      type metadata accessor for ChannelPickerTodayFeedGroup();
LABEL_20:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_4:
  return swift_deallocObject();
}

void sub_1DEFFBFD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1DEFFC054(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    a5();
    unint64_t v8 = sub_1DFDF7430();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DEFFC0E0()
{
  return sub_1DEA4AFFC(&qword_1EBAC8FC0, (void (*)(uint64_t))type metadata accessor for SharedWithYouTodayFeedGroupConfigData);
}

uint64_t sub_1DEFFC114()
{
  return sub_1DEA4AFFC((unint64_t *)&unk_1EBAC8FB0, (void (*)(uint64_t))type metadata accessor for SharedWithYouTodayFeedGroupConfigData);
}

uint64_t sub_1DEFFC148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for OfflineFeedManifest(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  type metadata accessor for TodayFeedGroup();
  return sub_1DEFF9FE4(v1 + v4, a1);
}

uint64_t sub_1DEFFC228()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEFFC260()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEFFC29C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  sub_1DEFFBFD8(0, &qword_1EAC27738, sub_1DEAA41F0, (void (*)(uint64_t))type metadata accessor for OfflineFeedManifest);
  uint64_t v7 = (uint64_t)a2 + *(int *)(v6 + 48);
  *a2 = v5;
  sub_1DEFFA86C(a1, v7, type metadata accessor for OfflineFeedManifest);
  return swift_retain();
}

uint64_t sub_1DEFFC33C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1DEFFC3A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *sub_1DEFFC408(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    *(uint64_t *)((char *)a1 + v6) = *(uint64_t *)((char *)a2 + v6);
    uint64_t v9 = *(int *)(type metadata accessor for ShortcutsUpdateAllRequest() + 20);
    uint64_t v10 = &v7[v9];
    uint64_t v11 = &v8[v9];
    uint64_t v12 = type metadata accessor for ShortcutsCustomizeAffordance();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = *((void *)v11 + 1);
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v17;
      uint64_t v18 = *((void *)v11 + 3);
      *((void *)v10 + 2) = *((void *)v11 + 2);
      *((void *)v10 + 3) = v18;
      uint64_t v19 = (void *)*((void *)v11 + 4);
      *((void *)v10 + 4) = v19;
      uint64_t v20 = *(int *)(v12 + 28);
      __dst = &v10[v20];
      uint64_t v28 = &v11[v20];
      uint64_t v21 = sub_1DFDF0BF0();
      uint64_t v25 = *(void *)(v21 - 8);
      uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v22 = v19;
      if (v27(v28, 1, v21))
      {
        sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
        memcpy(__dst, v28, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v28, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v21);
      }
      v10[*(int *)(v12 + 32)] = v11[*(int *)(v12 + 32)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t sub_1DEFFC6E4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ShortcutsUpdateAllRequest() + 20);
  uint64_t v6 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v8 = v5 + *(int *)(v6 + 28);
    uint64_t v9 = sub_1DFDF0BF0();
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9);
    if (!result)
    {
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
      return v10(v8, v9);
    }
  }
  return result;
}

void *sub_1DEFFC830(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(void *)((char *)a1 + v5) = *(void *)((char *)a2 + v5);
  uint64_t v8 = *(int *)(type metadata accessor for ShortcutsUpdateAllRequest() + 20);
  uint64_t v9 = &v6[v8];
  uint64_t v10 = &v7[v8];
  uint64_t v11 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v15;
    uint64_t v16 = *((void *)v10 + 3);
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *((void *)v9 + 3) = v16;
    uint64_t v17 = (void *)*((void *)v10 + 4);
    *((void *)v9 + 4) = v17;
    uint64_t v18 = *(int *)(v11 + 28);
    uint64_t v25 = &v10[v18];
    __dst = &v9[v18];
    uint64_t v19 = sub_1DFDF0BF0();
    uint64_t v23 = *(void *)(v19 - 8);
    uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v20 = v17;
    if (v24(v25, 1, v19))
    {
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      memcpy(__dst, v25, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v25, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v19);
    }
    v9[*(int *)(v11 + 32)] = v10[*(int *)(v11 + 32)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

void *sub_1DEFFCAB8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (void *)((char *)a2 + v6);
  *(void *)((char *)a1 + v6) = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for ShortcutsUpdateAllRequest() + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = (char *)v8 + v9;
  uint64_t v12 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_1DEFFCF94((uint64_t)v10);
      goto LABEL_7;
    }
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = *((void *)v11 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = *((void *)v11 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v23 = (void *)*((void *)v10 + 4);
    uint64_t v24 = (void *)*((void *)v11 + 4);
    *((void *)v10 + 4) = v24;
    id v25 = v24;

    uint64_t v26 = *(int *)(v12 + 28);
    uint64_t v27 = &v10[v26];
    uint64_t v28 = &v11[v26];
    uint64_t v29 = sub_1DFDF0BF0();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
    uint64_t v41 = v27;
    LODWORD(v27) = v31(v27, 1, v29);
    int v32 = v31(v28, 1, v29);
    if (v27)
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v41, v28, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v41, 0, 1, v29);
        goto LABEL_18;
      }
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      size_t v34 = *(void *)(*(void *)(v33 - 8) + 64);
      uint64_t v35 = v41;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v30 + 24))(v41, v28, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v30 + 8))(v41, v29);
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      size_t v34 = *(void *)(*(void *)(v36 - 8) + 64);
      uint64_t v35 = v41;
    }
    memcpy(v35, v28, v34);
LABEL_18:
    v10[*(int *)(v12 + 32)] = v11[*(int *)(v12 + 32)];
    return a1;
  }
  if (v16)
  {
LABEL_7:
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    memcpy(v10, v11, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = *((void *)v11 + 1);
  *((void *)v10 + 2) = *((void *)v11 + 2);
  *((void *)v10 + 3) = *((void *)v11 + 3);
  uint64_t v17 = (void *)*((void *)v11 + 4);
  *((void *)v10 + 4) = v17;
  uint64_t v18 = *(int *)(v12 + 28);
  uint64_t v40 = &v11[v18];
  __dst = &v10[v18];
  uint64_t v19 = sub_1DFDF0BF0();
  uint64_t v38 = *(void *)(v19 - 8);
  uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v20 = v17;
  if (v39(v40, 1, v19))
  {
    sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
    memcpy(__dst, v40, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v40, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v19);
  }
  v10[*(int *)(v12 + 32)] = v11[*(int *)(v12 + 32)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1DEFFCF94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShortcutsCustomizeAffordance();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1DEFFCFF0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(void *)((char *)a1 + v4) = *(void *)((char *)a2 + v4);
  uint64_t v7 = *(int *)(type metadata accessor for ShortcutsUpdateAllRequest() + 20);
  uint64_t v8 = &v5[v7];
  uint64_t v9 = &v6[v7];
  uint64_t v10 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    long long v13 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v13;
    *((void *)v8 + 4) = *((void *)v9 + 4);
    uint64_t v14 = *(int *)(v10 + 28);
    int v15 = &v8[v14];
    int v16 = &v9[v14];
    uint64_t v17 = sub_1DFDF0BF0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v8[*(int *)(v10 + 32)] = v9[*(int *)(v10 + 32)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

void *sub_1DEFFD234(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (void *)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = *v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(type metadata accessor for ShortcutsUpdateAllRequest() + 20);
  uint64_t v11 = &v8[v10];
  uint64_t v12 = (char *)v9 + v10;
  uint64_t v13 = type metadata accessor for ShortcutsCustomizeAffordance();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_1DEFFCF94((uint64_t)v11);
      goto LABEL_7;
    }
    uint64_t v26 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v26;
    swift_bridgeObjectRelease();
    uint64_t v27 = *((void *)v12 + 3);
    *((void *)v11 + 2) = *((void *)v12 + 2);
    *((void *)v11 + 3) = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)*((void *)v11 + 4);
    *((void *)v11 + 4) = *((void *)v12 + 4);

    uint64_t v29 = *(int *)(v13 + 28);
    uint64_t v30 = &v11[v29];
    uint64_t v31 = &v12[v29];
    uint64_t v32 = sub_1DFDF0BF0();
    uint64_t v33 = *(void *)(v32 - 8);
    size_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
    uint64_t v41 = v30;
    LODWORD(v30) = v34(v30, 1, v32);
    int v35 = v34(v31, 1, v32);
    if (v30)
    {
      if (!v35)
      {
        (*(void (**)(void *, char *, uint64_t))(v33 + 32))(v41, v31, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v32);
        goto LABEL_18;
      }
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      size_t v37 = *(void *)(*(void *)(v36 - 8) + 64);
      uint64_t v38 = v41;
    }
    else
    {
      if (!v35)
      {
        (*(void (**)(void *, char *, uint64_t))(v33 + 40))(v41, v31, v32);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v33 + 8))(v41, v32);
      sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
      size_t v37 = *(void *)(*(void *)(v39 - 8) + 64);
      uint64_t v38 = v41;
    }
    memcpy(v38, v31, v37);
LABEL_18:
    v11[*(int *)(v13 + 32)] = v12[*(int *)(v13 + 32)];
    return a1;
  }
  if (v17)
  {
LABEL_7:
    sub_1DEFF2CC4(0, &qword_1EAC2DAE0, (void (*)(uint64_t))type metadata accessor for ShortcutsCustomizeAffordance);
    memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  long long v18 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v18;
  *((void *)v11 + 4) = *((void *)v12 + 4);
  uint64_t v19 = *(int *)(v13 + 28);
  id v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  uint64_t v22 = sub_1DFDF0BF0();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_1DEFF2CC4(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v11[*(int *)(v13 + 32)] = v12[*(int *)(v13 + 32)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_1DEFFD698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEFFD6AC);
}

uint64_t sub_1DEFFD6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t updated = type metadata accessor for ShortcutsUpdateAllRequest();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 48);
    uint64_t v10 = updated;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DEFFD75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEFFD770);
}

uint64_t sub_1DEFFD770(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t updated = type metadata accessor for ShortcutsUpdateAllRequest();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56);
    uint64_t v9 = updated;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ShortcutsRefreshBlueprintModifier()
{
  uint64_t result = qword_1EAC27740;
  if (!qword_1EAC27740) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEFFD864()
{
  uint64_t result = type metadata accessor for ShortcutsUpdateAllRequest();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DEFFD8FC(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v38 = a1;
  uint64_t v3 = sub_1DFDF1930();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v33 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFFE1D4(0, &qword_1EAC27758, MEMORY[0x1E4FACA00]);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v32 = (char *)v29 - v6;
  sub_1DEFFDFDC();
  MEMORY[0x1F4188790](v7 - 8);
  v29[2] = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFFE108();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1DEFFE1D4(0, (unint64_t *)&qword_1EAC20450, MEMORY[0x1E4FAD830]);
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v29 - v11;
  sub_1DEFFE294();
  sub_1DEFFE1D4(0, (unint64_t *)&qword_1EAC20420, MEMORY[0x1E4FAC180]);
  uint64_t v14 = v13;
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DFE0B250;
  v29[1] = v16 + v15;
  type metadata accessor for ShortcutsRefreshBlueprintModifier();
  sub_1DEFF3EA4();
  sub_1DEE03D94();
  uint64_t v18 = v17;
  type metadata accessor for ShortcutsModel();
  sub_1DEFFDF94(&qword_1EAC27798, (void (*)(uint64_t))type metadata accessor for ShortcutsModel);
  uint64_t v19 = sub_1DFDFE270();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1DEFFDF94(&qword_1EAC27780, (void (*)(uint64_t))sub_1DEE03D94);
  uint64_t v21 = sub_1DEFFDF94(&qword_1EAC27788, (void (*)(uint64_t))sub_1DEE03D94);
  MEMORY[0x1E01DBA90](v19, v18, v20, v21);
  sub_1DEB0D530();
  sub_1DEFFDF94((unint64_t *)&unk_1EAC20430, (void (*)(uint64_t))type metadata accessor for ShortcutsModel);
  sub_1DFDF14C0();
  uint64_t v22 = sub_1DEFFE0A8(&qword_1EAC27768);
  uint64_t v23 = sub_1DEFFE0A8(&qword_1EAC27770);
  MEMORY[0x1E01DBA70](v16, v14, v22, v23);
  sub_1DFDF5A70();
  uint64_t v25 = v33;
  uint64_t v24 = v34;
  uint64_t v26 = v35;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, *MEMORY[0x1E4FAC298], v35);
  sub_1DEFFE308();
  uint64_t v27 = v32;
  sub_1DFDF3050();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  v40(v27);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v31);
}

uint64_t sub_1DEFFDEC8()
{
  return sub_1DFDF0B50();
}

uint64_t sub_1DEFFDF00()
{
  return sub_1DEFFDF94(&qword_1EAC27750, (void (*)(uint64_t))type metadata accessor for ShortcutsRefreshBlueprintModifier);
}

uint64_t sub_1DEFFDF4C()
{
  return sub_1DEFFDF94((unint64_t *)&unk_1EAC20430, (void (*)(uint64_t))type metadata accessor for ShortcutsModel);
}

uint64_t sub_1DEFFDF94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEFFDFDC()
{
  if (!qword_1EAC27760)
  {
    sub_1DEFFE1D4(255, (unint64_t *)&qword_1EAC20420, MEMORY[0x1E4FAC180]);
    sub_1DEFFE0A8(&qword_1EAC27768);
    sub_1DEFFE0A8(&qword_1EAC27770);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27760);
    }
  }
}

uint64_t sub_1DEFFE0A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEFFE1D4(255, (unint64_t *)&qword_1EAC20420, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEFFE108()
{
  if (!qword_1EAC27778)
  {
    sub_1DEE03D94();
    sub_1DEFFDF94(&qword_1EAC27780, (void (*)(uint64_t))sub_1DEE03D94);
    sub_1DEFFDF94(&qword_1EAC27788, (void (*)(uint64_t))sub_1DEE03D94);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27778);
    }
  }
}

void sub_1DEFFE1D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for ShortcutsSectionDescriptor;
    v8[1] = type metadata accessor for ShortcutsModel();
    _OWORD v8[2] = sub_1DEB0D530();
    v8[3] = sub_1DEFFDF94((unint64_t *)&unk_1EAC20430, (void (*)(uint64_t))type metadata accessor for ShortcutsModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DEFFE294()
{
  if (!qword_1EAC27790)
  {
    sub_1DEFFE1D4(255, (unint64_t *)&qword_1EAC20420, MEMORY[0x1E4FAC180]);
    unint64_t v0 = sub_1DFDFFEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27790);
    }
  }
}

unint64_t sub_1DEFFE308()
{
  unint64_t result = qword_1EAC277A0;
  if (!qword_1EAC277A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC277A0);
  }
  return result;
}

void *sub_1DEFFE35C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(void *)(a1 + 56) = a2[7];
    uint64_t v5 = *(int *)(a3 + 52);
    uint64_t v6 = (uint64_t)a2 + v5;
    uint64_t v7 = a1 + v5;
    *(_WORD *)(a1 + 64) = *((_WORD *)a2 + 32);
    sub_1DEA97E14();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, v6, v8);
  }
  return v3;
}

uint64_t sub_1DEFFE458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v5 = *(int *)(a3 + 52);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  sub_1DEA97E14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_1DEFFE51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 52);
  uint64_t v5 = a2 + v4;
  uint64_t v6 = a1 + v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  sub_1DEA97E14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t sub_1DEFFE5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(int *)(a3 + 52);
  uint64_t v5 = a2 + v4;
  uint64_t v6 = a1 + v4;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  sub_1DEA97E14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v6, v5, v7);
  return a1;
}

uint64_t sub_1DEFFE67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 65);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1DEA97E14();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 52);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DEFFE72C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 65) = a2 + 1;
  }
  else
  {
    sub_1DEA97E14();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DEFFE7F8(void *a1)
{
  uint64_t v3 = v1;
  sub_1DEABA420(0, &qword_1EBAA6988, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEAC4254();
  sub_1DFE001A0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1DEEBA764();
  sub_1DFDFFE80();
  if (!v2)
  {
    v11[13] = 1;
    sub_1DFDFFE70();
    v11[12] = 2;
    sub_1DFDFFE70();
    v11[11] = 3;
    sub_1DFDFFE70();
    v11[10] = v3[32];
    v11[9] = 4;
    sub_1DEEBA7B8();
    sub_1DFDFFE80();
    v11[8] = 5;
    sub_1DFDFFE60();
    v11[7] = 6;
    sub_1DFDFFE60();
    v11[6] = 7;
    sub_1DFDFFE00();
    v11[5] = 8;
    sub_1DFDFFE50();
    type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
    v11[4] = 9;
    sub_1DEA97E14();
    sub_1DEA96078(&qword_1EBAE96A8, (void (*)(uint64_t))sub_1DEA97E14);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DEFFEB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DEFFEEF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEFFEB60(uint64_t a1)
{
  unint64_t v2 = sub_1DEAC4254();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEFFEB9C(uint64_t a1)
{
  unint64_t v2 = sub_1DEAC4254();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEFFEBD8(void *a1)
{
  return sub_1DEFFE7F8(a1);
}

uint64_t sub_1DEFFEBF4(char *a1, char *a2)
{
  if (*(void *)&aNone_13[8 * *a1] == *(void *)&aNone_13[8 * *a2])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v4 = sub_1DFDFFF50();
    swift_bridgeObjectRelease_n();
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if (*((void *)a1 + 1) != *((void *)a2 + 1)
    || *((void *)a1 + 2) != *((void *)a2 + 2)
    || *((void *)a1 + 3) != *((void *)a2 + 3)
    || (sub_1DF2A170C(a1[32], a2[32]) & 1) == 0
    || *((double *)a1 + 5) != *((double *)a2 + 5)
    || *((double *)a1 + 6) != *((double *)a2 + 6))
  {
    return 0;
  }
  char v5 = a2[64];
  if (a1[64])
  {
    if (!a2[64]) {
      return 0;
    }
  }
  else
  {
    if (*((double *)a1 + 7) != *((double *)a2 + 7)) {
      char v5 = 1;
    }
    if (v5) {
      return 0;
    }
  }
  if (a1[65] != a2[65]) {
    return 0;
  }
  type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs();
  type metadata accessor for MagazineFeedServiceConfig();
  sub_1DEA96078(&qword_1EBADBA50, (void (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig);
  return sub_1DFDF8380();
}

unsigned char *storeEnumTagSinglePayload for RecommendedIssuesMagazineFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEFFEE60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendedIssuesMagazineFeedGroupKnobs.CodingKeys()
{
  return &type metadata for RecommendedIssuesMagazineFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DEFFEE9C()
{
  unint64_t result = qword_1EAC277A8;
  if (!qword_1EAC277A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC277A8);
  }
  return result;
}

uint64_t sub_1DEFFEEF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x704F7265746C6966 && a2 == 0xEC0000006E6F6974;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEBEBE0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x727563634F78616DLL && a2 == 0xED000065636E6572 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEBEBC0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7942726564726FLL && a2 == 0xE700000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746C754D6B6E6172 && a2 == 0xEE007265696C7069 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x72685465726F6373 && a2 == 0xEE00646C6F687365 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F635365736162 && a2 == 0xE900000000000065 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DFEDA520 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6C6F6F706572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1DEFFF370()
{
  uint64_t v1 = sub_1DFDE9720();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA3C638();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDE9FD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AudioTrackDetailsRouteModel();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 48), *(void *)(v0 + 72));
  swift_unknownObjectRetain();
  sub_1DFDE9FA0();
  uint64_t v15 = sub_1DFDE7220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F7D8E0], v1);
  sub_1DFDE8ED0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1DEA16C0C((uint64_t)v7, (uint64_t (*)(void))sub_1DEA3C638);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1DED28A58((uint64_t)v14);
  return sub_1DEA16C0C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AudioTrackDetailsRouteModel);
}

uint64_t type metadata accessor for AudioTrackDetailsEventHandler()
{
  return self;
}

uint64_t sub_1DEFFF660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1DFDECE10();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a5;
  v11[3] = sub_1DEAB8D3C;
  v11[4] = v10;
  v11[5] = a3;
  v11[6] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DFDECE00();
  return swift_release();
}

uint64_t sub_1DEFFF750(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_1DFDE7600();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  uint64_t v8 = NFInternalBuild();
  if (v8)
  {
    sub_1DFDE7E20();
    uint64_t v9 = type metadata accessor for ResetPuzzleProgressStartupTask();
    sub_1DEFFFCC8(&qword_1EBAE1728);
    sub_1DFDE7EB0();
    uint64_t v8 = swift_release();
    if (v15 == 1)
    {
      uint64_t v13 = v9;
      __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC7NewsUI230ResetPuzzleProgressStartupTask_puzzleStatsStateStore), *(void *)(a1 + OBJC_IVAR____TtC7NewsUI230ResetPuzzleProgressStartupTask_puzzleStatsStateStore + 24));
      sub_1DFDFC710();
      __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC7NewsUI230ResetPuzzleProgressStartupTask_puzzleHistoryService), *(void *)(a1 + OBJC_IVAR____TtC7NewsUI230ResetPuzzleProgressStartupTask_puzzleHistoryService + 24));
      sub_1DFDE7480();
      uint64_t v10 = sub_1DFDFC4F0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = a1;
      swift_retain();
      sub_1DFDEE310();
      swift_release();
      sub_1DFDE7E20();
      char v14 = 0;
      sub_1DEFFFCC8(&qword_1EAC277B0);
      sub_1DFDE8120();
      uint64_t v8 = swift_release();
    }
  }
  a2(v8);
  swift_release();
  return swift_release();
}

uint64_t sub_1DEFFF9C0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = (void *)(a2 + OBJC_IVAR____TtC7NewsUI230ResetPuzzleProgressStartupTask_puzzleHistoryService);
    uint64_t v4 = swift_bridgeObjectRetain() + 40;
    do
    {
      __swift_project_boxed_opaque_existential_1(v3, v3[3]);
      swift_bridgeObjectRetain();
      sub_1DFDFC4D0();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DEFFFA98()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI230ResetPuzzleProgressStartupTask_executionPhase;
  uint64_t v2 = sub_1DFDEDAB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI230ResetPuzzleProgressStartupTask_puzzleHistoryService);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI230ResetPuzzleProgressStartupTask_puzzleStatsStateStore);
  return swift_deallocClassInstance();
}

uint64_t sub_1DEFFFB58()
{
  return type metadata accessor for ResetPuzzleProgressStartupTask();
}

uint64_t sub_1DEFFFB60()
{
  return sub_1DEFFFCC8(&qword_1EBAE1728);
}

uint64_t sub_1DEFFFB94()
{
  return sub_1DFDEDF30();
}

uint64_t sub_1DEFFFBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEFFF660(a1, a2, a3, a4, v4);
}

uint64_t sub_1DEFFFBF0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEFFFC28()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEFFFC70()
{
  return sub_1DEFFF750(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1DEFFFC80()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEFFFCC0()
{
  return sub_1DEFFF9C0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DEFFFCC8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ResetPuzzleProgressStartupTask();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SavedFeedOfflineModel()
{
  return &type metadata for SavedFeedOfflineModel;
}

uint64_t sub_1DEFFFD1C()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EACDF898);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF898);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEDA950);
  sub_1DFDE6ED0();

  sub_1DEE373B4();
  uint64_t v5 = sub_1DFDFA6A0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E4F808B0], v5);
  return sub_1DFDFA650();
}

uint64_t sub_1DEFFFF74()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EACDF8B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF8B0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEDA5E0);
  sub_1DFDE6ED0();

  return sub_1DFDFA650();
}

uint64_t sub_1DF000120()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EACDF8C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF8C8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEDA870);
  sub_1DFDE6ED0();

  sub_1DEE373B4();
  uint64_t v5 = sub_1DFDFA6A0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E4F808B0], v5);
  return sub_1DFDFA650();
}

uint64_t sub_1DF00037C()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EACDF8E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF8E0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEDA7A0);
  sub_1DFDE6ED0();

  return sub_1DFDFA650();
}

uint64_t sub_1DF000524()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EACDF8F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF8F8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEDA6C0);
  sub_1DFDE6ED0();

  return sub_1DFDFA650();
}

uint64_t sub_1DF0006D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EAC1CDE8, (uint64_t)qword_1EACDF898, a1);
}

uint64_t sub_1DF0006F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EAC1CDF0, (uint64_t)qword_1EACDF8B0, a1);
}

uint64_t sub_1DF000718@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EAC1CDF8, (uint64_t)qword_1EACDF8C8, a1);
}

uint64_t sub_1DF00073C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EAC1CE00, (uint64_t)qword_1EACDF8E0, a1);
}

uint64_t sub_1DF000760@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EAC1CE08, (uint64_t)qword_1EACDF8F8, a1);
}

uint64_t sub_1DF000784(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    uint64_t v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return v15;
  }
  type metadata accessor for FeedPaywallModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v305 = a1;
  uint64_t v306 = a2;
  if (EnumCaseMultiPayload == 1)
  {
    unint64_t v7 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDE7220();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(void *)(a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
    *(void *)(a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
    *(void *)(a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
    uint64_t v46 = v7[9];
    uint64_t v47 = *(void **)((char *)a2 + v46);
    *(void *)(v305 + v46) = v47;
    uint64_t v48 = v7[10];
    uint64_t v49 = *(void **)((char *)a2 + v48);
    *(void *)(v305 + v48) = v49;
    uint64_t v50 = v7[11];
    uint64_t v51 = *(void **)((char *)a2 + v50);
    *(void *)(v305 + v50) = v51;
    uint64_t v52 = v7[12];
    uint64_t v53 = *(void **)((char *)a2 + v52);
    *(void *)(v305 + v52) = v53;
    uint64_t v54 = v7[13];
    uint64_t v276 = *(void **)((char *)a2 + v54);
    *(void *)(v305 + v54) = v276;
    uint64_t v55 = v7[14];
    id v287 = *(void **)((char *)a2 + v55);
    *(void *)(v305 + v55) = v287;
    uint64_t v56 = v7[15];
    uint64_t v293 = *(void **)((char *)a2 + v56);
    *(void *)(v305 + v56) = v293;
    uint64_t v57 = v7[16];
    uint64_t v299 = *(void **)((char *)a2 + v57);
    *(void *)(v305 + v57) = v299;
    uint64_t v58 = v7[17];
    uint64_t v59 = *(void **)((char *)a2 + v58);
    *(void *)(v305 + v58) = v59;
    uint64_t v60 = v7[18];
    uint64_t v61 = *(void **)((char *)a2 + v60);
    *(void *)(v305 + v60) = v61;
    uint64_t v62 = v7[19];
    uint64_t v63 = (void *)(v305 + v62);
    uint64_t v64 = (void *)((char *)v306 + v62);
    uint64_t v281 = v64[1];
    *uint64_t v63 = *v64;
    v63[1] = v281;
    uint64_t v65 = v7[20];
    uint64_t v66 = (void *)(v305 + v65);
    uint64_t v67 = (void *)((char *)v306 + v65);
    uint64_t v68 = v67[1];
    *uint64_t v66 = *v67;
    v66[1] = v68;
    uint64_t v69 = v7[21];
    id v70 = (void *)(v305 + v69);
    uint64_t v71 = (void *)((char *)v306 + v69);
    uint64_t v72 = v71[1];
    *id v70 = *v71;
    v70[1] = v72;
    uint64_t v73 = v7[22];
    uint64_t v273 = v305 + v73;
    uint64_t v270 = (char *)v306 + v73;
    uint64_t v74 = sub_1DFDEF360();
    uint64_t v267 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v74 - 8) + 16);
    id v75 = v47;
    uint64_t v34 = v305;
    id v76 = v49;
    id v77 = v51;
    uint64_t v29 = v306;
    id v78 = v53;
    id v79 = v276;
    id v80 = v287;
    id v81 = v293;
    id v82 = v299;
    id v83 = v59;
    id v84 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v267(v273, v270, v74);
    uint64_t v85 = v7[23];
    uint64_t v86 = (void *)(v305 + v85);
    uint64_t v87 = (void *)((char *)v306 + v85);
    uint64_t v88 = v87[1];
    *uint64_t v86 = *v87;
    v86[1] = v88;
    uint64_t v89 = v7[24];
    uint64_t v40 = (void *)(v305 + v89);
    uint64_t v41 = (char *)v306 + v89;
    uint64_t v42 = sub_1DFDEF130();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    swift_bridgeObjectRetain();
    if (!v90(v41, 1, v42)) {
      goto LABEL_10;
    }
LABEL_7:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v40, v41, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_11;
  }
  uint64_t v16 = (void *)a2[1];
  uint64_t v17 = (void *)a2[2];
  *(void *)(a1 + 8) = v16;
  *(void *)(a1 + 16) = v17;
  uint64_t v18 = (void *)a2[3];
  uint64_t v19 = (void *)a2[4];
  *(void *)(a1 + 24) = v18;
  *(void *)(a1 + 32) = v19;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  uint64_t v20 = (void *)a2[8];
  *(void *)(a1 + 56) = v306[7];
  *(void *)(a1 + 64) = v20;
  uint64_t v21 = v306[10];
  *(void *)(a1 + 72) = v306[9];
  *(void *)(a1 + 80) = v21;
  uint64_t v22 = v306[12];
  *(void *)(a1 + 88) = v306[11];
  *(void *)(a1 + 96) = v22;
  uint64_t v23 = v306[14];
  *(void *)(a1 + 104) = v306[13];
  *(void *)(a1 + 112) = v23;
  uint64_t v24 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v25 = v24[16];
  uint64_t v298 = a1 + v25;
  id v292 = (char *)v306 + v25;
  uint64_t v26 = sub_1DFDEF360();
  id v286 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  id v27 = v16;
  id v28 = v17;
  uint64_t v29 = v306;
  id v30 = v18;
  id v31 = v19;
  id v32 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = v26;
  uint64_t v34 = v305;
  v286(v298, v292, v33);
  uint64_t v35 = v24[17];
  uint64_t v36 = (void *)(v305 + v35);
  uint64_t v37 = (void *)((char *)v306 + v35);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  uint64_t v39 = v24[18];
  uint64_t v40 = (void *)(v305 + v39);
  uint64_t v41 = (char *)v306 + v39;
  uint64_t v42 = sub_1DFDEF130();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  swift_bridgeObjectRetain();
  if (v44(v41, 1, v42)) {
    goto LABEL_7;
  }
LABEL_10:
  (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
LABEL_11:
  swift_storeEnumTagMultiPayload();
  uint64_t v91 = a3[5];
  uint64_t v92 = v34 + v91;
  uint64_t v93 = (char *)v29 + v91;
  int v94 = swift_getEnumCaseMultiPayload();
  *(unsigned char *)uint64_t v92 = *v93;
  if (v94 == 1)
  {
    uint64_t v95 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v96 = v95[5];
    uint64_t v97 = (void *)(v92 + v96);
    uint64_t v98 = &v93[v96];
    uint64_t v99 = sub_1DFDE7220();
    uint64_t v100 = *(void *)(v99 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v100 + 16))(v97, v98, v99);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
    }
    *(void *)(v92 + v95[6]) = *(void *)&v93[v95[6]];
    *(void *)(v92 + v95[7]) = *(void *)&v93[v95[7]];
    *(void *)(v92 + v95[8]) = *(void *)&v93[v95[8]];
    uint64_t v127 = v95[9];
    uint64_t v128 = *(void **)&v93[v127];
    *(void *)(v92 + v127) = v128;
    uint64_t v129 = v95[10];
    uint64_t v130 = *(void **)&v93[v129];
    *(void *)(v92 + v129) = v130;
    uint64_t v131 = v95[11];
    uint64_t v271 = *(void **)&v93[v131];
    *(void *)(v92 + v131) = v271;
    uint64_t v132 = v95[12];
    uint64_t v274 = *(void **)&v93[v132];
    *(void *)(v92 + v132) = v274;
    uint64_t v133 = v95[13];
    uint64_t v278 = *(void **)&v93[v133];
    *(void *)(v92 + v133) = v278;
    uint64_t v134 = v95[14];
    id v289 = *(void **)&v93[v134];
    *(void *)(v92 + v134) = v289;
    uint64_t v135 = v95[15];
    uint64_t v295 = *(void **)&v93[v135];
    *(void *)(v92 + v135) = v295;
    uint64_t v136 = v95[16];
    uint64_t v301 = *(void **)&v93[v136];
    *(void *)(v92 + v136) = v301;
    uint64_t v137 = v95[17];
    long long v138 = *(void **)&v93[v137];
    *(void *)(v92 + v137) = v138;
    uint64_t v139 = v95[18];
    long long v140 = *(void **)&v93[v139];
    *(void *)(v92 + v139) = v140;
    uint64_t v141 = v95[19];
    uint64_t v142 = (void *)(v92 + v141);
    long long v143 = &v93[v141];
    uint64_t v283 = *((void *)v143 + 1);
    void *v142 = *(void *)v143;
    v142[1] = v283;
    uint64_t v144 = v95[20];
    long long v145 = (void *)(v92 + v144);
    long long v146 = &v93[v144];
    uint64_t v147 = *((void *)v146 + 1);
    void *v145 = *(void *)v146;
    v145[1] = v147;
    uint64_t v148 = v95[21];
    long long v149 = (void *)(v92 + v148);
    long long v150 = &v93[v148];
    uint64_t v151 = *((void *)v150 + 1);
    *long long v149 = *(void *)v150;
    v149[1] = v151;
    uint64_t v152 = v95[22];
    uint64_t v265 = &v93[v152];
    uint64_t v268 = v92 + v152;
    uint64_t v153 = sub_1DFDEF360();
    int v263 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v153 - 8) + 16);
    id v154 = v128;
    id v155 = v130;
    id v156 = v271;
    id v157 = v274;
    id v158 = v278;
    id v159 = v289;
    id v160 = v295;
    id v161 = v301;
    id v162 = v138;
    id v163 = v140;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v263(v268, v265, v153);
    uint64_t v164 = v95[23];
    int v165 = (void *)(v92 + v164);
    uint64_t v166 = &v93[v164];
    uint64_t v167 = *((void *)v166 + 1);
    *int v165 = *(void *)v166;
    v165[1] = v167;
    uint64_t v168 = v95[24];
    uint64_t v121 = (void *)(v92 + v168);
    uint64_t v122 = &v93[v168];
    uint64_t v169 = sub_1DFDEF130();
    uint64_t v170 = *(void *)(v169 - 8);
    uint64_t v171 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48);
    swift_bridgeObjectRetain();
    if (v171(v122, 1, v169)) {
      goto LABEL_15;
    }
    (*(void (**)(void *, char *, uint64_t))(v170 + 16))(v121, v122, v169);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v170 + 56))(v121, 0, 1, v169);
  }
  else
  {
    uint64_t v102 = (void *)*((void *)v93 + 1);
    uint64_t v103 = (void *)*((void *)v93 + 2);
    *(void *)(v92 + 8) = v102;
    *(void *)(v92 + 16) = v103;
    uint64_t v104 = (void *)*((void *)v93 + 3);
    uint64_t v300 = (void *)*((void *)v93 + 4);
    *(void *)(v92 + 24) = v104;
    *(void *)(v92 + 32) = v300;
    *(_OWORD *)(v92 + 40) = *(_OWORD *)(v93 + 40);
    uint64_t v294 = (void *)*((void *)v93 + 8);
    *(void *)(v92 + 56) = *((void *)v93 + 7);
    *(void *)(v92 + 64) = v294;
    uint64_t v105 = *((void *)v93 + 10);
    *(void *)(v92 + 72) = *((void *)v93 + 9);
    *(void *)(v92 + 80) = v105;
    uint64_t v106 = *((void *)v93 + 12);
    *(void *)(v92 + 88) = *((void *)v93 + 11);
    *(void *)(v92 + 96) = v106;
    uint64_t v107 = *((void *)v93 + 14);
    *(void *)(v92 + 104) = *((void *)v93 + 13);
    *(void *)(v92 + 112) = v107;
    uint64_t v108 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v109 = v108[16];
    uint64_t v282 = &v93[v109];
    uint64_t v288 = v92 + v109;
    uint64_t v110 = sub_1DFDEF360();
    uint64_t v277 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v110 - 8) + 16);
    id v111 = v102;
    id v112 = v103;
    id v113 = v104;
    id v114 = v300;
    id v115 = v294;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v277(v288, v282, v110);
    uint64_t v116 = v108[17];
    uint64_t v117 = (void *)(v92 + v116);
    uint64_t v118 = &v93[v116];
    uint64_t v119 = *((void *)v118 + 1);
    *uint64_t v117 = *(void *)v118;
    v117[1] = v119;
    uint64_t v120 = v108[18];
    uint64_t v121 = (void *)(v92 + v120);
    uint64_t v122 = &v93[v120];
    uint64_t v123 = sub_1DFDEF130();
    uint64_t v124 = *(void *)(v123 - 8);
    uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48);
    swift_bridgeObjectRetain();
    if (v125(v122, 1, v123))
    {
LABEL_15:
      sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      memcpy(v121, v122, *(void *)(*(void *)(v126 - 8) + 64));
      goto LABEL_21;
    }
    (*(void (**)(void *, char *, uint64_t))(v124 + 16))(v121, v122, v123);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
  }
LABEL_21:
  swift_storeEnumTagMultiPayload();
  uint64_t v172 = a3[6];
  uint64_t v173 = v305 + v172;
  uint64_t v174 = (char *)v306 + v172;
  int v175 = swift_getEnumCaseMultiPayload();
  *(unsigned char *)uint64_t v173 = *v174;
  if (v175 == 1)
  {
    uint64_t v176 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v177 = v176[5];
    uint64_t v178 = (void *)(v173 + v177);
    uint64_t v179 = &v174[v177];
    uint64_t v180 = sub_1DFDE7220();
    uint64_t v181 = *(void *)(v180 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v181 + 48))(v179, 1, v180))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v178, v179, *(void *)(*(void *)(v182 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v181 + 16))(v178, v179, v180);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v181 + 56))(v178, 0, 1, v180);
    }
    *(void *)(v173 + v176[6]) = *(void *)&v174[v176[6]];
    *(void *)(v173 + v176[7]) = *(void *)&v174[v176[7]];
    *(void *)(v173 + v176[8]) = *(void *)&v174[v176[8]];
    uint64_t v208 = v176[9];
    id v209 = *(void **)&v174[v208];
    *(void *)(v173 + v208) = v209;
    uint64_t v210 = v176[10];
    uint64_t v211 = *(void **)&v174[v210];
    *(void *)(v173 + v210) = v211;
    uint64_t v212 = v176[11];
    uint64_t v272 = *(void **)&v174[v212];
    *(void *)(v173 + v212) = v272;
    uint64_t v213 = v176[12];
    uint64_t v275 = *(void **)&v174[v213];
    *(void *)(v173 + v213) = v275;
    uint64_t v214 = v176[13];
    id v280 = *(void **)&v174[v214];
    *(void *)(v173 + v214) = v280;
    uint64_t v215 = v176[14];
    id v291 = *(void **)&v174[v215];
    *(void *)(v173 + v215) = v291;
    uint64_t v216 = v176[15];
    uint64_t v297 = *(void **)&v174[v216];
    *(void *)(v173 + v216) = v297;
    uint64_t v217 = v176[16];
    uint64_t v303 = *(void **)&v174[v217];
    *(void *)(v173 + v217) = v303;
    uint64_t v218 = v176[17];
    id v219 = *(void **)&v174[v218];
    *(void *)(v173 + v218) = v219;
    uint64_t v220 = v176[18];
    id v221 = *(void **)&v174[v220];
    *(void *)(v173 + v220) = v221;
    uint64_t v222 = v176[19];
    id v223 = (void *)(v173 + v222);
    id v224 = &v174[v222];
    uint64_t v285 = *((void *)v224 + 1);
    void *v223 = *(void *)v224;
    v223[1] = v285;
    uint64_t v225 = v176[20];
    uint64_t v226 = (void *)(v173 + v225);
    uint64_t v227 = &v174[v225];
    uint64_t v228 = *((void *)v227 + 1);
    *uint64_t v226 = *(void *)v227;
    v226[1] = v228;
    uint64_t v229 = v176[21];
    uint64_t v230 = (void *)(v173 + v229);
    uint64_t v231 = &v174[v229];
    uint64_t v232 = *((void *)v231 + 1);
    *uint64_t v230 = *(void *)v231;
    v230[1] = v232;
    uint64_t v233 = v176[22];
    uint64_t v266 = &v174[v233];
    uint64_t v269 = v173 + v233;
    uint64_t v234 = sub_1DFDEF360();
    uint64_t v264 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v234 - 8) + 16);
    id v235 = v209;
    id v236 = v211;
    id v237 = v272;
    id v238 = v275;
    id v239 = v280;
    id v240 = v291;
    id v241 = v297;
    id v242 = v303;
    id v243 = v219;
    id v244 = v221;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v264(v269, v266, v234);
    uint64_t v245 = v176[23];
    id v246 = (void *)(v173 + v245);
    id v247 = &v174[v245];
    uint64_t v248 = *((void *)v247 + 1);
    *id v246 = *(void *)v247;
    v246[1] = v248;
    uint64_t v249 = v176[24];
    uint64_t v202 = (void *)(v173 + v249);
    uint64_t v203 = &v174[v249];
    uint64_t v250 = sub_1DFDEF130();
    uint64_t v251 = *(void *)(v250 - 8);
    id v252 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v251 + 48);
    swift_bridgeObjectRetain();
    if (v252(v203, 1, v250)) {
      goto LABEL_25;
    }
    (*(void (**)(void *, char *, uint64_t))(v251 + 16))(v202, v203, v250);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v251 + 56))(v202, 0, 1, v250);
  }
  else
  {
    uint64_t v183 = (void *)*((void *)v174 + 1);
    uint64_t v184 = (void *)*((void *)v174 + 2);
    *(void *)(v173 + 8) = v183;
    *(void *)(v173 + 16) = v184;
    uint64_t v185 = (void *)*((void *)v174 + 3);
    uint64_t v302 = (void *)*((void *)v174 + 4);
    *(void *)(v173 + 24) = v185;
    *(void *)(v173 + 32) = v302;
    *(_OWORD *)(v173 + 40) = *(_OWORD *)(v174 + 40);
    uint64_t v296 = (void *)*((void *)v174 + 8);
    *(void *)(v173 + 56) = *((void *)v174 + 7);
    *(void *)(v173 + 64) = v296;
    uint64_t v186 = *((void *)v174 + 10);
    *(void *)(v173 + 72) = *((void *)v174 + 9);
    *(void *)(v173 + 80) = v186;
    uint64_t v187 = *((void *)v174 + 12);
    *(void *)(v173 + 88) = *((void *)v174 + 11);
    *(void *)(v173 + 96) = v187;
    uint64_t v188 = *((void *)v174 + 14);
    *(void *)(v173 + 104) = *((void *)v174 + 13);
    *(void *)(v173 + 112) = v188;
    uint64_t v189 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v190 = v189[16];
    id v284 = &v174[v190];
    uint64_t v290 = v173 + v190;
    uint64_t v191 = sub_1DFDEF360();
    id v279 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v191 - 8) + 16);
    id v192 = v183;
    id v193 = v184;
    id v194 = v185;
    id v195 = v302;
    id v196 = v296;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v279(v290, v284, v191);
    uint64_t v197 = v189[17];
    uint64_t v198 = (void *)(v173 + v197);
    uint64_t v199 = &v174[v197];
    uint64_t v200 = *((void *)v199 + 1);
    void *v198 = *(void *)v199;
    v198[1] = v200;
    uint64_t v201 = v189[18];
    uint64_t v202 = (void *)(v173 + v201);
    uint64_t v203 = &v174[v201];
    uint64_t v204 = sub_1DFDEF130();
    uint64_t v205 = *(void *)(v204 - 8);
    id v206 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48);
    swift_bridgeObjectRetain();
    if (v206(v203, 1, v204))
    {
LABEL_25:
      sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      memcpy(v202, v203, *(void *)(*(void *)(v207 - 8) + 64));
      goto LABEL_31;
    }
    (*(void (**)(void *, char *, uint64_t))(v205 + 16))(v202, v203, v204);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v205 + 56))(v202, 0, 1, v204);
  }
LABEL_31:
  uint64_t v15 = v305;
  swift_storeEnumTagMultiPayload();
  uint64_t v253 = a3[7];
  uint64_t v254 = (void *)(v305 + v253);
  id v255 = (void *)((char *)v306 + v253);
  uint64_t v256 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v254, v255, *(void *)(*(void *)(v256 - 8) + 64));
  }
  else
  {
    *uint64_t v254 = *v255;
    sub_1DEC84AA4();
    uint64_t v258 = *(int *)(v257 + 48);
    uint64_t v259 = (char *)v254 + v258;
    uint64_t v260 = (char *)v255 + v258;
    uint64_t v261 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(v259, v260, v261);
    swift_storeEnumTagMultiPayload();
  }
  return v15;
}

void sub_1DF001B00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DF001B54(id *a1, int *a2)
{
  type metadata accessor for FeedPaywallModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v4 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v5 = (char *)a1 + v4[5];
    uint64_t v6 = sub_1DFDE7220();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)a1 + v4[22];
    uint64_t v9 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    uint64_t v10 = v4[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v12 = (char *)a1 + *(int *)(v11 + 64);
    uint64_t v13 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(int *)(v11 + 72);
  }
  uint64_t v14 = (char *)a1 + v10;
  uint64_t v15 = sub_1DFDEF130();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v17 = (id *)((char *)a1 + a2[5]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v19 = (char *)v17 + v18[5];
    uint64_t v20 = sub_1DFDE7220();
    uint64_t v21 = *(void *)(v20 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = (char *)v17 + v18[22];
    uint64_t v23 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
    swift_bridgeObjectRelease();
    uint64_t v24 = v18[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v26 = (char *)v17 + *(int *)(v25 + 64);
    uint64_t v27 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
    swift_bridgeObjectRelease();
    uint64_t v24 = *(int *)(v25 + 72);
  }
  id v28 = (char *)v17 + v24;
  uint64_t v29 = sub_1DFDEF130();
  uint64_t v30 = *(void *)(v29 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29)) {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
  }
  id v31 = (id *)((char *)a1 + a2[6]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v32 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v33 = (char *)v31 + v32[5];
    uint64_t v34 = sub_1DFDE7220();
    uint64_t v35 = *(void *)(v34 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = (char *)v31 + v32[22];
    uint64_t v37 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
    swift_bridgeObjectRelease();
    uint64_t v38 = v32[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v40 = (char *)v31 + *(int *)(v39 + 64);
    uint64_t v41 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
    swift_bridgeObjectRelease();
    uint64_t v38 = *(int *)(v39 + 72);
  }
  uint64_t v42 = (char *)v31 + v38;
  uint64_t v43 = sub_1DFDEF130();
  uint64_t v44 = *(void *)(v43 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43)) {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v42, v43);
  }
  uint64_t v45 = (char *)a1 + a2[7];
  type metadata accessor for FeedPaywallType(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    sub_1DEC84AA4();
    uint64_t v48 = &v45[*(int *)(v47 + 48)];
    uint64_t v49 = sub_1DFDEEE80();
    uint64_t v50 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8);
    return v50(v48, v49);
  }
  return result;
}

void *sub_1DF002454(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for FeedPaywallModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v298 = a2;
  uint64_t v299 = (void *)a1;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v7 = v6[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    uint64_t v10 = sub_1DFDE7220();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(void *)(a1 + v6[6]) = *(void *)(a2 + v6[6]);
    *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
    *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
    uint64_t v43 = v6[9];
    uint64_t v44 = *(void **)(a2 + v43);
    *(void *)(a1 + v43) = v44;
    uint64_t v45 = v6[10];
    uint64_t v46 = *(void **)(a2 + v45);
    *(void *)(a1 + v45) = v46;
    uint64_t v47 = v6[11];
    uint64_t v48 = *(void **)(a2 + v47);
    *(void *)((char *)v299 + v47) = v48;
    uint64_t v49 = v6[12];
    uint64_t v50 = *(void **)(a2 + v49);
    *(void *)((char *)v299 + v49) = v50;
    uint64_t v51 = v6[13];
    uint64_t v52 = *(void **)(a2 + v51);
    *(void *)((char *)v299 + v51) = v52;
    uint64_t v53 = v6[14];
    uint64_t v269 = *(void **)(v298 + v53);
    *(void *)((char *)v299 + v53) = v269;
    uint64_t v54 = v6[15];
    uint64_t v274 = *(void **)(v298 + v54);
    *(void *)((char *)v299 + v54) = v274;
    uint64_t v55 = v6[16];
    id v280 = *(void **)(v298 + v55);
    *(void *)((char *)v299 + v55) = v280;
    uint64_t v56 = v6[17];
    id v286 = *(void **)(v298 + v56);
    *(void *)((char *)v299 + v56) = v286;
    uint64_t v57 = v6[18];
    id v292 = *(void **)(v298 + v57);
    *(void *)((char *)v299 + v57) = v292;
    uint64_t v58 = v6[19];
    uint64_t v59 = (void *)((char *)v299 + v58);
    uint64_t v60 = (void *)(v298 + v58);
    uint64_t v266 = v60[1];
    *uint64_t v59 = *v60;
    v59[1] = v266;
    uint64_t v61 = v6[20];
    uint64_t v62 = (void *)((char *)v299 + v61);
    uint64_t v63 = (void *)(v298 + v61);
    uint64_t v64 = v63[1];
    void *v62 = *v63;
    v62[1] = v64;
    uint64_t v65 = v6[21];
    uint64_t v66 = (void *)((char *)v299 + v65);
    uint64_t v67 = (void *)(v298 + v65);
    uint64_t v68 = v67[1];
    *uint64_t v66 = *v67;
    v66[1] = v68;
    uint64_t v69 = v6[22];
    int v263 = (char *)v299 + v69;
    uint64_t v260 = v298 + v69;
    uint64_t v70 = sub_1DFDEF360();
    uint64_t v257 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16);
    id v71 = v44;
    id v72 = v46;
    id v73 = v48;
    uint64_t v29 = v299;
    id v74 = v50;
    id v75 = v52;
    uint64_t v31 = v298;
    id v76 = v269;
    id v77 = v274;
    id v78 = v280;
    id v79 = v286;
    id v80 = v292;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v257(v263, v260, v70);
    uint64_t v81 = v6[23];
    id v82 = (void *)((char *)v299 + v81);
    id v83 = (void *)(v298 + v81);
    uint64_t v84 = v83[1];
    *id v82 = *v83;
    v82[1] = v84;
    uint64_t v85 = v6[24];
    uint64_t v37 = (char *)v299 + v85;
    uint64_t v38 = (const void *)(v298 + v85);
    uint64_t v39 = sub_1DFDEF130();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v86 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48);
    swift_bridgeObjectRetain();
    if (!v86(v38, 1, v39)) {
      goto LABEL_8;
    }
LABEL_5:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_9;
  }
  uint64_t v13 = *(void **)(a2 + 8);
  uint64_t v14 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v14;
  uint64_t v16 = *(void **)(a2 + 24);
  uint64_t v15 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = v16;
  *(void *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v17 = *(void **)(a2 + 64);
  v299[7] = *(void *)(a2 + 56);
  v299[8] = v17;
  uint64_t v18 = *(void *)(a2 + 80);
  v299[9] = *(void *)(a2 + 72);
  v299[10] = v18;
  uint64_t v19 = *(void *)(a2 + 96);
  v299[11] = *(void *)(a2 + 88);
  v299[12] = v19;
  uint64_t v20 = *(void *)(a2 + 112);
  v299[13] = *(void *)(a2 + 104);
  v299[14] = v20;
  uint64_t v21 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v22 = v21[16];
  uint64_t v285 = a2 + v22;
  id v291 = (char *)v299 + v22;
  uint64_t v23 = sub_1DFDEF360();
  id v279 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  id v24 = v13;
  id v25 = v14;
  id v26 = v16;
  id v27 = v15;
  id v28 = v17;
  uint64_t v29 = v299;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v30 = v23;
  uint64_t v31 = v298;
  v279(v291, v285, v30);
  uint64_t v32 = v21[17];
  uint64_t v33 = (void *)((char *)v299 + v32);
  uint64_t v34 = (void *)(v298 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = v21[18];
  uint64_t v37 = (char *)v299 + v36;
  uint64_t v38 = (const void *)(v298 + v36);
  uint64_t v39 = sub_1DFDEF130();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48);
  swift_bridgeObjectRetain();
  if (v41(v38, 1, v39)) {
    goto LABEL_5;
  }
LABEL_8:
  (*(void (**)(char *, const void *, uint64_t))(v40 + 16))(v37, v38, v39);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_9:
  swift_storeEnumTagMultiPayload();
  uint64_t v87 = a3[5];
  uint64_t v88 = (char *)v29 + v87;
  uint64_t v89 = (char *)(v31 + v87);
  int v90 = swift_getEnumCaseMultiPayload();
  *uint64_t v88 = *v89;
  if (v90 == 1)
  {
    uint64_t v91 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v92 = v91[5];
    uint64_t v93 = &v88[v92];
    int v94 = &v89[v92];
    uint64_t v95 = sub_1DFDE7220();
    uint64_t v96 = *(void *)(v95 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v93, v94, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v93, v94, v95);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
    }
    *(void *)&v88[v91[6]] = *(void *)&v89[v91[6]];
    *(void *)&v88[v91[7]] = *(void *)&v89[v91[7]];
    *(void *)&v88[v91[8]] = *(void *)&v89[v91[8]];
    uint64_t v123 = v91[9];
    uint64_t v124 = *(void **)&v89[v123];
    *(void *)&v88[v123] = v124;
    uint64_t v125 = v91[10];
    uint64_t v126 = *(void **)&v89[v125];
    *(void *)&v88[v125] = v126;
    uint64_t v127 = v91[11];
    uint64_t v128 = *(void **)&v89[v127];
    *(void *)&v88[v127] = v128;
    uint64_t v129 = v91[12];
    uint64_t v130 = *(void **)&v89[v129];
    *(void *)&v88[v129] = v130;
    uint64_t v131 = v91[13];
    uint64_t v264 = *(void **)&v89[v131];
    *(void *)&v88[v131] = v264;
    uint64_t v132 = v91[14];
    uint64_t v271 = *(void **)&v89[v132];
    *(void *)&v88[v132] = v271;
    uint64_t v133 = v91[15];
    uint64_t v276 = *(void **)&v89[v133];
    *(void *)&v88[v133] = v276;
    uint64_t v134 = v91[16];
    uint64_t v282 = *(void **)&v89[v134];
    *(void *)&v88[v134] = v282;
    uint64_t v135 = v91[17];
    uint64_t v288 = *(void **)&v89[v135];
    *(void *)&v88[v135] = v288;
    uint64_t v136 = v91[18];
    uint64_t v294 = *(void **)&v89[v136];
    *(void *)&v88[v136] = v294;
    uint64_t v137 = v91[19];
    long long v138 = &v88[v137];
    uint64_t v139 = &v89[v137];
    uint64_t v267 = *((void *)v139 + 1);
    *(void *)long long v138 = *(void *)v139;
    *((void *)v138 + 1) = v267;
    uint64_t v140 = v91[20];
    uint64_t v141 = &v88[v140];
    uint64_t v142 = &v89[v140];
    uint64_t v143 = *((void *)v142 + 1);
    *(void *)uint64_t v141 = *(void *)v142;
    *((void *)v141 + 1) = v143;
    uint64_t v144 = v91[21];
    long long v145 = &v88[v144];
    long long v146 = &v89[v144];
    uint64_t v147 = *((void *)v146 + 1);
    *(void *)long long v145 = *(void *)v146;
    *((void *)v145 + 1) = v147;
    uint64_t v148 = v91[22];
    uint64_t v258 = &v89[v148];
    uint64_t v261 = &v88[v148];
    uint64_t v149 = sub_1DFDEF360();
    id v255 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
    id v150 = v124;
    id v151 = v126;
    id v152 = v128;
    id v153 = v130;
    id v154 = v264;
    id v155 = v271;
    id v156 = v276;
    id v157 = v282;
    id v158 = v288;
    id v159 = v294;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v255(v261, v258, v149);
    uint64_t v160 = v91[23];
    id v161 = &v88[v160];
    id v162 = &v89[v160];
    uint64_t v163 = *((void *)v162 + 1);
    *(void *)id v161 = *(void *)v162;
    *((void *)v161 + 1) = v163;
    uint64_t v164 = v91[24];
    uint64_t v117 = &v88[v164];
    uint64_t v118 = &v89[v164];
    uint64_t v119 = sub_1DFDEF130();
    uint64_t v120 = *(void *)(v119 - 8);
    int v165 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
    swift_bridgeObjectRetain();
    if (!v165(v118, 1, v119)) {
      goto LABEL_16;
    }
LABEL_13:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v117, v118, *(void *)(*(void *)(v122 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v98 = (void *)*((void *)v89 + 1);
  uint64_t v99 = (void *)*((void *)v89 + 2);
  *((void *)v88 + 1) = v98;
  *((void *)v88 + 2) = v99;
  uint64_t v100 = (void *)*((void *)v89 + 3);
  uint64_t v293 = (void *)*((void *)v89 + 4);
  *((void *)v88 + 3) = v100;
  *((void *)v88 + 4) = v293;
  *(_OWORD *)(v88 + 40) = *(_OWORD *)(v89 + 40);
  id v287 = (void *)*((void *)v89 + 8);
  *((void *)v88 + 7) = *((void *)v89 + 7);
  *((void *)v88 + 8) = v287;
  uint64_t v101 = *((void *)v89 + 10);
  *((void *)v88 + 9) = *((void *)v89 + 9);
  *((void *)v88 + 10) = v101;
  uint64_t v102 = *((void *)v89 + 12);
  *((void *)v88 + 11) = *((void *)v89 + 11);
  *((void *)v88 + 12) = v102;
  uint64_t v103 = *((void *)v89 + 14);
  *((void *)v88 + 13) = *((void *)v89 + 13);
  *((void *)v88 + 14) = v103;
  uint64_t v104 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v105 = v104[16];
  uint64_t v275 = &v89[v105];
  uint64_t v281 = &v88[v105];
  uint64_t v106 = sub_1DFDEF360();
  uint64_t v270 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
  id v107 = v98;
  id v108 = v99;
  id v109 = v100;
  id v110 = v293;
  id v111 = v287;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v270(v281, v275, v106);
  uint64_t v112 = v104[17];
  id v113 = &v88[v112];
  id v114 = &v89[v112];
  uint64_t v115 = *((void *)v114 + 1);
  *(void *)id v113 = *(void *)v114;
  *((void *)v113 + 1) = v115;
  uint64_t v116 = v104[18];
  uint64_t v117 = &v88[v116];
  uint64_t v118 = &v89[v116];
  uint64_t v119 = sub_1DFDEF130();
  uint64_t v120 = *(void *)(v119 - 8);
  uint64_t v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
  swift_bridgeObjectRetain();
  if (v121(v118, 1, v119)) {
    goto LABEL_13;
  }
LABEL_16:
  (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v117, v118, v119);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
LABEL_17:
  swift_storeEnumTagMultiPayload();
  uint64_t v166 = a3[6];
  uint64_t v167 = (char *)v299 + v166;
  uint64_t v168 = (char *)(v298 + v166);
  int v169 = swift_getEnumCaseMultiPayload();
  char *v167 = *v168;
  if (v169 == 1)
  {
    uint64_t v170 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v171 = v170[5];
    uint64_t v172 = &v167[v171];
    uint64_t v173 = &v168[v171];
    uint64_t v174 = sub_1DFDE7220();
    uint64_t v175 = *(void *)(v174 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48))(v173, 1, v174))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v172, v173, *(void *)(*(void *)(v176 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v172, v173, v174);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v175 + 56))(v172, 0, 1, v174);
    }
    *(void *)&v167[v170[6]] = *(void *)&v168[v170[6]];
    *(void *)&v167[v170[7]] = *(void *)&v168[v170[7]];
    *(void *)&v167[v170[8]] = *(void *)&v168[v170[8]];
    uint64_t v202 = v170[9];
    uint64_t v203 = *(void **)&v168[v202];
    *(void *)&v167[v202] = v203;
    uint64_t v204 = v170[10];
    uint64_t v205 = *(void **)&v168[v204];
    *(void *)&v167[v204] = v205;
    uint64_t v206 = v170[11];
    uint64_t v207 = *(void **)&v168[v206];
    *(void *)&v167[v206] = v207;
    uint64_t v208 = v170[12];
    id v209 = *(void **)&v168[v208];
    *(void *)&v167[v208] = v209;
    uint64_t v210 = v170[13];
    uint64_t v265 = *(void **)&v168[v210];
    *(void *)&v167[v210] = v265;
    uint64_t v211 = v170[14];
    uint64_t v273 = *(void **)&v168[v211];
    *(void *)&v167[v211] = v273;
    uint64_t v212 = v170[15];
    uint64_t v278 = *(void **)&v168[v212];
    *(void *)&v167[v212] = v278;
    uint64_t v213 = v170[16];
    id v284 = *(void **)&v168[v213];
    *(void *)&v167[v213] = v284;
    uint64_t v214 = v170[17];
    uint64_t v290 = *(void **)&v168[v214];
    *(void *)&v167[v214] = v290;
    uint64_t v215 = v170[18];
    uint64_t v296 = *(void **)&v168[v215];
    *(void *)&v167[v215] = v296;
    uint64_t v216 = v170[19];
    uint64_t v217 = &v167[v216];
    uint64_t v218 = &v168[v216];
    uint64_t v268 = *((void *)v218 + 1);
    *(void *)uint64_t v217 = *(void *)v218;
    *((void *)v217 + 1) = v268;
    uint64_t v219 = v170[20];
    uint64_t v220 = &v167[v219];
    id v221 = &v168[v219];
    uint64_t v222 = *((void *)v221 + 1);
    *(void *)uint64_t v220 = *(void *)v221;
    *((void *)v220 + 1) = v222;
    uint64_t v223 = v170[21];
    id v224 = &v167[v223];
    uint64_t v225 = &v168[v223];
    uint64_t v226 = *((void *)v225 + 1);
    *(void *)id v224 = *(void *)v225;
    *((void *)v224 + 1) = v226;
    uint64_t v227 = v170[22];
    uint64_t v259 = &v168[v227];
    uint64_t v262 = &v167[v227];
    uint64_t v228 = sub_1DFDEF360();
    uint64_t v256 = *(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16);
    id v229 = v203;
    id v230 = v205;
    id v231 = v207;
    id v232 = v209;
    id v233 = v265;
    id v234 = v273;
    id v235 = v278;
    id v236 = v284;
    id v237 = v290;
    id v238 = v296;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v256(v262, v259, v228);
    uint64_t v239 = v170[23];
    id v240 = &v167[v239];
    id v241 = &v168[v239];
    uint64_t v242 = *((void *)v241 + 1);
    *(void *)id v240 = *(void *)v241;
    *((void *)v240 + 1) = v242;
    uint64_t v243 = v170[24];
    id v196 = &v167[v243];
    uint64_t v197 = &v168[v243];
    uint64_t v198 = sub_1DFDEF130();
    uint64_t v199 = *(void *)(v198 - 8);
    id v244 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48);
    swift_bridgeObjectRetain();
    if (!v244(v197, 1, v198)) {
      goto LABEL_24;
    }
LABEL_21:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v196, v197, *(void *)(*(void *)(v201 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v177 = (void *)*((void *)v168 + 1);
  uint64_t v178 = (void *)*((void *)v168 + 2);
  *((void *)v167 + 1) = v177;
  *((void *)v167 + 2) = v178;
  uint64_t v179 = (void *)*((void *)v168 + 3);
  uint64_t v295 = (void *)*((void *)v168 + 4);
  *((void *)v167 + 3) = v179;
  *((void *)v167 + 4) = v295;
  *(_OWORD *)(v167 + 40) = *(_OWORD *)(v168 + 40);
  id v289 = (void *)*((void *)v168 + 8);
  *((void *)v167 + 7) = *((void *)v168 + 7);
  *((void *)v167 + 8) = v289;
  uint64_t v180 = *((void *)v168 + 10);
  *((void *)v167 + 9) = *((void *)v168 + 9);
  *((void *)v167 + 10) = v180;
  uint64_t v181 = *((void *)v168 + 12);
  *((void *)v167 + 11) = *((void *)v168 + 11);
  *((void *)v167 + 12) = v181;
  uint64_t v182 = *((void *)v168 + 14);
  *((void *)v167 + 13) = *((void *)v168 + 13);
  *((void *)v167 + 14) = v182;
  uint64_t v183 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v184 = v183[16];
  uint64_t v277 = &v168[v184];
  uint64_t v283 = &v167[v184];
  uint64_t v185 = sub_1DFDEF360();
  uint64_t v272 = *(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16);
  id v186 = v177;
  id v187 = v178;
  id v188 = v179;
  id v189 = v295;
  id v190 = v289;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v272(v283, v277, v185);
  uint64_t v191 = v183[17];
  id v192 = &v167[v191];
  id v193 = &v168[v191];
  uint64_t v194 = *((void *)v193 + 1);
  *(void *)id v192 = *(void *)v193;
  *((void *)v192 + 1) = v194;
  uint64_t v195 = v183[18];
  id v196 = &v167[v195];
  uint64_t v197 = &v168[v195];
  uint64_t v198 = sub_1DFDEF130();
  uint64_t v199 = *(void *)(v198 - 8);
  uint64_t v200 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48);
  swift_bridgeObjectRetain();
  if (v200(v197, 1, v198)) {
    goto LABEL_21;
  }
LABEL_24:
  (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v196, v197, v198);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v199 + 56))(v196, 0, 1, v198);
LABEL_25:
  swift_storeEnumTagMultiPayload();
  uint64_t v245 = a3[7];
  id v246 = (void *)((char *)v299 + v245);
  id v247 = (void *)(v298 + v245);
  uint64_t v248 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v246, v247, *(void *)(*(void *)(v248 - 8) + 64));
  }
  else
  {
    *id v246 = *v247;
    sub_1DEC84AA4();
    uint64_t v250 = *(int *)(v249 + 48);
    uint64_t v251 = (char *)v246 + v250;
    id v252 = (char *)v247 + v250;
    uint64_t v253 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16))(v251, v252, v253);
    swift_storeEnumTagMultiPayload();
  }
  return v299;
}

void *sub_1DF003760(uint64_t a1, uint64_t a2, int *a3)
{
  id v3 = (void *)a1;
  if (a1 != a2)
  {
    sub_1DF004C0C(a1, type metadata accessor for FeedPaywallModel);
    type metadata accessor for FeedPaywallModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)id v3 = *(unsigned char *)a2;
    uint64_t v274 = a2;
    uint64_t v275 = v3;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = (char *)v3 + v7;
      uint64_t v9 = (const void *)(a2 + v7);
      uint64_t v10 = sub_1DFDE7220();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(void *)((char *)v3 + v6[6]) = *(void *)(a2 + v6[6]);
      *(void *)((char *)v3 + v6[7]) = *(void *)(a2 + v6[7]);
      *(void *)((char *)v3 + v6[8]) = *(void *)(a2 + v6[8]);
      uint64_t v39 = v6[9];
      uint64_t v40 = *(void **)(a2 + v39);
      *(void *)((char *)v3 + v39) = v40;
      uint64_t v41 = v6[10];
      uint64_t v42 = *(void **)(v274 + v41);
      *(void *)((char *)v3 + v41) = v42;
      uint64_t v43 = v6[11];
      uint64_t v44 = *(void **)(v274 + v43);
      *(void *)((char *)v3 + v43) = v44;
      uint64_t v45 = v6[12];
      uint64_t v46 = *(void **)(v274 + v45);
      *(void *)((char *)v3 + v45) = v46;
      uint64_t v47 = v6[13];
      uint64_t v248 = *(void **)(v274 + v47);
      *(void *)((char *)v3 + v47) = v248;
      uint64_t v48 = v6[14];
      uint64_t v256 = *(void **)(v274 + v48);
      *(void *)((char *)v3 + v48) = v256;
      uint64_t v49 = v6[15];
      uint64_t v262 = *(void **)(v274 + v49);
      *(void *)((char *)v3 + v49) = v262;
      uint64_t v50 = v6[16];
      uint64_t v268 = *(void **)(v274 + v50);
      *(void *)((char *)v3 + v50) = v268;
      uint64_t v51 = v6[17];
      uint64_t v52 = *(void **)(v274 + v51);
      *(void *)((char *)v3 + v51) = v52;
      uint64_t v53 = v6[18];
      uint64_t v54 = *(void **)(v274 + v53);
      *(void *)((char *)v275 + v53) = v54;
      uint64_t v55 = v6[19];
      uint64_t v56 = (void *)((char *)v275 + v55);
      uint64_t v57 = (void *)(v274 + v55);
      *uint64_t v56 = *v57;
      v56[1] = v57[1];
      uint64_t v58 = v6[20];
      uint64_t v59 = (void *)((char *)v275 + v58);
      uint64_t v60 = (void *)(v274 + v58);
      *uint64_t v59 = *v60;
      v59[1] = v60[1];
      uint64_t v61 = v6[21];
      uint64_t v62 = (void *)((char *)v275 + v61);
      uint64_t v63 = (void *)(v274 + v61);
      void *v62 = *v63;
      v62[1] = v63[1];
      uint64_t v64 = v6[22];
      uint64_t v245 = (char *)v275 + v64;
      uint64_t v242 = v274 + v64;
      uint64_t v65 = sub_1DFDEF360();
      uint64_t v239 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16);
      id v66 = v40;
      uint64_t v28 = v274;
      id v67 = v42;
      id v68 = v44;
      uint64_t v23 = v275;
      id v69 = v46;
      id v70 = v248;
      id v71 = v256;
      id v72 = v262;
      id v73 = v268;
      id v74 = v52;
      id v75 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v239(v245, v242, v65);
      uint64_t v76 = v6[23];
      id v77 = (void *)((char *)v275 + v76);
      id v78 = (void *)(v274 + v76);
      *id v77 = *v78;
      v77[1] = v78[1];
      uint64_t v79 = v6[24];
      uint64_t v33 = (char *)v275 + v79;
      uint64_t v34 = (const void *)(v274 + v79);
      uint64_t v35 = sub_1DFDEF130();
      uint64_t v36 = *(void *)(v35 - 8);
      id v80 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
      swift_bridgeObjectRetain();
      if (!v80(v34, 1, v35)) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v13 = *(void **)(a2 + 8);
      v3[1] = v13;
      uint64_t v14 = *(void **)(a2 + 16);
      v3[2] = v14;
      uint64_t v15 = *(void **)(a2 + 24);
      void v3[3] = v15;
      uint64_t v16 = *(void **)(a2 + 32);
      v3[4] = v16;
      v3[5] = *(void *)(a2 + 40);
      v3[6] = *(void *)(a2 + 48);
      v3[7] = *(void *)(a2 + 56);
      uint64_t v17 = *(void **)(a2 + 64);
      v275[8] = v17;
      v275[9] = *(void *)(a2 + 72);
      v275[10] = *(void *)(a2 + 80);
      v275[11] = *(void *)(a2 + 88);
      v275[12] = *(void *)(a2 + 96);
      v275[13] = *(void *)(a2 + 104);
      v275[14] = *(void *)(a2 + 112);
      uint64_t v18 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
      uint64_t v19 = v18[16];
      uint64_t v261 = a2 + v19;
      uint64_t v267 = (char *)v275 + v19;
      uint64_t v20 = sub_1DFDEF360();
      id v255 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
      id v21 = v13;
      id v22 = v14;
      uint64_t v23 = v275;
      id v24 = v15;
      id v25 = v16;
      id v26 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v27 = v20;
      uint64_t v28 = v274;
      v255(v267, v261, v27);
      uint64_t v29 = v18[17];
      uint64_t v30 = (void *)((char *)v275 + v29);
      uint64_t v31 = (void *)(v274 + v29);
      *uint64_t v30 = *v31;
      v30[1] = v31[1];
      uint64_t v32 = v18[18];
      uint64_t v33 = (char *)v275 + v32;
      uint64_t v34 = (const void *)(v274 + v32);
      uint64_t v35 = sub_1DFDEF130();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
      swift_bridgeObjectRetain();
      if (!v37(v34, 1, v35))
      {
LABEL_9:
        (*(void (**)(char *, const void *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        uint64_t v81 = a3[5];
        id v82 = (char *)v23 + v81;
        id v83 = (char *)(v28 + v81);
        sub_1DF004C0C((uint64_t)v23 + v81, type metadata accessor for FeedPaywallModel);
        int v84 = swift_getEnumCaseMultiPayload();
        *id v82 = *v83;
        if (v84 == 1)
        {
          uint64_t v85 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
          uint64_t v86 = v85[5];
          uint64_t v87 = &v82[v86];
          uint64_t v88 = &v83[v86];
          uint64_t v89 = sub_1DFDE7220();
          uint64_t v90 = *(void *)(v89 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
          {
            sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
            memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
          }
          *(void *)&v82[v85[6]] = *(void *)&v83[v85[6]];
          *(void *)&v82[v85[7]] = *(void *)&v83[v85[7]];
          *(void *)&v82[v85[8]] = *(void *)&v83[v85[8]];
          uint64_t v113 = v85[9];
          id v114 = *(void **)&v83[v113];
          *(void *)&v82[v113] = v114;
          uint64_t v115 = v85[10];
          uint64_t v116 = *(void **)&v83[v115];
          *(void *)&v82[v115] = v116;
          uint64_t v117 = v85[11];
          uint64_t v243 = *(void **)&v83[v117];
          *(void *)&v82[v117] = v243;
          uint64_t v118 = v85[12];
          id v246 = *(void **)&v83[v118];
          *(void *)&v82[v118] = v246;
          uint64_t v119 = v85[13];
          uint64_t v250 = *(void **)&v83[v119];
          *(void *)&v82[v119] = v250;
          uint64_t v120 = v85[14];
          uint64_t v258 = *(void **)&v83[v120];
          *(void *)&v82[v120] = v258;
          uint64_t v121 = v85[15];
          uint64_t v264 = *(void **)&v83[v121];
          *(void *)&v82[v121] = v264;
          uint64_t v122 = v85[16];
          uint64_t v270 = *(void **)&v83[v122];
          *(void *)&v82[v122] = v270;
          uint64_t v123 = v85[17];
          uint64_t v124 = *(void **)&v83[v123];
          *(void *)&v82[v123] = v124;
          uint64_t v125 = v85[18];
          uint64_t v126 = *(void **)&v83[v125];
          *(void *)&v82[v125] = v126;
          uint64_t v127 = v85[19];
          uint64_t v128 = &v82[v127];
          uint64_t v129 = &v83[v127];
          *(void *)uint64_t v128 = *(void *)v129;
          *((void *)v128 + 1) = *((void *)v129 + 1);
          uint64_t v130 = v85[20];
          uint64_t v131 = &v82[v130];
          uint64_t v132 = &v83[v130];
          *(void *)uint64_t v131 = *(void *)v132;
          *((void *)v131 + 1) = *((void *)v132 + 1);
          uint64_t v133 = v85[21];
          uint64_t v134 = &v82[v133];
          uint64_t v135 = &v83[v133];
          *(void *)uint64_t v134 = *(void *)v135;
          *((void *)v134 + 1) = *((void *)v135 + 1);
          uint64_t v136 = v85[22];
          id v237 = &v83[v136];
          id v240 = &v82[v136];
          uint64_t v137 = sub_1DFDEF360();
          id v235 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
          id v138 = v114;
          id v139 = v116;
          id v140 = v243;
          id v141 = v246;
          id v142 = v250;
          id v143 = v258;
          id v144 = v264;
          id v145 = v270;
          id v146 = v124;
          id v147 = v126;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v235(v240, v237, v137);
          uint64_t v148 = v85[23];
          uint64_t v149 = &v82[v148];
          id v150 = &v83[v148];
          *(void *)uint64_t v149 = *(void *)v150;
          *((void *)v149 + 1) = *((void *)v150 + 1);
          uint64_t v151 = v85[24];
          id v107 = &v82[v151];
          id v108 = &v83[v151];
          uint64_t v109 = sub_1DFDEF130();
          uint64_t v110 = *(void *)(v109 - 8);
          id v152 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
          swift_bridgeObjectRetain();
          if (!v152(v108, 1, v109)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v92 = (void *)*((void *)v83 + 1);
          *((void *)v82 + 1) = v92;
          uint64_t v93 = (void *)*((void *)v83 + 2);
          *((void *)v82 + 2) = v93;
          int v263 = (void *)*((void *)v83 + 3);
          *((void *)v82 + 3) = v263;
          uint64_t v269 = (void *)*((void *)v83 + 4);
          *((void *)v82 + 4) = v269;
          *((void *)v82 + 5) = *((void *)v83 + 5);
          *((void *)v82 + 6) = *((void *)v83 + 6);
          *((void *)v82 + 7) = *((void *)v83 + 7);
          int v94 = (void *)*((void *)v83 + 8);
          *((void *)v82 + 8) = v94;
          *((void *)v82 + 9) = *((void *)v83 + 9);
          *((void *)v82 + 10) = *((void *)v83 + 10);
          *((void *)v82 + 11) = *((void *)v83 + 11);
          *((void *)v82 + 12) = *((void *)v83 + 12);
          *((void *)v82 + 13) = *((void *)v83 + 13);
          *((void *)v82 + 14) = *((void *)v83 + 14);
          uint64_t v95 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
          uint64_t v96 = v95[16];
          uint64_t v253 = &v83[v96];
          uint64_t v257 = &v82[v96];
          uint64_t v97 = sub_1DFDEF360();
          uint64_t v249 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
          id v98 = v92;
          id v99 = v93;
          id v100 = v263;
          id v101 = v269;
          id v102 = v94;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v249(v257, v253, v97);
          uint64_t v103 = v95[17];
          uint64_t v104 = &v82[v103];
          uint64_t v105 = &v83[v103];
          *(void *)uint64_t v104 = *(void *)v105;
          *((void *)v104 + 1) = *((void *)v105 + 1);
          uint64_t v106 = v95[18];
          id v107 = &v82[v106];
          id v108 = &v83[v106];
          uint64_t v109 = sub_1DFDEF130();
          uint64_t v110 = *(void *)(v109 - 8);
          id v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
          swift_bridgeObjectRetain();
          if (!v111(v108, 1, v109))
          {
LABEL_17:
            (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v107, v108, v109);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
LABEL_18:
            swift_storeEnumTagMultiPayload();
            uint64_t v153 = a3[6];
            id v154 = (char *)v275 + v153;
            id v155 = (char *)(v274 + v153);
            sub_1DF004C0C((uint64_t)v275 + v153, type metadata accessor for FeedPaywallModel);
            int v156 = swift_getEnumCaseMultiPayload();
            *id v154 = *v155;
            if (v156 == 1)
            {
              id v157 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v158 = v157[5];
              id v159 = &v154[v158];
              uint64_t v160 = &v155[v158];
              uint64_t v161 = sub_1DFDE7220();
              uint64_t v162 = *(void *)(v161 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
              {
                sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
                memcpy(v159, v160, *(void *)(*(void *)(v163 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v159, v160, v161);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v159, 0, 1, v161);
              }
              *(void *)&v154[v157[6]] = *(void *)&v155[v157[6]];
              *(void *)&v154[v157[7]] = *(void *)&v155[v157[7]];
              *(void *)&v154[v157[8]] = *(void *)&v155[v157[8]];
              uint64_t v185 = v157[9];
              id v186 = *(void **)&v155[v185];
              *(void *)&v154[v185] = v186;
              uint64_t v187 = v157[10];
              id v188 = *(void **)&v155[v187];
              *(void *)&v154[v187] = v188;
              uint64_t v189 = v157[11];
              id v244 = *(void **)&v155[v189];
              *(void *)&v154[v189] = v244;
              uint64_t v190 = v157[12];
              id v247 = *(void **)&v155[v190];
              *(void *)&v154[v190] = v247;
              uint64_t v191 = v157[13];
              id v252 = *(void **)&v155[v191];
              *(void *)&v154[v191] = v252;
              uint64_t v192 = v157[14];
              uint64_t v260 = *(void **)&v155[v192];
              *(void *)&v154[v192] = v260;
              uint64_t v193 = v157[15];
              uint64_t v266 = *(void **)&v155[v193];
              *(void *)&v154[v193] = v266;
              uint64_t v194 = v157[16];
              uint64_t v272 = *(void **)&v155[v194];
              *(void *)&v154[v194] = v272;
              uint64_t v195 = v157[17];
              id v196 = *(void **)&v155[v195];
              *(void *)&v154[v195] = v196;
              uint64_t v197 = v157[18];
              uint64_t v198 = *(void **)&v155[v197];
              *(void *)&v154[v197] = v198;
              uint64_t v199 = v157[19];
              uint64_t v200 = &v154[v199];
              uint64_t v201 = &v155[v199];
              *(void *)uint64_t v200 = *(void *)v201;
              *((void *)v200 + 1) = *((void *)v201 + 1);
              uint64_t v202 = v157[20];
              uint64_t v203 = &v154[v202];
              uint64_t v204 = &v155[v202];
              *(void *)uint64_t v203 = *(void *)v204;
              *((void *)v203 + 1) = *((void *)v204 + 1);
              uint64_t v205 = v157[21];
              uint64_t v206 = &v154[v205];
              uint64_t v207 = &v155[v205];
              *(void *)uint64_t v206 = *(void *)v207;
              *((void *)v206 + 1) = *((void *)v207 + 1);
              uint64_t v208 = v157[22];
              id v238 = &v155[v208];
              id v241 = &v154[v208];
              uint64_t v209 = sub_1DFDEF360();
              id v236 = *(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16);
              id v210 = v186;
              id v211 = v188;
              id v212 = v244;
              id v213 = v247;
              id v214 = v252;
              id v215 = v260;
              id v216 = v266;
              id v217 = v272;
              id v218 = v196;
              id v219 = v198;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v236(v241, v238, v209);
              uint64_t v220 = v157[23];
              id v221 = &v154[v220];
              uint64_t v222 = &v155[v220];
              *(void *)id v221 = *(void *)v222;
              *((void *)v221 + 1) = *((void *)v222 + 1);
              uint64_t v223 = v157[24];
              uint64_t v179 = &v154[v223];
              uint64_t v180 = &v155[v223];
              uint64_t v181 = sub_1DFDEF130();
              uint64_t v182 = *(void *)(v181 - 8);
              id v224 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48);
              swift_bridgeObjectRetain();
              if (!v224(v180, 1, v181)) {
                goto LABEL_25;
              }
            }
            else
            {
              uint64_t v164 = (void *)*((void *)v155 + 1);
              *((void *)v154 + 1) = v164;
              int v165 = (void *)*((void *)v155 + 2);
              *((void *)v154 + 2) = v165;
              uint64_t v265 = (void *)*((void *)v155 + 3);
              *((void *)v154 + 3) = v265;
              uint64_t v271 = (void *)*((void *)v155 + 4);
              *((void *)v154 + 4) = v271;
              *((void *)v154 + 5) = *((void *)v155 + 5);
              *((void *)v154 + 6) = *((void *)v155 + 6);
              *((void *)v154 + 7) = *((void *)v155 + 7);
              uint64_t v166 = (void *)*((void *)v155 + 8);
              *((void *)v154 + 8) = v166;
              *((void *)v154 + 9) = *((void *)v155 + 9);
              *((void *)v154 + 10) = *((void *)v155 + 10);
              *((void *)v154 + 11) = *((void *)v155 + 11);
              *((void *)v154 + 12) = *((void *)v155 + 12);
              *((void *)v154 + 13) = *((void *)v155 + 13);
              *((void *)v154 + 14) = *((void *)v155 + 14);
              uint64_t v167 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v168 = v167[16];
              uint64_t v254 = &v155[v168];
              uint64_t v259 = &v154[v168];
              uint64_t v169 = sub_1DFDEF360();
              uint64_t v251 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
              id v170 = v164;
              id v171 = v165;
              id v172 = v265;
              id v173 = v271;
              id v174 = v166;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v251(v259, v254, v169);
              uint64_t v175 = v167[17];
              uint64_t v176 = &v154[v175];
              uint64_t v177 = &v155[v175];
              *(void *)uint64_t v176 = *(void *)v177;
              *((void *)v176 + 1) = *((void *)v177 + 1);
              uint64_t v178 = v167[18];
              uint64_t v179 = &v154[v178];
              uint64_t v180 = &v155[v178];
              uint64_t v181 = sub_1DFDEF130();
              uint64_t v182 = *(void *)(v181 - 8);
              uint64_t v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48);
              swift_bridgeObjectRetain();
              if (!v183(v180, 1, v181))
              {
LABEL_25:
                (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v179, v180, v181);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v182 + 56))(v179, 0, 1, v181);
LABEL_26:
                id v3 = v275;
                swift_storeEnumTagMultiPayload();
                uint64_t v225 = a3[7];
                uint64_t v226 = (void *)((char *)v275 + v225);
                uint64_t v227 = (void *)(v274 + v225);
                sub_1DF004C0C((uint64_t)v275 + v225, type metadata accessor for FeedPaywallType);
                uint64_t v228 = type metadata accessor for FeedPaywallType(0);
                if (swift_getEnumCaseMultiPayload())
                {
                  memcpy(v226, v227, *(void *)(*(void *)(v228 - 8) + 64));
                }
                else
                {
                  *uint64_t v226 = *v227;
                  sub_1DEC84AA4();
                  uint64_t v230 = *(int *)(v229 + 48);
                  id v231 = (char *)v226 + v230;
                  id v232 = (char *)v227 + v230;
                  uint64_t v233 = sub_1DFDEEE80();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 16))(v231, v232, v233);
                  swift_storeEnumTagMultiPayload();
                }
                return v3;
              }
            }
            sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
            memcpy(v179, v180, *(void *)(*(void *)(v184 - 8) + 64));
            goto LABEL_26;
          }
        }
        sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
        memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
        goto LABEL_18;
      }
    }
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_10;
  }
  return v3;
}

uint64_t sub_1DF004C0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF004C6C(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for FeedPaywallModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    uint64_t v11 = sub_1DFDE7220();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
    *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
    *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
    *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
    *(void *)(a1 + v7[10]) = *(void *)(a2 + v7[10]);
    *(void *)(a1 + v7[11]) = *(void *)(a2 + v7[11]);
    *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
    *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
    *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
    *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
    *(void *)(a1 + v7[16]) = *(void *)(a2 + v7[16]);
    *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
    *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
    *(_OWORD *)(a1 + v7[19]) = *(_OWORD *)(a2 + v7[19]);
    *(_OWORD *)(a1 + v7[20]) = *(_OWORD *)(a2 + v7[20]);
    *(_OWORD *)(a1 + v7[21]) = *(_OWORD *)(a2 + v7[21]);
    uint64_t v26 = v7[22];
    uint64_t v27 = a1 + v26;
    uint64_t v28 = a2 + v26;
    uint64_t v29 = sub_1DFDEF360();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    *(_OWORD *)(a1 + v7[23]) = *(_OWORD *)(a2 + v7[23]);
    uint64_t v30 = v7[24];
    id v21 = (void *)(a1 + v30);
    id v22 = (const void *)(a2 + v30);
    uint64_t v23 = sub_1DFDEF130();
    uint64_t v24 = *(void *)(v23 - 8);
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
      goto LABEL_8;
    }
LABEL_5:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_9;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v15 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v16 = v15[16];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1DFDEF360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)(a1 + v15[17]) = *(_OWORD *)(a2 + v15[17]);
  uint64_t v20 = v15[18];
  id v21 = (void *)(a1 + v20);
  id v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_1DFDEF130();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
    goto LABEL_5;
  }
LABEL_8:
  (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_9:
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = a3[5];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  int v34 = swift_getEnumCaseMultiPayload();
  *(unsigned char *)uint64_t v32 = *(unsigned char *)v33;
  id v99 = a3;
  if (v34 == 1)
  {
    uint64_t v35 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v36 = v35[5];
    uint64_t v37 = (void *)(v32 + v36);
    uint64_t v38 = (const void *)(v33 + v36);
    uint64_t v39 = sub_1DFDE7220();
    uint64_t v40 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v40 + 32))(v37, v38, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    *(void *)(v32 + v35[6]) = *(void *)(v33 + v35[6]);
    *(void *)(v32 + v35[7]) = *(void *)(v33 + v35[7]);
    *(void *)(v32 + v35[8]) = *(void *)(v33 + v35[8]);
    *(void *)(v32 + v35[9]) = *(void *)(v33 + v35[9]);
    *(void *)(v32 + v35[10]) = *(void *)(v33 + v35[10]);
    *(void *)(v32 + v35[11]) = *(void *)(v33 + v35[11]);
    *(void *)(v32 + v35[12]) = *(void *)(v33 + v35[12]);
    *(void *)(v32 + v35[13]) = *(void *)(v33 + v35[13]);
    *(void *)(v32 + v35[14]) = *(void *)(v33 + v35[14]);
    *(void *)(v32 + v35[15]) = *(void *)(v33 + v35[15]);
    *(void *)(v32 + v35[16]) = *(void *)(v33 + v35[16]);
    *(void *)(v32 + v35[17]) = *(void *)(v33 + v35[17]);
    *(void *)(v32 + v35[18]) = *(void *)(v33 + v35[18]);
    *(_OWORD *)(v32 + v35[19]) = *(_OWORD *)(v33 + v35[19]);
    *(_OWORD *)(v32 + v35[20]) = *(_OWORD *)(v33 + v35[20]);
    *(_OWORD *)(v32 + v35[21]) = *(_OWORD *)(v33 + v35[21]);
    uint64_t v54 = v35[22];
    uint64_t v55 = v32 + v54;
    uint64_t v56 = v33 + v54;
    uint64_t v57 = sub_1DFDEF360();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
    *(_OWORD *)(v32 + v35[23]) = *(_OWORD *)(v33 + v35[23]);
    uint64_t v58 = v35[24];
    uint64_t v49 = (void *)(v32 + v58);
    uint64_t v50 = (const void *)(v33 + v58);
    uint64_t v59 = sub_1DFDEF130();
    uint64_t v60 = *(void *)(v59 - 8);
    a3 = v99;
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48))(v50, 1, v59)) {
      goto LABEL_13;
    }
    (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v49, v50, v59);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v49, 0, 1, v59);
  }
  else
  {
    *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
    *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
    *(_OWORD *)(v32 + 40) = *(_OWORD *)(v33 + 40);
    uint64_t v42 = *(void *)(v33 + 64);
    *(void *)(v32 + 56) = *(void *)(v33 + 56);
    *(void *)(v32 + 64) = v42;
    *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
    *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
    *(_OWORD *)(v32 + 104) = *(_OWORD *)(v33 + 104);
    uint64_t v43 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v44 = v43[16];
    uint64_t v45 = v32 + v44;
    uint64_t v46 = v33 + v44;
    uint64_t v47 = sub_1DFDEF360();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
    *(_OWORD *)(v32 + v43[17]) = *(_OWORD *)(v33 + v43[17]);
    uint64_t v48 = v43[18];
    uint64_t v49 = (void *)(v32 + v48);
    uint64_t v50 = (const void *)(v33 + v48);
    uint64_t v51 = sub_1DFDEF130();
    uint64_t v52 = *(void *)(v51 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
LABEL_13:
      sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
      goto LABEL_19;
    }
    (*(void (**)(void *, const void *, uint64_t))(v52 + 32))(v49, v50, v51);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
LABEL_19:
  swift_storeEnumTagMultiPayload();
  uint64_t v61 = a3[6];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  int v64 = swift_getEnumCaseMultiPayload();
  *(unsigned char *)uint64_t v62 = *(unsigned char *)v63;
  if (v64 == 1)
  {
    uint64_t v65 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v66 = v65[5];
    id v67 = (void *)(v62 + v66);
    id v68 = (const void *)(v63 + v66);
    uint64_t v69 = sub_1DFDE7220();
    uint64_t v70 = *(void *)(v69 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v70 + 32))(v67, v68, v69);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
    *(void *)(v62 + v65[6]) = *(void *)(v63 + v65[6]);
    *(void *)(v62 + v65[7]) = *(void *)(v63 + v65[7]);
    *(void *)(v62 + v65[8]) = *(void *)(v63 + v65[8]);
    *(void *)(v62 + v65[9]) = *(void *)(v63 + v65[9]);
    *(void *)(v62 + v65[10]) = *(void *)(v63 + v65[10]);
    *(void *)(v62 + v65[11]) = *(void *)(v63 + v65[11]);
    *(void *)(v62 + v65[12]) = *(void *)(v63 + v65[12]);
    *(void *)(v62 + v65[13]) = *(void *)(v63 + v65[13]);
    *(void *)(v62 + v65[14]) = *(void *)(v63 + v65[14]);
    *(void *)(v62 + v65[15]) = *(void *)(v63 + v65[15]);
    *(void *)(v62 + v65[16]) = *(void *)(v63 + v65[16]);
    *(void *)(v62 + v65[17]) = *(void *)(v63 + v65[17]);
    *(void *)(v62 + v65[18]) = *(void *)(v63 + v65[18]);
    *(_OWORD *)(v62 + v65[19]) = *(_OWORD *)(v63 + v65[19]);
    *(_OWORD *)(v62 + v65[20]) = *(_OWORD *)(v63 + v65[20]);
    *(_OWORD *)(v62 + v65[21]) = *(_OWORD *)(v63 + v65[21]);
    uint64_t v84 = v65[22];
    uint64_t v85 = v62 + v84;
    uint64_t v86 = v63 + v84;
    uint64_t v87 = sub_1DFDEF360();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
    *(_OWORD *)(v62 + v65[23]) = *(_OWORD *)(v63 + v65[23]);
    uint64_t v88 = v65[24];
    uint64_t v79 = (void *)(v62 + v88);
    id v80 = (const void *)(v63 + v88);
    uint64_t v81 = sub_1DFDEF130();
    uint64_t v82 = *(void *)(v81 - 8);
    a3 = v99;
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81)) {
      goto LABEL_26;
    }
LABEL_23:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_27;
  }
  *(_OWORD *)(v62 + 8) = *(_OWORD *)(v63 + 8);
  *(_OWORD *)(v62 + 24) = *(_OWORD *)(v63 + 24);
  *(_OWORD *)(v62 + 40) = *(_OWORD *)(v63 + 40);
  uint64_t v72 = *(void *)(v63 + 64);
  *(void *)(v62 + 56) = *(void *)(v63 + 56);
  *(void *)(v62 + 64) = v72;
  *(_OWORD *)(v62 + 72) = *(_OWORD *)(v63 + 72);
  *(_OWORD *)(v62 + 88) = *(_OWORD *)(v63 + 88);
  *(_OWORD *)(v62 + 104) = *(_OWORD *)(v63 + 104);
  id v73 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v74 = v73[16];
  uint64_t v75 = v62 + v74;
  uint64_t v76 = v63 + v74;
  uint64_t v77 = sub_1DFDEF360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
  *(_OWORD *)(v62 + v73[17]) = *(_OWORD *)(v63 + v73[17]);
  uint64_t v78 = v73[18];
  uint64_t v79 = (void *)(v62 + v78);
  id v80 = (const void *)(v63 + v78);
  uint64_t v81 = sub_1DFDEF130();
  uint64_t v82 = *(void *)(v81 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81)) {
    goto LABEL_23;
  }
LABEL_26:
  (*(void (**)(void *, const void *, uint64_t))(v82 + 32))(v79, v80, v81);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
LABEL_27:
  swift_storeEnumTagMultiPayload();
  uint64_t v89 = a3[7];
  uint64_t v90 = (void *)(a1 + v89);
  uint64_t v91 = (void *)(a2 + v89);
  uint64_t v92 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    *uint64_t v90 = *v91;
    sub_1DEC84AA4();
    uint64_t v94 = *(int *)(v93 + 48);
    uint64_t v95 = (char *)v90 + v94;
    uint64_t v96 = (char *)v91 + v94;
    uint64_t v97 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DF005BFC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1DF004C0C(a1, type metadata accessor for FeedPaywallModel);
    type metadata accessor for FeedPaywallModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (void *)(a1 + v8);
      uint64_t v10 = (const void *)(a2 + v8);
      uint64_t v11 = sub_1DFDE7220();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
      *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
      *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
      *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
      *(void *)(a1 + v7[10]) = *(void *)(a2 + v7[10]);
      *(void *)(a1 + v7[11]) = *(void *)(a2 + v7[11]);
      *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
      *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
      *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
      *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
      *(void *)(a1 + v7[16]) = *(void *)(a2 + v7[16]);
      *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
      *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
      *(_OWORD *)(a1 + v7[19]) = *(_OWORD *)(a2 + v7[19]);
      *(_OWORD *)(a1 + v7[20]) = *(_OWORD *)(a2 + v7[20]);
      *(_OWORD *)(a1 + v7[21]) = *(_OWORD *)(a2 + v7[21]);
      uint64_t v26 = v7[22];
      uint64_t v27 = a1 + v26;
      uint64_t v28 = a2 + v26;
      uint64_t v29 = sub_1DFDEF360();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      *(_OWORD *)(a1 + v7[23]) = *(_OWORD *)(a2 + v7[23]);
      uint64_t v30 = v7[24];
      id v21 = (void *)(a1 + v30);
      id v22 = (const void *)(a2 + v30);
      uint64_t v23 = sub_1DFDEF130();
      uint64_t v24 = *(void *)(v23 - 8);
      if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
        goto LABEL_9;
      }
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v14 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v14;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      uint64_t v15 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
      uint64_t v16 = v15[16];
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_1DFDEF360();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)(a1 + v15[17]) = *(_OWORD *)(a2 + v15[17]);
      uint64_t v20 = v15[18];
      id v21 = (void *)(a1 + v20);
      id v22 = (const void *)(a2 + v20);
      uint64_t v23 = sub_1DFDEF130();
      uint64_t v24 = *(void *)(v23 - 8);
      if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
LABEL_9:
        (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        uint64_t v31 = a3[5];
        uint64_t v32 = a1 + v31;
        uint64_t v33 = a2 + v31;
        sub_1DF004C0C(a1 + v31, type metadata accessor for FeedPaywallModel);
        int v34 = swift_getEnumCaseMultiPayload();
        *(unsigned char *)uint64_t v32 = *(unsigned char *)v33;
        id v99 = a3;
        if (v34 == 1)
        {
          uint64_t v35 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
          uint64_t v36 = v35[5];
          uint64_t v37 = (void *)(v32 + v36);
          uint64_t v38 = (const void *)(v33 + v36);
          uint64_t v39 = sub_1DFDE7220();
          uint64_t v40 = *(void *)(v39 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
          {
            sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
            memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v40 + 32))(v37, v38, v39);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          }
          *(void *)(v32 + v35[6]) = *(void *)(v33 + v35[6]);
          *(void *)(v32 + v35[7]) = *(void *)(v33 + v35[7]);
          *(void *)(v32 + v35[8]) = *(void *)(v33 + v35[8]);
          *(void *)(v32 + v35[9]) = *(void *)(v33 + v35[9]);
          *(void *)(v32 + v35[10]) = *(void *)(v33 + v35[10]);
          *(void *)(v32 + v35[11]) = *(void *)(v33 + v35[11]);
          *(void *)(v32 + v35[12]) = *(void *)(v33 + v35[12]);
          *(void *)(v32 + v35[13]) = *(void *)(v33 + v35[13]);
          *(void *)(v32 + v35[14]) = *(void *)(v33 + v35[14]);
          *(void *)(v32 + v35[15]) = *(void *)(v33 + v35[15]);
          *(void *)(v32 + v35[16]) = *(void *)(v33 + v35[16]);
          *(void *)(v32 + v35[17]) = *(void *)(v33 + v35[17]);
          *(void *)(v32 + v35[18]) = *(void *)(v33 + v35[18]);
          *(_OWORD *)(v32 + v35[19]) = *(_OWORD *)(v33 + v35[19]);
          *(_OWORD *)(v32 + v35[20]) = *(_OWORD *)(v33 + v35[20]);
          *(_OWORD *)(v32 + v35[21]) = *(_OWORD *)(v33 + v35[21]);
          uint64_t v54 = v35[22];
          uint64_t v55 = v32 + v54;
          uint64_t v56 = v33 + v54;
          uint64_t v57 = sub_1DFDEF360();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
          *(_OWORD *)(v32 + v35[23]) = *(_OWORD *)(v33 + v35[23]);
          uint64_t v58 = v35[24];
          uint64_t v49 = (void *)(v32 + v58);
          uint64_t v50 = (const void *)(v33 + v58);
          uint64_t v59 = sub_1DFDEF130();
          uint64_t v60 = *(void *)(v59 - 8);
          a3 = v99;
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48))(v50, 1, v59)) {
            goto LABEL_14;
          }
          (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v49, v50, v59);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v49, 0, 1, v59);
        }
        else
        {
          *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
          *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
          *(_OWORD *)(v32 + 40) = *(_OWORD *)(v33 + 40);
          uint64_t v42 = *(void *)(v33 + 64);
          *(void *)(v32 + 56) = *(void *)(v33 + 56);
          *(void *)(v32 + 64) = v42;
          *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
          *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
          *(_OWORD *)(v32 + 104) = *(_OWORD *)(v33 + 104);
          uint64_t v43 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
          uint64_t v44 = v43[16];
          uint64_t v45 = v32 + v44;
          uint64_t v46 = v33 + v44;
          uint64_t v47 = sub_1DFDEF360();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
          *(_OWORD *)(v32 + v43[17]) = *(_OWORD *)(v33 + v43[17]);
          uint64_t v48 = v43[18];
          uint64_t v49 = (void *)(v32 + v48);
          uint64_t v50 = (const void *)(v33 + v48);
          uint64_t v51 = sub_1DFDEF130();
          uint64_t v52 = *(void *)(v51 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
          {
LABEL_14:
            sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
            memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
            goto LABEL_20;
          }
          (*(void (**)(void *, const void *, uint64_t))(v52 + 32))(v49, v50, v51);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
LABEL_20:
        swift_storeEnumTagMultiPayload();
        uint64_t v61 = a3[6];
        uint64_t v62 = a1 + v61;
        uint64_t v63 = a2 + v61;
        sub_1DF004C0C(a1 + v61, type metadata accessor for FeedPaywallModel);
        int v64 = swift_getEnumCaseMultiPayload();
        *(unsigned char *)uint64_t v62 = *(unsigned char *)v63;
        if (v64 == 1)
        {
          uint64_t v65 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
          uint64_t v66 = v65[5];
          id v67 = (void *)(v62 + v66);
          id v68 = (const void *)(v63 + v66);
          uint64_t v69 = sub_1DFDE7220();
          uint64_t v70 = *(void *)(v69 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
          {
            sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
            memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v70 + 32))(v67, v68, v69);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
          }
          *(void *)(v62 + v65[6]) = *(void *)(v63 + v65[6]);
          *(void *)(v62 + v65[7]) = *(void *)(v63 + v65[7]);
          *(void *)(v62 + v65[8]) = *(void *)(v63 + v65[8]);
          *(void *)(v62 + v65[9]) = *(void *)(v63 + v65[9]);
          *(void *)(v62 + v65[10]) = *(void *)(v63 + v65[10]);
          *(void *)(v62 + v65[11]) = *(void *)(v63 + v65[11]);
          *(void *)(v62 + v65[12]) = *(void *)(v63 + v65[12]);
          *(void *)(v62 + v65[13]) = *(void *)(v63 + v65[13]);
          *(void *)(v62 + v65[14]) = *(void *)(v63 + v65[14]);
          *(void *)(v62 + v65[15]) = *(void *)(v63 + v65[15]);
          *(void *)(v62 + v65[16]) = *(void *)(v63 + v65[16]);
          *(void *)(v62 + v65[17]) = *(void *)(v63 + v65[17]);
          *(void *)(v62 + v65[18]) = *(void *)(v63 + v65[18]);
          *(_OWORD *)(v62 + v65[19]) = *(_OWORD *)(v63 + v65[19]);
          *(_OWORD *)(v62 + v65[20]) = *(_OWORD *)(v63 + v65[20]);
          *(_OWORD *)(v62 + v65[21]) = *(_OWORD *)(v63 + v65[21]);
          uint64_t v84 = v65[22];
          uint64_t v85 = v62 + v84;
          uint64_t v86 = v63 + v84;
          uint64_t v87 = sub_1DFDEF360();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
          *(_OWORD *)(v62 + v65[23]) = *(_OWORD *)(v63 + v65[23]);
          uint64_t v88 = v65[24];
          uint64_t v79 = (void *)(v62 + v88);
          id v80 = (const void *)(v63 + v88);
          uint64_t v81 = sub_1DFDEF130();
          uint64_t v82 = *(void *)(v81 - 8);
          a3 = v99;
          if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81)) {
            goto LABEL_27;
          }
        }
        else
        {
          *(_OWORD *)(v62 + 8) = *(_OWORD *)(v63 + 8);
          *(_OWORD *)(v62 + 24) = *(_OWORD *)(v63 + 24);
          *(_OWORD *)(v62 + 40) = *(_OWORD *)(v63 + 40);
          uint64_t v72 = *(void *)(v63 + 64);
          *(void *)(v62 + 56) = *(void *)(v63 + 56);
          *(void *)(v62 + 64) = v72;
          *(_OWORD *)(v62 + 72) = *(_OWORD *)(v63 + 72);
          *(_OWORD *)(v62 + 88) = *(_OWORD *)(v63 + 88);
          *(_OWORD *)(v62 + 104) = *(_OWORD *)(v63 + 104);
          id v73 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
          uint64_t v74 = v73[16];
          uint64_t v75 = v62 + v74;
          uint64_t v76 = v63 + v74;
          uint64_t v77 = sub_1DFDEF360();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
          *(_OWORD *)(v62 + v73[17]) = *(_OWORD *)(v63 + v73[17]);
          uint64_t v78 = v73[18];
          uint64_t v79 = (void *)(v62 + v78);
          id v80 = (const void *)(v63 + v78);
          uint64_t v81 = sub_1DFDEF130();
          uint64_t v82 = *(void *)(v81 - 8);
          if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
          {
LABEL_27:
            (*(void (**)(void *, const void *, uint64_t))(v82 + 32))(v79, v80, v81);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
LABEL_28:
            swift_storeEnumTagMultiPayload();
            uint64_t v89 = a3[7];
            uint64_t v90 = (void *)(a1 + v89);
            uint64_t v91 = (void *)(a2 + v89);
            sub_1DF004C0C(a1 + v89, type metadata accessor for FeedPaywallType);
            uint64_t v92 = type metadata accessor for FeedPaywallType(0);
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
              *uint64_t v90 = *v91;
              sub_1DEC84AA4();
              uint64_t v94 = *(int *)(v93 + 48);
              uint64_t v95 = (char *)v90 + v94;
              uint64_t v96 = (char *)v91 + v94;
              uint64_t v97 = sub_1DFDEEE80();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
              swift_storeEnumTagMultiPayload();
            }
            return a1;
          }
        }
        sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
        memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
        goto LABEL_28;
      }
    }
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_10;
  }
  return a1;
}

uint64_t sub_1DF006C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF006C18);
}

uint64_t sub_1DF006C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedPaywallModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for FeedPaywallType(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 28);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DF006D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF006D24);
}

uint64_t sub_1DF006D24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FeedPaywallModel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for FeedPaywallType(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 28);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1DF006E28()
{
  sub_1DEB1DDEC(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MagazineCatalogEventHandler()
{
  return self;
}

uint64_t sub_1DF006E9C(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E01EFB70](a1 + 16);
  if (result)
  {
    uint64_t v2 = (void *)result;
    *(void *)(swift_allocObject() + 16) = result;
    id v3 = v2;
    sub_1DFDEE310();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF006F30(uint64_t a1)
{
  return sub_1DF1D2D30(a1);
}

uint64_t sub_1DF006F54()
{
  return swift_deallocObject();
}

uint64_t sub_1DF006F8C()
{
  return sub_1DFC6400C();
}

uint64_t sub_1DF006F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1DFDEC3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDEC3D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 64), *(void *)(a3 + 88));
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F7CE48], v4);
  swift_bridgeObjectRetain();
  sub_1DFDEC3B0();
  sub_1DF0073F8();
  sub_1DFDE8880();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1DF007174()
{
  uint64_t v0 = sub_1DFDF5B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF5B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DFDF30C0();
  *uint64_t v7 = sub_1DFDFA690();
  v7[1] = v8;
  uint64_t v9 = sub_1DFDF0630();
  uint64_t v10 = MEMORY[0x1E4FABBF0];
  v7[5] = v9;
  v7[6] = v10;
  __swift_allocate_boxed_opaque_existential_1(v7 + 2);
  sub_1DFDF0620();
  v7[7] = sub_1DFDFA670();
  v7[8] = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAD870], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAD880], v0);
  sub_1DFDF1750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF00739C(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E01EFB70](a2 + 16);
  if (result)
  {
    sub_1DF007174();
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_1DF0073F8()
{
  unint64_t result = qword_1EBAA7350;
  if (!qword_1EBAA7350)
  {
    sub_1DFDEC3D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAA7350);
  }
  return result;
}

uint64_t sub_1DF007450()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DF00752C()
{
  uint64_t v1 = type metadata accessor for SearchExpandRequest();
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  int v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDEB830();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDEA1B0();
  uint64_t v8 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SearchResults();
  uint64_t v12 = (int *)(v11 - 8);
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v33 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v32 = (uint64_t)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v29 - v15;
  sub_1DFDFD9C0();
  uint64_t v31 = *(void *)(v0 + *(void *)(*(void *)v0 + 120));
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F7C448], v4);
  sub_1DFDEA1A0();
  uint64_t v17 = v30;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v16[v12[8]], v10, v30);
  uint64_t v18 = &v16[v12[10]];
  uint64_t v19 = sub_1DFDEB4F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  strcpy(v16, "empty-search");
  v16[13] = 0;
  *((_WORD *)v16 + 7) = -5120;
  *((void *)v16 + 2) = MEMORY[0x1E4FBC860];
  uint64_t v20 = &v16[v12[9]];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  *(void *)&v16[v12[11]] = 0;
  uint64_t v21 = v12[12];
  *(void *)&v16[v21] = 7;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  id v22 = v34;
  sub_1DF00BC4C((uint64_t)v16, (uint64_t)&v34[*(int *)(v2 + 28)], (uint64_t (*)(void))type metadata accessor for SearchResults);
  type metadata accessor for SearchFeedGapLocation(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = *(void *)&v16[v21];
  strcpy(v22, "prewarmRequest");
  v22[15] = -18;
  *(void *)&v22[*(int *)(v2 + 32)] = v23;
  uint64_t v35 = v31;
  uint64_t v36 = v22;
  sub_1DFDEE090();
  uint64_t v24 = v32;
  sub_1DF00BC4C((uint64_t)v16, v32, (uint64_t (*)(void))type metadata accessor for SearchResults);
  unint64_t v25 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v26 = swift_allocObject();
  sub_1DF00BE64(v24, v26 + v25, (uint64_t (*)(void))type metadata accessor for SearchResults);
  *(void *)(v26 + ((v13 + v25 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
  uint64_t v27 = (void *)sub_1DFDEDCE0();
  type metadata accessor for SearchPrewarmResult();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  sub_1DF00B0D8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for SearchExpandRequest);
  swift_release();
  return sub_1DF00B0D8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SearchResults);
}

uint64_t sub_1DF007A10()
{
  uint64_t v1 = sub_1DFDECAF0();
  MEMORY[0x1F4188790](v1);
  uint64_t v2 = *(void *)(v0 + *(void *)(*(void *)v0 + 120));
  uint64_t v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1DF00B318(0, (unint64_t *)&unk_1EBABB3E8, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0B250;
  sub_1DFDECAE0();
  sub_1DE917808((unint64_t *)&qword_1EBAA7440, MEMORY[0x1E4FAA910]);
  sub_1DF00B318(0, (unint64_t *)&unk_1EBABA6E0, v3, MEMORY[0x1E4FBB320]);
  sub_1DEA6BABC();
  sub_1DFDFF830();
  sub_1DF00B318(0, (unint64_t *)&unk_1EBAEBAA0, (uint64_t (*)(uint64_t))sub_1DF00BC18, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  swift_retain();
  *(void *)(v2 + OBJC_IVAR____TtC7NewsUI217SearchDataManager_feedServiceConfig) = sub_1DFDEDBB0();
  swift_release();
  type metadata accessor for SearchFeedServiceConfig();
  type metadata accessor for SearchDataManager();
  sub_1DFDEE080();
  return swift_release();
}

void sub_1DF007CCC(long long *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  long long v5 = a1[1];
  long long v29 = *a1;
  long long v30 = v5;
  char v6 = *((unsigned char *)a1 + 32);
  char v31 = v6;
  uint64_t v8 = *(void *)a1;
  uint64_t v7 = *((void *)a1 + 1);
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  if (a2)
  {
    sub_1DEB9BF10((uint64_t)&v29);
LABEL_11:
    CFTimeInterval v15 = CACurrentMediaTime();
    uint64_t v16 = (char *)v3 + *(void *)(*v3 + 152);
    *(void *)uint64_t v16 = v8;
    *((void *)v16 + 1) = v7;
    *((void *)v16 + 2) = v9;
    *((void *)v16 + 3) = v10;
    uint64_t v26 = v10;
    v16[32] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E01EFB70](v3 + 2);
    if (v17)
    {
      v27[0] = v29;
      v27[1] = v30;
      char v28 = v31;
      sub_1DF731038((uint64_t)v27, v17);
      uint64_t v17 = swift_unknownObjectRelease();
    }
    MEMORY[0x1F4188790](v17);
    type metadata accessor for SearchResults();
    sub_1DFDEE090();
    sub_1DEAA29D0();
    uint64_t v18 = (void *)sub_1DFDFEE60();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v8;
    *(void *)(v19 + 24) = v7;
    *(void *)(v19 + 32) = v9;
    *(void *)(v19 + 40) = v10;
    *(unsigned char *)(v19 + 48) = v6;
    *(CFTimeInterval *)(v19 + 56) = v15;
    sub_1DEB9BF10((uint64_t)&v29);
    type metadata accessor for SearchPrewarmResult();
    sub_1DFDEDE10();
    swift_release();

    swift_release();
    uint64_t v20 = (void *)sub_1DFDFEE60();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v8;
    *(void *)(v21 + 24) = v7;
    *(void *)(v21 + 32) = v9;
    *(void *)(v21 + 40) = v26;
    *(unsigned char *)(v21 + 48) = v6;
    sub_1DFDEDE10();
    swift_release();

    swift_release();
    *(CFTimeInterval *)(swift_allocObject() + 16) = v15;
    id v22 = (void *)sub_1DFDEDCE0();
    sub_1DFDEDE20();
    swift_release();
    swift_release();

    uint64_t v23 = (void *)sub_1DFDFEE60();
    sub_1DFDEDE60();
    swift_release();
    swift_release();

    return;
  }
  uint64_t v11 = (void *)((char *)v2 + *(void *)(v4 + 152));
  uint64_t v12 = v11[1];
  if (!v12)
  {
    sub_1DEB9BF10((uint64_t)&v29);
    sub_1DEB9BF10((uint64_t)&v29);
    sub_1DEB9BF10((uint64_t)&v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  if (v8 == *v11 && v12 == v7)
  {
    sub_1DEB9BF10((uint64_t)&v29);
    sub_1DEB9BF10((uint64_t)&v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_1DFDFFF50();
    sub_1DEB9BF10((uint64_t)&v29);
    sub_1DEB9BF10((uint64_t)&v29);
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_11;
    }
  }
  if (qword_1EBAEA6C8 != -1) {
    swift_once();
  }
  sub_1DF00B1BC(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1DFE0B250;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "{searchString=");
  HIBYTE(v27[0]) = -18;
  sub_1DEB9BF10((uint64_t)&v29);
  sub_1DFDFDE90();
  sub_1DEB9BF68((uint64_t)&v29);
  sub_1DFDFDE90();
  sub_1DEB9BF68((uint64_t)&v29);
  long long v25 = v27[0];
  *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v24 + 64) = sub_1DEA08668();
  *(_OWORD *)(v24 + 32) = v25;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
}

uint64_t sub_1DF00821C(uint64_t a1, uint64_t a2, void *a3)
{
  long long v5 = (void *)(a2 + *(void *)(*(void *)a2 + 152));
  uint64_t v6 = v5[1];
  if (!v6)
  {
    sub_1DEB9BF10((uint64_t)a3);
    sub_1DEB9BF10((uint64_t)a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  if (*a3 != *v5 || v6 != a3[1])
  {
    char v8 = sub_1DFDFFF50();
    sub_1DEB9BF10((uint64_t)a3);
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v9 = sub_1DFDECC20();
    sub_1DE917808(&qword_1EAC23140, MEMORY[0x1E4FAA9B0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v10, *MEMORY[0x1E4FAA9A8], v9);
    return swift_willThrow();
  }
  sub_1DEB9BF10((uint64_t)a3);
  swift_bridgeObjectRelease();
LABEL_11:
  sub_1DFDFE560();
  return sub_1DF947CF8(a1, v12);
}

uint64_t sub_1DF0083CC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v28 = a1;
  uint64_t v6 = *a2;
  uint64_t v7 = *a3;
  uint64_t v8 = a3[1];
  uint64_t v9 = *a2;
  uint64_t v10 = type metadata accessor for SearchPrewarmResult();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  char v14 = (uint64_t *)((char *)a2 + *(void *)(v6 + 152));
  uint64_t v15 = v14[1];
  if (v15)
  {
    uint64_t v26 = v13;
    uint64_t v27 = v12;
    if (v7 == *v14 && v15 == v8)
    {
      sub_1DEB9BF10((uint64_t)a3);
      swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v25 = v3;
      uint64_t v29 = (*(uint64_t (**)(uint64_t, void))(*(void *)(v9 + 88) + 8))(v28, *(void *)(v9 + 80));
      uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC2B8];
      sub_1DF00B4E4(0, (unint64_t *)&qword_1EBAEBD10, MEMORY[0x1E4FAC2B8]);
      sub_1DF00B5D8(&qword_1EBAEBD08, (unint64_t *)&qword_1EBAEBD10, v20);
      sub_1DFDF19C0();
      sub_1DF00BC4C(v28, (uint64_t)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SearchPrewarmResult);
      unint64_t v21 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v22 = swift_allocObject();
      sub_1DF00BE64((uint64_t)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, (uint64_t (*)(void))type metadata accessor for SearchPrewarmResult);
      uint64_t v23 = (void *)sub_1DFDEDCE0();
      uint64_t v18 = sub_1DFDEDE00();
      swift_release();
      swift_release();
      swift_release();

      return v18;
    }
    char v17 = sub_1DFDFFF50();
    sub_1DEB9BF10((uint64_t)a3);
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_11;
    }
  }
  else
  {
    sub_1DEB9BF10((uint64_t)a3);
    sub_1DEB9BF10((uint64_t)a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v18 = sub_1DFDECC20();
  sub_1DE917808(&qword_1EAC23140, MEMORY[0x1E4FAA9B0]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, *MEMORY[0x1E4FAA9A8], v18);
  swift_willThrow();
  return v18;
}

uint64_t sub_1DF008768(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  sub_1DFDFE560();
  double v5 = v4;
  uint64_t v6 = MEMORY[0x1E01EFB70](v3);
  if (v6)
  {
    uint64_t v7 = v6;
    double v8 = *(double *)(a1 + *(int *)(type metadata accessor for SearchPrewarmResult() + 24));
    type metadata accessor for SearchInteractor();
    sub_1DF731140(a1, v7, v5, v8);
    swift_unknownObjectRelease();
  }
  uint64_t result = MEMORY[0x1E01EFB70](v3);
  if (result)
  {
    uint64_t v10 = result;
    type metadata accessor for SearchInteractor();
    sub_1DF731310(v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DF008868(void *a1, uint64_t *a2)
{
  uint64_t v36 = *a2;
  uint64_t v42 = sub_1DFDFA6C0();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF00B93C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF00B998(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDECC20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v38 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v37 = (char *)&v34 - v14;
  if (qword_1EBAEA6C8 != -1) {
    swift_once();
  }
  uint64_t v41 = qword_1EBB63300;
  sub_1DFDFEA40();
  sub_1DF00B1BC(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DFE0B250;
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  uint64_t v43 = a1;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  char v17 = v44;
  unint64_t v16 = v45;
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 64) = sub_1DEA08668();
  *(void *)(v15 + 32) = v17;
  *(void *)(v15 + 40) = v16;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v44 = a1;
  id v18 = a1;
  char v19 = swift_dynamicCast();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v19)
  {
    v20(v9, 0, 1, v10);
    unint64_t v21 = v37;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v37, v9, v10);
    uint64_t v22 = v38;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v38, *MEMORY[0x1E4FAA9A8], v10);
    char v23 = sub_1DFDECC10();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
    v24(v22, v10);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v21, v10);
    uint64_t v26 = v42;
    if (v23) {
      return result;
    }
  }
  else
  {
    v20(v9, 1, 1, v10);
    sub_1DF00B0D8((uint64_t)v9, (uint64_t (*)(void))sub_1DF00B998);
    uint64_t v26 = v42;
  }
  uint64_t v27 = (uint64_t)a2 + *(void *)(*a2 + 152);
  *(unsigned char *)(v27 + 32) = 0;
  *(_OWORD *)uint64_t v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
  swift_bridgeObjectRelease();
  uint64_t v28 = v39;
  sub_1DFDFAC30();
  uint64_t v29 = v40;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v28, 1, v26) == 1)
  {
    uint64_t result = MEMORY[0x1E01EFB70](a2 + 2);
    if (result)
    {
      uint64_t v30 = result;
      if (qword_1EAC1CC40 != -1) {
        swift_once();
      }
      uint64_t v31 = __swift_project_value_buffer(v26, (uint64_t)qword_1EACDF818);
      sub_1DF731330(v31, v30);
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v32 = (uint64_t)v35;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v35, v28, v26);
    uint64_t v33 = MEMORY[0x1E01EFB70](a2 + 2);
    if (v33)
    {
      sub_1DF731330(v32, v33);
      swift_unknownObjectRelease();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v32, v26);
  }
  return result;
}

uint64_t sub_1DF008E24(void *a1, uint64_t a2)
{
  uint64_t v56 = a1;
  uint64_t v3 = *(void *)v2;
  uint64_t v48 = a2;
  uint64_t v49 = v3;
  uint64_t v47 = type metadata accessor for SearchExpandRequest();
  MEMORY[0x1F4188790](v47);
  uint64_t v51 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for SearchModel(0);
  MEMORY[0x1F4188790](v53);
  uint64_t v54 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SearchFeedGapLocation(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v52 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF00B69C(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0D9F8(0);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v55 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF00B4E4(0, (unint64_t *)&qword_1EBAEC360, MEMORY[0x1E4FAD830]);
  unint64_t v16 = v15;
  uint64_t v17 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v15);
  char v19 = (char *)&v45 - v18;
  uint64_t v50 = v2;
  sub_1DFDF19F0();
  uint64_t v58 = *(void *)&v57[0];
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC2D8];
  sub_1DF00B4E4(0, (unint64_t *)&qword_1EBAEBD78, MEMORY[0x1E4FAC2D8]);
  sub_1DF00B5D8(&qword_1EBAEBD70, (unint64_t *)&qword_1EBAEBD78, v20);
  unint64_t v21 = v16;
  sub_1DFDF2690();
  uint64_t v22 = v12;
  uint64_t v23 = v13;
  uint64_t v24 = v56;
  swift_release();
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  sub_1DFDECC00();
  sub_1DFDF5970();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v22) == 1)
  {
    sub_1DF00B0D8((uint64_t)v10, (uint64_t (*)(void))sub_1DF00B69C);
    uint64_t v25 = v19;
    uint64_t v26 = v24[3];
    uint64_t v27 = v24[4];
    __swift_project_boxed_opaque_existential_1(v24, v26);
    MEMORY[0x1E01E2E20](0, v26, v27);
    return (*(uint64_t (**)(char *, char *))(v17 + 8))(v25, v21);
  }
  else
  {
    unint64_t v45 = v19;
    uint64_t v46 = v17;
    uint64_t v29 = v55;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v55, v10, v22);
    uint64_t v30 = v54;
    sub_1DFDF0B50();
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1DF00B0D8((uint64_t)v30, type metadata accessor for SearchModel);
      uint64_t v31 = v24[3];
      uint64_t v32 = v24[4];
      __swift_project_boxed_opaque_existential_1(v24, v31);
      MEMORY[0x1E01E2E20](0, v31, v32);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);
      return (*(uint64_t (**)(char *, char *))(v46 + 8))(v45, v16);
    }
    else
    {
      uint64_t v33 = *(void *)v30;
      uint64_t v34 = *((void *)v30 + 1);
      sub_1DEB234F0();
      uint64_t v36 = v52;
      sub_1DF00BE64((uint64_t)&v30[*(int *)(v35 + 48)], v52, type metadata accessor for SearchFeedGapLocation);
      uint64_t v37 = v47;
      uint64_t v38 = v51;
      uint64_t v39 = sub_1DF00BC4C(v36, (uint64_t)&v51[*(int *)(v47 + 20)], type metadata accessor for SearchFeedGapLocation);
      uint64_t v54 = v21;
      *(void *)uint64_t v38 = v33;
      *((void *)v38 + 1) = v34;
      *(void *)&v38[*(int *)(v37 + 24)] = v48;
      MEMORY[0x1F4188790](v39);
      *(&v45 - 2) = v50;
      *(&v45 - 1) = v38;
      sub_1DFDEE090();
      sub_1DEAA29D0();
      uint64_t v40 = (void *)sub_1DFDFEE60();
      sub_1DFDF3EF0();
      sub_1DFDEDE10();
      swift_release();

      uint64_t v41 = (void *)sub_1DFDFEE60();
      sub_1DE94F204((uint64_t)v24, (uint64_t)v57);
      uint64_t v42 = swift_allocObject();
      sub_1DE942EC4(v57, v42 + 16);
      sub_1DFDEDE00();
      uint64_t v53 = v22;
      swift_release();

      swift_release();
      uint64_t v43 = (void *)sub_1DFDFEE60();
      sub_1DE94F204((uint64_t)v24, (uint64_t)v57);
      uint64_t v44 = swift_allocObject();
      sub_1DE942EC4(v57, v44 + 16);
      sub_1DFDEDE50();
      swift_release();
      swift_release();

      swift_release();
      sub_1DF00B0D8(v52, type metadata accessor for SearchFeedGapLocation);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v53);
      (*(void (**)(char *, char *))(v46 + 8))(v45, v54);
      return sub_1DF00B0D8((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for SearchExpandRequest);
    }
  }
}

uint64_t sub_1DF00957C(void *a1, uint64_t a2)
{
  (*(void (**)(void, void, void, void))(*(void *)(*(void *)a2 + 88) + 16))(*a1, a1[1], a1[2], *(void *)(*(void *)a2 + 80));
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC2B8];
  sub_1DF00B4E4(0, (unint64_t *)&qword_1EBAEBD10, MEMORY[0x1E4FAC2B8]);
  sub_1DF00B5D8(&qword_1EBAEBD08, (unint64_t *)&qword_1EBAEBD10, v2);
  uint64_t v3 = sub_1DFDF19C0();
  swift_release();
  return v3;
}

uint64_t sub_1DF0096A4(uint64_t a1, void *a2)
{
  if (qword_1EBAEA6C8 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DF00B1BC(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DFE0B750;
  sub_1DE925CE8(0, (unint64_t *)&unk_1EBAA8460);
  sub_1DFDFFB10();
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v5 = sub_1DEA08668();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0xE000000000000000;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  *(void *)(v3 + 96) = v4;
  *(void *)(v3 + 104) = v5;
  *(void *)(v3 + 72) = 0;
  *(void *)(v3 + 80) = 0xE000000000000000;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  return MEMORY[0x1E01E2E20](0, v6, v7);
}

uint64_t sub_1DF009884()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 152);
  *(unsigned char *)(v2 + 32) = 0;
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  swift_bridgeObjectRelease();
  (*(void (**)(void))(*(void *)(v1 + 88) + 32))(*(void *)(v1 + 80));
  uint64_t v3 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC2B8];
  sub_1DF00B4E4(0, (unint64_t *)&qword_1EBAEBD10, MEMORY[0x1E4FAC2B8]);
  sub_1DF00B5D8(&qword_1EBAEBD08, (unint64_t *)&qword_1EBAEBD10, v3);
  sub_1DFDF1A20();
  return swift_release();
}

uint64_t sub_1DF0099C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDF0DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - v8;
  v17[1] = v0[4];
  sub_1DFDF19F0();
  v17[2] = v17[3];
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC2D8];
  sub_1DF00B4E4(0, (unint64_t *)&qword_1EBAEBD78, MEMORY[0x1E4FAC2D8]);
  sub_1DF00B5D8(&qword_1EBAEBD70, (unint64_t *)&qword_1EBAEBD78, v10);
  sub_1DFDF2660();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4FABEB0], v3);
  char v11 = sub_1DFDF0D90();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  v12(v9, v3);
  swift_release();
  if (v11)
  {
    uint64_t v13 = MEMORY[0x1E01EFB70](v1 + 2);
    if (v13)
    {
      sub_1DF7310E0(v13);
      swift_unknownObjectRelease();
    }
  }
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = *(void *)(v2 + 80);
  *(void *)(v15 + 24) = *(void *)(v2 + 88);
  *(void *)(v15 + 32) = v14;
  *(unsigned char *)(v15 + 40) = v11 & 1;
  swift_retain();
  sub_1DFDF1A40();
  swift_release();
  return swift_release();
}

uint64_t sub_1DF009C74(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if ((a3 & 1) != 0 && (uint64_t v5 = MEMORY[0x1E01EFB70](result + 16)) != 0)
    {
      uint64_t v6 = v5;
      type metadata accessor for SearchInteractor();
      swift_retain();
      sub_1DF731310(v6);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DF009D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v82 = a4;
  LODWORD(v86) = a3;
  uint64_t v85 = a2;
  uint64_t v87 = a5;
  sub_1DEC88DC0(0, (unint64_t *)&qword_1EBAF30F0, (void (*)(uint64_t))type metadata accessor for TagModel, (void (*)(void))sub_1DEC88D58, (void (*)(void))sub_1DEC88D8C);
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v84 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v64 - v7;
  uint64_t v9 = sub_1DFDE9A20();
  uint64_t v79 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v78 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF98E0();
  uint64_t v75 = *(void *)(v11 - 8);
  uint64_t v76 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF00B318(0, &qword_1EBACBDD0, MEMORY[0x1E4F7DBA8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v74 = (char *)&v64 - v15;
  sub_1DF00B318(0, (unint64_t *)&unk_1EBAD2190, MEMORY[0x1E4F7D9B8], v13);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v71 = (char *)&v64 - v17;
  sub_1DEB0D9F8(0);
  uint64_t v19 = v18;
  uint64_t v66 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v69 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DFDE9A90();
  uint64_t v72 = *(void *)(v21 - 8);
  uint64_t v73 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v70 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF00B37C(0, &qword_1EAC22CC8, MEMORY[0x1E4FABFE0]);
  uint64_t v24 = v23;
  uint64_t v65 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v64 - v25;
  sub_1DEC88DC0(0, (unint64_t *)&qword_1EBABA2D0, (void (*)(uint64_t))type metadata accessor for HeadlineModel, (void (*)(void))sub_1DEC88E60, (void (*)(void))sub_1DEC88E94);
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  id v68 = (char *)&v64 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v64 - v32;
  uint64_t v34 = type metadata accessor for SearchModel(0);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v64 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = a1;
  sub_1DFDF0B50();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v39 = v83;
      uint64_t v38 = v84;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v8, v36, v84);
      sub_1DFDF9A80();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v38);
      uint64_t v40 = v87;
      uint64_t v41 = v85;
      *uint64_t v87 = v88;
      v40[1] = v41;
      *((unsigned char *)v40 + 16) = v86 & 1;
      uint64_t v42 = type metadata accessor for SearchRouteModel();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v40, 0, 1, v42);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v33, v36, v28);
      sub_1DFDF9A80();
      uint64_t v47 = *(void **)(v88 + 16);
      swift_unknownObjectRetain();
      swift_release();
      id v48 = objc_msgSend(v47, sel_contentType);
      swift_unknownObjectRelease();
      if (v48 == (id)1)
      {
        uint64_t v86 = *(void (**)(char *, uint64_t))(v29 + 8);
        v86(v33, v28);
        uint64_t v49 = v68;
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v68, v36, v28);
        (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v69, v67, v19);
        sub_1DFDF9A80();
        swift_unknownObjectRetain();
        swift_release();
        uint64_t v50 = sub_1DFDE9890();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v71, 1, 1, v50);
        uint64_t v51 = sub_1DFDE9C80();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v74, 1, 1, v51);
        (*(void (**)(char *, void, uint64_t))(v75 + 104))(v77, *MEMORY[0x1E4F803C8], v76);
        sub_1DE917808(&qword_1EBAEC6F0, (void (*)(uint64_t))type metadata accessor for SearchModel);
        uint64_t v52 = v70;
        sub_1DFDE9A80();
        uint64_t v53 = v78;
        sub_1DFDE9D90();
        uint64_t v54 = v87;
        sub_1DFDE9A00();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v80);
        (*(void (**)(char *, uint64_t))(v72 + 8))(v52, v73);
        v86(v49, v28);
        uint64_t v55 = type metadata accessor for SearchRouteModel();
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
      }
      else
      {
        uint64_t v88 = *(void *)(v81 + *(void *)(*(void *)v81 + 136));
        sub_1DF00B37C(0, (unint64_t *)&qword_1EBAEBF38, MEMORY[0x1E4FAC9A0]);
        uint64_t v56 = v29;
        sub_1DF00B470();
        sub_1DFDF3B20();
        uint64_t v57 = sub_1DECE5674();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v26, v24);
        uint64_t v58 = *(void (**)(char *, uint64_t))(v56 + 8);
        v58(v33, v28);
        sub_1DEC731AC();
        uint64_t v60 = v87;
        uint64_t v61 = (char *)v87 + *(int *)(v59 + 48);
        *uint64_t v87 = v57;
        uint64_t v62 = sub_1DFDE9720();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v61, v82, v62);
        sub_1DFDE8F10();
        swift_storeEnumTagMultiPayload();
        uint64_t v63 = type metadata accessor for SearchRouteModel();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v60, 0, 1, v63);
        return ((uint64_t (*)(char *, uint64_t))v58)(v36, v28);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DEB234F0();
    uint64_t v45 = (uint64_t)&v36[*(int *)(v44 + 48)];
    uint64_t v46 = type metadata accessor for SearchRouteModel();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v87, 1, 1, v46);
    return sub_1DF00B0D8(v45, type metadata accessor for SearchFeedGapLocation);
  }
}

uint64_t sub_1DF00A880@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v33 = type metadata accessor for SportsSearchFeedGroup();
  MEMORY[0x1F4188790](v33);
  uint64_t v34 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TopicsSearchFeedGroup();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ChannelsSearchFeedGroup();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ArticlesSearchFeedGroup();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SearchSectionDescriptor();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v35 = *a1;
  uint64_t v36 = v17;
  uint64_t v37 = a1[3];
  uint64_t v38 = v16;
  char v18 = *((unsigned char *)a1 + 32);
  sub_1DF00B4E4(0, (unint64_t *)&qword_1EBAEBC60, MEMORY[0x1E4FAC180]);
  sub_1DFDF14D0();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v20 = type metadata accessor for SearchModel;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1DF00BE64((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ChannelsSearchFeedGroup);
      sub_1DF00B138((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)&v40, (unint64_t *)&qword_1EAC218A0, (unint64_t *)&qword_1EAC205C8, (uint64_t)&protocol descriptor for StreamingTagResults);
      sub_1DF00B0D8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ChannelsSearchFeedGroup);
      if (v41) {
        goto LABEL_15;
      }
      goto LABEL_20;
    case 2:
      sub_1DF00BE64((uint64_t)v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TopicsSearchFeedGroup);
      sub_1DF00B138((uint64_t)&v6[*(int *)(v4 + 24)], (uint64_t)&v40, (unint64_t *)&qword_1EAC218A0, (unint64_t *)&qword_1EAC205C8, (uint64_t)&protocol descriptor for StreamingTagResults);
      sub_1DF00B0D8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TopicsSearchFeedGroup);
      if (!v41) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 3:
      uint64_t v22 = v34;
      sub_1DF00BE64((uint64_t)v15, v34, (uint64_t (*)(void))type metadata accessor for SportsSearchFeedGroup);
      sub_1DF00B138(v22 + *(int *)(v33 + 24), (uint64_t)&v40, (unint64_t *)&qword_1EAC218A0, (unint64_t *)&qword_1EAC205C8, (uint64_t)&protocol descriptor for StreamingTagResults);
      sub_1DF00B0D8(v22, (uint64_t (*)(void))type metadata accessor for SportsSearchFeedGroup);
      if (!v41) {
        goto LABEL_20;
      }
      sub_1DE942EC4(&v40, (uint64_t)v42);
      uint64_t v21 = v39;
      sub_1DE942EC4(v42, v39);
      char v23 = 3;
      goto LABEL_18;
    case 4:
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for TopResultSearchFeedGroup;
      goto LABEL_11;
    case 5:
LABEL_11:
      sub_1DF00B0D8((uint64_t)v15, v20);
      goto LABEL_22;
    case 6:
      sub_1DF00B294((uint64_t)v15, (uint64_t)&v40, (unint64_t *)&qword_1EAC34930, &qword_1EAC205D0, (uint64_t)&protocol descriptor for StreamingArticleResults);
      if (!v41) {
        goto LABEL_13;
      }
      goto LABEL_3;
    case 7:
      sub_1DF00B294((uint64_t)v15, (uint64_t)&v40, (unint64_t *)&qword_1EAC218A0, (unint64_t *)&qword_1EAC205C8, (uint64_t)&protocol descriptor for StreamingTagResults);
      if (!v41) {
        goto LABEL_20;
      }
LABEL_15:
      sub_1DE942EC4(&v40, (uint64_t)v42);
      uint64_t v21 = v39;
      sub_1DE942EC4(v42, v39);
      char v23 = 1;
      goto LABEL_18;
    case 8:
      sub_1DF00B294((uint64_t)v15, (uint64_t)&v40, (unint64_t *)&qword_1EAC218A0, (unint64_t *)&qword_1EAC205C8, (uint64_t)&protocol descriptor for StreamingTagResults);
      if (!v41)
      {
LABEL_20:
        uint64_t v24 = &qword_1EAC218A0;
        uint64_t v25 = (unint64_t *)&qword_1EAC205C8;
        uint64_t v26 = &protocol descriptor for StreamingTagResults;
        goto LABEL_21;
      }
LABEL_17:
      sub_1DE942EC4(&v40, (uint64_t)v42);
      uint64_t v21 = v39;
      sub_1DE942EC4(v42, v39);
      char v23 = 2;
LABEL_18:
      *(unsigned char *)(v21 + 40) = v23;
      goto LABEL_19;
    case 9:
      goto LABEL_22;
    default:
      sub_1DF00BE64((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ArticlesSearchFeedGroup);
      sub_1DF00B138((uint64_t)&v12[*(int *)(v10 + 24)], (uint64_t)&v40, (unint64_t *)&qword_1EAC34930, &qword_1EAC205D0, (uint64_t)&protocol descriptor for StreamingArticleResults);
      sub_1DF00B0D8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ArticlesSearchFeedGroup);
      if (v41)
      {
LABEL_3:
        sub_1DE942EC4(&v40, (uint64_t)v42);
        uint64_t v21 = v39;
        sub_1DE942EC4(v42, v39);
        *(unsigned char *)(v21 + 40) = 0;
LABEL_19:
        uint64_t v27 = v38;
        *(void *)(v21 + 48) = v35;
        *(void *)(v21 + 56) = v27;
        uint64_t v28 = v37;
        *(void *)(v21 + 64) = v36;
        *(void *)(v21 + 72) = v28;
        *(unsigned char *)(v21 + 80) = v18;
        uint64_t v29 = type metadata accessor for SearchRouteModel();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v21, 0, 1, v29);
        return swift_bridgeObjectRetain();
      }
      else
      {
LABEL_13:
        uint64_t v24 = &qword_1EAC34930;
        uint64_t v25 = &qword_1EAC205D0;
        uint64_t v26 = &protocol descriptor for StreamingArticleResults;
LABEL_21:
        sub_1DF00B224((uint64_t)&v40, (unint64_t *)v24, v25, (uint64_t)v26);
LABEL_22:
        uint64_t v31 = type metadata accessor for SearchRouteModel();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v39, 1, 1, v31);
      }
  }
}

uint64_t *sub_1DF00AEF0()
{
  uint64_t v1 = *v0;
  sub_1DEB1DDEC((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  swift_unknownObjectRelease();

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1DF00B024()
{
  sub_1DF00AEF0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchInteractor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DF00B0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_1DF009D38(a1, a2, a3 & 1, a4, a5);
}

uint64_t sub_1DF00B0B4@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1DF00A880(a1, a2);
}

uint64_t sub_1DF00B0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DF00BF64(a3, a4);
}

uint64_t sub_1DF00B0D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF00B138(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1DF00B1BC(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1DF00B1BC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1DE925CE8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1DF00B224(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1DF00B1BC(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1DF00B294(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1DF00B1BC(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1DF00B318(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DF00B37C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for SearchLayoutSectionDescriptor(255);
    v8[1] = type metadata accessor for SearchLayoutModel();
    _OWORD v8[2] = sub_1DE917808(&qword_1EBAF0F40, (void (*)(uint64_t))type metadata accessor for SearchLayoutSectionDescriptor);
    v8[3] = sub_1DE917808(&qword_1EBAEDE90, (void (*)(uint64_t))type metadata accessor for SearchLayoutModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DF00B470()
{
  unint64_t result = qword_1EBAEBF30;
  if (!qword_1EBAEBF30)
  {
    sub_1DF00B37C(255, (unint64_t *)&qword_1EBAEBF38, MEMORY[0x1E4FAC9A0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAEBF30);
  }
  return result;
}

void sub_1DF00B4E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for SearchSectionDescriptor();
    v8[1] = type metadata accessor for SearchModel(255);
    _OWORD v8[2] = sub_1DE917808(&qword_1EBAEFF78, (void (*)(uint64_t))type metadata accessor for SearchSectionDescriptor);
    v8[3] = sub_1DE917808(&qword_1EBAEC6F0, (void (*)(uint64_t))type metadata accessor for SearchModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DF00B5D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DF00B4E4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF00B61C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF00B654()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF00B68C(uint64_t a1)
{
  return sub_1DF009C74(a1, *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

void sub_1DF00B69C(uint64_t a1)
{
}

uint64_t sub_1DF00B6D0()
{
  return sub_1DF947FAC(*(uint64_t **)(v0 + 24));
}

uint64_t sub_1DF00B714(void *a1, uint64_t a2)
{
  return sub_1DF00957C(a1, a2);
}

uint64_t sub_1DF00B72C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DF00B764()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_1DFDF45E0();
}

uint64_t sub_1DF00B7C0(uint64_t a1)
{
  return sub_1DF0096A4(a1, (void *)(v1 + 16));
}

uint64_t sub_1DF00B7C8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  long long v2 = *(_OWORD *)(v1 + 16);
  v5[0] = *(_OWORD *)v1;
  v5[1] = v2;
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = (uint64_t (*)(uint64_t))off_1F3ABC7F0;
  type metadata accessor for SearchDataManager();
  return v3((uint64_t)v5);
}

uint64_t sub_1DF00B860()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF00B898(uint64_t a1, uint64_t a2)
{
  return sub_1DF00821C(a1, a2, (void *)(v2 + 16));
}

uint64_t sub_1DF00B8B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF00B8F0(uint64_t a1, uint64_t *a2)
{
  return sub_1DF0083CC(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_1DF00B90C()
{
  return swift_deallocObject();
}

uint64_t sub_1DF00B91C(uint64_t a1, uint64_t a2)
{
  return sub_1DF008768(a1, a2);
}

void sub_1DF00B93C()
{
  if (!qword_1EAC277C0)
  {
    sub_1DEADCDF0();
    unint64_t v0 = sub_1DFDFAC10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC277C0);
    }
  }
}

void sub_1DF00B998(uint64_t a1)
{
}

uint64_t sub_1DF00B9CC()
{
  uint64_t v1 = *(void *)(type metadata accessor for SearchPrewarmResult() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for SearchResults();
  uint64_t v4 = v2 + *(int *)(v3 + 24);
  uint64_t v5 = sub_1DFDEA1B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v2 + *(int *)(v3 + 32);
  uint64_t v7 = sub_1DFDEB4F0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF00BB90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SearchPrewarmResult() - 8);
  return sub_1DF00BC4C(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1, (uint64_t (*)(void))type metadata accessor for SearchPrewarmResult);
}

uint64_t sub_1DF00BC10()
{
  return sub_1DF9477B8(v0);
}

void sub_1DF00BC18(uint64_t a1)
{
}

uint64_t sub_1DF00BC4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF00BCB4()
{
  return sub_1DF947F7C(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1DF00BCD0()
{
  uint64_t v1 = (int *)(type metadata accessor for SearchResults() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[8];
  uint64_t v4 = sub_1DFDEA1B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v2 + v1[10];
  uint64_t v6 = sub_1DFDEB4F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return swift_deallocObject();
}

uint64_t sub_1DF00BE64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF00BECC(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SearchResults() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DF948540(a1, v1 + v4, *(double *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DF00BF64(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)v2 + 88) + 24))(a1, a2, *(void *)(*(void *)v2 + 80));
  uint64_t v3 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC2B8];
  sub_1DF00B4E4(0, (unint64_t *)&qword_1EBAEBD10, MEMORY[0x1E4FAC2B8]);
  sub_1DF00B5D8(&qword_1EBAEBD08, (unint64_t *)&qword_1EBAEBD10, v3);
  sub_1DFDF1A20();
  return swift_release();
}

double sub_1DF00C07C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (unsigned __int8 *)(v1 + 32);
    double result = 0.0;
    while (2)
    {
      int v6 = *v3++;
      switch(v6)
      {
        case 1:
        case 3:
        case 4:
        case 7:
        case 8:
          goto LABEL_5;
        case 5:
          double v5 = 33.0;
          goto LABEL_4;
        case 6:
          double v5 = 35.0;
          goto LABEL_4;
        default:
          if (*(unsigned char *)(v0 + 24)) {
            double v5 = 6.0;
          }
          else {
            double v5 = 2.0;
          }
LABEL_4:
          double result = result + v5;
LABEL_5:
          if (--v2) {
            continue;
          }
          return result;
      }
    }
  }
  return 0.0;
}

uint64_t sub_1DF00C128(uint64_t a1, uint64_t a2, int a3, char a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v12 = v11;
  int v49 = a3;
  double v48 = a11;
  uint64_t v22 = sub_1DFDF47E0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v26 = a4 & 1;
  uint64_t v27 = sub_1DFDF2AF0();
  id v28 = objc_msgSend((id)v27, sel_preferredContentSizeCategory);

  LOBYTE(v27) = sub_1DFDFF0C0();
  type metadata accessor for TagViewLayoutOptions.AccessoryOptions();
  uint64_t v29 = swift_allocObject();
  __asm
  {
    FMOV            V0.2D, #22.0
    FMOV            V1.2D, #30.0
  }
  *(_OWORD *)(v29 + 32) = _Q0;
  *(_OWORD *)(v29 + 48) = _Q1;
  *(_OWORD *)(v29 + 64) = xmmword_1DFE37440;
  *(void *)(v29 + 80) = 0x4041800000000000;
  *(void *)(v29 + 16) = a2;
  *(unsigned char *)(v29 + 24) = v27 & 1;
  *(void *)(v12 + 72) = v29;
  uint64_t v36 = v12 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_layoutOptions;
  uint64_t v37 = sub_1DFDF2BF0();
  uint64_t v38 = *(void *)(v37 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v36, a1, v37);
  sub_1DFDF2BE0();
  double v40 = v39;
  sub_1DFDF2A70();
  sub_1DFDF47D0();
  double v42 = v41;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v23 + 8);
  v43(v25, v22);
  double v44 = v40 - v42;
  sub_1DFDF2A70();
  sub_1DFDF47D0();
  double v46 = v45;
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(a1, v37);
  v43(v25, v22);
  *(double *)(v12 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width) = v44 - v46;
  *(double *)(v12 + 16) = a5;
  *(double *)(v12 + 24) = a6;
  *(double *)(v12 + 32) = a7;
  *(double *)(v12 + 40) = a8;
  *(double *)(v12 + 48) = a9;
  *(double *)(v12 + 56) = a10;
  *(double *)(v12 + 64) = v48;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) = v49;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context) = v26;
  return v12;
}

uint64_t sub_1DF00C3DC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF00C414()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_layoutOptions;
  uint64_t v2 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DF00C4BC()
{
  return type metadata accessor for TagViewLayoutOptions();
}

uint64_t type metadata accessor for TagViewLayoutOptions()
{
  uint64_t result = qword_1EBAEEB78;
  if (!qword_1EBAEEB78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF00C510()
{
  uint64_t result = sub_1DFDF2BF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TagViewLayoutOptions.AccessoryOptions()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for TagViewLayoutOptions.AccessoryOptions.Item(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF00C6C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagViewLayoutOptions.AccessoryOptions.Item()
{
  return &type metadata for TagViewLayoutOptions.AccessoryOptions.Item;
}

unint64_t sub_1DF00C704()
{
  unint64_t result = qword_1EAC277C8;
  if (!qword_1EAC277C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC277C8);
  }
  return result;
}

uint64_t sub_1DF00C758()
{
  unint64_t v1 = (int *)type metadata accessor for CuratedTagFeedGroupConfigData();
  if ((*(unsigned char *)(v0 + v1[7]) & 1) == 0)
  {
    if (*(unsigned char *)(v0 + v1[8]))
    {
      if (*(unsigned char *)(v0 + v1[9]))
      {
        if (*(unsigned char *)(v0 + v1[10]))
        {
          if (*(unsigned char *)(v0 + v1[11]))
          {
            if (*(unsigned char *)(v0 + v1[12]))
            {
              uint64_t v2 = 33;
              if (*(unsigned char *)(v0 + v1[14])) {
                return v2;
              }
              return v2 | 2;
            }
            uint64_t v2 = 33;
            goto LABEL_93;
          }
          uint64_t v2 = 16777249;
          if (*(unsigned char *)(v0 + v1[12])) {
            goto LABEL_94;
          }
        }
        else if (*(unsigned char *)(v0 + v1[11]))
        {
          uint64_t v2 = 8388641;
          if (*(unsigned char *)(v0 + v1[12])) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v2 = 25165857;
          if (*(unsigned char *)(v0 + v1[12])) {
            goto LABEL_94;
          }
        }
      }
      else if (*(unsigned char *)(v0 + v1[10]))
      {
        if (*(unsigned char *)(v0 + v1[11]))
        {
          uint64_t v2 = 2097185;
          if (*(unsigned char *)(v0 + v1[12])) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v2 = 18874401;
          if (*(unsigned char *)(v0 + v1[12])) {
            goto LABEL_94;
          }
        }
      }
      else if (*(unsigned char *)(v0 + v1[11]))
      {
        uint64_t v2 = 10485793;
        if (*(unsigned char *)(v0 + v1[12])) {
          goto LABEL_94;
        }
      }
      else
      {
        uint64_t v2 = 27263009;
        if (*(unsigned char *)(v0 + v1[12])) {
          goto LABEL_94;
        }
      }
LABEL_93:
      v2 |= 0x800uLL;
      goto LABEL_94;
    }
    if (*(unsigned char *)(v0 + v1[9]))
    {
      if (*(unsigned char *)(v0 + v1[10]))
      {
        if (*(unsigned char *)(v0 + v1[11]))
        {
          uint64_t v3 = 1048577;
LABEL_59:
          if (*(unsigned char *)(v0 + v1[12]) == 1)
          {
            uint64_t v2 = v3 + 32;
            if (*(unsigned char *)(v0 + v1[14])) {
              return v2;
            }
            return v2 | 2;
          }
          uint64_t v2 = v3 | 0x20;
          goto LABEL_93;
        }
        uint64_t v6 = 17825793;
      }
      else
      {
        if (*(unsigned char *)(v0 + v1[11]))
        {
          uint64_t v3 = 9437185;
          goto LABEL_59;
        }
        uint64_t v6 = 26214401;
      }
    }
    else if (*(unsigned char *)(v0 + v1[10]))
    {
      if (*(unsigned char *)(v0 + v1[11]))
      {
        uint64_t v3 = 3145729;
        goto LABEL_59;
      }
      uint64_t v6 = 19922945;
    }
    else
    {
      if (*(unsigned char *)(v0 + v1[11]))
      {
        uint64_t v3 = 11534337;
        goto LABEL_59;
      }
      uint64_t v6 = 28311553;
    }
    uint64_t v2 = v6 | 0x20;
    goto LABEL_92;
  }
  if (!*(unsigned char *)(v0 + v1[8]))
  {
    if (*(unsigned char *)(v0 + v1[9]))
    {
      if (*(unsigned char *)(v0 + v1[10]))
      {
        if (*(unsigned char *)(v0 + v1[11]))
        {
          uint64_t v2 = 1048577;
          if (*(unsigned char *)(v0 + v1[12])) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v2 = 17825793;
          if (*(unsigned char *)(v0 + v1[12])) {
            goto LABEL_94;
          }
        }
      }
      else if (*(unsigned char *)(v0 + v1[11]))
      {
        uint64_t v2 = 9437185;
        if (*(unsigned char *)(v0 + v1[12])) {
          goto LABEL_94;
        }
      }
      else
      {
        uint64_t v2 = 26214401;
        if (*(unsigned char *)(v0 + v1[12])) {
          goto LABEL_94;
        }
      }
    }
    else if (*(unsigned char *)(v0 + v1[10]))
    {
      if (*(unsigned char *)(v0 + v1[11]))
      {
        uint64_t v2 = 3145729;
        if (*(unsigned char *)(v0 + v1[12])) {
          goto LABEL_94;
        }
      }
      else
      {
        uint64_t v2 = 19922945;
        if (*(unsigned char *)(v0 + v1[12])) {
          goto LABEL_94;
        }
      }
    }
    else if (*(unsigned char *)(v0 + v1[11]))
    {
      uint64_t v2 = 11534337;
      if (*(unsigned char *)(v0 + v1[12])) {
        goto LABEL_94;
      }
    }
    else
    {
      uint64_t v2 = 28311553;
      if (*(unsigned char *)(v0 + v1[12])) {
        goto LABEL_94;
      }
    }
    goto LABEL_93;
  }
  if (!*(unsigned char *)(v0 + v1[9]))
  {
    if (*(unsigned char *)(v0 + v1[10]))
    {
      if (*(unsigned char *)(v0 + v1[11])) {
        uint64_t v4 = 1048577;
      }
      else {
        uint64_t v4 = 17825793;
      }
    }
    else if (*(unsigned char *)(v0 + v1[11]))
    {
      uint64_t v4 = 9437185;
    }
    else
    {
      uint64_t v4 = 26214401;
    }
    uint64_t v2 = v4 + 0x100000;
    if (*(unsigned char *)(v0 + v1[12])) {
      goto LABEL_94;
    }
    goto LABEL_93;
  }
  if (*(unsigned char *)(v0 + v1[10]))
  {
    if (*(unsigned char *)(v0 + v1[11]))
    {
      if (*(unsigned char *)(v0 + v1[12]) == 1)
      {
        uint64_t v2 = 1;
        if (*(unsigned char *)(v0 + v1[14])) {
          return v2;
        }
        return v2 | 2;
      }
      uint64_t v2 = 1;
      goto LABEL_93;
    }
    uint64_t v2 = 16777217;
LABEL_92:
    if (*(unsigned char *)(v0 + v1[12])) {
      goto LABEL_94;
    }
    goto LABEL_93;
  }
  if (*(unsigned char *)(v0 + v1[11])) {
    uint64_t v5 = 3145729;
  }
  else {
    uint64_t v5 = 19922945;
  }
  uint64_t v2 = v5 + 5242880;
  if (!*(unsigned char *)(v0 + v1[12])) {
    goto LABEL_93;
  }
LABEL_94:
  if ((*(unsigned char *)(v0 + v1[14]) & 1) == 0) {
    return v2 | 2;
  }
  return v2;
}

unint64_t sub_1DF00CA80(char a1)
{
  unint64_t result = 0x5464657461727563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD000000000000026;
      break;
    case 4:
      unint64_t result = 0x54676E696B636162;
      break;
    case 5:
      unint64_t result = 0x43676E696B636162;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF00CB74@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, unsigned __int8 a6@<W5>, unsigned __int8 a7@<W6>, unsigned __int8 a8@<W7>, void *a9@<X8>, char a10, char a11, char a12, char a13, char a14, char a15)
{
  int v30 = a8;
  int v28 = a7;
  int v20 = a6;
  int v21 = a5;
  uint64_t v22 = (int *)type metadata accessor for CuratedTagFeedGroupConfigData();
  uint64_t v23 = (char *)a9 + v22[5];
  uint64_t v24 = sub_1DFDFAA20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a1, v24);
  *((unsigned char *)a9 + v22[6]) = a2;
  *a9 = a3;
  a9[1] = a4;
  *((unsigned char *)a9 + v22[7]) = (v21 == 2) | a5 & 1;
  *((unsigned char *)a9 + v22[8]) = (v20 == 2) | a6 & 1;
  *((unsigned char *)a9 + v22[9]) = (v28 == 2) | a7 & 1;
  *((unsigned char *)a9 + v22[10]) = (v30 == 2) | a8 & 1;
  *((unsigned char *)a9 + v22[11]) = (a10 == 2) | a10 & 1;
  *((unsigned char *)a9 + v22[12]) = a11 & 1;
  *((unsigned char *)a9 + v22[13]) = a12 & 1;
  *((unsigned char *)a9 + v22[14]) = (a13 == 2) | a13 & 1;
  *((unsigned char *)a9 + v22[15]) = (a14 == 2) | a14 & 1;
  *((unsigned char *)a9 + v22[16]) = a15 & 1;
  return result;
}

uint64_t sub_1DF00CD70@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v32 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF00E368(0, &qword_1EBAEAA58, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF00E314();
  sub_1DFE00190();
  if (v2)
  {
    uint64_t v18 = (uint64_t)a1;
  }
  else
  {
    uint64_t v11 = v8;
    int v30 = a1;
    unsigned __int8 v45 = 1;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    uint64_t v12 = v33;
    sub_1DFDFFD90();
    unsigned __int8 v44 = 2;
    sub_1DEEDEF30();
    sub_1DFDFFCD0();
    int v13 = v45;
    unsigned __int8 v44 = 0;
    uint64_t v14 = sub_1DFDFFD50();
    unsigned __int8 v43 = 3;
    uint64_t v16 = v11;
    LODWORD(v32) = v13;
    uint64_t v28 = v14;
    uint64_t v29 = v17;
    sub_1DFDFFCD0();
    int v27 = v44;
    unsigned __int8 v42 = 4;
    sub_1DFDFFCD0();
    int v26 = v43;
    unsigned __int8 v41 = 5;
    sub_1DFDFFCD0();
    int v25 = v42;
    unsigned __int8 v40 = 6;
    sub_1DFDFFCD0();
    int v24 = v41;
    unsigned __int8 v39 = 7;
    sub_1DFDFFCD0();
    int v23 = v40;
    unsigned __int8 v38 = 8;
    sub_1DFDFFCD0();
    int v22 = v39;
    unsigned __int8 v37 = 9;
    sub_1DFDFFCD0();
    int v21 = v38;
    char v36 = 10;
    sub_1DFDFFCD0();
    int v20 = v37;
    char v35 = 11;
    sub_1DFDFFCD0();
    LOBYTE(v11) = v36;
    char v34 = 12;
    sub_1DFDFFCD0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v12);
    sub_1DF00CB74((uint64_t)v6, v32, v28, v29, v27, v26, v25, v24, v31, v23, v22, v21, v20, v11, v35);
    uint64_t v18 = (uint64_t)v30;
  }
  return __swift_destroy_boxed_opaque_existential_1(v18);
}

unint64_t sub_1DF00D240(char a1)
{
  unint64_t result = 0x65707974627573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
    case 7:
    case 8:
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 10:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    case 12:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF00D3B4(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF00E368(0, &qword_1EAC277D8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF00E314();
  sub_1DFE001A0();
  v12[15] = 0;
  sub_1DFDFFE40();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CuratedTagFeedGroupConfigData();
    v12[14] = 1;
    sub_1DFDFAA20();
    sub_1DE9CB07C(&qword_1EBABA3B0);
    sub_1DFDFFE80();
    v12[13] = *(unsigned char *)(v3 + *(int *)(v10 + 24));
    v12[12] = 2;
    sub_1DEEDEFE8();
    sub_1DFDFFE30();
    v12[11] = 3;
    sub_1DFDFFE50();
    v12[10] = 4;
    sub_1DFDFFE50();
    v12[9] = 5;
    sub_1DFDFFE50();
    v12[8] = 6;
    sub_1DFDFFE50();
    v12[7] = 7;
    sub_1DFDFFE50();
    v12[6] = 8;
    sub_1DFDFFE50();
    v12[5] = 9;
    sub_1DFDFFE50();
    v12[4] = 10;
    sub_1DFDFFE50();
    v12[3] = 11;
    sub_1DFDFFE50();
    void v12[2] = 12;
    sub_1DFDFFE50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DF00D76C()
{
  return sub_1DF00D240(*v0);
}

uint64_t sub_1DF00D774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF00ED6C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DF00D79C(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1DF00D7A8(uint64_t a1)
{
  unint64_t v2 = sub_1DF00E314();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF00D7E4(uint64_t a1)
{
  unint64_t v2 = sub_1DF00E314();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF00D820@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DF00CD70(a1, a2);
}

uint64_t sub_1DF00D838(void *a1)
{
  return sub_1DF00D3B4(a1);
}

uint64_t sub_1DF00D854(unsigned __int8 *a1, char *a2)
{
  return sub_1DF2A0F44(*a1, *a2);
}

uint64_t sub_1DF00D860()
{
  return sub_1DED5E368();
}

uint64_t sub_1DF00D86C()
{
  return sub_1DF3DCE60();
}

uint64_t sub_1DF00D874()
{
  return sub_1DED5E368();
}

uint64_t sub_1DF00D87C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF00F214();
  *a1 = result;
  return result;
}

unint64_t sub_1DF00D8AC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DF00CA80(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *storeEnumTagSinglePayload for CuratedTagFeedGroupContentTagPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF00D9A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CuratedTagFeedGroupContentTagPolicy()
{
  return &type metadata for CuratedTagFeedGroupContentTagPolicy;
}

void *sub_1DF00D9DC(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    void *v4 = *a2;
    unsigned int v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDFAA20();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)v4 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v16 = a3[13];
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[15];
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
    *((unsigned char *)v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  }
  return v4;
}

void *sub_1DF00DB44(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDFAA20();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  uint64_t v13 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v14 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  uint64_t v15 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v16 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  return a1;
}

void *sub_1DF00DC5C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDFAA20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  return a1;
}

_OWORD *sub_1DF00DD84(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDFAA20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  uint64_t v13 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v14 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  return a1;
}

void *sub_1DF00DE80(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDFAA20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  uint64_t v13 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v14 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  uint64_t v15 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  return a1;
}

uint64_t sub_1DF00DF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF00DF98);
}

uint64_t sub_1DF00DF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDFAA20();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF00E048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF00E05C);
}

uint64_t sub_1DF00E05C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDFAA20();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CuratedTagFeedGroupConfigData()
{
  uint64_t result = qword_1EBADF7D8;
  if (!qword_1EBADF7D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF00E150()
{
  uint64_t result = sub_1DFDFAA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1DF00E210()
{
  unint64_t result = qword_1EAC277D0;
  if (!qword_1EAC277D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC277D0);
  }
  return result;
}

uint64_t sub_1DF00E264()
{
  return sub_1DFDFE1D0();
}

uint64_t sub_1DF00E2C4()
{
  return sub_1DFDFE180();
}

unint64_t sub_1DF00E314()
{
  unint64_t result = qword_1EBADF7A8;
  if (!qword_1EBADF7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADF7A8);
  }
  return result;
}

void sub_1DF00E368(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF00E314();
    unint64_t v7 = a3(a1, &type metadata for CuratedTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DF00E3CC()
{
  unint64_t result = qword_1EBAD3700;
  if (!qword_1EBAD3700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD3700);
  }
  return result;
}

uint64_t sub_1DF00E420(void *a1, void *a2)
{
  uint64_t v113 = (int *)type metadata accessor for CuratedTagFeedGroupConfigData();
  uint64_t v4 = MEMORY[0x1F4188790](v113);
  uint64_t v112 = (uint64_t)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v111 = (char *)&v98 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v110 = (char *)&v98 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v109 = (char *)&v98 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  id v108 = (char *)&v98 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  id v107 = (char *)&v98 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v106 = (char *)&v98 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v105 = (uint64_t)&v98 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v104 = (uint64_t)&v98 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v103 = (uint64_t)&v98 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v102 = (uint64_t)&v98 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v101 = (uint64_t)&v98 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v100 = (uint64_t)&v98 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v99 = (uint64_t)&v98 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v98 = (uint64_t)&v98 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  char v36 = (char *)&v98 - v35;
  uint64_t v37 = MEMORY[0x1F4188790](v34);
  unsigned __int8 v39 = (char *)&v98 - v38;
  uint64_t v40 = MEMORY[0x1F4188790](v37);
  unsigned __int8 v42 = (char *)&v98 - v41;
  uint64_t v43 = MEMORY[0x1F4188790](v40);
  unsigned __int8 v45 = (char *)&v98 - v44;
  uint64_t v46 = MEMORY[0x1F4188790](v43);
  double v48 = (char *)&v98 - v47;
  uint64_t v49 = MEMORY[0x1F4188790](v46);
  uint64_t v51 = (char *)&v98 - v50;
  MEMORY[0x1F4188790](v49);
  uint64_t v53 = (char *)&v98 - v52;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1DF00F260((uint64_t)a1, (uint64_t)&v98 - v52);
    sub_1DF00F260((uint64_t)a2, (uint64_t)v51);
  }
  else
  {
    char v54 = sub_1DFDFFF50();
    sub_1DF00F260((uint64_t)a1, (uint64_t)v53);
    sub_1DF00F260((uint64_t)a2, (uint64_t)v51);
    if ((v54 & 1) == 0) {
      goto LABEL_9;
    }
  }
  uint64_t v55 = v113[6];
  int v56 = v53[v55];
  int v57 = v51[v55];
  if (v56 == 7)
  {
    sub_1DECCE19C((uint64_t)v51);
    sub_1DECCE19C((uint64_t)v53);
    if (v57 == 7)
    {
      sub_1DF00F260((uint64_t)a1, (uint64_t)v48);
      sub_1DF00F260((uint64_t)a2, (uint64_t)v45);
      uint64_t v58 = (uint64_t)v106;
      goto LABEL_23;
    }
    goto LABEL_10;
  }
  if (v57 == 7)
  {
LABEL_9:
    sub_1DECCE19C((uint64_t)v51);
    sub_1DECCE19C((uint64_t)v53);
LABEL_10:
    sub_1DF00F260((uint64_t)a1, (uint64_t)v48);
    sub_1DF00F260((uint64_t)a2, (uint64_t)v45);
    uint64_t v58 = (uint64_t)v106;
LABEL_11:
    sub_1DECCE19C((uint64_t)v45);
    sub_1DECCE19C((uint64_t)v48);
    sub_1DF00F260((uint64_t)a1, (uint64_t)v42);
    sub_1DF00F260((uint64_t)a2, (uint64_t)v39);
LABEL_12:
    sub_1DECCE19C((uint64_t)v39);
    sub_1DECCE19C((uint64_t)v42);
    sub_1DF00F260((uint64_t)a1, (uint64_t)v36);
    uint64_t v59 = v98;
    sub_1DF00F260((uint64_t)a2, v98);
    uint64_t v61 = (uint64_t)v108;
    uint64_t v60 = (uint64_t)v109;
    uint64_t v62 = (uint64_t)v107;
LABEL_13:
    sub_1DECCE19C(v59);
    sub_1DECCE19C((uint64_t)v36);
    uint64_t v63 = v99;
    sub_1DF00F260((uint64_t)a1, v99);
    uint64_t v64 = v100;
    sub_1DF00F260((uint64_t)a2, v100);
    uint64_t v66 = (uint64_t)v110;
    uint64_t v65 = (uint64_t)v111;
LABEL_14:
    sub_1DECCE19C(v64);
    sub_1DECCE19C(v63);
    uint64_t v67 = v101;
    sub_1DF00F260((uint64_t)a1, v101);
    uint64_t v68 = v102;
    sub_1DF00F260((uint64_t)a2, v102);
LABEL_15:
    sub_1DECCE19C(v68);
    sub_1DECCE19C(v67);
    uint64_t v69 = v103;
    sub_1DF00F260((uint64_t)a1, v103);
    uint64_t v70 = v104;
    sub_1DF00F260((uint64_t)a2, v104);
LABEL_16:
    sub_1DECCE19C(v70);
    sub_1DECCE19C(v69);
    uint64_t v71 = v105;
    sub_1DF00F260((uint64_t)a1, v105);
    sub_1DF00F260((uint64_t)a2, v58);
LABEL_17:
    sub_1DECCE19C(v58);
    sub_1DECCE19C(v71);
    sub_1DF00F260((uint64_t)a1, v62);
    sub_1DF00F260((uint64_t)a2, v61);
LABEL_18:
    sub_1DECCE19C(v61);
    sub_1DECCE19C(v62);
    sub_1DF00F260((uint64_t)a1, v60);
    sub_1DF00F260((uint64_t)a2, v66);
LABEL_19:
    sub_1DECCE19C(v66);
    sub_1DECCE19C(v60);
    sub_1DF00F260((uint64_t)a1, v65);
    uint64_t v72 = v112;
    sub_1DF00F260((uint64_t)a2, v112);
    goto LABEL_20;
  }
  char v75 = sub_1DF2A0F44(v56, v51[v55]);
  sub_1DECCE19C((uint64_t)v51);
  sub_1DECCE19C((uint64_t)v53);
  sub_1DF00F260((uint64_t)a1, (uint64_t)v48);
  sub_1DF00F260((uint64_t)a2, (uint64_t)v45);
  uint64_t v58 = (uint64_t)v106;
  if ((v75 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_23:
  uint64_t v76 = v113;
  int v77 = v48[v113[7]];
  sub_1DECCE19C((uint64_t)v48);
  int v78 = v45[v76[7]];
  sub_1DECCE19C((uint64_t)v45);
  sub_1DF00F260((uint64_t)a1, (uint64_t)v42);
  sub_1DF00F260((uint64_t)a2, (uint64_t)v39);
  if (v77 != v78) {
    goto LABEL_12;
  }
  int v79 = v42[v76[8]];
  sub_1DECCE19C((uint64_t)v42);
  int v80 = v39[v76[8]];
  sub_1DECCE19C((uint64_t)v39);
  sub_1DF00F260((uint64_t)a1, (uint64_t)v36);
  uint64_t v59 = v98;
  sub_1DF00F260((uint64_t)a2, v98);
  BOOL v81 = v79 == v80;
  uint64_t v61 = (uint64_t)v108;
  uint64_t v60 = (uint64_t)v109;
  uint64_t v82 = v76;
  uint64_t v62 = (uint64_t)v107;
  if (!v81) {
    goto LABEL_13;
  }
  uint64_t v83 = v59;
  int v84 = v36[v82[9]];
  sub_1DECCE19C((uint64_t)v36);
  int v85 = *(unsigned __int8 *)(v83 + v82[9]);
  sub_1DECCE19C(v83);
  uint64_t v86 = v99;
  sub_1DF00F260((uint64_t)a1, v99);
  uint64_t v87 = v100;
  sub_1DF00F260((uint64_t)a2, v100);
  BOOL v81 = v84 == v85;
  uint64_t v63 = v86;
  uint64_t v64 = v87;
  uint64_t v66 = (uint64_t)v110;
  uint64_t v65 = (uint64_t)v111;
  if (!v81) {
    goto LABEL_14;
  }
  LODWORD(v106) = *(unsigned __int8 *)(v63 + v113[10]);
  sub_1DECCE19C(v63);
  LODWORD(v99) = *(unsigned __int8 *)(v64 + v113[10]);
  sub_1DECCE19C(v64);
  uint64_t v67 = v101;
  sub_1DF00F260((uint64_t)a1, v101);
  uint64_t v68 = v102;
  sub_1DF00F260((uint64_t)a2, v102);
  if (v106 != v99) {
    goto LABEL_15;
  }
  LODWORD(v106) = *(unsigned __int8 *)(v67 + v113[11]);
  sub_1DECCE19C(v67);
  LODWORD(v101) = *(unsigned __int8 *)(v68 + v113[11]);
  sub_1DECCE19C(v68);
  uint64_t v69 = v103;
  sub_1DF00F260((uint64_t)a1, v103);
  uint64_t v70 = v104;
  sub_1DF00F260((uint64_t)a2, v104);
  if (v106 != v101) {
    goto LABEL_16;
  }
  LODWORD(v106) = *(unsigned __int8 *)(v69 + v113[12]);
  sub_1DECCE19C(v69);
  int v88 = *(unsigned __int8 *)(v70 + v113[12]);
  sub_1DECCE19C(v70);
  uint64_t v71 = v105;
  sub_1DF00F260((uint64_t)a1, v105);
  sub_1DF00F260((uint64_t)a2, v58);
  if (v106 != v88) {
    goto LABEL_17;
  }
  uint64_t v89 = v113;
  LODWORD(v106) = *(unsigned __int8 *)(v71 + v113[13]);
  sub_1DECCE19C(v71);
  int v90 = *(unsigned __int8 *)(v58 + v89[13]);
  sub_1DECCE19C(v58);
  sub_1DF00F260((uint64_t)a1, v62);
  sub_1DF00F260((uint64_t)a2, v61);
  if (v106 != v90) {
    goto LABEL_18;
  }
  uint64_t v91 = v113;
  int v92 = *(unsigned __int8 *)(v62 + v113[14]);
  sub_1DECCE19C(v62);
  int v93 = *(unsigned __int8 *)(v61 + v91[14]);
  sub_1DECCE19C(v61);
  sub_1DF00F260((uint64_t)a1, v60);
  sub_1DF00F260((uint64_t)a2, v66);
  if (v92 != v93) {
    goto LABEL_19;
  }
  int v94 = *(unsigned __int8 *)(v60 + v91[15]);
  sub_1DECCE19C(v60);
  int v95 = *(unsigned __int8 *)(v66 + v91[15]);
  sub_1DECCE19C(v66);
  sub_1DF00F260((uint64_t)a1, v65);
  uint64_t v72 = v112;
  sub_1DF00F260((uint64_t)a2, v112);
  if (v94 == v95)
  {
    char v96 = *(unsigned char *)(v65 + v91[16]);
    sub_1DECCE19C(v65);
    char v97 = *(unsigned char *)(v72 + v91[16]);
    sub_1DECCE19C(v72);
    char v73 = v96 ^ v97 ^ 1;
    return v73 & 1;
  }
LABEL_20:
  sub_1DECCE19C(v72);
  sub_1DECCE19C(v65);
  char v73 = 0;
  return v73 & 1;
}

uint64_t sub_1DF00ED6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65707974627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFED4550 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DFEC7320 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEC7340 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEC7360 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFEC7380 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFEC73A0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFEC73C0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFEC73E0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DFEBB510 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DFEDAD70 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DFEDAD90)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_1DF00F214()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DF00F260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CuratedTagFeedGroupConfigData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for CuratedTagFeedGroupConfigData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CuratedTagFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF00F420);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CuratedTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for CuratedTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF00F45C()
{
  unint64_t result = qword_1EAC277E0;
  if (!qword_1EAC277E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC277E0);
  }
  return result;
}

unint64_t sub_1DF00F4B4()
{
  unint64_t result = qword_1EBADF7B8;
  if (!qword_1EBADF7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADF7B8);
  }
  return result;
}

unint64_t sub_1DF00F50C()
{
  unint64_t result = qword_1EBADF7B0;
  if (!qword_1EBADF7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADF7B0);
  }
  return result;
}

uint64_t sub_1DF00F560(char a1)
{
  uint64_t v2 = sub_1DFDF7DF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF00FB90();
  MEMORY[0x1F4188790](v6 - 8);
  int v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDF7DE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDF98F0();
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(char *, void))(v14 + 104))(v16, *MEMORY[0x1E4F80418]);
    if (a1 == 1) {
      uint64_t v17 = (unsigned int *)MEMORY[0x1E4F7F6D0];
    }
    else {
      uint64_t v17 = (unsigned int *)MEMORY[0x1E4F7F6D8];
    }
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *v17, v9);
    uint64_t v21 = sub_1DFDF7E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
  }
  else
  {
    (*(void (**)(char *, void))(v14 + 104))(v16, *MEMORY[0x1E4F80410]);
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F7F6D0], v9);
    uint64_t v18 = *MEMORY[0x1E4F7F700];
    uint64_t v19 = sub_1DFDF7E10();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v8, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F7F6F0], v2);
  return sub_1DFDF7E20();
}

unint64_t sub_1DF00F920()
{
  unint64_t result = qword_1EBAC3910;
  if (!qword_1EBAC3910)
  {
    type metadata accessor for AudioFeedServiceContext();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC3910);
  }
  return result;
}

uint64_t sub_1DF00F978@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = sub_1DFDE7630();
  uint64_t v4 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDF7E30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - v12;
  LODWORD(a1) = *a1;
  sub_1DF00F560((char)a1);
  BOOL v14 = a1 != 1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_1DFDE7620();
  uint64_t v15 = sub_1DFDE7610();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 24) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a2 + 16) = v14;
  uint64_t v18 = type metadata accessor for AudioFeedServiceContext();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2 + *(int *)(v18 + 28), v11, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

void sub_1DF00FB90()
{
  if (!qword_1EBAD1610)
  {
    sub_1DFDF7E10();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAD1610);
    }
  }
}

uint64_t sub_1DF00FBE8()
{
  uint64_t v0 = sub_1DFDF6BE0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - v5;
  if (qword_1EBAC0778 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  sub_1DFDF6BC0();
  MEMORY[0x1E01E5440](v4, 5.0);
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  uint64_t v8 = sub_1DFDEDCA0();
  v7(v6, v0);
  return v8;
}

void sub_1DF00FD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE919914(0, &qword_1EAC27810);
  sub_1DFDEE090();
  *(void *)(swift_allocObject() + 16) = v3;
  id v6 = v3;
  uint64_t v7 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  swift_retain();
  uint64_t v9 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE00();
  swift_release();
  swift_release();

  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  swift_retain();
  uint64_t v11 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE50();
  swift_release();
  swift_release();
  swift_release();
}

void sub_1DF00FF4C(void *a1)
{
  if (qword_1EBAC0778 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(a1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
    sub_1DEA6FDEC(&v9, &v10);
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAC50);
    swift_dynamicCast();
    sub_1DEC72B48();
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
    uint64_t v4 = (void *)sub_1DFDFEE60();
    *(void *)(swift_allocObject() + 16) = v8;
    sub_1DE919914(0, &qword_1EAC27810);
    id v5 = v8;
    sub_1DFDEDE40();

    swift_release();
    *(void *)(swift_allocObject() + 16) = v5;
    id v6 = v5;
    uint64_t v7 = (void *)sub_1DFDEDCE0();
    sub_1DFDEDED0();

    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DF0101C0(void **a1, void *a2)
{
  id v3 = *a1;
  sub_1DFDEE090();
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t v4[2] = a2;
  v4[3] = v3;
  v4[4] = 20;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1DF010928;
  *(void *)(v5 + 24) = v4;
  id v6 = a2;
  id v7 = v3;
  uint64_t v8 = (void *)sub_1DFDEDCE0();
  uint64_t v9 = sub_1DFDEDDF0();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_1DF0102E0(void *a1, uint64_t a2)
{
  if (a2)
  {
    MEMORY[0x1F4188790](a1);
    sub_1DFDEE090();
    uint64_t v5 = (void *)swift_allocObject();
    _OWORD v5[2] = v2;
    v5[3] = a1;
    v5[4] = a2;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1DF010928;
    *(void *)(v6 + 24) = v5;
    id v7 = v2;
    id v8 = a1;
    uint64_t v9 = (void *)sub_1DFDEDCE0();
    uint64_t v10 = sub_1DFDEDDF0();
    swift_release();
    swift_release();

    return v10;
  }
  else
  {
    if (qword_1EBAC0778 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    sub_1DEAE8198();
    swift_allocObject();
    return sub_1DFDEDE90();
  }
}

uint64_t sub_1DF010498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_retain();
  sub_1DFDECA10();
  return swift_release();
}

void sub_1DF010518(uint64_t a1, void (*a2)(id))
{
  sub_1DEA07544();
  sub_1DFDFFB10();
  id v3 = objc_allocWithZone(MEMORY[0x1E4FAB4B8]);
  uint64_t v4 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithMessage_, v4);

  a2(v5);
}

uint64_t sub_1DF010680()
{
  sub_1DFDEE090();
  uint64_t v0 = (void *)sub_1DFDEDCE0();
  uint64_t v1 = sub_1DFDEDDF0();
  swift_release();

  return v1;
}

uint64_t sub_1DF010728(void *a1)
{
  if (qword_1EBAC0778 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  objc_msgSend(a1, sel_keyboardOrActionSwitchToNextViewController);
  sub_1DEAE8198();
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DF010800()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DF010838()
{
  sub_1DF00FF4C(*(void **)(v0 + 16));
}

uint64_t sub_1DF010854(void **a1)
{
  return sub_1DF0101C0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1DF010870(uint64_t a1)
{
  return sub_1DF010498(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DF01088C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DF0108C4(uint64_t a1)
{
  sub_1DF010518(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_1DF0108CC()
{
  return sub_1DF010680();
}

uint64_t sub_1DF0108E8()
{
  return swift_deallocObject();
}

uint64_t sub_1DF01092C(uint64_t a1)
{
  return sub_1DEE440F8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1DF010948()
{
  return sub_1DF010728(*(void **)(v0 + 16));
}

uint64_t sub_1DF010964()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (!__OFSUB__(v1, 1)) {
    return sub_1DF0102E0(*(void **)(v0 + 24), v1 - 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF010998()
{
  return swift_deallocObject();
}

uint64_t sub_1DF0109D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF6E80C8(a1);
}

uint64_t sub_1DF0109D8(void *a1)
{
  return sub_1DF8544C0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1DF010A0C(uint64_t a1)
{
  return sub_1DF01092C(a1);
}

uint64_t sub_1DF010A28()
{
  return sub_1DF0108CC();
}

uint64_t sub_1DF010A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DFDFA450();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

id sub_1DF010AAC(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v125 = a1;
  sub_1DEABF094(0, &qword_1EBAE9EB0, MEMORY[0x1E4F81220], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v120 = (char *)v108 - v6;
  uint64_t v7 = sub_1DFDE81B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a3, sel_setIsAccessibilityElement_, 1);
  uint64_t v11 = *(void **)&a3[OBJC_IVAR____TtC7NewsUI213SportsTagView_iconImageView];
  objc_msgSend(v11, sel_setIsAccessibilityElement_, 0);
  uint64_t v12 = *(unsigned __int8 **)&a3[OBJC_IVAR____TtC7NewsUI213SportsTagView_accessoryButton];
  uint64_t v131 = a3;
  uint64_t v122 = v12;
  objc_msgSend(v12, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a3, sel_setFrame_, *(double *)a2, *(double *)(a2 + 8), *(double *)(a2 + 16), *(double *)(a2 + 24));
  objc_msgSend(v11, (SEL)&selRef_setWithExternalAnalyticsFeedReferrer_, *(double *)(a2 + 32), *(double *)(a2 + 40), *(double *)(a2 + 48), *(double *)(a2 + 56));
  id v13 = objc_msgSend(v11, sel_layer);
  uint64_t v129 = sub_1DFDF9E80();
  unsigned int v128 = *MEMORY[0x1E4FAB820];
  uint64_t v126 = *(void (**)(char *))(v8 + 104);
  uint64_t v127 = v8 + 104;
  uint64_t v124 = v7;
  v126(v10);
  sub_1DFDF9E70();
  double v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v130 = v8 + 8;
  v16(v10, v7);
  objc_msgSend(v13, sel_setCornerRadius_, v15 * 0.5);

  id v109 = v11;
  id v17 = objc_msgSend(v11, sel_layer);
  objc_msgSend(v17, sel_setCornerCurve_, *MEMORY[0x1E4F39EA0]);

  id v118 = *(id *)&v131[OBJC_IVAR____TtC7NewsUI213SportsTagView_nameLabel];
  id v132 = *(id *)(v125 + 16);
  id v18 = objc_msgSend(v132, sel_displayName);
  uint64_t v117 = sub_1DFDFDD20();

  sub_1DEABF094(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
  uint64_t v116 = v19;
  uint64_t inited = swift_initStackObject();
  uint64_t v21 = (void **)MEMORY[0x1E4FB0700];
  long long v115 = xmmword_1DFE0B750;
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  uint64_t v22 = *v21;
  *(void *)(inited + 32) = *v21;
  uint64_t v23 = self;
  swift_bridgeObjectRetain();
  id v114 = v22;
  id v24 = objc_msgSend(v23, sel_labelColor);
  uint64_t v25 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  *(void *)(inited + 40) = v24;
  uint64_t v26 = (void *)*MEMORY[0x1E4FB06F8];
  uint64_t v113 = v25;
  *(void *)(inited + 64) = v25;
  *(void *)(inited + 72) = v26;
  uint64_t v27 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  id v111 = v26;
  uint64_t v28 = (void *)sub_1DFDFF360();
  uint64_t v29 = v124;
  ((void (*)(char *, void, uint64_t))v126)(v10, v128, v124);
  uint64_t v30 = sub_1DFDF9E60();

  uint64_t v123 = v10;
  uint64_t v31 = v10;
  uint64_t v32 = v16;
  v16(v31, v29);
  uint64_t v112 = v27;
  *(void *)(inited + 104) = v27;
  *(void *)(inited + 80) = v30;
  sub_1DEA65870(inited);
  id v33 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v34 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  uint64_t v36 = v35;
  uint64_t v37 = sub_1DF01221C((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
  uint64_t v117 = v36;
  uint64_t v110 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v38 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v33, sel_initWithString_attributes_, v34, v38);
  swift_bridgeObjectRelease();

  uint64_t v40 = &selRef_userInterfaceStyle;
  id v41 = v118;
  objc_msgSend(v118, sel_setAttributedText_, v39);

  objc_msgSend(v41, sel_setFrame_, *(double *)(a2 + 64), *(double *)(a2 + 72), *(double *)(a2 + 80), *(double *)(a2 + 88));
  id v42 = *(id *)&v131[OBJC_IVAR____TtC7NewsUI213SportsTagView_secondaryNameLabel];
  uint64_t v43 = sub_1DF67424C();
  uint64_t v119 = v32;
  if (v44)
  {
    v108[1] = v43;
    uint64_t v45 = swift_initStackObject();
    id v118 = v42;
    uint64_t v46 = (void *)v45;
    *(_OWORD *)(v45 + 16) = v115;
    uint64_t v47 = v32;
    double v48 = v114;
    *(void *)(v45 + 32) = v114;
    id v49 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    swift_bridgeObjectRetain();
    id v50 = v48;
    v46[5] = objc_msgSend(v49, sel_initWithRed_green_blue_alpha_, 0.43, 0.43, 0.45, 1.0);
    uint64_t v51 = v111;
    v46[8] = v113;
    v46[9] = v51;
    id v52 = v51;
    uint64_t v53 = v112;
    char v54 = (void *)sub_1DFDFF360();
    uint64_t v116 = v37;
    uint64_t v55 = v123;
    uint64_t v56 = v124;
    ((void (*)(char *, void, uint64_t))v126)(v123, v128, v124);
    uint64_t v57 = sub_1DFDF9E60();

    v47(v55, v56);
    v46[13] = v53;
    uint64_t v40 = &selRef_userInterfaceStyle;
    v46[10] = v57;
    sub_1DEA65870((uint64_t)v46);
    id v58 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v59 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    uint64_t v60 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    uint64_t v61 = v58;
    id v42 = v118;
    id v62 = objc_msgSend(v61, sel_initWithString_attributes_, v59, v60);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v62 = 0;
    uint64_t v56 = v124;
  }
  objc_msgSend(v42, v40[177], v62);

  objc_msgSend(v42, sel_setFrame_, *(double *)(a2 + 96), *(double *)(a2 + 104), *(double *)(a2 + 112), *(double *)(a2 + 120));
  id v63 = v132;
  id v64 = objc_msgSend(v132, sel_asSports);
  uint64_t v65 = v131;
  uint64_t v66 = v121;
  if (v64)
  {
    uint64_t v67 = v131;
    uint64_t v68 = v121;
    unint64_t v69 = (unint64_t)objc_msgSend(v64, sel_sportsType);
    swift_unknownObjectRelease();
    sub_1DEABF094(0, &qword_1EAC27820, (uint64_t (*)(uint64_t))type metadata accessor for FCSportsType, MEMORY[0x1E4FBB718]);
    if (v69 >= 0xC)
    {
      id result = (id)sub_1DFDFFF40();
      __break(1u);
      return result;
    }
    double v70 = dbl_1DFE379E8[v69];
    uint64_t v71 = v128;
    uint64_t v72 = (void (*)(char *, uint64_t, uint64_t))v126;
    uint64_t v66 = v68;
    uint64_t v65 = v67;
  }
  else
  {
    double v70 = 0.85;
    uint64_t v71 = v128;
    uint64_t v72 = (void (*)(char *, uint64_t, uint64_t))v126;
  }
  uint64_t v73 = *(void *)(v66 + 16);
  uint64_t v74 = v123;
  v72(v123, v71, v56);
  sub_1DFDF9E70();
  double v76 = v75;
  v119(v74, v56);
  uint64_t v77 = sub_1DF0E2A4C();
  if (v78)
  {
    uint64_t v79 = v77;
    uint64_t v80 = v78;
  }
  else
  {
    id v81 = objc_msgSend(v63, sel_displayName);
    uint64_t v79 = sub_1DFDFDD20();
    uint64_t v80 = v82;
  }
  if ((char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) - 1 >= (char *)2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v83 = sub_1DEC0355C(v63, v73);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v130 = v73;
    id v84 = v109;
    id v85 = objc_msgSend(v109, sel_traitCollection);
    objc_msgSend(v85, sel_displayScale);
    double v87 = v86;

    id v88 = objc_allocWithZone((Class)type metadata accessor for FeedNavImageAssetHandle());
    id v89 = sub_1DF53D698((uint64_t)v132, v83, 0, v76, v76, v87);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_1DEC02F5C(v89, v84, v79, v80, 0, v76, v76, v70);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v90 = (uint64_t)v120;
  swift_unknownObjectRelease();
  uint64_t v91 = v122;
  objc_msgSend(v122, sel_setFrame_, *(double *)(a2 + 128), *(double *)(a2 + 136), *(double *)(a2 + 144), *(double *)(a2 + 152));
  objc_msgSend(v91, sel_accessibilityActivationPoint);
  objc_msgSend(v65, sel_setAccessibilityActivationPoint_);
  uint64_t v92 = *MEMORY[0x1E4FB25C0];
  unint64_t v93 = (unint64_t)objc_msgSend(v65, sel_accessibilityTraits);
  if ((v92 & ~v93) != 0) {
    uint64_t v94 = v92;
  }
  else {
    uint64_t v94 = 0;
  }
  objc_msgSend(v65, sel_setAccessibilityTraits_, v94 | v93);
  sub_1DF011C10(a2 + 160, (uint64_t)&v134);
  sub_1DF011C10((uint64_t)&v134, (uint64_t)v135);
  if (v135[0] == 5) {
    return objc_msgSend(v91, sel_setHidden_, 1);
  }
  uint64_t v96 = qword_1EBAECE10;
  int v97 = v91[qword_1EBAECE10];
  v91[qword_1EBAECE10] = v135[0];
  sub_1DFDF0DC0();
  if (v97 != v91[v96] || !*(void *)&v91[qword_1EBB63380] || !*(void *)&v91[qword_1EBB63388]) {
    sub_1DF0BB5CC(0);
  }
  objc_msgSend(v91, sel_setHidden_, 0);
  sub_1DFDF56D0();
  swift_unknownObjectRetain();
  sub_1DFDFC060();
  uint64_t v98 = sub_1DFDFC080();
  uint64_t v99 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56);
  v99(v90, 0, 1, v98);
  sub_1DFDF33B0();
  swift_release();
  sub_1DECA5218(v90);
  sub_1DF011CCC(v133[0]);
  if (*(unsigned char *)(a2 + 161))
  {
    sub_1DFDF56D0();
    swift_unknownObjectRetain();
    sub_1DFDFC060();
    v99(v90, 0, 1, v98);
    uint64_t v100 = swift_allocObject();
    swift_weakInit();
    uint64_t v101 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v102 = swift_allocObject();
    *(void *)(v102 + 16) = v100;
    *(void *)(v102 + 24) = v101;
    sub_1DF0121C8();
    sub_1DFDF33A0();
    swift_release();
    swift_release();
    sub_1DECA5218(v90);
    __swift_project_boxed_opaque_existential_1(v133, v133[3]);
    id v103 = *(id *)&v65[OBJC_IVAR____TtC7NewsUI213SportsTagView_token];
    sub_1DFDEC910();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
  }
  uint64_t v104 = (void *)sub_1DFDF0DE0();
  uint64_t v105 = swift_allocObject();
  swift_weakInit();
  uint64_t v106 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v107 = (void *)swift_allocObject();
  v107[2] = v105;
  v107[3] = v125;
  v107[4] = v106;
  swift_retain();

  return (id)swift_release();
}

void sub_1DF011870(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v4 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t v5 = MEMORY[0x1E01EFB70](a3 + 16);
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      sub_1DF011CCC(v4);
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1DF011918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEABF094(0, &qword_1EBAE9EB0, MEMORY[0x1E4F81220], MEMORY[0x1E4FBB718]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = a3;
    sub_1DFDF56D0();
    swift_unknownObjectRetain();
    sub_1DFDFC060();
    uint64_t v11 = sub_1DFDFC080();
    uint64_t v12 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    v12(v9, 0, 1, v11);
    sub_1DFDF33D0();
    sub_1DFDF1BB0();
    sub_1DECA5218((uint64_t)v9);
    swift_release();
    sub_1DFDF56D0();
    swift_unknownObjectRetain();
    sub_1DFDFC060();
    v12(v7, 0, 1, v11);
    sub_1DFDF33B0();
    swift_release();
    sub_1DECA5218((uint64_t)v7);
    if (v18 != 2 && (v18 & 1) != 0)
    {
      uint64_t v13 = v17 + 16;
      swift_beginAccess();
      uint64_t v14 = MEMORY[0x1E01EFB70](v13);
      if (v14)
      {
        double v15 = (void *)v14;
        sub_1DF011CCC(1u);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF011B9C()
{
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SportsTagRenderer()
{
  return self;
}

uint64_t sub_1DF011C10(uint64_t a1, uint64_t a2)
{
  sub_1DF011C74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DF011C74()
{
  if (!qword_1EAC27818)
  {
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27818);
    }
  }
}

uint64_t sub_1DF011CCC(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = sub_1DFDF07E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v8 = (void (**)(char *, uint64_t))(v6 + 8);
  if (v2 == 2 || (a1 & 1) != 0)
  {
    v7(v5, *MEMORY[0x1E4FABC78], v3);
    type metadata accessor for AccessoryButton();
    sub_1DF01221C((unint64_t *)&qword_1EBAECE20, (void (*)(uint64_t))type metadata accessor for AccessoryButton);
    sub_1DFDF5E40();
    (*v8)(v5, v3);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v14 = self;
    id v15 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  }
  else
  {
    v7(v5, *MEMORY[0x1E4FABC70], v3);
    type metadata accessor for AccessoryButton();
    sub_1DF01221C((unint64_t *)&qword_1EBAECE20, (void (*)(uint64_t))type metadata accessor for AccessoryButton);
    sub_1DFDF5E40();
    (*v8)(v5, v3);
    type metadata accessor for Localized();
    uint64_t v9 = swift_getObjCClassFromMetadata();
    uint64_t v10 = self;
    id v11 = objc_msgSend(v10, sel_bundleForClass_, v9);
    sub_1DFDE6ED0();

    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_bundleForClass_, v9);
  }
  sub_1DFDE6ED0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF0120BC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF0120F4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF01212C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF012174()
{
  return sub_1DF011918(v0[2], v0[3], v0[4]);
}

uint64_t sub_1DF012180()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DF0121C0(unsigned __int8 *a1)
{
  sub_1DF011870(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1DF0121C8()
{
  unint64_t result = qword_1EBAE9E38;
  if (!qword_1EBAE9E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE9E38);
  }
  return result;
}

uint64_t sub_1DF01221C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SearchBlueprintModifierFactory()
{
  return self;
}

uint64_t sub_1DF012288(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchPrewarmBlueprintModifier();
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = *v1;
  sub_1DF0128A0(a1, (uint64_t)&v12 - v7, (uint64_t (*)(void))type metadata accessor for SearchPrewarmResult);
  sub_1DE94F204(v9 + 72, (uint64_t)&v8[*(int *)(v3 + 20)]);
  sub_1DF0128A0((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SearchPrewarmBlueprintModifier);
  sub_1DF0125AC();
  swift_allocObject();
  sub_1DE917850(&qword_1EAC27838, (void (*)(uint64_t))type metadata accessor for SearchPrewarmBlueprintModifier);
  uint64_t v10 = sub_1DFDF19A0();
  sub_1DF012908((uint64_t)v8);
  return v10;
}

uint64_t sub_1DF0123E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE94F204(*v3 + 72, (uint64_t)&v11);
  v10[0] = a1;
  v10[1] = a2;
  void v10[2] = a3;
  sub_1DF01279C((uint64_t)v10, (uint64_t)&v9);
  sub_1DF0125AC();
  swift_allocObject();
  sub_1DF0127F8();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_1DFDF19A0();
  sub_1DF01284C((uint64_t)v10);
  return v7;
}

uint64_t sub_1DF0124A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1DE94F204(v5 + 16, (uint64_t)v10);
  v9[0] = a1;
  v9[1] = a2;
  *(_OWORD *)&v10[40] = *(_OWORD *)(v5 + 56);
  sub_1DF0126EC((uint64_t)v9, (uint64_t)v8);
  sub_1DF0125AC();
  swift_allocObject();
  sub_1DECC2334();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v6 = sub_1DFDF19A0();
  sub_1DF012748((uint64_t)v9);
  return v6;
}

uint64_t sub_1DF012564()
{
  return sub_1DFDF19A0();
}

void sub_1DF0125AC()
{
  if (!qword_1EBAEBD10)
  {
    type metadata accessor for SearchSectionDescriptor();
    type metadata accessor for SearchModel(255);
    sub_1DE917850(&qword_1EBAEFF78, (void (*)(uint64_t))type metadata accessor for SearchSectionDescriptor);
    sub_1DE917850(&qword_1EBAEC6F0, (void (*)(uint64_t))type metadata accessor for SearchModel);
    unint64_t v0 = sub_1DFDF19B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEBD10);
    }
  }
}

unint64_t sub_1DF012698()
{
  unint64_t result = qword_1EAC27828;
  if (!qword_1EAC27828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27828);
  }
  return result;
}

uint64_t sub_1DF0126EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DF012748(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF01279C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1DF0127F8()
{
  unint64_t result = qword_1EAC27830;
  if (!qword_1EAC27830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27830);
  }
  return result;
}

uint64_t sub_1DF01284C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF0128A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF012908(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchPrewarmBlueprintModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF012964()
{
  uint64_t v1 = sub_1DFDE7600();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  char v7 = *(unsigned char *)(v0 + 32);
  sub_1DFAA95B4(v5, v6, v7);
  sub_1DF013174(&qword_1EBACB948);
  swift_retain();
  sub_1DFDE7EB0();
  swift_release();
  uint64_t v8 = v11;
  uint64_t result = sub_1DFAA95B4(v5, v6, v7);
  if (__OFADD__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v8 + 1;
    sub_1DF013174(&qword_1EBAD0878);
    swift_retain();
    sub_1DFDE8120();
    swift_release();
    sub_1DFAA92D4(v5, v6, v7);
    swift_retain();
    sub_1DFDE7580();
    sub_1DFDE8120();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

void sub_1DF012B68()
{
  uint64_t v13 = *v0;
  sub_1DF01310C();
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDE8FF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)v0[2];
  uint64_t v9 = v0[3];
  int v11 = *((unsigned __int8 *)v0 + 32);
  sub_1DEFF2908(v10, v9, *((unsigned char *)v0 + 32));
  sub_1DFDE9000();
  uint64_t v12 = &v4[*(int *)(v2 + 56)];
  *(void *)uint64_t v4 = v10;
  *((void *)v4 + 1) = v9;
  v4[16] = v11;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v8, v5);
  if (v11 != 2)
  {
    if (v11 == 6
      && v10 == (void *)3
      && !v9
      && (*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v12, v5) == *MEMORY[0x1E4F7D650])
    {
      if (qword_1EAC1D838 != -1) {
        swift_once();
      }
      char v15 = 1;
      sub_1DF013174(&qword_1EBAD0878);
      sub_1DFDE8120();
      return;
    }
LABEL_13:
    sub_1DF0131B4((uint64_t)v4, (uint64_t (*)(void))sub_1DF01310C);
    return;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v12, v5) != *MEMORY[0x1E4F7D650]) {
    goto LABEL_13;
  }
  if (qword_1EAC1D7D8 != -1) {
    swift_once();
  }
  char v14 = 1;
  sub_1DF013174(&qword_1EBAD0878);
  sub_1DFDE8120();
  sub_1DEEC7624(v10, v9, 2);
}

uint64_t sub_1DF012E84()
{
  sub_1DEEC7624(*(id *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TipInteractor()
{
  return self;
}

uint64_t sub_1DF012EEC()
{
  return sub_1DF012964();
}

uint64_t sub_1DF012F10(uint64_t a1)
{
  sub_1DEA3C638();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  sub_1DEAEAE20(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_1DF0131B4((uint64_t)v5, (uint64_t (*)(void))sub_1DEA3C638);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  __swift_project_boxed_opaque_existential_1((void *)(v10 + 40), *(void *)(v10 + 64));
  sub_1DFDF1900();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1DF0130B4()
{
}

uint64_t sub_1DF0130D8()
{
  return sub_1DF013174(&qword_1EBACB948);
}

void sub_1DF01310C()
{
  if (!qword_1EBAF8880)
  {
    sub_1DFDE8FF0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAF8880);
    }
  }
}

uint64_t sub_1DF013174(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TipInteractor();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF0131B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t SportsTopicSortOrder.encode(to:)(void *a1)
{
  sub_1DE967B38(0, &qword_1EBAEAC50, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE967BF0();
  sub_1DFE001A0();
  if (v8)
  {
    char v13 = 1;
    char v12 = 0;
  }
  else
  {
    __int16 v11 = 0;
  }
  sub_1DF0133A0();
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DF0133A0()
{
  unint64_t result = qword_1EBAD81C0;
  if (!qword_1EBAD81C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD81C0);
  }
  return result;
}

uint64_t sub_1DF0133F4@<X0>(char *a1@<X8>)
{
  return sub_1DE959E44(a1);
}

uint64_t sub_1DF013400@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF013464(uint64_t a1)
{
  unint64_t v2 = sub_1DE967BF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF0134A0(uint64_t a1)
{
  unint64_t v2 = sub_1DE967BF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF0134DC(char *a1, char *a2)
{
  return sub_1DF2A5184(*a1, *a2);
}

uint64_t sub_1DF0134E8()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF01357C()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF0135FC()
{
  return sub_1DFE00140();
}

void sub_1DF01368C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6C616E6F73726570;
  if (*v1) {
    uint64_t v2 = 0x6574736575716572;
  }
  unint64_t v3 = 0xEF6E6F6974617A69;
  if (*v1) {
    unint64_t v3 = 0xE900000000000064;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DF0136DC()
{
  return sub_1DFDFE180();
}

BOOL static SportsTopicSortOrder.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SportsTopicSortOrder.hash(into:)()
{
  return sub_1DFE00110();
}

uint64_t SportsTopicSortOrder.hashValue.getter()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF0137BC(void *a1)
{
  return SportsTopicSortOrder.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsTopicSortOrder()
{
  return &type metadata for SportsTopicSortOrder;
}

ValueMetadata *type metadata accessor for SportsTopicSortOrder.CodingType()
{
  return &type metadata for SportsTopicSortOrder.CodingType;
}

ValueMetadata *type metadata accessor for SportsTopicSortOrder.CodingKeys()
{
  return &type metadata for SportsTopicSortOrder.CodingKeys;
}

unint64_t sub_1DF013830()
{
  unint64_t result = qword_1EAC27840;
  if (!qword_1EAC27840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27840);
  }
  return result;
}

unint64_t sub_1DF013888()
{
  unint64_t result = qword_1EAC27848;
  if (!qword_1EAC27848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27848);
  }
  return result;
}

void sub_1DF0138DC(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = (void *)(v4 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  char v12 = (char *)a1 + *(int *)(type metadata accessor for MagazineCatalogSectionHeaderModel() + 20);
  char v13 = &v12[*(int *)(type metadata accessor for MagazineCatalogSectionDescriptor.Categories(0) + 20)];
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  id v29 = sub_1DF0B3894(v10, v11, v14, v15, a4);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void **)(a3 + OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_selectCategoryButton);
  objc_msgSend(v16, sel_setAttributedTitle_forState_, v29, 0);
  id v17 = objc_msgSend(v16, sel_titleLabel);
  if (v17)
  {
    char v18 = v17;
    objc_msgSend(v17, sel_setLineBreakMode_, 0, v28);
  }
  uint64_t v19 = (int *)type metadata accessor for MagazineCatalogSectionHeaderViewLayoutAttributes();
  objc_msgSend(v16, sel_setFrame_, *(double *)(a2 + v19[6]), *(double *)(a2 + v19[6] + 8), *(double *)(a2 + v19[6] + 16), *(double *)(a2 + v19[6] + 24));
  uint64_t v20 = *(void **)(a3 + OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_sortByButton);
  __swift_project_boxed_opaque_existential_1(v28, *(void *)(v5 + 40));
  sub_1DF0B3EFC(*(double *)(a2 + v19[8]));
  uint64_t v22 = v21;
  objc_msgSend(v20, sel_setImage_forState_, v21, 0);

  uint64_t v23 = (double *)(a2 + v19[7]);
  CGFloat v24 = *v23;
  double v25 = v23[1];
  double v26 = v23[2];
  double v27 = v23[3];
  objc_msgSend(v20, sel_setFrame_, *v23, v25, v26, v27);
  v32.origin.x = 0.0;
  v32.origin.y = 0.0;
  v32.size.width = 0.0;
  v32.size.height = 0.0;
  v31.origin.x = v24;
  v31.origin.y = v25;
  v31.size.width = v26;
  v31.size.height = v27;
  objc_msgSend(v20, sel_setHidden_, CGRectEqualToRect(v31, v32));
}

uint64_t type metadata accessor for MagazineCatalogSectionHeaderViewRenderer()
{
  return self;
}

uint64_t type metadata accessor for AlertIssuesNewsletterAlreadyOptedIn()
{
  return self;
}

uint64_t sub_1DF013B44()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t sub_1DF013C14()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t sub_1DF013CDC(void *a1)
{
  uint64_t v22 = a1;
  uint64_t v30 = *v1;
  uint64_t v3 = sub_1DFDE7600();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v28 = (char *)&v21 - v8;
  sub_1DFDE75F0();
  CGRect v31 = v1;
  CGRect v32 = a1;
  uint64_t v23 = v1;
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE20);
  uint64_t v24 = sub_1DFDEE090();
  id v29 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v29(v7, v9, v3);
  uint64_t v10 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v26 = v10 | 7;
  uint64_t v27 = v11 + v5;
  uint64_t v12 = swift_allocObject();
  double v25 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v25(v12 + v11, v7, v3);
  char v13 = v22;
  *(void *)(v12 + ((v11 + v5 + 7) & 0xFFFFFFFFFFFFFFF8)) = v22;
  id v14 = v13;
  uint64_t v15 = (void *)sub_1DFDEDCE0();
  sub_1DF01A69C(0, (unint64_t *)&unk_1EBACBCB0);
  sub_1DFDEDE10();
  swift_release();
  swift_release();

  uint64_t v16 = v28;
  v29(v7, v28, v3);
  uint64_t v17 = swift_allocObject();
  v25(v17 + v11, v7, v3);
  char v18 = (void *)sub_1DFDEDCE0();
  type metadata accessor for TodayConfigFetchResult();
  uint64_t v19 = sub_1DFDEDE10();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
  return v19;
}

uint64_t sub_1DF013FE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v24 = a1;
  uint64_t v26 = *v1;
  uint64_t v3 = sub_1DFDE7220();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDE68F0();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v23 - v15;
  sub_1DFDE75F0();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v24, v3);
  double v25 = v9;
  sub_1DFDE68D0();
  id v29 = v2;
  uint64_t v30 = v9;
  sub_1DF01A69C(0, (unint64_t *)&unk_1EAC27860);
  sub_1DFDEE090();
  uint64_t v17 = (void *)sub_1DFDEDCE0();
  sub_1DF019EC4();
  sub_1DFDEDE10();
  swift_release();

  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, v14, v10);
  uint64_t v20 = (void *)sub_1DFDEDCE0();
  type metadata accessor for TodayConfigFetchResult();
  uint64_t v21 = sub_1DFDEDE20();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v28);
  return v21;
}

uint64_t sub_1DF01439C()
{
  id v0 = objc_msgSend(self, sel_defaultCachePolicy);
  swift_getObjectType();
  objc_msgSend(v0, sel_cachePolicy);
  sub_1DFDFF1E0();

  id v1 = objc_msgSend(self, sel_sharedSession);
  sub_1DFDEDCB0();

  uint64_t v2 = sub_1DFDEE050();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1DF014490(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  sub_1DF01A16C(0, (unint64_t *)&unk_1EBAA79A0, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_1DE9E14D8(v4, v5);
  swift_unknownObjectRetain();
  sub_1DFDEDE90();
  sub_1DF01A468(0, &qword_1EBAC1158, MEMORY[0x1E4F277C0], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1DE9E14D8(v4, v5);
  sub_1DFDEDE90();
  id v6 = objc_msgSend(self, sel_cachePolicyWithSoftMaxAge_, 15.0);
  CFTimeInterval v7 = CACurrentMediaTime();
  sub_1DF01A468(0, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1DFDEE090();
  uint64_t v8 = (CFTimeInterval *)swift_allocObject();
  _OWORD v8[2] = v7;
  *((void *)v8 + 3) = a2;
  *((void *)v8 + 4) = v3;
  *((void *)v8 + 5) = v6;
  swift_unknownObjectRetain();
  swift_retain();
  id v9 = v6;
  uint64_t v10 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDDF0();

  swift_release();
  swift_release();

  uint64_t v11 = sub_1DFDEE040();
  swift_release();
  swift_release();
  swift_release();
  sub_1DEA5E6E4(v4, v5);
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_1DF0146F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v44 = a3;
  uint64_t v48 = a4;
  uint64_t v5 = type metadata accessor for TodayFeedGroupConfig();
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  CFTimeInterval v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[1];
  uint64_t v51 = *a1;
  unint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  unint64_t v11 = a1[4];
  uint64_t v12 = a1[5];
  uint64_t v13 = a1[6];
  unint64_t v14 = a1[7];
  uint64_t v15 = a1[8];
  v54[0] = v10;
  v54[1] = v11;
  v54[2] = v12;
  v54[3] = v8;
  v54[4] = v9;
  v54[5] = v15;
  swift_unknownObjectRetain();
  sub_1DE9E14D8(v8, v9);
  sub_1DE9E14D8(v10, v11);
  swift_bridgeObjectRetain();
  unint64_t v49 = v14;
  uint64_t v50 = v13;
  sub_1DEAEA988(v13, v14);
  swift_bridgeObjectRetain();
  sub_1DE9E14D8(v10, v11);
  swift_bridgeObjectRetain();
  unint64_t v47 = v9;
  sub_1DE9E14D8(v8, v9);
  swift_bridgeObjectRetain();
  uint64_t v16 = v46;
  sub_1DF014BC4((uint64_t)v54, v51, v44, v48);
  if (v16)
  {
    uint64_t v17 = v8;
    uint64_t v18 = v8;
    unint64_t v19 = v47;
    sub_1DEA5E6E4(v17, v47);
    swift_unknownObjectRelease();
    sub_1DEA5E6E4(v10, v11);
    swift_bridgeObjectRelease();
    sub_1DE986E40(v50, v49);
    swift_bridgeObjectRelease();
    sub_1DEA5E6E4(v10, v11);
    swift_bridgeObjectRelease();
    sub_1DE986E40(v18, v19);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DEA5E6E4(v10, v11);
    swift_bridgeObjectRelease();
    sub_1DE986E40(v8, v47);
    swift_bridgeObjectRelease();
    uint64_t v21 = v15;
    if (qword_1EBAD1B18 != -1) {
      swift_once();
    }
    uint64_t v41 = 0;
    unint64_t v42 = v11;
    uint64_t v44 = v10;
    uint64_t v45 = v8;
    uint64_t v46 = v12;
    v39[2] = qword_1EBB62B18;
    sub_1DEA6AA98(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1DFE0B250;
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    uint64_t v22 = *(void *)(v48 + *(int *)(type metadata accessor for TodayFeedConfig() + 20));
    int64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = MEMORY[0x1E4FBC860];
    if (v23)
    {
      v39[1] = v21;
      uint64_t v55 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1DEA9B358(0, v23, 0);
      unint64_t v25 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      v39[0] = v22;
      uint64_t v26 = v22 + v25;
      uint64_t v48 = *(void *)(v43 + 72);
      uint64_t v24 = v55;
      do
      {
        sub_1DEA4BAD8(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupConfig);
        uint64_t v27 = sub_1DFC3DF88();
        uint64_t v29 = v28;
        sub_1DEA4BCCC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupConfig);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DEA9B358(0, *(void *)(v24 + 16) + 1, 1);
          uint64_t v24 = v55;
        }
        unint64_t v31 = *(void *)(v24 + 16);
        unint64_t v30 = *(void *)(v24 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1DEA9B358(v30 > 1, v31 + 1, 1);
          uint64_t v24 = v55;
        }
        *(void *)(v24 + 16) = v31 + 1;
        uint64_t v32 = v24 + 16 * v31;
        *(void *)(v32 + 32) = v27;
        *(void *)(v32 + 40) = v29;
        unint64_t v33 = v49;
        v26 += v48;
        --v23;
        uint64_t v34 = v50;
      }
      while (v23);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v33 = v49;
      uint64_t v34 = v50;
    }
    uint64_t v35 = MEMORY[0x1E4FBB1A0];
    MEMORY[0x1E01ECA60](v24, MEMORY[0x1E4FBB1A0]);
    sub_1DFDFDE90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v52;
    unint64_t v37 = v53;
    uint64_t v38 = (void *)v40;
    *(void *)(v40 + 56) = v35;
    v38[8] = sub_1DEA08668();
    v38[4] = v36;
    v38[5] = v37;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    sub_1DEA5E6E4(v45, v47);
    swift_unknownObjectRelease();
    sub_1DEA5E6E4(v44, v42);
    swift_bridgeObjectRelease();
    sub_1DE986E40(v34, v33);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DF014BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v71 = a3;
  uint64_t v75 = a2;
  uint64_t v73 = a4;
  uint64_t v8 = sub_1DFDE7600();
  uint64_t v72 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDE6AC0();
  uint64_t v74 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TodayConfig();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v57 - v18;
  CACurrentMediaTime();
  uint64_t result = sub_1DF016874((uint64_t)v19, a1, (uint64_t)v6);
  if (v5) {
    return result;
  }
  uint64_t v67 = v6;
  uint64_t v68 = a1;
  int v62 = result;
  unint64_t v69 = v19;
  double v70 = v17;
  id v63 = v10;
  unint64_t v64 = (unint64_t)v13;
  uint64_t v21 = v74;
  uint64_t v65 = v11;
  if (qword_1EBAD1B18 != -1) {
    swift_once();
  }
  sub_1DEA6AA98(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  long long v61 = xmmword_1DFE0B250;
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
  sub_1DFDFE560();
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DEBA2BAC((uint64_t)v78);
    __break(1u);
    return result;
  }
  uint64_t v24 = v21;
  uint64_t v25 = MEMORY[0x1E4FBC240];
  *(void *)(v22 + 56) = MEMORY[0x1E4FBC1C8];
  *(void *)(v22 + 64) = v25;
  *(void *)(v22 + 32) = (uint64_t)v23;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v68 + 16);
  sub_1DF016C68(7, v26, 0x1E4F82A60, (void (*)(unint64_t, uint64_t))sub_1DF653154, &qword_1EBABAE60);
  id v66 = v27;
  sub_1DF016C68(1, v26, 0x1E4F829B0, (void (*)(unint64_t, uint64_t))sub_1DF653138, (unint64_t *)&unk_1EBABAC70);
  uint64_t v29 = v28;
  sub_1DF016C68(4, v26, 0x1E4F829A8, (void (*)(unint64_t, uint64_t))sub_1DF65311C, &qword_1EBAEA580);
  unint64_t v31 = v30;
  sub_1DF016C68(2, v26, 0x1E4F82BE8, (void (*)(unint64_t, uint64_t))sub_1DF653100, (unint64_t *)&unk_1EBABAB10);
  unint64_t v33 = v32;
  sub_1DF016C68(10, v26, 0x1E4F82A78, (void (*)(unint64_t, uint64_t))sub_1DF6530E4, (unint64_t *)&unk_1EBABABD0);
  id v58 = v34;
  id v35 = (id)FCHeadlinesWithHeldRecords();
  id v60 = v29;
  if (v35)
  {
    uint64_t v36 = v35;
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
    unint64_t v59 = sub_1DFDFDAF0();
  }
  else
  {
    unint64_t v59 = sub_1DF349530(MEMORY[0x1E4FBC860]);
  }
  unint64_t v37 = v64;
  id v38 = objc_msgSend(v67[3], sel_tagController);
  uint64_t v67 = v33;
  id v39 = objc_msgSend(v38, sel_tagsForTagRecords_, v33);

  uint64_t v40 = v8;
  if (v39)
  {
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAB70);
    unint64_t v64 = sub_1DFDFDAF0();
  }
  else
  {
    unint64_t v64 = sub_1DF34954C(MEMORY[0x1E4FBC860]);
  }
  uint64_t v41 = *(void *)(v68 + 40);
  v78[0] = v41;
  uint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v77 = MEMORY[0x1E4FBC860];
  uint64_t v43 = *(void *)(v41 + 16);
  if (v43)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v44 = (uint64_t *)(v41 + 40);
    do
    {
      uint64_t v45 = *v44;
      v76[0] = *(v44 - 1);
      v76[1] = v45;
      swift_bridgeObjectRetain();
      sub_1DF016EB0((uint64_t)&v77, (uint64_t)v76, v31);
      v44 += 2;
      swift_bridgeObjectRelease();
      --v43;
    }
    while (v43);
    sub_1DEBA2BAC((uint64_t)v78);
    sub_1DEBA2BAC((uint64_t)v78);
    uint64_t v42 = v77;
  }
  LODWORD(v68) = v62 & 1;
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v61;
  sub_1DF019FCC(0);
  *(void *)(v46 + 56) = v47;
  *(void *)(v46 + 64) = sub_1DF01A7E0((unint64_t *)&unk_1EBAEA1E8, sub_1DF019FCC);
  *(void *)(v46 + 32) = v42;
  swift_bridgeObjectRetain();
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DEA4BAD8((uint64_t)v69, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for TodayConfig);
  id v48 = objc_msgSend(v66, sel_onlyRecordID);
  if (v48)
  {
    unint64_t v49 = v48;
    uint64_t v50 = sub_1DFDFDD20();
    unint64_t v52 = v51;
  }
  else
  {
    uint64_t v50 = 0;
    unint64_t v52 = 0xE000000000000000;
  }
  unint64_t v53 = v63;
  sub_1DFDE75F0();
  sub_1DFDE6A70();

  (*(void (**)(char *, uint64_t))(v72 + 8))(v53, v40);
  sub_1DEA4BCCC((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for TodayConfig);
  type metadata accessor for TodayConfigData();
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v50;
  *(void *)(v54 + 24) = v52;
  *(unsigned char *)(v54 + 32) = v68;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 32))(v54 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_fetchInterval, v37, v65);
  *(void *)(v54 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_headlines) = v59;
  *(void *)(v54 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_tags) = v64;
  *(void *)(v54 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_localNewsArticles) = v42;
  uint64_t v55 = v73;
  sub_1DF01A000((uint64_t)v70, v73, (uint64_t (*)(void))type metadata accessor for TodayConfig);
  uint64_t v56 = type metadata accessor for TodayConfigFetchResult();
  *(void *)(v55 + *(int *)(v56 + 20)) = v54;
  *(void *)(v55 + *(int *)(v56 + 24)) = v75;
  return swift_unknownObjectRetain();
}

uint64_t sub_1DF01542C(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *a1;
  if (qword_1EBAD1B18 != -1) {
    swift_once();
  }
  sub_1DEA6AA98(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B250;
  uint64_t v8 = (void *)sub_1DFDE74D0();
  id v9 = objc_msgSend(v8, sel_fc_millisecondTimeIntervalUntilNow);

  uint64_t v10 = MEMORY[0x1E4FBC598];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBC538];
  *(void *)(v7 + 64) = v10;
  *(void *)(v7 + 32) = v9;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DF01A16C(0, (unint64_t *)&unk_1EBAA79A0, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_1DFDEDE90();
  CFTimeInterval v11 = CACurrentMediaTime();
  sub_1DF01A468(0, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1DFDEE090();
  uint64_t v12 = (CFTimeInterval *)swift_allocObject();
  void v12[2] = v11;
  *((void *)v12 + 3) = a2;
  *((void *)v12 + 4) = v6;
  *((void *)v12 + 5) = a4;
  swift_unknownObjectRetain();
  swift_retain();
  id v13 = a4;
  uint64_t v14 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v15 = sub_1DFDEE050();
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_1DF0156B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v5 = type metadata accessor for TodayConfigFetchResult();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v19 = (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v19 - v8;
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  unint64_t v12 = a1[2];
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  uint64_t v16 = a1[6];
  v21[0] = v11;
  v21[1] = v12;
  v21[2] = v13;
  v21[3] = v14;
  v21[4] = v15;
  v21[5] = v16;
  swift_unknownObjectRetain();
  sub_1DE9E14D8(v11, v12);
  swift_bridgeObjectRetain();
  sub_1DEAEA988(v14, v15);
  swift_bridgeObjectRetain();
  uint64_t v17 = v22;
  sub_1DF014BC4((uint64_t)v21, v10, v20, (uint64_t)v9);
  uint64_t v22 = v17;
  if (v17)
  {
    sub_1DEA5E6E4(v11, v12);
    swift_bridgeObjectRelease();
    sub_1DE986E40(v14, v15);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DEA4BAD8((uint64_t)v9, v19, (uint64_t (*)(void))type metadata accessor for TodayConfigFetchResult);
    sub_1DEA6AA98(0, &qword_1EBAA78B8, (uint64_t (*)(uint64_t))type metadata accessor for TodayConfigFetchResult, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    a2 = sub_1DFDEDE90();
    sub_1DEA5E6E4(v11, v12);
    swift_bridgeObjectRelease();
    sub_1DE986E40(v14, v15);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DEA4BCCC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TodayConfigFetchResult);
  }
  return a2;
}

uint64_t sub_1DF0158DC()
{
  sub_1DF01A468(0, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1DFDEE090();
  id v0 = (void *)sub_1DFDEDCE0();
  uint64_t v1 = sub_1DFDEDEE0();
  swift_release();

  return v1;
}

uint64_t sub_1DF015994()
{
  if (qword_1EBAD1B18 != -1) {
    swift_once();
  }
  sub_1DEA6AA98(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  uint64_t result = sub_1DFDFE560();
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 9.22337204e18)
  {
    uint64_t v3 = MEMORY[0x1E4FBC240];
    *(void *)(v0 + 56) = MEMORY[0x1E4FBC1C8];
    *(void *)(v0 + 64) = v3;
    *(void *)(v0 + 32) = (uint64_t)v2;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    uint64_t v4 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v4);
    sub_1DF01A468(0, (unint64_t *)&unk_1EBAD2A08, (uint64_t)&type metadata for TodayConfigManager.OperationResult, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1DFDEDF30();
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1DF015B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8)
{
  uint64_t v35 = a8;
  uint64_t v36 = a3;
  unint64_t v33 = a7;
  uint64_t v37 = a4;
  uint64_t v12 = sub_1DFDEE010();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  uint64_t v34 = v16;
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  swift_getObjectType();
  swift_retain();
  uint64_t v17 = sub_1DF01926C(a5);
  sub_1DF018B5C(a6, a5);
  sub_1DFDFD9D0();
  sub_1DFDEDFC0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v18 = v33;
  sub_1DF015EC4(v33, a6);
  id v19 = objc_allocWithZone(MEMORY[0x1E4F7E870]);
  uint64_t v20 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)sub_1DFDFE200();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v19, sel_initWithFeedType_forYouConfigID_formatVersion_additionalRecordIDs_, v17, v20, v21, v22);

  id v24 = sub_1DF0160B4((uint64_t)v23, a5, (uint64_t)a6, v35);
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = v36;
  uint64_t v28 = v37;
  v26[2] = v25;
  v26[3] = v27;
  v26[4] = v28;
  v26[5] = v23;
  uint64_t v29 = v34;
  v26[6] = sub_1DF01A264;
  v26[7] = v29;
  v26[8] = v18;
  aBlock[4] = sub_1DF01A338;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9460BC;
  aBlock[3] = &block_descriptor_62;
  unint64_t v30 = _Block_copy(aBlock);
  swift_retain();
  id v31 = v23;
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v24, sel_setFetchCompletionHandler_, v30);
  _Block_release(v30);
  objc_msgSend(v24, sel_startIfNeeded);
}

void *sub_1DF015EC4(void *a1, void *a2)
{
  int64_t v4 = a1[2];
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1DEA9B358(0, v4, 0);
    uint64_t v5 = v25;
    uint64_t v6 = a1 + 5;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)sub_1DFDFDCE0();
      id v8 = (id)FCCKPublisherSpecifiedArticleListIDForTagID();

      uint64_t v9 = sub_1DFDFDD20();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();

      unint64_t v13 = *(void *)(v25 + 16);
      unint64_t v12 = *(void *)(v25 + 24);
      if (v13 >= v12 >> 1) {
        sub_1DEA9B358(v12 > 1, v13 + 1, 1);
      }
      v6 += 2;
      *(void *)(v25 + 16) = v13 + 1;
      unint64_t v14 = v25 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRetain();
  sub_1DEA8C598(v5);
  unint64_t v15 = a1;
  id v16 = objc_msgSend(a2, sel_topStoriesConfig);
  id v17 = objc_msgSend(v16, sel_channelID);

  if (v17)
  {
    uint64_t v18 = sub_1DFDFDD20();
    uint64_t v20 = v19;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v15 = sub_1DEA8C6EC(0, v15[2] + 1, 1, v15);
    }
    unint64_t v22 = v15[2];
    unint64_t v21 = v15[3];
    if (v22 >= v21 >> 1) {
      unint64_t v15 = sub_1DEA8C6EC((void *)(v21 > 1), v22 + 1, 1, v15);
    }
    v15[2] = v22 + 1;
    id v23 = &v15[2 * v22];
    v23[4] = v18;
    v23[5] = v20;
  }
  return v15;
}

id sub_1DF0160B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = sub_1DF441B2C();
  if (!v8)
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E868]), sel_initWithContext_appConfig_request_, *(void *)(a2 + 24), a3, a1);
    objc_msgSend(v9, sel_setCachePolicy_, a4);
    if (qword_1EBAD1B18 == -1)
    {
LABEL_9:
      sub_1DEA6AA98(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1DFE0B250;
      id v24 = objc_msgSend(v9, sel_operationID);
      uint64_t v25 = sub_1DFDFDD20();
      uint64_t v27 = v26;

      *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v23 + 64) = sub_1DEA08668();
      *(void *)(v23 + 32) = v25;
      *(void *)(v23 + 40) = v27;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      goto LABEL_10;
    }
LABEL_14:
    swift_once();
    goto LABEL_9;
  }
  id v9 = v8;
  if (qword_1EBAD1B18 != -1) {
    swift_once();
  }
  sub_1DEA6AA98(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DFE0CC10;
  id v11 = objc_msgSend(v9, sel_operationID);
  uint64_t v12 = sub_1DFDFDD20();
  uint64_t v14 = v13;

  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v16 = sub_1DEA08668();
  *(void *)(v10 + 64) = v16;
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v14;
  objc_msgSend(v9, sel_isFinished);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 96) = v15;
  *(void *)(v10 + 104) = v16;
  *(void *)(v10 + 72) = 0;
  *(void *)(v10 + 80) = 0xE000000000000000;
  sub_1DFDE7320();
  double v18 = v17;
  objc_msgSend(v9, sel_operationStartTime);
  double v20 = (v18 - v19) * 1000.0;
  if ((~*(void *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v21 = sub_1DFDFFEE0();
  *(void *)(v10 + 136) = v15;
  *(void *)(v10 + 144) = v16;
  *(void *)(v10 + 112) = v21;
  *(void *)(v10 + 120) = v22;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
LABEL_10:
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1DF016454(void *a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, void *a6, void (*a7)(uint64_t *), uint64_t a8, uint64_t a9)
{
  sub_1DEA83C40();
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    sub_1DF01A36C();
    uint64_t v36 = swift_allocError();
    *uint64_t v37 = 0;
    a4();
    id v38 = (void *)v36;
LABEL_12:

    return;
  }
  if (!a1)
  {
    if (a2)
    {
      uint64_t v39 = (uint64_t)a2;
    }
    else
    {
      sub_1DF01A36C();
      uint64_t v39 = swift_allocError();
      *uint64_t v40 = 1;
    }
    id v41 = a2;
    ((void (*)(uint64_t))a4)(v39);
    swift_release();
    id v38 = (void *)v39;
    goto LABEL_12;
  }
  uint64_t v45 = a7;
  uint64_t v17 = sub_1DE919914(0, &qword_1EBACCC38);
  double v18 = self;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a6;
  *(void *)(v19 + 24) = v17;
  uint64_t v50 = sub_1DF01A3F8;
  uint64_t v51 = v19;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v47 = 1107296256;
  id v48 = sub_1DE9744A8;
  unint64_t v49 = &block_descriptor_23_1;
  double v20 = _Block_copy(&aBlock);
  id v21 = a6;
  id v22 = a1;
  swift_release();
  objc_msgSend(v18, sel_scheduleLowPriorityBlock_, v20);

  _Block_release(v20);
  sub_1DFDE75F0();
  uint64_t v23 = sub_1DFDE7600();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v16, 0, 1, v23);
  sub_1DF019598((uint64_t)v16);
  id v24 = objc_msgSend(v22, sel_ckConfigData);
  uint64_t v25 = sub_1DFDE72D0();
  unint64_t v27 = v26;

  id v28 = objc_msgSend(v22, sel_ckRecordsByType);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
  sub_1DE919914(0, &qword_1EBABAAF0);
  sub_1DF01A400();
  uint64_t v29 = sub_1DFDFDAF0();

  uint64_t v30 = sub_1DFDF6930();
  if (v31 >> 60 == 15)
  {
    sub_1DFDF6950();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    if (v33 || (id v42 = objc_msgSend(v22, sel_newsEdgeConfigData)) == 0)
    {
      uint64_t v34 = 0;
      unint64_t v35 = 0xF000000000000000;
    }
    else
    {
      uint64_t v43 = v42;
      uint64_t v34 = sub_1DFDE72D0();
      unint64_t v35 = v44;
    }
  }
  else
  {
    uint64_t v34 = v30;
    unint64_t v35 = v31;
  }
  uint64_t aBlock = v25;
  uint64_t v47 = v27;
  id v48 = (uint64_t (*)(uint64_t))v29;
  unint64_t v49 = (void *)v34;
  uint64_t v50 = (void (*)())v35;
  uint64_t v51 = a9;
  swift_bridgeObjectRetain();
  v45(&aBlock);
  sub_1DEA5E6E4(v25, v27);
  swift_bridgeObjectRelease();
  sub_1DE986E40(v34, v35);
  swift_release();

  swift_bridgeObjectRelease();
}

uint64_t sub_1DF016874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = v3;
  uint64_t v26 = a3;
  uint64_t v7 = type metadata accessor for TodayConfig();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v25 = (uint64_t)&v22 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v22 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v22 - v16;
  unint64_t v18 = *(void *)(a2 + 32);
  if (v18 >> 60 == 15)
  {
LABEL_4:
    sub_1DFDF79C0();
    swift_allocObject();
    sub_1DFDF79B0();
    sub_1DF01A7E0(&qword_1EBAA9C10, (void (*)(uint64_t))type metadata accessor for TodayConfig);
    sub_1DFDEC890();
    if (v4) {
      return swift_release();
    }
    uint64_t v21 = v25;
    sub_1DF017240((uint64_t)v10, v25);
    swift_release();
    sub_1DEA4BCCC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TodayConfig);
    if (qword_1EBAD1B18 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    sub_1DF01A000(v21, a1, (uint64_t (*)(void))type metadata accessor for TodayConfig);
    return 0;
  }
  uint64_t v23 = v10;
  uint64_t v24 = a1;
  uint64_t v19 = *(void *)(a2 + 24);
  sub_1DFDF79C0();
  swift_allocObject();
  sub_1DE9E14D8(v19, v18);
  sub_1DFDF79B0();
  sub_1DF01A7E0(&qword_1EBAA9C10, (void (*)(uint64_t))type metadata accessor for TodayConfig);
  sub_1DFDEC890();
  if (v3)
  {
    swift_release();

    sub_1DE986E40(v19, v18);
    int64_t v4 = 0;
    uint64_t v10 = v23;
    a1 = v24;
    goto LABEL_4;
  }
  sub_1DF017240((uint64_t)v15, (uint64_t)v17);
  swift_release();
  sub_1DEA4BCCC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TodayConfig);
  sub_1DF01A000((uint64_t)v17, v24, (uint64_t (*)(void))type metadata accessor for TodayConfig);
  if (qword_1EBAD1B18 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  sub_1DE986E40(v19, v18);
  return 1;
}

void sub_1DF016C68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t), unint64_t *a5)
{
  id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, a1);
  uint64_t v10 = sub_1DED5E28C(v9, a2);

  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_recordsByID);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_1DFDFDAF0();

      sub_1DF018810(v13, a3, a4);
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v10, sel_interestTokensByID);
      if (v14)
      {
        uint64_t v15 = v14;
        sub_1DE919914(0, (unint64_t *)&unk_1EBABABB0);
        uint64_t v16 = sub_1DFDFDAF0();
      }
      else
      {
        uint64_t v16 = 0;
      }
      sub_1DE919914(0, a5);
      unint64_t v18 = (void *)sub_1DFDFDAE0();
      swift_bridgeObjectRelease();
      if (v16)
      {
        sub_1DE919914(0, (unint64_t *)&unk_1EBABABB0);
        uint64_t v19 = (void *)sub_1DFDFDAE0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = 0;
      }
      id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E4D8]), sel_initWithRecordsByID_interestTokensByID_, v18, v19);

      if (v20)
      {

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    id v17 = objc_allocWithZone(MEMORY[0x1E4F7E4D8]);
    objc_msgSend(v17, sel_init);
  }
}

void sub_1DF016EB0(uint64_t a1, uint64_t a2, void *a3)
{
  int64_t v4 = (void *)sub_1DFDFDCE0();
  id v5 = (id)FCCKPublisherSpecifiedArticleListIDForTagID();

  uint64_t v6 = sub_1DFDFDD20();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(a3, sel_recordsByID);
  if (!v9)
  {
    __break(1u);
    __break(1u);
    return;
  }
  uint64_t v10 = v9;
  sub_1DE919914(0, &qword_1EBAEA580);
  uint64_t v11 = sub_1DFDFDAF0();

  if (!*(void *)(v11 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1DEA6D930(v6, v8);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  id v14 = *(id *)(*(void *)(v11 + 56) + 8 * v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v14, sel_articleIDs);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_1DFDFE210();
  }
  swift_bridgeObjectRelease();
}

void sub_1DF017230(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1DF017240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v58 = a1;
  uint64_t v52 = type metadata accessor for TodayConfig();
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (uint64_t)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA83C40();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v49 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for TodayFeedConfig();
  uint64_t v5 = MEMORY[0x1F4188790](v54);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v53 = (uint64_t)&v49 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (uint64_t)&v49 - v10;
  sub_1DF01A068(0);
  MEMORY[0x1F4188790](v11 - 8);
  char v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA4900C();
  uint64_t v55 = *(void *)(v14 - 8);
  uint64_t v56 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF01A09C(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA490D8();
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBAD2020 != -1) {
    swift_once();
  }
  sub_1DF01A7E0(&qword_1EBAD6910, (void (*)(uint64_t))type metadata accessor for TodayConfigManager);
  sub_1DFDE7EB0();
  if (v59 != 1)
  {
    uint64_t v28 = v58;
    return sub_1DEA4BAD8(v28, v57, (uint64_t (*)(void))type metadata accessor for TodayConfig);
  }
  uint64_t v25 = v58;
  sub_1DF1D3CC0((uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21) == 1)
  {
    uint64_t v26 = sub_1DF01A09C;
    uint64_t v27 = (uint64_t)v19;
LABEL_9:
    sub_1DEA4BCCC(v27, (uint64_t (*)(void))v26);
    uint64_t v28 = v25;
    return sub_1DEA4BAD8(v28, v57, (uint64_t (*)(void))type metadata accessor for TodayConfig);
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v19, v21);
  sub_1DF1D3EE4((uint64_t)v13);
  uint64_t v30 = v55;
  uint64_t v29 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v13, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    uint64_t v26 = sub_1DF01A068;
    uint64_t v27 = (uint64_t)v13;
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v13, v29);
  sub_1DEA4BAD8(v25, v53, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
  uint64_t v32 = *(void *)(v25 + *(int *)(v54 + 20));
  unint64_t v33 = MEMORY[0x1E4FBC860];
  unint64_t v59 = MEMORY[0x1E4FBC860];
  uint64_t v34 = *(void *)(v32 + 16);
  if (v34)
  {
    uint64_t v35 = *(void *)(type metadata accessor for TodayFeedGroupConfig() - 8);
    uint64_t v36 = v32 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    uint64_t v37 = *(void *)(v35 + 72);
    swift_bridgeObjectRetain_n();
    do
    {
      sub_1DF017F10(&v59, v36, (unint64_t)v24, (uint64_t)v16);
      v36 += v37;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease_n();
    unint64_t v33 = v59;
  }
  uint64_t v38 = v53;
  uint64_t v39 = v49;
  sub_1DEA4BAD8(v53, v49, (uint64_t (*)(void))sub_1DEA83C40);
  sub_1DEA4BAD8(v39, (uint64_t)v7, (uint64_t (*)(void))sub_1DEA83C40);
  swift_bridgeObjectRetain();
  sub_1DEA4BCCC(v39, (uint64_t (*)(void))sub_1DEA83C40);
  *(void *)&v7[*(int *)(v54 + 20)] = v33;
  uint64_t v40 = v50;
  sub_1DF01A000((uint64_t)v7, v50, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
  swift_bridgeObjectRelease();
  sub_1DEA4BCCC(v38, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
  uint64_t v42 = v51;
  uint64_t v41 = v52;
  uint64_t v43 = (uint64_t *)(v58 + *(int *)(v52 + 20));
  uint64_t v44 = *v43;
  uint64_t v58 = v43[1];
  uint64_t v45 = v43[2];
  sub_1DEA4BAD8(v40, v51, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
  swift_retain();
  swift_retain();
  sub_1DEA4BCCC(v40, (uint64_t (*)(void))type metadata accessor for TodayFeedConfig);
  uint64_t v46 = (void *)(v42 + *(int *)(v41 + 20));
  uint64_t v47 = v57;
  uint64_t v48 = v58;
  *uint64_t v46 = v44;
  v46[1] = v48;
  v46[2] = v45;
  sub_1DF01A000(v42, v47, (uint64_t (*)(void))type metadata accessor for TodayConfig);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
}

uint64_t TodayConfigManager.deinit()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI218TodayConfigManager_testOverrides;
  uint64_t v2 = sub_1DFDF6960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t TodayConfigManager.__deallocating_deinit()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI218TodayConfigManager_testOverrides;
  uint64_t v2 = sub_1DFDF6960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void sub_1DF017B1C(void *a1)
{
  v18[1] = *(id *)MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v2 = self;
    v18[0] = 0;
    id v3 = a1;
    id v4 = objc_msgSend(v2, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v3, 1, v18);
    id v5 = v18[0];
    if (v4)
    {
      uint64_t v6 = sub_1DFDE72D0();
      unint64_t v8 = v7;

      id v9 = objc_msgSend(self, sel_standardUserDefaults);
      uint64_t v10 = (void *)sub_1DFDE72B0();
      uint64_t v11 = (void *)sub_1DFDFDCE0();
      objc_msgSend(v9, sel_setValue_forKey_, v10, v11);

      sub_1DEA5E6E4(v6, v8);
    }
    else
    {
      char v13 = v5;
      uint64_t v14 = (void *)sub_1DFDE6FE0();

      swift_willThrow();
      id v15 = objc_msgSend(self, sel_standardUserDefaults);
      uint64_t v16 = (void *)sub_1DFDFDCE0();
      objc_msgSend(v15, sel_removeObjectForKey_, v16);
    }
  }
  else
  {
    id v12 = objc_msgSend(self, sel_standardUserDefaults);
    id v17 = (id)sub_1DFDFDCE0();
    objc_msgSend(v12, sel_removeObjectForKey_);
  }
}

uint64_t sub_1DF017D98@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  id v3 = (void *)sub_1DFDFDCE0();
  id v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1DEA6964C((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    uint64_t v5 = sub_1DFDE7600();
    int v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_1DE9E4C20((uint64_t)v10);
    uint64_t v8 = sub_1DFDE7600();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t sub_1DF017F10(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v76 = a4;
  unint64_t v73 = a3;
  uint64_t v79 = a1;
  sub_1DF01A0D0(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v75 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF01A104(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v72 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF01A138(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAE8164(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  id v15 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)v61 - v16;
  sub_1DEAC0580();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TodayFeedGroupConfig();
  uint64_t v78 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v74 = (char *)v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v77 = (uint64_t)v61 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)v61 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)v61 - v29;
  sub_1DEA4BAD8(a2, (uint64_t)v61 - v29, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupConfig);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1DEA4BCCC((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupConfig);
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v70 = a2;
    sub_1DFC3F060();
    uint64_t v32 = sub_1DFDF8C20();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 56);
    uint64_t v69 = v32;
    uint64_t v67 = v33 + 56;
    v68(v20, 1, 1);
    uint64_t v34 = sub_1DFDEE010();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    uint64_t v37 = v35 + 56;
    v36(v17, 1, 1, v34);
    uint64_t v65 = v36;
    uint64_t v66 = v34;
    uint64_t v64 = v37;
    v36(v15, 1, 1, v34);
    uint64_t v38 = sub_1DFDF8EE0();
    uint64_t v39 = *(void *)(v38 - 8);
    int v62 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 56);
    uint64_t v63 = v38;
    v61[1] = v39 + 56;
    v62(v11, 1, 1);
    uint64_t v40 = type metadata accessor for ForYouTodayFeedGroupConfigData();
    uint64_t v41 = (uint64_t)v72;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v72, 1, 1, v40);
    sub_1DEA490D8();
    sub_1DFDF7420();
    swift_bridgeObjectRelease();
    sub_1DEA4BCCC(v41, (uint64_t (*)(void))sub_1DF01A104);
    sub_1DEA4BCCC((uint64_t)v11, (uint64_t (*)(void))sub_1DF01A138);
    sub_1DEA4BCCC((uint64_t)v15, (uint64_t (*)(void))sub_1DEAE8164);
    sub_1DEA4BCCC((uint64_t)v17, (uint64_t (*)(void))sub_1DEAE8164);
    sub_1DEA4BCCC((uint64_t)v20, (uint64_t (*)(void))sub_1DEAC0580);
    swift_storeEnumTagMultiPayload();
    unint64_t v42 = *v79;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v71 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v42 = sub_1DEE19A84(0, *(void *)(v42 + 16) + 1, 1, v42);
    }
    unint64_t v45 = *(void *)(v42 + 16);
    unint64_t v44 = *(void *)(v42 + 24);
    if (v45 >= v44 >> 1) {
      unint64_t v42 = sub_1DEE19A84(v44 > 1, v45 + 1, 1, v42);
    }
    *(void *)(v42 + 16) = v45 + 1;
    unint64_t v73 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    uint64_t v78 = *(void *)(v78 + 72);
    sub_1DF01A000(v77, v42 + v73 + v78 * v45, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupConfig);
    uint64_t v46 = v79;
    *uint64_t v79 = v42;
    sub_1DFC3F060();
    uint64_t v47 = (uint64_t)v20;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v68)(v20, 1, 1, v69);
    uint64_t v49 = v65;
    uint64_t v48 = v66;
    v65(v17, 1, 1, v66);
    v49(v15, 1, 1, v48);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v62)(v11, 1, 1, v63);
    uint64_t v50 = type metadata accessor for MissedStoriesTodayFeedGroupConfigData();
    uint64_t v51 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v75, 1, 1, v50);
    sub_1DEA4900C();
    uint64_t v52 = v74;
    sub_1DFDF7420();
    swift_bridgeObjectRelease();
    sub_1DEA4BCCC(v51, (uint64_t (*)(void))sub_1DF01A0D0);
    sub_1DEA4BCCC((uint64_t)v11, (uint64_t (*)(void))sub_1DF01A138);
    sub_1DEA4BCCC((uint64_t)v15, (uint64_t (*)(void))sub_1DEAE8164);
    sub_1DEA4BCCC((uint64_t)v17, (uint64_t (*)(void))sub_1DEAE8164);
    sub_1DEA4BCCC(v47, (uint64_t (*)(void))sub_1DEAC0580);
    swift_storeEnumTagMultiPayload();
    unint64_t v53 = *v46;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v53 = sub_1DEE19A84(0, *(void *)(v53 + 16) + 1, 1, v53);
    }
    unint64_t v55 = *(void *)(v53 + 16);
    unint64_t v54 = *(void *)(v53 + 24);
    if (v55 >= v54 >> 1) {
      unint64_t v53 = sub_1DEE19A84(v54 > 1, v55 + 1, 1, v53);
    }
    *(void *)(v53 + 16) = v55 + 1;
    uint64_t v56 = v53 + v73 + v55 * v78;
    uint64_t v57 = (uint64_t)v52;
  }
  else
  {
    sub_1DEA4BAD8(a2, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupConfig);
    uint64_t v46 = v79;
    unint64_t v53 = *v79;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v53 = sub_1DEE19A84(0, *(void *)(v53 + 16) + 1, 1, v53);
    }
    unint64_t v59 = *(void *)(v53 + 16);
    unint64_t v58 = *(void *)(v53 + 24);
    if (v59 >= v58 >> 1) {
      unint64_t v53 = sub_1DEE19A84(v58 > 1, v59 + 1, 1, v53);
    }
    *(void *)(v53 + 16) = v59 + 1;
    uint64_t v56 = v53
        + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))
        + *(void *)(v78 + 72) * v59;
    uint64_t v57 = (uint64_t)v28;
  }
  uint64_t result = sub_1DF01A000(v57, v56, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupConfig);
  *uint64_t v46 = v53;
  return result;
}

uint64_t sub_1DF018810(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v35 = MEMORY[0x1E4FBC868];
  uint64_t v37 = MEMORY[0x1E4FBC868];
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v36 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v34 = v4;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  while (1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      uint64_t v20 = v15;
      uint64_t v21 = v35;
      unint64_t v22 = *(void *)(v35 + 16);
      if (*(void *)(v35 + 24) <= v22)
      {
        a3(v22 + 1, 1);
        uint64_t v21 = v37;
      }
      uint64_t v35 = v21;
      sub_1DFE00100();
      sub_1DFDFDE20();
      uint64_t result = sub_1DFE00140();
      uint64_t v23 = v35 + 64;
      uint64_t v24 = -1 << *(unsigned char *)(v35 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v35 + 64 + 8 * (v25 >> 6))) == 0)
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v24) >> 6;
        uint64_t v4 = v34;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          BOOL v30 = v26 == v29;
          if (v26 == v29) {
            unint64_t v26 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v23 + 8 * v26);
          if (v31 != -1)
          {
            unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_36;
          }
        }
        goto LABEL_40;
      }
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v35 + 64 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v4 = v34;
LABEL_36:
      *(void *)(v23 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      uint64_t v32 = (void *)(*(void *)(v35 + 48) + 16 * v27);
      *uint64_t v32 = v13;
      v32[1] = v14;
      *(void *)(*(void *)(v35 + 56) + 8 * v27) = v20;
      ++*(void *)(v35 + 16);
      uint64_t result = swift_unknownObjectRelease();
      if (v7) {
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_unknownObjectRelease_n();
      if (v7) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v16 >= v36) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    int64_t v18 = v9 + 1;
    if (!v17)
    {
      int64_t v18 = v9 + 2;
      if (v9 + 2 >= v36) {
        goto LABEL_38;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v9 + 3;
        if (v9 + 3 >= v36) {
          goto LABEL_38;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v9 + 4;
          if (v9 + 4 >= v36) {
            goto LABEL_38;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v18);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v18 << 6);
    int64_t v9 = v18;
  }
  int64_t v19 = v9 + 5;
  if (v9 + 5 >= v36)
  {
LABEL_38:
    sub_1DEC80768();
    return v35;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v19);
  if (v17)
  {
    int64_t v18 = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v36) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DF018B5C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF6950();
  if (!v5)
  {
    if (objc_msgSend(a1, sel_respondsToSelector_, sel_forYouPremiumRecordConfigID))
    {
      id v7 = objc_msgSend(a1, sel_forYouPremiumRecordConfigID);
      uint64_t v6 = sub_1DFDFDD20();

      if (sub_1DF01926C(a2) == 1) {
        return v6;
      }
      swift_bridgeObjectRelease();
      id v8 = objc_msgSend(a1, sel_forYouRecordConfigID);
    }
    else
    {
      id v8 = objc_msgSend(a1, sel_forYouRecordConfigID);
    }
    id v9 = v8;
    uint64_t v6 = sub_1DFDFDD20();

    return v6;
  }
  return v4;
}

uint64_t sub_1DF018C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  id v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA6AA98(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v56 = (char *)v43 - v9;
  sub_1DEA6AA98(0, (unint64_t *)&unk_1EBAE9E90, MEMORY[0x1E4F81118], v7);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v55 = (char *)v43 - v11;
  sub_1DEA6AA98(0, &qword_1EBAE9E88, MEMORY[0x1E4F81110], v7);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v54 = (char *)v43 - v13;
  sub_1DEA83C40();
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v53 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1DFDFBE60();
  uint64_t v16 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TodayLocalNewsArticle(0);
  uint64_t v49 = *(void *)(v18 - 8);
  uint64_t v50 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (void *)((char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  if (v21)
  {
    v43[1] = v4;
    uint64_t v60 = MEMORY[0x1E4FBC860];
    sub_1DEDF79C4(0, v21, 0);
    uint64_t v22 = v60;
    unint64_t v44 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    unint64_t v45 = v20;
    uint64_t v23 = (uint64_t *)(a1 + 40);
    uint64_t v46 = a4;
    while (1)
    {
      uint64_t v25 = *(v23 - 1);
      uint64_t v24 = *v23;
      uint64_t v59 = v22;
      if (!a4) {
        break;
      }
      uint64_t v26 = *(void *)(a4 + 16);
      swift_bridgeObjectRetain_n();
      if (!v26) {
        goto LABEL_12;
      }
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_1DEA6D930(v25, v24);
      if ((v28 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_12:
        *uint64_t v20 = v25;
        v20[1] = v24;
        uint64_t v34 = v48;
        v20[2] = v47;
        void v20[3] = v34;
LABEL_13:
        swift_bridgeObjectRetain();
        id v58 = 0;
LABEL_14:
        uint64_t v57 = 0;
        goto LABEL_15;
      }
      id v29 = *(id *)(*(void *)(a4 + 56) + 8 * v27);
      swift_bridgeObjectRelease();
      *uint64_t v20 = v25;
      v20[1] = v24;
      uint64_t v30 = v48;
      v20[2] = v47;
      void v20[3] = v30;
      if (!v29) {
        goto LABEL_13;
      }
      unsigned __int8 v31 = objc_msgSend(v29, sel_respondsToSelector_, sel_title);
      swift_bridgeObjectRetain();
      id v58 = v29;
      if ((v31 & 1) == 0) {
        goto LABEL_14;
      }
      id v32 = objc_msgSend(v29, sel_title);
      if (!v32) {
        goto LABEL_14;
      }
      uint64_t v33 = v32;
      uint64_t v57 = sub_1DFDFDD20();

LABEL_15:
      uint64_t v35 = sub_1DFDE7600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v53, 1, 1, v35);
      uint64_t v36 = sub_1DFDFBE70();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v54, 1, 1, v36);
      uint64_t v37 = sub_1DFDFBE80();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v55, 1, 1, v37);
      uint64_t v38 = sub_1DFDE7220();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v56, 1, 1, v38);
      uint64_t v39 = v51;
      sub_1DFDFBE30();
      swift_unknownObjectRelease();
      uint64_t v20 = v45;
      (*v44)((char *)v45 + *(int *)(v50 + 24), v39, v52);
      swift_bridgeObjectRelease();
      uint64_t v22 = v59;
      uint64_t v60 = v59;
      unint64_t v41 = *(void *)(v59 + 16);
      unint64_t v40 = *(void *)(v59 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_1DEDF79C4(v40 > 1, v41 + 1, 1);
        uint64_t v22 = v60;
      }
      v23 += 2;
      *(void *)(v22 + 16) = v41 + 1;
      sub_1DF01A000((uint64_t)v20, v22+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v41, type metadata accessor for TodayLocalNewsArticle);
      --v21;
      a4 = v46;
      if (!v21) {
        return v22;
      }
    }
    swift_bridgeObjectRetain_n();
    goto LABEL_12;
  }
  return v22;
}

uint64_t sub_1DF01926C(uint64_t a1)
{
  uint64_t v1 = (char *)objc_msgSend(*(id *)(a1 + 48), sel_cachedSubscription);
  if (objc_getAssociatedObject(v1, v1 + 1))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v16, (uint64_t)&v18);
  if (!v20)
  {
    sub_1DE9E4C20((uint64_t)&v18);
    goto LABEL_9;
  }
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    id v2 = 0;
    unint64_t v4 = 0;
    goto LABEL_10;
  }
  id v2 = v15;
  id v3 = objc_msgSend(v15, sel_integerValue);
  if (v3 == (id)-1)
  {

    goto LABEL_21;
  }
  unint64_t v4 = (unint64_t)v3;
LABEL_10:
  if (objc_getAssociatedObject(v1, (const void *)~v4))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v16, (uint64_t)&v18);
  if (v20)
  {
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
    if (swift_dynamicCast())
    {
      id v5 = v15;
      unsigned int v6 = objc_msgSend(v5, sel_integerValue);

      if ((v6 ^ v4)) {
        goto LABEL_21;
      }
LABEL_19:
      uint64_t v7 = 0;
      char v8 = 0;
      goto LABEL_22;
    }
  }
  else
  {
    sub_1DE9E4C20((uint64_t)&v18);
  }

  if ((v4 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_21:
  uint64_t v7 = 1;
  char v8 = 1;
LABEL_22:
  if (qword_1EBAD1B18 != -1) {
    swift_once();
  }
  sub_1DEA6AA98(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DFE0B750;
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  uint64_t v10 = v18;
  unint64_t v11 = v19;
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1DEA08668();
  uint64_t v12 = MEMORY[0x1E4FBB390];
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  uint64_t v13 = MEMORY[0x1E4FBB3C8];
  *(void *)(v9 + 96) = v12;
  *(void *)(v9 + 104) = v13;
  *(unsigned char *)(v9 + 72) = v8;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1DF019598(uint64_t a1)
{
  sub_1DEA83C40();
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_standardUserDefaults);
  sub_1DEA4BAD8(a1, (uint64_t)v4, (uint64_t (*)(void))sub_1DEA83C40);
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    uint64_t v8 = sub_1DFDE74D0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  uint64_t v9 = (void *)sub_1DFDFDCE0();
  objc_msgSend(v5, sel_setValue_forKey_, v8, v9);

  swift_unknownObjectRelease();
  return sub_1DEA4BCCC(a1, (uint64_t (*)(void))sub_1DEA83C40);
}

void _s7NewsUI218TodayConfigManagerC07prewarmcD07contextySo14FCCloudContextC_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1DFDF6B40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF6BA0();
  uint64_t v42 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDF6B50();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DE9823D8();
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    uint64_t v40 = v6;
    uint64_t v41 = v3;
    id v15 = objc_msgSend(a1, sel_appConfigurationManager);
    if (objc_msgSend(v15, sel_respondsToSelector_, sel_fetchedAppConfiguration))
    {
      uint64_t v39 = v2;
      id v16 = objc_msgSend(v15, sel_fetchedAppConfiguration);
      swift_unknownObjectRelease();
      id v44 = v16;
      sub_1DF01A16C(0, &qword_1EBAEA588, MEMORY[0x1E4FBB718]);
      sub_1DFDFF640();
      swift_unknownObjectRelease();
      uint64_t v17 = aBlock[0];
      if (aBlock[0])
      {
        id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E868]), sel_initWithContext_appConfig_request_, a1, aBlock[0], v14);
        uint64_t v38 = v17;
        unint64_t v19 = v18;
        sub_1DFDFE590();
        id v21 = objc_msgSend(self, sel_cachePolicyWithSoftMaxAge_, v20 * 5.0);
        objc_msgSend(v19, sel_setCachePolicy_, v21);

        objc_msgSend(v19, sel_setQualityOfService_, 25);
        objc_msgSend(v19, sel_setRelativePriority_, 1);
        uint64_t v22 = (void *)qword_1EAC27850;
        qword_1EAC27850 = (uint64_t)v19;
        id v23 = v19;

        if (qword_1EBAD1B18 != -1) {
          swift_once();
        }
        uint64_t v36 = qword_1EBB62B18;
        sub_1DEA6AA98(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1DFE0B250;
        id v25 = objc_msgSend(v23, sel_operationID);
        id v37 = v23;
        id v26 = v25;
        uint64_t v27 = sub_1DFDFDD20();
        uint64_t v29 = v28;

        *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v24 + 64) = sub_1DEA08668();
        *(void *)(v24 + 32) = v27;
        *(void *)(v24 + 40) = v29;
        sub_1DFDFEA60();
        sub_1DFDF00C0();
        swift_bridgeObjectRelease();
        sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
        (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCB28], v9);
        uint64_t v30 = (void *)sub_1DFDFEEA0();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        uint64_t v31 = swift_allocObject();
        id v32 = v37;
        *(void *)(v31 + 16) = v37;
        aBlock[4] = sub_1DF01A7D0;
        aBlock[5] = v31;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DE9744A8;
        aBlock[3] = &block_descriptor_40;
        uint64_t v33 = _Block_copy(aBlock);
        id v34 = v32;
        sub_1DFDF6B70();
        id v44 = (id)MEMORY[0x1E4FBC860];
        sub_1DF01A7E0((unint64_t *)&qword_1EBAB9EB0, MEMORY[0x1E4FBCB00]);
        sub_1DEABDA4C();
        sub_1DF01A7E0((unint64_t *)&qword_1EBABA860, (void (*)(uint64_t))sub_1DEABDA4C);
        uint64_t v35 = v39;
        sub_1DFDFF830();
        MEMORY[0x1E01ED6B0](0, v8, v5, v33);
        _Block_release(v33);
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v35);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v40);
        swift_release();
        return;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    if (qword_1EBAD1B18 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
  }
  else
  {
    if (qword_1EBAD1B18 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
  }
}

uint64_t sub_1DF019E88()
{
  return type metadata accessor for TodayConfigManager();
}

uint64_t method lookup function for TodayConfigManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TodayConfigManager);
}

uint64_t sub_1DF019EA8()
{
  return sub_1DF01439C();
}

void sub_1DF019EC4()
{
  if (!qword_1EAC27870)
  {
    sub_1DE9266B8(255, (unint64_t *)&qword_1EBABAE20);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAC27870);
    }
  }
}

uint64_t sub_1DF019F48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(sub_1DFDE7600() - 8);
  return sub_1DF0146F4(a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a3);
}

void sub_1DF019FCC(uint64_t a1)
{
}

uint64_t sub_1DF01A000(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1DF01A068(uint64_t a1)
{
}

void sub_1DF01A09C(uint64_t a1)
{
}

void sub_1DF01A0D0(uint64_t a1)
{
}

void sub_1DF01A104(uint64_t a1)
{
}

void sub_1DF01A138(uint64_t a1)
{
}

void sub_1DF01A16C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1DE9266B8(255, (unint64_t *)&qword_1EBABAE20);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF01A1DC()
{
  return sub_1DF0158DC();
}

uint64_t sub_1DF01A1FC()
{
  return sub_1DF015994();
}

void sub_1DF01A220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DF015B94(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32), *(void *)(v4 + 40));
}

uint64_t sub_1DF01A22C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF01A264(_OWORD *a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  _OWORD v5[2] = a1[2];
  return v2(v5);
}

uint64_t sub_1DF01A2A8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF01A2E0()
{
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DF01A338(void *a1, void *a2)
{
  sub_1DF016454(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void (**)(uint64_t *))(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

unint64_t sub_1DF01A36C()
{
  unint64_t result = qword_1EAC27890;
  if (!qword_1EAC27890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27890);
  }
  return result;
}

uint64_t sub_1DF01A3C0()
{
  return swift_deallocObject();
}

void sub_1DF01A3F8()
{
  sub_1DF017B1C(*(void **)(v0 + 16));
}

unint64_t sub_1DF01A400()
{
  unint64_t result = qword_1EBABB080;
  if (!qword_1EBABB080)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBABB070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABB080);
  }
  return result;
}

void sub_1DF01A468(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1DF01A4B4()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  return sub_1DF5BB43C();
}

uint64_t sub_1DF01A4EC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_getObjectType();
  objc_msgSend(v1, sel_cachePolicy);
  return sub_1DFDFF1E0();
}

uint64_t sub_1DF01A550()
{
  uint64_t v1 = sub_1DFDE7600();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1DF01A5F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1DFDE7600() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1DF01542C(a1, a2, v2 + v6, *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1DF01A69C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_1DE9266B8(255, (unint64_t *)&qword_1EBABAE20);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1DF01A718(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1DFDE7600() - 8);
  return sub_1DF0156B8(a1, a2, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_1DF01A798()
{
  return swift_deallocObject();
}

id sub_1DF01A7D0()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_startIfNeeded);
}

uint64_t sub_1DF01A7E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TodayConfigManager.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF01A8F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayConfigManager.Errors()
{
  return &type metadata for TodayConfigManager.Errors;
}

uint64_t destroy for TodayConfigManager.OperationResult(uint64_t *a1)
{
  sub_1DEA5E6E4(*a1, a1[1]);
  swift_bridgeObjectRelease();
  unint64_t v2 = a1[4];
  if (v2 >> 60 != 15) {
    sub_1DEA5E6E4(a1[3], v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TodayConfigManager.OperationResult(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1DE9E14D8(*a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = a2[2];
  unsigned int v6 = a2 + 3;
  unint64_t v7 = a2[4];
  swift_bridgeObjectRetain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  else
  {
    uint64_t v8 = *(void *)v6;
    sub_1DE9E14D8(v8, v7);
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v7;
  }
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for TodayConfigManager.OperationResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1DE9E14D8(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1DEA5E6E4(v6, v7);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a2 + 3;
  unint64_t v9 = a2[4];
  if ((unint64_t)a1[4] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v11 = *v8;
      sub_1DE9E14D8(*v8, a2[4]);
      uint64_t v12 = a1[3];
      unint64_t v13 = a1[4];
      a1[3] = v11;
      a1[4] = v9;
      sub_1DEA5E6E4(v12, v13);
      goto LABEL_8;
    }
    sub_1DF01AB20((uint64_t)(a1 + 3));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  uint64_t v10 = *v8;
  sub_1DE9E14D8(*v8, a2[4]);
  a1[3] = v10;
  a1[4] = v9;
LABEL_8:
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF01AB20(uint64_t a1)
{
  return a1;
}

uint64_t *assignWithTake for TodayConfigManager.OperationResult(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1DEA5E6E4(v4, v5);
  a1[2] = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t *)(a2 + 24);
  unint64_t v7 = a1[4];
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 32);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = a1[3];
      a1[3] = *v6;
      a1[4] = v8;
      sub_1DEA5E6E4(v9, v7);
      goto LABEL_6;
    }
    sub_1DF01AB20((uint64_t)(a1 + 3));
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)v6;
LABEL_6:
  a1[5] = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayConfigManager.OperationResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayConfigManager.OperationResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayConfigManager.OperationResult()
{
  return &type metadata for TodayConfigManager.OperationResult;
}

unint64_t sub_1DF01ACCC()
{
  unint64_t result = qword_1EAC278A0;
  if (!qword_1EAC278A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC278A0);
  }
  return result;
}

uint64_t sub_1DF01AD28()
{
  return sub_1DF01A1FC();
}

uint64_t sub_1DF01AD48(void *a1)
{
  sub_1DF01C144(0, &qword_1EBAEACF0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF01BFC8();
  sub_1DFE001A0();
  v9[15] = 0;
  type metadata accessor for SportsScoreSortingMatchFilter(0);
  sub_1DF01C1A8(&qword_1EBAE0730, (void (*)(uint64_t))type metadata accessor for SportsScoreSortingMatchFilter);
  sub_1DFDFFE80();
  if (!v1)
  {
    type metadata accessor for SportsScoreSortingSubsetFilter();
    v9[14] = 1;
    sub_1DEE05E64();
    sub_1DF01C1A8((unint64_t *)&qword_1EBAEA018, (void (*)(uint64_t))sub_1DEE05E64);
    sub_1DFDFFEA0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF01AF5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  sub_1DEE05DD0();
  uint64_t v23 = v4;
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  MEMORY[0x1F4188790](matched);
  id v25 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF01C144(0, &qword_1EBAEAAA0, MEMORY[0x1E4FBBDC0]);
  uint64_t v26 = v8;
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = type metadata accessor for SportsScoreSortingSubsetFilter();
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF01BFC8();
  sub_1DFE00190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v19 = a1;
  uint64_t v14 = (uint64_t)v13;
  uint64_t v15 = v22;
  uint64_t v16 = v23;
  char v28 = 0;
  sub_1DF01C1A8(&qword_1EBAE0738, (void (*)(uint64_t))type metadata accessor for SportsScoreSortingMatchFilter);
  uint64_t v17 = (uint64_t)v25;
  sub_1DFDFFD90();
  sub_1DF01C01C(v17, v14);
  char v27 = 1;
  sub_1DEE05E64();
  sub_1DF01C1A8((unint64_t *)&qword_1EBAEA018, (void (*)(uint64_t))sub_1DEE05E64);
  sub_1DFDFFDC0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v26);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v14 + *(int *)(v11 + 20), v6, v16);
  sub_1DF01C080(v14, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_1DF01C0E4(v14, (uint64_t (*)(void))type metadata accessor for SportsScoreSortingSubsetFilter);
}

uint64_t sub_1DF01B350()
{
  if (*v0) {
    return 0x737265746C6966;
  }
  else {
    return 0x686374616DLL;
  }
}

uint64_t sub_1DF01B388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF01C3FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF01B3B0(uint64_t a1)
{
  unint64_t v2 = sub_1DF01BFC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF01B3EC(uint64_t a1)
{
  unint64_t v2 = sub_1DF01BFC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF01B428@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF01AF5C(a1, a2);
}

uint64_t sub_1DF01B440(void *a1)
{
  return sub_1DF01AD48(a1);
}

uint64_t sub_1DF01B458(uint64_t a1, uint64_t a2)
{
  if ((sub_1DEC42918(a1, a2) & 1) == 0) {
    return 0;
  }
  sub_1DEE05E64();
  sub_1DF01C1A8((unint64_t *)&qword_1EBAEA018, (void (*)(uint64_t))sub_1DEE05E64);
  sub_1DEE07968();
  return sub_1DFDFB560();
}

uint64_t sub_1DF01B51C()
{
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  sub_1DEC41664();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  type metadata accessor for SportsScoreSortingSubsetFilter();
  sub_1DEE05DD0();
  sub_1DFDFB550();
  MEMORY[0x1E01ECA60](v1, &type metadata for SportsScoreSortingFilter);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x3D686374616DLL;
}

uint64_t type metadata accessor for SportsScoreSortingSubsetFilter()
{
  uint64_t result = qword_1EBAE1B40;
  if (!qword_1EBAE1B40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1DF01B65C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(matched - 8) + 64));
    }
    else
    {
      sub_1DEC419C4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    sub_1DEE05DD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_1DF01B7B4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SportsScoreSortingMatchFilter(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    sub_1DEC419C4();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1DEE05DD0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

char *sub_1DF01B874(char *a1, char *a2, uint64_t a3)
{
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(matched - 8) + 64));
  }
  else
  {
    sub_1DEC419C4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  sub_1DEE05DD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

char *sub_1DF01B97C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DF01C0E4((uint64_t)a1, type metadata accessor for SportsScoreSortingMatchFilter);
    uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(matched - 8) + 64));
    }
    else
    {
      sub_1DEC419C4();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  sub_1DEE05DD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

char *sub_1DF01BAA8(char *a1, char *a2, uint64_t a3)
{
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(matched - 8) + 64));
  }
  else
  {
    sub_1DEC419C4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  sub_1DEE05DD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

char *sub_1DF01BBB0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DF01C0E4((uint64_t)a1, type metadata accessor for SportsScoreSortingMatchFilter);
    uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(matched - 8) + 64));
    }
    else
    {
      sub_1DEC419C4();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  sub_1DEE05DD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1DF01BCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF01BCF0);
}

uint64_t sub_1DF01BCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  uint64_t v7 = *(void *)(matched - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, matched);
  }
  else
  {
    sub_1DEE05DD0();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DF01BDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF01BDFC);
}

uint64_t sub_1DF01BDFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  uint64_t v9 = *(void *)(matched - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, matched);
  }
  else
  {
    sub_1DEE05DD0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1DF01BF00()
{
  type metadata accessor for SportsScoreSortingMatchFilter(319);
  if (v0 <= 0x3F)
  {
    sub_1DEE05DD0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1DF01BFC8()
{
  unint64_t result = qword_1EBAE1B18;
  if (!qword_1EBAE1B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE1B18);
  }
  return result;
}

uint64_t sub_1DF01C01C(uint64_t a1, uint64_t a2)
{
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(matched - 8) + 32))(a2, a1, matched);
  return a2;
}

uint64_t sub_1DF01C080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsScoreSortingSubsetFilter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF01C0E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DF01C144(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF01BFC8();
    unint64_t v7 = a3(a1, &type metadata for SportsScoreSortingSubsetFilter.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF01C1A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsScoreSortingSubsetFilter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF01C2BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsScoreSortingSubsetFilter.CodingKeys()
{
  return &type metadata for SportsScoreSortingSubsetFilter.CodingKeys;
}

unint64_t sub_1DF01C2F8()
{
  unint64_t result = qword_1EAC278B0;
  if (!qword_1EAC278B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC278B0);
  }
  return result;
}

unint64_t sub_1DF01C350()
{
  unint64_t result = qword_1EBAE1B28;
  if (!qword_1EBAE1B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE1B28);
  }
  return result;
}

unint64_t sub_1DF01C3A8()
{
  unint64_t result = qword_1EBAE1B20;
  if (!qword_1EBAE1B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE1B20);
  }
  return result;
}

uint64_t sub_1DF01C3FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x686374616DLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737265746C6966 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t getEnumTagSinglePayload for ChannelTagLayoutAttributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 200)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 129);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelTagLayoutAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 200) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 129) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelTagLayoutAttributes()
{
  return &type metadata for ChannelTagLayoutAttributes;
}

void *sub_1DF01C5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DF01DCD0(0, &qword_1EBAD2588, (uint64_t (*)(uint64_t))sub_1DF01DB74, MEMORY[0x1E4FAAA48]);
  char v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_allocObject();
  uint64_t v7 = sub_1DFDECF70();
  v3[2] = a1;
  void v3[3] = a2;
  v3[4] = a3;
  v3[5] = v7;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1DFDECF90();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  swift_getObjectType();
  sub_1DFDF43D0();
  swift_allocObject();
  swift_weakInit();
  sub_1DFDECF90();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  swift_allocObject();
  swift_weakInit();
  sub_1DFDF1010();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

void sub_1DF01C7CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unsigned int v3 = *(void **)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)a1;
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 72);
  unint64_t v17 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 80);
  char v10 = *(void **)(a1 + 96);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 88);
  char v7 = *(unsigned char *)(a1 + 112);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (v1)
    {
      swift_getObjectType();
      swift_bridgeObjectRetain();
      sub_1DEB2EF54(v3, v2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DEB2EF78(v17, v6 & 1);
      id v8 = v10;
      swift_bridgeObjectRetain();
      sub_1DFDF43D0();
      sub_1DFDECF80();
      swift_release();
      char v9 = v18[0];
      v18[0] = v15;
      v18[1] = v1;
      id v18[2] = v3;
      char v19 = v2;
      uint64_t v20 = v13;
      uint64_t v21 = v4;
      uint64_t v22 = v16;
      uint64_t v23 = v5;
      unint64_t v24 = v17;
      char v25 = v6 & 1;
      uint64_t v26 = v14;
      uint64_t v27 = v12;
      char v28 = v10;
      uint64_t v29 = v11;
      char v30 = v7 & 1;
      sub_1DF01C9B8(v9, (uint64_t)v18);
      swift_release();
      sub_1DF01DC1C(v15, v1, v3, v2, v13, v4, v16, v5, v17, v6, v14, v12, v10);
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1DF01C9B8(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v28 = *(void *)a2;
  uint64_t v29 = *(void *)(a2 + 8);
  char v3 = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v26 = *(void *)(a2 + 32);
  uint64_t v27 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v24 = *(void *)(a2 + 88);
  uint64_t v25 = *(void *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 104);
  int v10 = *(unsigned __int8 *)(a2 + 112);
  if (v10 == 1)
  {
    char v22 = a1;
    uint64_t v11 = *(void *)(a2 + 64);
    if (qword_1EBAC0768 != -1) {
      swift_once();
    }
    sub_1DEAE57FC(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1DFE0B250;
    uint64_t v45 = 0;
    unint64_t v46 = 0xE000000000000000;
    sub_1DFDFFB10();
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 64) = sub_1DEA08668();
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 40) = 0xE000000000000000;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    uint64_t v5 = v11;
    swift_bridgeObjectRelease();
    uint64_t v30 = v28;
    uint64_t v31 = v29;
    uint64_t v32 = v2;
    char v33 = v3;
    uint64_t v34 = v26;
    uint64_t v35 = v27;
    uint64_t v36 = v4;
    uint64_t v37 = v6;
    uint64_t v38 = v11;
    char v39 = v7;
    uint64_t v40 = v8;
    uint64_t v41 = v24;
    uint64_t v42 = v25;
    uint64_t v43 = v9;
    char v44 = 1;
    sub_1DF01D470(&v30);
    LOBYTE(v10) = 1;
    a1 = v22;
  }
  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_1EBAC0768 != -1) {
        swift_once();
      }
      sub_1DFDFEA60();
      return sub_1DFDF00C0();
    }
    else
    {
      uint64_t v17 = v4;
      if (qword_1EBAC0768 != -1) {
        swift_once();
      }
      sub_1DEAE57FC(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1DFE0B250;
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      uint64_t v30 = v28;
      uint64_t v31 = v29;
      uint64_t v32 = v2;
      char v33 = v3;
      uint64_t v34 = v26;
      uint64_t v35 = v27;
      uint64_t v36 = v17;
      uint64_t v37 = v6;
      uint64_t v38 = v5;
      char v39 = v7;
      uint64_t v40 = v8;
      uint64_t v41 = v24;
      uint64_t v42 = v25;
      uint64_t v43 = v9;
      char v44 = v10;
      sub_1DFDFFB10();
      uint64_t v21 = v5;
      char v23 = v7;
      uint64_t v19 = v45;
      unint64_t v20 = v46;
      *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v18 + 64) = sub_1DEA08668();
      *(void *)(v18 + 32) = v19;
      *(void *)(v18 + 40) = v20;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      uint64_t v30 = v28;
      uint64_t v31 = v29;
      uint64_t v32 = v2;
      char v33 = v3;
      uint64_t v34 = v26;
      uint64_t v35 = v27;
      uint64_t v36 = v17;
      uint64_t v37 = v6;
      uint64_t v38 = v21;
      char v39 = v23;
      uint64_t v40 = v8;
      uint64_t v41 = v24;
      uint64_t v42 = v25;
      uint64_t v43 = v9;
      char v44 = v10;
      return sub_1DF01D470(&v30);
    }
  }
  else
  {
    if (qword_1EBAC0768 != -1) {
      swift_once();
    }
    sub_1DEAE57FC(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DFE0B250;
    uint64_t v45 = 0;
    unint64_t v46 = 0xE000000000000000;
    uint64_t v30 = v28;
    uint64_t v31 = v29;
    uint64_t v32 = v2;
    char v33 = v3;
    uint64_t v34 = v26;
    uint64_t v35 = v27;
    uint64_t v36 = v4;
    uint64_t v37 = v6;
    uint64_t v38 = v5;
    char v39 = v7;
    uint64_t v40 = v8;
    uint64_t v41 = v24;
    uint64_t v42 = v25;
    uint64_t v43 = v9;
    char v44 = v10;
    sub_1DFDFFB10();
    uint64_t v15 = v45;
    unint64_t v16 = v46;
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = sub_1DEA08668();
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v16;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    return swift_bridgeObjectRelease();
  }
}

void sub_1DF01CFCC(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    sub_1DFDECF80();
    swift_release();
    uint64_t v2 = v17;
    if (v17)
    {
      char v3 = v28;
      uint64_t v4 = v26;
      uint64_t v5 = v27;
      char v10 = v25;
      unint64_t v11 = v24;
      uint64_t v14 = v22;
      uint64_t v15 = v23;
      uint64_t v12 = v20;
      uint64_t v13 = v21;
      char v7 = v18;
      char v6 = v19;
      char v8 = v1;
      uint64_t v9 = v16;
      LOBYTE(v25) = v25 & 1;
      v29 &= 1u;
      sub_1DF01C9B8(v8, (uint64_t)&v16);
      swift_release();
      sub_1DF01DC1C(v9, v2, v7, v6, v12, v13, v14, v15, v11, v10, v4, v5, v3);
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1DF01D120()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_1EBAC0768 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    sub_1DF01D1E0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF01D1E0()
{
  swift_retain();
  sub_1DFDECF80();
  swift_release();
  if (v3)
  {
    if (qword_1EBAC0768 != -1) {
      swift_once();
    }
    sub_1DEAE57FC(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v0 = swift_allocObject();
    *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
    sub_1DFDFFB10();
    *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 64) = sub_1DEA08668();
    *(void *)(v0 + 32) = 0;
    *(void *)(v0 + 40) = 0xE000000000000000;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    sub_1DF01DC1C(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  }
  swift_retain();
  sub_1DFDECF60();
  return swift_release();
}

uint64_t sub_1DF01D470(uint64_t *a1)
{
  sub_1DF01DCD0(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v36 = (char *)&v27 - v3;
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v42 = (void *)a1[2];
  int v6 = *((unsigned __int8 *)a1 + 24);
  unint64_t v35 = a1[4];
  uint64_t v7 = a1[6];
  uint64_t v41 = a1[5];
  uint64_t v8 = a1[7];
  unint64_t v39 = a1[8];
  int v38 = *((unsigned __int8 *)a1 + 72);
  uint64_t v10 = a1[10];
  uint64_t v9 = a1[11];
  uint64_t v37 = (void *)a1[12];
  uint64_t v11 = a1[13];
  LODWORD(v40) = *((unsigned __int8 *)a1 + 112);
  if (qword_1EBAC0768 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_1EBB62900;
  sub_1DEAE57FC(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v29 = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DFE0B250;
  *(void *)&v44[0] = 0;
  *((void *)&v44[0] + 1) = 0xE000000000000000;
  *(void *)&long long v46 = v4;
  *((void *)&v46 + 1) = v5;
  *(void *)&long long v47 = v42;
  int v32 = v6;
  BYTE8(v47) = v6;
  unint64_t v14 = v35;
  *(void *)&long long v48 = v35;
  *((void *)&v48 + 1) = v41;
  uint64_t v33 = v7;
  *(void *)&long long v49 = v7;
  *((void *)&v49 + 1) = v8;
  unint64_t v15 = v39;
  *(void *)&long long v50 = v39;
  BYTE8(v50) = v38;
  *(void *)&long long v51 = v10;
  *((void *)&v51 + 1) = v9;
  *(void *)&long long v52 = v37;
  *((void *)&v52 + 1) = v11;
  char v53 = v40;
  sub_1DFDFFB10();
  uint64_t v31 = v9;
  uint64_t v30 = v8;
  long long v16 = v44[0];
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v28 = sub_1DEA08668();
  *(void *)(v13 + 64) = v28;
  *(_OWORD *)(v13 + 32) = v16;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v43 + 16);
  uint64_t v17 = swift_allocObject();
  uint64_t v27 = v4;
  *(void *)(v17 + 16) = v4;
  *(void *)(v17 + 24) = v5;
  uint64_t v18 = v42;
  *(void *)(v17 + 32) = v42;
  char v19 = v32;
  *(unsigned char *)(v17 + 40) = v32;
  *(void *)(v17 + 48) = v14;
  uint64_t v20 = v33;
  *(void *)(v17 + 56) = v41;
  *(void *)(v17 + 64) = v20;
  *(void *)(v17 + 72) = v8;
  *(void *)(v17 + 80) = v15;
  LOBYTE(v13) = v38;
  *(unsigned char *)(v17 + 88) = v38;
  uint64_t v21 = v31;
  *(void *)(v17 + 96) = v10;
  *(void *)(v17 + 104) = v21;
  uint64_t v22 = v37;
  *(void *)(v17 + 112) = v37;
  *(void *)(v17 + 120) = v11;
  unint64_t v35 = v17 | 0xA000000000000006;
  *(unsigned char *)(v17 + 128) = v40;
  uint64_t v23 = sub_1DFDEAB40();
  uint64_t v24 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v36, 1, 1, v23);
  *(void *)&long long v48 = 0;
  long long v46 = 0u;
  long long v47 = 0u;
  uint64_t v45 = 0;
  memset(v44, 0, sizeof(v44));
  swift_retain();
  uint64_t v40 = v5;
  swift_bridgeObjectRetain();
  sub_1DEB2EF54(v18, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DEB2EF78(v39, v13);
  id v25 = v22;
  swift_bridgeObjectRetain();
  sub_1DFBB5128(v35, 0, v24, (uint64_t)&v46, 0, 0, 0, 0, (uint64_t)v44);
  swift_release();
  sub_1DE933224((uint64_t)v44, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
  sub_1DE933224((uint64_t)&v46, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
  sub_1DEBFF970(v24);
  swift_release();
  swift_release();
  char v53 = 0;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v46 = 0u;
  swift_retain();
  sub_1DFDECF60();
  return swift_release();
}

uint64_t sub_1DF01DB08()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContinueReadingPromptPresenter()
{
  return self;
}

void sub_1DF01DB74()
{
  if (!qword_1EBAD94B8)
  {
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAD94B8);
    }
  }
}

uint64_t sub_1DF01DBCC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1DF01DC04(uint64_t a1)
{
}

void sub_1DF01DC0C(char *a1)
{
}

uint64_t sub_1DF01DC14()
{
  return sub_1DF01D120();
}

void sub_1DF01DC1C(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1DEB2F130(a3, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DEB2F154(a9, a10 & 1);
    swift_bridgeObjectRelease();
  }
}

void sub_1DF01DCD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF01DD34()
{
  swift_bridgeObjectRelease();
  sub_1DEB2F130(*(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DEB2F154(*(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DF01DDA4()
{
  if (qword_1EBAEA6D8 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  return sub_1DFDF00C0();
}

void sub_1DF01DE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DFDF5B20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v41 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF5B30();
  uint64_t v40 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (void *)((char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DECD3D64();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1DFDFA6C0();
  uint64_t v14 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  long long v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1E01EFB70](a3 + 16);
  if (v17)
  {
    uint64_t v18 = (char *)v17;
    uint64_t v37 = v8;
    uint64_t v38 = v6;
    uint64_t v39 = v5;
    if (qword_1EBAEA6D8 != -1) {
      swift_once();
    }
    sub_1DFDFEA40();
    sub_1DEA086BC();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1DFE0B250;
    uint64_t v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    uint64_t v43 = a2;
    sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
    sub_1DFDFFB10();
    uint64_t v20 = v44;
    unint64_t v21 = v45;
    *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v19 + 64) = sub_1DEA08668();
    *(void *)(v19 + 32) = v20;
    *(void *)(v19 + 40) = v21;
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v22 = OBJC_IVAR____TtC7NewsUI222MySportsViewController_offlineManager;
    sub_1DFDFAC30();
    uint64_t v23 = v14;
    uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v25 = v42;
    if (v24(v13, 1, v42) == 1)
    {

      sub_1DECD5C30((uint64_t)v13);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v16, v13, v25);
      uint64_t v36 = v23;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      v35[1] = *(void *)&v18[OBJC_IVAR____TtC7NewsUI222MySportsViewController_coverViewManager];
      void v35[2] = v22;
      *uint64_t v10 = sub_1DFDFA690();
      v10[1] = v26;
      uint64_t v27 = sub_1DFDF0630();
      uint64_t v28 = MEMORY[0x1E4FABBF0];
      _WORD v10[5] = v27;
      v10[6] = v28;
      __swift_allocate_boxed_opaque_existential_1(v10 + 2);
      sub_1DFDF0620();
      v10[7] = sub_1DFDFA670();
      v10[8] = v29;
      uint64_t v30 = v40;
      uint64_t v31 = v37;
      (*(void (**)(uint64_t *, void, uint64_t))(v40 + 104))(v10, *MEMORY[0x1E4FAD870], v37);
      uint64_t v33 = v38;
      uint64_t v32 = v39;
      uint64_t v34 = v41;
      (*(void (**)(char *, void, uint64_t))(v38 + 104))(v41, *MEMORY[0x1E4FAD888], v39);
      sub_1DFDF1750();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
      (*(void (**)(uint64_t *, uint64_t))(v30 + 8))(v10, v31);
      swift_allocObject();
      swift_unknownObjectWeakInit();

      swift_release();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v25);
    }
  }
}

void sub_1DF01E36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF5B20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF5B30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DECD3D64();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE22AB4(a1, (uint64_t)v14);
  uint64_t v15 = sub_1DFDFA6C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15) == 1)
  {
    sub_1DECD5C30((uint64_t)v14);
    swift_beginAccess();
    uint64_t v16 = MEMORY[0x1E01EFB70](a2 + 16);
    if (v16)
    {
      uint64_t v17 = (char *)v16;
      if (qword_1EBAEA6D8 != -1) {
        swift_once();
      }
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      id v18 = *(id *)&v17[OBJC_IVAR____TtC7NewsUI222MySportsViewController_offlineManager];

      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAD860], v8);
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAD880], v4);
      sub_1DFDF1750();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v20 = OBJC_IVAR____TtC7NewsUI222MySportsViewController_promiseViewController;
      unint64_t v21 = *(void **)&v17[OBJC_IVAR____TtC7NewsUI222MySportsViewController_promiseViewController];
      if (!v21) {
        goto LABEL_8;
      }
      id v22 = v21;
      objc_msgSend(v22, sel_willMoveToParentViewController_, 0);
      objc_msgSend(v22, sel_removeFromParentViewController);
      id v23 = objc_msgSend(v22, sel_view);
      if (v23)
      {
        uint64_t v24 = v23;
        objc_msgSend(v23, sel_removeFromSuperview);

        objc_msgSend(v22, sel_didMoveToParentViewController_, 0);
        uint64_t v25 = *(void **)&v17[v20];
        *(void *)&v17[v20] = 0;

LABEL_8:
        sub_1DF01E73C(v19);

        return;
      }
      __break(1u);
    }
  }
  else
  {
    sub_1DECD5C30((uint64_t)v14);
  }
}

void sub_1DF01E73C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDF22A0();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = OBJC_IVAR____TtC7NewsUI222MySportsViewController_promiseViewController;
  if (!*(void *)&v0[OBJC_IVAR____TtC7NewsUI222MySportsViewController_promiseViewController])
  {
    uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC7NewsUI222MySportsViewController_viewControllerFactory];
    uint64_t v29 = *(void *)&v0[OBJC_IVAR____TtC7NewsUI222MySportsViewController_feedConfiguration];
    uint64_t v30 = v4;
    uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC7NewsUI222MySportsViewController_feedViewContext];
    uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC7NewsUI222MySportsViewController_viewControllerIdentifier + 8];
    sub_1DEDE34A0((uint64_t)&v0[OBJC_IVAR____TtC7NewsUI222MySportsViewController_referralContext], (uint64_t)v31);
    swift_unknownObjectWeakInit();
    sub_1DEE22A6C((uint64_t)v31, (void (*)(void, void, void, void, void))sub_1DED2369C);
    swift_unknownObjectWeakDestroy();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = sub_1DFDF28B0();
    MEMORY[0x1F4188790](v7);
    *(&v29 - 6) = v30;
    *(&v29 - 5) = v5;
    *(&v29 - 4) = v29;
    *(&v29 - 3) = (uint64_t)v31;
    uint64_t v28 = v6;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1DFDF2290();
    uint64_t v27 = &v29 - 8;
    uint64_t v8 = (void *)sub_1DFDF2870();
    swift_release();
    sub_1DEE22A6C((uint64_t)v31, (void (*)(void, void, void, void, void))sub_1DED236B0);
    uint64_t v9 = *(void **)&v1[v3];
    *(void *)&v1[v3] = v8;
    id v10 = v8;

    objc_msgSend(v1, sel_addChildViewController_, v10);
    id v11 = objc_msgSend(v10, sel_view);
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = objc_msgSend(v1, sel_view);
      if (v13)
      {
        uint64_t v14 = v13;
        objc_msgSend(v13, sel_bounds);
        double v16 = v15;
        double v18 = v17;
        double v20 = v19;
        double v22 = v21;

        objc_msgSend(v12, sel_setFrame_, v16, v18, v20, v22);
        id v23 = objc_msgSend(v1, sel_view);
        if (v23)
        {
          uint64_t v24 = v23;
          id v25 = objc_msgSend(v10, sel_view);
          if (v25)
          {
            uint64_t v26 = v25;
            objc_msgSend(v24, sel_addSubview_, v25);

            objc_msgSend(v10, sel_didMoveToParentViewController_, v1);
            return;
          }
LABEL_11:
          __break(1u);
          return;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

void sub_1DF01EBAC()
{
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_viewDidLayoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI222MySportsViewController_promiseViewController];
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_view);
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = objc_msgSend(v0, sel_view);
      if (v4)
      {
        uint64_t v5 = v4;
        objc_msgSend(v4, sel_bounds);
        double v7 = v6;
        double v9 = v8;
        double v11 = v10;
        double v13 = v12;

        objc_msgSend(v3, sel_setFrame_, v7, v9, v11, v13);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t type metadata accessor for MySportsViewController()
{
  return self;
}

void sub_1DF01EDE4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(*v1 + OBJC_IVAR____TtC7NewsUI222MySportsViewController_promiseViewController);
  if (v3)
  {
    id v7 = v3;
    sub_1DFDF2860();
  }
  else
  {
    uint64_t v4 = *MEMORY[0x1E4FABAD8];
    uint64_t v5 = sub_1DFDF0380();
    double v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
    v6(a1, v4, v5);
  }
}

uint64_t sub_1DF01EEAC()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC7NewsUI222MySportsViewController_viewControllerIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1DF01EEEC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7NewsUI222MySportsViewController_promiseViewController);
  if (v1)
  {
    id v2 = v1;
    sub_1DFDF2890();
  }
}

unint64_t sub_1DF01EF58()
{
  unint64_t result = qword_1EBAD97B8;
  if (!qword_1EBAD97B8)
  {
    type metadata accessor for MySportsViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD97B8);
  }
  return result;
}

id sub_1DF01EFAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, long long *a7)
{
  double v8 = v7;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  long long v26 = *a7;
  uint64_t v24 = *((void *)a7 + 3);
  uint64_t v25 = *((void *)a7 + 2);
  char v23 = *((unsigned char *)a7 + 32);
  *(void *)&v8[OBJC_IVAR____TtC7NewsUI222MySportsViewController_promiseViewController] = 0;
  uint64_t v16 = OBJC_IVAR____TtC7NewsUI222MySportsViewController_coverViewManager;
  sub_1DFDF1780();
  swift_allocObject();
  double v17 = v8;
  *(void *)&v8[v16] = sub_1DFDF1770();
  *(void *)&v17[OBJC_IVAR____TtC7NewsUI222MySportsViewController_feedConfiguration] = a1;
  *(void *)&v17[OBJC_IVAR____TtC7NewsUI222MySportsViewController_feedViewContext] = a2;
  double v18 = &v17[OBJC_IVAR____TtC7NewsUI222MySportsViewController_viewControllerIdentifier];
  *(void *)double v18 = a3;
  *((void *)v18 + 1) = a4;
  *(void *)&v17[OBJC_IVAR____TtC7NewsUI222MySportsViewController_viewControllerFactory] = a5;
  *(void *)&v17[OBJC_IVAR____TtC7NewsUI222MySportsViewController_offlineManager] = a6;
  double v19 = &v17[OBJC_IVAR____TtC7NewsUI222MySportsViewController_referralContext];
  *(_OWORD *)double v19 = v26;
  *((void *)v19 + 2) = v25;
  *((void *)v19 + 3) = v24;
  v19[32] = v23;
  id v20 = a2;
  swift_retain();
  id v21 = a6;

  v28.receiver = v17;
  v28.super_class = ObjectType;
  return objc_msgSendSuper2(&v28, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1DF01F110()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DF01F148(uint64_t a1, uint64_t a2)
{
  sub_1DF01DE34(a1, a2, v2);
}

void sub_1DF01F150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DFA7A8C0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56));
}

void sub_1DF01F180(uint64_t a1)
{
  sub_1DF01E36C(a1, v1);
}

uint64_t MagazineSectionKind.identifier.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  if (!*(unsigned char *)(v0 + 16))
  {
    uint64_t v8 = 0x79726F6765746163;
    sub_1DEC0AA20(v1, v2, 0);
    sub_1DFDFDE90();
    uint64_t v4 = v1;
    uint64_t v5 = v2;
    char v6 = 0;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v8 = 0x3A64656546676174;
    sub_1DEC0AA20(v1, v2, 1);
    id v3 = objc_msgSend(v1, sel_identifier);
    sub_1DFDFDD20();

    sub_1DFDFDE90();
    swift_bridgeObjectRelease();
    uint64_t v4 = v1;
    uint64_t v5 = v2;
    char v6 = 1;
LABEL_5:
    sub_1DEC0AA40(v4, v5, v6);
    return v8;
  }
  uint64_t result = 0x676F6C61746163;
  switch((unint64_t)v1)
  {
    case 1uLL:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 2uLL:
      uint64_t result = 0x656E697A6167616DLL;
      break;
    case 3uLL:
      uint64_t result = 0x697A6167614D796DLL;
      break;
    case 4uLL:
      uint64_t result = 0x657061707377656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s7NewsUI219MagazineSectionKindO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a1;
  uint64_t v2 = *(void **)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v6 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 != 1)
    {
      switch((unint64_t)v3)
      {
        case 1uLL:
          if (v7 != 2 || v6 != 1 || v5 != 0) {
            goto LABEL_6;
          }
          sub_1DEC0AA40(*(void **)a1, v2, 2);
          char v10 = 1;
          sub_1DEC0AA40((void *)1, 0, 2);
          return v10 & 1;
        case 2uLL:
          if (v7 != 2 || v6 != 2 || v5 != 0) {
            goto LABEL_6;
          }
          sub_1DEC0AA40(*(void **)a1, v2, 2);
          uint64_t v12 = 2;
          goto LABEL_56;
        case 3uLL:
          if (v7 != 2 || v6 != 3 || v5 != 0) {
            goto LABEL_6;
          }
          sub_1DEC0AA40(*(void **)a1, v2, 2);
          uint64_t v12 = 3;
          goto LABEL_56;
        case 4uLL:
          if (v7 != 2 || v6 != 4 || v5 != 0) {
            goto LABEL_6;
          }
          sub_1DEC0AA40(*(void **)a1, v2, 2);
          uint64_t v12 = 4;
          goto LABEL_56;
        default:
          if (v7 != 2 || (v5 | v6) != 0) {
            goto LABEL_6;
          }
          sub_1DEC0AA40(*(void **)a1, v2, 2);
          uint64_t v12 = 0;
LABEL_56:
          sub_1DEC0AA40((void *)v12, 0, 2);
          char v10 = 1;
          break;
      }
      return v10 & 1;
    }
    if (v7 == 1)
    {
      sub_1DEB20C50();
      sub_1DEC0AA20((id)v6, (id)v5, 1);
      sub_1DEC0AA20(v3, v2, 1);
      char v8 = sub_1DFDFF550();
      sub_1DEC0AA40(v3, v2, 1);
      sub_1DEC0AA40((void *)v6, (id)v5, 1);
      return v8 & 1;
    }
  }
  else if (!*(unsigned char *)(a2 + 16))
  {
    if (v3 == (id)v6 && v2 == (void *)v5) {
      char v10 = 1;
    }
    else {
      char v10 = sub_1DFDFFF50();
    }
    sub_1DEC0AA20((id)v6, (id)v5, 0);
    sub_1DEC0AA20(v3, v2, 0);
    sub_1DEC0AA40(v3, v2, 0);
    sub_1DEC0AA40((void *)v6, (id)v5, 0);
    return v10 & 1;
  }
LABEL_6:
  sub_1DEC0AA20(*(id *)a2, *(id *)(a2 + 8), v7);
  sub_1DEC0AA20(v3, v2, v4);
  sub_1DEC0AA40(v3, v2, v4);
  sub_1DEC0AA40((void *)v6, (id)v5, v7);
  char v10 = 0;
  return v10 & 1;
}

void destroy for MagazineSectionKind(uint64_t a1)
{
}

uint64_t _s7NewsUI219MagazineSectionKindOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1DEC0AA20(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MagazineSectionKind(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1DEC0AA20(*(id *)a2, v4, v5);
  unint64_t v6 = *(void **)a1;
  int v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1DEC0AA40(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MagazineSectionKind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  int v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1DEC0AA40(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for MagazineSectionKind()
{
  return &type metadata for MagazineSectionKind;
}

uint64_t sub_1DF01F718()
{
  uint64_t v0 = sub_1DFDF4480();
  uint64_t v23 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1DFDEA1F0();
  uint64_t v3 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  char v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDEC470();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1DFDEC450();
  uint64_t v10 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(v25 + 16);
  uint64_t v13 = sub_1DFDF4250();
  v22[0] = v14;
  v22[1] = v13;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F7CF48], v6);
  sub_1DFDF4260();
  uint64_t v15 = v23;
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v2, v0);
  if (v16 == *MEMORY[0x1E4FAD388])
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F7B2B0], v24);
  }
  else
  {
    double v17 = *(void (**)(char *, void, uint64_t))(v3 + 104);
    if (v16 == *MEMORY[0x1E4FAD398] || v16 == *MEMORY[0x1E4FAD3A0] || v16 == *MEMORY[0x1E4FAD390])
    {
      v17(v5, *MEMORY[0x1E4F7B260], v24);
    }
    else
    {
      v17(v5, *MEMORY[0x1E4F7B298], v24);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v0);
    }
  }
  sub_1DFDEC440();
  sub_1DF01FBC8((unint64_t *)&qword_1EBAA7370, MEMORY[0x1E4F7CF00]);
  uint64_t v20 = v26;
  sub_1DFDE8880();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  return sub_1DFDE87C0();
}

uint64_t sub_1DF01FB0C()
{
  sub_1DFDEC6C0();
  sub_1DF01FBC8((unint64_t *)&unk_1EBAA73C0, MEMORY[0x1E4F7D420]);
  memset(v1, 0, sizeof(v1));
  sub_1DFDE83B0();
  return sub_1DE9E4C20((uint64_t)v1);
}

uint64_t type metadata accessor for SportsFavoritesTracker()
{
  return self;
}

uint64_t sub_1DF01FBC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF01FC10@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  sub_1DFDF2AC0();
  double v5 = v4;
  sub_1DFDF2AB0();
  double v7 = v5 - v6;
  sub_1DFDF2AB0();
  double v9 = v7 - v8;
  uint64_t v10 = (int *)type metadata accessor for ChannelIssuesGroupTitleViewLayoutOptions();
  uint64_t v11 = a1 + v10[7];
  sub_1DEA66C20();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  uint64_t v13 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  sub_1DFDF9E80();
  uint64_t v14 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  swift_bridgeObjectRetain();
  id v15 = v13;
  int v16 = (void *)sub_1DFDFF360();
  double v17 = (void *)sub_1DFDFF370();

  uint64_t v18 = sub_1DFDF9E60();
  *(void *)(inited + 40) = v18;
  double v19 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v19;
  uint64_t v20 = self;
  id v21 = v19;
  id v22 = objc_msgSend(v20, sel_blackColor);
  id v23 = objc_msgSend(v20, sel_whiteColor);
  id v24 = objc_msgSend(v20, sel_ts_dynamicColor_withDarkStyleVariant_, v22, v23);

  *(void *)(inited + 104) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  *(void *)(inited + 80) = v24;
  sub_1DEA65870(inited);
  id v25 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v26 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DEA66BC8();
  uint64_t v27 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v25, sel_initWithString_attributes_, v26, v27);

  objc_msgSend(v28, sel_boundingRectWithSize_options_context_, 33, 0, v9, 1.79769313e308);
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;
  sub_1DFDF2AB0();
  CGFloat v38 = v37;
  CGFloat v39 = *(double *)(a1 + v10[5]);
  v49.origin.x = v30;
  v49.origin.y = v32;
  v49.size.width = v34;
  v49.size.height = v36;
  CGFloat Width = CGRectGetWidth(v49);
  v50.origin.x = v30;
  v50.origin.y = v32;
  v50.size.width = v34;
  v50.size.height = v36;
  CGFloat Height = CGRectGetHeight(v50);
  sub_1DFDF2AC0();
  uint64_t v43 = v42;
  v51.origin.x = v38;
  v51.origin.y = v39;
  v51.size.width = Width;
  v51.size.height = Height;
  double MaxY = CGRectGetMaxY(v51);

  double v45 = MaxY + *(double *)(a1 + v10[6]);
  uint64_t v46 = a2 + *(int *)(type metadata accessor for ChannelIssuesGroupTitleViewLayoutAttributes() + 24);
  uint64_t v47 = sub_1DFDE81B0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v46, v11, v47);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v43;
  *(double *)(a2 + 24) = v45;
  *(CGFloat *)(a2 + 32) = v38;
  *(CGFloat *)(a2 + 40) = v39;
  *(CGFloat *)(a2 + 48) = Width;
  *(CGFloat *)(a2 + 56) = Height;
  return result;
}

uint64_t type metadata accessor for ChannelIssuesGroupTitleViewLayoutAttributesFactory()
{
  return self;
}

uint64_t *sub_1DF01FFF8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDFAA20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    v13[2] = v14[2];
    uint64_t v13[3] = v16;
    uint64_t v17 = v14[5];
    v13[4] = v14[4];
    v13[5] = v17;
    uint64_t v18 = a3[7];
    double v19 = (char *)a1 + v18;
    id v24 = (char *)a2 + v18;
    uint64_t v20 = sub_1DFDFA3D0();
    id v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v19, v24, v20);
  }
  return a1;
}

uint64_t sub_1DF020184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFAA20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_1DFDFA3D0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_1DF02026C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDFAA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v13[3];
  void v12[2] = v13[2];
  v12[3] = v15;
  uint64_t v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  uint64_t v17 = a3[7];
  uint64_t v22 = a1 + v17;
  uint64_t v18 = a2 + v17;
  uint64_t v19 = sub_1DFDFA3D0();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v22, v18, v19);
  return a1;
}

uint64_t sub_1DF0203A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDFAA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[4] = v12[4];
  v11[5] = v12[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1DFDFA3D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t sub_1DF020510(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDFAA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (long long *)(a2 + v7);
  long long v10 = v9[2];
  long long v11 = *v9;
  v8[1] = v9[1];
  _OWORD v8[2] = v10;
  _OWORD *v8 = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1DFDFA3D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t sub_1DF0205EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDFAA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  long long v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = *(void *)(a2 + v10 + 8);
  void *v11 = *(void *)(a2 + v10);
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = v12[3];
  v11[2] = v12[2];
  v11[3] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v12[5];
  v11[4] = v12[4];
  v11[5] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1DFDFA3D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_1DF020714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF020728);
}

uint64_t sub_1DF020728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDFAA20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1DFDFA3D0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1DF020854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF020868);
}

uint64_t sub_1DF020868(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DFDFAA20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1DFDFA3D0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1DF020994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v41 = a5;
  sub_1DF02168C(a4, (uint64_t)v42);
  uint64_t v33 = v42[0];
  unint64_t v34 = v42[1];
  uint64_t v35 = v42[2];
  unint64_t v36 = v42[3];
  uint64_t v37 = v42[4];
  unint64_t v38 = v42[5];
  sub_1DF021538();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDFA3D0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v40 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DFDFAA20();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  uint64_t v39 = a1;
  v19(a6, a1, v17);
  if (!a2)
  {
    a2 = sub_1DF3BFF80((uint64_t)&unk_1F3A66D40);
    swift_arrayDestroy();
    a3 = sub_1DF3BFF80((uint64_t)&unk_1F3A66D80);
    swift_arrayDestroy();
  }
  uint64_t v20 = (int *)type metadata accessor for IntroToSportsTodayFeedGroupConfigData();
  id v21 = (uint64_t *)(a6 + v20[5]);
  *id v21 = a2;
  v21[1] = a3;
  sub_1DF02168C(a4, (uint64_t)v43);
  if (v44)
  {
    id v23 = v40;
    uint64_t v22 = v41;
    uint64_t v25 = v37;
    unint64_t v24 = v38;
    uint64_t v27 = v35;
    unint64_t v26 = v36;
    uint64_t v29 = v33;
    unint64_t v28 = v34;
  }
  else
  {
    unint64_t v24 = 0xEA00000000006C72;
    uint64_t v25 = 0x752D726564616568;
    unint64_t v26 = 0xEF656C7469746275;
    uint64_t v27 = 0x732D726564616568;
    unint64_t v28 = 0xEC000000656C7469;
    uint64_t v29 = 0x742D726564616568;
    id v23 = v40;
    uint64_t v22 = v41;
  }
  CGFloat v30 = (uint64_t *)(a6 + v20[6]);
  *CGFloat v30 = v29;
  v30[1] = v28;
  v30[2] = v27;
  v30[3] = v26;
  v30[4] = v25;
  v30[5] = v24;
  sub_1DF0217D0(v22, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1DFDFA3C0();
    sub_1DF021834(v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v39, v17);
    sub_1DF021834((uint64_t)v13);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a6 + v20[7], v23, v14);
  }
  else
  {
    sub_1DF021834(v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v39, v17);
    CGFloat v32 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v32(v23, v13, v14);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(a6 + v20[7], v23, v14);
  }
}

uint64_t sub_1DF020D10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  sub_1DF021538();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDFAA20();
  uint64_t v28 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF021890(0, &qword_1EBAEABA0, MEMORY[0x1E4FBBDC0]);
  uint64_t v30 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v23 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF021590();
  uint64_t v29 = v12;
  uint64_t v13 = v31;
  sub_1DFE00190();
  if (v13)
  {
    uint64_t v22 = (uint64_t)a1;
  }
  else
  {
    unint64_t v26 = v5;
    double v31 = a1;
    uint64_t v14 = v10;
    v32[0] = 0;
    sub_1DE9CB0C0(&qword_1EBABA3B8, MEMORY[0x1E4F80948]);
    uint64_t v15 = v29;
    uint64_t v16 = v30;
    sub_1DFDFFD90();
    uint64_t v17 = (uint64_t)v8;
    v32[0] = 1;
    sub_1DF0215E4();
    sub_1DFDFFD40();
    uint64_t v19 = v33;
    uint64_t v18 = v34;
    char v36 = 2;
    sub_1DF021638();
    sub_1DFDFFD40();
    uint64_t v24 = v19;
    uint64_t v25 = v18;
    sub_1DF02168C((uint64_t)v32, (uint64_t)v35);
    sub_1DFDFA3D0();
    char v36 = 3;
    sub_1DE9CB0C0(&qword_1EBAE9C80, MEMORY[0x1E4F80728]);
    uint64_t v20 = (uint64_t)v26;
    sub_1DFDFFD40();
    sub_1DF020994(v17, v24, v25, (uint64_t)v35, v20, v27);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
    uint64_t v22 = (uint64_t)v31;
  }
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_1DF021114(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF021890(0, &qword_1EBAEAD38, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF021590();
  sub_1DFE001A0();
  LOBYTE(v17[0]) = 0;
  sub_1DFDFAA20();
  sub_1DE9CB0C0(&qword_1EBABA3B0, MEMORY[0x1E4F80948]);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for IntroToSportsTodayFeedGroupConfigData();
    v17[0] = *(_OWORD *)(v3 + *(int *)(v10 + 20));
    char v20 = 1;
    sub_1DF0218F4();
    sub_1DFDFFE80();
    uint64_t v11 = (long long *)(v3 + *(int *)(v10 + 24));
    long long v12 = *v11;
    long long v13 = v11[1];
    uint64_t v15 = *((void *)v11 + 4);
    uint64_t v14 = *((void *)v11 + 5);
    v17[0] = v12;
    v17[1] = v13;
    uint64_t v18 = v15;
    uint64_t v19 = v14;
    char v20 = 2;
    sub_1DF021948();
    sub_1DFDFFE80();
    LOBYTE(v17[0]) = 3;
    sub_1DFDFA3D0();
    sub_1DE9CB0C0(&qword_1EBAE9C78, MEMORY[0x1E4F80728]);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DF0213C0()
{
  unint64_t result = 0x746E65746E6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x4372616365646973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF021468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF021BA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF021490(uint64_t a1)
{
  unint64_t v2 = sub_1DF021590();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF0214CC(uint64_t a1)
{
  unint64_t v2 = sub_1DF021590();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF021508@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF020D10(a1, a2);
}

uint64_t sub_1DF021520(void *a1)
{
  return sub_1DF021114(a1);
}

void sub_1DF021538()
{
  if (!qword_1EBAE9C88)
  {
    sub_1DFDFA3D0();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9C88);
    }
  }
}

unint64_t sub_1DF021590()
{
  unint64_t result = qword_1EBAE6E60;
  if (!qword_1EBAE6E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6E60);
  }
  return result;
}

unint64_t sub_1DF0215E4()
{
  unint64_t result = qword_1EBADC1F8;
  if (!qword_1EBADC1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADC1F8);
  }
  return result;
}

unint64_t sub_1DF021638()
{
  unint64_t result = qword_1EBADC180;
  if (!qword_1EBADC180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADC180);
  }
  return result;
}

uint64_t sub_1DF02168C(uint64_t a1, uint64_t a2)
{
  sub_1DF0216F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DF0216F0()
{
  if (!qword_1EBADC188)
  {
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBADC188);
    }
  }
}

uint64_t *sub_1DF021748(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1DF021780(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DF0217D0(uint64_t a1, uint64_t a2)
{
  sub_1DF021538();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF021834(uint64_t a1)
{
  sub_1DF021538();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DF021890(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF021590();
    unint64_t v7 = a3(a1, &type metadata for IntroToSportsTodayFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DF0218F4()
{
  unint64_t result = qword_1EBADC1F0;
  if (!qword_1EBADC1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADC1F0);
  }
  return result;
}

unint64_t sub_1DF021948()
{
  unint64_t result = qword_1EBADC178;
  if (!qword_1EBADC178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADC178);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IntroToSportsTodayFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF021A68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntroToSportsTodayFeedGroupConfigData.CodingKeys()
{
  return &type metadata for IntroToSportsTodayFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF021AA4()
{
  unint64_t result = qword_1EAC278F8;
  if (!qword_1EAC278F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC278F8);
  }
  return result;
}

unint64_t sub_1DF021AFC()
{
  unint64_t result = qword_1EBAE6E70;
  if (!qword_1EBAE6E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6E70);
  }
  return result;
}

unint64_t sub_1DF021B54()
{
  unint64_t result = qword_1EBAE6E68;
  if (!qword_1EBAE6E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6E68);
  }
  return result;
}

uint64_t sub_1DF021BA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DFEDBCB0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFEDBCD0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4372616365646973 && a2 == 0xED00006769666E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DF021D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (a2
    && (a1 == 0xD000000000000016 && a2 == 0x80000001DFEDBD30
     || (sub_1DFDFFF50() & 1) != 0
     || v3 == 0xD000000000000010 && a2 == 0x80000001DFEDBD10
     || (sub_1DFDFFF50() & 1) != 0
     || v3 == 0xD00000000000001CLL && a2 == 0x80000001DFEDBCF0
     || (sub_1DFDFFF50() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

ValueMetadata *type metadata accessor for LocalNewsTodayFeedGroupEmitterCursor()
{
  return &type metadata for LocalNewsTodayFeedGroupEmitterCursor;
}

uint64_t sub_1DF021EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF021ECC);
}

uint64_t sub_1DF021ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEBE3100();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DF021F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF021FA0);
}

void sub_1DF021FA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEBE3100();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for SportsOnboardingTagFeedGroupKnobs()
{
  uint64_t result = qword_1EBAE43A0;
  if (!qword_1EBAE43A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF0220A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  sub_1DEC49A20();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBE3100();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DED26B68(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    type metadata accessor for TagFeedServiceConfig();
    sub_1DEAD9650(&qword_1EBAD8430, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
    sub_1DFDF8040();
    sub_1DED26BCC((uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a4, v15, v12);
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v16(v15, v10, v12);
    v16(a4, v15, v12);
  }
  if (!a2)
  {
    char v20 = 1;
    sub_1DEAC05D8();
    swift_allocObject();
    a2 = sub_1DFDF8C00();
  }
  uint64_t v17 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  *(void *)&a4[*(int *)(v17 + 20)] = a2;
  if (!a3)
  {
    uint64_t v19 = 7;
    sub_1DEA0F99C();
    swift_allocObject();
    a3 = sub_1DFDF8C00();
  }
  uint64_t result = sub_1DED26BCC(a1);
  *(void *)&a4[*(int *)(v17 + 24)] = a3;
  return result;
}

uint64_t sub_1DF022360@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1DEC49A20();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF022B14(0, &qword_1EBAEAB10, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF022AC0();
  sub_1DFE00190();
  if (!v2)
  {
    sub_1DEBE3100();
    LOBYTE(v18) = 0;
    sub_1DEAD9650((unint64_t *)&unk_1EBAE95D0, (void (*)(uint64_t))sub_1DEBE3100);
    sub_1DFDFFCD0();
    sub_1DEAC05D8();
    LOBYTE(v17) = 1;
    sub_1DEAD9650(&qword_1EBAE9898, (void (*)(uint64_t))sub_1DEAC05D8);
    sub_1DFDFFCD0();
    uint64_t v12 = v18;
    sub_1DEA0F99C();
    char v16 = 2;
    sub_1DEAD9650(&qword_1EBAE9920, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFCD0();
    sub_1DF0220A8((uint64_t)v6, v12, v17, v15);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF02262C(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF022B14(0, &qword_1EAC27900, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF022AC0();
  sub_1DFE001A0();
  LOBYTE(v13) = 0;
  sub_1DEBE3100();
  sub_1DEAD9650(&qword_1EAC22F98, (void (*)(uint64_t))sub_1DEBE3100);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 20));
    HIBYTE(v12) = 1;
    sub_1DEAC05D8();
    sub_1DEAD9650(&qword_1EBAE9890, (void (*)(uint64_t))sub_1DEAC05D8);
    sub_1DFDFFE80();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v12) = 2;
    sub_1DEA0F99C();
    sub_1DEAD9650(&qword_1EBAE9918, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF0228C4()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73656C7572;
  }
}

uint64_t sub_1DF022920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF022D84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF022948(uint64_t a1)
{
  unint64_t v2 = sub_1DF022AC0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF022984(uint64_t a1)
{
  unint64_t v2 = sub_1DF022AC0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF0229C0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1DF022360(a1, a2);
}

uint64_t sub_1DF0229D8(void *a1)
{
  return sub_1DF02262C(a1);
}

uint64_t sub_1DF0229F0()
{
  if ((sub_1DFDF80C0() & 1) == 0) {
    return 0;
  }
  sub_1DEAC05D8();
  if ((sub_1DFDF8BE0() & 1) == 0) {
    return 0;
  }
  sub_1DEA0F99C();
  return sub_1DFDF8BE0() & 1;
}

unint64_t sub_1DF022AC0()
{
  unint64_t result = qword_1EBAE4378;
  if (!qword_1EBAE4378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE4378);
  }
  return result;
}

void sub_1DF022B14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF022AC0();
    unint64_t v7 = a3(a1, &type metadata for SportsOnboardingTagFeedGroupKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsOnboardingTagFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF022C44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsOnboardingTagFeedGroupKnobs.CodingKeys()
{
  return &type metadata for SportsOnboardingTagFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DF022C80()
{
  unint64_t result = qword_1EAC27908;
  if (!qword_1EAC27908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27908);
  }
  return result;
}

unint64_t sub_1DF022CD8()
{
  unint64_t result = qword_1EBAE4388;
  if (!qword_1EBAE4388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE4388);
  }
  return result;
}

unint64_t sub_1DF022D30()
{
  unint64_t result = qword_1EBAE4380;
  if (!qword_1EBAE4380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE4380);
  }
  return result;
}

uint64_t sub_1DF022D84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFED5B10 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DFEDA2C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DF022EC8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1DFDEEC50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EBABD938 != -1) {
    swift_once();
  }
  sub_1DF024BAC(&qword_1EAC27978, v4, (void (*)(uint64_t))type metadata accessor for EmailSignupAutomaticPresentor);
  sub_1DFDE7EB0();
  if (v15[15] == 1)
  {
    swift_getObjectType();
    sub_1DFDEF2C0();
    char v7 = sub_1DFDEEC20();
    uint64_t v8 = (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
    if ((v7 & 1) == 0)
    {
      MEMORY[0x1F4188790](v8);
      *(void *)&v15[-16] = v1;
      sub_1DEAE82BC(0, (unint64_t *)&unk_1EBAA7960, (unint64_t *)&qword_1EBABAA60);
      swift_allocObject();
      uint64_t v10 = sub_1DFDEDF30();
      MEMORY[0x1F4188790](v10);
      *(void *)&v15[-16] = v1;
      sub_1DEAE82BC(0, (unint64_t *)&unk_1EBAA7990, (unint64_t *)&qword_1EBABAD48);
      swift_allocObject();
      uint64_t v11 = sub_1DFDEDF30();
      MEMORY[0x1F4188790](v11);
      *(void *)&v15[-16] = v1;
      sub_1DEA2080C(0, (unint64_t *)&unk_1EBAA7980, (uint64_t (*)(uint64_t))sub_1DF024C9C, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      sub_1DFDEDF30();
      sub_1DFDEE040();
      uint64_t v12 = (void *)sub_1DFDEDCE0();
      sub_1DFDEDE10();
      swift_release();

      uint64_t v13 = (void *)sub_1DFDEDCE0();
      uint64_t v9 = sub_1DFDEDED0();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      return v9;
    }
    if (qword_1EBAC0138 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    v15[13] = 0;
    sub_1DEADF114(0, (unint64_t *)&qword_1EBAA7950, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
    swift_allocObject();
  }
  else
  {
    if (qword_1EBAC0138 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    v15[14] = 0;
    sub_1DEADF114(0, (unint64_t *)&qword_1EBAA7950, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
    swift_allocObject();
  }
  return sub_1DFDEDE90();
}

void sub_1DF023414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = *(void **)&a5[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_userInfo];
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = sub_1DEB1D34C;
  void v10[3] = v8;
  v10[4] = a5;
  v13[4] = sub_1DF0258E8;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1DF0235EC;
  uint64_t v13[3] = &block_descriptor_42_1;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  uint64_t v12 = a5;
  swift_release();
  objc_msgSend(v9, sel_forceSyncWithCompletion_, v11);
  _Block_release(v11);
}

uint64_t sub_1DF023540(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  if (qword_1EBAC0138 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  return a3(*(void *)(a5 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_userInfo));
}

void sub_1DF0235EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1DF023664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = *(void **)(a5 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_bundleSubscriptionManager);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1DEABCBE4;
  *(void *)(v10 + 24) = v8;
  v12[4] = sub_1DF0258DC;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1DE9263D8;
  v12[3] = &block_descriptor_33_1;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_refreshBundleSubscriptionWithCachePolicy_completion_, 1, v11);
  _Block_release(v11);
}

uint64_t sub_1DF023784(void *a1, uint64_t (*a2)(void *))
{
  if (qword_1EBAC0138 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DEA2080C(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DFE0B250;
  id v5 = objc_msgSend(a1, sel_subscriptionState);
  uint64_t v6 = MEMORY[0x1E4FBB868];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB808];
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = v5;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  return a2(a1);
}

void sub_1DF0238F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = *(void **)&a5[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_newsletterManager];
  swift_retain();
  id v12 = objc_msgSend(v11, sel_updateSubscription);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = sub_1DEB1D34C;
  uint64_t v13[3] = v10;
  v13[4] = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1DF02583C;
  *(void *)(v14 + 24) = v13;
  uint64_t v25 = sub_1DF025848;
  uint64_t v26 = v14;
  uint64_t v21 = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_1DF023BF0;
  uint64_t v24 = &block_descriptor_63;
  uint64_t v15 = _Block_copy(&v21);
  char v16 = a5;
  swift_release();
  id v17 = objc_msgSend(v12, sel_then_, v15);
  _Block_release(v15);

  if (v17)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a3;
    *(void *)(v18 + 24) = a4;
    uint64_t v25 = sub_1DF025880;
    uint64_t v26 = v18;
    uint64_t v21 = MEMORY[0x1E4F143A8];
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_1DF75CEC8;
    uint64_t v24 = &block_descriptor_24_1;
    uint64_t v19 = _Block_copy(&v21);
    swift_retain();
    swift_release();
    id v20 = objc_msgSend(v17, sel_error_, v19);
    _Block_release(v19);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DF023B44(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  if (qword_1EBAC0138 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  return a2(*(void *)(a4 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_newsletterManager));
}

id sub_1DF023BF0(uint64_t a1, uint64_t a2)
{
  void (*v3)(void *__return_ptr, long long *);
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void v11[3];
  uint64_t v12;
  long long v13;
  long long v14;
  uint64_t vars8;

  uint64_t v3 = *(void (**)(void *__return_ptr, long long *))(a1 + 32);
  if (a2)
  {
    *((void *)&v14 + 1) = swift_getObjectType();
    *(void *)&uint64_t v13 = a2;
  }
  else
  {
    uint64_t v13 = 0u;
    uint64_t v14 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v3(v11, &v13);
  swift_release();
  sub_1DEA2CB7C((uint64_t)&v13, (uint64_t)&qword_1EBABB7F0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DEADF114);
  uint64_t v4 = v12;
  if (v12)
  {
    id v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_1DFDFFF30();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

void sub_1DF023DAC(id a1, void (*a2)(id))
{
  if (a1)
  {
    id v4 = a1;
  }
  else
  {
    sub_1DF025888();
    id v4 = (id)swift_allocError();
  }
  id v5 = a1;
  a2(v4);
}

uint64_t sub_1DF023E30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  id v4 = *(void **)(a1 + 8);
  id v5 = *(void **)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_emailSignupModelFactory + 24);
  uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_emailSignupModelFactory + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_emailSignupModelFactory), v6);
  uint64_t v8 = *(void **)(a2 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_featureAvailability);
  id v9 = v3;
  id v10 = v4;
  swift_unknownObjectRetain();
  (*(void (**)(uint64_t *__return_ptr, void *, id, uint64_t, uint64_t, uint64_t))(v7 + 8))(&v18, v5, objc_msgSend(v8, sel_useFineGrainedNewsletterManagement), 1, v6, v7);
  uint64_t v12 = v18;
  uint64_t v11 = v19;
  __int16 v13 = v20;
  int v14 = HIBYTE(v20);
  if (qword_1EBAC0138 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  sub_1DF024CF4(v9, v5);
  uint64_t v18 = v12;
  uint64_t v19 = v11;
  LOBYTE(v20) = v13;
  HIBYTE(v20) = v14;
  if (sub_1DF025424((uint64_t)&v18, v9, v5))
  {
    if (v14) {
      __int16 v15 = 256;
    }
    else {
      __int16 v15 = 0;
    }
    uint64_t v18 = v12;
    uint64_t v19 = v11;
    __int16 v20 = v15 | v13;
    swift_retain();
    sub_1DFDEDD20();
    swift_release();
    LOBYTE(v18) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v18) = 0;
  }
  sub_1DEADF114(0, (unint64_t *)&qword_1EBAA7950, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v16 = sub_1DFDEDE90();

  swift_unknownObjectRelease();
  return v16;
}

uint64_t sub_1DF024058()
{
  if (qword_1EBAC0138 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA2080C(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  swift_getErrorValue();
  uint64_t v1 = sub_1DFE00060();
  uint64_t v3 = v2;
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1DEA08668();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DEADF114(0, (unint64_t *)&qword_1EBAA7950, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

void sub_1DF0242FC(void (*a1)(void *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1E01EFB70](v5);
  if (!v6) {
    goto LABEL_9;
  }
  uint64_t v7 = (char *)v6;
  swift_retain();
  sub_1DFDEDD10();
  swift_release();
  uint64_t v8 = v23;
  if (v23 == 1)
  {
LABEL_8:

LABEL_9:
    uint64_t v18 = sub_1DFDF3540();
    sub_1DF024BAC((unint64_t *)&qword_1EAC27980, 255, MEMORY[0x1E4FACC00]);
    uint64_t v19 = (void *)swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4FACBF8], v18);
    a1(v19, 1);

    return;
  }
  uint64_t v9 = v24;
  __int16 v10 = v25;
  uint64_t v11 = MEMORY[0x1E01EFB70](&v7[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_delegate]);
  if (!v11)
  {
    sub_1DF024BF4(v23);
    goto LABEL_8;
  }
  uint64_t v12 = v11;
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v14 = (void *)swift_allocObject();
  void v14[2] = a1;
  v14[3] = a2;
  v14[4] = v13;
  uint64_t v15 = MEMORY[0x1E01EFB70](v12 + 16);
  if (v15)
  {
    uint64_t v16 = MEMORY[0x1E01EFB70](v15 + 16);
    if (v16)
    {
      __swift_project_boxed_opaque_existential_1((void *)(v16 + 48), *(void *)(v16 + 72));
      uint64_t v23 = v8;
      uint64_t v24 = v9;
      __int16 v25 = v10 & 0x101;
      swift_retain_n();
      swift_retain_n();
      id v17 = v7;
      sub_1DF7AEB74(&v23, (uint64_t)sub_1DF024C78, (uint64_t)v14);
      swift_release_n();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_retain_n();
      swift_retain_n();
      uint64_t v22 = v7;
      sub_1DF0246A0(2, (uint64_t (*)(void, void))a1, a2, v13);
      swift_release_n();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
    }
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    uint64_t v21 = v7;
    sub_1DF0246A0(2, (uint64_t (*)(void, void))a1, a2, v13);
    swift_release_n();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  sub_1DF024BF4(v8);
}

uint64_t sub_1DF0246A0(uint64_t a1, uint64_t (*a2)(void, void), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a4 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1E01EFB70](v6);
  if (v7)
  {
    uint64_t v8 = (char *)v7;
    if (objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_featureAvailability), sel_useFineGrainedNewsletterManagement))
    {
      uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_fineGrainedNewslettersHandler + 24];
      uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_fineGrainedNewslettersHandler + 32];
      __swift_project_boxed_opaque_existential_1(&v8[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_fineGrainedNewslettersHandler], v9);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v9, v10);
    }
  }
  return a2(0, 0);
}

uint64_t sub_1DF02477C()
{
  return sub_1DF022EC8();
}

void (*sub_1DF0247A0())(void (*a1)(void *, uint64_t), uint64_t a2)
{
  return sub_1DF024BA4;
}

id sub_1DF024830(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(v2 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_newsletterManager);
  id result = objc_msgSend(v4, sel_isSubscribed);
  if (result)
  {
    if (a2)
    {
      if (a2 != 1) {
        return result;
      }
      uint64_t v6 = &selRef_optIntoSports;
    }
    else
    {
      uint64_t v6 = &selRef_optOutOfSports;
    }
    uint64_t v7 = *v6;
    return [v4 v7];
  }
  return result;
}

uint64_t sub_1DF0248C0(uint64_t a1, uint64_t a2)
{
  return sub_1DF024BAC(&qword_1EAC27978, a2, (void (*)(uint64_t))type metadata accessor for EmailSignupAutomaticPresentor);
}

id sub_1DF024908(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v11[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v18 = OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor__cachedModel;
  long long v32 = xmmword_1DFE14320;
  __int16 v33 = 0;
  sub_1DEAE8728();
  swift_allocObject();
  uint64_t v19 = v11;
  *(void *)&v11[v18] = sub_1DFDEDCF0();
  *(void *)&v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_appleAccount] = a1;
  *(void *)&v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_userInfo] = a2;
  *(void *)&v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_appConfigurationManager] = a3;
  *(void *)&v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_bundleSubscriptionManager] = a4;
  *(void *)&v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_newsletterManager] = a5;
  sub_1DE94F204(a6, (uint64_t)&v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_emailSignupModelFactory]);
  sub_1DE94F204((uint64_t)a7, (uint64_t)&v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_sportsOnboardingManager]);
  sub_1DE94F204(a8, (uint64_t)&v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_fineGrainedNewslettersHandler]);
  *(void *)&v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_featureAvailability] = a9;
  uint64_t v20 = &v19[OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_appLaunchMethodChecker];
  *(void *)uint64_t v20 = a10;
  *((void *)v20 + 1) = a11;
  swift_unknownObjectRetain();
  id v21 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  v31.receiver = v19;
  v31.super_class = ObjectType;
  id v22 = objc_msgSendSuper2(&v31, sel_init);
  objc_msgSend(a4, sel_addObserver_, v22);
  uint64_t v23 = a7[4];
  __swift_project_boxed_opaque_existential_1(a7, a7[3]);
  uint64_t v24 = *(void (**)(void))(v23 + 48);
  id v25 = v22;
  v24();

  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1(a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a7);
  return v25;
}

uint64_t sub_1DF024B6C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DF024BA4(void (*a1)(void *, uint64_t), uint64_t a2)
{
  sub_1DF0242FC(a1, a2, v2);
}

uint64_t sub_1DF024BAC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF024BF4(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DF024C38()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF024C78(uint64_t a1)
{
  return sub_1DF0246A0(a1, *(uint64_t (**)(void, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1DF024C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DF023414(a1, a2, a3, a4, *(char **)(v4 + 16));
}

void sub_1DF024C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DF023664(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void sub_1DF024C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DF0238F0(a1, a2, a3, a4, *(char **)(v4 + 16));
}

unint64_t sub_1DF024C9C()
{
  unint64_t result = qword_1EBABAD30;
  if (!qword_1EBABAD30)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBABAD30);
  }
  return result;
}

uint64_t sub_1DF024CF4(void *a1, void *a2)
{
  uint64_t v41 = a1;
  uint64_t v3 = sub_1DFDE7600();
  uint64_t v42 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA2080C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v37 - v10;
  if (qword_1EBAC0138 != -1) {
    swift_once();
  }
  unint64_t v12 = 0x6E776F6E6B6E75;
  uint64_t v39 = qword_1EBB62880;
  int v38 = sub_1DFDFEA60();
  sub_1DEA2080C(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DFE0CC10;
  id v14 = objc_msgSend(a2, sel_activeNewsletter);
  uint64_t v37 = v5;
  unint64_t v15 = 0xE700000000000000;
  unint64_t v16 = 0x6E776F6E6B6E75;
  switch((unint64_t)v14)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v15 = 0xE400000000000000;
      unint64_t v16 = 1701736302;
      break;
    case 2uLL:
      unint64_t v16 = 0x7474656C7377656ELL;
      unint64_t v15 = 0xEA00000000007265;
      break;
    case 3uLL:
      unint64_t v16 = 0xD000000000000016;
      unint64_t v15 = 0x80000001DFEDBFF0;
      break;
    default:
      unint64_t v16 = 0x64696C61766E69;
      break;
  }
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = sub_1DEA08668();
  *(void *)(v13 + 64) = v17;
  *(void *)(v13 + 32) = v16;
  *(void *)(v13 + 40) = v15;
  id v18 = objc_msgSend(a2, sel_subscription);
  unint64_t v19 = 0xE700000000000000;
  unint64_t v20 = 0x6E776F6E6B6E75;
  uint64_t v21 = v40;
  id v22 = v41;
  uint64_t v23 = &selRef_userInterfaceStyle;
  switch((unint64_t)v18)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v19 = 0xE400000000000000;
      unint64_t v20 = 1701736302;
      break;
    case 2uLL:
      unint64_t v20 = 0x7474656C7377656ELL;
      unint64_t v19 = 0xEA00000000007265;
      break;
    case 3uLL:
      unint64_t v20 = 0xD000000000000016;
      unint64_t v19 = 0x80000001DFEDBFF0;
      break;
    default:
      unint64_t v20 = 0x64696C61766E69;
      uint64_t v21 = v40;
      id v22 = v41;
      uint64_t v23 = &selRef_userInterfaceStyle;
      break;
  }
  *(void *)(v13 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 104) = v17;
  *(void *)(v13 + 72) = v20;
  *(void *)(v13 + 80) = v19;
  id v24 = objc_msgSend(a2, sel_subscriptionStatusForNewsletter_, objc_msgSend(*(id *)(v21 + OBJC_IVAR____TtC7NewsUI229EmailSignupAutomaticPresentor_newsletterManager), v23[243], v37));
  uint64_t v25 = v42;
  switch((unint64_t)v24)
  {
    case 1uLL:
      unint64_t v26 = 0xEF65626972637362;
      unint64_t v12 = 0x75536F54656C6261;
      break;
    case 2uLL:
      uint64_t v27 = "alreadySubscribed";
      goto LABEL_20;
    case 3uLL:
      unint64_t v26 = 0xEB00000000656C62;
      unint64_t v12 = 0x616C696176616E75;
      break;
    case 4uLL:
      unint64_t v26 = 0xEF6E4964656E6769;
      unint64_t v12 = 0x53746F4E72657375;
      break;
    case 5uLL:
      uint64_t v27 = "unableToDowngrade";
LABEL_20:
      unint64_t v26 = (unint64_t)(v27 - 32) | 0x8000000000000000;
      unint64_t v12 = 0xD000000000000011;
      break;
    case 6uLL:
      unint64_t v26 = 0xEB0000000064656CLL;
      unint64_t v12 = 0x6961466863746566;
      break;
    default:
      unint64_t v26 = 0xE700000000000000;
      uint64_t v25 = v42;
      break;
  }
  *(void *)(v13 + 136) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 144) = v17;
  *(void *)(v13 + 112) = v12;
  *(void *)(v13 + 120) = v26;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DFDFEA60();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1DFE0B250;
  id v29 = objc_msgSend(v22, sel_newsletterSignupLastSeenDate);
  if (v29)
  {
    uint64_t v30 = v29;
    sub_1DFDE7570();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v9, 0, 1, v3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v9, 1, 1, v3);
  }
  uint64_t v31 = 7104878;
  sub_1DEB80304((uint64_t)v9, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v3))
  {
    sub_1DEA2CB7C((uint64_t)v11, (uint64_t)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DEA2080C);
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v28 + 64) = v17;
  }
  else
  {
    __int16 v33 = v37;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v37, v11, v3);
    sub_1DEA2CB7C((uint64_t)v11, (uint64_t)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DEA2080C);
    uint64_t v34 = sub_1DFDE7470();
    unint64_t v32 = v35;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v3);
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v28 + 64) = v17;
    if (v32)
    {
      uint64_t v31 = v34;
      goto LABEL_30;
    }
  }
  unint64_t v32 = 0xE300000000000000;
LABEL_30:
  *(void *)(v28 + 32) = v31;
  *(void *)(v28 + 40) = v32;
  sub_1DFDF00C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF025424(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA2080C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v16 - v11;
  if (!*(void *)(a1 + 8))
  {
    if (qword_1EBAC0138 == -1) {
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  if ((objc_msgSend(a3, sel_canSubscribeToNewsletter_, objc_msgSend(a3, sel_activeNewsletter)) & 1) == 0)
  {
    if (qword_1EBAC0138 == -1)
    {
LABEL_10:
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      return 0;
    }
LABEL_13:
    swift_once();
    goto LABEL_10;
  }
  id v13 = objc_msgSend(a2, sel_newsletterSignupLastSeenDate);
  if (v13)
  {
    id v14 = v13;
    sub_1DFDE7570();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
    {
      sub_1DEA2CB7C((uint64_t)v12, (uint64_t)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DEA2080C);
      if (qword_1EBAC0138 == -1) {
        goto LABEL_10;
      }
      goto LABEL_13;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
  }
  sub_1DEA2CB7C((uint64_t)v12, (uint64_t)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DEA2080C);
  return 1;
}

uint64_t sub_1DF025800()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF02583C(uint64_t a1)
{
  return sub_1DF023B44(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1DF025848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 16);
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC848] + 8;
  return v2();
}

void sub_1DF025880(void *a1)
{
  sub_1DF023DAC(a1, *(void (**)(id))(v1 + 16));
}

unint64_t sub_1DF025888()
{
  unint64_t result = qword_1EAC27990;
  if (!qword_1EAC27990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27990);
  }
  return result;
}

uint64_t sub_1DF0258DC(void *a1)
{
  return sub_1DF023784(a1, *(uint64_t (**)(void *))(v1 + 16));
}

uint64_t sub_1DF0258E8(uint64_t a1, uint64_t a2)
{
  return sub_1DF023540(a1, a2, *(uint64_t (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

unsigned char *storeEnumTagSinglePayload for EmailSignupAutomaticPresentor.PresentationRequirementVerificationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF025990);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmailSignupAutomaticPresentor.PresentationRequirementVerificationError()
{
  return &type metadata for EmailSignupAutomaticPresentor.PresentationRequirementVerificationError;
}

unint64_t sub_1DF0259CC()
{
  unint64_t result = qword_1EAC279A0;
  if (!qword_1EAC279A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC279A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingDislikedSubscriptionChangeMutedModifier()
{
  return &type metadata for FollowingDislikedSubscriptionChangeMutedModifier;
}

uint64_t sub_1DF025A4C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  sub_1DF02767C(0, &qword_1EAC279B8, MEMORY[0x1E4FACA00]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v122 - v11;
  sub_1DEE361A4();
  uint64_t v152 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  char v134 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v133 = (char *)&v122 - v18;
  MEMORY[0x1F4188790](v17);
  id v145 = (char *)&v122 - v19;
  sub_1DF027AE8(0, &qword_1EAC279C0, MEMORY[0x1E4FBB718]);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  id v150 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v137 = (char *)&v122 - v23;
  sub_1DF027608();
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  id v155 = (char *)&v122 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v149 = (char *)&v122 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  id v144 = (char *)&v122 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v148 = (char *)&v122 - v31;
  sub_1DF02767C(0, (unint64_t *)&qword_1EAC20328, MEMORY[0x1E4FAC180]);
  uint64_t v160 = v32;
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v136 = (char *)&v122 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  id v147 = (char *)&v122 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  id v143 = (char *)&v122 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  id v139 = (char *)&v122 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  id v142 = (char *)&v122 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  id v141 = (char *)&v122 - v45;
  MEMORY[0x1F4188790](v44);
  uint64_t v135 = (char *)&v122 - v46;
  sub_1DF02767C(0, (unint64_t *)&qword_1EAC20358, MEMORY[0x1E4FAD830]);
  MEMORY[0x1F4188790](v47);
  CGRect v49 = (char *)&v122 - v48;
  uint64_t v131 = v50;
  CGRect v51 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v132 = a1;
  uint64_t v161 = v52;
  uint64_t v129 = v50 + 16;
  unsigned int v128 = v51;
  ((void (*)(char *, uint64_t))v51)(v49, a1);
  uint64_t v53 = a4;
  unint64_t v54 = v49;
  uint64_t v55 = *(void *)(v53 + 16);
  if (!v55) {
    goto LABEL_34;
  }
  uint64_t v123 = v12;
  uint64_t v124 = v10;
  uint64_t v125 = v9;
  uint64_t v126 = a3;
  uint64_t v127 = a2;
  id v157 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  uint64_t v153 = (void (**)(char *, uint64_t, uint64_t))(v33 + 32);
  uint64_t v151 = (void (**)(char *, char *, uint64_t))(v33 + 16);
  id v154 = (void (**)(char *, uint64_t))(v33 + 8);
  id v146 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v130 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  id v138 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v140 = swift_bridgeObjectRetain();
  uint64_t v56 = (unsigned __int8 *)(v140 + 40);
  uint64_t v57 = &type metadata for FollowingTagModel.Group;
  id v159 = v49;
  uint64_t v58 = (uint64_t)v155;
  while (2)
  {
    uint64_t v61 = *((void *)v56 - 1);
    unsigned int v63 = *v56;
    v56 += 16;
    uint64_t v62 = v63;
    switch(v63 >> 6)
    {
      case 1u:
        goto LABEL_5;
      case 2u:
        type metadata accessor for FollowingTagModel();
        uint64_t v68 = swift_allocObject();
        *(unsigned char *)(v68 + 16) = 2;
        *(void *)(v68 + 24) = v61;
        *(unsigned char *)(v68 + 32) = 1;
        unint64_t v163 = 0;
        unint64_t v164 = 0xE000000000000000;
        LOBYTE(v162) = 2;
        j__swift_retain(v61, v62);
        j__swift_retain(v61, v62);
        swift_retain();
        sub_1DFDFFB10();
        sub_1DFDFDE90();
        id v69 = objc_msgSend(*(id *)(v61 + 16), sel_identifier);
        sub_1DFDFDD20();

        sub_1DFDFDE90();
        swift_bridgeObjectRelease();
        uint64_t v70 = v57;
        uint64_t v71 = v149;
        sub_1DFDF59E0();
        uint64_t v72 = (uint64_t)v71;
        swift_bridgeObjectRelease();
        unint64_t v73 = v71;
        uint64_t v74 = v160;
        if ((*v157)(v73, 1, v160) == 1)
        {
          swift_release();
          sub_1DF0277FC(v72);
          j__swift_release(v61, v62);
          j__swift_release(v61, v62);
          uint64_t v58 = (uint64_t)v155;
          uint64_t v57 = v70;
          goto LABEL_5;
        }
        unsigned int v156 = v62;
        uint64_t v158 = v56;
        uint64_t v77 = v143;
        (*v153)(v143, v72, v74);
        char v78 = *(unsigned char *)(v68 + 16);
        uint64_t v79 = *(void *)(v68 + 24);
        unint64_t v163 = 0;
        unint64_t v164 = 0xE000000000000000;
        LOBYTE(v162) = v78;
        sub_1DFDFFB10();
        sub_1DFDFDE90();
        id v80 = objc_msgSend(*(id *)(v79 + 16), sel_identifier);
        sub_1DFDFDD20();

        sub_1DFDFDE90();
        id v81 = v77;
        swift_bridgeObjectRelease();
        uint64_t v82 = v150;
        sub_1DFDF1600();
        swift_bridgeObjectRelease();
        uint64_t v83 = v82;
        uint64_t v84 = v152;
        if ((*v146)(v83, 1, v152) == 1)
        {
          (*v154)(v77, v74);
          swift_release();
          uint64_t v85 = (uint64_t)v150;
          goto LABEL_30;
        }
        uint64_t v101 = v133;
        (*v130)(v133, v150, v84);
        uint64_t v102 = v134;
        sub_1DF026F68(v68);
        id v103 = v139;
        (*v151)(v139, v81, v74);
        sub_1DFDF1580();
        sub_1DFDF59D0();
        swift_release();
        uint64_t v104 = *v154;
        (*v154)(v103, v74);
        uint64_t v105 = *v138;
        uint64_t v106 = v152;
        (*v138)(v102, v152);
        v105(v101, v106);
        v104(v143, v74);
        goto LABEL_4;
      case 3u:
        type metadata accessor for FollowingTagModel();
        uint64_t inited = swift_initStackObject();
        *(unsigned char *)(inited + 16) = 2;
        *(void *)(inited + 24) = v61;
        *(unsigned char *)(inited + 32) = 1;
        uint64_t v76 = *(void **)(v61 + 16);
        swift_retain_n();
        switch((unint64_t)objc_msgSend(v76, sel_tagType))
        {
          case 1uLL:
          case 2uLL:
            sub_1DFDF5AF0();
            uint64_t v88 = v160;
            if ((*v157)((char *)v58, 1, v160) == 1)
            {
              swift_release();
              sub_1DF0277FC(v58);
            }
            else
            {
              uint64_t v158 = v56;
              id v89 = v147;
              (*v153)(v147, v58, v88);
              uint64_t v90 = v136;
              (*v151)(v136, v89, v88);
              unint64_t v163 = 0;
              unint64_t v164 = 0xE000000000000000;
              LOBYTE(v162) = 2;
              sub_1DFDFFB10();
              sub_1DFDFDE90();
              id v91 = objc_msgSend(*(id *)(v61 + 16), sel_identifier);
              sub_1DFDFDD20();

              sub_1DFDFDE90();
              swift_bridgeObjectRelease();
              sub_1DFDF1560();
              swift_bridgeObjectRelease();
              sub_1DF027858();
              sub_1DFDFE6A0();
              sub_1DFDFE720();
              uint64_t v92 = v147;
              if (v163 == v162)
              {
                sub_1DFDF14E0();
                sub_1DFDF59C0();
                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                sub_1DFDF59D0();
                swift_release();
              }
              id v107 = *v154;
              (*v154)(v90, v88);
              v107(v92, v88);
              uint64_t v58 = (uint64_t)v155;
              uint64_t v56 = v158;
            }
            j__swift_release(v61, v62);
            j__swift_release(v61, v62);
            uint64_t v57 = &type metadata for FollowingTagModel.Group;
            goto LABEL_5;
          default:
            goto LABEL_38;
        }
      default:
        unsigned int v156 = v62;
        type metadata accessor for FollowingTagModel();
        uint64_t v64 = swift_allocObject();
        *(unsigned char *)(v64 + 16) = 2;
        *(void *)(v64 + 24) = v61;
        *(unsigned char *)(v64 + 32) = 1;
        uint64_t v65 = *(void **)(v61 + 16);
        swift_retain_n();
        id v66 = objc_msgSend(v65, sel_tagType);
        uint64_t v67 = (uint64_t)v148;
        uint64_t v158 = v56;
        switch((unint64_t)v66)
        {
          case 1uLL:
          case 2uLL:
            sub_1DFDF5AF0();
            double v86 = *v157;
            uint64_t v87 = v160;
            if ((*v157)((char *)v67, 1, v160) == 1)
            {
              sub_1DF0277FC(v67);
LABEL_21:
              uint64_t v96 = *(void *)(v64 + 24);
              id v97 = objc_msgSend(*(id *)(v96 + 16), sel_tagType);
              uint64_t v98 = (uint64_t)v144;
              switch((unint64_t)v97)
              {
                case 1uLL:
                case 2uLL:
                  sub_1DFDF5AF0();
                  uint64_t v99 = v160;
                  if (v86((char *)v98, 1, v160) != 1)
                  {
                    uint64_t v100 = v141;
                    (*v153)(v141, v98, v99);
                    (*v151)(v142, v100, v99);
                    switch((unint64_t)objc_msgSend(*(id *)(v96 + 16), sel_tagType))
                    {
                      case 1uLL:
                        unint64_t v163 = v64 | 0x8000000000000000;
                        goto LABEL_32;
                      case 2uLL:
                        unint64_t v163 = v64;
LABEL_32:
                        sub_1DEB0CCD8();
                        swift_retain();
                        sub_1DFDF0B40();
                        sub_1DF027998();
                        id v108 = v145;
                        uint64_t v109 = v160;
                        uint64_t v110 = v142;
                        sub_1DFDF15E0();
                        (*v138)(v108, v152);
                        id v111 = v141;
                        sub_1DFDF59D0();
                        swift_release();
                        uint64_t v112 = *v154;
                        (*v154)(v110, v109);
                        v112(v111, v109);
                        goto LABEL_4;
                      default:
                        goto LABEL_38;
                    }
                  }
                  sub_1DF0277FC(v98);
                  uint64_t v59 = v139;
                  sub_1DF027148(v64);
                  sub_1DF027944();
                  sub_1DFDF5AC0();
                  swift_release();
                  (*v154)(v59, v99);
                  goto LABEL_4;
                default:
                  goto LABEL_38;
              }
            }
            unint64_t v93 = v135;
            (*v153)(v135, v67, v87);
            unint64_t v163 = 0;
            unint64_t v164 = 0xE000000000000000;
            LOBYTE(v162) = 2;
            sub_1DFDFFB10();
            sub_1DFDFDE90();
            id v94 = objc_msgSend(*(id *)(v61 + 16), sel_identifier);
            sub_1DFDFDD20();

            sub_1DFDFDE90();
            uint64_t v95 = (uint64_t)v137;
            swift_bridgeObjectRelease();
            sub_1DFDF1600();
            swift_bridgeObjectRelease();
            (*v154)(v93, v87);
            if ((*v146)((char *)v95, 1, v152) == 1)
            {
              sub_1DF0278CC(v95);
              goto LABEL_21;
            }
            swift_release();
            uint64_t v85 = v95;
LABEL_30:
            sub_1DF0278CC(v85);
LABEL_4:
            uint64_t v60 = v156;
            j__swift_release(v61, v156);
            j__swift_release(v61, v60);
            uint64_t v58 = (uint64_t)v155;
            uint64_t v56 = v158;
            uint64_t v57 = &type metadata for FollowingTagModel.Group;
LABEL_5:
            if (--v55) {
              continue;
            }
            swift_bridgeObjectRelease();
            a2 = v127;
            uint64_t v9 = v125;
            uint64_t v10 = v124;
            unint64_t v12 = v123;
            unint64_t v54 = v159;
LABEL_34:
            sub_1DF027700();
            sub_1DEB0CC84();
            sub_1DEB0CCD8();
            sub_1DFDF2420();
            __swift_project_boxed_opaque_existential_1(&v163, v165);
            if (sub_1DFDF1990())
            {
              uint64_t v113 = (unsigned int *)MEMORY[0x1E4FAC9F8];
              uint64_t v114 = v161;
            }
            else
            {
              sub_1DF027754();
              uint64_t v116 = (uint64_t)&v12[*(int *)(v115 + 48)];
              uint64_t v117 = &v12[*(int *)(v115 + 64)];
              uint64_t v114 = v161;
              v128(v12, v54, v161);
              sub_1DE94F204((uint64_t)&v163, v116);
              uint64_t v118 = *MEMORY[0x1E4FAC298];
              uint64_t v119 = sub_1DFDF1930();
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v119 - 8) + 104))(v117, v118, v119);
              uint64_t v113 = (unsigned int *)MEMORY[0x1E4FAC9F0];
            }
            uint64_t v120 = v131;
            (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *v113, v9);
            a2(v12);
            (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
            (*(void (**)(char *, uint64_t))(v120 + 8))(v54, v114);
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v163);
          default:
LABEL_38:
            sub_1DFDFFBB0();
            __break(1u);
            JUMPOUT(0x1DF026EF8);
        }
    }
  }
}

uint64_t sub_1DF026F68(uint64_t a1)
{
  switch((unint64_t)objc_msgSend(*(id *)(*(void *)(a1 + 24) + 16), sel_tagType))
  {
    case 1uLL:
    case 2uLL:
      sub_1DEB0CCD8();
      swift_retain();
      return sub_1DFDF0B40();
    default:
      sub_1DFDFFBB0();
      __break(1u);
      JUMPOUT(0x1DF0270A4);
  }
}

uint64_t sub_1DF0270BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if ((*a1 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *a1;
    if (v2 < 0) {
      goto LABEL_7;
    }
    return 1;
  }
  if ((v2 & 0x8000000000000000) == 0) {
    return 1;
  }
  uint64_t v3 = *a1 & 0x7FFFFFFFFFFFFFFFLL;
LABEL_7:
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
  sub_1DF0279EC();
  sub_1DF0279EC();
  LOBYTE(v5) = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v5, v6);
  sub_1DEC80768();
  sub_1DEC80768();
  return v5 & 1;
}

uint64_t sub_1DF027148(uint64_t a1)
{
  sub_1DF0279F4();
  MEMORY[0x1F4188790](v2 - 8);
  switch((unint64_t)objc_msgSend(*(id *)(*(void *)(a1 + 24) + 16), sel_tagType))
  {
    case 1uLL:
    case 2uLL:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1DFDE6ED0();

      sub_1DF027AE8(0, (unint64_t *)&qword_1EAC246A0, MEMORY[0x1E4FBBE00]);
      sub_1DEE361A4();
      uint64_t v6 = v5;
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1DFE0B250;
      sub_1DF026F68(a1);
      uint64_t v8 = sub_1DF027AA4(&qword_1EAC279F8);
      uint64_t v9 = sub_1DF027AA4(&qword_1EAC27A00);
      MEMORY[0x1E01DBA70](v7, v6, v8, v9);
      sub_1DEB0CC84();
      sub_1DEB0CCD8();
      return sub_1DFDF14C0();
    default:
      sub_1DFDFFBB0();
      __break(1u);
      JUMPOUT(0x1DF027540);
  }
}

BOOL sub_1DF027558(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a1 + 72) < *(unsigned __int8 *)(a2 + 72);
}

uint64_t sub_1DF02756C(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  return sub_1DF025A4C(a1, a2, a3, *v3);
}

uint64_t sub_1DF027574(uint64_t a1)
{
  unint64_t v2 = sub_1DEB767C8();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DF0275B4()
{
  unint64_t result = qword_1EAC279B0;
  if (!qword_1EAC279B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC279B0);
  }
  return result;
}

void sub_1DF027608()
{
  if (!qword_1EAC279C8)
  {
    sub_1DF02767C(255, (unint64_t *)&qword_1EAC20328, MEMORY[0x1E4FAC180]);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC279C8);
    }
  }
}

void sub_1DF02767C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FollowingDislikedDescriptor;
    v8[1] = &type metadata for FollowingDislikedModel;
    _OWORD v8[2] = sub_1DEB0CC84();
    v8[3] = sub_1DEB0CCD8();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DF027700()
{
  unint64_t result = qword_1EAC279D0;
  if (!qword_1EAC279D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC279D0);
  }
  return result;
}

void sub_1DF027754()
{
  if (!qword_1EAC279D8)
  {
    sub_1DF02767C(255, (unint64_t *)&qword_1EAC20358, MEMORY[0x1E4FAD830]);
    sub_1DEC390C0();
    sub_1DFDF1930();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAC279D8);
    }
  }
}

uint64_t sub_1DF0277FC(uint64_t a1)
{
  sub_1DF027608();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DF027858()
{
  unint64_t result = qword_1EAC20378;
  if (!qword_1EAC20378)
  {
    sub_1DF02767C(255, (unint64_t *)&qword_1EAC20328, MEMORY[0x1E4FAC180]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20378);
  }
  return result;
}

uint64_t sub_1DF0278CC(uint64_t a1)
{
  sub_1DF027AE8(0, &qword_1EAC279C0, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DF027944()
{
  unint64_t result = qword_1EAC279E0;
  if (!qword_1EAC279E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC279E0);
  }
  return result;
}

unint64_t sub_1DF027998()
{
  unint64_t result = qword_1EAC279E8;
  if (!qword_1EAC279E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC279E8);
  }
  return result;
}

uint64_t sub_1DF0279EC()
{
  return swift_retain();
}

void sub_1DF0279F4()
{
  if (!qword_1EAC279F0)
  {
    sub_1DEE361A4();
    sub_1DF027AA4(&qword_1EAC279F8);
    sub_1DF027AA4(&qword_1EAC27A00);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC279F0);
    }
  }
}

uint64_t sub_1DF027AA4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEE361A4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF027AE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1DEE361A4();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for PuzzleEventHandler()
{
  return self;
}

uint64_t sub_1DF027B6C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v30 = sub_1DFDF4740();
  uint64_t v4 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDEC4E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDE8730();
  uint64_t v29 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAE6578();
  uint64_t v31 = a1;
  sub_1DFDF5000();
  if (v35)
  {
    sub_1DFDE8900();
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F7CFB0], v7);
      sub_1DFDE8720();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_1DFDE8890();
      swift_release();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v11);
    }
  }
  else
  {
    sub_1DE9E4C20((uint64_t)v34);
  }
  uint64_t v14 = v2[7];
  sub_1DEC0CE90((uint64_t)v6);
  uint64_t v15 = MEMORY[0x1E01EFB70](v14 + 16);
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    uint64_t v17 = sub_1DF1F5B40(0x6546756F59726F46, 0xEA00000000006465, (uint64_t)v6);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v30);
    if (v17)
    {
      sub_1DFDF4FF0();
      unint64_t v18 = v34[0];
      if (((v18 >> 58) & 0x3C | (v18 >> 1) & 3) == 0xF)
      {
        uint64_t v19 = *(void *)((v34[0] & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v20 = *(void *)((v34[0] & 0xFFFFFFFFFFFFFF9) + 0x18);
        sub_1DEDBD3F8(v19, v20);
        sub_1DEAF0150(v18);
        if (v20)
        {
          if (v20 != 1)
          {
            uint64_t v21 = v19;
            uint64_t v22 = v20;
LABEL_18:
            sub_1DEF40E8C(v21, v22);
          }
        }
        else
        {
          uint64_t v27 = (void *)sub_1DFDFED60();
          if (!v27)
          {
            uint64_t v21 = v19;
            uint64_t v22 = 0;
            goto LABEL_18;
          }
          objc_msgSend(v27, sel_scrollToTopAnimated_, objc_msgSend(self, sel_areAnimationsEnabled));
          sub_1DEF40E8C(v19, 0);
          swift_unknownObjectRelease();
        }
      }
      else
      {
        sub_1DEAF0150(v34[0]);
      }
      return v17;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v30);
  }
  __swift_project_boxed_opaque_existential_1(v2 + 2, v2[5]);
  sub_1DF028054();
  sub_1DFDF4FE0();
  sub_1DFDECCA0();
  uint64_t result = swift_release();
  if (v33)
  {
    sub_1DE942EC4(&v32, (uint64_t)v34);
    uint64_t v24 = v35;
    uint64_t v25 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
    uint64_t v26 = (void (*)(uint64_t))sub_1DFDF4FD0();
    v26(v17);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return v17;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DF028054()
{
  unint64_t result = qword_1EBAAB7B8;
  if (!qword_1EBAAB7B8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAAB7B8);
  }
  return result;
}

void *sub_1DF0280AC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DEBE3100();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v10 = a3[9];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1DFDF8EA0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v15(v12, 1, v13))
    {
      sub_1DEA48A3C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t sub_1DF0282B4(uint64_t a1, uint64_t a2)
{
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_1DFDF8EA0();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_1DF0283D8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_1DFDF8EA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v14(v11, 1, v12))
  {
    sub_1DEA48A3C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1DF028590(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1DFDF8EA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DEA48A3C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1DF0287BC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_1DFDF8EA0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1DEA48A3C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1DF02894C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  uint64_t v7 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1DFDF8EA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DEA48A3C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1DF028B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF028B70);
}

uint64_t sub_1DF028B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEBE3100();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_1DEA48A3C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1DF028CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF028CCC);
}

void sub_1DF028CCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEBE3100();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    sub_1DEA48A3C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    v12(v14, a2, a2, v13);
  }
}

uint64_t type metadata accessor for RecentStoriesTagFeedGroupKnobs()
{
  uint64_t result = qword_1EBAE1680;
  if (!qword_1EBAE1680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF028E60()
{
  sub_1DEBE3100();
  if (v0 <= 0x3F)
  {
    sub_1DEA48A3C(319, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DF028F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v31 = a6;
  uint64_t v32 = a3;
  int v30 = a5;
  uint64_t v29 = a4;
  sub_1DEA48A3C(0, (unint64_t *)&qword_1EBAE95E0, (void (*)(uint64_t))sub_1DEBE3100);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v28 - v11;
  sub_1DEBE3100();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  sub_1DEEDEE14(a1, (uint64_t)v12, (unint64_t *)&qword_1EBAE95E0, (void (*)(uint64_t))sub_1DEBE3100);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    type metadata accessor for TagFeedServiceConfig();
    sub_1DEAD9698(&qword_1EBAD8430, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
    sub_1DFDF8040();
    sub_1DEEDEE80((uint64_t)v12, (unint64_t *)&qword_1EBAE95E0, (void (*)(uint64_t))sub_1DEBE3100);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v19(v17, v12, v14);
  }
  uint64_t v20 = v31;
  char v21 = v30;
  uint64_t v22 = v18;
  uint64_t v23 = v29;
  v19(a7, v17, v14);
  if (a2)
  {
    uint64_t v24 = a2;
  }
  else
  {
    uint64_t v33 = 0x7FEFFFFFFFFFFFFFLL;
    sub_1DEA0F6CC();
    swift_allocObject();
    uint64_t v24 = sub_1DFDF8C00();
  }
  uint64_t v25 = v32;
  uint64_t v26 = (int *)type metadata accessor for RecentStoriesTagFeedGroupKnobs();
  *(void *)&a7[v26[5]] = v24;
  if (v25)
  {
    swift_retain();
  }
  else
  {
    uint64_t v33 = 1;
    sub_1DEA0F99C();
    swift_allocObject();
    swift_retain();
    uint64_t v25 = sub_1DFDF8C00();
  }
  *(void *)&a7[v26[6]] = v25;
  if (!v23)
  {
    uint64_t v33 = 5;
    sub_1DEA0F99C();
    swift_allocObject();
    uint64_t v23 = sub_1DFDF8C00();
  }
  swift_release();
  sub_1DEEDEE80(v22, (unint64_t *)&qword_1EBAE95E0, (void (*)(uint64_t))sub_1DEBE3100);
  *(void *)&a7[v26[7]] = v23;
  a7[v26[8]] = (v21 == 2) | v21 & 1;
  return sub_1DEA0FA14(v20, (uint64_t)&a7[v26[9]]);
}

uint64_t sub_1DF029328@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  char v21 = a2;
  sub_1DEA48A3C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v17 - v5;
  sub_1DEA48A3C(0, (unint64_t *)&qword_1EBAE95E0, (void (*)(uint64_t))sub_1DEBE3100);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  sub_1DF029CC4(0, &qword_1EBAD1BF0, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v20 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v17 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF029C70();
  sub_1DFE00190();
  if (!v2)
  {
    sub_1DEBE3100();
    LOBYTE(v26) = 0;
    sub_1DEAD9698((unint64_t *)&unk_1EBAE95D0, (void (*)(uint64_t))sub_1DEBE3100);
    sub_1DFDFFCD0();
    sub_1DEA0F6CC();
    LOBYTE(v25) = 1;
    sub_1DEAD9698(&qword_1EBAE9908, (void (*)(uint64_t))sub_1DEA0F6CC);
    sub_1DFDFFCD0();
    uint64_t v19 = v26;
    sub_1DEA0F99C();
    LOBYTE(v24) = 2;
    sub_1DEAD9698(&qword_1EBAE9920, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFCD0();
    uint64_t v18 = v25;
    unsigned __int8 v23 = 3;
    sub_1DFDFFCD0();
    uint64_t v14 = v24;
    char v22 = 4;
    sub_1DFDFFCD0();
    int v15 = v23;
    sub_1DFDF8EA0();
    char v22 = 5;
    sub_1DEAD9698(&qword_1EBAE9968, MEMORY[0x1E4F7FCA8]);
    sub_1DFDFFCD0();
    sub_1DF028F60((uint64_t)v9, v19, v18, v14, v15, (uint64_t)v6, v21);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1DF029740(char a1)
{
  unint64_t result = 0x73656C7572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65674178616DLL;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x6972657473756C63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF029810(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF029CC4(0, &qword_1EAC27A08, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF029C70();
  sub_1DFE001A0();
  LOBYTE(v14) = 0;
  sub_1DEBE3100();
  sub_1DEAD9698(&qword_1EAC22F98, (void (*)(uint64_t))sub_1DEBE3100);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for RecentStoriesTagFeedGroupKnobs();
    uint64_t v14 = *(void *)(v3 + v10[5]);
    char v13 = 1;
    sub_1DEA0F6CC();
    sub_1DEAD9698(&qword_1EBAE9900, (void (*)(uint64_t))sub_1DEA0F6CC);
    sub_1DFDFFE80();
    uint64_t v14 = *(void *)(v3 + v10[6]);
    char v13 = 2;
    sub_1DEA0F99C();
    sub_1DEAD9698(&qword_1EBAE9918, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFE80();
    uint64_t v14 = *(void *)(v3 + v10[7]);
    char v13 = 3;
    sub_1DFDFFE80();
    LOBYTE(v14) = 4;
    sub_1DFDFFE50();
    LOBYTE(v14) = 5;
    sub_1DFDF8EA0();
    sub_1DEAD9698(&qword_1EBAE9960, MEMORY[0x1E4F7FCA8]);
    sub_1DFDFFE30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DF029B94()
{
  return sub_1DF029740(*v0);
}

uint64_t sub_1DF029B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF02A4A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF029BC4(uint64_t a1)
{
  unint64_t v2 = sub_1DF029C70();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF029C00(uint64_t a1)
{
  unint64_t v2 = sub_1DF029C70();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF029C3C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1DF029328(a1, a2);
}

uint64_t sub_1DF029C54(void *a1)
{
  return sub_1DF029810(a1);
}

unint64_t sub_1DF029C70()
{
  unint64_t result = qword_1EBAD11E0;
  if (!qword_1EBAD11E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD11E0);
  }
  return result;
}

void sub_1DF029CC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF029C70();
    unint64_t v7 = a3(a1, &type metadata for RecentStoriesTagFeedGroupKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

BOOL sub_1DF029D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF8EA0();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE91998();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA48A3C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v39 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v39 - v18;
  type metadata accessor for TagFeedServiceConfig();
  sub_1DEAD9698(&qword_1EBAD8430, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
  if ((sub_1DFDF80C0() & 1) == 0) {
    return 0;
  }
  uint64_t v42 = v17;
  uint64_t v43 = v19;
  uint64_t v40 = v6;
  uint64_t v41 = v14;
  uint64_t v44 = v10;
  uint64_t v45 = v4;
  sub_1DEA0F6CC();
  uint64_t v20 = type metadata accessor for RecentStoriesTagFeedGroupKnobs();
  if ((sub_1DFDF8BE0() & 1) == 0) {
    return 0;
  }
  sub_1DEA0F99C();
  if ((sub_1DFDF8BE0() & 1) == 0
    || (sub_1DFDF8BE0() & 1) == 0
    || *(unsigned __int8 *)(a1 + *(int *)(v20 + 32)) != *(unsigned __int8 *)(a2 + *(int *)(v20 + 32)))
  {
    return 0;
  }
  char v21 = (void (*)(uint64_t))MEMORY[0x1E4F7FCA8];
  uint64_t v22 = (uint64_t)v43;
  sub_1DEEDEE14(a1 + *(int *)(v20 + 36), (uint64_t)v43, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
  uint64_t v23 = (uint64_t)v42;
  sub_1DEEDEE14(a2 + *(int *)(v20 + 36), (uint64_t)v42, &qword_1EBAE9970, v21);
  uint64_t v24 = *(int *)(v8 + 48);
  uint64_t v25 = (uint64_t)v44;
  uint64_t v26 = (uint64_t)&v44[v24];
  sub_1DEEDEE14(v22, (uint64_t)v44, &qword_1EBAE9970, v21);
  sub_1DEEDEE14(v23, v26, &qword_1EBAE9970, v21);
  uint64_t v27 = v45;
  uint64_t v28 = v46;
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  if (v29(v25, 1, v45) == 1)
  {
    int v30 = (void (*)(uint64_t))MEMORY[0x1E4F7FCA8];
    sub_1DEEDEE80(v23, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    sub_1DEEDEE80(v22, &qword_1EBAE9970, v30);
    if (v29(v26, 1, v27) == 1)
    {
      sub_1DEEDEE80(v25, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
      return 1;
    }
    goto LABEL_11;
  }
  uint64_t v31 = (uint64_t)v41;
  sub_1DEEDEE14(v25, (uint64_t)v41, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
  if (v29(v26, 1, v27) == 1)
  {
    uint64_t v32 = v27;
    uint64_t v33 = (void (*)(uint64_t))MEMORY[0x1E4F7FCA8];
    sub_1DEEDEE80(v23, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    sub_1DEEDEE80(v22, &qword_1EBAE9970, v33);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v32);
LABEL_11:
    sub_1DEEDF634(v25);
    return 0;
  }
  uint64_t v34 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v40, v26, v27);
  sub_1DEAD9698(&qword_1EAC25BE0, MEMORY[0x1E4F7FCA8]);
  char v35 = sub_1DFDFDC70();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
  v36(v34, v27);
  uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4F7FCA8];
  sub_1DEEDEE80(v23, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
  sub_1DEEDEE80(v22, &qword_1EBAE9970, v37);
  v36((char *)v31, v27);
  sub_1DEEDEE80(v25, &qword_1EBAE9970, v37);
  return (v35 & 1) != 0;
}

unsigned char *storeEnumTagSinglePayload for RecentStoriesTagFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF02A364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecentStoriesTagFeedGroupKnobs.CodingKeys()
{
  return &type metadata for RecentStoriesTagFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DF02A3A0()
{
  unint64_t result = qword_1EAC27A10;
  if (!qword_1EAC27A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A10);
  }
  return result;
}

unint64_t sub_1DF02A3F8()
{
  unint64_t result = qword_1EBAD11F0;
  if (!qword_1EBAD11F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD11F0);
  }
  return result;
}

unint64_t sub_1DF02A450()
{
  unint64_t result = qword_1EBAD11E8;
  if (!qword_1EBAD11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD11E8);
  }
  return result;
}

uint64_t sub_1DF02A4A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65674178616DLL && a2 == 0xE600000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEBEBC0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEBEBE0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DFED5B70 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6972657473756C63 && a2 == 0xEF73626F6E4B676ELL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1DF02A720@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v3 = sub_1DFDEC4E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1DFDE8400();
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF4480();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF4260();
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x1E4FAD388])
  {
    uint64_t v15 = *MEMORY[0x1E4F7B2B0];
    uint64_t v16 = sub_1DFDEA1F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a2, v15, v16);
  }
  else if (v14 == *MEMORY[0x1E4FAD398] || v14 == *MEMORY[0x1E4FAD3A0] || v14 == *MEMORY[0x1E4FAD390])
  {
    sub_1DFDE8810();
    sub_1DF02D534(0, &qword_1EBABB3E0, MEMORY[0x1E4F4AB30], MEMORY[0x1E4FBBE00]);
    sub_1DFDE8730();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0B250;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F7D0A8], v3);
    sub_1DFDE8720();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    char v20 = sub_1DFDE83E0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
    uint64_t v21 = sub_1DFDEA1F0();
    if (v20) {
      uint64_t v22 = (unsigned int *)MEMORY[0x1E4F7B270];
    }
    else {
      uint64_t v22 = (unsigned int *)MEMORY[0x1E4F7B260];
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v21 - 8) + 104))(a2, *v22, v21);
  }
  else
  {
    uint64_t result = sub_1DFDFFBB0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF02AB68(uint64_t a1, uint64_t a2)
{
  v29[1] = a2;
  uint64_t v3 = sub_1DFDE7600();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDEC4A0();
  uint64_t v6 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDF4480();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v29 - v14;
  uint64_t v16 = sub_1DFDEA3C0();
  uint64_t v31 = *(void *)(v16 - 8);
  uint64_t v32 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDEC6C0();
  sub_1DF02D608((unint64_t *)&unk_1EBAA73C0, MEMORY[0x1E4F7D420]);
  memset(v36, 0, sizeof(v36));
  uint64_t v35 = a1;
  sub_1DFDE83B0();
  sub_1DF02D220((uint64_t)v36, (uint64_t (*)(void))sub_1DE9E4C7C);
  sub_1DFDF38B0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v19 == *MEMORY[0x1E4FAD388])
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F7CF88], v30);
  }
  else
  {
    char v20 = *(void (**)(char *, void, uint64_t))(v6 + 104);
    if (v19 == *MEMORY[0x1E4FAD398] || v19 == *MEMORY[0x1E4FAD3A0] || v19 == *MEMORY[0x1E4FAD390])
    {
      v20(v8, *MEMORY[0x1E4F7CF80], v30);
    }
    else
    {
      v20(v8, *MEMORY[0x1E4F7CF90], v30);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  sub_1DFDEA3B0();
  sub_1DF02D534(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v21 = sub_1DFDE8410();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x1E4F4AA18], v21);
  sub_1DF02D608(&qword_1EBAA3860, MEMORY[0x1E4F7B458]);
  uint64_t v25 = v32;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v25);
  sub_1DFDEA680();
  sub_1DFDF38D0();
  sub_1DF02D608((unint64_t *)&unk_1EBAA7230, MEMORY[0x1E4F7B5C0]);
  sub_1DFDE8330();
  uint64_t v26 = v34;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v33 + 8);
  v27(v5, v34);
  sub_1DFDF38C0();
  sub_1DFDE8340();
  return ((uint64_t (*)(char *, uint64_t))v27)(v5, v26);
}

uint64_t sub_1DF02B1AC(uint64_t a1)
{
  sub_1DF02D440(0, &qword_1EBAEBE40, MEMORY[0x1E4FAC4C0]);
  uint64_t v3 = v2;
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v33 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v34 = (char *)&v31 - v5;
  sub_1DEB23728();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SavedFeedModel(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE03658();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF20A0();
  sub_1DFDF0B50();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    sub_1DF02D1B4();
    uint64_t v21 = (uint64_t)&v11[*(int *)(v22 + 48)];
    return sub_1DF02D220(v21, type metadata accessor for SavedFeedGapLocation);
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DEC31FCC();
    int v19 = &v11[*(int *)(v18 + 48)];
    uint64_t v20 = sub_1DFDFA6C0();
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    uint64_t v21 = (uint64_t)v11;
    return sub_1DF02D220(v21, type metadata accessor for SavedFeedGapLocation);
  }
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  uint64_t v32 = v8;
  v24(v8, v11, v37);
  sub_1DFDF9A80();
  uint64_t v25 = v38;
  uint64_t v27 = v34;
  uint64_t v26 = v35;
  uint64_t v28 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v34, a1, v3);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v30 + v29, v27, v3);
  *(void *)(v30 + ((v4 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
  swift_retain();
  swift_retain();
  sub_1DFDE87E0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v32, v37);
}

uint64_t sub_1DF02B5C0()
{
  uint64_t v0 = sub_1DFDE8730();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (uint64_t *)((char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for SavedFeedModel(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE03658();
  sub_1DFDF0B50();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DEC31FCC();
      uint64_t v9 = &v6[*(int *)(v8 + 48)];
      uint64_t v10 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      uint64_t v11 = type metadata accessor for SavedFeedGapLocation;
    }
    else
    {
      *uint64_t v3 = 0x656E696C64616568;
      v3[1] = 0xE800000000000000;
      (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F4AB18], v0);
      sub_1DFDE8890();
      (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
      uint64_t v11 = type metadata accessor for SavedFeedModel;
    }
    uint64_t v14 = v11;
    uint64_t v13 = (uint64_t)v6;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DF02D1B4();
    uint64_t v13 = (uint64_t)&v6[*(int *)(v12 + 48)];
    uint64_t v14 = type metadata accessor for SavedFeedGapLocation;
  }
  return sub_1DF02D220(v13, v14);
}

uint64_t sub_1DF02B800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v150 = a4;
  uint64_t v151 = a3;
  uint64_t v160 = a1;
  uint64_t v123 = sub_1DFDE7600();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v121 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1DFDEA9D0();
  uint64_t v119 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v118 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1DFDEB470();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v106 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF02D534(0, &qword_1EBAEBBE0, (uint64_t (*)(uint64_t))sub_1DEE03658, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v110 = (char *)&v102 - v10;
  sub_1DEE03658();
  uint64_t v147 = v11;
  uint64_t v146 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v137 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF02D440(0, (unint64_t *)&qword_1EBAEC380, MEMORY[0x1E4FAD830]);
  uint64_t v140 = v13;
  uint64_t v139 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v136 = (char *)&v102 - v14;
  sub_1DEC31D44();
  MEMORY[0x1F4188790](v15 - 8);
  id v138 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF02D440(0, (unint64_t *)&qword_1EBAEBC90, MEMORY[0x1E4FAC180]);
  uint64_t v142 = v17;
  uint64_t v141 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v117 = (char *)&v102 - v18;
  uint64_t v116 = sub_1DFDEB9A0();
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v114 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1DFDEA280();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  id v111 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF02D534(0, &qword_1EBAC03F0, MEMORY[0x1E4F7C2D8], v8);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v133 = (char *)&v102 - v22;
  uint64_t v135 = sub_1DFDEB700();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v109 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1DFDEC690();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105);
  id v103 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1DFDF9170();
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  uint64_t v127 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1DFDEA320();
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x1F4188790](v132);
  uint64_t v130 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1DFDEADA0();
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  uint64_t v124 = (char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v145 = sub_1DFDEBCD0();
  uint64_t v148 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  id v144 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1DFDEA260();
  uint64_t v161 = *(void (***)(void, void))(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void (***)(void, void))(a2 + 16);
  unint64_t ObjectType = swift_getObjectType();
  sub_1DFDFEF90();
  sub_1DF02D534(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v156 = v33;
  uint64_t v34 = sub_1DFDE8410();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v37 = (v36 + 32) & ~v36;
  uint64_t v159 = v37 + *(void *)(v35 + 72);
  uint64_t v38 = v36 | 7;
  uint64_t v39 = swift_allocObject();
  long long v162 = xmmword_1DFE0B250;
  *(_OWORD *)(v39 + 16) = xmmword_1DFE0B250;
  uint64_t v40 = *MEMORY[0x1E4F4AA18];
  unint64_t v163 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 104);
  v163(v39 + v37, v40, v34);
  sub_1DF02D608((unint64_t *)&unk_1EBAA7180, MEMORY[0x1E4F7B338]);
  unint64_t v154 = (unint64_t)"vedFeedEventHandler";
  unint64_t v143 = 0x80000001DFED4C50;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  ((void (**)(char *, uint64_t))v161)[1](v31, v29);
  uint64_t v41 = v144;
  uint64_t v161 = v32;
  sub_1DFDFEFC0();
  uint64_t v158 = v38;
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v162;
  uint64_t v152 = v37;
  uint64_t v153 = v35 + 104;
  unsigned int v157 = v40;
  uint64_t v155 = v34;
  v163(v42 + v37, v40, v34);
  sub_1DF02D608((unint64_t *)&unk_1EBAA7320, MEMORY[0x1E4F7C850]);
  unint64_t v43 = v145;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, unint64_t))(v148 + 8))(v41, v43);
  sub_1DF02D440(0, &qword_1EBAEBE40, MEMORY[0x1E4FAC4C0]);
  uint64_t v45 = v44;
  uint64_t v46 = sub_1DF02D608(&qword_1EAC27A18, (void (*)(uint64_t))type metadata accessor for SavedFeedModel);
  uint64_t result = sub_1DFDF20F0();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v144 = (char *)v46;
  uint64_t v148 = v45;
  uint64_t v48 = v124;
  sub_1DFDEAD90();
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = v162;
  uint64_t v50 = v152;
  uint64_t v51 = v157;
  uint64_t v52 = v155;
  v163(v49 + v152, v157, v155);
  sub_1DF02D608((unint64_t *)&unk_1EBAA7270, MEMORY[0x1E4F7BAF0]);
  unint64_t v145 = v154 | 0x8000000000000000;
  uint64_t v53 = v126;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v48, v53);
  uint64_t v54 = v128;
  uint64_t v55 = v127;
  uint64_t v56 = v129;
  (*(void (**)(char *, void, uint64_t))(v128 + 104))(v127, *MEMORY[0x1E4F7FFA8], v129);
  uint64_t v57 = v130;
  sub_1DFDEB310();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v162;
  v163(v58 + v50, v51, v52);
  sub_1DF02D608((unint64_t *)&unk_1EBAA71C0, MEMORY[0x1E4F7B400]);
  uint64_t v59 = v132;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v57, v59);
  id v60 = objc_msgSend(v161, sel_scoreProfile);
  uint64_t v61 = v147;
  uint64_t v62 = v146;
  uint64_t v63 = v135;
  uint64_t v64 = v134;
  if (v60)
  {
    uint64_t v65 = v60;
    if (objc_msgSend(v60, sel_hasShadowScores))
    {
      objc_msgSend(v65, sel_shadowTabiScore);
      objc_msgSend(v65, sel_shadowAgedPersonalizationScore);
      id v66 = v103;
      sub_1DFDEC680();
      uint64_t v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = v162;
      v163(v67 + v152, v157, v155);
      sub_1DF02D608((unint64_t *)&unk_1EBACB8B0, MEMORY[0x1E4F7D400]);
      uint64_t v68 = v105;
      sub_1DFDE8390();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v66, v68);
    }
    else
    {
    }
  }
  uint64_t v69 = (uint64_t)v133;
  sub_1DFDFEFB0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v69, 1, v63) == 1)
  {
    sub_1DF02D598(v69, &qword_1EBAC03F0, MEMORY[0x1E4F7C2D8]);
    uint64_t v70 = v152;
  }
  else
  {
    uint64_t v71 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v109, v69, v63);
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = v162;
    uint64_t v70 = v152;
    v163(v72 + v152, v157, v155);
    sub_1DF02D608(&qword_1EAC22960, MEMORY[0x1E4F7C2D8]);
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v71, v63);
  }
  if (objc_msgSend(v161, sel_sourceChannel))
  {
    unint64_t v73 = v111;
    sub_1DFDEB250();
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = v162;
    uint64_t v75 = v155;
    v163(v74 + v70, v157, v155);
    sub_1DF02D608((unint64_t *)&unk_1EBAA71A0, MEMORY[0x1E4F7B368]);
    unint64_t ObjectType = v154 | 0x8000000000000000;
    uint64_t v76 = v113;
    sub_1DFDE8390();
    uint64_t v62 = v146;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v112 + 8))(v73, v76);
    uint64_t v77 = v114;
    sub_1DFDEB240();
    uint64_t v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = v162;
    v163(v78 + v152, v157, v75);
    sub_1DF02D608((unint64_t *)&unk_1EBAA7300, MEMORY[0x1E4F7C5A0]);
    uint64_t v79 = v116;
    uint64_t v70 = v152;
    sub_1DFDE8390();
    swift_unknownObjectRelease();
    uint64_t v61 = v147;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v77, v79);
  }
  id v80 = v136;
  sub_1DFDF20D0();
  id v81 = v137;
  sub_1DFDF20A0();
  sub_1DFDF0B10();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v81, v61);
  uint64_t v82 = v138;
  uint64_t v83 = v140;
  sub_1DFDF59E0();
  uint64_t v84 = (uint64_t)v82;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v139 + 8))(v80, v83);
  uint64_t v85 = v141;
  uint64_t v86 = v142;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v84, 1, v142) == 1)
  {
    sub_1DF02D220(v84, (uint64_t (*)(void))sub_1DEC31D44);
    uint64_t v87 = v70;
    uint64_t v88 = v157;
LABEL_17:
    __swift_project_boxed_opaque_existential_1((void *)(v150 + 40), *(void *)(v150 + 64));
    id v95 = objc_msgSend(v161, sel_identifier);
    sub_1DFDFDD20();

    sub_1DFDFD280();
    swift_bridgeObjectRelease();
    uint64_t v96 = v118;
    sub_1DFDEA9C0();
    uint64_t v97 = swift_allocObject();
    *(_OWORD *)(v97 + 16) = v162;
    v163(v97 + v87, v88, v155);
    sub_1DF02D608(&qword_1EBACB870, MEMORY[0x1E4F7B8D8]);
    uint64_t v98 = v120;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v96, v98);
    sub_1DFDEB7F0();
    uint64_t v99 = v121;
    sub_1DFDF20E0();
    sub_1DF02D608((unint64_t *)&unk_1EBAA72F0, MEMORY[0x1E4F7C418]);
    sub_1DFDE8330();
    uint64_t v100 = *(void (**)(char *, uint64_t))(v122 + 8);
    uint64_t v101 = v123;
    v100(v99, v123);
    sub_1DFDF20B0();
    v164[3] = sub_1DFDEA630();
    __swift_allocate_boxed_opaque_existential_1(v164);
    swift_unknownObjectRetain();
    sub_1DFDEA620();
    sub_1DFDE8350();
    v100(v99, v101);
    return sub_1DF02D220((uint64_t)v164, (uint64_t (*)(void))sub_1DE9E4C7C);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v117, v84, v86);
  uint64_t v89 = (uint64_t)v110;
  sub_1DFDF20A0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v89, 0, 1, v61);
  uint64_t v90 = sub_1DFDF15D0();
  uint64_t result = sub_1DF02D598(v89, &qword_1EBAEBBE0, (uint64_t (*)(uint64_t))sub_1DEE03658);
  if (v90 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_20;
  }
  if (v90 <= 0x7FFFFFFF)
  {
    id v91 = v106;
    sub_1DFDEB460();
    uint64_t v92 = swift_allocObject();
    *(_OWORD *)(v92 + 16) = v162;
    uint64_t v93 = v85;
    uint64_t v87 = v70;
    uint64_t v88 = v157;
    v163(v92 + v70, v157, v155);
    sub_1DF02D608((unint64_t *)&unk_1EBAA72C0, MEMORY[0x1E4F7C0E0]);
    uint64_t v94 = v108;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v91, v94);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v117, v86);
    goto LABEL_17;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SavedFeedTracker()
{
  return self;
}

void sub_1DF02D1B4()
{
  if (!qword_1EBAF29F0)
  {
    type metadata accessor for SavedFeedGapLocation(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAF29F0);
    }
  }
}

uint64_t sub_1DF02D220(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF02D280()
{
  sub_1DF02D440(0, &qword_1EBAEBE40, MEMORY[0x1E4FAC4C0]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF02D384(uint64_t a1)
{
  sub_1DF02D440(0, &qword_1EBAEBE40, MEMORY[0x1E4FAC4C0]);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DF02B800(a1, v6, v1 + v5, v7);
}

void sub_1DF02D440(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for SavedFeedSectionDescriptor();
    v8[1] = type metadata accessor for SavedFeedModel(255);
    _OWORD v8[2] = sub_1DF02D608(&qword_1EBAF06C0, (void (*)(uint64_t))type metadata accessor for SavedFeedSectionDescriptor);
    v8[3] = sub_1DF02D608(&qword_1EBAECD40, (void (*)(uint64_t))type metadata accessor for SavedFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DF02D534(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF02D598(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DF02D534(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF02D608(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PuzzleSettingsStyler()
{
  return self;
}

ValueMetadata *type metadata accessor for FollowingPuzzlesBadgeUpdateModifier()
{
  return &type metadata for FollowingPuzzlesBadgeUpdateModifier;
}

uint64_t sub_1DF02D684(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, char *a4)
{
  uint64_t v65 = a4;
  uint64_t v73 = a3;
  uint64_t v74 = a2;
  sub_1DEE33550(0, &qword_1EBAEBF50, MEMORY[0x1E4FACA00]);
  uint64_t v75 = *(void *)(v5 - 8);
  uint64_t v76 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void *)((char *)v63 - v6);
  uint64_t v66 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v66);
  uint64_t v64 = (char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for FollowingPuzzleHubModel();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (void *)((char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEE33550(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v13 = v12;
  uint64_t v69 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v68 = (char *)v63 - v14;
  sub_1DEC38E88();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0B564(0);
  uint64_t v71 = *(void *)(v18 - 8);
  uint64_t v72 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v67 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v70 = (char *)v63 - v21;
  sub_1DEBEE754(0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE33550(0, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)v63 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v77 = v13;
  uint64_t v78 = (char *)v63 - v31;
  sub_1DFDF5AF0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26) == 1)
  {
    uint64_t v32 = (uint64_t (*)(void))sub_1DEBEE754;
    uint64_t v33 = (uint64_t)v24;
LABEL_5:
    sub_1DF02E124(v33, v32);
    sub_1DF02E0D0();
    *uint64_t v7 = swift_allocError();
    uint64_t v35 = v75;
    uint64_t v34 = v76;
    (*(void (**)(uint64_t *, void, uint64_t))(v75 + 104))(v7, *MEMORY[0x1E4FAC9E0], v76);
    v74(v7);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v35 + 8))(v7, v34);
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v78, v24, v26);
  sub_1DFDF5970();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v17, 1, v72) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v78, v26);
    uint64_t v32 = (uint64_t (*)(void))sub_1DEC38E88;
    uint64_t v33 = (uint64_t)v17;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v17, v72);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v30, v78, v26);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
  v63[2] = a1;
  v63[1] = v69 + 16;
  v63[0] = v37;
  v37(v68, a1, v77);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v39 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v40 = sub_1DFDE6ED0();
  uint64_t v42 = v41;

  uint64_t *v11 = v40;
  v11[1] = v42;
  v11[3] = 0;
  v11[4] = 0;
  v11[2] = 0;
  unint64_t v43 = (char *)v11 + v9[7];
  uint64_t v44 = sub_1DFDE7220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
  *((unsigned char *)v11 + v9[8]) = 1;
  *(uint64_t *)((char *)v11 + v9[9]) = 10;
  uint64_t v45 = v9[10];
  uint64_t v46 = v68;
  uint64_t v47 = (uint64_t)v64;
  *(uint64_t *)((char *)v11 + v45) = (uint64_t)v65;
  sub_1DF02E184((uint64_t)v11, v47);
  swift_storeEnumTagMultiPayload();
  sub_1DEAE2210();
  uint64_t v48 = v67;
  sub_1DFDF0B40();
  uint64_t v49 = (uint64_t)v11;
  uint64_t v50 = v48;
  sub_1DF02E124(v49, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
  sub_1DFDF1580();
  uint64_t v65 = v30;
  sub_1DFDF59D0();
  sub_1DEC38FC4();
  sub_1DEADC298();
  sub_1DFDF2420();
  __swift_project_boxed_opaque_existential_1(v79, v79[3]);
  if (sub_1DFDF1990())
  {
    uint64_t v52 = v75;
    uint64_t v51 = v76;
    (*(void (**)(uint64_t *, void, uint64_t))(v75 + 104))(v7, *MEMORY[0x1E4FAC9F8], v76);
    v74(v7);
    (*(void (**)(uint64_t *, uint64_t))(v52 + 8))(v7, v51);
    uint64_t v53 = v72;
    uint64_t v54 = *(void (**)(char *, uint64_t))(v71 + 8);
    v54(v48, v72);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v46, v77);
  }
  else
  {
    sub_1DEBEE890();
    uint64_t v56 = (char *)v7 + *(int *)(v55 + 48);
    uint64_t v57 = v77;
    ((void (*)(uint64_t *, char *, uint64_t))v63[0])(v7, v46, v77);
    uint64_t v58 = *MEMORY[0x1E4FAC298];
    uint64_t v59 = sub_1DFDF1930();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 104))(v56, v58, v59);
    uint64_t v61 = v75;
    uint64_t v60 = v76;
    (*(void (**)(uint64_t *, void, uint64_t))(v75 + 104))(v7, *MEMORY[0x1E4FAC9E8], v76);
    v74(v7);
    (*(void (**)(uint64_t *, uint64_t))(v61 + 8))(v7, v60);
    uint64_t v53 = v72;
    uint64_t v54 = *(void (**)(char *, uint64_t))(v71 + 8);
    v54(v50, v72);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v46, v57);
  }
  uint64_t v62 = *(void (**)(char *, uint64_t))(v27 + 8);
  v62(v65, v26);
  v54(v70, v53);
  v62(v78, v26);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
}

uint64_t sub_1DF02E034(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  return sub_1DF02D684(a1, a2, a3, *v3);
}

uint64_t sub_1DF02E03C(uint64_t a1)
{
  unint64_t v2 = sub_1DECE3270();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DF02E07C()
{
  unint64_t result = qword_1EBAF2240;
  if (!qword_1EBAF2240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF2240);
  }
  return result;
}

unint64_t sub_1DF02E0D0()
{
  unint64_t result = qword_1EAC27A20;
  if (!qword_1EAC27A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A20);
  }
  return result;
}

uint64_t sub_1DF02E124(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF02E184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FollowingPuzzleHubModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for FollowingPuzzlesBadgeUpdateModifier.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF02E284);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingPuzzlesBadgeUpdateModifier.Errors()
{
  return &type metadata for FollowingPuzzlesBadgeUpdateModifier.Errors;
}

unint64_t sub_1DF02E2C0()
{
  unint64_t result = qword_1EAC27A28;
  if (!qword_1EAC27A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A28);
  }
  return result;
}

uint64_t sub_1DF02E430(uint64_t result)
{
  unint64_t v1 = *(void *)(result + OBJC_IVAR____TtC7NewsUI220PuzzleViewController_currentMenuItems);
  if (v1)
  {
    if (v1 >> 62) {
      goto LABEL_17;
    }
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    for (; v2; uint64_t v2 = sub_1DFDFFBE0())
    {
      uint64_t v3 = 4;
      uint64_t v4 = 0;
      if ((v1 & 0xC000000000000001) != 0)
      {
LABEL_5:
        id v5 = (id)MEMORY[0x1E01EE240](v4, v1);
        goto LABEL_7;
      }
      while (1)
      {
        id v5 = *(id *)(v1 + 8 * v3);
LABEL_7:
        uint64_t v6 = v5;
        uint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          break;
        }
        id v8 = objc_msgSend(v5, sel_customView);
        if (v8)
        {
          uint64_t v9 = v8;
          self;
          uint64_t v10 = (void *)swift_dynamicCastObjCClass();
          if (v10)
          {
            id v11 = objc_msgSend(v10, sel_contextMenuInteraction);
            objc_msgSend(v11, sel_dismissMenu);
          }
          else
          {
          }
        }
        else
        {
          uint64_t v9 = v6;
        }

        if (v7 == v2) {
          return swift_bridgeObjectRelease_n();
        }
        uint64_t v4 = ++v3 - 4;
        if ((v1 & 0xC000000000000001) != 0) {
          goto LABEL_5;
        }
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain_n();
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1DF02E598(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E01EFB70](a1 + 16);
  if (result)
  {
    uint64_t v2 = MEMORY[0x1E01EFB70](result + 16);
    if (v2)
    {
      sub_1DF02E430(v2);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *sub_1DF02E604(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDE7600();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DEA20870(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = type metadata accessor for AudioHistoryFeedConfig();
    *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DEAC0F40();
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v13, v14, v16);
    uint64_t v18 = type metadata accessor for AudioHistoryFeedKnobsConfig();
    *(void *)&v13[*(int *)(v18 + 20)] = *(void *)&v14[*(int *)(v18 + 20)];
  }
  return a1;
}

uint64_t sub_1DF02E80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDE7600();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  type metadata accessor for AudioHistoryFeedConfig();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  sub_1DEAC0F40();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

char *sub_1DF02E920(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA20870(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for AudioHistoryFeedConfig();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  sub_1DEAC0F40();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v11, v12, v14);
  uint64_t v16 = type metadata accessor for AudioHistoryFeedKnobsConfig();
  *(void *)&v11[*(int *)(v16 + 20)] = *(void *)&v12[*(int *)(v16 + 20)];
  return a1;
}

char *sub_1DF02EAD8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA20870(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for AudioHistoryFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  sub_1DEAC0F40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for AudioHistoryFeedKnobsConfig();
  *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
  return a1;
}

char *sub_1DF02ECF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA20870(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for AudioHistoryFeedConfig();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  sub_1DEAC0F40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for AudioHistoryFeedKnobsConfig();
  *(void *)&v11[*(int *)(v14 + 20)] = *(void *)&v12[*(int *)(v14 + 20)];
  return a1;
}

char *sub_1DF02EE94(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA20870(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for AudioHistoryFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  sub_1DEAC0F40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for AudioHistoryFeedKnobsConfig();
  *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
  return a1;
}

uint64_t sub_1DF02F0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF02F0B8);
}

uint64_t sub_1DF02F0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AudioHistoryFeedConfig();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for AudioHistoryFeedKnobsConfig();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DF02F1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF02F1C4);
}

uint64_t sub_1DF02F1C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for AudioHistoryFeedConfig();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for AudioHistoryFeedKnobsConfig();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1DF02F2C8()
{
  return sub_1DE95E68C(&qword_1EBAD9480, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedConfig);
}

uint64_t sub_1DF02F310()
{
  return sub_1DE95E68C(&qword_1EAC27A40, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedKnobsConfig);
}

uint64_t sub_1DF02F358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  sub_1DEA20870(0, (unint64_t *)&qword_1EBAE95B8, (void (*)(uint64_t))sub_1DEAC0F40);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v54 = (char *)&v54 - v5;
  uint64_t v6 = type metadata accessor for ArticleListAudioHistoryFeedGroupKnobs();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v57 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA20870(0, qword_1EBAE6B30, (void (*)(uint64_t))type metadata accessor for ArticleListAudioHistoryFeedGroupKnobs);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v66 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v64 = (char *)&v54 - v11;
  uint64_t v60 = type metadata accessor for AudioHistoryFeedGroupKnobs();
  uint64_t v12 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v59 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA20870(0, qword_1EBADC4D0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedGroupKnobs);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v65 = (uint64_t)&v54 - v17;
  sub_1DEA20870(0, &qword_1EBADD328, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedKnobsConfig);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v54 - v19;
  uint64_t v69 = type metadata accessor for AudioHistoryFeedKnobsConfig();
  uint64_t v21 = *(void *)(v69 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v69);
  uint64_t v58 = (uint64_t)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v62 = (uint64_t)&v54 - v24;
  sub_1DEA20870(0, &qword_1EBAD9490, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedConfig);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v54 - v26;
  uint64_t v28 = type metadata accessor for AudioHistoryFeedConfig();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v54 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a1;
  sub_1DF0303E8(a1, (uint64_t)v27, &qword_1EBAD9490, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    uint64_t v32 = sub_1DFDE7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
    *(void *)&v31[*(int *)(v28 + 20)] = MEMORY[0x1E4FBC860];
    sub_1DF030454((uint64_t)v27, &qword_1EBAD9490, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedConfig);
  }
  else
  {
    sub_1DF0304B0((uint64_t)v27, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedConfig);
  }
  uint64_t v34 = v67;
  uint64_t v33 = v68;
  uint64_t v35 = (uint64_t)v66;
  uint64_t v36 = (uint64_t)v64;
  uint64_t v37 = v69;
  sub_1DF0304B0((uint64_t)v31, v68, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedConfig);
  sub_1DF0303E8(v34, (uint64_t)v20, &qword_1EBADD328, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedKnobsConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v37) == 1)
  {
    uint64_t v38 = v65;
    uint64_t v39 = v60;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v65, 1, 1, v60);
    uint64_t v40 = v38;
    uint64_t v41 = v61;
    sub_1DF0303E8(v40, v61, qword_1EBADC4D0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedGroupKnobs);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v41, 1, v39) == 1)
    {
      uint64_t v43 = v55;
      uint64_t v42 = v56;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v36, 1, 1, v56);
      sub_1DF0303E8(v36, v35, qword_1EBAE6B30, (void (*)(uint64_t))type metadata accessor for ArticleListAudioHistoryFeedGroupKnobs);
      int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v35, 1, v42);
      uint64_t v45 = v63;
      uint64_t v46 = (uint64_t)v57;
      uint64_t v47 = v59;
      if (v44 == 1)
      {
        sub_1DEAC0F40();
        uint64_t v49 = (uint64_t)v54;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v54, 1, 1, v48);
        sub_1DF3A602C(v49, v46);
        sub_1DF030454(v36, qword_1EBAE6B30, (void (*)(uint64_t))type metadata accessor for ArticleListAudioHistoryFeedGroupKnobs);
        sub_1DF030454(v35, qword_1EBAE6B30, (void (*)(uint64_t))type metadata accessor for ArticleListAudioHistoryFeedGroupKnobs);
      }
      else
      {
        sub_1DF030454(v36, qword_1EBAE6B30, (void (*)(uint64_t))type metadata accessor for ArticleListAudioHistoryFeedGroupKnobs);
        sub_1DF0304B0(v35, v46, (uint64_t (*)(void))type metadata accessor for ArticleListAudioHistoryFeedGroupKnobs);
      }
      uint64_t v37 = v69;
      sub_1DF0304B0(v46, v47, (uint64_t (*)(void))type metadata accessor for ArticleListAudioHistoryFeedGroupKnobs);
      sub_1DF030454(v61, qword_1EBADC4D0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedGroupKnobs);
    }
    else
    {
      uint64_t v47 = v59;
      sub_1DF0304B0(v41, v59, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedGroupKnobs);
      uint64_t v45 = v63;
    }
    uint64_t v50 = v62;
    uint64_t v51 = v58;
    sub_1DF0304B0(v47, v58, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedGroupKnobs);
    sub_1DF030454(v65, qword_1EBADC4D0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedGroupKnobs);
    *(void *)(v51 + *(int *)(v37 + 20)) = 0x7FFFFFFFFFFFFFFFLL;
    sub_1DF0304B0(v51, v50, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedKnobsConfig);
    sub_1DF030454(v34, &qword_1EBADD328, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedKnobsConfig);
    sub_1DF030454(v45, &qword_1EBAD9490, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedConfig);
    sub_1DF030454((uint64_t)v20, &qword_1EBADD328, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedKnobsConfig);
  }
  else
  {
    sub_1DF030454(v34, &qword_1EBADD328, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedKnobsConfig);
    sub_1DF030454(v63, &qword_1EBAD9490, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedConfig);
    uint64_t v50 = v62;
    sub_1DF0304B0((uint64_t)v20, v62, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedKnobsConfig);
  }
  uint64_t v52 = type metadata accessor for AudioHistoryFeedContentConfig();
  return sub_1DF0304B0(v50, v33 + *(int *)(v52 + 20), (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedKnobsConfig);
}

uint64_t sub_1DF02FCE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1DEA20870(0, &qword_1EBADD328, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedKnobsConfig);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - v5;
  sub_1DEA20870(0, &qword_1EBAD9490, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedConfig);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v15 - v8;
  sub_1DF030338();
  uint64_t v11 = v10;
  uint64_t v15 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF030394();
  sub_1DFE00190();
  if (!v2)
  {
    type metadata accessor for AudioHistoryFeedConfig();
    char v18 = 0;
    sub_1DE95E68C(&qword_1EBAD9488, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedConfig);
    sub_1DFDFFCD0();
    type metadata accessor for AudioHistoryFeedKnobsConfig();
    char v17 = 1;
    sub_1DE95E68C(&qword_1EBADD320, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedKnobsConfig);
    sub_1DFDFFCD0();
    sub_1DF02F358((uint64_t)v9, (uint64_t)v6, v16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF02FFB0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF030010@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF030074(uint64_t a1)
{
  unint64_t v2 = sub_1DF030394();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF0300B0(uint64_t a1)
{
  unint64_t v2 = sub_1DF030394();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF0300EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF02FCE8(a1, a2);
}

uint64_t sub_1DF030104@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF030518(v1, a1, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedConfig);
}

uint64_t sub_1DF030138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF030518(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedKnobsConfig);
}

uint64_t sub_1DF030170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DEA20870(0, &qword_1EBADD328, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedKnobsConfig);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  sub_1DEA20870(0, &qword_1EBAD9490, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedConfig);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - v11;
  sub_1DF030518(a1, (uint64_t)&v16 - v11, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedConfig);
  uint64_t v13 = type metadata accessor for AudioHistoryFeedConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  sub_1DF030518(v3 + *(int *)(a2 + 20), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AudioHistoryFeedKnobsConfig);
  uint64_t v14 = type metadata accessor for AudioHistoryFeedKnobsConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  return sub_1DF02F358((uint64_t)v12, (uint64_t)v9, a3);
}

void sub_1DF030338()
{
  if (!qword_1EBACCCA8)
  {
    sub_1DF030394();
    unint64_t v0 = sub_1DFDFFDD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACCCA8);
    }
  }
}

unint64_t sub_1DF030394()
{
  unint64_t result = qword_1EBADF740;
  if (!qword_1EBADF740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADF740);
  }
  return result;
}

uint64_t sub_1DF0303E8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DEA20870(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DF030454(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DEA20870(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF0304B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF030518(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for AudioHistoryFeedContentConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF03064CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioHistoryFeedContentConfig.CodingKeys()
{
  return &type metadata for AudioHistoryFeedContentConfig.CodingKeys;
}

unint64_t sub_1DF030688()
{
  unint64_t result = qword_1EAC27A48;
  if (!qword_1EAC27A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A48);
  }
  return result;
}

unint64_t sub_1DF0306E0()
{
  unint64_t result = qword_1EBADF750;
  if (!qword_1EBADF750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADF750);
  }
  return result;
}

unint64_t sub_1DF030738()
{
  unint64_t result = qword_1EBADF748;
  if (!qword_1EBADF748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADF748);
  }
  return result;
}

uint64_t ShortcutIcon.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v24 = type metadata accessor for ShortcutIconURL();
  MEMORY[0x1F4188790](v24);
  unsigned int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF031AA0(0, &qword_1EAC27A50, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for ShortcutIcon();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF0318F0();
  uint64_t v12 = v27;
  sub_1DFE00190();
  if (!v12)
  {
    uint64_t v13 = (uint64_t)v4;
    uint64_t v23 = v11;
    uint64_t v27 = v9;
    uint64_t v15 = v25;
    uint64_t v14 = v26;
    char v33 = 0;
    sub_1DF031990();
    sub_1DFDFFD90();
    if (v28)
    {
      LOBYTE(v28) = 1;
      sub_1DF031BBC(&qword_1EAC27A68);
      sub_1DFDFFD90();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      char v17 = v23;
      sub_1DF0319E4(v13, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
    }
    else
    {
      char v33 = 1;
      sub_1DF031A4C();
      sub_1DFDFFD90();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      uint64_t v18 = v29;
      long long v19 = v30;
      long long v20 = v31;
      long long v21 = v32;
      char v17 = v23;
      *uint64_t v23 = v28;
      v17[1] = v18;
      *((_OWORD *)v17 + 1) = v19;
      *((_OWORD *)v17 + 2) = v20;
      *((_OWORD *)v17 + 3) = v21;
    }
    swift_storeEnumTagMultiPayload();
    sub_1DF0319E4((uint64_t)v17, v14, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void *ShortcutIcon.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ShortcutIconURL();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ShortcutIcon();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF031AA0(0, &qword_1EAC27A78, MEMORY[0x1E4FBBDE0]);
  uint64_t v27 = v10;
  uint64_t v29 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v24 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF0318F0();
  sub_1DFE001A0();
  sub_1DF031B04(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DF0319E4((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
    LOBYTE(v30) = 1;
    char v38 = 0;
    sub_1DF031B68();
    uint64_t v14 = v27;
    uint64_t v13 = v28;
    sub_1DFDFFE80();
    if (!v13)
    {
      LOBYTE(v30) = 1;
      sub_1DF031BBC(&qword_1EAC27A88);
      sub_1DFDFFE80();
    }
    sub_1DF032A50((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v14);
  }
  else
  {
    uint64_t v16 = v9[1];
    uint64_t v24 = *v9;
    uint64_t v25 = v16;
    char v17 = (void *)v9[3];
    uint64_t v26 = (void *)v9[2];
    uint64_t v18 = v9[4];
    uint64_t v19 = v9[5];
    uint64_t v20 = v9[6];
    uint64_t v21 = v9[7];
    LOBYTE(v30) = 0;
    char v38 = 0;
    sub_1DF031B68();
    uint64_t v22 = v27;
    uint64_t v23 = v28;
    sub_1DFDFFE80();
    if (!v23)
    {
      uint64_t v30 = v24;
      uint64_t v31 = v25;
      long long v32 = v26;
      char v33 = v17;
      uint64_t v34 = v18;
      uint64_t v35 = v19;
      uint64_t v36 = v20;
      uint64_t v37 = v21;
      char v38 = 1;
      sub_1DF031C00();
      sub_1DFDFFE80();
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v22);
    swift_bridgeObjectRelease();
    return sub_1DEB20BF4(v26, v17);
  }
}

uint64_t sub_1DF030E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF0328C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF030EC4(uint64_t a1)
{
  unint64_t v2 = sub_1DF0318F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF030F00(uint64_t a1)
{
  unint64_t v2 = sub_1DF0318F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF030F3C(char *a1, char *a2)
{
  return sub_1DF2A7BA4(*a1, *a2);
}

uint64_t sub_1DF030F48()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF030FC0()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF031024()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF031098@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1DF0310F8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7107189;
  if (!*v1) {
    uint64_t v2 = 0x6D6574737973;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DF03112C()
{
  return sub_1DFDFE1D0();
}

uint64_t sub_1DF03118C()
{
  return sub_1DFDFE180();
}

uint64_t sub_1DF0311DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShortcutIcon.init(from:)(a1, a2);
}

void *sub_1DF0311F4(void *a1)
{
  return ShortcutIcon.encode(to:)(a1);
}

uint64_t ShortcutIcon.pillViewImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  uint64_t v3 = sub_1DFDE7220();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v31 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = (int *)type metadata accessor for ShortcutIconURL();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ShortcutIcon();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF031B04(v2, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DF0319E4((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v19(v12, v15, v3);
    v19(v10, &v15[v13[5]], v3);
    v19(v7, &v15[v13[6]], v3);
    uint64_t v20 = &v15[v13[7]];
    if (*(void *)v20) {
      id v21 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, *(void *)v20, *((void *)v20 + 1));
    }
    uint64_t v26 = v32;
    sub_1DFDF1360();
    sub_1DF032A50((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
    uint64_t v27 = (unsigned int *)MEMORY[0x1E4FABE18];
  }
  else
  {
    uint64_t v22 = (void *)*((void *)v18 + 2);
    uint64_t v23 = (void *)*((void *)v18 + 3);
    if (v22)
    {
      uint64_t v24 = self;
      swift_bridgeObjectRetain();
      id v25 = objc_msgSend(v24, sel_ts_dynamicColor_withDarkStyleVariant_, v22, v23);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v26 = v32;
    sub_1DFDF22B0();
    swift_bridgeObjectRelease();
    sub_1DEB20BF4(v22, v23);
    uint64_t v27 = (unsigned int *)MEMORY[0x1E4FABE08];
  }
  uint64_t v28 = *v27;
  uint64_t v29 = sub_1DFDF0BF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v26, v28, v29);
}

uint64_t _s7NewsUI212ShortcutIconO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutIconURL();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ShortcutIcon();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (void *)((char *)v37 - v11);
  sub_1DF0329EC();
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v16[*(int *)(v14 + 56)];
  sub_1DF031B04(a1, (uint64_t)v16);
  sub_1DF031B04(a2, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DF031B04((uint64_t)v16, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DF0319E4((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
      char v18 = _s7NewsUI215ShortcutIconURLV2eeoiySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)v6);
      sub_1DF032A50((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
      sub_1DF032A50((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
LABEL_9:
      id v25 = (uint64_t (*)(void))type metadata accessor for ShortcutIcon;
      goto LABEL_10;
    }
    sub_1DF032A50((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
  }
  else
  {
    sub_1DF031B04((uint64_t)v16, (uint64_t)v12);
    uint64_t v20 = v12[1];
    uint64_t v19 = (void *)v12[2];
    uint64_t v22 = (void *)v12[3];
    uint64_t v21 = v12[4];
    uint64_t v23 = v12[6];
    uint64_t v42 = v12[5];
    uint64_t v24 = v12[7];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v26 = *v12;
      uint64_t v27 = *(void *)v17;
      uint64_t v28 = *((void *)v17 + 1);
      uint64_t v29 = v24;
      uint64_t v40 = v23;
      uint64_t v41 = v24;
      uint64_t v30 = v23;
      uint64_t v31 = (void *)*((void *)v17 + 2);
      uint64_t v32 = (void *)*((void *)v17 + 3);
      uint64_t v33 = *((void *)v17 + 4);
      uint64_t v38 = *((void *)v17 + 5);
      uint64_t v39 = v33;
      uint64_t v34 = *((void *)v17 + 6);
      uint64_t v35 = *((void *)v17 + 7);
      v37[1] = v34;
      v44[0] = v26;
      v44[1] = v20;
      _OWORD v44[2] = v19;
      v44[3] = v22;
      v44[4] = v21;
      v44[5] = v42;
      v44[6] = v30;
      v44[7] = v29;
      v43[0] = v27;
      v43[1] = v28;
      void v43[2] = v31;
      v43[3] = v32;
      v43[4] = v33;
      v43[5] = v38;
      v43[6] = v34;
      v43[7] = v35;
      char v18 = _s7NewsUI223ShortcutIconSystemImageV2eeoiySbAC_ACtFZ_0(v44, v43);
      swift_bridgeObjectRelease();
      sub_1DEB20BF4(v31, v32);
      swift_bridgeObjectRelease();
      sub_1DEB20BF4(v19, v22);
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    sub_1DEB20BF4(v19, v22);
  }
  char v18 = 0;
  id v25 = (uint64_t (*)(void))sub_1DF0329EC;
LABEL_10:
  sub_1DF032A50((uint64_t)v16, v25);
  return v18 & 1;
}

unint64_t sub_1DF0318F0()
{
  unint64_t result = qword_1EAC27A58;
  if (!qword_1EAC27A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A58);
  }
  return result;
}

uint64_t type metadata accessor for ShortcutIcon()
{
  uint64_t result = qword_1EBACB930;
  if (!qword_1EBACB930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1DF031990()
{
  unint64_t result = qword_1EAC27A60;
  if (!qword_1EAC27A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A60);
  }
  return result;
}

uint64_t sub_1DF0319E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DF031A4C()
{
  unint64_t result = qword_1EAC27A70;
  if (!qword_1EAC27A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A70);
  }
  return result;
}

void sub_1DF031AA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF0318F0();
    unint64_t v7 = a3(a1, &type metadata for ShortcutIcon.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF031B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutIcon();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DF031B68()
{
  unint64_t result = qword_1EAC27A80;
  if (!qword_1EAC27A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A80);
  }
  return result;
}

uint64_t sub_1DF031BBC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ShortcutIconURL();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF031C00()
{
  unint64_t result = qword_1EAC27A90;
  if (!qword_1EAC27A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A90);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ShortcutIcon(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1DFDE7220();
      unint64_t v7 = *(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for ShortcutIconURL();
      v7((void *)((char *)a1 + v8[5]), (void *)((char *)a2 + v8[5]), v6);
      v7((void *)((char *)a1 + v8[6]), (void *)((char *)a2 + v8[6]), v6);
      uint64_t v9 = v8[7];
      uint64_t v10 = (void *)((char *)a1 + v9);
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = *(void **)v11;
      if (*(void *)v11)
      {
        uint64_t v14 = (void *)*((void *)v11 + 1);
        uint64_t v13 = *((void *)v11 + 2);
        *uint64_t v10 = v12;
        v10[1] = v14;
        uint64_t v16 = *((void *)v11 + 3);
        uint64_t v15 = *((void *)v11 + 4);
        void v10[2] = v13;
        void v10[3] = v16;
        uint64_t v17 = *((void *)v11 + 5);
        v10[4] = v15;
        _WORD v10[5] = v17;
        id v18 = v12;
        id v19 = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v30 = *((_OWORD *)v11 + 1);
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v30;
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      }
    }
    else
    {
      uint64_t v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      uint64_t v22 = (void *)a2[2];
      swift_bridgeObjectRetain();
      if (v22)
      {
        uint64_t v24 = (void *)a2[3];
        uint64_t v23 = a2[4];
        a1[2] = v22;
        a1[3] = v24;
        uint64_t v26 = a2[5];
        uint64_t v25 = a2[6];
        a1[4] = v23;
        a1[5] = v26;
        uint64_t v27 = a2[7];
        a1[6] = v25;
        a1[7] = v27;
        id v28 = v22;
        id v29 = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v31 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v31;
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ShortcutIcon(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1DFDE7220();
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    v3(a1, v2);
    uint64_t v4 = (int *)type metadata accessor for ShortcutIconURL();
    v3(a1 + v4[5], v2);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v3)(a1 + v4[6], v2);
    uint64_t v6 = (id *)(a1 + v4[7]);
    if (!*v6) {
      return result;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v7 = *(void **)(a1 + 16);
    if (!v7) {
      return result;
    }

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ShortcutIcon(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1DFDE7220();
    int v5 = *(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16);
    v5(a1, a2, v4);
    uint64_t v6 = (int *)type metadata accessor for ShortcutIconURL();
    v5((void *)((char *)a1 + v6[5]), (void *)((char *)a2 + v6[5]), v4);
    v5((void *)((char *)a1 + v6[6]), (void *)((char *)a2 + v6[6]), v4);
    uint64_t v7 = v6[7];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = *(void **)v9;
    if (*(void *)v9)
    {
      uint64_t v12 = (void *)*((void *)v9 + 1);
      uint64_t v11 = *((void *)v9 + 2);
      void *v8 = v10;
      v8[1] = v12;
      uint64_t v14 = *((void *)v9 + 3);
      uint64_t v13 = *((void *)v9 + 4);
      _OWORD v8[2] = v11;
      v8[3] = v14;
      uint64_t v15 = *((void *)v9 + 5);
      void v8[4] = v13;
      v8[5] = v15;
      id v16 = v10;
      id v17 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v27 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v27;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    }
  }
  else
  {
    uint64_t v18 = a2[1];
    *a1 = *a2;
    a1[1] = v18;
    id v19 = (void *)a2[2];
    swift_bridgeObjectRetain();
    if (v19)
    {
      uint64_t v21 = (void *)a2[3];
      uint64_t v20 = a2[4];
      a1[2] = v19;
      a1[3] = v21;
      uint64_t v23 = a2[5];
      uint64_t v22 = a2[6];
      a1[4] = v20;
      a1[5] = v23;
      uint64_t v24 = a2[7];
      a1[6] = v22;
      a1[7] = v24;
      id v25 = v19;
      id v26 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v28 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v28;
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ShortcutIcon(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DF032A50((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1DFDE7220();
      int v5 = *(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      uint64_t v6 = (int *)type metadata accessor for ShortcutIconURL();
      v5((void *)((char *)a1 + v6[5]), (void *)((char *)a2 + v6[5]), v4);
      v5((void *)((char *)a1 + v6[6]), (void *)((char *)a2 + v6[6]), v4);
      uint64_t v7 = v6[7];
      uint64_t v8 = (void *)((char *)a1 + v7);
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = *(void **)v9;
      if (*(void *)v9)
      {
        void *v8 = v10;
        uint64_t v11 = (void *)*((void *)v9 + 1);
        v8[1] = v11;
        _OWORD v8[2] = *((void *)v9 + 2);
        v8[3] = *((void *)v9 + 3);
        void v8[4] = *((void *)v9 + 4);
        v8[5] = *((void *)v9 + 5);
        id v12 = v10;
        id v13 = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v18 = *(_OWORD *)v9;
        long long v19 = *((_OWORD *)v9 + 2);
        *((_OWORD *)v8 + 1) = *((_OWORD *)v9 + 1);
        *((_OWORD *)v8 + 2) = v19;
        *(_OWORD *)uint64_t v8 = v18;
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v14 = (void *)a2[2];
      swift_bridgeObjectRetain();
      if (v14)
      {
        a1[2] = v14;
        uint64_t v15 = (void *)a2[3];
        a1[3] = v15;
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        id v16 = v14;
        id v17 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v20 = *((_OWORD *)a2 + 1);
        long long v21 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v21;
        *((_OWORD *)a1 + 1) = v20;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ShortcutIcon(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1DFDE7220();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    uint64_t v8 = (int *)type metadata accessor for ShortcutIconURL();
    v7(&a1[v8[5]], &a2[v8[5]], v6);
    v7(&a1[v8[6]], &a2[v8[6]], v6);
    uint64_t v9 = v8[7];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    long long v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for ShortcutIcon(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DF032A50((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1DFDE7220();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for ShortcutIconURL();
      v7(&a1[v8[5]], &a2[v8[5]], v6);
      v7(&a1[v8[6]], &a2[v8[6]], v6);
      uint64_t v9 = v8[7];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      long long v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DF0325B8()
{
  uint64_t result = type metadata accessor for ShortcutIconURL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShortcutIcon.CodingType()
{
  return &type metadata for ShortcutIcon.CodingType;
}

unsigned char *_s7NewsUI212ShortcutIconO10CodingTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF03272CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShortcutIcon.CodingKeys()
{
  return &type metadata for ShortcutIcon.CodingKeys;
}

unint64_t sub_1DF032768()
{
  unint64_t result = qword_1EAC27A98;
  if (!qword_1EAC27A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27A98);
  }
  return result;
}

unint64_t sub_1DF0327C0()
{
  unint64_t result = qword_1EAC27AA0;
  if (!qword_1EAC27AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27AA0);
  }
  return result;
}

unint64_t sub_1DF032818()
{
  unint64_t result = qword_1EAC27AA8;
  if (!qword_1EAC27AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27AA8);
  }
  return result;
}

unint64_t sub_1DF032870()
{
  unint64_t result = qword_1EAC27AB0;
  if (!qword_1EAC27AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27AB0);
  }
  return result;
}

uint64_t sub_1DF0328C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1DF032998()
{
  unint64_t result = qword_1EAC27AB8;
  if (!qword_1EAC27AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27AB8);
  }
  return result;
}

void sub_1DF0329EC()
{
  if (!qword_1EAC2F300)
  {
    type metadata accessor for ShortcutIcon();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC2F300);
    }
  }
}

uint64_t sub_1DF032A50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF032AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF032AC4);
}

uint64_t sub_1DF032AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF032B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF032B44);
}

uint64_t sub_1DF032B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ArticleListSharedWithYouFeedGroupConfigData()
{
  uint64_t result = qword_1EAC27AC0;
  if (!qword_1EAC27AC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF032C00()
{
  uint64_t result = sub_1DFDFAA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF032C98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v15 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v17 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF0331F4(0, &qword_1EAC27AD0, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF0331A0();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v12 = v15;
    uint64_t v11 = v16;
    char v18 = 0;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v17, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF032EE8(void *a1)
{
  sub_1DF0331F4(0, &qword_1EAC27AE0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF0331A0();
  sub_1DFE001A0();
  v9[15] = 0;
  sub_1DFDFAA20();
  sub_1DE9CB07C(&qword_1EBABA3B0);
  sub_1DFDFFE80();
  if (!v1)
  {
    v9[14] = 1;
    sub_1DF033258();
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF03309C()
{
  if (*v0) {
    return 1684957547;
  }
  else {
    return 0x746E65746E6F63;
  }
}

uint64_t sub_1DF0330D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF0334B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF0330F8(uint64_t a1)
{
  unint64_t v2 = sub_1DF0331A0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF033134(uint64_t a1)
{
  unint64_t v2 = sub_1DF0331A0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF033170@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF032C98(a1, a2);
}

uint64_t sub_1DF033188(void *a1)
{
  return sub_1DF032EE8(a1);
}

unint64_t sub_1DF0331A0()
{
  unint64_t result = qword_1EAC27AD8;
  if (!qword_1EAC27AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27AD8);
  }
  return result;
}

void sub_1DF0331F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF0331A0();
    unint64_t v7 = a3(a1, &type metadata for ArticleListSharedWithYouFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DF033258()
{
  unint64_t result = qword_1EAC27AE8;
  if (!qword_1EAC27AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27AE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ArticleListSharedWithYouFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF033378);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleListSharedWithYouFeedGroupConfigData.CodingKeys()
{
  return &type metadata for ArticleListSharedWithYouFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF0333B4()
{
  unint64_t result = qword_1EAC27AF0;
  if (!qword_1EAC27AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27AF0);
  }
  return result;
}

unint64_t sub_1DF03340C()
{
  unint64_t result = qword_1EAC27AF8;
  if (!qword_1EAC27AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27AF8);
  }
  return result;
}

unint64_t sub_1DF033464()
{
  unint64_t result = qword_1EAC27B00;
  if (!qword_1EAC27B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27B00);
  }
  return result;
}

uint64_t sub_1DF0334B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1DF03359C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF0340E0(0, (unint64_t *)&unk_1EBAC0BD0, MEMORY[0x1E4F7D9A8]);
  unint64_t v4 = v3;
  unint64_t result = sub_1DFDECCB0();
  if (result)
  {
    unint64_t v6 = result;
    a2[3] = v4;
    unint64_t result = sub_1DF034144();
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF033630(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF0340E0(0, (unint64_t *)&unk_1EBAC0BD0, MEMORY[0x1E4F7D9A8]);
  uint64_t result = sub_1DFDECCB0();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF0336A0()
{
  type metadata accessor for AdContextFactory();
  return swift_allocObject();
}

uint64_t sub_1DF0336D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AnalyticsReferralFactory();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for AdContextFactory();
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      uint64_t v6 = result;
      uint64_t v7 = type metadata accessor for ArticleContextFactory();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v5;
      *(void *)(result + 24) = v6;
      a2[3] = v7;
      a2[4] = (uint64_t)&off_1F3A87308;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF0337A0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AnalyticsReferralFactory();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for AdContextFactory();
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      uint64_t v4 = result;
      type metadata accessor for FeedViewContextFactory();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v3;
      *(void *)(result + 24) = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF033854@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DF033894(a1, (uint64_t (*)(void))type metadata accessor for ArticleErrorAlertPresenterFactory, (uint64_t)&off_1F3A87258, a2);
}

uint64_t sub_1DF033874@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DF033894(a1, (uint64_t (*)(void))type metadata accessor for IssueErrorAlertPresenterFactory, (uint64_t)&off_1F3A81908, a2);
}

uint64_t sub_1DF033894@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, &qword_1EAC27B10);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = a2(0);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v8;
    a4[3] = v9;
    a4[4] = a3;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF033938@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, &qword_1EBABAF50);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA7AC0);
  uint64_t result = sub_1DFDECCC0();
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA7A50);
  uint64_t result = sub_1DFDECCC0();
  if (v7)
  {
    uint64_t v6 = type metadata accessor for FeedPaywallConfigFactory();
    swift_allocObject();
    uint64_t result = sub_1DE9427FC(v5, &v9, v7, v8);
    a2[3] = v6;
    a2[4] = (uint64_t)&off_1F3AD1540;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void *sub_1DF033AA0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&unk_1EBABAEA0);
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAB0A00);
  uint64_t result = (void *)sub_1DFDECCC0();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAB07F0);
  uint64_t result = (void *)sub_1DFDECCC0();
  if (v7)
  {
    uint64_t v6 = type metadata accessor for MagazineGridItemModelFactory();
    uint64_t result = (void *)swift_allocObject();
    result[2] = v5;
    result[3] = v9;
    result[4] = v10;
    result[5] = v7;
    result[6] = v8;
    a2[3] = v6;
    a2[4] = &off_1F3A7A1B8;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DF033C04(void *a1)
{
  sub_1DE94F204((uint64_t)a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAF90);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAB2AD0);
  uint64_t result = sub_1DFDECCC0();
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAD1178);
  uint64_t result = sub_1DFDECCC0();
  if (v7)
  {
    type metadata accessor for TagFeedViewerViewControllerFactory();
    uint64_t v5 = swift_allocObject();
    sub_1DE942EC4(v10, v5 + 24);
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 64) = v4;
    sub_1DE942EC4(&v8, v5 + 72);
    sub_1DE942EC4(&v6, v5 + 112);
    return v5;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DF033DAC()
{
  sub_1DF0340E0(0, (unint64_t *)&unk_1EBAC0BD0, MEMORY[0x1E4F7D9A8]);
  sub_1DFDED7B0();
  swift_release();
  sub_1DFDE8C40();
  sub_1DFDED7C0();
  return swift_release();
}

uint64_t sub_1DF033E5C(void *a1)
{
  sub_1DF034088();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF0340E0(0, (unint64_t *)&qword_1EBAA7CB0, MEMORY[0x1E4FABFB8]);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = sub_1DFDE8C40();
  sub_1DFDECCC0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6);
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA77E0);
  uint64_t result = sub_1DFDECCC0();
  if (v9[4])
  {
    sub_1DF0340E0(0, (unint64_t *)&unk_1EBAC0BD0, MEMORY[0x1E4F7D9A8]);
    id v8 = objc_allocWithZone(v7);
    return sub_1DFDE9850();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DF034034()
{
  id v0 = objc_msgSend(self, sel_systemBlueColor);
  return MEMORY[0x1F4133030](v0);
}

void sub_1DF034088()
{
  if (!qword_1EBAC03B0)
  {
    sub_1DFDE8C40();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAC03B0);
    }
  }
}

void sub_1DF0340E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEAE44D4();
    unint64_t v7 = a3(a1, &type metadata for NewsActivity2, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DF034144()
{
  unint64_t result = qword_1EAC27B18;
  if (!qword_1EAC27B18)
  {
    sub_1DF0340E0(255, (unint64_t *)&unk_1EBAC0BD0, MEMORY[0x1E4F7D9A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27B18);
  }
  return result;
}

uint64_t sub_1DF0341B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DF034260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1DF0342F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF03430C);
}

uint64_t sub_1DF03430C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEBE3100();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DF0343CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF0343E0);
}

void sub_1DF0343E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEBE3100();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for PromotedArticleListTagFeedGroupKnobs()
{
  uint64_t result = qword_1EBAB8898;
  if (!qword_1EBAB8898) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF0344E8()
{
  sub_1DEBE3100();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1DF03458C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  sub_1DEC49A20();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBE3100();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DED26B68(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    type metadata accessor for TagFeedServiceConfig();
    sub_1DEAD94E8(&qword_1EBAD8430, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
    sub_1DFDF8040();
    sub_1DED26BCC((uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a4, v15, v12);
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v16(v15, v10, v12);
    v16(a4, v15, v12);
  }
  if (!a2)
  {
    v18[1] = 0x7FFFFFFFFFFFFFFFLL;
    sub_1DEA0F99C();
    swift_allocObject();
    a2 = sub_1DFDF8C00();
  }
  sub_1DED26BCC(a1);
  uint64_t result = type metadata accessor for PromotedArticleListTagFeedGroupKnobs();
  *(void *)&a4[*(int *)(result + 20)] = a2;
  *(void *)&a4[*(int *)(result + 24)] = a3;
  return result;
}

uint64_t sub_1DF034808@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1DEC49A20();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF034EF0(0, &qword_1EAC27B20, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF034E9C();
  sub_1DFE00190();
  if (!v2)
  {
    sub_1DEBE3100();
    LOBYTE(v18) = 0;
    sub_1DEAD94E8((unint64_t *)&unk_1EBAE95D0, (void (*)(uint64_t))sub_1DEBE3100);
    sub_1DFDFFCD0();
    sub_1DEA0F99C();
    LOBYTE(v17) = 1;
    sub_1DEAD94E8(&qword_1EBAE9920, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFCD0();
    uint64_t v12 = v18;
    sub_1DEA0F6CC();
    char v16 = 2;
    sub_1DEAD94E8(&qword_1EBAE9908, (void (*)(uint64_t))sub_1DEA0F6CC);
    sub_1DFDFFCD0();
    sub_1DF03458C((uint64_t)v6, v12, v17, v15);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF034AD4(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF034EF0(0, &qword_1EAC27B30, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF034E9C();
  sub_1DFE001A0();
  LOBYTE(v13) = 0;
  sub_1DEBE3100();
  sub_1DEAD94E8(&qword_1EAC22F98, (void (*)(uint64_t))sub_1DEBE3100);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for PromotedArticleListTagFeedGroupKnobs();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 20));
    HIBYTE(v12) = 1;
    sub_1DEA0F99C();
    sub_1DEAD94E8(&qword_1EBAE9918, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFE80();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v12) = 2;
    sub_1DEA0F6CC();
    sub_1DEAD94E8(&qword_1EBAE9900, (void (*)(uint64_t))sub_1DEA0F6CC);
    sub_1DFDFFE30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF034D6C()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73656C7572;
  }
}

uint64_t sub_1DF034DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF035160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF034DF4(uint64_t a1)
{
  unint64_t v2 = sub_1DF034E9C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF034E30(uint64_t a1)
{
  unint64_t v2 = sub_1DF034E9C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF034E6C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1DF034808(a1, a2);
}

uint64_t sub_1DF034E84(void *a1)
{
  return sub_1DF034AD4(a1);
}

unint64_t sub_1DF034E9C()
{
  unint64_t result = qword_1EAC27B28;
  if (!qword_1EAC27B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27B28);
  }
  return result;
}

void sub_1DF034EF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF034E9C();
    unint64_t v7 = a3(a1, &type metadata for PromotedArticleListTagFeedGroupKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PromotedArticleListTagFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF035020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromotedArticleListTagFeedGroupKnobs.CodingKeys()
{
  return &type metadata for PromotedArticleListTagFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DF03505C()
{
  unint64_t result = qword_1EAC27B38;
  if (!qword_1EAC27B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27B38);
  }
  return result;
}

unint64_t sub_1DF0350B4()
{
  unint64_t result = qword_1EAC27B40;
  if (!qword_1EAC27B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27B40);
  }
  return result;
}

unint64_t sub_1DF03510C()
{
  unint64_t result = qword_1EAC27B48;
  if (!qword_1EAC27B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27B48);
  }
  return result;
}

uint64_t sub_1DF035160(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEBEBE0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DFEDC3C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t *sub_1DF0352A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDE7600();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DEA83C40();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = type metadata accessor for HistoryFeedConfig();
    *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
    uint64_t v12 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DEAC0B50();
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v13, v14, v16);
    uint64_t v18 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
    *(void *)&v13[*(int *)(v18 + 20)] = *(void *)&v14[*(int *)(v18 + 20)];
    uint64_t v19 = type metadata accessor for HistoryFeedKnobsConfig();
    *(void *)&v13[*(int *)(v19 + 20)] = *(void *)&v14[*(int *)(v19 + 20)];
    uint64_t v20 = *(int *)(a3 + 20);
    long long v21 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = (uint64_t)v21;
    swift_retain();
    id v22 = v21;
  }
  return a1;
}

void sub_1DF0354CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDE7600();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  type metadata accessor for HistoryFeedConfig();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  sub_1DEAC0B50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  swift_release();
  uint64_t v8 = *(void **)(a1 + *(int *)(a2 + 20));
}

char *sub_1DF035608(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA83C40();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for HistoryFeedConfig();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  uint64_t v10 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  sub_1DEAC0B50();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v11, v12, v14);
  uint64_t v16 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  *(void *)&v11[*(int *)(v16 + 20)] = *(void *)&v12[*(int *)(v16 + 20)];
  uint64_t v17 = type metadata accessor for HistoryFeedKnobsConfig();
  *(void *)&v11[*(int *)(v17 + 20)] = *(void *)&v12[*(int *)(v17 + 20)];
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = *(void **)&a2[v18];
  *(void *)&a1[v18] = v19;
  swift_retain();
  id v20 = v19;
  return a1;
}

char *sub_1DF0357E0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA83C40();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for HistoryFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  sub_1DEAC0B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
  swift_retain();
  swift_release();
  uint64_t v18 = type metadata accessor for HistoryFeedKnobsConfig();
  *(void *)&v14[*(int *)(v18 + 20)] = *(void *)&v15[*(int *)(v18 + 20)];
  uint64_t v19 = *(int *)(a3 + 20);
  id v20 = *(void **)&a1[v19];
  long long v21 = *(void **)&a2[v19];
  *(void *)&a1[v19] = v21;
  id v22 = v21;

  return a1;
}

char *sub_1DF035A20(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA83C40();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for HistoryFeedConfig();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  uint64_t v10 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  sub_1DEAC0B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  *(void *)&v11[*(int *)(v14 + 20)] = *(void *)&v12[*(int *)(v14 + 20)];
  uint64_t v15 = type metadata accessor for HistoryFeedKnobsConfig();
  *(void *)&v11[*(int *)(v15 + 20)] = *(void *)&v12[*(int *)(v15 + 20)];
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1DF035BD0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA83C40();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for HistoryFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  sub_1DEAC0B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
  swift_release();
  uint64_t v18 = type metadata accessor for HistoryFeedKnobsConfig();
  *(void *)&v14[*(int *)(v18 + 20)] = *(void *)&v15[*(int *)(v18 + 20)];
  uint64_t v19 = *(int *)(a3 + 20);
  id v20 = *(void **)&a1[v19];
  *(void *)&a1[v19] = *(void *)&a2[v19];

  return a1;
}

uint64_t sub_1DF035DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF035E10);
}

uint64_t sub_1DF035E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HistoryFeedContentConfig();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1DF035EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF035EF0);
}

uint64_t sub_1DF035EF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for HistoryFeedContentConfig();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for HistoryFeedConfigFetchResult()
{
  uint64_t result = qword_1EBAF0AE8;
  if (!qword_1EBAF0AE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF035FF8()
{
  uint64_t result = type metadata accessor for HistoryFeedContentConfig();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF03608C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v65 = a8;
  uint64_t v66 = a7;
  uint64_t v67 = a6;
  uint64_t v68 = a5;
  uint64_t v69 = a4;
  uint64_t v70 = a3;
  sub_1DEA0F94C(0);
  MEMORY[0x1F4188790](v18 - 8);
  id v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  uint64_t v71 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v63 = (char *)&v63 - v23;
  sub_1DEA0F974(0);
  MEMORY[0x1F4188790](v24 - 8);
  id v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  long long v31 = (char *)&v63 - v30;
  uint64_t v64 = a1;
  sub_1DEA0F744(a1, (uint64_t)v26, (uint64_t (*)(void))sub_1DEA0F974);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28) == 1)
  {
    if (qword_1EBAF7338 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v28, (uint64_t)qword_1EBB63518);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v31, v32, v28);
    sub_1DEB75F40((uint64_t)v26, (uint64_t (*)(void))sub_1DEA0F974);
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v33(v31, v26, v28);
  }
  uint64_t v34 = v70;
  v33(a9, v31, v28);
  uint64_t v35 = a2;
  sub_1DEA0F744(a2, (uint64_t)v20, (uint64_t (*)(void))sub_1DEA0F94C);
  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v71);
  uint64_t v37 = v66;
  if (v36 == 1)
  {
    type metadata accessor for TodayFeedServiceConfig();
    sub_1DEA4B044((unint64_t *)&qword_1EBAAF9B0, (void (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig);
    uint64_t v38 = v63;
    sub_1DFDF8390();
    sub_1DEB75F40((uint64_t)v20, (uint64_t (*)(void))sub_1DEA0F94C);
  }
  else
  {
    uint64_t v38 = v63;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v63, v20, v71);
  }
  uint64_t v39 = v69;
  uint64_t v40 = v65;
  uint64_t v41 = (int *)type metadata accessor for LocalNewsTodayFeedGroupSubtypeKnobs();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&a9[v41[5]], v38, v71);
  if (v34)
  {
    uint64_t v42 = v34;
  }
  else
  {
    sub_1DFDFE580();
    *(double *)&uint64_t v72 = v43 * 12.0;
    sub_1DEA0F6CC();
    swift_allocObject();
    uint64_t v42 = sub_1DFDF8C00();
  }
  *(void *)&a9[v41[6]] = v42;
  if (v39)
  {
    swift_retain();
    uint64_t v44 = v39;
  }
  else
  {
    LOBYTE(v72) = 1;
    sub_1DE98D3F8();
    swift_allocObject();
    swift_retain();
    uint64_t v44 = sub_1DFDF8C00();
  }
  *(void *)&a9[v41[7]] = v44;
  uint64_t v45 = v68;
  if (v68)
  {
    swift_retain();
    uint64_t v46 = v45;
  }
  else
  {
    LOBYTE(v72) = 0;
    sub_1DE98D3F8();
    swift_allocObject();
    swift_retain();
    uint64_t v46 = sub_1DFDF8C00();
  }
  *(void *)&a9[v41[8]] = v46;
  uint64_t v47 = v67;
  if (v67)
  {
    swift_retain();
    uint64_t v48 = v47;
  }
  else
  {
    LOBYTE(v72) = 0;
    sub_1DE98D3F8();
    swift_allocObject();
    swift_retain();
    uint64_t v48 = sub_1DFDF8C00();
  }
  *(void *)&a9[v41[9]] = v48;
  swift_retain();
  if (v37)
  {
    uint64_t v49 = v37;
  }
  else
  {
    sub_1DFDFE590();
    uint64_t v72 = v50;
    sub_1DEA0F6CC();
    swift_allocObject();
    uint64_t v49 = sub_1DFDF8C00();
  }
  *(void *)&a9[v41[10]] = v49;
  if (v40)
  {
    swift_retain();
    uint64_t v51 = v40;
  }
  else
  {
    uint64_t v52 = a9;
    sub_1DED4EC70(0, (unint64_t *)&unk_1EBABB590, MEMORY[0x1E4FBBE00]);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1DFE0B750;
    uint64_t v54 = qword_1EBADFD90;
    swift_retain();
    if (v54 != -1) {
      swift_once();
    }
    char v55 = byte_1EBB63238 | 0x80;
    *(void *)(v53 + 32) = qword_1EBB63230;
    *(unsigned char *)(v53 + 40) = v55;
    *(void *)(v53 + 48) = 5;
    *(unsigned char *)(v53 + 56) = 0;
    uint64_t v72 = v53;
    sub_1DF03791C();
    swift_allocObject();
    uint64_t v51 = sub_1DFDF8C00();
    a9 = v52;
  }
  *(void *)&a9[v41[11]] = v51;
  if (a10)
  {
    swift_retain();
    uint64_t v56 = a10;
  }
  else
  {
    uint64_t v72 = 1;
    sub_1DEA0F99C();
    swift_allocObject();
    swift_retain();
    uint64_t v56 = sub_1DFDF8C00();
  }
  *(void *)&a9[v41[12]] = v56;
  if (a11)
  {
    swift_retain();
    uint64_t v57 = a11;
  }
  else
  {
    uint64_t v72 = 1;
    sub_1DEA0F99C();
    swift_allocObject();
    swift_retain();
    uint64_t v57 = sub_1DFDF8C00();
  }
  *(void *)&a9[v41[13]] = v57;
  if (a12)
  {
    swift_retain();
    uint64_t v58 = a12;
  }
  else
  {
    uint64_t v72 = 1;
    sub_1DEA0F99C();
    swift_allocObject();
    swift_retain();
    uint64_t v58 = sub_1DFDF8C00();
  }
  uint64_t v59 = a14;
  *(void *)&a9[v41[14]] = v58;
  if (a13)
  {
    swift_retain();
    uint64_t v60 = a13;
  }
  else
  {
    uint64_t v72 = 3;
    sub_1DEA0F99C();
    swift_allocObject();
    swift_retain();
    uint64_t v60 = sub_1DFDF8C00();
  }
  uint64_t v61 = a15;
  *(void *)&a9[v41[15]] = v60;
  if (a14)
  {
    swift_retain();
  }
  else
  {
    *(double *)&uint64_t v72 = 0.0;
    sub_1DEA0F99C();
    swift_allocObject();
    swift_retain();
    uint64_t v59 = sub_1DFDF8C00();
  }
  *(void *)&a9[v41[16]] = v59;
  if (!a15)
  {
    uint64_t v72 = 4;
    sub_1DEA0F99C();
    swift_allocObject();
    uint64_t v61 = sub_1DFDF8C00();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1DEB75F40(v35, (uint64_t (*)(void))sub_1DEA0F94C);
  uint64_t result = sub_1DEB75F40(v64, (uint64_t (*)(void))sub_1DEA0F974);
  *(void *)&a9[v41[17]] = v61;
  return result;
}

uint64_t sub_1DF0369D4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v32 = a2;
  sub_1DEA0F94C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA0F974(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF038CC8(0, &qword_1EBAF87D8, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v31 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF038C30();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v30 = 0;
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F760];
    sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
    LOBYTE(v45) = 0;
    sub_1DF038C84(&qword_1EBABA118, (unint64_t *)&unk_1EBABA120, v14);
    uint64_t v29 = v9;
    sub_1DFDFFCD0();
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F8F8];
    sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    LOBYTE(v45) = 1;
    sub_1DF038C84(&qword_1EBABA158, &qword_1EBABA160, v15);
    sub_1DFDFFCD0();
    sub_1DEA0F6CC();
    LOBYTE(v44) = 2;
    uint64_t v28 = v6;
    sub_1DEA4B044(&qword_1EBAE9908, (void (*)(uint64_t))sub_1DEA0F6CC);
    sub_1DFDFFCD0();
    uint64_t v27 = v45;
    sub_1DE98D3F8();
    LOBYTE(v43) = 3;
    sub_1DEA4B044(&qword_1EBAE98F0, (void (*)(uint64_t))sub_1DE98D3F8);
    sub_1DFDFFCD0();
    uint64_t v26 = v44;
    LOBYTE(v42) = 4;
    sub_1DFDFFCD0();
    uint64_t v25 = v43;
    LOBYTE(v41) = 5;
    sub_1DFDFFCD0();
    uint64_t v24 = v42;
    LOBYTE(v40) = 6;
    sub_1DFDFFCD0();
    uint64_t v23 = v41;
    sub_1DF03791C();
    LOBYTE(v39) = 7;
    sub_1DEA4B044(&qword_1EBAF8650, (void (*)(uint64_t))sub_1DF03791C);
    sub_1DFDFFCD0();
    uint64_t v22 = v40;
    sub_1DEA0F99C();
    LOBYTE(v38) = 8;
    sub_1DEA4B044(&qword_1EBAE9920, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFCD0();
    uint64_t v21 = v39;
    LOBYTE(v37) = 9;
    sub_1DFDFFCD0();
    uint64_t v20 = v38;
    LOBYTE(v36) = 10;
    sub_1DFDFFCD0();
    uint64_t v16 = v37;
    LOBYTE(v35) = 9;
    sub_1DFDFFCD0();
    uint64_t v17 = v36;
    LOBYTE(v34) = 12;
    sub_1DFDFFCD0();
    uint64_t v18 = v35;
    char v33 = 13;
    sub_1DFDFFCD0();
    sub_1DF03608C((uint64_t)v29, (uint64_t)v28, v27, v26, v25, v24, v23, v22, v32, v21, v20, v16, v17, v18, v34);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1DF036FF4(char a1)
{
  unint64_t result = 0x73656C7572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6F6F706572;
      break;
    case 2:
      unint64_t result = 0x6E69576863746566;
      break;
    case 3:
      unint64_t result = 0x456F54706D616C63;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
    case 8:
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 11:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF0371A0(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF038CC8(0, &qword_1EBAF8800, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF038C30();
  sub_1DFE001A0();
  LOBYTE(v21) = 0;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F760];
  sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  sub_1DF038C84(&qword_1EBAA6348, (unint64_t *)&unk_1EBABA120, v10);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v11 = (int *)type metadata accessor for LocalNewsTodayFeedGroupSubtypeKnobs();
    uint64_t v19 = v3;
    LOBYTE(v21) = 1;
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F8F8];
    sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    sub_1DF038C84((unint64_t *)&unk_1EBAA6368, &qword_1EBABA160, v12);
    sub_1DFDFFE80();
    uint64_t v13 = v19;
    uint64_t v21 = *(void *)(v19 + v11[6]);
    char v20 = 2;
    sub_1DEA0F6CC();
    sub_1DEA4B044(&qword_1EBAE9900, (void (*)(uint64_t))sub_1DEA0F6CC);
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v13 + v11[7]);
    char v20 = 3;
    sub_1DE98D3F8();
    uint64_t v15 = v14;
    sub_1DEA4B044(&qword_1EBAE98E8, (void (*)(uint64_t))sub_1DE98D3F8);
    v18[1] = v15;
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v19 + v11[8]);
    char v20 = 4;
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v19 + v11[9]);
    char v20 = 5;
    sub_1DFDFFE80();
    uint64_t v16 = v19;
    uint64_t v21 = *(void *)(v19 + v11[10]);
    char v20 = 6;
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v16 + v11[11]);
    char v20 = 7;
    sub_1DF03791C();
    sub_1DEA4B044(&qword_1EBAF8648, (void (*)(uint64_t))sub_1DF03791C);
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v16 + v11[12]);
    char v20 = 8;
    sub_1DEA0F99C();
    sub_1DEA4B044(&qword_1EBAE9918, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v16 + v11[13]);
    char v20 = 9;
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v16 + v11[14]);
    char v20 = 10;
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v19 + v11[15]);
    char v20 = 11;
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v19 + v11[16]);
    char v20 = 12;
    sub_1DFDFFE80();
    uint64_t v21 = *(void *)(v19 + v11[17]);
    char v20 = 13;
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DF0377E8()
{
  return sub_1DF036FF4(*v0);
}

uint64_t sub_1DF0377F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF038F38(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DF037818(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1DF037824(uint64_t a1)
{
  unint64_t v2 = sub_1DF038C30();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF037860(uint64_t a1)
{
  unint64_t v2 = sub_1DF038C30();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF03789C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1DF0369D4(a1, a2);
}

uint64_t sub_1DF0378B4(void *a1)
{
  return sub_1DF0371A0(a1);
}

uint64_t type metadata accessor for LocalNewsTodayFeedGroupSubtypeKnobs()
{
  uint64_t result = qword_1EBAF8028;
  if (!qword_1EBAF8028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF03791C()
{
  if (!qword_1EBAF8658)
  {
    sub_1DED4EC70(255, &qword_1EBAA64F8, MEMORY[0x1E4FBB320]);
    sub_1DF037A50((unint64_t *)&unk_1EBAF8710, (void (*)(void))sub_1DEAD8814);
    sub_1DF037A50((unint64_t *)&qword_1EBAA6500, (void (*)(void))sub_1DED4ED4C);
    sub_1DF037A50(&qword_1EBAF8708, (void (*)(void))sub_1DF037AD8);
    unint64_t v0 = sub_1DFDF8C10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF8658);
    }
  }
}

uint64_t sub_1DF037A50(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DED4EC70(255, &qword_1EBAA64F8, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF037AD8()
{
  unint64_t result = qword_1EBAF8098;
  if (!qword_1EBAF8098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF8098);
  }
  return result;
}

uint64_t sub_1DF037B2C()
{
  if ((sub_1DFDF80C0() & 1) != 0
    && (type metadata accessor for LocalNewsTodayFeedGroupSubtypeKnobs(), (sub_1DFDF8380() & 1) != 0)
    && (sub_1DEA0F6CC(), (sub_1DFDF8BE0() & 1) != 0)
    && (sub_1DE98D3F8(), (sub_1DFDF8BE0() & 1) != 0)
    && (sub_1DFDF8BE0() & 1) != 0
    && (sub_1DFDF8BE0() & 1) != 0
    && (sub_1DFDF8BE0() & 1) != 0
    && (sub_1DF03791C(), (sub_1DFDF8BE0() & 1) != 0)
    && (sub_1DEA0F99C(), (sub_1DFDF8BE0() & 1) != 0)
    && (sub_1DFDF8BE0() & 1) != 0
    && (sub_1DFDF8BE0() & 1) != 0
    && (sub_1DFDF8BE0() & 1) != 0
    && (sub_1DFDF8BE0() & 1) != 0)
  {
    return sub_1DFDF8BE0() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t *sub_1DF037D14(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v13 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    uint64_t v15 = a3[13];
    *(uint64_t *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v16 = a3[15];
    *(uint64_t *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v17 = a3[17];
    *(uint64_t *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DF037F4C(uint64_t a1, uint64_t a2)
{
  sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DF0380C4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1DF0382B0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DF0384F8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

uint64_t sub_1DF038668(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_release();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_release();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_release();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_release();
  return a1;
}

uint64_t sub_1DF038850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF038864);
}

uint64_t sub_1DF038864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DF0389B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF0389C4);
}

void sub_1DF0389C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA4C71C(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_1DEA4C71C(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_1DF038B0C()
{
  sub_1DEA4C71C(319, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  if (v0 <= 0x3F)
  {
    sub_1DEA4C71C(319, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1DF038C30()
{
  unint64_t result = qword_1EBAF8000;
  if (!qword_1EBAF8000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF8000);
  }
  return result;
}

uint64_t sub_1DF038C84(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEA4C71C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF038CC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF038C30();
    unint64_t v7 = a3(a1, &type metadata for LocalNewsTodayFeedGroupSubtypeKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LocalNewsTodayFeedGroupSubtypeKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF038DF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalNewsTodayFeedGroupSubtypeKnobs.CodingKeys()
{
  return &type metadata for LocalNewsTodayFeedGroupSubtypeKnobs.CodingKeys;
}

unint64_t sub_1DF038E34()
{
  unint64_t result = qword_1EAC27B50;
  if (!qword_1EAC27B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAC27B50);
  }
  return result;
}

unint64_t sub_1DF038E8C()
{
  unint64_t result = qword_1EBAF8010;
  if (!qword_1EBAF8010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF8010);
  }
  return result;
}

unint64_t sub_1DF038EE4()
{
  unint64_t result = qword_1EBAF8008;
  if (!qword_1EBAF8008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF8008);
  }
  return result;
}

uint64_t sub_1DF038F38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F6F706572 && a2 == 0xE600000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E69576863746566 && a2 == 0xEB00000000776F64 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x456F54706D616C63 && a2 == 0xEE006E6F69746964 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DFEBB510 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DFED1930 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DFECA9E0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DFECAA00 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DFED1990 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DFED19B0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DFED1950 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DFED1970 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFED19D0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFED19F0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

ValueMetadata *type metadata accessor for AlertLiveActivityFollowed()
{
  return &type metadata for AlertLiveActivityFollowed;
}

uint64_t sub_1DF0394A0()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t sub_1DF039568()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t sub_1DF03962C(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  sub_1DEC8DD2C(0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FeedEntity();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_1DFDE7000();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  sub_1DFDE7700();
  v2[12] = swift_task_alloc();
  sub_1DFDFDCD0();
  v2[13] = swift_task_alloc();
  sub_1DFDE7020();
  v2[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF039808, 0, 0);
}

uint64_t sub_1DF039808()
{
  unint64_t v1 = sub_1DE9A3B54();
  unint64_t v2 = v1;
  uint64_t v3 = v1 >> 62;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if ((v31 & 0x8000000000000000) == 0) {
      goto LABEL_32;
    }
    __break(1u);
    goto LABEL_31;
  }
  if (*(uint64_t *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 10) {
    uint64_t v4 = 10;
  }
  else {
    uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0 && v4 != 0)
    {
      type metadata accessor for TagModel();
      uint64_t v6 = 0;
      do
      {
        uint64_t v7 = v6 + 1;
        sub_1DFDFF9F0();
        uint64_t v6 = v7;
      }
      while (v4 != v7);
    }
    if (v3)
    {
      swift_bridgeObjectRetain();
      sub_1DFDFFBF0();
      uint64_t v3 = v22;
      uint64_t v8 = v23;
      unint64_t v25 = v24;
      swift_bridgeObjectRelease_n();
      uint64_t v4 = v25 >> 1;
      uint64_t v10 = v4 - v8;
      BOOL v9 = v4 <= v8;
      if (v4 == v8) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v3 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v10 = v4;
      BOOL v9 = v4 <= 0;
      if (!v4) {
        goto LABEL_26;
      }
    }
    if (!v9) {
      break;
    }
LABEL_31:
    __break(1u);
LABEL_32:
    if (v4 >= 10) {
      uint64_t v32 = 10;
    }
    else {
      uint64_t v32 = v4;
    }
    if (v4 >= 0) {
      uint64_t v4 = v32;
    }
    else {
      uint64_t v4 = 10;
    }
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v33 < v4)
    {
      __break(1u);
      return result;
    }
  }
  uint64_t v11 = v0[6];
  swift_unknownObjectRetain();
  uint64_t v12 = v3 + 8 * v8;
  unint64_t v13 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v15 = v0[4];
    uint64_t v14 = v0[5];
    uint64_t v16 = (void *)swift_unknownObjectRetain();
    sub_1DFAF9A80(v16, v15);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v15, 1, v14) == 1)
    {
      sub_1DED93DB0(v0[4]);
    }
    else
    {
      uint64_t v18 = v0[7];
      uint64_t v17 = v0[8];
      sub_1DED93CF0(v0[4], v17);
      sub_1DED93CF0(v17, v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v13 = sub_1DEE188E4(0, *(void *)(v13 + 16) + 1, 1, v13);
      }
      unint64_t v20 = *(void *)(v13 + 16);
      unint64_t v19 = *(void *)(v13 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v13 = sub_1DEE188E4(v19 > 1, v20 + 1, 1, v13);
      }
      uint64_t v21 = v0[7];
      *(void *)(v13 + 16) = v20 + 1;
      sub_1DED93CF0(v21, v13+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v20);
    }
    v12 += 8;
    --v10;
  }
  while (v10);
  swift_unknownObjectRelease();
LABEL_26:
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[9];
  uint64_t v28 = v0[10];
  swift_unknownObjectRelease();
  sub_1DFDFDC80();
  sub_1DFDE76C0();
  (*(void (**)(uint64_t, void, uint64_t))(v28 + 104))(v26, *MEMORY[0x1E4F275D0], v27);
  sub_1DFDE7030();
  sub_1DED93C34();
  sub_1DFDE66E0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t type metadata accessor for FollowedIntentItemSectionFactory()
{
  return self;
}

uint64_t sub_1DF039C18(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DEB7BAE0;
  return sub_1DF03962C(a1);
}

uint64_t destroy for SearchTagMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchTagMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  uint64_t v13 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  uint64_t v14 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v14;
  uint64_t v15 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v15;
  uint64_t v16 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v16;
  uint64_t v17 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v17;
  uint64_t v18 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v18;
  uint64_t v19 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v19;
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchTagMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v4;
  uint64_t v5 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy312_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for SearchTagMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchTagMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 312)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchTagMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 312) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 312) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchTagMetadata()
{
  return &type metadata for SearchTagMetadata;
}

unint64_t sub_1DF03A42C(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x67616D49656D616ELL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 9:
      unint64_t result = 0x616D497265766F63;
      break;
    case 10:
    case 11:
      unint64_t result = 0x4976614E64656566;
      break;
    case 12:
      unint64_t result = 0x75467374726F7073;
      break;
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 16:
      unint64_t result = 0xD000000000000016;
      break;
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    case 18:
      unint64_t result = 0x7365707954676174;
      break;
    case 19:
      unint64_t result = 0x74695470756F7267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF03A698(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF03CF00(0, &qword_1EAC27B68, (uint64_t (*)(void))sub_1DF03AD48, (uint64_t)&type metadata for SearchTagMetadata.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF03AD48();
  sub_1DFE001A0();
  v12[0] = 0;
  sub_1DFDFFDE0();
  if (!v2)
  {
    v12[0] = 1;
    sub_1DFDFFDE0();
    v12[0] = 2;
    sub_1DFDFFDE0();
    v12[0] = 3;
    sub_1DFDFFDE0();
    v12[0] = 4;
    sub_1DFDFFDE0();
    v12[0] = 5;
    sub_1DFDFFE10();
    v12[0] = 6;
    sub_1DFDFFE00();
    v12[0] = 7;
    sub_1DFDFFDE0();
    v12[0] = 8;
    sub_1DFDFFDE0();
    v12[0] = 9;
    sub_1DFDFFDE0();
    v12[0] = 10;
    sub_1DFDFFDE0();
    v12[0] = 11;
    sub_1DFDFFDE0();
    v12[0] = 12;
    sub_1DFDFFDE0();
    v12[0] = 13;
    sub_1DFDFFDE0();
    v12[0] = 14;
    sub_1DFDFFDE0();
    v12[0] = 15;
    sub_1DFDFFDE0();
    v12[0] = 16;
    sub_1DFDFFDE0();
    v12[0] = 17;
    sub_1DFDFFDE0();
    sub_1DF03AD9C(v3 + 288, (uint64_t)v13);
    sub_1DF03AD9C((uint64_t)v13, (uint64_t)v12);
    v11[7] = 18;
    sub_1DF03CF00(0, &qword_1EAC27B80, (uint64_t (*)(void))sub_1DF03AE90, (uint64_t)&type metadata for SearchTagType, MEMORY[0x1E4FBB510]);
    sub_1DF03CF68(&qword_1EAC27B90, (void (*)(void))sub_1DF03AEE4);
    sub_1DFDFFE30();
    v12[0] = 19;
    sub_1DFDFFDE0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DF03ABA0()
{
  return sub_1DF03A42C(*v0);
}

uint64_t sub_1DF03ABA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF03B484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF03ABD0(uint64_t a1)
{
  unint64_t v2 = sub_1DF03AD48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF03AC0C(uint64_t a1)
{
  unint64_t v2 = sub_1DF03AD48();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1DF03AC48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DF03BC90(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x138uLL);
  }
  return result;
}

uint64_t sub_1DF03AC9C(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1DF03A698(a1);
}

BOOL sub_1DF03ACF0(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1DF03AF38((uint64_t)v4, (uint64_t)__dst);
}

unint64_t sub_1DF03AD48()
{
  unint64_t result = qword_1EAC27B70;
  if (!qword_1EAC27B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27B70);
  }
  return result;
}

uint64_t sub_1DF03AD9C(uint64_t a1, uint64_t a2)
{
  sub_1DF03AE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DF03AE00()
{
  if (!qword_1EAC27B78)
  {
    sub_1DF03CF00(255, &qword_1EAC27B80, (uint64_t (*)(void))sub_1DF03AE90, (uint64_t)&type metadata for SearchTagType, MEMORY[0x1E4FBB510]);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27B78);
    }
  }
}

unint64_t sub_1DF03AE90()
{
  unint64_t result = qword_1EAC27B88;
  if (!qword_1EAC27B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27B88);
  }
  return result;
}

unint64_t sub_1DF03AEE4()
{
  unint64_t result = qword_1EAC27B98;
  if (!qword_1EAC27B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27B98);
  }
  return result;
}

BOOL sub_1DF03AF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (v7 = sub_1DFDFFF50(), BOOL result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v10 = *(void *)(a2 + 24);
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v9 != v10)
      {
        char v11 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v13 = *(void *)(a2 + 40);
    if (v12)
    {
      if (!v13) {
        return 0;
      }
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v12 != v13)
      {
        char v14 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v13)
    {
      return 0;
    }
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v16 = *(void *)(a2 + 56);
    if (v15)
    {
      if (!v16) {
        return 0;
      }
      if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v15 != v16)
      {
        char v17 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v17 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v16)
    {
      return 0;
    }
    uint64_t v18 = *(void *)(a1 + 72);
    uint64_t v19 = *(void *)(a2 + 72);
    if (v18)
    {
      if (!v19) {
        return 0;
      }
      if (*(void *)(a1 + 64) != *(void *)(a2 + 64) || v18 != v19)
      {
        char v20 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v20 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v19)
    {
      return 0;
    }
    char v21 = *(unsigned char *)(a2 + 88);
    if (*(unsigned char *)(a1 + 88))
    {
      if (!*(unsigned char *)(a2 + 88)) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 80) != *(void *)(a2 + 80)) {
        char v21 = 1;
      }
      if (v21) {
        return 0;
      }
    }
    char v22 = *(unsigned char *)(a2 + 104);
    if (*(unsigned char *)(a1 + 104))
    {
      if (!*(unsigned char *)(a2 + 104)) {
        return 0;
      }
    }
    else
    {
      if (*(double *)(a1 + 96) != *(double *)(a2 + 96)) {
        char v22 = 1;
      }
      if (v22) {
        return 0;
      }
    }
    uint64_t v23 = *(void *)(a1 + 120);
    uint64_t v24 = *(void *)(a2 + 120);
    if (v23)
    {
      if (!v24) {
        return 0;
      }
      if (*(void *)(a1 + 112) != *(void *)(a2 + 112) || v23 != v24)
      {
        char v25 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v25 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v24)
    {
      return 0;
    }
    uint64_t v26 = *(void *)(a1 + 136);
    uint64_t v27 = *(void *)(a2 + 136);
    if (v26)
    {
      if (!v27) {
        return 0;
      }
      if (*(void *)(a1 + 128) != *(void *)(a2 + 128) || v26 != v27)
      {
        char v28 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v28 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v27)
    {
      return 0;
    }
    uint64_t v29 = *(void *)(a1 + 152);
    uint64_t v30 = *(void *)(a2 + 152);
    if (v29)
    {
      if (!v30) {
        return 0;
      }
      if (*(void *)(a1 + 144) != *(void *)(a2 + 144) || v29 != v30)
      {
        char v31 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v31 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v30)
    {
      return 0;
    }
    uint64_t v32 = *(void *)(a1 + 168);
    uint64_t v33 = *(void *)(a2 + 168);
    if (v32)
    {
      if (!v33) {
        return 0;
      }
      if (*(void *)(a1 + 160) != *(void *)(a2 + 160) || v32 != v33)
      {
        char v34 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v34 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v33)
    {
      return 0;
    }
    uint64_t v35 = *(void *)(a1 + 184);
    uint64_t v36 = *(void *)(a2 + 184);
    if (v35)
    {
      if (!v36) {
        return 0;
      }
      if (*(void *)(a1 + 176) != *(void *)(a2 + 176) || v35 != v36)
      {
        char v37 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v37 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v36)
    {
      return 0;
    }
    uint64_t v38 = *(void *)(a1 + 200);
    uint64_t v39 = *(void *)(a2 + 200);
    if (v38)
    {
      if (!v39) {
        return 0;
      }
      if (*(void *)(a1 + 192) != *(void *)(a2 + 192) || v38 != v39)
      {
        char v40 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v40 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v39)
    {
      return 0;
    }
    uint64_t v41 = *(void *)(a1 + 216);
    uint64_t v42 = *(void *)(a2 + 216);
    if (v41)
    {
      if (!v42) {
        return 0;
      }
      if (*(void *)(a1 + 208) != *(void *)(a2 + 208) || v41 != v42)
      {
        char v43 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v43 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v42)
    {
      return 0;
    }
    uint64_t v44 = *(void *)(a1 + 232);
    uint64_t v45 = *(void *)(a2 + 232);
    if (v44)
    {
      if (!v45) {
        return 0;
      }
      if (*(void *)(a1 + 224) != *(void *)(a2 + 224) || v44 != v45)
      {
        char v46 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v46 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v45)
    {
      return 0;
    }
    uint64_t v47 = *(void *)(a1 + 248);
    uint64_t v48 = *(void *)(a2 + 248);
    if (v47)
    {
      if (!v48) {
        return 0;
      }
      if (*(void *)(a1 + 240) != *(void *)(a2 + 240) || v47 != v48)
      {
        char v49 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v49 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v48)
    {
      return 0;
    }
    uint64_t v50 = *(void *)(a1 + 264);
    uint64_t v51 = *(void *)(a2 + 264);
    if (v50)
    {
      if (!v51) {
        return 0;
      }
      if (*(void *)(a1 + 256) != *(void *)(a2 + 256) || v50 != v51)
      {
        char v52 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v52 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v51)
    {
      return 0;
    }
    uint64_t v53 = *(void *)(a1 + 280);
    uint64_t v54 = *(void *)(a2 + 280);
    if (v53)
    {
      if (!v54) {
        return 0;
      }
      if (*(void *)(a1 + 272) != *(void *)(a2 + 272) || v53 != v54)
      {
        char v55 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v55 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v54)
    {
      return 0;
    }
    uint64_t v56 = *(void *)(a2 + 288);
    if (*(void *)(a1 + 288))
    {
      if (!v56) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v57 = swift_bridgeObjectRetain();
      char v58 = sub_1DF8BEA04(v57, v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v58 & 1) == 0) {
        return 0;
      }
    }
    else if (v56)
    {
      return 0;
    }
    uint64_t v59 = *(void *)(a1 + 304);
    uint64_t v60 = *(void *)(a2 + 304);
    if (v59) {
      return v60 && (*(void *)(a1 + 296) == *(void *)(a2 + 296) && v59 == v60 || (sub_1DFDFFF50() & 1) != 0);
    }
    return !v60;
  }
  return result;
}

uint64_t sub_1DF03B484(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x67616D49656D616ELL && a2 == 0xE900000000000065 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x67616D49656D616ELL && a2 == 0xED00006B73614D65 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DFEDC650 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DFEDC670 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DFEDC690 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DFEDC6B0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DFEDC6D0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DFEDC6F0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x616D497265766F63 && a2 == 0xEA00000000006567 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4976614E64656566 && a2 == 0xEC0000006567616DLL || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x4976614E64656566 && a2 == 0xEE0051486567616DLL || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x75467374726F7073 && a2 == 0xEE00656D614E6C6CLL || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DFEDC710 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFEDC730 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEDC750 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DFEDC770 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DFEDC790 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x7365707954676174 && a2 == 0xE800000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x74695470756F7267 && a2 == 0xEF726F6C6F43656CLL)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 19;
    }
    else {
      return 20;
    }
  }
}

void *sub_1DF03BC90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DF03CF00(0, &qword_1EAC27BA0, (uint64_t (*)(void))sub_1DF03AD48, (uint64_t)&type metadata for SearchTagMetadata.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v97 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v57 - v7;
  uint64_t v9 = a1[3];
  uint64_t v135 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1DF03AD48();
  sub_1DFE00190();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v135);
  }
  uint64_t v10 = v6;
  uint64_t v87 = a2;
  LOBYTE(v99[0]) = 0;
  uint64_t v12 = sub_1DFDFFCF0();
  LOBYTE(v99[0]) = 1;
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1DFDFFCF0();
  uint64_t v96 = v14;
  uint64_t v86 = v15;
  LOBYTE(v99[0]) = 2;
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1DFDFFCF0();
  uint64_t v95 = v17;
  uint64_t v19 = v18;
  LOBYTE(v99[0]) = 3;
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1DFDFFCF0();
  uint64_t v94 = v21;
  uint64_t v85 = v22;
  LOBYTE(v99[0]) = 4;
  uint64_t v24 = v23;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1DFDFFCF0();
  uint64_t v93 = v24;
  uint64_t v83 = v25;
  uint64_t v84 = v19;
  LOBYTE(v99[0]) = 5;
  uint64_t v27 = v26;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1DFDFFD20();
  uint64_t v92 = v27;
  uint64_t v82 = v28;
  char v134 = v29 & 1;
  LOBYTE(v99[0]) = 6;
  LODWORD(v27) = v29;
  uint64_t v30 = sub_1DFDFFD10();
  int v79 = v31;
  int v80 = v27;
  uint64_t v81 = v30;
  char v132 = v31 & 1;
  LOBYTE(v99[0]) = 7;
  uint64_t v78 = sub_1DFDFFCF0();
  LOBYTE(v99[0]) = 8;
  uint64_t v33 = v32;
  swift_bridgeObjectRetain();
  uint64_t v77 = sub_1DFDFFCF0();
  uint64_t v91 = v33;
  uint64_t v34 = v82;
  LOBYTE(v99[0]) = 9;
  uint64_t v90 = v35;
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_1DFDFFCF0();
  uint64_t v76 = v37;
  uint64_t v38 = v36;
  LOBYTE(v99[0]) = 10;
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_1DFDFFCF0();
  uint64_t v75 = v39;
  LOBYTE(v99[0]) = 11;
  swift_bridgeObjectRetain();
  uint64_t v72 = sub_1DFDFFCF0();
  uint64_t v73 = v40;
  LOBYTE(v99[0]) = 12;
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_1DFDFFCF0();
  uint64_t v89 = v41;
  LOBYTE(v99[0]) = 13;
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_1DFDFFCF0();
  uint64_t v88 = v42;
  LOBYTE(v99[0]) = 14;
  swift_bridgeObjectRetain();
  uint64_t v68 = sub_1DFDFFCF0();
  uint64_t v69 = v43;
  LOBYTE(v99[0]) = 15;
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1DFDFFCF0();
  uint64_t v67 = v44;
  LOBYTE(v99[0]) = 16;
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_1DFDFFCF0();
  uint64_t v64 = v45;
  uint64_t v66 = 0;
  LOBYTE(v99[0]) = 17;
  swift_bridgeObjectRetain();
  uint64_t v46 = v66;
  uint64_t v61 = sub_1DFDFFCF0();
  uint64_t v63 = v47;
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v135);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = (void *)swift_bridgeObjectRelease();
    if (!v66) {
      return (void *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1DF03CF00(0, &qword_1EAC27B80, (uint64_t (*)(void))sub_1DF03AE90, (uint64_t)&type metadata for SearchTagType, MEMORY[0x1E4FBB510]);
    LOBYTE(v98[0]) = 18;
    sub_1DF03CF68(&qword_1EAC27BA8, (void (*)(void))sub_1DF03D00C);
    swift_bridgeObjectRetain();
    sub_1DFDFFD40();
    char v130 = 19;
    uint64_t v48 = v99[0];
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1DFDFFCF0();
    uint64_t v59 = v50;
    uint64_t v60 = v49;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v97);
    LOBYTE(v98[11]) = v80 & 1;
    LOBYTE(v98[13]) = v79 & 1;
    v98[0] = v12;
    v98[1] = v96;
    v98[2] = v86;
    v98[3] = v95;
    v98[4] = v84;
    v98[5] = v94;
    v98[6] = v85;
    v98[7] = v93;
    v98[8] = v83;
    v98[9] = v92;
    v98[10] = v34;
    v98[12] = v81;
    v98[14] = v78;
    v98[15] = v91;
    v98[16] = v77;
    v98[17] = v90;
    uint64_t v58 = v38;
    v98[18] = v38;
    v98[19] = v76;
    v98[20] = v74;
    v98[21] = v75;
    v98[22] = v72;
    v98[23] = v73;
    v98[24] = v71;
    v98[25] = v89;
    v98[26] = v70;
    v98[27] = v88;
    v98[28] = v68;
    v98[29] = v69;
    v98[30] = v65;
    v98[31] = v67;
    v98[32] = v62;
    v98[33] = v64;
    v98[34] = v61;
    v98[35] = v63;
    uint64_t v57 = v48;
    v98[36] = v48;
    v98[37] = v60;
    v98[38] = v59;
    sub_1DF03D060((uint64_t)v98);
    swift_bridgeObjectRelease();
    uint64_t v51 = v95;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v93;
    swift_bridgeObjectRelease();
    uint64_t v53 = v92;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v55 = v63;
    swift_bridgeObjectRelease();
    uint64_t v56 = v57;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v135);
    v99[0] = v12;
    v99[1] = v96;
    v99[2] = v86;
    v99[3] = v51;
    v99[4] = v84;
    v99[5] = v94;
    v99[6] = v85;
    v99[7] = v52;
    v99[8] = v83;
    v99[9] = v53;
    v99[10] = v82;
    char v100 = v134;
    *(_DWORD *)uint64_t v101 = *(_DWORD *)v133;
    *(_DWORD *)&v101[3] = *(_DWORD *)&v133[3];
    uint64_t v102 = v81;
    char v103 = v132;
    *(_DWORD *)&v104[3] = *(_DWORD *)&v131[3];
    *(_DWORD *)uint64_t v104 = *(_DWORD *)v131;
    uint64_t v105 = v78;
    uint64_t v106 = v91;
    uint64_t v107 = v77;
    uint64_t v108 = v90;
    uint64_t v109 = v58;
    uint64_t v110 = v76;
    uint64_t v111 = v74;
    uint64_t v112 = v75;
    uint64_t v113 = v72;
    uint64_t v114 = v73;
    uint64_t v115 = v71;
    uint64_t v116 = v89;
    uint64_t v117 = v70;
    uint64_t v118 = v88;
    uint64_t v119 = v68;
    uint64_t v120 = v69;
    uint64_t v121 = v65;
    uint64_t v122 = v54;
    uint64_t v123 = v62;
    uint64_t v124 = v64;
    uint64_t v125 = v61;
    uint64_t v126 = v55;
    uint64_t v127 = v56;
    uint64_t v128 = v60;
    uint64_t v129 = v59;
    sub_1DF03D190((uint64_t)v99);
    return memcpy(v87, v98, 0x138uLL);
  }
  return result;
}

void sub_1DF03CF00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1DF03CF68(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DF03CF00(255, &qword_1EAC27B80, (uint64_t (*)(void))sub_1DF03AE90, (uint64_t)&type metadata for SearchTagType, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF03D00C()
{
  unint64_t result = qword_1EAC27BB0;
  if (!qword_1EAC27BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27BB0);
  }
  return result;
}

uint64_t sub_1DF03D060(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF03D190(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SearchTagMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF03D38CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchTagMetadata.CodingKeys()
{
  return &type metadata for SearchTagMetadata.CodingKeys;
}

unint64_t sub_1DF03D3C8()
{
  unint64_t result = qword_1EAC27BB8;
  if (!qword_1EAC27BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27BB8);
  }
  return result;
}

unint64_t sub_1DF03D420()
{
  unint64_t result = qword_1EAC27BC0;
  if (!qword_1EAC27BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27BC0);
  }
  return result;
}

unint64_t sub_1DF03D478()
{
  unint64_t result = qword_1EAC27BC8;
  if (!qword_1EAC27BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27BC8);
  }
  return result;
}

uint64_t dispatch thunk of StreamingArticleResults.estimatedResultsCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of StreamingArticleResults.expand(location:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of FineGrainedNewslettersHandlerType.handleEmailSignup(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FineGrainedNewslettersHandlerType.manageFineGrainedSettings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1DF03D530()
{
  sub_1DEB28694();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for WebLinkRouteModel(0);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 64), *(void *)(v0 + 88));
  sub_1DF1FB970(0, 0, v0, (uint64_t)&off_1F3A89F88, v6);
  type metadata accessor for WebLinkViewControllerType(0);
  uint64_t v7 = swift_allocBox();
  sub_1DF03D958((uint64_t)v6, v8);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = sub_1DFDEAB40();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  sub_1DFBB5128(v7 | 0x9000000000000000, 0, (uint64_t)v3, (uint64_t)v14, 0, 0, 0, 0, (uint64_t)v12);
  swift_release();
  sub_1DE932EE8((uint64_t)v12, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460);
  sub_1DE932EE8((uint64_t)v14, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0);
  sub_1DF03D9BC((uint64_t)v3, (uint64_t (*)(void))sub_1DEB28694);
  swift_release();
  swift_release();
  return sub_1DF03D9BC((uint64_t)v6, type metadata accessor for WebLinkRouteModel);
}

uint64_t sub_1DF03D784()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF03D7D4(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 24), *(void *)(*(void *)v1 + 48));
  uint64_t result = sub_1DFDE87E0();
  if (a1 == 1)
  {
    swift_retain();
    sub_1DFDEE310();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF03D880()
{
  return sub_1DF03D530();
}

void sub_1DF03D8A4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (objc_msgSend(v1, sel_isSignedIntoEmailAccount))
  {
    id v2 = objc_msgSend(v1, sel_forceUpdateSubscription);
  }
}

uint64_t sub_1DF03D90C()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), *(void *)(v0 + 48));
  return sub_1DFDE87E0();
}

uint64_t sub_1DF03D958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebLinkRouteModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF03D9BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF03DA20(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v193 = a2;
  id v203 = a1;
  uint64_t v4 = type metadata accessor for CustomItemRouteModel();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v196 = (uint64_t)v182 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = type metadata accessor for PuzzleModel();
  MEMORY[0x1F4188790](v185);
  uint64_t v194 = (uint64_t)v182 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WebEmbedRouteModel();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v188 = (uint64_t)v182 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB28694();
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v190 = (char *)v182 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v191 = (char *)v182 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v189 = (char *)v182 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v198 = (char *)v182 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v182[2] = (char *)v182 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v182[1] = (char *)v182 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v183 = (char *)v182 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v192 = (char *)v182 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  id v186 = (char *)v182 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)v182 - v29;
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v187 = (char *)v182 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v184 = (char *)v182 - v33;
  uint64_t v34 = sub_1DFDF3610();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v37 = (char *)v182 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = (void *)sub_1DFDF3D40();
  uint64_t v38 = *(v195 - 1);
  uint64_t v39 = MEMORY[0x1F4188790](v195);
  uint64_t v41 = (char *)v182 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  uint64_t v197 = (uint64_t)v182 - v42;
  uint64_t v43 = sub_1DFDE8F10();
  MEMORY[0x1F4188790](v43 - 8);
  uint64_t v45 = (char *)v182 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for TagFeedRouteModel();
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (char *)v182 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = *(void *)(a3 + 8);
  uint64_t v201 = *(void *)a3;
  uint64_t v202 = v49;
  uint64_t v50 = *(void *)(a3 + 24);
  uint64_t v199 = *(void *)(a3 + 16);
  uint64_t v200 = v50;
  unsigned __int8 v51 = *(unsigned char *)(a3 + 32);
  sub_1DF0406A4((uint64_t)v203, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for TagFeedRouteModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v73 = *(void *)v48;
      uint64_t v74 = *((void *)v48 + 1);
      uint64_t v75 = (void *)*((void *)v48 + 2);
      uint64_t v76 = *((void *)v48 + 3);
      uint64_t v77 = *((void *)v48 + 4);
      uint64_t v78 = v48[40];
      int v79 = v204;
      int v80 = (void *)v204[14];
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = v73;
      *(void *)(v81 + 24) = v74;
      *(void *)(v81 + 32) = v75;
      *(void *)(v81 + 40) = v76;
      *(void *)(v81 + 48) = v77;
      *(void *)(v81 + 56) = v78;
      uint64_t v82 = MEMORY[0x1E4FBC860];
      *(void *)(v81 + 72) = 0;
      *(void *)(v81 + 80) = 0;
      *(void *)(v81 + 64) = v82;
      uint64_t v202 = v79[8];
      id v203 = (id)(v81 | 0x4000000000000004);
      uint64_t v83 = sub_1DFDEAB40();
      uint64_t v84 = (uint64_t)v187;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v187, 1, 1, v83);
      sub_1DE94F204((uint64_t)(v79 + 9), (uint64_t)&v208);
      uint64_t v207 = 0;
      long long v205 = 0u;
      long long v206 = 0u;
      swift_retain();
      sub_1DEB28AA8(v73, v74, v75, v76, v77, v78);
      uint64_t v204 = v80;
      sub_1DFBB5128((uint64_t)v203, v202, v84, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
      sub_1DEB28A50(v73, v74, v75, v76, v77, v78);
      swift_release();
      sub_1DE933144((uint64_t)&v205, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v208, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      uint64_t v170 = v84;
      goto LABEL_27;
    case 2u:
      uint64_t v85 = *(void *)v48;
      uint64_t v86 = v204;
      uint64_t v87 = swift_allocObject();
      *(void *)(v87 + 16) = v85;
      uint64_t v88 = v86[8];
      uint64_t v89 = sub_1DFDEAB40();
      uint64_t v90 = (uint64_t)v186;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v186, 1, 1, v89);
      sub_1DE94F204((uint64_t)(v86 + 9), (uint64_t)&v208);
      uint64_t v207 = 0;
      long long v205 = 0u;
      long long v206 = 0u;
      swift_retain();
      swift_unknownObjectRetain();
      sub_1DFBB5128(v87 | 0x8000000000000000, v88, v90, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
      swift_release();
      goto LABEL_25;
    case 3u:
      uint64_t v91 = *(void **)v48;
      uint64_t v198 = (char *)v204[14];
      id v92 = objc_allocWithZone((Class)type metadata accessor for FeedViewContext());
      swift_retain();
      uint64_t v94 = v201;
      uint64_t v93 = v202;
      uint64_t v95 = v199;
      uint64_t v96 = v200;
      sub_1DEB28CAC(v201, v202, v199, v200, v51);
      id v97 = objc_msgSend(v92, sel_init);
      uint64_t v98 = swift_allocObject();
      id v203 = v91;
      id v99 = objc_msgSend(v91, sel_identifier);
      uint64_t v100 = sub_1DFDFDD20();
      unsigned __int8 v101 = v51;
      uint64_t v103 = v102;

      *(void *)(v98 + 16) = v100;
      *(void *)(v98 + 24) = v103;
      *(void *)(v98 + 32) = v97;
      *(void *)(v98 + 40) = 0;
      *(unsigned char *)(v98 + 48) = 1;
      *(void *)(v98 + 56) = 5;
      *(void *)(v98 + 64) = v94;
      *(void *)(v98 + 72) = v93;
      *(void *)(v98 + 80) = v95;
      *(void *)(v98 + 88) = v96;
      *(unsigned char *)(v98 + 96) = v101;
      uint64_t v104 = v204;
      uint64_t v105 = v204[8];
      uint64_t v106 = sub_1DFDEAB40();
      uint64_t v107 = (uint64_t)v192;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v192, 1, 1, v106);
      sub_1DE94F204((uint64_t)(v104 + 9), (uint64_t)&v208);
      uint64_t v207 = 0;
      long long v205 = 0u;
      long long v206 = 0u;
      sub_1DFBB5128(v98 | 0x2000000000000006, v105, v107, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
      swift_release();
      swift_unknownObjectRelease();
      sub_1DE933144((uint64_t)&v205, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v208, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF040744(v107, (uint64_t (*)(void))sub_1DEB28694);
      swift_release();
      goto LABEL_28;
    case 4u:
      uint64_t v108 = *(void *)v48;
      uint64_t v109 = v204;
      uint64_t v110 = swift_allocObject();
      *(void *)(v110 + 16) = v108;
      id v111 = objc_allocWithZone((Class)type metadata accessor for FeedViewContext());
      swift_retain();
      *(void *)(v110 + 24) = objc_msgSend(v111, sel_init);
      *(unsigned char *)(v110 + 32) = 2;
      uint64_t v112 = v109[8];
      uint64_t v113 = sub_1DFDEAB40();
      uint64_t v90 = (uint64_t)v191;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v191, 1, 1, v113);
      sub_1DE94F204((uint64_t)(v109 + 9), (uint64_t)&v208);
      uint64_t v207 = 0;
      long long v205 = 0u;
      long long v206 = 0u;
      sub_1DFBB5128(v110 | 0x6000000000000004, v112, v90, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
      swift_release();
      goto LABEL_26;
    case 5u:
      uint64_t v114 = *(void **)v48;
      if (objc_msgSend(*(id *)v48, sel_isPuzzleHub))
      {
        uint64_t v115 = v204;
        uint64_t v116 = swift_allocObject();
        id v117 = objc_allocWithZone((Class)type metadata accessor for FeedViewContext());
        swift_retain();
        id v118 = objc_msgSend(v117, sel_init);
        *(void *)(v116 + 24) = 0;
        *(void *)(v116 + 32) = 0;
        *(void *)(v116 + 16) = v118;
        uint64_t v119 = v115[8];
        uint64_t v120 = sub_1DFDEAB40();
        uint64_t v121 = (uint64_t)v183;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v183, 1, 1, v120);
        sub_1DE94F204((uint64_t)(v115 + 9), (uint64_t)&v208);
        uint64_t v207 = 0;
        long long v205 = 0u;
        long long v206 = 0u;
        sub_1DFBB5128(v116 | 0xC000000000000002, v119, v121, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
        swift_release();
        swift_unknownObjectRelease();
        sub_1DE933144((uint64_t)&v205, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
        sub_1DE933144((uint64_t)&v208, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
        uint64_t v170 = v121;
      }
      else
      {
        unsigned int v156 = objc_msgSend(v114, sel_isPuzzleType);
        unsigned int v157 = v204;
        id v158 = objc_allocWithZone((Class)type metadata accessor for FeedViewContext());
        if (v156)
        {
          swift_retain();
          swift_unknownObjectRetain();
          id v159 = objc_msgSend(v158, sel_init);
          uint64_t v160 = swift_allocObject();
          id v161 = objc_msgSend(v114, sel_identifier);
          uint64_t v162 = sub_1DFDFDD20();
          uint64_t v164 = v163;

          *(void *)(v160 + 16) = v162;
          *(void *)(v160 + 24) = v164;
          *(void *)(v160 + 32) = v159;
          *(void *)(v160 + 40) = 0;
          *(unsigned char *)(v160 + 48) = 1;
          *(void *)(v160 + 56) = 10;
          *(_OWORD *)(v160 + 64) = 0u;
          *(_OWORD *)(v160 + 80) = 0u;
          *(unsigned char *)(v160 + 96) = -1;
          swift_unknownObjectRelease();
          uint64_t v165 = v160 | 0x2000000000000006;
          uint64_t v166 = v157[8];
          uint64_t v167 = sub_1DFDEAB40();
          uint64_t v168 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v167 - 8) + 56);
          uint64_t v169 = (char *)&v208 + 8;
        }
        else
        {
          uint64_t v173 = v199;
          uint64_t v174 = v200;
          sub_1DEB28CAC(v201, v202, v199, v200, v51);
          swift_unknownObjectRetain();
          swift_retain();
          id v203 = objc_msgSend(v158, sel_init);
          uint64_t v175 = swift_allocObject();
          id v176 = objc_msgSend(v114, sel_identifier);
          uint64_t v177 = sub_1DFDFDD20();
          unsigned __int8 v178 = v51;
          uint64_t v180 = v179;

          *(void *)(v175 + 16) = v177;
          *(void *)(v175 + 24) = v180;
          *(void *)(v175 + 32) = v203;
          *(void *)(v175 + 40) = 0;
          *(unsigned char *)(v175 + 48) = 1;
          uint64_t v181 = v201;
          *(void *)(v175 + 56) = 0;
          *(void *)(v175 + 64) = v181;
          *(void *)(v175 + 72) = v202;
          *(void *)(v175 + 80) = v173;
          *(void *)(v175 + 88) = v174;
          *(unsigned char *)(v175 + 96) = v178;
          swift_unknownObjectRelease();
          uint64_t v165 = v175 | 0x2000000000000006;
          uint64_t v166 = v157[8];
          uint64_t v167 = sub_1DFDEAB40();
          uint64_t v168 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v167 - 8) + 56);
          uint64_t v169 = (char *)&v209;
        }
        uint64_t v90 = *((void *)v169 - 32);
        v168(v90, 1, 1, v167);
        sub_1DE94F204((uint64_t)(v157 + 9), (uint64_t)&v208);
        uint64_t v207 = 0;
        long long v205 = 0u;
        long long v206 = 0u;
        sub_1DFBB5128(v165, v166, v90, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
        swift_release();
LABEL_25:
        swift_unknownObjectRelease();
LABEL_26:
        sub_1DE933144((uint64_t)&v205, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
        sub_1DE933144((uint64_t)&v208, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
        uint64_t v170 = v90;
      }
LABEL_27:
      sub_1DF040744(v170, (uint64_t (*)(void))sub_1DEB28694);
      swift_release();
LABEL_28:
      uint64_t result = swift_release();
      break;
    case 6u:
      uint64_t v144 = v188;
      sub_1DEB28BE4((uint64_t)v48, v188, (uint64_t (*)(void))type metadata accessor for WebEmbedRouteModel);
      __swift_project_boxed_opaque_existential_1(v204 + 3, v204[6]);
      sub_1DE925CE8(0, (unint64_t *)&qword_1EBAA7DE0);
      sub_1DFDECCC0();
      if (!*((void *)&v206 + 1))
      {
        __break(1u);
        JUMPOUT(0x1DF03F45CLL);
      }
      sub_1DE942EC4(&v205, (uint64_t)&v208);
      __swift_project_boxed_opaque_existential_1(&v208, *((uint64_t *)&v209 + 1));
      sub_1DFDF1900();
      sub_1DF040744(v144, (uint64_t (*)(void))type metadata accessor for WebEmbedRouteModel);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v208);
    case 7u:
      uint64_t v123 = (void *)*((void *)v48 + 1);
      uint64_t v195 = *(void **)v48;
      id v122 = v195;
      id v203 = v123;
      uint64_t v124 = *((void *)v48 + 2);
      id v125 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
      uint64_t v126 = v204;
      uint64_t v127 = (void *)v204[14];
      uint64_t v128 = swift_allocObject();
      *(void *)(v128 + 16) = v122;
      *(void *)(v128 + 24) = v123;
      LOBYTE(v122) = v51;
      uint64_t v129 = MEMORY[0x1E4FBC860];
      *(void *)(v128 + 32) = v125;
      *(void *)(v128 + 40) = v129;
      char v130 = v125;
      *(unsigned char *)(v128 + 48) = 1;
      uint64_t v132 = v201;
      uint64_t v131 = v202;
      *(void *)(v128 + 56) = v124;
      *(void *)(v128 + 64) = v132;
      uint64_t v134 = v199;
      uint64_t v133 = v200;
      *(void *)(v128 + 72) = v131;
      *(void *)(v128 + 80) = v134;
      *(void *)(v128 + 88) = v133;
      *(unsigned char *)(v128 + 96) = (_BYTE)v122;
      uint64_t v197 = v128 | 0x2000000000000006;
      uint64_t v196 = v126[8];
      uint64_t v135 = sub_1DFDEAB40();
      uint64_t v136 = (uint64_t)v198;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v198, 1, 1, v135);
      sub_1DE94F204((uint64_t)(v126 + 9), (uint64_t)&v208);
      uint64_t v207 = 0;
      long long v205 = 0u;
      long long v206 = 0u;
      sub_1DEB28CAC(v132, v131, v134, v133, v122);
      swift_retain();
      uint64_t v137 = (uint64_t)v195;
      sub_1DED23604((uint64_t)v195, v203, v130, MEMORY[0x1E4FBC860], 1);
      sub_1DED2369C(v132, v131, v134, v133, v122);
      uint64_t v204 = v127;
      sub_1DFBB5128(v197, v196, v136, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
      sub_1DEB28744(v137, v203, v130, MEMORY[0x1E4FBC860], 1);
      sub_1DED236B0(v132, v131, v134, v133, v122);
      swift_release();
      sub_1DE933144((uint64_t)&v205, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v208, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      uint64_t v170 = (uint64_t)v198;
      goto LABEL_27;
    case 8u:
      uint64_t v146 = v194;
      sub_1DEB28BE4((uint64_t)v48, v194, (uint64_t (*)(void))type metadata accessor for PuzzleModel);
      uint64_t v147 = v204;
      uint64_t v148 = swift_allocBox();
      sub_1DF0406A4(v146, v149, (uint64_t (*)(void))type metadata accessor for PuzzleModel);
      uint64_t v150 = v147[8];
      uint64_t v151 = sub_1DFDEAB40();
      uint64_t v152 = (uint64_t)v189;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v189, 1, 1, v151);
      sub_1DE94F204((uint64_t)(v147 + 9), (uint64_t)&v208);
      uint64_t v207 = 0;
      long long v205 = 0u;
      long long v206 = 0u;
      swift_retain();
      sub_1DFBB5128(v148 | 0xC000000000000006, v150, v152, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
      swift_release();
      sub_1DE933144((uint64_t)&v205, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v208, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF040744(v152, (uint64_t (*)(void))sub_1DEB28694);
      swift_release();
      swift_release();
      id v171 = type metadata accessor for PuzzleModel;
      uint64_t v172 = v146;
      goto LABEL_22;
    case 9u:
      uint64_t v138 = v196;
      sub_1DEB28BE4((uint64_t)v48, v196, (uint64_t (*)(void))type metadata accessor for CustomItemRouteModel);
      uint64_t v139 = sub_1DFDE7220();
      uint64_t v140 = swift_allocBox();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 16))(v141, v138, v139);
      uint64_t v142 = sub_1DFDEAB40();
      uint64_t v143 = (uint64_t)v190;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 56))(v190, 1, 1, v142);
      uint64_t v210 = 0;
      long long v208 = 0u;
      long long v209 = 0u;
      uint64_t v207 = 0;
      long long v205 = 0u;
      long long v206 = 0u;
      swift_retain();
      sub_1DFBB5128(v140 | 0x5000000000000004, 0, v143, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
      swift_release();
      sub_1DE933144((uint64_t)&v205, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v208, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF040744(v143, (uint64_t (*)(void))sub_1DEB28694);
      swift_release();
      swift_release();
      id v171 = type metadata accessor for CustomItemRouteModel;
      uint64_t v172 = v138;
      goto LABEL_22;
    case 0xAu:
      uint64_t v153 = v204;
      uint64_t v154 = v204[8];
      uint64_t v155 = sub_1DFDEAB40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56))(v30, 1, 1, v155);
      sub_1DE94F204((uint64_t)(v153 + 9), (uint64_t)&v208);
      uint64_t v207 = 0;
      long long v205 = 0u;
      long long v206 = 0u;
      swift_retain();
      sub_1DFBB5128(0xD000000000000050, v154, (uint64_t)v30, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
      swift_release();
      sub_1DE933144((uint64_t)&v205, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v208, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF040744((uint64_t)v30, (uint64_t (*)(void))sub_1DEB28694);
      goto LABEL_28;
    default:
      sub_1DEB28BE4((uint64_t)v48, (uint64_t)v45, MEMORY[0x1E4F7D5D0]);
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v37, v193, v34);
      uint64_t v52 = v197;
      sub_1DFDF3D50();
      id v53 = v195;
      (*(void (**)(char *, void, void *))(v38 + 104))(v41, *MEMORY[0x1E4FAD088], v195);
      sub_1DF0407DC();
      char v54 = sub_1DFDFDC70();
      uint64_t v55 = v41;
      uint64_t v56 = (uint64_t)v45;
      id v203 = *(id *)(v38 + 8);
      ((void (*)(char *, id))v203)(v55, v53);
      uint64_t v57 = v204;
      if (v54) {
        goto LABEL_6;
      }
      uint64_t v58 = sub_1DFDF35F0();
      if (!v58) {
        goto LABEL_6;
      }
      uint64_t v59 = (void *)v58;
      sub_1DEDE0CE4((uint64_t *)&v208);
      unint64_t v60 = v208;
      if ((~(void)v208 & 0xF000000000000007) != 0)
      {
        sub_1DFDF1030();

        ((void (*)(uint64_t, id))v203)(v52, v53);
        sub_1DF040744((uint64_t)v45, MEMORY[0x1E4F7D5D0]);
        uint64_t result = sub_1DEB28D0C(v60);
      }
      else
      {

LABEL_6:
        sub_1DEAE4654();
        uint64_t v62 = v61;
        uint64_t v63 = swift_allocBox();
        uint64_t v65 = v64;
        uint64_t v66 = *(int *)(v62 + 48);
        sub_1DE919EB0();
        uint64_t v68 = *(int *)(v67 + 48);
        sub_1DF0406A4(v56, v65, MEMORY[0x1E4F7D5D0]);
        uint64_t v69 = MEMORY[0x1E4FBC860];
        *(void *)(v65 + v68) = MEMORY[0x1E4FBC860];
        *(void *)(v65 + v66) = v69;
        uint64_t v70 = v57[8];
        uint64_t v71 = sub_1DFDEAB40();
        uint64_t v72 = (uint64_t)v184;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v184, 1, 1, v71);
        sub_1DE94F204((uint64_t)(v57 + 9), (uint64_t)&v208);
        uint64_t v207 = 0;
        long long v205 = 0u;
        long long v206 = 0u;
        swift_retain();
        sub_1DFBB5128(v63 | 2, v70, v72, (uint64_t)&v208, 0, 0, 0, 0, (uint64_t)&v205);
        swift_release();
        sub_1DE933144((uint64_t)&v205, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
        sub_1DE933144((uint64_t)&v208, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
        sub_1DF040744(v72, (uint64_t (*)(void))sub_1DEB28694);
        swift_release();
        swift_release();
        ((void (*)(uint64_t, id))v203)(v197, v53);
        id v171 = (uint64_t (*)())MEMORY[0x1E4F7D5D0];
        uint64_t v172 = v56;
LABEL_22:
        uint64_t result = sub_1DF040744(v172, (uint64_t (*)(void))v171);
      }
      break;
  }
  return result;
}

void *sub_1DF03F488(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PuzzleModel();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB28694();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v107 = (uint64_t)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v102 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v108 = (char *)&v102 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v102 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v102 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v102 - v19;
  uint64_t v21 = sub_1DFDE8F10();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TagFeedRouteModel();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF0406A4(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for TagFeedRouteModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v28 = v110;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v45 = *(void *)v26;
      uint64_t v46 = *((void *)v26 + 1);
      uint64_t v48 = *((void *)v26 + 3);
      uint64_t v104 = (void *)*((void *)v26 + 2);
      uint64_t v47 = v104;
      uint64_t v105 = v46;
      uint64_t v103 = v48;
      uint64_t v49 = *((void *)v26 + 4);
      uint64_t v50 = v26[40];
      uint64_t v51 = v109;
      uint64_t v108 = *(char **)(v109 + 112);
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v45;
      *(void *)(v52 + 24) = v46;
      *(void *)(v52 + 32) = v47;
      *(void *)(v52 + 40) = v48;
      *(void *)(v52 + 48) = v49;
      *(void *)(v52 + 56) = v50;
      uint64_t v53 = v49;
      uint64_t v54 = MEMORY[0x1E4FBC860];
      *(void *)(v52 + 72) = 0;
      *(void *)(v52 + 80) = 0;
      *(void *)(v52 + 64) = v54;
      uint64_t v106 = *(void *)(v51 + 64);
      uint64_t v107 = v52 | 0x4000000000000004;
      uint64_t v55 = sub_1DFDEAB40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v18, 1, 1, v55);
      sub_1DE94F204(v51 + 72, (uint64_t)v111);
      swift_retain();
      uint64_t v56 = v45;
      uint64_t v58 = v104;
      uint64_t v57 = v105;
      uint64_t v59 = v103;
      sub_1DEB28AA8(v45, v105, v104, v103, v53, v50);
      unint64_t v60 = v110;
      uint64_t v110 = sub_1DF6E9090(v107, v106, (uint64_t)v18, (uint64_t)v111, 0, 0, 0, 0);
      sub_1DEB28A50(v56, v57, v58, v59, v53, v50);
      if (v60)
      {

        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v28 = v110;
      }
      sub_1DE933144((uint64_t)v111, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF040744((uint64_t)v18, (uint64_t (*)(void))sub_1DEB28694);
      swift_release();
      swift_release();
      return v28;
    case 2:
    case 3:
      swift_unknownObjectRelease();
      return 0;
    case 4:
    case 10:
      return v28;
    case 5:
      uint64_t v61 = *(void **)v26;
      unsigned int v62 = objc_msgSend(*(id *)v26, sel_isPuzzleHub);
      uint64_t v63 = v109;
      if (v62)
      {
        uint64_t v64 = swift_allocObject();
        id v65 = objc_allocWithZone((Class)type metadata accessor for FeedViewContext());
        swift_retain();
        id v66 = objc_msgSend(v65, sel_init);
        *(void *)(v64 + 24) = 0;
        *(void *)(v64 + 32) = 0;
        *(void *)(v64 + 16) = v66;
        uint64_t v67 = *(void *)(v63 + 64);
        uint64_t v68 = sub_1DFDEAB40();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v15, 1, 1, v68);
        sub_1DE94F204(v63 + 72, (uint64_t)v111);
        uint64_t v69 = v110;
        uint64_t v70 = sub_1DF6E9090(v64 | 0xC000000000000002, v67, (uint64_t)v15, (uint64_t)v111, 0, 0, 0, 0);
        if (v69)
        {
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
        sub_1DE933144((uint64_t)v111, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
        sub_1DF040744((uint64_t)v15, (uint64_t (*)(void))sub_1DEB28694);
        swift_release();
        swift_release();
        return 0;
      }
      else
      {
        id v79 = objc_allocWithZone((Class)type metadata accessor for FeedViewContext());
        swift_retain();
        swift_unknownObjectRetain();
        id v80 = objc_msgSend(v79, sel_init);
        uint64_t v81 = swift_allocObject();
        id v82 = objc_msgSend(v61, sel_identifier);
        uint64_t v83 = sub_1DFDFDD20();
        uint64_t v85 = v84;

        *(void *)(v81 + 16) = v83;
        *(void *)(v81 + 24) = v85;
        *(void *)(v81 + 32) = v80;
        *(void *)(v81 + 40) = 0;
        *(unsigned char *)(v81 + 48) = 1;
        *(_OWORD *)(v81 + 56) = 0u;
        *(_OWORD *)(v81 + 72) = 0u;
        *(void *)(v81 + 88) = 0;
        *(unsigned char *)(v81 + 96) = -1;
        swift_unknownObjectRelease();
        uint64_t v86 = *(void *)(v63 + 64);
        uint64_t v87 = sub_1DFDEAB40();
        uint64_t v88 = (uint64_t)v108;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v108, 1, 1, v87);
        sub_1DE94F204(v63 + 72, (uint64_t)v111);
        uint64_t v89 = v110;
        uint64_t v90 = sub_1DF6E9090(v81 | 0x2000000000000006, v86, v88, (uint64_t)v111, 0, 0, 0, 0);
        swift_unknownObjectRelease();
        if (v89)
        {

          uint64_t v28 = 0;
        }
        else
        {
          uint64_t v28 = v90;
        }
        sub_1DE933144((uint64_t)v111, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
        sub_1DF040744(v88, (uint64_t (*)(void))sub_1DEB28694);
        swift_release();
        swift_release();
      }
      return v28;
    case 6:
    case 9:
      sub_1DF040744((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for TagFeedRouteModel);
      return 0;
    case 7:
      uint64_t v29 = *((void *)v26 + 2);
      uint64_t v30 = (void *)*((void *)v26 + 1);
      switch(v29)
      {
        case 0:
        case 8:
          uint64_t v92 = *(void *)v26;
          id v93 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
          uint64_t v94 = v109;
          uint64_t v95 = swift_allocObject();
          *(void *)(v95 + 16) = v92;
          *(void *)(v95 + 24) = v30;
          uint64_t v96 = MEMORY[0x1E4FBC860];
          *(void *)(v95 + 32) = v93;
          *(void *)(v95 + 40) = v96;
          *(unsigned char *)(v95 + 48) = 1;
          *(void *)(v95 + 56) = v29;
          *(_OWORD *)(v95 + 64) = 0u;
          *(_OWORD *)(v95 + 80) = 0u;
          *(unsigned char *)(v95 + 96) = -1;
          unint64_t v97 = v95 | 0x2000000000000006;
          uint64_t v98 = *(void *)(v94 + 64);
          uint64_t v99 = sub_1DFDEAB40();
          uint64_t v100 = v107;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v107, 1, 1, v99);
          sub_1DE94F204(v94 + 72, (uint64_t)v111);
          swift_retain();
          sub_1DED23604(v92, v30, v93, MEMORY[0x1E4FBC860], 1);
          sub_1DED2369C(0, 0, 0, 0, 0xFFu);
          unsigned __int8 v101 = sub_1DF6E9090(v97, v98, v100, (uint64_t)v111, 0, 0, 0, 0);
          sub_1DEB28744(v92, v30, v93, MEMORY[0x1E4FBC860], 1);
          sub_1DED236B0(0, 0, 0, 0, 0xFFu);
          if (v28)
          {

            unsigned __int8 v101 = 0;
          }
          sub_1DE933144((uint64_t)v111, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
          sub_1DF040744(v107, (uint64_t (*)(void))sub_1DEB28694);
          swift_release();
          swift_release();
          return v101;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 9:
        case 10:
        case 11:
          swift_bridgeObjectRelease();
          return 0;
        default:
          sub_1DFDFFBB0();
          __break(1u);
          JUMPOUT(0x1DF040128);
      }
    case 8:
      uint64_t v71 = (uint64_t)v26;
      uint64_t v72 = (uint64_t)v4;
      sub_1DEB28BE4(v71, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PuzzleModel);
      uint64_t v73 = v109;
      uint64_t v74 = swift_allocBox();
      sub_1DF0406A4(v72, v75, (uint64_t (*)(void))type metadata accessor for PuzzleModel);
      uint64_t v76 = *(void *)(v73 + 64);
      uint64_t v77 = sub_1DFDEAB40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v10, 1, 1, v77);
      uint64_t v112 = 0;
      memset(v111, 0, sizeof(v111));
      swift_retain();
      uint64_t v78 = sub_1DF6E9090(v74 | 0xC000000000000006, v76, (uint64_t)v10, (uint64_t)v111, 0, 0, 0, 0);
      if (v28)
      {

        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v28 = v78;
      }
      sub_1DE933144((uint64_t)v111, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF040744((uint64_t)v10, (uint64_t (*)(void))sub_1DEB28694);
      swift_release();
      swift_release();
      sub_1DF040744(v72, (uint64_t (*)(void))type metadata accessor for PuzzleModel);
      return v28;
    default:
      sub_1DEB28BE4((uint64_t)v26, (uint64_t)v23, MEMORY[0x1E4F7D5D0]);
      uint64_t v31 = v109;
      sub_1DEAE4654();
      uint64_t v33 = v32;
      uint64_t v34 = swift_allocBox();
      uint64_t v35 = v28;
      uint64_t v37 = v36;
      uint64_t v38 = *(int *)(v33 + 48);
      sub_1DE919EB0();
      uint64_t v40 = *(int *)(v39 + 48);
      sub_1DF0406A4((uint64_t)v23, v37, MEMORY[0x1E4F7D5D0]);
      uint64_t v41 = MEMORY[0x1E4FBC860];
      *(void *)(v37 + v40) = MEMORY[0x1E4FBC860];
      *(void *)(v37 + v38) = v41;
      uint64_t v42 = *(void *)(v31 + 64);
      uint64_t v43 = sub_1DFDEAB40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v20, 1, 1, v43);
      sub_1DE94F204(v31 + 72, (uint64_t)v111);
      swift_retain();
      uint64_t v44 = sub_1DF6E9090(v34 | 2, v42, (uint64_t)v20, (uint64_t)v111, 0, 0, 0, 0);
      if (v35)
      {

        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v28 = v44;
      }
      sub_1DE933144((uint64_t)v111, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF040744((uint64_t)v20, (uint64_t (*)(void))sub_1DEB28694);
      swift_release();
      swift_release();
      sub_1DF040744((uint64_t)v23, MEMORY[0x1E4F7D5D0]);
      return v28;
  }
}

uint64_t sub_1DF040184(uint64_t a1)
{
  return sub_1DF04019C(a1, (__n128)xmmword_1DFE3A0C0);
}

uint64_t sub_1DF040190(uint64_t a1)
{
  return sub_1DF04019C(a1, (__n128)xmmword_1DFE2AF30);
}

uint64_t sub_1DF04019C(uint64_t a1, __n128 a2)
{
  __n128 v12 = a2;
  sub_1DEB28694();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(__n128 *)(v7 + 24) = v12;
  unint64_t v8 = v7 | 0xB000000000000000;
  uint64_t v9 = *(void *)(v2 + 64);
  uint64_t v10 = sub_1DFDEAB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
  sub_1DE94F204(v2 + 72, (uint64_t)v15);
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  swift_retain();
  swift_retain();
  sub_1DFBB5128(v8, v9, (uint64_t)v6, (uint64_t)v15, 0, 0, 0, 0, (uint64_t)v13);
  swift_release();
  sub_1DE933144((uint64_t)v13, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
  sub_1DE933144((uint64_t)v15, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
  sub_1DF040744((uint64_t)v6, (uint64_t (*)(void))sub_1DEB28694);
  swift_release();
  return swift_release();
}

uint64_t sub_1DF040378(uint64_t a1, char a2)
{
  sub_1DEB28694();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2 & 1 | 0xA000000000000000;
  *(void *)(v8 + 32) = 0;
  unint64_t v9 = v8 | 0xB000000000000000;
  uint64_t v10 = *(void *)(v2 + 64);
  uint64_t v11 = sub_1DFDEAB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 1, 1, v11);
  sub_1DE94F204(v2 + 72, (uint64_t)v16);
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  swift_retain();
  swift_retain();
  sub_1DFBB5128(v9, v10, (uint64_t)v7, (uint64_t)v16, 0, 0, 0, 0, (uint64_t)v14);
  swift_release();
  sub_1DE933144((uint64_t)v14, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
  sub_1DE933144((uint64_t)v16, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
  sub_1DF040744((uint64_t)v7, (uint64_t (*)(void))sub_1DEB28694);
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for TagFeedRouter()
{
  return self;
}

uint64_t sub_1DF04057C()
{
  sub_1DEFF25DC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1DF0405B8()
{
  sub_1DEB28744(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_1DEB287CC(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1DF040610()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF040650()
{
  sub_1DEB289AC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_1DF0406A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF04070C()
{
  return swift_deallocObject();
}

uint64_t sub_1DF040744(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF0407A4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1DF0407DC()
{
  unint64_t result = qword_1EBABE5E0;
  if (!qword_1EBABE5E0)
  {
    sub_1DFDF3D40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABE5E0);
  }
  return result;
}

uint64_t sub_1DF040834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AudioPlaylistFeedGroupKnobs();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEEE9450();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = type metadata accessor for AudioPlaylistFeedGroupConfig();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF040BDC(a1, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for AudioPlaylistFeedGroupConfig);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v21(v17, v20, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_1DF040BDC(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AudioPlaylistFeedGroupKnobs);
  uint64_t v22 = (uint64_t)v9;
  uint64_t v23 = (uint64_t)v6;
  sub_1DF040C44(v22, (uint64_t)v6);
  sub_1DE94F204(v27 + 16, (uint64_t)v28);
  type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter();
  uint64_t v24 = swift_allocObject();
  v21((char *)(v24 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_config), v15, v11);
  sub_1DF040C44(v23, v24 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_knobs);
  sub_1DE942EC4(v28, v24 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_formatService);
  *(void *)&v28[0] = v24;
  sub_1DF040CA8();
  swift_allocObject();
  sub_1DEACB528(&qword_1EAC27BD8, (void (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter);
  uint64_t v25 = sub_1DFDF7620();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v25;
}

uint64_t sub_1DF040B70()
{
  return sub_1DEACB528((unint64_t *)&qword_1EBAC6C00, (void (*)(uint64_t))type metadata accessor for AudioPlaylistFeedServiceConfig);
}

uint64_t sub_1DF040BB8(uint64_t a1, uint64_t a2)
{
  return sub_1DF040834(a1, a2);
}

uint64_t sub_1DF040BDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF040C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DF040CA8()
{
  if (!qword_1EAC27BD0)
  {
    type metadata accessor for AudioPlaylistFeedServiceConfig();
    sub_1DEACB528((unint64_t *)&qword_1EBAC6C00, (void (*)(uint64_t))type metadata accessor for AudioPlaylistFeedServiceConfig);
    unint64_t v0 = sub_1DFDF7640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27BD0);
    }
  }
}

uint64_t sub_1DF040D3C(void *a1)
{
  uint64_t v2 = type metadata accessor for NavigationBarBackgroundImageProvider.Model(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v5 = objc_msgSend((id)sub_1DFDFEBA0(), sel_asSportsEvent);
  swift_unknownObjectRelease();
  if (!v5) {
    return 0;
  }
  id v6 = a1;
  swift_unknownObjectRetain();
  sub_1DEC367CC(v6, (uint64_t)v5, v4);
  type metadata accessor for NavigationBarBackgroundImageProvider(0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = OBJC_IVAR____TtC7NewsUI236NavigationBarBackgroundImageProvider_cache;
  sub_1DF040E68();
  swift_allocObject();
  *(void *)(v7 + v8) = sub_1DFDEDC20();
  sub_1DF040F68((uint64_t)v4, v7 + OBJC_IVAR____TtC7NewsUI236NavigationBarBackgroundImageProvider_model);
  swift_unknownObjectRelease();
  return v7;
}

void sub_1DF040E68()
{
  if (!qword_1EAC27BE0)
  {
    sub_1DEBAD440();
    sub_1DF040F14();
    unint64_t v0 = sub_1DFDEDC30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC27BE0);
    }
  }
}

unint64_t sub_1DF040ED4()
{
  unint64_t result = qword_1EBACA628;
  if (!qword_1EBACA628)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBACA628);
  }
  return result;
}

unint64_t sub_1DF040F14()
{
  unint64_t result = qword_1EAC27BE8;
  if (!qword_1EAC27BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27BE8);
  }
  return result;
}

uint64_t sub_1DF040F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NavigationBarBackgroundImageProvider.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for SearchRequestData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchRequestData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for SearchRequestData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequestData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchRequestData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchInteractorToken()
{
  return &type metadata for SearchInteractorToken;
}

uint64_t sub_1DF041158()
{
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "{searchString=");
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return v1[0];
}

void *sub_1DF0411FC(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEA34164();
    uint64_t v12 = v11;
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v12);
    uint64_t v14 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = a3[8];
    __dst = (char *)v4 + v18;
    uint64_t v19 = (char *)a2 + v18;
    uint64_t v20 = sub_1DFDFB5C0();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      sub_1DEABF3B4(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
      memcpy(__dst, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    uint64_t v25 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v25) = *((unsigned char *)a2 + v25);
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)v4 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_1DFDF8C20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    uint64_t v30 = a3[13];
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)v4 + v30) = *((unsigned char *)a2 + v30);
    uint64_t v31 = a3[15];
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    *(void *)((char *)v4 + v31) = *(void *)((char *)a2 + v31);
    uint64_t v32 = a3[17];
    *(void *)((char *)v4 + a3[16]) = *(void *)((char *)a2 + a3[16]);
    *(void *)((char *)v4 + v32) = *(void *)((char *)a2 + v32);
    uint64_t v33 = a3[19];
    *(void *)((char *)v4 + a3[18]) = *(void *)((char *)a2 + a3[18]);
    *(void *)((char *)v4 + v33) = *(void *)((char *)a2 + v33);
    *(void *)((char *)v4 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  }
  return v4;
}

uint64_t sub_1DF0414D8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  sub_1DEA34164();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = sub_1DFDFB5C0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = sub_1DFDF8C20();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *sub_1DF041638(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DEA34164();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v11);
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a3[8];
  __dst = (char *)a1 + v17;
  uint64_t v18 = (char *)a2 + v17;
  uint64_t v19 = sub_1DFDFB5C0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    sub_1DEABF3B4(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
    memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  uint64_t v23 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  uint64_t v24 = a3[11];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_1DFDF8C20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  uint64_t v28 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  uint64_t v29 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  uint64_t v30 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v30) = *(void *)((char *)a2 + v30);
  uint64_t v31 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  return a1;
}

void *sub_1DF0418C4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DEA34164();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1DFDFB5C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1DEABF3B4(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v22 = a3[11];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1DFDF8C20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  return a1;
}

_OWORD *sub_1DF041BD8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DEA34164();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1DFDFB5C0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1DEABF3B4(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  uint64_t v18 = a3[11];
  int v19 = (char *)a1 + v18;
  int v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1DFDF8C20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t v22 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
  uint64_t v23 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  uint64_t v24 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  return a1;
}

void *sub_1DF041E28(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DEA34164();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1DFDFB5C0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    sub_1DEABF3B4(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  uint64_t v25 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  uint64_t v26 = a3[11];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_1DFDF8C20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
  uint64_t v31 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);
  uint64_t v32 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  uint64_t v33 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + v33) = *(void *)((char *)a2 + v33);
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  return a1;
}

uint64_t sub_1DF042100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF042114);
}

uint64_t sub_1DF042114(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_1DEA34164();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_1DEABF3B4(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1DFDF8C20();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];
  return v15(v17, a2, v16);
}

uint64_t sub_1DF0422A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF0422BC);
}

uint64_t sub_1DF0422BC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_1DEA34164();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_1DEABF3B4(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1DFDF8C20();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];
  return v15(v17, a2, a2, v16);
}

uint64_t sub_1DF042450(uint64_t a1)
{
  unint64_t v2 = sub_1DF04480C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF04248C(uint64_t a1)
{
  unint64_t v2 = sub_1DF04480C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF0424C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1DF044860(0, &qword_1EBAEAB78, (uint64_t (*)(void))sub_1DF04480C, (uint64_t)&type metadata for NewspaperMagazineFeedGroupConfigData.Channel.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF04480C();
  sub_1DFE00190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1DFDFFD50();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1DF042678(void *a1)
{
  sub_1DF044860(0, &qword_1EAC27C10, (uint64_t (*)(void))sub_1DF04480C, (uint64_t)&type metadata for NewspaperMagazineFeedGroupConfigData.Channel.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF04480C();
  sub_1DFE001A0();
  sub_1DFDFFE40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DF0427E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, void *a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, unsigned __int8 a17, uint64_t a18, unsigned __int8 a19, uint64_t a20,unsigned __int8 a21,uint64_t a22,unsigned __int8 a23)
{
  int v58 = a8;
  uint64_t v72 = a7;
  uint64_t v73 = a4;
  int v54 = a6;
  int v55 = a5;
  uint64_t v52 = a3;
  uint64_t v50 = a2;
  int v70 = a23;
  uint64_t v71 = a22;
  uint64_t v69 = a20;
  int v67 = a19;
  int v68 = a21;
  int v53 = a6;
  uint64_t v66 = a18;
  int v65 = a17;
  int v62 = a15;
  uint64_t v63 = a14;
  uint64_t v64 = a16;
  int v59 = a13;
  uint64_t v60 = a12;
  uint64_t v57 = a11;
  int v56 = a10;
  uint64_t v51 = (void (*)(uint64_t))MEMORY[0x1E4F7FC00];
  sub_1DEABF3B4(0, (unint64_t *)&qword_1EBABA230, MEMORY[0x1E4F7FC00]);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v49 - v26;
  uint64_t v28 = sub_1DFDF8C20();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = (int *)type metadata accessor for NewspaperMagazineFeedGroupConfigData();
  *((unsigned char *)a9 + v32[14]) = 12;
  *a9 = 0x657061707377656ELL;
  a9[1] = 0xE900000000000072;
  uint64_t v33 = (char *)a9 + v32[5];
  sub_1DEA34164();
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  uint64_t v61 = a1;
  v37(v33, a1, v34);
  uint64_t v38 = (void *)((char *)a9 + v32[7]);
  uint64_t v39 = v52;
  *uint64_t v38 = v50;
  v38[1] = v39;
  sub_1DF043DA4(v73, (uint64_t)a9 + v32[8], &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  *((unsigned char *)a9 + v32[9]) = v55 & 1;
  *((unsigned char *)a9 + v32[10]) = (v53 == 2) | v54 & 1;
  sub_1DF043DA4(v72, (uint64_t)v27, (unint64_t *)&qword_1EBABA230, v51);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v29 + 104))(v31, *MEMORY[0x1E4F7FBE0], v28);
    sub_1DF043E10((uint64_t)v27, (unint64_t *)&qword_1EBABA230, MEMORY[0x1E4F7FC00]);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))((char *)a9 + v32[11], v31, v28);
  }
  else
  {
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v40(v31, v27, v28);
    v40((char *)a9 + v32[11], v31, v28);
  }
  *((unsigned char *)a9 + v32[12]) = v58 & 1;
  *((unsigned char *)a9 + v32[13]) = v56 & 1;
  if (v57) {
    uint64_t v41 = v57;
  }
  else {
    uint64_t v41 = MEMORY[0x1E4FBC860];
  }
  sub_1DF043E10(v72, (unint64_t *)&qword_1EBABA230, MEMORY[0x1E4F7FC00]);
  sub_1DF043E10(v73, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v61, v35);
  *(void *)((char *)a9 + v32[6]) = v41;
  uint64_t v43 = 2;
  if ((v59 & 1) == 0) {
    uint64_t v43 = v60;
  }
  *(void *)((char *)a9 + v32[15]) = v43;
  uint64_t v44 = 5;
  if ((v62 & 1) == 0) {
    uint64_t v44 = v63;
  }
  *(void *)((char *)a9 + v32[16]) = v44;
  uint64_t v45 = v64;
  if (v65) {
    uint64_t v45 = 1;
  }
  *(void *)((char *)a9 + v32[17]) = v45;
  uint64_t v46 = v66;
  if (v67) {
    uint64_t v46 = 1;
  }
  *(void *)((char *)a9 + v32[18]) = v46;
  uint64_t v47 = 3;
  if ((v68 & 1) == 0) {
    uint64_t v47 = v69;
  }
  *(void *)((char *)a9 + v32[19]) = v47;
  uint64_t v48 = 4;
  if ((v70 & 1) == 0) {
    uint64_t v48 = v71;
  }
  *(void *)((char *)a9 + v32[20]) = v48;
  return result;
}

uint64_t sub_1DF042C9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v40 = a2;
  sub_1DEABF3B4(0, (unint64_t *)&qword_1EBABA230, MEMORY[0x1E4F7FC00]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v44 = (uint64_t)&v24 - v4;
  sub_1DEABF3B4(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - v6;
  sub_1DEA34164();
  MEMORY[0x1F4188790](v8);
  uint64_t v42 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF044860(0, &qword_1EBAEAB70, (uint64_t (*)(void))sub_1DF043CA4, (uint64_t)&type metadata for NewspaperMagazineFeedGroupConfigData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v43 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF043CA4();
  uint64_t v41 = v13;
  uint64_t v14 = v45;
  sub_1DFE00190();
  if (v14)
  {
    uint64_t v23 = (uint64_t)a1;
  }
  else
  {
    uint64_t v39 = v11;
    uint64_t v15 = (uint64_t)v7;
    uint64_t v45 = a1;
    LOBYTE(v59) = 1;
    sub_1DEA534B0((unint64_t *)&unk_1EBABA580, (void (*)(uint64_t))sub_1DEA34164);
    uint64_t v16 = (uint64_t)v42;
    uint64_t v17 = v43;
    uint64_t v18 = v41;
    sub_1DFDFFD90();
    LOBYTE(v56) = 3;
    sub_1DFDFFCD0();
    uint64_t v38 = v59;
    uint64_t v37 = v60;
    sub_1DFDFB5C0();
    LOBYTE(v56) = 4;
    sub_1DEA534B0(&qword_1EBABE000, MEMORY[0x1E4F80E60]);
    uint64_t v36 = v15;
    sub_1DFDFFCD0();
    LOBYTE(v56) = 5;
    sub_1DFDFFCD0();
    int v35 = v65;
    LOBYTE(v56) = 6;
    sub_1DFDFFCD0();
    int v34 = v64;
    sub_1DFDF8C20();
    LOBYTE(v56) = 7;
    sub_1DEA534B0(&qword_1EBABA228, MEMORY[0x1E4F7FC00]);
    sub_1DFDFFCD0();
    LOBYTE(v56) = 8;
    sub_1DFDFFCD0();
    int v33 = v63;
    LOBYTE(v56) = 9;
    sub_1DFDFFCD0();
    int v32 = v62;
    sub_1DF043CF8();
    LOBYTE(v56) = 2;
    sub_1DF043E6C(&qword_1EBAEA2D8, (void (*)(void))sub_1DF043D50);
    sub_1DFDFFCD0();
    uint64_t v31 = v58;
    LOBYTE(v54) = 11;
    sub_1DFDFFCD0();
    uint64_t v30 = v56;
    int v29 = v57;
    LOBYTE(v52) = 12;
    sub_1DFDFFCD0();
    uint64_t v28 = v54;
    int v27 = v55;
    LOBYTE(v50) = 13;
    sub_1DFDFFCD0();
    uint64_t v26 = v52;
    int v25 = v53;
    LOBYTE(v48) = 14;
    sub_1DFDFFCD0();
    uint64_t v24 = v50;
    unsigned __int8 v20 = v51;
    LOBYTE(v46) = 15;
    sub_1DFDFFCD0();
    uint64_t v21 = v48;
    unsigned __int8 v22 = v49;
    char v61 = 16;
    sub_1DFDFFCD0();
    sub_1DF0427E0(v16, v38, v37, v36, v35, v34, v44, v33, v40, v32, v31, v30, v29, v28, v27, v26, v25, v24, v20,
      v21,
      v22,
      v46,
      v47);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v17);
    uint64_t v23 = (uint64_t)v45;
  }
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

unint64_t sub_1DF043448(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x736C656E6E616863;
      break;
    case 3:
      unint64_t result = 0x62755370756F7267;
      break;
    case 4:
    case 15:
    case 16:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 10:
      unint64_t result = 1684957547;
      break;
    case 11:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 12:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 13:
      unint64_t result = 0xD000000000000017;
      break;
    case 14:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF043634(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF044860(0, &qword_1EAC27BF0, (uint64_t (*)(void))sub_1DF043CA4, (uint64_t)&type metadata for NewspaperMagazineFeedGroupConfigData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF043CA4();
  sub_1DFE001A0();
  LOBYTE(v14) = 0;
  sub_1DFDFFE40();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for NewspaperMagazineFeedGroupConfigData();
    LOBYTE(v14) = 1;
    sub_1DEA34164();
    sub_1DEA534B0(&qword_1EBABA578, (void (*)(uint64_t))sub_1DEA34164);
    sub_1DFDFFE80();
    uint64_t v14 = *(void *)(v3 + *(int *)(v10 + 24));
    char v13 = 2;
    sub_1DF043CF8();
    sub_1DF043E6C(&qword_1EAC27BF8, (void (*)(void))sub_1DF043ED8);
    sub_1DFDFFE80();
    LOBYTE(v14) = 3;
    sub_1DFDFFDE0();
    LOBYTE(v14) = 4;
    sub_1DFDFB5C0();
    sub_1DEA534B0(&qword_1EBABDFF8, MEMORY[0x1E4F80E60]);
    sub_1DFDFFE30();
    LOBYTE(v14) = 5;
    sub_1DFDFFE50();
    LOBYTE(v14) = 6;
    sub_1DFDFFE50();
    LOBYTE(v14) = 7;
    sub_1DFDF8C20();
    sub_1DEA534B0(&qword_1EBABA220, MEMORY[0x1E4F7FC00]);
    sub_1DFDFFE80();
    LOBYTE(v14) = 8;
    sub_1DFDFFE50();
    LOBYTE(v14) = 9;
    sub_1DFDFFE50();
    LOBYTE(v14) = *(unsigned char *)(v3 + *(int *)(v10 + 56));
    char v13 = 10;
    sub_1DEAD8774();
    sub_1DFDFFE80();
    LOBYTE(v14) = 11;
    sub_1DFDFFE70();
    LOBYTE(v14) = 12;
    sub_1DFDFFE70();
    LOBYTE(v14) = 13;
    sub_1DFDFFE70();
    LOBYTE(v14) = 14;
    sub_1DFDFFE70();
    LOBYTE(v14) = 15;
    sub_1DFDFFE70();
    LOBYTE(v14) = 16;
    sub_1DFDFFE70();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DF043BC0()
{
  return sub_1DF043448(*v0);
}

uint64_t sub_1DF043BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF0441D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DF043BF0(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_1DF043BFC(uint64_t a1)
{
  unint64_t v2 = sub_1DF043CA4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF043C38(uint64_t a1)
{
  unint64_t v2 = sub_1DF043CA4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF043C74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DF042C9C(a1, a2);
}

uint64_t sub_1DF043C8C(void *a1)
{
  return sub_1DF043634(a1);
}

unint64_t sub_1DF043CA4()
{
  unint64_t result = qword_1EBAE6300;
  if (!qword_1EBAE6300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6300);
  }
  return result;
}

void sub_1DF043CF8()
{
  if (!qword_1EBAEA2D0)
  {
    unint64_t v0 = sub_1DFDFE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA2D0);
    }
  }
}

unint64_t sub_1DF043D50()
{
  unint64_t result = qword_1EBAE6330;
  if (!qword_1EBAE6330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6330);
  }
  return result;
}

uint64_t sub_1DF043DA4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DEABF3B4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DF043E10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DEABF3B4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF043E6C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DF043CF8();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF043ED8()
{
  unint64_t result = qword_1EAC27C00;
  if (!qword_1EAC27C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27C00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NewspaperMagazineFeedGroupConfigData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NewspaperMagazineFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF044088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewspaperMagazineFeedGroupConfigData.CodingKeys()
{
  return &type metadata for NewspaperMagazineFeedGroupConfigData.CodingKeys;
}

ValueMetadata *type metadata accessor for NewspaperMagazineFeedGroupConfigData.Channel()
{
  return &type metadata for NewspaperMagazineFeedGroupConfigData.Channel;
}

unint64_t sub_1DF0440D4()
{
  unint64_t result = qword_1EAC27C08;
  if (!qword_1EAC27C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27C08);
  }
  return result;
}

unint64_t sub_1DF04412C()
{
  unint64_t result = qword_1EBAE6310;
  if (!qword_1EBAE6310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6310);
  }
  return result;
}

unint64_t sub_1DF044184()
{
  unint64_t result = qword_1EBAE6308;
  if (!qword_1EBAE6308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6308);
  }
  return result;
}

uint64_t sub_1DF0441D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DFEBA330 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C656E6E616863 && a2 == 0xE800000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x62755370756F7267 && a2 == 0xED0000656C746974 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFED1910 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DFEB9CF0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DFEB9A60 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DFEB9D10 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DFEBB510 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DFED1930 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DFED1950 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DFED1970 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DFED1990 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DFED19B0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFED19D0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DFED19F0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

unint64_t sub_1DF04480C()
{
  unint64_t result = qword_1EBAE6318;
  if (!qword_1EBAE6318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6318);
  }
  return result;
}

void sub_1DF044860(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for NewspaperMagazineFeedGroupConfigData.Channel.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF044964);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewspaperMagazineFeedGroupConfigData.Channel.CodingKeys()
{
  return &type metadata for NewspaperMagazineFeedGroupConfigData.Channel.CodingKeys;
}

unint64_t sub_1DF0449A0()
{
  unint64_t result = qword_1EAC27C18;
  if (!qword_1EAC27C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27C18);
  }
  return result;
}

unint64_t sub_1DF0449F8()
{
  unint64_t result = qword_1EBAE6328;
  if (!qword_1EBAE6328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6328);
  }
  return result;
}

unint64_t sub_1DF044A50()
{
  unint64_t result = qword_1EBAE6320;
  if (!qword_1EBAE6320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE6320);
  }
  return result;
}

uint64_t type metadata accessor for SeeMoreButton()
{
  uint64_t result = qword_1EBAECB78;
  if (!qword_1EBAECB78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF044AF0()
{
  return swift_initClassMetadata2();
}

char *sub_1DF044B5C(double a1, double a2, double a3, double a4)
{
  unint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[qword_1EBAECB60] = 0x4024000000000000;
  uint64_t v10 = qword_1EBAECB68;
  sub_1DEAE61B0(0, (unint64_t *)&qword_1EBAA85A0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  id v12 = objc_allocWithZone(v11);
  char v13 = v4;
  *(void *)&v4[v10] = objc_msgSend(v12, sel_init);
  uint64_t v14 = qword_1EBAECB70;
  char v21 = 0;
  sub_1DEAE61B0(0, &qword_1EBAEC2F8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAD6E0]);
  swift_allocObject();
  *(void *)&v13[v14] = sub_1DFDF4E60();

  v20.receiver = v13;
  v20.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v15, sel_setContentHorizontalAlignment_, 1);
  uint64_t v16 = *(void **)&v15[qword_1EBAECB68];
  uint64_t v17 = v15;
  id v18 = v16;
  sub_1DFDF50A0();

  return v17;
}

char *sub_1DF044CF0(double a1, double a2, double a3, double a4)
{
  return sub_1DF044B5C(a1, a2, a3, a4);
}

void sub_1DF044D14(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1DF045138();
}

id sub_1DF044D3C()
{
  v25.receiver = v0;
  v25.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v25, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_titleLabel);
  CGFloat v2 = 0.0;
  double v3 = 0.0;
  CGFloat v4 = 0.0;
  CGFloat v5 = 0.0;
  CGFloat v6 = 0.0;
  if (v1)
  {
    BOOL v7 = v1;
    objc_msgSend(v1, sel_frame);
    CGFloat v5 = v8;
    CGFloat v6 = v9;
    double v3 = v10;
    CGFloat v4 = v11;
  }
  CGFloat v24 = v3;
  id v12 = objc_msgSend(v0, sel_imageView);
  CGFloat v13 = 0.0;
  CGFloat v14 = 0.0;
  CGFloat v15 = 0.0;
  if (v12)
  {
    uint64_t v16 = v12;
    objc_msgSend(v12, sel_frame);
    CGFloat v14 = v17;
    CGFloat v15 = v18;
    CGFloat v2 = v19;
    CGFloat v13 = v20;
  }
  v26.origin.x = v14;
  v26.origin.y = v15;
  v26.size.width = v2;
  v26.size.height = v13;
  CGFloat v21 = -CGRectGetWidth(v26) - *(double *)&v0[qword_1EBAECB60];
  v27.origin.x = v14;
  v27.origin.y = v15;
  v27.size.width = v2;
  v27.size.height = v13;
  objc_msgSend(v0, sel_setTitleEdgeInsets_, 0.0, v21, 0.0, CGRectGetWidth(v27) + *(double *)&v0[qword_1EBAECB60]);
  v28.origin.x = v5;
  v28.origin.y = v6;
  v28.size.width = v24;
  v28.size.height = v4;
  double Width = CGRectGetWidth(v28);
  v29.origin.x = v5;
  v29.origin.y = v6;
  v29.size.width = v24;
  v29.size.height = v4;
  return objc_msgSend(v0, sel_setImageEdgeInsets_, 0.0, Width, 0.0, -CGRectGetWidth(v29));
}

void sub_1DF044EF4(void *a1)
{
  id v1 = a1;
  sub_1DF044D3C();
}

uint64_t sub_1DF044F3C()
{
  return swift_release();
}

uint64_t sub_1DF044F7C(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_1DF044FC8()
{
  return type metadata accessor for SeeMoreButton();
}

void sub_1DF044FD0()
{
  uint64_t v0 = (void *)sub_1DFDF5060();
}

id sub_1DF045010()
{
  id v1 = *v0;
  sub_1DFDF4E80();
  return objc_msgSend(v1, sel_setEnabled_, (v3 & 1) == 0);
}

void sub_1DF045068()
{
  sub_1DF0450F4(&qword_1EAC27C28);
  JUMPOUT(0x1E01E4080);
}

uint64_t sub_1DF0450C0()
{
  return sub_1DF0450F4(&qword_1EAC27C20);
}

uint64_t sub_1DF0450F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SeeMoreButton();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF045138()
{
  id v1 = v0;
  *(void *)&v0[qword_1EBAECB60] = 0x4024000000000000;
  uint64_t v2 = qword_1EBAECB68;
  sub_1DEAE61B0(0, (unint64_t *)&qword_1EBAA85A0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  uint64_t v4 = qword_1EBAECB70;
  sub_1DEAE61B0(0, &qword_1EBAEC2F8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAD6E0]);
  swift_allocObject();
  *(void *)&v1[v4] = sub_1DFDF4E60();

  sub_1DFDFFBB0();
  __break(1u);
}

uint64_t *sub_1DF045254(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  Class v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *Class v3 = *a2;
    Class v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    BOOL v7 = (char *)a1 + v6;
    double v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1DFDF7010();
    double v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

void *sub_1DF04533C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  BOOL v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DFDF7010();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1DF0453D4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  BOOL v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1DF045470(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1DF0454EC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DF045578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF04558C);
}

uint64_t sub_1DF04558C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF7010();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF04563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF045650);
}

uint64_t sub_1DF045650(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDF7010();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DF0456F8()
{
  uint64_t v0 = sub_1DFDFA9F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  Class v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF6FB0();
  uint64_t v4 = sub_1DFDFA9C0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1DF0457DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF0457F4(a1, a2);
}

uint64_t sub_1DF0457F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v20 = sub_1DFDF7010();
  uint64_t v17 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF04605C(0, &qword_1EAC27C58, MEMORY[0x1E4FBBDC0]);
  uint64_t v21 = v6;
  uint64_t v19 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = type metadata accessor for ForYouAudioFeedGroup();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF045F48();
  sub_1DFE00190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v9;
  uint64_t v13 = v19;
  uint64_t v12 = v20;
  char v23 = 0;
  uint64_t *v11 = sub_1DFDFFD50();
  v11[1] = v14;
  char v22 = 1;
  sub_1DF0460C0(&qword_1EBACA150, MEMORY[0x1E4F7F240]);
  sub_1DFDFFD90();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)v11 + *(int *)(v16 + 20), v5, v12);
  sub_1DF045F9C((uint64_t)v11, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DF046000((uint64_t)v11);
}

uint64_t sub_1DF045B1C(void *a1)
{
  return sub_1DF045B34(a1);
}

uint64_t sub_1DF045B34(void *a1)
{
  sub_1DF04605C(0, &qword_1EAC27C68, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF045F48();
  sub_1DFE001A0();
  v9[15] = 0;
  sub_1DFDFFE40();
  if (!v1)
  {
    type metadata accessor for ForYouAudioFeedGroup();
    v9[14] = 1;
    sub_1DFDF7010();
    sub_1DF0460C0((unint64_t *)&unk_1EBACA140, MEMORY[0x1E4F7F240]);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF045D00(uint64_t a1)
{
  uint64_t v2 = sub_1DF0460C0(&qword_1EAC27C30, (void (*)(uint64_t))type metadata accessor for ForYouAudioFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DF045D6C(void *a1)
{
  a1[1] = sub_1DF0460C0(&qword_1EAC27C30, (void (*)(uint64_t))type metadata accessor for ForYouAudioFeedGroup);
  a1[2] = sub_1DF0460C0(&qword_1EAC27C38, (void (*)(uint64_t))type metadata accessor for ForYouAudioFeedGroup);
  uint64_t result = sub_1DF0460C0(&qword_1EAC27C40, (void (*)(uint64_t))type metadata accessor for ForYouAudioFeedGroup);
  a1[3] = result;
  return result;
}

uint64_t sub_1DF045E18()
{
  return sub_1DF0460C0((unint64_t *)&unk_1EBAF6170, (void (*)(uint64_t))type metadata accessor for ForYouAudioFeedGroup);
}

uint64_t sub_1DF045E60()
{
  return sub_1DF0460C0(&qword_1EAC27C48, (void (*)(uint64_t))type metadata accessor for ForYouAudioFeedGroup);
}

uint64_t sub_1DF045EA8()
{
  return sub_1DF0460C0(&qword_1EAC27C50, (void (*)(uint64_t))type metadata accessor for ForYouAudioFeedGroup);
}

uint64_t sub_1DF045EF0(uint64_t a1)
{
  uint64_t result = sub_1DF0460C0(&qword_1EAC23F10, (void (*)(uint64_t))type metadata accessor for ForYouAudioFeedGroup);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DF045F48()
{
  unint64_t result = qword_1EAC27C60;
  if (!qword_1EAC27C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27C60);
  }
  return result;
}

uint64_t sub_1DF045F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouAudioFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF046000(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouAudioFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DF04605C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF045F48();
    unint64_t v7 = a3(a1, &type metadata for ForYouAudioFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF0460C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ForYouAudioFeedGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF0461D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouAudioFeedGroup.CodingKeys()
{
  return &type metadata for ForYouAudioFeedGroup.CodingKeys;
}

uint64_t sub_1DF04620C(char *a1, char *a2)
{
  return sub_1DF2A523C(*a1, *a2);
}

uint64_t sub_1DF046218()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF0462A8()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF046324()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF0463B0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1DF046410(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x696669746E656469;
  if (*v1) {
    uint64_t v2 = 0x724774616D726F66;
  }
  unint64_t v3 = 0xEA00000000007265;
  if (*v1) {
    unint64_t v3 = 0xEB0000000070756FLL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DF04645C()
{
  if (*v0) {
    return 0x724774616D726F66;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1DF0464A4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF046508(uint64_t a1)
{
  unint64_t v2 = sub_1DF045F48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF046544(uint64_t a1)
{
  unint64_t v2 = sub_1DF045F48();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DF046584()
{
  unint64_t result = qword_1EAC27C70;
  if (!qword_1EAC27C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27C70);
  }
  return result;
}

unint64_t sub_1DF0465DC()
{
  unint64_t result = qword_1EAC27C78;
  if (!qword_1EAC27C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27C78);
  }
  return result;
}

unint64_t sub_1DF046634()
{
  unint64_t result = qword_1EAC27C80;
  if (!qword_1EAC27C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC27C80);
  }
  return result;
}

uint64_t type metadata accessor for SavedServiceObserverProxy()
{
  return self;
}

id sub_1DF0466AC()
{
  unint64_t ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7NewsUI212SavedService_readingList], sel_removeObserver_, v0);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for SavedService()
{
  return self;
}

void sub_1DF046860(void *a1, char a2, void *a3, uint64_t a4, char *a5)
{
  if (a2)
  {
    sub_1DEC0A174();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DFE0B250;
    id v15 = a1;
    sub_1DFDFF9B0();
    sub_1DFDFDE90();
    sub_1DEA07544();
    sub_1DFDFFB10();
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 40) = 0xE000000000000000;
    sub_1DFE000D0();
    swift_bridgeObjectRelease();
    sub_1DEBCFB90(a1, 1);
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DF046C24((unint64_t)a1, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v9 = *(void *)&a5[OBJC_IVAR____TtC7NewsUI212SavedService_observers];
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DFDFFBE0();
    if (!v10) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_12;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = MEMORY[0x1E01EE240](v11, v9);
    }
    else
    {
      uint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
      swift_retain();
    }
    ++v11;
    uint64_t v13 = a5;
    sub_1DF046BAC(v13, v8, v12);

    swift_release();
  }
  while (v10 != v11);
LABEL_12:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

id sub_1DF046B28(void *a1)
{
  unint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7NewsUI212SavedService_readingList);
  id v3 = objc_msgSend(a1, sel_articleID);
  if (!v3)
  {
    sub_1DFDFDD20();
    id v3 = (id)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
  }
  id v4 = objc_msgSend(v2, sel_isArticleOnReadingList_, v3);

  return v4;
}

uint64_t sub_1DF046BAC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E01EFB70](a3 + 16);
  if (result)
  {
    id v5 = a1;
    sub_1DF046BAC();

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DF046C24(unint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (2)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (!v3) {
      return v4;
    }
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEDF7A0C(0, v3 & ~(v3 >> 63), 0);
    if ((v3 & 0x8000000000000000) == 0)
    {
      uint64_t v6 = 0;
      uint64_t v4 = v24;
      uint64_t v22 = v3;
      unint64_t v23 = v2 & 0xC000000000000001;
      uint64_t v7 = a2[2];
      uint64_t v19 = v2 + 32;
      uint64_t v20 = v2;
      while (1)
      {
        if (v6 == v3)
        {
          __break(1u);
          goto LABEL_32;
        }
        if (v23)
        {
          uint64_t v8 = MEMORY[0x1E01EE240](v6, v20);
        }
        else
        {
          uint64_t v8 = *(void *)(v19 + 8 * v6);
          swift_retain();
        }
        id v9 = objc_msgSend(*(id *)(v8 + 16), sel_articleID);
        uint64_t v10 = sub_1DFDFDD20();
        uint64_t v12 = v11;

        if (!v7) {
          goto LABEL_26;
        }
        BOOL v13 = a2[4] == v10 && a2[5] == v12;
        if (!v13 && (sub_1DFDFFF50() & 1) == 0) {
          break;
        }
LABEL_16:
        swift_bridgeObjectRelease();
LABEL_27:
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        uint64_t v3 = v22;
        if (v18 >= v17 >> 1) {
          sub_1DEDF7A0C(v17 > 1, v18 + 1, 1);
        }
        ++v6;
        *(void *)(v24 + 16) = v18 + 1;
        *(void *)(v24 + 8 * v18 + 32) = v8;
        if (v6 == v22) {
          return v4;
        }
      }
      if (v7 != 1)
      {
        uint64_t v14 = a2 + 7;
        uint64_t v2 = 1;
        while (1)
        {
          uint64_t v15 = v2 + 1;
          if (__OFADD__(v2, 1)) {
            break;
          }
          BOOL v16 = *(v14 - 1) == v10 && *v14 == v12;
          if (v16 || (sub_1DFDFFF50() & 1) != 0) {
            goto LABEL_16;
          }
          v14 += 2;
          ++v2;
          if (v15 == v7) {
            goto LABEL_26;
          }
        }
LABEL_32:
        __break(1u);
LABEL_33:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        continue;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      v8 |= 0x8000000000000000;
      goto LABEL_27;
    }
    break;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF046E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1DEA8C598(v5);
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1DEA8C598(v6);
  __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC7NewsUI212SavedService_headlineService], *(void *)&v2[OBJC_IVAR____TtC7NewsUI212SavedService_headlineService + 24]);
  uint64_t v7 = *MEMORY[0x1E4F7DFF0];
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a1;
  v8[3] = a2;
  void v8[4] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v2;
  sub_1DF85BC74(v11, v7, 17, (uint64_t)sub_1DF046FB8, (uint64_t)v8);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1DF046F70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1DF046FB8(void *a1, char a2)
{
  sub_1DF046860(a1, a2 & 1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(char **)(v2 + 32));
}

void *initializeBufferWithCopyOfBuffer for SavedServiceChange(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_1DF0279EC();
  *a1 = v3;
  return a1;
}

uint64_t destroy for SavedServiceChange()
{
  return sub_1DEC80768();
}

void *assignWithCopy for SavedServiceChange(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_1DF0279EC();
  *a1 = v3;
  sub_1DEC80768();
  return a1;
}

void *assignWithTake for SavedServiceChange(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1DEC80768();
  return a1;
}

uint64_t getEnumTagSinglePayload for SavedServiceChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SavedServiceChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1DF047120(void *a1)
{
  return *a1 >> 63;
}

void *sub_1DF04712C(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1DF04713C(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for SavedServiceChange()
{
  return &type metadata for SavedServiceChange;
}

uint64_t sub_1DF047164(uint64_t a1)
{
  uint64_t v13 = a1;
  uint64_t v14 = sub_1DFDEA760();
  uint64_t v1 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDEA750();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDEA8F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDE93A0();
  sub_1DFDEA8E0();
  sub_1DF047A68(&qword_1EBABDA40, MEMORY[0x1E4F7B7F8]);
  sub_1DFDE8390();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F7B6F8], v14);
  sub_1DFDEA740();
  sub_1DF047A68((unint64_t *)&unk_1EBABDA30, MEMORY[0x1E4F7B6E8]);
  sub_1DFDE8390();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF047450()
{
  uint64_t v0 = sub_1DFDE7600();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - v5;
  sub_1DFDEC070();
  sub_1DFDF1320();
  sub_1DF047A68(&qword_1EAC27CC0, MEMORY[0x1E4F7CAD0]);
  sub_1DFDE8330();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  sub_1DFDF1320();
  sub_1DFDF1340();
  sub_1DFDE74C0();
  v7(v4, v0);
  sub_1DFDE8340();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t type metadata accessor for InterstitialAdTracker()
{
  return self;
}

uint64_t sub_1DF047638(uint64_t a1)
{
  uint64_t v3 = sub_1DFDE93B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 24), *(void *)(*(void *)v1 + 48));
  uint64_t result = sub_1DFDEBB70();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v8 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    sub_1DFDE87E0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF0477A4()
{
  uint64_t v1 = sub_1DFDF1350();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 24), *(void *)(*(void *)v0 + 48));
  uint64_t result = sub_1DFDEBB70();
  if (result)
  {
    sub_1DFDE9390();
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
    unint64_t v9 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v10 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v10 + v9, v5, v1);
    sub_1DFDE87E0();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  return result;
}

uint64_t sub_1DF047958()
{
  return objectdestroyTm_25(MEMORY[0x1E4FAC110]);
}

uint64_t sub_1DF047970(uint64_t a1)
{
  return sub_1DF0479E0(a1, MEMORY[0x1E4FAC110], (uint64_t (*)(uint64_t, uint64_t))sub_1DF047450);
}

uint64_t sub_1DF04799C()
{
  return objectdestroyTm_25(MEMORY[0x1E4F7D7D8]);
}

uint64_t sub_1DF0479B4(uint64_t a1)
{
  return sub_1DF0479E0(a1, MEMORY[0x1E4F7D7D8], (uint64_t (*)(uint64_t, uint64_t))sub_1DF047164);
}

uint64_t sub_1DF0479E0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

uint64_t sub_1DF047A68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF047AB0()
{
  uint64_t v1 = v0;
  sub_1DEA98DB8(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v21 - v3;
  uint64_t v5 = sub_1DFDED180();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDE7220();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA98DB8(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  sub_1DFDED420();
  sub_1DFDED130();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1DFDE70E0();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F1CB10]);
  uint64_t v14 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithString_, v14);

  if (!v15)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return 0;
  }
  if (objc_msgSend(v15, sel_fc_isNewsURL))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    return 0;
  }
  uint64_t v16 = swift_allocBox();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v17, v12, v9);
  if (sub_1DEF974DC())
  {
    uint64_t v18 = sub_1DFDEAB40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
    uint64_t v24 = 0;
    memset(v23, 0, sizeof(v23));
    uint64_t v22 = 0;
    memset(v21, 0, sizeof(v21));
    swift_retain();
    sub_1DFBB5128(v16 | 0x1000000000000000, 0, (uint64_t)v4, (uint64_t)v23, 0, 0, 0, 0, (uint64_t)v21);
    swift_release();

    sub_1DE933294((uint64_t)v21, (uint64_t)&qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0], (uint64_t (*)(void))sub_1DE9B31FC);
    sub_1DE933294((uint64_t)v23, (uint64_t)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18], (uint64_t (*)(void))sub_1DE9B31FC);
    sub_1DE933294((uint64_t)v4, (uint64_t)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DEA98DB8);
    swift_release();
  }
  else
  {
    *(void *)&v23[0] = *(void *)(v1 + 24);
    *(void *)&v21[0] = v16 | 0x1000000000000000;
    sub_1DE9A1E44();
    sub_1DF0482B0((unint64_t *)&qword_1EBAA7CA0, 255, (void (*)(uint64_t))sub_1DE9A1E44);
    swift_retain();
    sub_1DFDF5C20();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  return 1;
}

uint64_t type metadata accessor for AlternateUniversalLinkURLHandler()
{
  return self;
}

uint64_t sub_1DF048240()
{
  return sub_1DF047AB0() & 1;
}

uint64_t sub_1DF048268(uint64_t a1, uint64_t a2)
{
  return sub_1DF0482B0(&qword_1EBAE2EB8, a2, (void (*)(uint64_t))type metadata accessor for AlternateUniversalLinkURLHandler);
}

uint64_t sub_1DF0482B0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF0482F8()
{
  sub_1DEA98E1C(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = &v12[-v1];
  sub_1DEA98E1C(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v12[-v4];
  type metadata accessor for FollowingNotificationsPrewarm();
  uint64_t v6 = swift_allocBox();
  uint64_t v8 = v7;
  uint64_t v9 = sub_1DFDFC870();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  sub_1DEC4E8C4((uint64_t)v5, v8);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = sub_1DFDEAB40();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v2, 1, 1, v10);
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  swift_retain();
  sub_1DFBB5128(v6 | 0x3000000000000004, 0, (uint64_t)v2, (uint64_t)v15, 0, 0, 0, 0, (uint64_t)v13);
  swift_release();
  sub_1DE9330D4((uint64_t)v13, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
  sub_1DE9330D4((uint64_t)v15, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
  sub_1DEBFF970((uint64_t)v2);
  swift_release();
  return swift_release();
}

double sub_1DF0486DC@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, unsigned char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 32;
    while (1)
    {
      sub_1DEDCA690(v8, (uint64_t)v16);
      *(_OWORD *)&v15[136] = v16[8];
      *(_OWORD *)&v15[152] = v17[0];
      *(_OWORD *)&v15[161] = *(_OWORD *)((char *)v17 + 9);
      *(_OWORD *)&v15[72] = v16[4];
      *(_OWORD *)&v15[88] = v16[5];
      *(_OWORD *)&v15[104] = v16[6];
      *(_OWORD *)&v15[120] = v16[7];
      *(_OWORD *)&v15[8] = v16[0];
      *(_OWORD *)&unsigned char v15[24] = v16[1];
      *(_OWORD *)&unsigned char v15[40] = v16[2];
      *(_OWORD *)&v15[56] = v16[3];
      *(void *)id v15 = v7;
      if (a2(v7, &v15[8])) {
        break;
      }
      ++v7;
      sub_1DF04BF08((uint64_t)v15);
      v8 += 176;
      if (v6 == v7) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    long long v10 = *(_OWORD *)&v15[144];
    *(_OWORD *)(a3 + 128) = *(_OWORD *)&v15[128];
    *(_OWORD *)(a3 + 144) = v10;
    *(_OWORD *)(a3 + 160) = *(_OWORD *)&v15[160];
    *(unsigned char *)(a3 + 176) = v15[176];
    long long v11 = *(_OWORD *)&v15[80];
    *(_OWORD *)(a3 + 64) = *(_OWORD *)&v15[64];
    *(_OWORD *)(a3 + 80) = v11;
    long long v12 = *(_OWORD *)&v15[112];
    *(_OWORD *)(a3 + 96) = *(_OWORD *)&v15[96];
    *(_OWORD *)(a3 + 112) = v12;
    long long v13 = *(_OWORD *)&v15[16];
    *(_OWORD *)a3 = *(_OWORD *)v15;
    *(_OWORD *)(a3 + 16) = v13;
    double result = *(double *)&v15[32];
    long long v14 = *(_OWORD *)&v15[48];
    *(_OWORD *)(a3 + 32) = *(_OWORD *)&v15[32];
    *(_OWORD *)(a3 + 48) = v14;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    *(unsigned char *)(a3 + 176) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 144) = 0u;
    *(_OWORD *)(a3 + 160) = 0u;
    *(_OWORD *)(a3 + 112) = 0u;
    *(_OWORD *)(a3 + 128) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(_OWORD *)(a3 + 96) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

void sub_1DF048848(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  int v7 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v8 = &v2[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation];
  uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation];
  uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation + 8];
  unsigned __int8 v11 = v2[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation + 16];
  if (v2[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation + 17] != 1)
  {
    *(void *)uint64_t v8 = v6;
    *((void *)v8 + 1) = v5;
    v8[16] = v7;
    v8[17] = 0;
    sub_1DEC08B50(v6, v5, v7);
    sub_1DF04A11C(v9, v10, v11, 0);
    return;
  }
  uint64_t v52 = ObjectType;
  MEMORY[0x1F4188790](ObjectType);
  uint64_t v53 = v13;
  uint64_t v54 = v12;
  sub_1DF04A0E8(v9, v10, v11, 1);
  sub_1DF04A0E8(v9, v10, v11, 1);
  sub_1DF0486DC(v9, (uint64_t (*)(uint64_t, unsigned char *))sub_1DF04BCE4, (uint64_t)&v57);
  sub_1DF04A11C(v9, v10, v11, 1);
  if (*((void *)&v58 + 1))
  {
    uint64_t v14 = v57;
    *(_OWORD *)((char *)&v68[7] + 8) = v65;
    *(_OWORD *)((char *)&v68[8] + 8) = v66;
    *(_OWORD *)((char *)&v68[9] + 8) = v67[0];
    *(_OWORD *)((char *)&v68[10] + 1) = *(_OWORD *)((char *)v67 + 9);
    *(_OWORD *)((char *)&v68[3] + 8) = v61;
    *(_OWORD *)((char *)&v68[4] + 8) = v62;
    *(_OWORD *)((char *)&v68[5] + 8) = v63;
    *(_OWORD *)((char *)&v68[6] + 8) = v64;
    *(_OWORD *)((char *)v68 + 8) = v58;
    *(_OWORD *)((char *)&v68[1] + 8) = v59;
    *(_OWORD *)((char *)&v68[2] + 8) = v60;
    *(void *)&v68[0] = v57;
  }
  else
  {
    uint64_t v15 = sub_1DF04BD5C((uint64_t)&v57, &qword_1EAC27D30, (uint64_t (*)(uint64_t))sub_1DF04BCF0);
    unsigned __int8 v51 = &v49;
    MEMORY[0x1F4188790](v15);
    sub_1DF04A0E8(v9, v10, v11, 1);
    sub_1DF0486DC(v9, (uint64_t (*)(uint64_t, unsigned char *))sub_1DF04C2E0, (uint64_t)&v57);
    sub_1DF04A11C(v9, v10, v11, 1);
    if (!*((void *)&v58 + 1))
    {
      sub_1DF04BD5C((uint64_t)&v57, &qword_1EAC27D30, (uint64_t (*)(uint64_t))sub_1DF04BCF0);
      memset(v68, 0, 177);
      sub_1DF04BD5C((uint64_t)v68, (unint64_t *)&unk_1EBAEA460, (uint64_t (*)(uint64_t))sub_1DF04BDCC);
      sub_1DF04A11C(v9, v10, v11, 1);
      return;
    }
    uint64_t v14 = v57;
    *(void *)&v68[0] = v57;
    *(_OWORD *)((char *)&v68[7] + 8) = v65;
    *(_OWORD *)((char *)&v68[8] + 8) = v66;
    *(_OWORD *)((char *)&v68[9] + 8) = v67[0];
    *(_OWORD *)((char *)&v68[10] + 1) = *(_OWORD *)((char *)v67 + 9);
    *(_OWORD *)((char *)&v68[3] + 8) = v61;
    *(_OWORD *)((char *)&v68[4] + 8) = v62;
    *(_OWORD *)((char *)&v68[5] + 8) = v63;
    *(_OWORD *)((char *)&v68[6] + 8) = v64;
    *(_OWORD *)((char *)v68 + 8) = v58;
    *(_OWORD *)((char *)&v68[1] + 8) = v59;
    *(_OWORD *)((char *)&v68[2] + 8) = v60;
  }
  sub_1DF04A11C(v9, v10, v11, 1);
  v69[8] = *(_OWORD *)((char *)&v68[8] + 8);
  *(_OWORD *)int v70 = *(_OWORD *)((char *)&v68[9] + 8);
  *(_OWORD *)&v70[9] = *(_OWORD *)((char *)&v68[10] + 1);
  v69[4] = *(_OWORD *)((char *)&v68[4] + 8);
  long long v69[5] = *(_OWORD *)((char *)&v68[5] + 8);
  v69[6] = *(_OWORD *)((char *)&v68[6] + 8);
  v69[7] = *(_OWORD *)((char *)&v68[7] + 8);
  v69[0] = *(_OWORD *)((char *)v68 + 8);
  v69[1] = *(_OWORD *)((char *)&v68[1] + 8);
  v69[2] = *(_OWORD *)((char *)&v68[2] + 8);
  v69[3] = *(_OWORD *)((char *)&v68[3] + 8);
  v68[0] = *(_OWORD *)((char *)v68 + 8);
  swift_bridgeObjectRetain();
  sub_1DFDEE100();
  swift_bridgeObjectRelease();
  uint64_t v16 = v55;
  uint64_t v17 = v56;
  sub_1DEDCA690((uint64_t)v69, (uint64_t)v68);
  if (!v16)
  {
    __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_sectionViewControllerFactory], *(void *)&v2[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_sectionViewControllerFactory + 24]);
    uint64_t v16 = (void *)sub_1DEC0A1D0((uint64_t)v68);
    uint64_t v17 = v18;
  }
  sub_1DED9E99C((uint64_t)v68);
  long long v19 = *(_OWORD *)&v70[8];
  char v20 = v70[24];
  unsigned __int8 v51 = (void (**)(void, void, void, void))v17;
  if (v7)
  {
    uint64_t v22 = v53;
    uint64_t v21 = v54;
    sub_1DEC08B50(v53, v54, v7);
    sub_1DEC0AA20((id)v19, *((id *)&v19 + 1), v20);
    uint64_t v23 = v22;
    uint64_t v24 = v21;
    unsigned __int8 v25 = v7;
LABEL_20:
    sub_1DEB21B94(v23, v24, v25);
    sub_1DEC0AA40((void *)v19, *((id *)&v19 + 1), v20);
    goto LABEL_21;
  }
  if (v70[24] != 2 || *(_OWORD *)&v70[8] != 0)
  {
    uint64_t v37 = v53;
    uint64_t v36 = v54;
    sub_1DEC08B50(v53, v54, 0);
    sub_1DEC0AA20((id)v19, *((id *)&v19 + 1), v20);
    uint64_t v23 = v37;
    uint64_t v24 = v36;
    unsigned __int8 v25 = 0;
    goto LABEL_20;
  }
  type metadata accessor for MagazineCatalogViewController();
  uint64_t v26 = swift_dynamicCastClass();
  if (!v26)
  {
    uint64_t v45 = v54;
    swift_bridgeObjectRetain();

    sub_1DEB21B94(v53, v45, 0);
    sub_1DEC0AA40(0, 0, 2);
    goto LABEL_26;
  }
  CGRect v27 = (uint64_t *)(v26 + OBJC_IVAR____TtC7NewsUI229MagazineCatalogViewController_presentation);
  uint64_t v28 = *(void *)(v26 + OBJC_IVAR____TtC7NewsUI229MagazineCatalogViewController_presentation + 8);
  if (v28 == 1)
  {
    uint64_t v29 = *(void *)(*(void *)(v26 + OBJC_IVAR____TtC7NewsUI229MagazineCatalogViewController_eventHandler) + 40);
    uint64_t v30 = swift_getObjectType();
    unsigned __int8 v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 32);
    uint64_t v50 = v30;
    uint64_t v32 = v53;
    uint64_t v31 = v54;
    sub_1DEC08B50(v53, v54, 0);
    sub_1DEC08B50(v32, v31, 0);
    id v33 = v16;
    v49(v32, v31, v50, v29);

    sub_1DEB21B94(v32, v31, 0);
    sub_1DEC0AA40(0, 0, 2);
    uint64_t v34 = v32;
    uint64_t v35 = v31;
  }
  else
  {
    uint64_t v46 = *v27;
    uint64_t v48 = v53;
    uint64_t v47 = v54;
    *CGRect v27 = v53;
    v27[1] = v47;
    sub_1DEC08B50(v48, v47, 0);
    swift_bridgeObjectRetain_n();
    sub_1DEF40E8C(v46, v28);
    sub_1DEB21B94(v48, v47, 0);
    sub_1DEC0AA40(0, 0, 2);
    uint64_t v34 = v48;
    uint64_t v35 = v47;
  }
  sub_1DEB21B94(v34, v35, 0);
LABEL_21:
  swift_bridgeObjectRetain();
  sub_1DF04A514(v14, v16, (uint64_t)v51);
  swift_bridgeObjectRelease();
  sub_1DEDCA690((uint64_t)v69, (uint64_t)&v57);
  sub_1DF04BE34();
  sub_1DFDECFB0();
  sub_1DEA2CBDC((uint64_t)&v57, (unint64_t *)&qword_1EBABE950);
  id v38 = objc_msgSend(v2, sel_view);
  if (!v38)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v39 = v38;
  objc_msgSend(v38, sel_setNeedsLayout);

  id v40 = objc_msgSend(v2, sel_view);
  if (!v40)
  {
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v41 = v40;
  objc_msgSend(v40, sel_layoutIfNeeded);

  if (sub_1DF04A600())
  {
    uint64_t v43 = sub_1DF04BF64(&qword_1EBABF7B8, v42, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
    uint64_t v44 = (void *)MEMORY[0x1E01DF1F0](v52, v43);
    if (v44)
    {
      swift_getObjectType();
      sub_1DFDF3A50();

LABEL_26:
      sub_1DED9E99C((uint64_t)v69);
      return;
    }
  }
  sub_1DED9E99C((uint64_t)v69);
}

uint64_t type metadata accessor for MagazineSectionsViewController()
{
  return self;
}

id sub_1DF049198()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v22.receiver = v0;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  uint64_t v3 = (void *)sub_1DFDFDCE0();
  objc_msgSend(v1, sel_setFocusGroupIdentifier_, v3);

  sub_1DFDF1760();
  id v4 = objc_msgSend(v1, sel_traitCollection);
  uint64_t v5 = &v1[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_styler];
  sub_1DE94F204((uint64_t)&v1[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_styler], (uint64_t)v20);
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(v20, v21);
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v8 = result;
    objc_msgSend(result, sel_setBackgroundColor_, *(void *)(*__swift_project_boxed_opaque_existential_1((void *)(*v6 + 16), *(void *)(*v6 + 40))+ OBJC_IVAR____TtC7NewsUI210BaseStyler_theme+ 24));

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    uint64_t v9 = __swift_project_boxed_opaque_existential_1(v5, *((void *)v5 + 3));
    uint64_t v11 = sub_1DF04BF64(&qword_1EBABF7B8, v10, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
    uint64_t v12 = (void *)MEMORY[0x1E01DF1F0](ObjectType, v11);
    if (!v12)
    {
LABEL_5:

      sub_1DF049518();
      sub_1DFDF2E00();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1DFDECFA0();
      swift_release();
      swift_release();
      __swift_project_boxed_opaque_existential_1(v20, v21);
      sub_1DFDEC910();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      sub_1DF04BFEC(0, (unint64_t *)&qword_1EBAD1CE0, (uint64_t (*)(uint64_t))sub_1DF04C050, MEMORY[0x1E4FBBE00]);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1DFE0B250;
      uint64_t v18 = sub_1DFDF61A0();
      uint64_t v19 = MEMORY[0x1E4FB0FA8];
      *(void *)(v17 + 32) = v18;
      *(void *)(v17 + 40) = v19;
      *(void *)(swift_allocObject() + 16) = ObjectType;
      sub_1DFDFEDC0();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return (id)swift_release();
    }
    uint64_t v13 = v12;
    uint64_t v14 = *v9;
    id result = objc_msgSend(v12, sel_view);
    if (result)
    {
      uint64_t v15 = result;
      id v16 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v14 + 16), *(void *)(v14 + 40))
                              + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                              + 24));
      objc_msgSend(v15, sel_setBackgroundColor_, v16);

      id v4 = v15;
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DF049518()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1DFDF2B50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DF04BF64(&qword_1EBABF7B8, v6, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
  uint64_t v8 = MEMORY[0x1E01DF1F0](ObjectType, v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    if (objc_msgSend(v0, sel_view))
    {
      sub_1DFDF3BB0();
      objc_msgSend(objc_allocWithZone((Class)sub_1DFDF4B10()), sel_init);
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC850], v2);
      uint64_t v10 = (void *)sub_1DFDF3BA0();
      sub_1DF69428C(v10);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DF0496C0(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E01EFB70](v4);
  if (result)
  {
    uint64_t v7 = (void *)result;
    if (v3)
    {
      uint64_t v8 = *(void **)(result + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_barCompressionManager);
      sub_1DF04BF64(&qword_1EBAC7008, v6, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
      id v9 = v3;
      id v10 = v8;
      id v11 = v7;
      sub_1DFDF2570();
    }
    uint64_t v12 = self;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v7;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_1DF04C134;
    *(void *)(v14 + 24) = v13;
    aBlock[4] = sub_1DE98147C;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DE98142C;
    aBlock[3] = &block_descriptor_64;
    uint64_t v15 = _Block_copy(aBlock);
    id v16 = v7;
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_performWithoutAnimation_, v15);

    _Block_release(v15);
    LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v16) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1DF0498D0()
{
  swift_getObjectType();
  sub_1DF04BF64(&qword_1EBABF7B8, v0, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
  return sub_1DFDF09D0();
}

void sub_1DF049954(char *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)&a1[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentViewController];
  if (v3)
  {
    id v4 = v3;
    if (objc_msgSend(v4, sel_isEditing))
    {
      sub_1DF04BF64(&qword_1EBABF7B8, v5, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
      sub_1DFDF09D0();
      id v8 = objc_msgSend(a1, sel_traitCollection);
      sub_1DF04BF64(&qword_1EBAC7008, v6, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
      sub_1DFDF10C0();

      goto LABEL_6;
    }
  }
  sub_1DF04BF64(&qword_1EBABF7B8, a2, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
  sub_1DFDF09D0();
  id v8 = objc_msgSend(a1, sel_traitCollection);
  sub_1DF04BF64(&qword_1EBAC7008, v7, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
  sub_1DFDF10C0();
LABEL_6:
}

id sub_1DF049B78()
{
  uint64_t v1 = v0;
  v20.receiver = v0;
  v20.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v20, sel_viewWillLayoutSubviews);
  sub_1DFDF1720();
  id v2 = objc_msgSend(v0, sel_childViewControllers);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAC50);
  unint64_t v3 = sub_1DFDFE220();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
    return (id)swift_bridgeObjectRelease();
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (!v4) {
    return (id)swift_bridgeObjectRelease();
  }
LABEL_3:
  for (uint64_t i = 4; ; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x1E01EE240](i - 4, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * i);
    }
    uint64_t v7 = v6;
    uint64_t v8 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    id result = objc_msgSend(v6, sel_view);
    if (!result) {
      break;
    }
    id v10 = result;
    id result = objc_msgSend(v1, sel_view);
    if (!result) {
      goto LABEL_16;
    }
    id v11 = result;
    objc_msgSend(result, sel_bounds);
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;

    objc_msgSend(v10, sel_setFrame_, v13, v15, v17, v19);
    if (v8 == v4) {
      return (id)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_1DF049E44(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v19.receiver = v1;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, sel_traitCollectionDidChange_, a1);
  id v4 = objc_msgSend(v1, sel_traitCollection);
  uint64_t v5 = &v1[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_styler];
  sub_1DE94F204((uint64_t)&v1[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_styler], (uint64_t)v18);
  id v6 = __swift_project_boxed_opaque_existential_1(v18, v18[3]);
  id v7 = objc_msgSend(v1, sel_view);
  if (v7)
  {
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_setBackgroundColor_, *(void *)(*__swift_project_boxed_opaque_existential_1((void *)(*v6 + 16), *(void *)(*v6 + 40))+ OBJC_IVAR____TtC7NewsUI210BaseStyler_theme+ 24));

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    id v9 = __swift_project_boxed_opaque_existential_1(v5, *((void *)v5 + 3));
    uint64_t v11 = sub_1DF04BF64(&qword_1EBABF7B8, v10, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
    double v12 = (void *)MEMORY[0x1E01DF1F0](ObjectType, v11);
    if (!v12)
    {
LABEL_5:

      return;
    }
    double v13 = v12;
    uint64_t v14 = *v9;
    id v15 = objc_msgSend(v12, sel_view);
    if (v15)
    {
      double v16 = v15;
      id v17 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v14 + 16), *(void *)(v14 + 40))
                              + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                              + 24));
      objc_msgSend(v16, sel_setBackgroundColor_, v17);

      id v4 = v16;
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DF04A0E8(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if (a4) {
    return swift_bridgeObjectRetain();
  }
  else {
    return sub_1DF04A0F4(a1, a2, a3);
  }
}

uint64_t sub_1DF04A0F4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_1DEC08B50(a1, a2, a3);
  }
  return a1;
}

uint64_t destroy for MagazineSectionsViewController.Presentation(uint64_t a1)
{
  return sub_1DF04A11C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(unsigned char *)(a1 + 17));
}

uint64_t sub_1DF04A11C(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if (a4) {
    return swift_bridgeObjectRelease();
  }
  else {
    return sub_1DF04A128(a1, a2, a3);
  }
}

uint64_t sub_1DF04A128(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_1DEB21B94(a1, a2, a3);
  }
  return a1;
}

uint64_t _s7NewsUI230MagazineSectionsViewControllerC12PresentationOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1DF04A0E8(*(void *)a2, v4, v6, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  return a1;
}

uint64_t assignWithCopy for MagazineSectionsViewController.Presentation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1DF04A0E8(*(void *)a2, v4, v6, v5);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 17);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  sub_1DF04A11C(v7, v8, v10, v9);
  return a1;
}

uint64_t assignWithTake for MagazineSectionsViewController.Presentation(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 17);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  sub_1DF04A11C(v5, v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for MagazineSectionsViewController.Presentation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MagazineSectionsViewController.Presentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)id result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DF04A2EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_1DF04A2F4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MagazineSectionsViewController.Presentation()
{
  return &type metadata for MagazineSectionsViewController.Presentation;
}

uint64_t initializeBufferWithCopyOfBuffer for MagazineSectionsViewController.Section(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  id v4 = (id)v3;
  return a1;
}

void *assignWithCopy for MagazineSectionsViewController.Section(void *a1, void *a2)
{
  *a1 = *a2;
  long long v3 = (void *)a2[1];
  uint64_t v4 = a2[2];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v3;
  id v6 = v3;

  a1[2] = v4;
  return a1;
}

uint64_t assignWithTake for MagazineSectionsViewController.Section(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for MagazineSectionsViewController.Section()
{
  return &type metadata for MagazineSectionsViewController.Section;
}

unsigned char *storeEnumTagSinglePayload for MagazineSectionsViewController.Event(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF04A484);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MagazineSectionsViewController.Event()
{
  return &type metadata for MagazineSectionsViewController.Event;
}

unint64_t sub_1DF04A4C0()
{
  unint64_t result = qword_1EBABF7B0;
  if (!qword_1EBABF7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABF7B0);
  }
  return result;
}

void sub_1DF04A514(uint64_t a1, void *a2, uint64_t a3)
{
  char v7 = (void *)(v3 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentSection);
  unsigned __int8 v8 = *(void **)(v3 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentSection + 8);
  if (v8)
  {
    id v9 = a2;
    if (v8 != a2)
    {
      id v10 = v8;
      sub_1DF04B550(a2, a3, v8);
    }
  }
  else
  {
    id v11 = a2;
    sub_1DF04B550(a2, a3, 0);
  }
  sub_1DFDEE0E0();
  double v12 = (void *)v7[1];
  *char v7 = a1;
  v7[1] = a2;
  v7[2] = a3;
}

uint64_t sub_1DF04A600()
{
  if (UIAccessibilityIsVoiceOverRunning())
  {
    if (UIAccessibilityFocusedElement((UIAccessibilityAssistiveTechnologyIdentifier)*MEMORY[0x1E4FB2480]))
    {
      sub_1DFDFF780();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v2, 0, sizeof(v2));
    }
    sub_1DEA6964C((uint64_t)v2, (uint64_t)v3);
    if (v4)
    {
      sub_1DFDFA5A0();
      if (swift_dynamicCast())
      {

        return 0;
      }
    }
    else
    {
      sub_1DEA2CBDC((uint64_t)v3, (unint64_t *)&qword_1EBABB7F0);
    }
  }
  return 1;
}

void sub_1DF04A6D8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation + 17) == 1)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v5 = *(void **)(a2 + 184);
      id v6 = *(void **)(a2 + 192);
      if (*(unsigned char *)(a2 + 200))
      {
        if (*(unsigned char *)(a2 + 200) != 1)
        {
          switch((unint64_t)v5)
          {
            case 1uLL:
              goto LABEL_21;
            case 2uLL:
              goto LABEL_22;
            case 3uLL:
              goto LABEL_23;
            case 4uLL:
              goto LABEL_24;
            default:
              goto LABEL_20;
          }
        }
        goto LABEL_13;
      }
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  int v7 = *(unsigned __int8 *)(v4 + 16);
  if (v7 == 255)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v5 = *(void **)(a2 + 184);
      id v6 = *(void **)(a2 + 192);
      if (!*(unsigned char *)(a2 + 200))
      {
LABEL_15:
        *(void *)a3 = v5;
        *(void *)(a3 + 8) = v6;
        *(unsigned char *)(a3 + 16) = 0;
        sub_1DEC0AA20(v5, v6, 0);
        return;
      }
      if (*(unsigned char *)(a2 + 200) == 1)
      {
LABEL_13:
        sub_1DEC0AA20(*(id *)(a2 + 184), *(id *)(a2 + 192), 1);
        id v10 = objc_msgSend(v5, sel_identifier);
        uint64_t v11 = sub_1DFDFDD20();
        uint64_t v13 = v12;

        sub_1DEC0AA40(v5, v6, 1);
        *(void *)a3 = v11;
        *(void *)(a3 + 8) = v13;
        *(unsigned char *)(a3 + 16) = 1;
        return;
      }
      switch((unint64_t)v5)
      {
        case 1uLL:
LABEL_21:
          long long v15 = xmmword_1DFE14320;
          goto LABEL_25;
        case 2uLL:
LABEL_22:
          long long v15 = xmmword_1DFE1BB30;
          goto LABEL_25;
        case 3uLL:
LABEL_23:
          long long v15 = xmmword_1DFE1D090;
          goto LABEL_25;
        case 4uLL:
LABEL_24:
          long long v15 = xmmword_1DFE3AB30;
LABEL_25:
          *(_OWORD *)a3 = v15;
          break;
        default:
LABEL_20:
          *(void *)a3 = 0;
          *(void *)(a3 + 8) = 0;
          break;
      }
      char v14 = 2;
LABEL_27:
      *(unsigned char *)(a3 + 16) = v14;
      return;
    }
LABEL_14:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v14 = -1;
    goto LABEL_27;
  }
  uint64_t v8 = *(void *)v4;
  uint64_t v9 = *(void *)(v4 + 8);
  *(void *)a3 = *(void *)v4;
  *(void *)(a3 + 8) = v9;
  *(unsigned char *)(a3 + 16) = v7;
  sub_1DF04A0F4(v8, v9, v7);
}

uint64_t sub_1DF04A924(uint64_t a1)
{
  uint64_t v2 = sub_1DFDF5B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF5B30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E01EFB70](a1 + 16);
  if (result)
  {
    uint64_t v11 = (void *)result;
    swift_retain();

    if (qword_1EBAD1590 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1DFDF9580();
    uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EBB62AD8);
    v9[3] = v12;
    v9[4] = sub_1DF04BF64((unint64_t *)&qword_1EBACBC10, 255, MEMORY[0x1E4F80130]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(boxed_opaque_existential_1, v13, v12);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    uint64_t v17 = sub_1DFDFDDE0();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v9[5] = v17;
    void v9[6] = v19;
    (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD858], v6);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD888], v2);
    sub_1DFDF1750();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t sub_1DF04ACAC(uint64_t a1)
{
  uint64_t v2 = sub_1DFDF5B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF5B30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E01EFB70](a1 + 16);
  if (result)
  {
    uint64_t v11 = (void *)result;
    swift_retain();

    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD860], v6);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD888], v2);
    sub_1DFDF1750();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t sub_1DF04AEBC(uint64_t a1)
{
  uint64_t v2 = sub_1DFDF5B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF5B30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E01EFB70](a1 + 16);
  if (result)
  {
    uint64_t v11 = (void *)result;
    swift_retain();

    *uint64_t v9 = sub_1DFDFA690();
    v9[1] = v12;
    uint64_t v13 = sub_1DFDF0630();
    uint64_t v14 = MEMORY[0x1E4FABBF0];
    v9[5] = v13;
    void v9[6] = v14;
    __swift_allocate_boxed_opaque_existential_1(v9 + 2);
    sub_1DFDF0620();
    _OWORD v9[7] = sub_1DFDFA670();
    v9[8] = v15;
    (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD870], v6);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD880], v2);
    sub_1DFDF1750();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

id sub_1DF04B110@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1DFDF3A60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentViewController);
  if (v7)
  {
    swift_getObjectType();
    id v8 = v7;
    sub_1DFDF09A0();

    return (id)(*(uint64_t (**)(void *, char *, uint64_t))(v4 + 32))(a1, v6, v3);
  }
  else
  {
    id v10 = __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_styler), *(void *)(v1 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_styler + 24));
    uint64_t v13 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(*v10 + 16), *(void *)(*v10 + 40))
                   + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                   + 24);
    *a1 = v13;
    (*(void (**)(void *, void, uint64_t))(v4 + 104))(a1, *MEMORY[0x1E4FACE88], v3);
    uint64_t v11 = v13;
    return v11;
  }
}

uint64_t sub_1DF04B2C0@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_scrollViewProxyManager);
  uint64_t v3 = *MEMORY[0x1E4FAC448];
  uint64_t v4 = sub_1DFDF1FC0();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104))(a1, v3, v4);
  return swift_retain();
}

unint64_t sub_1DF04B354()
{
  return 0xD000000000000010;
}

id sub_1DF04B370()
{
  swift_getObjectType();
  sub_1DF04BF64(&qword_1EBAC7008, v1, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
  uint64_t v2 = (void *)sub_1DFDF10B0();
  if (!v2) {
    return objc_msgSend(objc_allocWithZone((Class)sub_1DFDF4C40()), sel_init);
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_navigationBar);

  if (!v4) {
    return objc_msgSend(objc_allocWithZone((Class)sub_1DFDF4C40()), sel_init);
  }
  id v5 = objc_msgSend(v0, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_horizontalSizeClass);

  if (v6 != (id)1)
  {
    id v9 = objc_msgSend(v0, sel_navigationItem);
    sub_1DFDF2E00();
    sub_1DFDECF80();
    swift_release();
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
    sub_1DFDFF4D0();
    id v10 = objc_allocWithZone((Class)sub_1DFDF4D30());
    return (id)sub_1DFDF4D20();
  }
  id v7 = objc_msgSend(objc_allocWithZone((Class)sub_1DFDF4C40()), sel_init);

  return v7;
}

uint64_t sub_1DF04B524()
{
  return sub_1DFDF2560();
}

void sub_1DF04B550(void *a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  uint64_t v40 = a2;
  uint64_t v7 = sub_1DFDF1FC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (void **)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a3)
  {
    id v11 = a3;
    objc_msgSend(v11, sel_willMoveToParentViewController_, 0);
    id v12 = objc_msgSend(v11, sel_view);
    if (!v12)
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v13 = v12;
    objc_msgSend(v12, sel_removeFromSuperview);

    objc_msgSend(v11, sel_removeFromParentViewController);
    sub_1DFDF2E00();
    sub_1DFDECF80();
    swift_release();
    uint64_t v14 = v41;
    if (v41)
    {
      sub_1DFDF2E30();
    }
  }
  if (!a1) {
    return;
  }
  swift_getObjectType();
  id v15 = a1;
  objc_msgSend(v4, sel_addChildViewController_, v15);
  id v16 = objc_msgSend(v4, sel_view);
  if (!v16) {
    goto LABEL_19;
  }
  uint64_t v17 = v16;
  id v18 = objc_msgSend(v15, sel_view);
  if (!v18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v19 = v18;
  objc_msgSend(v17, sel_addSubview_, v18);

  objc_msgSend(v15, sel_didMoveToParentViewController_, v4);
  id v20 = objc_msgSend(v15, sel_view);
  if (!v20)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v4, sel_view);
  if (!v22)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v23 = v22;
  objc_msgSend(v22, sel_bounds);
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;

  objc_msgSend(v21, sel_setFrame_, v25, v27, v29, v31);
  id v32 = objc_msgSend(v15, sel_view);
  if (!v32)
  {
LABEL_23:
    __break(1u);
    return;
  }
  id v33 = v32;
  objc_msgSend(v32, sel_setAutoresizingMask_, 18);

  uint64_t v34 = &v4[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentViewController];
  uint64_t v35 = *(void **)&v4[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentViewController];
  uint64_t v36 = v40;
  *(void *)uint64_t v34 = a1;
  *((void *)v34 + 1) = v36;
  id v37 = v15;

  sub_1DFDF0980();
  int v38 = (*(uint64_t (**)(void **, uint64_t))(v8 + 88))(v10, v7);
  if (v38 == *MEMORY[0x1E4FAC440])
  {
    (*(void (**)(void **, uint64_t))(v8 + 96))(v10, v7);
    uint64_t v39 = *v10;
    sub_1DFDF2E20();
  }
  else if (v38 == *MEMORY[0x1E4FAC448])
  {
    (*(void (**)(void **, uint64_t))(v8 + 96))(v10, v7);

    swift_release();
  }
  else
  {

    (*(void (**)(void **, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1DF04B924(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, char a5)
{
  unint64_t v8 = *(void *)(a2 + 152);
  unint64_t v7 = *(void *)(a2 + 160);
  int v9 = *(unsigned __int8 *)(a2 + 168);
  if (a5)
  {
    if (a5 != 1)
    {
      switch((unint64_t)a3)
      {
        case 1uLL:
          return v9 == 2 && v8 == 1 && v7 == 0;
        case 2uLL:
          return v9 == 2 && v8 == 2 && v7 == 0;
        case 3uLL:
          return v9 == 2 && v8 == 3 && v7 == 0;
        case 4uLL:
          return v9 == 2 && v8 == 4 && v7 == 0;
        default:
          return v9 == 2 && (v7 | v8) == 0;
      }
    }
    if (v9 == 1)
    {
      id v10 = objc_msgSend((id)v8, sel_identifier);
      uint64_t v11 = sub_1DFDFDD20();
      unint64_t v13 = v12;

      if ((void *)v11 != a3 || v13 != a4)
      {
        char v15 = sub_1DFDFFF50();
        swift_bridgeObjectRelease();
        sub_1DEC0AA40((void *)v8, (id)v7, 1);
        return v15 & 1;
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = 1;
      sub_1DEC0AA40((void *)v8, (id)v7, 1);
      return v17;
    }
    return 0;
  }
  if (*(unsigned char *)(a2 + 168)) {
    return 0;
  }
  if ((void *)v8 == a3 && v7 == a4) {
    return 1;
  }
  return sub_1DFDFFF50();
}

char *sub_1DF04BB08()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentViewController];
  if (v1)
  {
    uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentViewController];
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v1 = 0;
  }
  id v3 = v1;
  return v2;
}

uint64_t sub_1DF04BB50()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentViewController);
  if (!v1) {
    return 1;
  }
  swift_getObjectType();
  if (!(swift_conformsToProtocol2() ? v1 : 0)) {
    return 1;
  }
  swift_getObjectType();
  id v3 = v1;
  char v4 = sub_1DFDF1880();

  return v4 & 1;
}

void sub_1DF04BBE8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentViewController);
  if (v1)
  {
    swift_getObjectType();
    if (swift_conformsToProtocol2() ? v1 : 0)
    {
      swift_getObjectType();
      id v3 = v1;
      sub_1DFDF1870();
    }
  }
}

uint64_t sub_1DF04BC9C(uint64_t a1, uint64_t a2)
{
  return sub_1DF04BF64(&qword_1EAC27D28, a2, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
}

uint64_t sub_1DF04BCE4(uint64_t a1, uint64_t a2)
{
  return sub_1DF04B924(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
}

void sub_1DF04BCF0()
{
  if (!qword_1EAC27D38)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC27D38);
    }
  }
}

uint64_t sub_1DF04BD5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DF04BFEC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1DF04BDCC()
{
  if (!qword_1EBAEA458)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAEA458);
    }
  }
}

unint64_t sub_1DF04BE34()
{
  unint64_t result = qword_1EBABE958;
  if (!qword_1EBABE958)
  {
    sub_1DE9DB774(255, (unint64_t *)&qword_1EBABE950);
    sub_1DF04BEB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABE958);
  }
  return result;
}

unint64_t sub_1DF04BEB4()
{
  unint64_t result = qword_1EBABDBA8;
  if (!qword_1EBABDBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABDBA8);
  }
  return result;
}

uint64_t sub_1DF04BF08(uint64_t a1)
{
  sub_1DF04BCF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF04BF64(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF04BFAC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF04BFE4(void **a1, uint64_t a2)
{
  return sub_1DF0496C0(a1, a2, v2);
}

void sub_1DF04BFEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1DF04C050()
{
  unint64_t result = qword_1EBAD0730;
  if (!qword_1EBAD0730)
  {
    sub_1DF04C08C();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAD0730);
  }
  return result;
}

unint64_t sub_1DF04C08C()
{
  unint64_t result = qword_1EBAD0720;
  if (!qword_1EBAD0720)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAD0720);
  }
  return result;
}

uint64_t sub_1DF04C0E4()
{
  return swift_deallocObject();
}

void sub_1DF04C0F4(char *a1, uint64_t a2)
{
}

uint64_t sub_1DF04C0FC()
{
  return swift_deallocObject();
}

uint64_t sub_1DF04C134()
{
  return sub_1DF0498D0();
}

uint64_t sub_1DF04C13C()
{
  return swift_deallocObject();
}

void sub_1DF04C14C()
{
  uint64_t v1 = OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_scrollViewProxyManager;
  sub_1DFDF2E50();
  swift_allocObject();
  *(void *)&v0[v1] = sub_1DFDF2E40();
  uint64_t v2 = OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_viewControllerCache;
  sub_1DED83BA0();
  swift_allocObject();
  *(void *)&v0[v2] = sub_1DFDEE110();
  uint64_t v3 = OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_coverViewManager;
  sub_1DFDF1780();
  swift_allocObject();
  *(void *)&v0[v3] = sub_1DFDF1770();
  uint64_t v4 = OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_eventManager;
  sub_1DF04C280();
  swift_allocObject();
  *(void *)&v0[v4] = sub_1DFDECBC0();
  id v5 = &v0[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentSection];
  *((void *)v5 + 1) = 0;
  *((void *)v5 + 2) = 0;
  *(void *)id v5 = 0;
  id v6 = &v0[OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_currentViewController];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;

  sub_1DFDFFBB0();
  __break(1u);
}

void sub_1DF04C280()
{
  if (!qword_1EBABE4A0)
  {
    sub_1DED83C78();
    unint64_t v0 = sub_1DFDECBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABE4A0);
    }
  }
}

uint64_t sub_1DF04C2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v33 = a1;
  sub_1DEE0229C();
  uint64_t v32 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  double v31 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1DFDF8C50();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  double v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1DFDF8A10();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF8FD0();
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SearchMoreLayoutModel();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE011E4();
  sub_1DFDF2120();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
  uint64_t v29 = *(void *)(v4 + 80);
  uint64_t ObjectType = swift_getObjectType();
  sub_1DFDF8C40();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  id v20 = v31;
  uint64_t v19 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v31, v33, v32);
  unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v22 + v21, v20, v19);
  swift_retain();
  uint64_t v23 = v27;
  sub_1DFDF83F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v37);
  swift_release();
  uint64_t v24 = sub_1DFDF8A00();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v36);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  return v24;
}

uint64_t sub_1DF04C6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1DFDF9B40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF75E0();
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) != *MEMORY[0x1E4F804B0]) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
  uint64_t v8 = sub_1DFDFA540();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v7, v8) != *MEMORY[0x1E4F80838]) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1E01EFB70](result + 16))
    {
      sub_1DF22A3BC(a3);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t type metadata accessor for SearchMoreBlueprintViewCellProvider()
{
  return self;
}

uint64_t sub_1DF04C918()
{
  return sub_1DF04C9A8(&qword_1EAC24258, (void (*)(uint64_t))type metadata accessor for SearchMoreLayoutModel);
}

uint64_t sub_1DF04C960()
{
  return sub_1DF04C9A8((unint64_t *)&unk_1EAC28C40, (void (*)(uint64_t))type metadata accessor for SearchMoreModel);
}

uint64_t sub_1DF04C9A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF04C9F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1DF04C2E4(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_1DF04CA20()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF04CA58()
{
  sub_1DEE0229C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DF04CB24(uint64_t a1)
{
  sub_1DEE0229C();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  return sub_1DF04C6F0(a1, v4, v5);
}

uint64_t type metadata accessor for DislikeButtonStyler()
{
  return self;
}

uint64_t sub_1DF04CBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v6 = type metadata accessor for SportsTopicClusteringRequest();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1DEA086BC();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DFE0CC10;
  unint64_t v9 = *(void *)a1;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v9 + 16);
  }
  uint64_t v11 = MEMORY[0x1E4FBB550];
  uint64_t v12 = MEMORY[0x1E4FBB5C8];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 32) = v10;
  uint64_t v13 = *(void **)(a1 + 24);
  *(void *)(v8 + 96) = sub_1DE919914(0, (unint64_t *)&qword_1EBABAA70);
  unint64_t v14 = sub_1DEED9BF8();
  *(void *)(v8 + 72) = v13;
  uint64_t v15 = *(void *)(a1 + 32);
  *(void *)(v8 + 136) = v11;
  *(void *)(v8 + 144) = v12;
  *(void *)(v8 + 104) = v14;
  *(void *)(v8 + 112) = v15;
  id v16 = v13;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  uint64_t v17 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v17);
  *(&v25 - 6) = v25;
  *(&v25 - 5) = a1;
  uint64_t v18 = v26;
  *(&v25 - 4) = a2;
  *(&v25 - 3) = v18;
  *(&v25 - 2) = v27;
  sub_1DFDEE090();
  uint64_t v19 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE00();
  swift_release();

  sub_1DF051EAC(a1, (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v20 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v21 = swift_allocObject();
  sub_1DF051F14((uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  uint64_t v22 = (void *)sub_1DFDEDCE0();
  uint64_t v23 = sub_1DFDEDE50();
  swift_release();

  swift_release();
  return v23;
}

uint64_t sub_1DF04CEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for SportsTopicClusteringRequest();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  sub_1DFDEE090();
  sub_1DF051EAC(a2, (uint64_t)&v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1DF051F14((uint64_t)&v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], v14 + v13);
  *(void *)(v14 + ((v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  swift_retain();
  uint64_t v15 = (void *)sub_1DFDEDCE0();
  type metadata accessor for SportsTopicClusteringService();
  uint64_t v16 = sub_1DFDEDE10();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1DF04D060@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  sub_1DF051FE8(v3);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DF04D0A4()
{
  sub_1DEA086BC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1DEA08668();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF04D190(uint64_t a1, unint64_t *a2)
{
  return sub_1DF04DEB0(a1, a2);
}

uint64_t sub_1DF04D1A8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DF04E01C(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))sub_1DF054250);
}

uint64_t sub_1DF04D204(id *a1)
{
  uint64_t v2 = sub_1DFDE7600();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*a1, sel_expirationData);
  if (!v6) {
    goto LABEL_5;
  }
  uint64_t v7 = v6;
  if (!objc_msgSend(v6, sel_hasGlobalExpireUtcTime))
  {

LABEL_5:
    char v9 = 1;
    return v9 & 1;
  }
  objc_msgSend(v7, sel_globalExpireUtcTime);
  sub_1DFDE7540();
  sub_1DF053168();
  char v8 = sub_1DFDFDC20();

  char v9 = v8 ^ 1;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9 & 1;
}

id sub_1DF04D364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA208C4(0, &qword_1EBAE9A20, MEMORY[0x1E4F801B0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v76 = (char *)v65 - v6;
  sub_1DEA208C4(0, &qword_1EBAE99B0, MEMORY[0x1E4F80020], v4);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v72 = (char *)v65 - v8;
  uint64_t v9 = sub_1DFDF9620();
  uint64_t v73 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v71 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF72A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v79 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v65 - v15;
  uint64_t v17 = sub_1DFDF7DD0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for SportsTopicClusteringRequest();
  uint64_t v21 = a2 + *(int *)(v67 + 48);
  uint64_t v22 = sub_1DFDF9170();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = *MEMORY[0x1E4F7F6A8];
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
  uint64_t v74 = v20;
  v24(v20, v23, v17);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v86 = MEMORY[0x1E4FBC860];
  uint64_t v26 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v83 = v26;
  uint64_t v66 = a2;
  uint64_t v69 = v18;
  uint64_t v70 = v17;
  uint64_t v75 = v9;
  if (!v26)
  {
    uint64_t v47 = v68;
    goto LABEL_28;
  }
  uint64_t v27 = 0;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v28 = v12 + 16;
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64);
  v65[1] = a1;
  unint64_t v77 = v30;
  uint64_t v84 = (char *)(a1 + v30);
  double v31 = v29;
  uint64_t v78 = (void (**)(char *, char *, uint64_t))(v28 + 16);
  uint64_t v85 = *(void *)(v28 + 56);
  uint64_t v32 = (void (**)(char *, uint64_t))(v28 - 8);
  uint64_t v81 = v28;
  uint64_t v82 = v11;
  uint64_t v33 = v83;
  id v80 = v29;
  v29(v16, v84, v11);
  while (1)
  {
    unsigned int v34 = objc_msgSend((id)sub_1DFDF7280(), sel_hasThumbnail);
    swift_unknownObjectRelease();
    if (!v34) {
      goto LABEL_4;
    }
    id v35 = objc_msgSend((id)sub_1DFDF7280(), sel_topics);
    swift_unknownObjectRelease();
    if (!v35) {
      goto LABEL_4;
    }
    sub_1DE919914(0, (unint64_t *)&unk_1EBAEA4F0);
    unint64_t v36 = sub_1DFDFE220();

    if (v36 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      if (!v37)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        uint64_t v11 = v82;
        uint64_t v33 = v83;
        double v31 = v80;
LABEL_4:
        (*v32)(v16, v11);
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v37) {
        goto LABEL_3;
      }
    }
    uint64_t v38 = 4;
    while (1)
    {
      if ((v36 & 0xC000000000000001) != 0) {
        id result = (id)MEMORY[0x1E01EE240](v38 - 4, v36);
      }
      else {
        id result = *(id *)(v36 + 8 * v38);
      }
      uint64_t v40 = result;
      uint64_t v41 = v38 - 3;
      if (__OFADD__(v38 - 4, 1))
      {
        __break(1u);
        return result;
      }
      unsigned __int8 v42 = objc_msgSend(result, sel_isManagedTopicWinner);

      if (v42) {
        break;
      }
      ++v38;
      if (v41 == v37) {
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v43 = *v78;
    uint64_t v11 = v82;
    (*v78)(v79, v16, v82);
    uint64_t v44 = v86;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DEDF6864(0, *(void *)(v44 + 16) + 1, 1);
      uint64_t v44 = v86;
    }
    uint64_t v33 = v83;
    double v31 = v80;
    unint64_t v46 = *(void *)(v44 + 16);
    unint64_t v45 = *(void *)(v44 + 24);
    if (v46 >= v45 >> 1)
    {
      sub_1DEDF6864(v45 > 1, v46 + 1, 1);
      uint64_t v44 = v86;
    }
    *(void *)(v44 + 16) = v46 + 1;
    v43((char *)(v44 + v77 + v46 * v85), v79, v11);
    uint64_t v86 = v44;
LABEL_5:
    if (++v27 == v33) {
      break;
    }
    v31(v16, &v84[v85 * v27], v11);
  }
  uint64_t v25 = v86;
  a2 = v66;
  uint64_t v47 = v68;
LABEL_28:
  uint64_t v48 = (int *)v67;
  swift_bridgeObjectRelease();
  sub_1DEA086BC();
  id v80 = v49;
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1DFE0B750;
  uint64_t v51 = MEMORY[0x1E4FBB550];
  uint64_t v52 = MEMORY[0x1E4FBB5C8];
  *(void *)(v50 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v50 + 64) = v52;
  *(void *)(v50 + 32) = v83;
  uint64_t v53 = *(char **)(v25 + 16);
  *(void *)(v50 + 96) = v51;
  *(void *)(v50 + 104) = v52;
  id v79 = v53;
  *(void *)(v50 + 72) = v53;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v54 = v47[15];
  uint64_t v85 = v47[16];
  uint64_t v84 = (char *)__swift_project_boxed_opaque_existential_1(v47 + 12, v54);
  LODWORD(v83) = *(unsigned __int8 *)(a2 + v48[19]);
  uint64_t v55 = *(void *)(a2 + v48[16]);
  uint64_t v81 = *(void *)(a2 + v48[15]);
  uint64_t v82 = v55;
  uint64_t v56 = sub_1DFDF9290();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v72, 1, 1, v56);
  uint64_t v57 = a2 + v48[23];
  uint64_t v58 = sub_1DFDF9640();
  uint64_t v59 = *(void *)(v58 - 8);
  long long v60 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v76, v57, v58);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v60, 0, 1, v58);
  long long v61 = v71;
  sub_1DFDF9600();
  long long v62 = v74;
  uint64_t v63 = sub_1DFDF93F0();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v61, v75);
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v62, v70);
    swift_release();
  }
  else
  {
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_1DFE0B250;
    swift_release();
    *(void *)(v64 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v64 + 64) = MEMORY[0x1E4FBB5C8];
    *(void *)(v64 + 32) = v79;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v62, v70);
  }
  return (id)v63;
}

uint64_t sub_1DF04DC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for SportsTopicClusteringRequest();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v10 - 8);
  if (a1)
  {
    v19[1] = a1;
    uint64_t v19[2] = a2;
    v19[3] = a3;
    sub_1DE9CF674(0, &qword_1EBAD2AE8);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1DFDEDE90();
  }
  else
  {
    MEMORY[0x1F4188790](v13);
    v19[-2] = a4;
    v19[-1] = a5;
    sub_1DEABD8C4(0, (unint64_t *)&unk_1EBABA950, (uint64_t)&qword_1EBABAB70, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE9266B8);
    sub_1DFDEE090();
    sub_1DF051EAC(a5, (uint64_t)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v16 = swift_allocObject();
    sub_1DF051F14((uint64_t)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
    uint64_t v17 = (void *)sub_1DFDEDCE0();
    type metadata accessor for SportsTopicClusteringService();
    uint64_t v14 = sub_1DFDEDE10();
    swift_release();
    swift_release();
  }
  return v14;
}

uint64_t sub_1DF04DEB0(uint64_t a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if (a2[1])
  {
    if (v2 >> 62)
    {
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAB70);
      swift_bridgeObjectRetain();
      sub_1DFDFFBD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DFDFFF80();
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAB70);
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v4)
        {
          uint64_t v5 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
          do
          {
            if (!swift_dynamicCastObjCProtocolConditional()) {
              break;
            }
            v5 += 8;
            --v4;
          }
          while (v4);
        }
      }
    }
    sub_1DF053BDC();
    swift_allocObject();
    return sub_1DFDEDE90();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((void *)(a1 + 56), *(void *)(a1 + 80));
    return sub_1DFDFACF0();
  }
}

uint64_t sub_1DF04E01C(unint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t *))
{
  unint64_t v4 = *a1;
  uint64_t v11 = a3;
  uint64_t v9 = sub_1DEEF8AFC(MEMORY[0x1E4FBC868], a4, (uint64_t)v10, v4);
  sub_1DEABD8C4(0, (unint64_t *)&qword_1EBAA6550, (uint64_t)&qword_1EBABAAA0, 0x1E4F82A50, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE919914);
  sub_1DFDEE090();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v9;
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1DFDEDCE0();
  uint64_t v7 = sub_1DFDEDE00();
  swift_release();
  swift_release();

  return v7;
}

uint64_t sub_1DF04E144(unint64_t *a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = *a4;
  uint64_t v190 = a4;
  uint64_t v186 = v8;
  sub_1DEA208C4(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  id v217 = (char *)&v180 - v10;
  uint64_t v11 = type metadata accessor for SportsTopicClusteringRequest();
  uint64_t v183 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v184 = v12;
  uint64_t v185 = (uint64_t)&v180 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_1DFDF72A0();
  unint64_t v220 = *(void *)(v218 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v218);
  id v216 = (char *)&v180 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v224 = (char *)&v180 - v15;
  uint64_t v191 = sub_1DFDF7DD0();
  uint64_t v189 = *(void *)(v191 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v191);
  uint64_t v193 = (char *)&v180 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v192 = (char *)&v180 - v18;
  uint64_t v19 = sub_1DFDE7600();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v197 = (char *)&v180 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v180 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v180 - v26;
  unint64_t v188 = *a1;
  unint64_t v28 = a1[2];
  sub_1DFDE75F0();
  uint64_t v201 = v27;
  sub_1DFDE7500();
  uint64_t v198 = v20;
  uint64_t v29 = v20;
  uint64_t v30 = v11;
  double v31 = *(void (**)(char *, uint64_t))(v29 + 8);
  uint64_t v212 = v19;
  uint64_t v200 = v29 + 8;
  uint64_t v199 = v31;
  v31(v25, v19);
  uint64_t v32 = *(void *)(a3 + *(int *)(v11 + 56));
  unint64_t v194 = a2;
  id v33 = objc_msgSend(*(id *)(a2 + 136), sel_mutedTagIDs);
  if (!v33) {
    goto LABEL_145;
  }
  unsigned int v34 = v33;
  sub_1DFDFE220();

  uint64_t v35 = swift_bridgeObjectRetain();
  uint64_t v36 = sub_1DE9DB9D8(v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v37 = swift_bridgeObjectRetain();
  unint64_t v38 = (unint64_t)sub_1DF052C8C(v37, v32, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DEA086BC();
  id v221 = v39;
  uint64_t v40 = swift_allocObject();
  long long v222 = xmmword_1DFE0B750;
  *(_OWORD *)(v40 + 16) = xmmword_1DFE0B750;
  uint64_t v223 = v4;
  if (v28 >> 62) {
    goto LABEL_62;
  }
  uint64_t v41 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v42 = MEMORY[0x1E4FBB550];
    uint64_t v43 = MEMORY[0x1E4FBB5C8];
    *(void *)(v40 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v40 + 64) = v43;
    *(void *)(v40 + 32) = v41;
    if (v38 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v44 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v40 + 96) = v42;
    *(void *)(v40 + 104) = v43;
    *(void *)(v40 + 72) = v44;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    uint64_t v45 = swift_bridgeObjectRelease();
    int v46 = *(unsigned __int8 *)(a3 + *(int *)(v30 + 96));
    unint64_t v225 = v38;
    uint64_t v219 = v38 >> 62;
    if (v46 == 1)
    {
      MEMORY[0x1F4188790](v45);
      *(&v180 - 2) = (unint64_t)v201;
      swift_bridgeObjectRetain();
      uint64_t v47 = v223;
      unint64_t v38 = sub_1DF7CAAEC(sub_1DF0531C0, (uint64_t)(&v180 - 4), v38);
      uint64_t v223 = v47;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v48 = v189;
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v222;
    *(void *)(v49 + 56) = v42;
    *(void *)(v49 + 64) = v43;
    *(void *)(v49 + 32) = v44;
    if (v38 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v50 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v49 + 96) = v42;
    *(void *)(v49 + 104) = v43;
    *(void *)(v49 + 72) = v50;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v51 = *(int *)(v30 + 48);
    uint64_t v202 = a3;
    uint64_t v52 = a3 + v51;
    uint64_t v53 = sub_1DFDF9170();
    uint64_t v54 = *(void *)(v53 - 8);
    uint64_t v55 = v192;
    id v211 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 16);
    unint64_t v210 = v54 + 16;
    ((void (*)(char *, uint64_t, uint64_t))v211)(v192, v52, v53);
    uint64_t v56 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v48 + 104);
    LODWORD(v208) = *MEMORY[0x1E4F7F6A8];
    long long v209 = (void (**)(char *, uint64_t, uint64_t))(v48 + 104);
    uint64_t v207 = v56;
    ((void (*)(char *))v56)(v55);
    __swift_project_boxed_opaque_existential_1(v190 + 12, v190[15]);
    uint64_t v226 = (void *)v38;
    sub_1DEABD8C4(0, (unint64_t *)&qword_1EBAA6550, (uint64_t)&qword_1EBABAAA0, 0x1E4F82A50, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE919914);
    sub_1DECC9D8C();
    uint64_t v57 = v223;
    unint64_t v58 = sub_1DFDFDFF0();
    swift_bridgeObjectRelease();
    id v214 = v57;
    uint64_t v213 = v53;
    if (v58 >> 62)
    {
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
      swift_bridgeObjectRetain();
      sub_1DFDFFBD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DFDFFF80();
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
    }
    unint64_t v215 = v30;
    swift_bridgeObjectRelease();
    uint64_t v59 = sub_1DFDF9420();
    swift_bridgeObjectRelease();
    uint64_t v182 = v59;
    a3 = v202;
    id v60 = sub_1DF04D364(v59, v202);
    uint64_t v40 = MEMORY[0x1E4FBC860];
    long long v61 = v60 ? v60 : (void *)MEMORY[0x1E4FBC860];
    uint64_t v62 = swift_allocObject();
    long long v206 = xmmword_1DFE0B250;
    *(_OWORD *)(v62 + 16) = xmmword_1DFE0B250;
    int64_t v63 = v61[2];
    uint64_t v64 = MEMORY[0x1E4FBB550];
    *(void *)(v62 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v62 + 64) = MEMORY[0x1E4FBB5C8];
    *(void *)(v62 + 32) = v63;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v181 = v61;
    if (v63)
    {
      uint64_t v226 = (void *)v40;
      sub_1DEA9B358(0, v63, 0);
      uint64_t v223 = *(void (**)(void, void, void))(v220 + 16);
      long long v65 = (char *)v61
          + ((*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80));
      *(void *)&long long v222 = *(void *)(v220 + 72);
      uint64_t v66 = (void (**)(char *, uint64_t))(v220 + 8);
      do
      {
        uint64_t v67 = v224;
        uint64_t v68 = v218;
        v223(v224, v65, v218);
        uint64_t v69 = sub_1DFDF7250();
        uint64_t v71 = v70;
        (*v66)(v67, v68);
        uint64_t v72 = (uint64_t)v226;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DEA9B358(0, *(void *)(v72 + 16) + 1, 1);
          uint64_t v72 = (uint64_t)v226;
        }
        unint64_t v74 = *(void *)(v72 + 16);
        unint64_t v73 = *(void *)(v72 + 24);
        if (v74 >= v73 >> 1)
        {
          sub_1DEA9B358(v73 > 1, v74 + 1, 1);
          uint64_t v72 = (uint64_t)v226;
        }
        *(void *)(v72 + 16) = v74 + 1;
        uint64_t v75 = v72 + 16 * v74;
        *(void *)(v75 + 32) = v69;
        *(void *)(v75 + 40) = v71;
        v65 += v222;
        --v63;
        uint64_t v76 = (uint64_t)v217;
      }
      while (v63);
      a3 = v202;
      uint64_t v64 = MEMORY[0x1E4FBB550];
      uint64_t v40 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v72 = v40;
      uint64_t v76 = (uint64_t)v217;
    }
    uint64_t v30 = sub_1DE9DB9D8(v72);
    swift_bridgeObjectRelease();
    uint64_t v227 = v30;
    uint64_t v226 = (void *)v40;
    unint64_t v77 = v225;
    uint64_t v78 = v219 ? sub_1DFDFFBE0() : *(void *)((v225 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v79 = (void *)MEMORY[0x1E4FBC860];
    if (!v78) {
      break;
    }
    unint64_t v38 = 0;
    id v224 = (char *)(v77 & 0xC000000000000001);
    uint64_t v80 = v77 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v224)
      {
        id v81 = (id)MEMORY[0x1E01EE240](v38, v77);
      }
      else
      {
        if (v38 >= *(void *)(v80 + 16)) {
          goto LABEL_61;
        }
        id v81 = *(id *)(v77 + 8 * v38 + 32);
      }
      uint64_t v82 = v81;
      unint64_t v83 = v38 + 1;
      if (__OFADD__(v38, 1)) {
        break;
      }
      a3 = v78;
      swift_bridgeObjectRetain();
      id v84 = objc_msgSend(v82, sel_identifier);
      uint64_t v85 = sub_1DFDFDD20();
      uint64_t v40 = v86;

      LOBYTE(v84) = sub_1DEAAB55C(v85, v40, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v84)
      {
      }
      else
      {
        sub_1DFDFFA50();
        sub_1DFDFFA90();
        sub_1DFDFFAA0();
        sub_1DFDFFA60();
      }
      unint64_t v77 = v225;
      uint64_t v78 = a3;
      ++v38;
      BOOL v130 = v83 == a3;
      uint64_t v76 = (uint64_t)v217;
      if (v130)
      {
        uint64_t v87 = (uint64_t)v226;
        a3 = v202;
        uint64_t v64 = MEMORY[0x1E4FBB550];
        id v79 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  uint64_t v87 = MEMORY[0x1E4FBC860];
LABEL_41:
  swift_bridgeObjectRelease();
  uint64_t v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = v206;
  BOOL v89 = v87 < 0 || (v87 & 0x4000000000000000) != 0;
  if (v89)
  {
    swift_bridgeObjectRetain();
    uint64_t v90 = sub_1DFDFFBE0();
    swift_release();
  }
  else
  {
    uint64_t v90 = *(void *)(v87 + 16);
  }
  *(void *)(v88 + 56) = v64;
  *(void *)(v88 + 64) = MEMORY[0x1E4FBB5C8];
  *(void *)(v88 + 32) = v90;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v91 = v193;
  ((void (*)(char *, uint64_t, uint64_t))v211)(v193, a3 + *(int *)(v215 + 52), v213);
  ((void (*)(char *, void, uint64_t))v207)(v91, v208, v191);
  __swift_project_boxed_opaque_existential_1((void *)(v194 + 96), *(void *)(v194 + 120));
  if (v89)
  {
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
    swift_bridgeObjectRetain();
    sub_1DFDFFBD0();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1DFDFFF80();
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
  }
  swift_release();
  uint64_t v187 = sub_1DFDF9420();
  uint64_t v92 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v92);
  *(&v180 - 2) = v194;
  *(&v180 - 1) = a3;
  unint64_t v93 = v188;
  swift_bridgeObjectRetain();
  uint64_t v94 = v214;
  unint64_t v95 = (unint64_t)sub_1DF7CAAD4((uint64_t (*)(uint64_t *))sub_1DF052E70, &v180 - 4, v93);
  unint64_t v96 = v95;
  unint64_t v180 = (unint64_t)v94;
  if (v95 >> 62)
  {
    uint64_t v97 = sub_1DFDFFBE0();
    if (v97) {
      goto LABEL_51;
    }
  }
  else
  {
    uint64_t v97 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v97)
    {
LABEL_51:
      uint64_t v226 = v79;
      sub_1DEA9B358(0, v97 & ~(v97 >> 63), 0);
      if (v97 < 0) {
        goto LABEL_144;
      }
      uint64_t v98 = 0;
      uint64_t v99 = (uint64_t)v226;
      do
      {
        if ((v96 & 0xC000000000000001) != 0)
        {
          uint64_t v100 = (void *)MEMORY[0x1E01EE240](v98, v96);
        }
        else
        {
          uint64_t v100 = *(void **)(v96 + 8 * v98 + 32);
          swift_unknownObjectRetain();
        }
        id v101 = objc_msgSend(v100, sel_identifier, v180);
        uint64_t v102 = sub_1DFDFDD20();
        uint64_t v104 = v103;
        swift_unknownObjectRelease();

        uint64_t v226 = (void *)v99;
        unint64_t v106 = *(void *)(v99 + 16);
        unint64_t v105 = *(void *)(v99 + 24);
        if (v106 >= v105 >> 1)
        {
          sub_1DEA9B358(v105 > 1, v106 + 1, 1);
          uint64_t v99 = (uint64_t)v226;
        }
        ++v98;
        *(void *)(v99 + 16) = v106 + 1;
        uint64_t v107 = v99 + 16 * v106;
        *(void *)(v107 + 32) = v102;
        *(void *)(v107 + 40) = v104;
      }
      while (v97 != v98);
      swift_bridgeObjectRelease();
      a3 = v202;
      uint64_t v76 = (uint64_t)v217;
      goto LABEL_69;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v99 = MEMORY[0x1E4FBC860];
LABEL_69:
  uint64_t v108 = sub_1DE9DB9D8(v99);
  swift_bridgeObjectRelease();
  uint64_t v204 = *(void *)(v187 + 16);
  if (!v204)
  {
    uint64_t v163 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_140;
  }
  unint64_t v210 = (*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80);
  unint64_t v203 = v187 + v210;
  id v214 = *(void (**)(void, void, void))(v220 + 72);
  id v224 = (char *)(v108 + 56);
  id v211 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56);
  uint64_t v196 = v198 + 16;
  uint64_t v207 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48);
  uint64_t v195 = (void (**)(char *, uint64_t, uint64_t))(v198 + 32);
  long long v209 = (void (**)(char *, uint64_t, uint64_t))(v220 + 16);
  long long v208 = (void (**)(unint64_t, char *, uint64_t))(v220 + 32);
  swift_bridgeObjectRetain();
  uint64_t v109 = 0;
  id v221 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v219 = v108;
  while (1)
  {
    uint64_t v213 = v203 + (void)v214 * v109;
    uint64_t v110 = (void *)sub_1DFDF7280();
    id v111 = objc_msgSend(v110, sel_topics);
    if (!v111)
    {
      swift_unknownObjectRelease();
      goto LABEL_72;
    }
    uint64_t v112 = v111;
    sub_1DE919914(0, (unint64_t *)&unk_1EBAEA4F0);
    unint64_t v113 = sub_1DFDFE220();

    unint64_t v215 = sub_1DF04FD04(a3, v110, v113);
    *(void *)&long long v206 = v109;
    long long v205 = v110;
    if (!(v113 >> 62))
    {
      uint64_t v114 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v115 = v212;
      if (v114) {
        break;
      }
      goto LABEL_71;
    }
    swift_bridgeObjectRetain();
    uint64_t v114 = sub_1DFDFFBE0();
    uint64_t v115 = v212;
    if (v114) {
      break;
    }
LABEL_71:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    a3 = v202;
    uint64_t v109 = v206;
LABEL_72:
    if (++v109 == v204)
    {
      swift_bridgeObjectRelease();
      uint64_t v163 = v221;
LABEL_140:
      swift_bridgeObjectRelease();
      uint64_t v164 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v164);
      *(&v180 - 6) = (unint64_t)v163;
      *(&v180 - 5) = a3;
      unint64_t v165 = v194;
      *(&v180 - 4) = (unint64_t)&v227;
      *(&v180 - 3) = v165;
      *(&v180 - 2) = (unint64_t)v193;
      unint64_t v166 = v188;
      swift_bridgeObjectRetain();
      unint64_t v167 = v180;
      uint64_t v168 = sub_1DF1958D4((void (*)(long long *__return_ptr, uint64_t *))sub_1DF052E90, (uint64_t)(&v180 - 8), v166);
      unint64_t v225 = v167;
      swift_bridgeObjectRelease();
      uint64_t v169 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v169);
      *(&v180 - 4) = (unint64_t)v190;
      *(&v180 - 3) = (unint64_t)&v227;
      *(&v180 - 2) = a3;
      sub_1DEABD8C4(0, (unint64_t *)&qword_1EBABA9A0, (uint64_t)&qword_1EBABAD10, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE9266B8);
      sub_1DFDEE090();
      uint64_t v170 = v185;
      sub_1DF051EAC(a3, v185);
      unint64_t v171 = (*(unsigned __int8 *)(v183 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80);
      unint64_t v172 = (v184 + v171 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v173 = (v172 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v174 = swift_allocObject();
      sub_1DF051F14(v170, v174 + v171);
      *(void *)(v174 + v172) = v168;
      *(void *)(v174 + v173) = v181;
      *(void *)(v174 + ((v173 + 15) & 0xFFFFFFFFFFFFFFF8)) = v182;
      uint64_t v175 = (void *)sub_1DFDEDCE0();
      uint64_t v176 = sub_1DFDEDE10();
      swift_release();
      swift_release();

      uint64_t v177 = *(void (**)(char *, uint64_t))(v189 + 8);
      uint64_t v178 = v191;
      v177(v192, v191);
      v177(v193, v178);
      v199(v201, v212);
      swift_bridgeObjectRelease();
      return v176;
    }
  }
  if (v114 < 1) {
    goto LABEL_143;
  }
  uint64_t v116 = 0;
  unint64_t v225 = v113 & 0xC000000000000001;
  unint64_t v220 = v113 + 32;
  *(void *)&long long v222 = v113;
  uint64_t v223 = (void (*)(void, void, void))v114;
  while (2)
  {
    if (v225) {
      id v117 = (id)MEMORY[0x1E01EE240](v116, v113);
    }
    else {
      id v117 = *(id *)(v220 + 8 * v116);
    }
    id v118 = v117;
    id v119 = objc_msgSend(v117, sel_tagID, v180);
    if (!v119)
    {

      goto LABEL_79;
    }
    uint64_t v120 = v119;
    uint64_t v121 = sub_1DFDFDD20();
    uint64_t v123 = v122;

    if (!*(void *)(v108 + 16)) {
      goto LABEL_131;
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t v124 = sub_1DFE00140();
    uint64_t v125 = -1 << *(unsigned char *)(v108 + 32);
    uint64_t v126 = v108;
    unint64_t v127 = v124 & ~v125;
    if (((*(void *)&v224[(v127 >> 3) & 0xFFFFFFFFFFFFFF8] >> v127) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      uint64_t v108 = v126;
      goto LABEL_134;
    }
    uint64_t v128 = *(void *)(v126 + 48);
    uint64_t v129 = (void *)(v128 + 16 * v127);
    BOOL v130 = *v129 == v121 && v129[1] == v123;
    if (!v130 && (sub_1DFDFFF50() & 1) == 0)
    {
      uint64_t v136 = ~v125;
      while (1)
      {
        unint64_t v127 = (v127 + 1) & v136;
        if (((*(void *)&v224[(v127 >> 3) & 0xFFFFFFFFFFFFFF8] >> v127) & 1) == 0) {
          break;
        }
        uint64_t v137 = (void *)(v128 + 16 * v127);
        BOOL v138 = *v137 == v121 && v137[1] == v123;
        if (v138 || (sub_1DFDFFF50() & 1) != 0) {
          goto LABEL_91;
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_133;
    }
LABEL_91:
    unsigned int v131 = objc_msgSend(v118, sel_isManagedTopic);
    unint64_t v113 = v222;
    if (v131 && (objc_msgSend(v118, sel_isManagedTopicWinner) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      uint64_t v108 = v219;
      uint64_t v114 = (uint64_t)v223;
      goto LABEL_79;
    }
    unint64_t v132 = v215;
    uint64_t v108 = v219;
    if (!*(void *)(v215 + 16))
    {
      (*v211)(v76, 1, 1, v115);
      goto LABEL_109;
    }
    swift_bridgeObjectRetain();
    unint64_t v133 = sub_1DEA6D930(v121, v123);
    if (v134)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v198 + 16))(v76, *(void *)(v132 + 56) + *(void *)(v198 + 72) * v133, v115);
      uint64_t v135 = 0;
    }
    else
    {
      uint64_t v135 = 1;
    }
    (*v211)(v76, v135, 1, v115);
    swift_bridgeObjectRelease();
    if ((*v207)(v76, 1, v115) == 1)
    {
LABEL_109:
      sub_1DEAEA868(v76);
      goto LABEL_110;
    }
    uint64_t v160 = v197;
    (*v195)(v197, v76, v115);
    sub_1DF053168();
    char v161 = sub_1DFDFDC20();
    uint64_t v162 = v160;
    unint64_t v113 = v222;
    v199(v162, v115);
    if ((v161 & 1) == 0)
    {
LABEL_131:

      swift_bridgeObjectRelease();
      uint64_t v114 = (uint64_t)v223;
      goto LABEL_79;
    }
LABEL_110:
    if (v221[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v139 = sub_1DEA6D930(v121, v123);
      unint64_t v140 = MEMORY[0x1E4FBC860];
      if (v141)
      {
        unint64_t v140 = *(void *)(v221[7] + 8 * v139);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v140 = MEMORY[0x1E4FBC860];
    }
    (*v209)(v216, v213, v218);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v140 = sub_1DEE19C5C(0, *(void *)(v140 + 16) + 1, 1, v140);
    }
    unint64_t v143 = *(void *)(v140 + 16);
    unint64_t v142 = *(void *)(v140 + 24);
    if (v143 >= v142 >> 1) {
      unint64_t v140 = sub_1DEE19C5C(v142 > 1, v143 + 1, 1, v140);
    }
    *(void *)(v140 + 16) = v143 + 1;
    (*v208)(v140 + v210 + v143 * (void)v214, v216, v218);
    uint64_t v144 = v221;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v226 = v144;
    unint64_t v147 = sub_1DEA6D930(v121, v123);
    uint64_t v148 = v144[2];
    BOOL v149 = (v146 & 1) == 0;
    uint64_t v150 = v148 + v149;
    if (!__OFADD__(v148, v149))
    {
      char v151 = v146;
      if (v144[3] >= v150)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1DF65D0D4();
        }
      }
      else
      {
        sub_1DF6531A4(v150, isUniquelyReferenced_nonNull_native);
        unint64_t v152 = sub_1DEA6D930(v121, v123);
        if ((v151 & 1) != (v153 & 1)) {
          goto LABEL_146;
        }
        unint64_t v147 = v152;
      }
      uint64_t v115 = v212;
      uint64_t v154 = v226;
      id v221 = v226;
      if (v151)
      {
        uint64_t v155 = v226[7];
        swift_bridgeObjectRelease();
        *(void *)(v155 + 8 * v147) = v140;
      }
      else
      {
        v226[(v147 >> 6) + 8] |= 1 << v147;
        unsigned int v156 = (uint64_t *)(v154[6] + 16 * v147);
        *unsigned int v156 = v121;
        v156[1] = v123;
        *(void *)(v154[7] + 8 * v147) = v140;
        uint64_t v157 = v154[2];
        BOOL v158 = __OFADD__(v157, 1);
        uint64_t v159 = v157 + 1;
        if (v158) {
          goto LABEL_142;
        }
        v154[2] = v159;
        swift_bridgeObjectRetain();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v76 = (uint64_t)v217;
LABEL_133:
      uint64_t v108 = v219;
LABEL_134:
      unint64_t v113 = v222;
      uint64_t v114 = (uint64_t)v223;
LABEL_79:
      if (++v116 == v114) {
        goto LABEL_71;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1DFE00000();
  __break(1u);
  return result;
}

uint64_t sub_1DF04FB98(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SportsTopicClusteringRequest();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = (char *)objc_msgSend(v8, sel_groupingEligibility);
  if ((unint64_t)(v9 - 1) < 3)
  {
    sub_1DF051EAC(a3, (uint64_t)v7);
    uint64_t v10 = *(void **)&v7[*(int *)(v5 + 112)];
    swift_bridgeObjectRetain();
    id v11 = objc_msgSend(v8, sel_identifier);
    uint64_t v12 = sub_1DFDFDD20();
    uint64_t v14 = v13;

    LOBYTE(v11) = sub_1DF1B5544(v12, v14, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v15 = v11 ^ 1;
LABEL_5:
    sub_1DF053A48((uint64_t)v7);
    return v15 & 1;
  }
  if (!v9)
  {
    sub_1DF051EAC(a3, (uint64_t)v7);
    char v15 = 0;
    goto LABEL_5;
  }
  uint64_t v17 = v9;
  type metadata accessor for FCTagEligibilityForGrouping(0);
  v18[1] = v17;
  uint64_t result = sub_1DFDFFFD0();
  __break(1u);
  return result;
}

unint64_t sub_1DF04FD04(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v6 = sub_1DFDE7600();
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v68 = (char *)&v56 - v10;
  sub_1DEA208C4(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v56 - v15;
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for SportsTopicClusteringRequest() + 96)) == 1
    && (uint64_t v62 = v16, (objc_msgSend(a2, sel_respondsToSelector_, sel_expirationData) & 1) != 0)
    && (id v17 = objc_msgSend(a2, sel_expirationData)) != 0)
  {
    uint64_t v18 = (uint64_t)v17;
    unint64_t v19 = sub_1DF050430((void *)v18);
    unint64_t v61 = v19;
    if (v19 >> 62)
    {
LABEL_39:
      swift_bridgeObjectRetain_n();
      uint64_t v20 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v21 = (uint64_t)v62;
      if (v20) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v21 = (uint64_t)v62;
      if (v20)
      {
LABEL_6:
        uint64_t v57 = v18;
        unint64_t v58 = v9;
        uint64_t v9 = (char *)v61;
        uint64_t v69 = (void (**)(char *, uint64_t, uint64_t, unint64_t))(v67 + 56);
        long long v65 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))(v67 + 48);
        unint64_t v66 = v61 & 0xC000000000000001;
        uint64_t v64 = (char **)(v67 + 32);
        unint64_t v59 = a3;
        uint64_t v60 = v67 + 40;
        uint64_t v22 = (void *)MEMORY[0x1E4FBC868];
        uint64_t v23 = 4;
        uint64_t v63 = v20;
        while (1)
        {
          uint64_t v27 = v23 - 4;
          if (v66)
          {
            id v28 = (id)MEMORY[0x1E01EE240](v23 - 4, v9);
            uint64_t v29 = v23 - 3;
            if (__OFADD__(v27, 1)) {
              goto LABEL_36;
            }
          }
          else
          {
            id v28 = *(id *)&v9[8 * v23];
            uint64_t v29 = v23 - 3;
            if (__OFADD__(v27, 1))
            {
LABEL_36:
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              __break(1u);
              goto LABEL_39;
            }
          }
          uint64_t v70 = v29;
          uint64_t v30 = v28;
          id v31 = objc_msgSend(v28, sel_tagID);
          a3 = sub_1DFDFDD20();
          uint64_t v33 = v32;

          id v71 = v30;
          id v34 = objc_msgSend(v30, sel_expireTime);
          sub_1DFDE7570();

          uint64_t v35 = *v69;
          (*v69)((char *)v21, 0, 1, v6);
          if ((*v65)(v21, 1, v6) == 1)
          {
            sub_1DEAEA868(v21);
            swift_bridgeObjectRetain();
            a3 = sub_1DEA6D930(a3, v33);
            uint64_t v18 = v36;
            swift_bridgeObjectRelease();
            if (v18)
            {
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v72 = v22;
              if (!isUniquelyReferenced_nonNull_native)
              {
                sub_1DF65C21C();
                uint64_t v22 = v72;
              }
              swift_bridgeObjectRelease();
              (*(void (**)(char *, unint64_t, unint64_t))(v67 + 32))(v14, v22[7] + *(void *)(v67 + 72) * a3, v6);
              sub_1DF7CF66C(a3, (uint64_t)v22);
              swift_bridgeObjectRelease();
              uint64_t v26 = 0;
            }
            else
            {
              uint64_t v26 = 1;
            }
            v35(v14, v26, 1, v6);
            swift_bridgeObjectRelease();
            sub_1DEAEA868((uint64_t)v14);

            goto LABEL_12;
          }
          uint64_t v9 = v14;
          uint64_t v14 = *v64;
          uint64_t v38 = v21;
          unint64_t v39 = v6;
          ((void (*)(char *, uint64_t, unint64_t))*v64)(v68, v38, v6);
          uint64_t v18 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v72 = v22;
          unint64_t v6 = sub_1DEA6D930(a3, v33);
          uint64_t v41 = v22[2];
          BOOL v42 = (v40 & 1) == 0;
          uint64_t v43 = v41 + v42;
          if (__OFADD__(v41, v42)) {
            goto LABEL_37;
          }
          char v44 = v40;
          if (v22[3] >= v43)
          {
            if (v18)
            {
              uint64_t v47 = v72;
              if ((v40 & 1) == 0) {
                goto LABEL_32;
              }
            }
            else
            {
              sub_1DF65C21C();
              uint64_t v47 = v72;
              if ((v44 & 1) == 0) {
                goto LABEL_32;
              }
            }
          }
          else
          {
            sub_1DF651EE0(v43, v18);
            unint64_t v45 = sub_1DEA6D930(a3, v33);
            if ((v44 & 1) != (v46 & 1))
            {
              unint64_t result = sub_1DFE00000();
              __break(1u);
              return result;
            }
            unint64_t v6 = v45;
            uint64_t v47 = v72;
            if ((v44 & 1) == 0)
            {
LABEL_32:
              v47[(v6 >> 6) + 8] |= 1 << v6;
              uint64_t v49 = (unint64_t *)(v47[6] + 16 * v6);
              *uint64_t v49 = a3;
              v49[1] = v33;
              unint64_t v50 = v47[7] + *(void *)(v67 + 72) * v6;
              unint64_t v6 = v39;
              ((void (*)(unint64_t, char *, unint64_t))v14)(v50, v68, v39);
              uint64_t v51 = v47[2];
              BOOL v52 = __OFADD__(v51, 1);
              uint64_t v53 = v51 + 1;
              if (v52) {
                goto LABEL_38;
              }
              void v47[2] = v53;
              swift_bridgeObjectRetain();
              goto LABEL_34;
            }
          }
          unint64_t v48 = v47[7] + *(void *)(v67 + 72) * v6;
          unint64_t v6 = v39;
          (*(void (**)(unint64_t, char *, unint64_t))(v67 + 40))(v48, v68, v39);
LABEL_34:
          uint64_t v22 = v72;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v14 = v9;
          uint64_t v9 = (char *)v61;
          uint64_t v21 = (uint64_t)v62;
LABEL_12:
          ++v23;
          if (v70 == v63)
          {
            swift_bridgeObjectRelease();
            uint64_t v9 = v58;
            a3 = v59;
            uint64_t v18 = v57;
            goto LABEL_41;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)MEMORY[0x1E4FBC868];
LABEL_41:
    swift_bridgeObjectRelease();
    if (objc_msgSend((id)v18, sel_hasGlobalExpireUtcTime))
    {
      objc_msgSend((id)v18, sel_globalExpireUtcTime);
      uint64_t v54 = sub_1DFDE7540();
      MEMORY[0x1F4188790](v54);
      *(&v56 - 2) = (uint64_t)v22;
      *(&v56 - 1) = (uint64_t)v9;
      uint64_t v55 = sub_1DEEF8C4C(MEMORY[0x1E4FBC868], (void (*)(void **, id *))sub_1DF0531E0, (uint64_t)(&v56 - 4), a3);
      swift_bridgeObjectRelease();

      (*(void (**)(char *, unint64_t))(v67 + 8))(v9, v6);
      return (unint64_t)v55;
    }
    else
    {
    }
    return (unint64_t)v22;
  }
  else
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    return sub_1DF34A714(v24);
  }
}

uint64_t sub_1DF050430(void *a1)
{
  id v1 = objc_msgSend(a1, sel_tagsExpirationLists);
  if (v1)
  {
    unint64_t v2 = v1;
    sub_1DE919914(0, &qword_1EAC27D40);
    sub_1DFDFE210();
  }
  return MEMORY[0x1E4FBC860];
}

id sub_1DF050540(uint64_t a1, id *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a4;
  v25[1] = a1;
  uint64_t v7 = sub_1DFDE7600();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA208C4(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v25 - v15;
  id result = objc_msgSend(*a2, sel_tagID);
  if (result)
  {
    uint64_t v18 = result;
    v25[0] = v4;
    uint64_t v19 = sub_1DFDFDD20();
    uint64_t v21 = v20;

    if (*(void *)(a3 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1DEA6D930(v19, v21);
      if (v23)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v14, *(void *)(a3 + 56) + *(void *)(v8 + 72) * v22, v7);
        uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v24(v14, 0, 1, v7);
      }
      else
      {
        uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v24(v14, 1, 1, v7);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v24(v14, 1, 1, v7);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v26, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v10, v7);
      sub_1DEAEA868((uint64_t)v14);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v14, v7);
    }
    v24(v16, 0, 1, v7);
    return (id)sub_1DFBC0B88((uint64_t)v16, v19, v21);
  }
  return result;
}

uint64_t sub_1DF050870@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v100 = a6;
  unint64_t v95 = a5;
  uint64_t v99 = a4;
  uint64_t v103 = sub_1DFDF72A0();
  uint64_t v105 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v102 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA208C4(0, &qword_1EBAE9A20, MEMORY[0x1E4F801B0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v83 - v14;
  sub_1DEA208C4(0, &qword_1EBAE99B0, MEMORY[0x1E4F80020], v12);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v96 = (char *)&v83 - v17;
  uint64_t v18 = sub_1DFDF9620();
  uint64_t v97 = *(void *)(v18 - 8);
  uint64_t v98 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = *a1;
  id v22 = objc_msgSend(*a1, sel_identifier);
  uint64_t v23 = sub_1DFDFDD20();
  uint64_t v25 = v24;

  if (!*(void *)(a2 + 16) || (unint64_t v26 = sub_1DEA6D930(v23, v25), (v27 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_1DEA086BC();
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1DFE0B250;
    id v51 = objc_msgSend(v21, sel_identifier);
    uint64_t v52 = sub_1DFDFDD20();
    uint64_t v54 = v53;

    *(void *)(v50 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v50 + 64) = sub_1DEA08668();
    *(void *)(v50 + 32) = v52;
    *(void *)(v50 + 40) = v54;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    uint64_t result = swift_bridgeObjectRelease();
    *a7 = 0;
    a7[1] = 0;
    a7[2] = 0;
    return result;
  }
  id v87 = v21;
  uint64_t v88 = a7;
  uint64_t v28 = *(void *)(*(void *)(a2 + 56) + 8 * v26);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t v29 = v101;
  uint64_t v30 = sub_1DF05321C(v28, v99);
  uint64_t v85 = v28;
  swift_bridgeObjectRelease();
  uint64_t v104 = v30;
  sub_1DEA208C4(0, (unint64_t *)&unk_1EBABA870, MEMORY[0x1E4F7F3D0], MEMORY[0x1E4FBB320]);
  sub_1DF0539C0();
  uint64_t v93 = sub_1DFDFDFF0();
  uint64_t v86 = v29;
  swift_bridgeObjectRelease();
  id v31 = (void (*)(void, void, void))v95[16];
  uint64_t v94 = v95[15];
  id v101 = v31;
  unint64_t v95 = __swift_project_boxed_opaque_existential_1(v95 + 12, v94);
  uint64_t v32 = (int *)type metadata accessor for SportsTopicClusteringRequest();
  int v92 = *(unsigned __int8 *)(a3 + v32[19]);
  uint64_t v33 = v32[18];
  uint64_t v84 = v32[17];
  uint64_t v34 = *(void *)(a3 + v33);
  uint64_t v90 = *(void *)(a3 + v84);
  uint64_t v91 = v34;
  uint64_t v35 = sub_1DFDF9290();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v96, 1, 1, v35);
  uint64_t v89 = *(void *)(a3 + v32[21]);
  uint64_t v36 = a3 + v32[23];
  uint64_t v37 = sub_1DFDF9640();
  uint64_t v38 = *(void *)(v37 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v15, v36, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v15, 0, 1, v37);
  uint64_t v39 = v93;
  sub_1DFDF9600();
  uint64_t v40 = sub_1DFDF93F0();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v20, v98);
  if (!v40)
  {
    swift_bridgeObjectRelease();
    sub_1DEA086BC();
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1DFE0B750;
    id v57 = objc_msgSend(v87, sel_identifier);
    uint64_t v58 = sub_1DFDFDD20();
    uint64_t v60 = v59;

    *(void *)(v56 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v56 + 64) = sub_1DEA08668();
    *(void *)(v56 + 32) = v58;
    *(void *)(v56 + 40) = v60;
    uint64_t v61 = *(void *)(v39 + 16);
    swift_bridgeObjectRelease();
    uint64_t v62 = MEMORY[0x1E4FBB5C8];
    *(void *)(v56 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v56 + 104) = v62;
    *(void *)(v56 + 72) = v61;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  int64_t v41 = *(void *)(v40 + 16);
  int64_t v42 = *(void *)(a3 + v84);
  if (v41 < v42)
  {
    swift_bridgeObjectRelease();
    sub_1DEA086BC();
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1DFE0CC10;
    id v44 = objc_msgSend(v87, sel_identifier);
    uint64_t v45 = sub_1DFDFDD20();
    uint64_t v47 = v46;

    *(void *)(v43 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v43 + 64) = sub_1DEA08668();
    *(void *)(v43 + 32) = v45;
    *(void *)(v43 + 40) = v47;
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x1E4FBB550];
    uint64_t v49 = MEMORY[0x1E4FBB5C8];
    *(void *)(v43 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v43 + 104) = v49;
    *(void *)(v43 + 72) = v41;
    *(void *)(v43 + 136) = v48;
    *(void *)(v43 + 144) = v49;
    *(void *)(v43 + 112) = v42;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v63 = v88;
    *uint64_t v88 = 0;
    v63[1] = 0;
    v63[2] = 0;
    return result;
  }
  sub_1DFDF8ED0();
  swift_bridgeObjectRetain();
  uint64_t v64 = MEMORY[0x1E4FBC860];
  uint64_t v98 = sub_1DFDF8EB0();
  if (v41)
  {
    uint64_t v104 = v64;
    sub_1DEA9B358(0, v41, 0);
    long long v65 = *(void (**)(void, void, void))(v105 + 16);
    uint64_t v66 = *(unsigned __int8 *)(v105 + 80);
    uint64_t v97 = v40;
    uint64_t v67 = v40 + ((v66 + 32) & ~v66);
    uint64_t v100 = *(void *)(v105 + 72);
    id v101 = v65;
    v105 += 16;
    uint64_t v68 = (void (**)(char *, uint64_t))(v105 - 8);
    do
    {
      uint64_t v69 = v102;
      uint64_t v70 = v103;
      v101(v102, v67, v103);
      uint64_t v71 = sub_1DFDF7250();
      uint64_t v73 = v72;
      (*v68)(v69, v70);
      uint64_t v64 = v104;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA9B358(0, *(void *)(v64 + 16) + 1, 1);
        uint64_t v64 = v104;
      }
      unint64_t v75 = *(void *)(v64 + 16);
      unint64_t v74 = *(void *)(v64 + 24);
      unint64_t v76 = v75 + 1;
      if (v75 >= v74 >> 1)
      {
        sub_1DEA9B358(v74 > 1, v75 + 1, 1);
        uint64_t v64 = v104;
      }
      *(void *)(v64 + 16) = v76;
      uint64_t v77 = v64 + 16 * v75;
      *(void *)(v77 + 32) = v71;
      *(void *)(v77 + 40) = v73;
      v67 += v100;
      --v41;
    }
    while (v41);
    id v79 = v87;
    uint64_t v78 = v88;
    uint64_t v40 = v97;
    goto LABEL_18;
  }
  unint64_t v76 = *(void *)(v64 + 16);
  id v79 = v87;
  uint64_t v78 = v88;
  if (v76)
  {
LABEL_18:
    uint64_t v80 = (uint64_t *)(v64 + 40);
    do
    {
      uint64_t v82 = *(v80 - 1);
      uint64_t v81 = *v80;
      swift_bridgeObjectRetain();
      sub_1DE9DBA70(&v104, v82, v81);
      swift_bridgeObjectRelease();
      v80 += 2;
      --v76;
    }
    while (v76);
  }
  swift_bridgeObjectRelease();
  *uint64_t v78 = v79;
  v78[1] = v40;
  void v78[2] = v98;
  return swift_unknownObjectRetain();
}

uint64_t sub_1DF051190@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DFDF7250();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DF0511CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v4);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DEC78FF4(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = MEMORY[0x1E01E9F50](v7, *(void *)(a3 + 40), v4, v5);
  swift_release();
  return v8;
}

uint64_t sub_1DF05126C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v75 = a4;
  uint64_t v71 = a6;
  uint64_t v72 = a5;
  uint64_t v76 = a3;
  uint64_t v73 = a2;
  uint64_t isUniquelyReferenced_nonNull_native = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v7 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v7)
  {
    unint64_t v78 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v9 = 4;
    *(void *)&long long v77 = isUniquelyReferenced_nonNull_native;
    while (1)
    {
      uint64_t v11 = v9 - 4;
      if (!v78) {
        break;
      }
      uint64_t v12 = (void *)MEMORY[0x1E01EE240](v9 - 4, isUniquelyReferenced_nonNull_native);
      uint64_t v13 = v9 - 3;
      if (__OFADD__(v11, 1)) {
        goto LABEL_22;
      }
LABEL_11:
      uint64_t v82 = v13;
      uint64_t v14 = v7;
      uint64_t v15 = v12;
      id v16 = objc_msgSend(v12, sel_identifier, v71, v72);
      uint64_t v17 = sub_1DFDFDD20();
      uint64_t v19 = v18;

      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v79 = v8;
      unint64_t v21 = sub_1DEA6D930(v17, v19);
      uint64_t v22 = v8[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        goto LABEL_23;
      }
      char v25 = v20;
      if (v8[3] >= v24)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v8 = v79;
          if (v20) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1DF65A614();
          uint64_t v8 = v79;
          if (v25) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1DF650784(v24, isUniquelyReferenced_nonNull_native);
        unint64_t v26 = sub_1DEA6D930(v17, v19);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_48;
        }
        unint64_t v21 = v26;
        uint64_t v8 = v79;
        if (v25)
        {
LABEL_4:
          uint64_t v10 = v8[7];
          swift_unknownObjectRelease();
          *(void *)(v10 + 8 * v21) = v15;
          goto LABEL_5;
        }
      }
      v8[(v21 >> 6) + 8] |= 1 << v21;
      uint64_t v28 = (uint64_t *)(v8[6] + 16 * v21);
      *uint64_t v28 = v17;
      v28[1] = v19;
      *(void *)(v8[7] + 8 * v21) = v15;
      uint64_t v29 = v8[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_24;
      }
      _OWORD v8[2] = v31;
      swift_bridgeObjectRetain();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v9;
      uint64_t v7 = v14;
      uint64_t isUniquelyReferenced_nonNull_native = v77;
      if (v82 == v14) {
        goto LABEL_27;
      }
    }
    uint64_t v12 = (void *)swift_unknownObjectRetain();
    uint64_t v13 = v9 - 3;
    if (!__OFADD__(v11, 1)) {
      goto LABEL_11;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
LABEL_27:
  uint64_t v32 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = v75;
  uint64_t v33 = v76;
  long long v70[2] = v8;
  v70[3] = v76;
  unint64_t v35 = v74;
  v70[4] = v73;
  uint64_t v36 = sub_1DF195ACC((void (*)(long long *__return_ptr, void *))sub_1DF0531FC, (uint64_t)v70, v75);
  unint64_t v78 = v35;
  sub_1DEA086BC();
  uint64_t v82 = v37;
  uint64_t v38 = swift_allocObject();
  long long v77 = xmmword_1DFE0B750;
  *(_OWORD *)(v38 + 16) = xmmword_1DFE0B750;
  uint64_t v39 = v36[2];
  uint64_t v40 = MEMORY[0x1E4FBB550];
  uint64_t v41 = MEMORY[0x1E4FBB5C8];
  *(void *)(v38 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v38 + 64) = v41;
  *(void *)(v38 + 32) = v39;
  uint64_t v42 = *(void *)(v34 + 16);
  *(void *)(v38 + 96) = v40;
  *(void *)(v38 + 104) = v41;
  *(void *)(v38 + 72) = v42;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_1DF0538F0(v33, (uint64_t)v36);
  swift_bridgeObjectRelease();
  uint64_t v75 = type metadata accessor for SportsTopicClusteringRequest();
  int64_t v44 = *(void *)(v33 + *(int *)(v75 + 108));
  int64_t v45 = sub_1DEC77BBC(v44, v43);
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  unint64_t v51 = v50;
  if ((v50 & 1) == 0) {
    goto LABEL_28;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain_n();
  uint64_t v53 = swift_dynamicCastClass();
  if (!v53)
  {
    swift_unknownObjectRelease();
    uint64_t v53 = MEMORY[0x1E4FBC860];
  }
  uint64_t v54 = *(void *)(v53 + 16);
  swift_release();
  if (__OFSUB__(v51 >> 1, v49))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v54 != (v51 >> 1) - v49)
  {
LABEL_46:
    swift_unknownObjectRelease();
    uint64_t v40 = MEMORY[0x1E4FBB550];
LABEL_28:
    uint64_t v52 = sub_1DEC79D18(v45, v47, v49, v51);
    goto LABEL_35;
  }
  uint64_t v52 = swift_dynamicCastClass();
  uint64_t v40 = MEMORY[0x1E4FBB550];
  if (!v52)
  {
    swift_unknownObjectRelease();
    uint64_t v52 = MEMORY[0x1E4FBC860];
  }
LABEL_35:
  swift_unknownObjectRelease();
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = v77;
  *(void *)&long long v77 = v52;
  uint64_t v56 = *(void *)(v52 + 16);
  *(void *)(v55 + 56) = v40;
  uint64_t v57 = MEMORY[0x1E4FBB5C8];
  *(void *)(v55 + 64) = MEMORY[0x1E4FBB5C8];
  *(void *)(v55 + 72) = v44;
  *(void *)(v55 + 32) = v56;
  *(void *)(v55 + 96) = v40;
  *(void *)(v55 + 104) = v57;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DF05349C(v72, (uint64_t)v8);
  swift_bridgeObjectRelease_n();
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
  uint64_t v58 = (void *)sub_1DFDFE200();
  swift_bridgeObjectRelease();
  id v59 = (id)FCPromoteOneHeadlineIgnoringProminence();

  if (v59)
  {
    unint64_t v60 = sub_1DFDFE220();

    sub_1DFDF8ED0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_1DFDF8EB0();
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_1DFE0B250;
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v63 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v62 + 56) = v40;
    *(void *)(v62 + 64) = MEMORY[0x1E4FBB5C8];
    *(void *)(v62 + 32) = v63;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v64 = v77;
      if (v67) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v64 = v77;
      if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_40:
        swift_bridgeObjectRetain();
        swift_retain();
        unint64_t v65 = v60;
        uint64_t v66 = v61;
LABEL_43:
        id v79 = (void *)v65;
        uint64_t v80 = v66;
        uint64_t v81 = v64;
        sub_1DE9CF674(0, (unint64_t *)&unk_1EBACBEC0);
        swift_allocObject();
        uint64_t v68 = sub_1DFDEDE90();
        swift_release();
        swift_bridgeObjectRelease();
        return v68;
      }
    }
    unint64_t v65 = 0;
    uint64_t v66 = 0;
    goto LABEL_43;
  }
  __break(1u);
LABEL_48:
  uint64_t result = sub_1DFE00000();
  __break(1u);
  return result;
}