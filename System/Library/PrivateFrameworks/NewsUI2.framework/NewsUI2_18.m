uint64_t sub_1DF62BF60(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  v2 = type metadata accessor for ArticleListHistoryFeedGroup();
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1DF62BFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleListHistoryFeedGroup();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for HistoryFeedSectionDescriptor()
{
  uint64_t result = qword_1EBAF0B70;
  if (!qword_1EBAF0B70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF62C084()
{
  uint64_t result = type metadata accessor for ArticleListHistoryFeedGroup();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DF62C0FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ArticleListHistoryFeedGroup();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF62C5B0(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return 7364967;
  }
  sub_1DED3F490((uint64_t)v8, (uint64_t)v6);
  uint64_t v9 = *v6;
  swift_bridgeObjectRetain();
  sub_1DF62C958((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ArticleListHistoryFeedGroup);
  return v9;
}

uint64_t sub_1DF62C268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF62C5B0(v5, (uint64_t)v4);
  uint64_t v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1) {
    sub_1DF62C958((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for HistoryFeedSectionDescriptor);
  }
  uint64_t v7 = *MEMORY[0x1E4F7F478];
  uint64_t v8 = sub_1DFDF7480();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a2, v7, v8);
}

uint64_t sub_1DF62C380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF62C5B0(v5, (uint64_t)v4);
  uint64_t v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6);
  uint64_t v8 = sub_1DFDFA2A0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104);
  if (v7 == 1) {
    return v9(a2, *MEMORY[0x1E4F80688], v8);
  }
  v9(a2, *MEMORY[0x1E4F806A0], v8);
  return sub_1DF62C958((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for HistoryFeedSectionDescriptor);
}

uint64_t sub_1DF62C4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF62C5B0(v5, (uint64_t)v4);
  uint64_t v6 = type metadata accessor for ArticleListHistoryFeedGroup();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6);
  if (result == 1)
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    *(void *)(a2 + 24) = v6;
    *(void *)(a2 + 32) = sub_1DF62C614();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
    return sub_1DED3F490((uint64_t)v4, (uint64_t)boxed_opaque_existential_1);
  }
  return result;
}

uint64_t sub_1DF62C5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HistoryFeedSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DF62C614()
{
  unint64_t result = qword_1EAC26070;
  if (!qword_1EAC26070)
  {
    type metadata accessor for ArticleListHistoryFeedGroup();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC26070);
  }
  return result;
}

uint64_t sub_1DF62C66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleListHistoryFeedGroup();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HistoryFeedSectionDescriptor();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF62C8F4();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1DF62C5B0(a1, (uint64_t)v14);
  sub_1DF62C5B0(a2, v15);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    char v17 = 1;
    int v18 = v16(v15, 1, v4);
    v19 = (uint64_t (*)(void))type metadata accessor for HistoryFeedSectionDescriptor;
    if (v18 == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_1DF62C5B0((uint64_t)v14, (uint64_t)v10);
    if (v16(v15, 1, v4) != 1)
    {
      sub_1DED3F490(v15, (uint64_t)v7);
      char v17 = MEMORY[0x1E01E5780](&v10[*(int *)(v4 + 20)], &v7[*(int *)(v4 + 20)]);
      sub_1DF62C958((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ArticleListHistoryFeedGroup);
      sub_1DF62C958((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ArticleListHistoryFeedGroup);
      v19 = (uint64_t (*)(void))type metadata accessor for HistoryFeedSectionDescriptor;
      goto LABEL_8;
    }
    sub_1DF62C958((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ArticleListHistoryFeedGroup);
  }
  char v17 = 0;
  v19 = (uint64_t (*)(void))sub_1DF62C8F4;
LABEL_8:
  sub_1DF62C958((uint64_t)v14, v19);
  return v17 & 1;
}

void sub_1DF62C8F4()
{
  if (!qword_1EAC2EEE0)
  {
    type metadata accessor for HistoryFeedSectionDescriptor();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC2EEE0);
    }
  }
}

uint64_t sub_1DF62C958(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1DF62C9B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_1DEC1500C();
    uint64_t v8 = v7;
    uint64_t v9 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = sub_1DFDF7010();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      *(uint64_t *)((char *)a1 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
      *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
      *(uint64_t *)((char *)a1 + v8[9]) = *(uint64_t *)((char *)a2 + v8[9]);
      uint64_t v12 = *(void (**)(uint64_t *, void, uint64_t, int *))(v9 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(a1, 0, 2, v8);
    }
  }
  return a1;
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor.Data()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DF62CB70(uint64_t a1)
{
  sub_1DEC1500C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_1DFDF7010();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1DF62CC48(char *a1, char *a2, uint64_t a3)
{
  sub_1DEC1500C();
  int v7 = v6;
  uint64_t v8 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1DFDF7010();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
    *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    uint64_t v10 = *(void (**)(char *, void, uint64_t, int *))(v8 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_1DF62CDAC(char *a1, char *a2, uint64_t a3)
{
  sub_1DEC1500C();
  int v7 = v6;
  uint64_t v8 = *((void *)v6 - 1);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, int *))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = sub_1DFDF7010();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(a1, a2, v15);
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DF62E0A4((uint64_t)a1, (uint64_t (*)(void))sub_1DEC1500C);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
  *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
  *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  uint64_t v13 = *(void (**)(char *, void, uint64_t, int *))(v8 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(a1, 0, 2, v7);
  return a1;
}

char *sub_1DF62CFEC(char *a1, char *a2, uint64_t a3)
{
  sub_1DEC1500C();
  int v7 = v6;
  uint64_t v8 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1DFDF7010();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
    *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_1DF62D13C(char *a1, char *a2, uint64_t a3)
{
  sub_1DEC1500C();
  int v7 = v6;
  uint64_t v8 = *((void *)v6 - 1);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, int *))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_1DFDF7010();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(a1, a2, v14);
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DF62E0A4((uint64_t)a1, (uint64_t (*)(void))sub_1DEC1500C);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
  *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
  *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_1DF62D350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF62D364);
}

uint64_t sub_1DF62D364(uint64_t a1, uint64_t a2)
{
  sub_1DEC1500C();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DF62D3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF62D3E4);
}

uint64_t sub_1DF62D3E4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1DEC1500C();
  int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1DF62D468(uint64_t a1)
{
  sub_1DEC1500C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_1DF62D4D0(uint64_t a1, uint64_t a2)
{
  sub_1DEC1500C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAF17E0);
}

void sub_1DF62D560()
{
  sub_1DEC1500C();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t sub_1DF62D5D8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DF62D734);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DF62D748(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              void *v19 = v20;
            }
            else
            {
              int v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DF62D940);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1DF62D968()
{
  sub_1DEC1500C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SavedFeedLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned int v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF62E03C(v0, (uint64_t)v8, type metadata accessor for SavedFeedLayoutSectionDescriptor);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2);
  uint64_t v10 = 0;
  if (!v9)
  {
    sub_1DEC15064((uint64_t)v8, (uint64_t)v5);
    uint64_t v11 = sub_1DF62DB6C(*(void *)&v5[*(int *)(v2 + 28)], type metadata accessor for SavedFeedLayoutSectionDescriptor.Header, type metadata accessor for SavedFeedLayoutSectionDescriptor.Header, type metadata accessor for SavedFeedLayoutSectionDescriptor.Header);
    uint64_t v12 = sub_1DF62DB6C(*(void *)&v5[*(int *)(v2 + 32)], type metadata accessor for SavedFeedLayoutSectionDescriptor.Footer, type metadata accessor for SavedFeedLayoutSectionDescriptor.Footer, type metadata accessor for SavedFeedLayoutSectionDescriptor.Footer);
    uint64_t v15 = v11;
    sub_1DEA91CE8(v12);
    uint64_t v10 = v15;
    sub_1DF62E0A4((uint64_t)v5, (uint64_t (*)(void))sub_1DEC1500C);
  }
  return v10;
}

uint64_t sub_1DF62DB6C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  v30 = a3;
  v31 = a4;
  uint64_t v5 = a2(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_1DFDF94D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1DEA928C8(0, v15, 0);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v18 = *(void *)(v6 + 72);
    v27 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v28 = v18;
    do
    {
      v19 = v30;
      sub_1DF62E03C(v17, (uint64_t)v10, v30);
      uint64_t v20 = v29;
      sub_1DF62E03C((uint64_t)v10, v29, v19);
      (*v27)(v14, v20, v11);
      sub_1DF62E0A4((uint64_t)v10, v31);
      uint64_t v21 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA928C8(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v35;
      }
      unint64_t v23 = *(void *)(v21 + 16);
      unint64_t v22 = *(void *)(v21 + 24);
      if (v23 >= v22 >> 1) {
        sub_1DEA928C8(v22 > 1, v23 + 1, 1);
      }
      uint64_t v33 = v11;
      uint64_t v34 = sub_1DF62DFD4(&qword_1EBABA298, MEMORY[0x1E4F80118]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v32);
      (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(boxed_opaque_existential_1, v14, v11);
      uint64_t v25 = v35;
      *(void *)(v35 + 16) = v23 + 1;
      sub_1DE942EC4(&v32, v25 + 40 * v23 + 32);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v17 += v28;
      --v15;
    }
    while (v15);
    return v35;
  }
  return result;
}

uint64_t sub_1DF62DE6C(uint64_t a1)
{
  uint64_t v2 = sub_1DF62DFD4(&qword_1EAC2EEE8, (void (*)(uint64_t))type metadata accessor for SavedFeedLayoutSectionDescriptor);
  return MEMORY[0x1F4162DE8](a1, v2);
}

uint64_t sub_1DF62DED8(uint64_t a1)
{
  uint64_t v2 = sub_1DF62DFD4(&qword_1EBAF17D8, (void (*)(uint64_t))type metadata accessor for SavedFeedLayoutSectionDescriptor);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1DF62DF44()
{
  return sub_1DF62DFD4(&qword_1EBAF17D0, (void (*)(uint64_t))type metadata accessor for SavedFeedLayoutSectionDescriptor);
}

uint64_t sub_1DF62DF8C()
{
  return sub_1DF62DFD4(&qword_1EBAF17D8, (void (*)(uint64_t))type metadata accessor for SavedFeedLayoutSectionDescriptor);
}

uint64_t sub_1DF62DFD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor.Footer(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC2EF00);
}

uint64_t sub_1DF62E03C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF62E0A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor.Header(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC2EF10);
}

uint64_t type metadata accessor for SavedFeedLayoutSectionDescriptor.Decoration(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC2EEF0);
}

uint64_t *sub_1DF62E144(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v11 = (void *)a2[6];
    uint64_t v10 = a2[7];
    a1[6] = (uint64_t)v11;
    a1[7] = v10;
    a1[8] = a2[8];
    sub_1DEB9C0B8();
    uint64_t v13 = *(int *)(v12 + 48);
    uint64_t v14 = (char *)a1 + v13;
    int64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1DFDF4140();
    v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = v11;
    swift_bridgeObjectRetain();
    v40(v14, v15, v16);
    uint64_t v18 = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
    uint64_t v19 = v18[5];
    uint64_t v20 = &v14[v19];
    uint64_t v21 = &v15[v19];
    long long v22 = *((_OWORD *)v21 + 1);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v22;
    uint64_t v23 = v18[6];
    v24 = &v14[v23];
    uint64_t v25 = &v15[v23];
    long long v26 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v26;
    uint64_t v27 = v18[7];
    uint64_t v28 = &v14[v27];
    uint64_t v29 = &v15[v27];
    long long v30 = *((_OWORD *)v29 + 1);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v30;
    uint64_t v31 = v18[8];
    long long v32 = &v14[v31];
    uint64_t v33 = &v15[v31];
    v32[32] = v33[32];
    long long v34 = *((_OWORD *)v33 + 1);
    *(_OWORD *)long long v32 = *(_OWORD *)v33;
    *((_OWORD *)v32 + 1) = v34;
    uint64_t v35 = v18[9];
    v36 = &v14[v35];
    v37 = &v15[v35];
    v36[32] = v37[32];
    long long v38 = *((_OWORD *)v37 + 1);
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *((_OWORD *)v36 + 1) = v38;
    v14[v18[10]] = v15[v18[10]];
    v14[v18[11]] = v15[v18[11]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DF62F440(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1DEB9C0B8();
      uint64_t v4 = a1 + *(int *)(v3 + 48);
      uint64_t v5 = sub_1DFDF4140();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      uint64_t result = v6(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1DF62F550(void *a1, void *a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v8 = (void *)a2[6];
  uint64_t v7 = a2[7];
  a1[6] = v8;
  a1[7] = v7;
  a1[8] = a2[8];
  sub_1DEB9C0B8();
  uint64_t v10 = *(int *)(v9 + 48);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1DFDF4140();
  v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = v8;
  swift_bridgeObjectRetain();
  v37(v11, v12, v13);
  int64_t v15 = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
  uint64_t v16 = v15[5];
  id v17 = &v11[v16];
  uint64_t v18 = &v12[v16];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)id v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  uint64_t v20 = v15[6];
  uint64_t v21 = &v11[v20];
  long long v22 = &v12[v20];
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  uint64_t v24 = v15[7];
  uint64_t v25 = &v11[v24];
  long long v26 = &v12[v24];
  long long v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  uint64_t v28 = v15[8];
  uint64_t v29 = &v11[v28];
  long long v30 = &v12[v28];
  v29[32] = v30[32];
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  uint64_t v32 = v15[9];
  uint64_t v33 = &v11[v32];
  long long v34 = &v12[v32];
  v33[32] = v34[32];
  long long v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  v11[v15[10]] = v12[v15[10]];
  v11[v15[11]] = v12[v15[11]];
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DF62F764(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DF62FA78((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v4 = (void *)a2[6];
        a1[6] = v4;
        a1[7] = a2[7];
        a1[8] = a2[8];
        sub_1DEB9C0B8();
        uint64_t v6 = *(int *)(v5 + 48);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_1DFDF4140();
        v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v10 = v4;
        swift_bridgeObjectRetain();
        v40(v7, v8, v9);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        long long v35 = (void *)a2[6];
        a1[6] = v35;
        a1[7] = a2[7];
        a1[8] = a2[8];
        sub_1DEB9C0B8();
        uint64_t v37 = *(int *)(v36 + 48);
        uint64_t v7 = (char *)a1 + v37;
        uint64_t v8 = (char *)a2 + v37;
        uint64_t v38 = sub_1DFDF4140();
        v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v39 = v35;
        swift_bridgeObjectRetain();
        v41(v7, v8, v38);
        break;
    }
    uint64_t v11 = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &v7[v12];
    id v14 = &v8[v12];
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    uint64_t v16 = v11[6];
    id v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    long long v19 = *((_OWORD *)v18 + 1);
    *(_OWORD *)id v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v19;
    uint64_t v20 = v11[7];
    uint64_t v21 = &v7[v20];
    long long v22 = &v8[v20];
    long long v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
    uint64_t v24 = v11[8];
    uint64_t v25 = &v7[v24];
    long long v26 = &v8[v24];
    char v27 = v26[32];
    long long v28 = *((_OWORD *)v26 + 1);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v28;
    v25[32] = v27;
    uint64_t v29 = v11[9];
    long long v30 = &v7[v29];
    long long v31 = &v8[v29];
    long long v33 = *(_OWORD *)v31;
    long long v32 = *((_OWORD *)v31 + 1);
    v30[32] = v31[32];
    *(_OWORD *)long long v30 = v33;
    *((_OWORD *)v30 + 1) = v32;
    v7[v11[10]] = v8[v11[10]];
    v7[v11[11]] = v8[v11[11]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DF62FA78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FollowingSectionLayoutDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF62FAD4(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  sub_1DEB9C0B8();
  uint64_t v7 = *(int *)(v6 + 48);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF4140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (_OWORD *)(v8 + v12);
  id v14 = (_OWORD *)(v9 + v12);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v11[6];
  id v17 = (_OWORD *)(v8 + v16);
  uint64_t v18 = (_OWORD *)(v9 + v16);
  long long v19 = v18[1];
  *id v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v11[7];
  uint64_t v21 = (_OWORD *)(v8 + v20);
  long long v22 = (_OWORD *)(v9 + v20);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v11[8];
  uint64_t v25 = v8 + v24;
  uint64_t v26 = v9 + v24;
  *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
  long long v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  uint64_t v28 = v11[9];
  uint64_t v29 = v8 + v28;
  uint64_t v30 = v9 + v28;
  *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
  long long v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(unsigned char *)(v8 + v11[10]) = *(unsigned char *)(v9 + v11[10]);
  *(unsigned char *)(v8 + v11[11]) = *(unsigned char *)(v9 + v11[11]);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DF62FC90(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DF62FA78(a1);
    swift_getEnumCaseMultiPayload();
    long long v4 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v4;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    sub_1DEB9C0B8();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = sub_1DFDF4140();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    uint64_t v11 = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = (_OWORD *)(v8 + v12);
    id v14 = (_OWORD *)(v9 + v12);
    long long v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v11[6];
    id v17 = (_OWORD *)(v8 + v16);
    uint64_t v18 = (_OWORD *)(v9 + v16);
    long long v19 = v18[1];
    *id v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v11[7];
    uint64_t v21 = (_OWORD *)(v8 + v20);
    long long v22 = (_OWORD *)(v9 + v20);
    long long v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = v11[8];
    uint64_t v25 = v8 + v24;
    uint64_t v26 = v9 + v24;
    *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
    long long v27 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v27;
    uint64_t v28 = v11[9];
    uint64_t v29 = v8 + v28;
    uint64_t v30 = v9 + v28;
    *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
    long long v31 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v31;
    *(unsigned char *)(v8 + v11[10]) = *(unsigned char *)(v9 + v11[10]);
    *(unsigned char *)(v8 + v11[11]) = *(unsigned char *)(v9 + v11[11]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DF62FE5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FollowingSectionLayoutDescriptor();
  MEMORY[0x1F4188790](v2 - 8);
  long long v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TitleViewLayoutAttributes(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF63011C(v1, (uint64_t)v4);
  uint64_t v8 = (void *)*((void *)v4 + 6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1DEB9C0B8();
  sub_1DEC0BD34((uint64_t)&v4[*(int *)(v9 + 48)], (uint64_t)v7);
  sub_1DEA92AD4();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DFE0B250;
  *(void *)(v10 + 56) = v5;
  *(void *)(v10 + 64) = sub_1DE937344((unint64_t *)&qword_1EBAF04A8, (void (*)(uint64_t))type metadata accessor for TitleViewLayoutAttributes);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 32));
  sub_1DEC0BD34((uint64_t)v7, (uint64_t)boxed_opaque_existential_1);
  return v10;
}

uint64_t sub_1DF62FFFC(uint64_t a1)
{
  uint64_t v2 = sub_1DE937344(&qword_1EAC2EF20, (void (*)(uint64_t))type metadata accessor for FollowingSectionLayoutDescriptor);
  return MEMORY[0x1F4162DE8](a1, v2);
}

uint64_t sub_1DF630068(uint64_t a1)
{
  uint64_t v2 = sub_1DE937344(&qword_1EBAC7BF8, (void (*)(uint64_t))type metadata accessor for FollowingSectionLayoutDescriptor);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1DF6300D4()
{
  return sub_1DE937344(&qword_1EBAC7BF8, (void (*)(uint64_t))type metadata accessor for FollowingSectionLayoutDescriptor);
}

uint64_t sub_1DF63011C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FollowingSectionLayoutDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF630180()
{
  uint64_t v1 = sub_1DFDE7600();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), *(void *)(v0 + 112));
  sub_1DFDEB140();
  sub_1DFDF1810();
  sub_1DF630348();
  sub_1DFDE8800();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v7, v1);
  sub_1DFDF1810();
  sub_1DFDF1820();
  sub_1DFDE74C0();
  v8(v5, v1);
  sub_1DFDE8820();
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v1);
}

uint64_t type metadata accessor for WebEmbedEventHandler()
{
  return self;
}

unint64_t sub_1DF630348()
{
  unint64_t result = qword_1EAC2EF28;
  if (!qword_1EAC2EF28)
  {
    sub_1DFDEB140();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF28);
  }
  return result;
}

uint64_t sub_1DF6303A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v61 = a2;
  unint64_t v62 = a3;
  sub_1DE9371E8();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  MEMORY[0x1F4188790](v7);
  v58 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDE7220();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x1F4188790](v9);
  v50 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF631F08(0, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
  MEMORY[0x1F4188790](v11 - 8);
  v57 = (void **)((char *)&v49 - v12);
  uint64_t v13 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v13);
  long long v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a4;
  uint64_t v55 = a4[1];
  uint64_t v56 = v16;
  uint64_t v17 = a4[2];
  uint64_t v53 = a4[3];
  uint64_t v54 = v17;
  __swift_project_boxed_opaque_existential_1(v5 + 11, v5[14]);
  sub_1DF20408C();
  uint64_t v18 = v5[5];
  uint64_t ObjectType = swift_getObjectType();
  sub_1DEB0B564(0);
  uint64_t v20 = sub_1DFDF0B10();
  (*(void (**)(uint64_t))(v18 + 144))(v20);
  swift_bridgeObjectRelease();
  sub_1DFDF0B50();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v40 = (void *)*((void *)v15 + 3);
      swift_bridgeObjectRelease();

      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      return sub_1DEDBD438();
    case 2u:
      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      sub_1DEDBD418();
      long long v22 = type metadata accessor for FollowingAudioModel;
      goto LABEL_22;
    case 3u:
      uint64_t v23 = *(void *)v15;
      uint64_t v24 = *(void *)(*(void *)v15 + 16);
      uint64_t v25 = *(void *)(v24 + 16);
      uint64_t v26 = *(void *)(v24 + 24);
      long long v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 128);
      swift_bridgeObjectRetain();
      v27(v25, v26, ObjectType, v18);
      swift_bridgeObjectRelease();
      uint64_t v28 = v57;
      sub_1DF631F5C(*(void *)(v23 + 16) + OBJC_IVAR____TtC7NewsUI214EditorialModel_route, (uint64_t)v57, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
      uint64_t v29 = type metadata accessor for EditorialModelRoute(0);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29) != 1)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            v44 = *v28;
            __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
            id v45 = objc_msgSend(v44, sel_identifier);
            sub_1DFDFDD20();

            sub_1DEDBB0B8();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 2u:
            __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
            sub_1DEDBB0B8();
            swift_bridgeObjectRelease();
            break;
          case 3u:
            v47 = v50;
            uint64_t v46 = v51;
            uint64_t v48 = v52;
            (*(void (**)(char *, void **, uint64_t))(v51 + 32))(v50, v28, v52);
            (*(void (**)(char *, uint64_t, uint64_t))(v18 + 120))(v47, ObjectType, v18);
            (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
            break;
          default:
            __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
            uint64_t v30 = swift_retain();
            sub_1DEDBB594(v30, v61, v62, 0);
            swift_release();
            swift_release();
            break;
        }
      }
      return swift_release();
    case 4u:
      long long v31 = (void *)*((void *)v15 + 3);
      swift_bridgeObjectRelease();

      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      sub_1DEDBD40C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 136))(ObjectType, v18);
    case 5u:
      v41 = (void *)*((void *)v15 + 2);
      swift_bridgeObjectRelease();

      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      return sub_1DEDBD420();
    case 6u:
    case 7u:
      if (*(unsigned char *)(*(void *)v15 + 32) == 1)
      {
        __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
        uint64_t v21 = swift_retain();
        sub_1DEDBB594(v21, v61, v62, 0);
        swift_release();
      }
      return swift_release();
    case 8u:
      swift_release();
      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      return sub_1DEDBC89C();
    case 9u:
      swift_release();
      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      return sub_1DEDBCAD8();
    case 0xAu:
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 72))(ObjectType, v18);
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      long long v35 = v58;
      uint64_t v34 = v59;
      uint64_t v36 = v60;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v58, &v15[*(int *)(v33 + 48)], v60);
      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      uint64_t v37 = sub_1DFDED270();
      sub_1DEDBBF20(v37);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    case 0xCu:
      swift_release();
      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      return sub_1DEDBCAE4();
    case 0xDu:
      swift_release();
      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      return sub_1DEDBCCEC();
    case 0xEu:
      uint64_t v38 = (void *)*((void *)v15 + 3);
      swift_bridgeObjectRelease();

      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      return sub_1DEDBD42C();
    case 0xFu:
      return swift_release();
    case 0x10u:
      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      sub_1DEDBC504(v62);
      long long v22 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_22;
    case 0x11u:
      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      uint64_t v42 = sub_1DFDF0B10();
      sub_1DEDBC160(v62, v42, v43);
      swift_bridgeObjectRelease();
      long long v22 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_22:
      uint64_t result = sub_1DF632A14((uint64_t)v15, (uint64_t (*)(void))v22);
      break;
    default:
      id v39 = (void *)*((void *)v15 + 2);
      swift_bridgeObjectRelease();

      __swift_project_boxed_opaque_existential_1(v5 + 6, v5[9]);
      v63[0] = v56;
      v63[1] = v55;
      v63[2] = v54;
      v63[3] = v53;
      uint64_t result = sub_1DEDBD150(v63);
      break;
  }
  return result;
}

void *sub_1DF630C0C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  sub_1DF631F08(0, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v31 - v8);
  uint64_t v10 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEB0B564(0);
  sub_1DFDF0B50();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v23 = (void *)v12[3];
      goto LABEL_14;
    case 2u:
      long long v15 = type metadata accessor for FollowingAudioModel;
      goto LABEL_18;
    case 3u:
      sub_1DF631F5C(*(void *)(*v12 + 16) + OBJC_IVAR____TtC7NewsUI214EditorialModel_route, (uint64_t)v9, qword_1EBAEE408, (void (*)(uint64_t))type metadata accessor for EditorialModelRoute);
      uint64_t v16 = type metadata accessor for EditorialModelRoute(0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v9, 1, v16) == 1) {
        goto LABEL_2;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v29 = (void *)*v9;
          __swift_project_boxed_opaque_existential_1((void *)(v3 + 48), *(void *)(v3 + 72));
          id v30 = objc_msgSend(v29, sel_identifier);
          sub_1DFDFDD20();

          uint64_t v14 = (uint64_t)sub_1DEDBDB08();
          swift_unknownObjectRelease();
          break;
        case 2u:
          __swift_project_boxed_opaque_existential_1((void *)(v3 + 48), *(void *)(v3 + 72));
          uint64_t v14 = (uint64_t)sub_1DEDBDB08();
          break;
        case 3u:
          swift_release();
          uint64_t v25 = type metadata accessor for EditorialModelRoute;
          uint64_t v26 = (uint64_t)v9;
          goto LABEL_19;
        default:
          uint64_t v28 = *v9;
          __swift_project_boxed_opaque_existential_1((void *)(v3 + 48), *(void *)(v3 + 72));
          uint64_t v14 = sub_1DEDBCCF8(v28, a2, a3);
          swift_release();
          goto LABEL_4;
      }
      swift_bridgeObjectRelease();
LABEL_4:
      swift_release();
      return (void *)v14;
    case 4u:
      uint64_t v17 = (void *)v12[3];
      swift_bridgeObjectRelease();

      __swift_project_boxed_opaque_existential_1((void *)(v4 + 48), *(void *)(v4 + 72));
      return sub_1DEDBD920();
    case 5u:
      uint64_t v24 = (void *)v12[2];
      swift_bridgeObjectRelease();

      __swift_project_boxed_opaque_existential_1((void *)(v4 + 48), *(void *)(v4 + 72));
      return sub_1DEDBDAFC();
    case 6u:
    case 7u:
      uint64_t v13 = *v12;
      __swift_project_boxed_opaque_existential_1((void *)(v3 + 48), *(void *)(v3 + 72));
      uint64_t v14 = sub_1DEDBCCF8(v13, a2, a3);
      goto LABEL_4;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
LABEL_2:
      swift_release();
      return 0;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v20 = (char *)v12 + *(int *)(v19 + 48);
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      return 0;
    case 0xEu:
      long long v22 = (void *)v12[3];
      swift_bridgeObjectRelease();

      __swift_project_boxed_opaque_existential_1((void *)(v4 + 48), *(void *)(v4 + 72));
      return sub_1DEDBD914();
    case 0x10u:
      long long v15 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_18;
    case 0x11u:
      long long v15 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_18:
      uint64_t v25 = (uint64_t (*)(uint64_t))v15;
      uint64_t v26 = (uint64_t)v12;
LABEL_19:
      sub_1DF632A14(v26, v25);
      break;
    default:
      uint64_t v23 = (void *)v12[2];
LABEL_14:
      swift_bridgeObjectRelease();

      break;
  }
  return 0;
}

uint64_t sub_1DF6310A4()
{
  uint64_t v1 = sub_1DFDEA1F0();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDEC470();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DFDEC450();
  uint64_t v8 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), *(void *)(v0 + 112));
  uint64_t v12 = *v11;
  uint64_t v15 = *(void *)(*v11 + 16);
  sub_1DFDF4250();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F7CF58], v4);
  sub_1DF2015B0(v12, (uint64_t)v3);
  sub_1DFDEC440();
  sub_1DE93BF54((unint64_t *)&qword_1EBAA7370, MEMORY[0x1E4F7CF00]);
  uint64_t v13 = v16;
  sub_1DFDE8880();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v13);
}

uint64_t type metadata accessor for FollowingEventHandler()
{
  return self;
}

uint64_t sub_1DF63133C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DF631FC8();
  sub_1DFDF4F90();
  swift_allocObject();
  swift_retain();
  sub_1DFDF4F10();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = &off_1F3AA9830;
  v5[4] = a3;
  swift_retain();
  swift_retain();
  sub_1DFDF4F30();
  swift_release();
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = &off_1F3AA9830;
  swift_retain();
  sub_1DFDF4F70();
  swift_release();
  swift_release();
  sub_1DFDF4F20();
  return swift_release();
}

uint64_t sub_1DF63149C(uint64_t a1, uint64_t a2)
{
  sub_1DF631F08(0, &qword_1EBAA6E10, MEMORY[0x1E4F27DE8]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t result = MEMORY[0x1E01EFB70](a2 + 16);
  if (result)
  {
    uint64_t v8 = result;
    swift_getObjectType();
    sub_1DF631F5C(a1, (uint64_t)v6, &qword_1EBAA6E10, MEMORY[0x1E4F27DE8]);
    sub_1DFDF4B30();
    uint64_t v9 = v8 + OBJC_IVAR____TtC7NewsUI223FollowingViewController_previousSelectedIndexPath;
    swift_beginAccess();
    sub_1DF396840(a1, v9);
    swift_endAccess();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DF6315D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E01EFB70](a3 + 16);
  if (result)
  {
    sub_1DF63133C(a3, a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DF631650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DF631700(a1, a2, a3, a4, a5, (uint64_t)&type metadata for AlertWebSubscriptionRemoval, (void (*)(void))sub_1DF63206C);
}

uint64_t sub_1DF6316A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DF631700(a1, a2, a3, a4, a5, (uint64_t)&type metadata for AlertTagRemoval, (void (*)(void))sub_1DF6320C4);
}

uint64_t sub_1DF631700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  uint64_t result = MEMORY[0x1E01EFB70](a3 + 16);
  if (result)
  {
    a7();
    sub_1DFDF4F90();
    swift_allocObject();
    swift_retain();
    sub_1DFDF4F10();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a3;
    v11[3] = &off_1F3AA9830;
    v11[4] = a2;
    swift_retain();
    swift_retain();
    sub_1DFDF4F30();
    swift_release();
    swift_release();
    sub_1DFDF4F20();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF631844(uint64_t a1, uint64_t a2)
{
  return sub_1DEDBBC00(a1);
}

void sub_1DF63187C(uint64_t a1)
{
  uint64_t v1 = __swift_project_boxed_opaque_existential_1((void *)(a1 + 48), *(void *)(a1 + 72));
  uint64_t v2 = (void *)MEMORY[0x1E01EFB70](*v1 + 80);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_presentedViewController);

    if (v4)
    {
      self;
      if (swift_dynamicCastObjCClass()) {
        objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, 0);
      }
    }
  }
}

uint64_t sub_1DF631940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, uint64_t))(a3 + 32))(0, 0, a2);
}

uint64_t sub_1DF631984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EngagementDismissal();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 88), *(void *)(a2 + 112));
  sub_1DF63211C(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for EngagementDismissal);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1DF6328A0((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for EngagementDismissal);
  sub_1DFDE87E0();
  return swift_release();
}

uint64_t sub_1DF631AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EngagementPresentation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDE7600();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v19 - v13;
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 88), *(void *)(a2 + 112));
  sub_1DFDE75F0();
  sub_1DF63211C(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EngagementPresentation);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v16 = (v6 + *(unsigned __int8 *)(v9 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1DF6328A0((uint64_t)v7, v17 + v15, (uint64_t (*)(void))type metadata accessor for EngagementPresentation);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, v12, v8);
  sub_1DFDE87E0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1DF631D28(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for EngagementAction();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  __swift_project_boxed_opaque_existential_1(a2 + 11, a2[14]);
  sub_1DF63211C(a1, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for EngagementAction);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1DF6328A0((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for EngagementAction);
  sub_1DFDE87E0();
  swift_release();
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a2 + 6, a2[9]);
  __swift_project_boxed_opaque_existential_1((void *)(*v9 + 16), *(void *)(*v9 + 40));
  sub_1DF6329BC();
  uint64_t result = sub_1DFDECCC0();
  if (v12)
  {
    sub_1DE942EC4(&v11, (uint64_t)v13);
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    sub_1DFDF1900();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DF631F08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DF631F5C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DF631F08(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1DF631FC8()
{
  unint64_t result = qword_1EAC2EF30;
  if (!qword_1EAC2EF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF30);
  }
  return result;
}

uint64_t sub_1DF632020(uint64_t a1)
{
  return sub_1DFACE934(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DF63202C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF632064(uint64_t a1)
{
  return sub_1DFACE938(a1, *(void *)(v1 + 16));
}

unint64_t sub_1DF63206C()
{
  unint64_t result = qword_1EAC2EF38;
  if (!qword_1EAC2EF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF38);
  }
  return result;
}

unint64_t sub_1DF6320C4()
{
  unint64_t result = qword_1EAC2EF40;
  if (!qword_1EAC2EF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF40);
  }
  return result;
}

uint64_t sub_1DF63211C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF632184()
{
  uint64_t v1 = (int *)(type metadata accessor for EngagementPresentation() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v13 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = sub_1DFDE7600();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = sub_1DFDEE390();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v2, v6);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v2 + v1[8];
  uint64_t v8 = sub_1DFDEE610();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  unint64_t v9 = v0 + v2 + v1[10];
  uint64_t v10 = sub_1DFDEEA70();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v13 + v5) & ~v5), v3);
  return swift_deallocObject();
}

uint64_t sub_1DF6323E0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for EngagementPresentation() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1DFDE7600() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_1DF2035B8(a1, v1 + v4, v7);
}

uint64_t sub_1DF6324B4()
{
  uint64_t v1 = (int *)(type metadata accessor for EngagementDismissal() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = sub_1DFDEE390();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = v2 + v1[8];
  uint64_t v5 = sub_1DFDEE610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v2 + v1[10];
  uint64_t v7 = sub_1DFDEEA70();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return swift_deallocObject();
}

uint64_t sub_1DF632674(uint64_t a1)
{
  return sub_1DF632934(a1, (uint64_t (*)(void))type metadata accessor for EngagementDismissal, sub_1DF202D80);
}

uint64_t sub_1DF6326A0()
{
  uint64_t v1 = (int *)(type metadata accessor for EngagementAction() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = sub_1DFDEE390();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = v2 + v1[8];
  uint64_t v5 = sub_1DFDE7220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v2 + v1[9];
  uint64_t v7 = sub_1DFDEE610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v1[11];
  uint64_t v9 = sub_1DFDEEA70();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  return swift_deallocObject();
}

uint64_t sub_1DF6328A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF632908(uint64_t a1)
{
  return sub_1DF632934(a1, (uint64_t (*)(void))type metadata accessor for EngagementAction, sub_1DF202390);
}

uint64_t sub_1DF632934(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

unint64_t sub_1DF6329BC()
{
  unint64_t result = qword_1EBAA7DE0;
  if (!qword_1EBAA7DE0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAA7DE0);
  }
  return result;
}

uint64_t sub_1DF632A14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1DF632A74(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    uint64_t v26 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v26;
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1DFDF8C20();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12((char *)a1 + a3[6], (char *)a2 + a3[6], v11);
  uint64_t v13 = a3[8];
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
  uint64_t v14 = a3[9];
  unint64_t v15 = (char *)a1 + v14;
  unint64_t v16 = (char *)a2 + v14;
  type metadata accessor for FeedPaywallModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *unint64_t v15 = *v16;
  v312 = v15;
  v313 = v16;
  v308 = a1;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v19 = v18[5];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = &v16[v19];
    uint64_t v22 = sub_1DFDE7220();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *(void *)&v15[v18[6]] = *(void *)&v16[v18[6]];
    *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
    *(void *)&v15[v18[8]] = *(void *)&v16[v18[8]];
    uint64_t v56 = v18[9];
    v57 = *(void **)&v16[v56];
    *(void *)&v15[v56] = v57;
    uint64_t v58 = v18[10];
    uint64_t v59 = *(void **)&v16[v58];
    *(void *)&v15[v58] = v59;
    uint64_t v60 = v18[11];
    uint64_t v61 = *(void **)&v16[v60];
    *(void *)((char *)v312 + v60) = v61;
    uint64_t v62 = v18[12];
    v63 = *(void **)&v16[v62];
    *(void *)((char *)v312 + v62) = v63;
    uint64_t v64 = v18[13];
    v65 = *(void **)&v16[v64];
    *(void *)((char *)v312 + v64) = v65;
    uint64_t v66 = v18[14];
    v286 = *(void **)&v16[v66];
    *(void *)((char *)v312 + v66) = v286;
    uint64_t v67 = v18[15];
    v291 = *(void **)&v16[v67];
    *(void *)((char *)v312 + v67) = v291;
    uint64_t v68 = v18[16];
    v297 = *(void **)&v16[v68];
    *(void *)((char *)v312 + v68) = v297;
    uint64_t v69 = v18[17];
    v303 = *(void **)&v16[v69];
    *(void *)((char *)v312 + v69) = v303;
    uint64_t v70 = v18[18];
    v310 = *(void **)&v16[v70];
    *(void *)((char *)v312 + v70) = v310;
    uint64_t v71 = v18[19];
    v72 = (void *)((char *)v312 + v71);
    v73 = &v16[v71];
    uint64_t v281 = *((void *)v73 + 1);
    void *v72 = *(void *)v73;
    v72[1] = v281;
    uint64_t v74 = v18[20];
    v75 = (void *)((char *)v312 + v74);
    v76 = &v16[v74];
    uint64_t v77 = *((void *)v76 + 1);
    void *v75 = *(void *)v76;
    v75[1] = v77;
    uint64_t v78 = v18[21];
    v79 = (void *)((char *)v312 + v78);
    v80 = &v16[v78];
    uint64_t v81 = *((void *)v80 + 1);
    void *v79 = *(void *)v80;
    v79[1] = v81;
    uint64_t v82 = v18[22];
    v278 = (char *)v312 + v82;
    v275 = &v16[v82];
    uint64_t v83 = sub_1DFDEF360();
    v272 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
    id v84 = v57;
    id v85 = v59;
    id v86 = v61;
    v44 = v312;
    id v87 = v63;
    v40 = v16;
    id v88 = v65;
    id v89 = v286;
    id v90 = v291;
    id v91 = v297;
    id v92 = v303;
    id v93 = v310;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v272(v278, v275, v83);
    uint64_t v94 = v18[23];
    v95 = (void *)((char *)v312 + v94);
    v96 = &v16[v94];
    uint64_t v97 = *((void *)v96 + 1);
    void *v95 = *(void *)v96;
    v95[1] = v97;
    uint64_t v98 = v18[24];
    v50 = (char *)v312 + v98;
    uint64_t v51 = &v16[v98];
    uint64_t v52 = sub_1DFDEF130();
    uint64_t v53 = *(void *)(v52 - 8);
    v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    swift_bridgeObjectRetain();
    if (!v99(v51, 1, v52)) {
      goto LABEL_10;
    }
LABEL_7:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_11;
  }
  long long v27 = (void *)*((void *)v16 + 1);
  uint64_t v28 = (void *)*((void *)v313 + 2);
  *((void *)v15 + 1) = v27;
  *((void *)v15 + 2) = v28;
  uint64_t v29 = (void *)*((void *)v313 + 3);
  id v30 = (void *)*((void *)v313 + 4);
  *((void *)v15 + 3) = v29;
  *((void *)v15 + 4) = v30;
  *(_OWORD *)(v15 + 40) = *(_OWORD *)(v313 + 40);
  uint64_t v31 = (void *)*((void *)v313 + 8);
  v312[7] = *((void *)v313 + 7);
  v312[8] = v31;
  uint64_t v32 = *((void *)v313 + 10);
  v312[9] = *((void *)v313 + 9);
  v312[10] = v32;
  uint64_t v33 = *((void *)v313 + 12);
  v312[11] = *((void *)v313 + 11);
  v312[12] = v33;
  uint64_t v34 = *((void *)v313 + 14);
  v312[13] = *((void *)v313 + 13);
  v312[14] = v34;
  long long v35 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v36 = v35[16];
  v309 = (char *)v312 + v36;
  v302 = &v313[v36];
  uint64_t v37 = sub_1DFDEF360();
  v296 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
  id v38 = v27;
  id v39 = v28;
  v40 = v313;
  id v41 = v29;
  id v42 = v30;
  id v43 = v31;
  v44 = v312;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v296(v309, v302, v37);
  uint64_t v45 = v35[17];
  uint64_t v46 = (void *)((char *)v312 + v45);
  v47 = &v313[v45];
  uint64_t v48 = *((void *)v47 + 1);
  *uint64_t v46 = *(void *)v47;
  v46[1] = v48;
  uint64_t v49 = v35[18];
  v50 = (char *)v312 + v49;
  uint64_t v51 = &v313[v49];
  uint64_t v52 = sub_1DFDEF130();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  swift_bridgeObjectRetain();
  if (v54(v51, 1, v52)) {
    goto LABEL_7;
  }
LABEL_10:
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
LABEL_11:
  swift_storeEnumTagMultiPayload();
  v311 = (int *)type metadata accessor for FeedPaywallConfig();
  uint64_t v100 = v311[5];
  v101 = (char *)v44 + v100;
  v102 = &v40[v100];
  int v103 = swift_getEnumCaseMultiPayload();
  char *v101 = *v102;
  if (v103 == 1)
  {
    v104 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v105 = v104[5];
    v106 = &v101[v105];
    v107 = &v102[v105];
    uint64_t v108 = sub_1DFDE7220();
    uint64_t v109 = *(void *)(v108 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v106, v107, v108);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
    }
    *(void *)&v101[v104[6]] = *(void *)&v102[v104[6]];
    *(void *)&v101[v104[7]] = *(void *)&v102[v104[7]];
    *(void *)&v101[v104[8]] = *(void *)&v102[v104[8]];
    uint64_t v136 = v104[9];
    v137 = *(void **)&v102[v136];
    *(void *)&v101[v136] = v137;
    uint64_t v138 = v104[10];
    v139 = *(void **)&v102[v138];
    *(void *)&v101[v138] = v139;
    uint64_t v140 = v104[11];
    v141 = *(void **)&v102[v140];
    *(void *)&v101[v140] = v141;
    uint64_t v142 = v104[12];
    v143 = *(void **)&v102[v142];
    *(void *)&v101[v142] = v143;
    uint64_t v144 = v104[13];
    v276 = *(void **)&v102[v144];
    *(void *)&v101[v144] = v276;
    uint64_t v145 = v104[14];
    v283 = *(void **)&v102[v145];
    *(void *)&v101[v145] = v283;
    uint64_t v146 = v104[15];
    v288 = *(void **)&v102[v146];
    *(void *)&v101[v146] = v288;
    uint64_t v147 = v104[16];
    v293 = *(void **)&v102[v147];
    *(void *)&v101[v147] = v293;
    uint64_t v148 = v104[17];
    v299 = *(void **)&v102[v148];
    *(void *)&v101[v148] = v299;
    uint64_t v149 = v104[18];
    v305 = *(void **)&v102[v149];
    *(void *)&v101[v149] = v305;
    uint64_t v150 = v104[19];
    v151 = &v101[v150];
    v152 = &v102[v150];
    uint64_t v279 = *((void *)v152 + 1);
    *(void *)v151 = *(void *)v152;
    *((void *)v151 + 1) = v279;
    uint64_t v153 = v104[20];
    v154 = &v101[v153];
    v155 = &v102[v153];
    uint64_t v156 = *((void *)v155 + 1);
    *(void *)v154 = *(void *)v155;
    *((void *)v154 + 1) = v156;
    uint64_t v157 = v104[21];
    v158 = &v101[v157];
    v159 = &v102[v157];
    uint64_t v160 = *((void *)v159 + 1);
    *(void *)v158 = *(void *)v159;
    *((void *)v158 + 1) = v160;
    uint64_t v161 = v104[22];
    v270 = &v102[v161];
    v273 = &v101[v161];
    uint64_t v162 = sub_1DFDEF360();
    v268 = *(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16);
    id v163 = v137;
    id v164 = v139;
    id v165 = v141;
    id v166 = v143;
    id v167 = v276;
    id v168 = v283;
    id v169 = v288;
    id v170 = v293;
    id v171 = v299;
    id v172 = v305;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v268(v273, v270, v162);
    uint64_t v173 = v104[23];
    v174 = &v101[v173];
    v175 = &v102[v173];
    uint64_t v176 = *((void *)v175 + 1);
    *(void *)v174 = *(void *)v175;
    *((void *)v174 + 1) = v176;
    uint64_t v177 = v104[24];
    v130 = &v101[v177];
    v131 = &v102[v177];
    uint64_t v132 = sub_1DFDEF130();
    uint64_t v133 = *(void *)(v132 - 8);
    v178 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48);
    swift_bridgeObjectRetain();
    if (!v178(v131, 1, v132)) {
      goto LABEL_18;
    }
LABEL_15:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v130, v131, *(void *)(*(void *)(v135 - 8) + 64));
    goto LABEL_19;
  }
  v111 = (void *)*((void *)v102 + 1);
  v112 = (void *)*((void *)v102 + 2);
  *((void *)v101 + 1) = v111;
  *((void *)v101 + 2) = v112;
  v113 = (void *)*((void *)v102 + 3);
  v304 = (void *)*((void *)v102 + 4);
  *((void *)v101 + 3) = v113;
  *((void *)v101 + 4) = v304;
  *(_OWORD *)(v101 + 40) = *(_OWORD *)(v102 + 40);
  v298 = (void *)*((void *)v102 + 8);
  *((void *)v101 + 7) = *((void *)v102 + 7);
  *((void *)v101 + 8) = v298;
  uint64_t v114 = *((void *)v102 + 10);
  *((void *)v101 + 9) = *((void *)v102 + 9);
  *((void *)v101 + 10) = v114;
  uint64_t v115 = *((void *)v102 + 12);
  *((void *)v101 + 11) = *((void *)v102 + 11);
  *((void *)v101 + 12) = v115;
  uint64_t v116 = *((void *)v102 + 14);
  *((void *)v101 + 13) = *((void *)v102 + 13);
  *((void *)v101 + 14) = v116;
  v117 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v118 = v117[16];
  v287 = &v102[v118];
  v292 = &v101[v118];
  uint64_t v119 = sub_1DFDEF360();
  v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
  id v120 = v111;
  id v121 = v112;
  id v122 = v113;
  id v123 = v304;
  id v124 = v298;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v282(v292, v287, v119);
  uint64_t v125 = v117[17];
  v126 = &v101[v125];
  v127 = &v102[v125];
  uint64_t v128 = *((void *)v127 + 1);
  *(void *)v126 = *(void *)v127;
  *((void *)v126 + 1) = v128;
  uint64_t v129 = v117[18];
  v130 = &v101[v129];
  v131 = &v102[v129];
  uint64_t v132 = sub_1DFDEF130();
  uint64_t v133 = *(void *)(v132 - 8);
  v134 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48);
  swift_bridgeObjectRetain();
  if (v134(v131, 1, v132)) {
    goto LABEL_15;
  }
LABEL_18:
  (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v130, v131, v132);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
LABEL_19:
  swift_storeEnumTagMultiPayload();
  uint64_t v179 = v311[6];
  v180 = (char *)v312 + v179;
  v181 = &v313[v179];
  int v182 = swift_getEnumCaseMultiPayload();
  char *v180 = *v181;
  if (v182 == 1)
  {
    v183 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v184 = v183[5];
    v185 = &v180[v184];
    v186 = &v181[v184];
    uint64_t v187 = sub_1DFDE7220();
    uint64_t v188 = *(void *)(v187 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(v186, 1, v187))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v185, v186, *(void *)(*(void *)(v189 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v185, v186, v187);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
    }
    *(void *)&v180[v183[6]] = *(void *)&v181[v183[6]];
    *(void *)&v180[v183[7]] = *(void *)&v181[v183[7]];
    *(void *)&v180[v183[8]] = *(void *)&v181[v183[8]];
    uint64_t v215 = v183[9];
    v216 = *(void **)&v181[v215];
    *(void *)&v180[v215] = v216;
    uint64_t v217 = v183[10];
    v218 = *(void **)&v181[v217];
    *(void *)&v180[v217] = v218;
    uint64_t v219 = v183[11];
    v220 = *(void **)&v181[v219];
    *(void *)&v180[v219] = v220;
    uint64_t v221 = v183[12];
    v222 = *(void **)&v181[v221];
    *(void *)&v180[v221] = v222;
    uint64_t v223 = v183[13];
    v277 = *(void **)&v181[v223];
    *(void *)&v180[v223] = v277;
    uint64_t v224 = v183[14];
    v285 = *(void **)&v181[v224];
    *(void *)&v180[v224] = v285;
    uint64_t v225 = v183[15];
    v290 = *(void **)&v181[v225];
    *(void *)&v180[v225] = v290;
    uint64_t v226 = v183[16];
    v295 = *(void **)&v181[v226];
    *(void *)&v180[v226] = v295;
    uint64_t v227 = v183[17];
    v301 = *(void **)&v181[v227];
    *(void *)&v180[v227] = v301;
    uint64_t v228 = v183[18];
    v307 = *(void **)&v181[v228];
    *(void *)&v180[v228] = v307;
    uint64_t v229 = v183[19];
    v230 = &v180[v229];
    v231 = &v181[v229];
    uint64_t v280 = *((void *)v231 + 1);
    *(void *)v230 = *(void *)v231;
    *((void *)v230 + 1) = v280;
    uint64_t v232 = v183[20];
    v233 = &v180[v232];
    v234 = &v181[v232];
    uint64_t v235 = *((void *)v234 + 1);
    *(void *)v233 = *(void *)v234;
    *((void *)v233 + 1) = v235;
    uint64_t v236 = v183[21];
    v237 = &v180[v236];
    v238 = &v181[v236];
    uint64_t v239 = *((void *)v238 + 1);
    *(void *)v237 = *(void *)v238;
    *((void *)v237 + 1) = v239;
    uint64_t v240 = v183[22];
    v271 = &v181[v240];
    v274 = &v180[v240];
    uint64_t v241 = sub_1DFDEF360();
    v269 = *(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 16);
    id v242 = v216;
    id v243 = v218;
    id v244 = v220;
    id v245 = v222;
    id v246 = v277;
    id v247 = v285;
    id v248 = v290;
    id v249 = v295;
    id v250 = v301;
    id v251 = v307;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v269(v274, v271, v241);
    uint64_t v252 = v183[23];
    v253 = &v180[v252];
    v254 = &v181[v252];
    uint64_t v255 = *((void *)v254 + 1);
    *(void *)v253 = *(void *)v254;
    *((void *)v253 + 1) = v255;
    uint64_t v256 = v183[24];
    v209 = &v180[v256];
    v210 = &v181[v256];
    uint64_t v211 = sub_1DFDEF130();
    uint64_t v212 = *(void *)(v211 - 8);
    v257 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v212 + 48);
    swift_bridgeObjectRetain();
    if (!v257(v210, 1, v211)) {
      goto LABEL_26;
    }
LABEL_23:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v209, v210, *(void *)(*(void *)(v214 - 8) + 64));
    goto LABEL_27;
  }
  v190 = (void *)*((void *)v181 + 1);
  v191 = (void *)*((void *)v181 + 2);
  *((void *)v180 + 1) = v190;
  *((void *)v180 + 2) = v191;
  v192 = (void *)*((void *)v181 + 3);
  v306 = (void *)*((void *)v181 + 4);
  *((void *)v180 + 3) = v192;
  *((void *)v180 + 4) = v306;
  *(_OWORD *)(v180 + 40) = *(_OWORD *)(v181 + 40);
  v300 = (void *)*((void *)v181 + 8);
  *((void *)v180 + 7) = *((void *)v181 + 7);
  *((void *)v180 + 8) = v300;
  uint64_t v193 = *((void *)v181 + 10);
  *((void *)v180 + 9) = *((void *)v181 + 9);
  *((void *)v180 + 10) = v193;
  uint64_t v194 = *((void *)v181 + 12);
  *((void *)v180 + 11) = *((void *)v181 + 11);
  *((void *)v180 + 12) = v194;
  uint64_t v195 = *((void *)v181 + 14);
  *((void *)v180 + 13) = *((void *)v181 + 13);
  *((void *)v180 + 14) = v195;
  v196 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v197 = v196[16];
  v289 = &v181[v197];
  v294 = &v180[v197];
  uint64_t v198 = sub_1DFDEF360();
  v284 = *(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16);
  id v199 = v190;
  id v200 = v191;
  id v201 = v192;
  id v202 = v306;
  id v203 = v300;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v284(v294, v289, v198);
  uint64_t v204 = v196[17];
  v205 = &v180[v204];
  v206 = &v181[v204];
  uint64_t v207 = *((void *)v206 + 1);
  *(void *)v205 = *(void *)v206;
  *((void *)v205 + 1) = v207;
  uint64_t v208 = v196[18];
  v209 = &v180[v208];
  v210 = &v181[v208];
  uint64_t v211 = sub_1DFDEF130();
  uint64_t v212 = *(void *)(v211 - 8);
  v213 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v212 + 48);
  swift_bridgeObjectRetain();
  if (v213(v210, 1, v211)) {
    goto LABEL_23;
  }
LABEL_26:
  (*(void (**)(char *, char *, uint64_t))(v212 + 16))(v209, v210, v211);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v212 + 56))(v209, 0, 1, v211);
LABEL_27:
  uint64_t v26 = v308;
  swift_storeEnumTagMultiPayload();
  uint64_t v258 = v311[7];
  v259 = (void *)((char *)v312 + v258);
  v260 = &v313[v258];
  uint64_t v261 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v259, v260, *(void *)(*(void *)(v261 - 8) + 64));
  }
  else
  {
    void *v259 = *(void *)v260;
    sub_1DEC84AA4();
    uint64_t v263 = *(int *)(v262 + 48);
    v264 = (char *)v259 + v263;
    v265 = &v260[v263];
    uint64_t v266 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 16))(v264, v265, v266);
    swift_storeEnumTagMultiPayload();
  }
  return v26;
}

uint64_t sub_1DF633EC4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1DFDF8C20();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  uint64_t v7 = (id *)(a1 + a2[9]);
  type metadata accessor for FeedPaywallModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v9 = (char *)v7 + v8[5];
    uint64_t v10 = sub_1DFDE7220();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = (char *)v7 + v8[22];
    uint64_t v13 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = v8[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = type metadata accessor for FeedRegularPaywallModel(0);
    unint64_t v16 = (char *)v7 + *(int *)(v15 + 64);
    uint64_t v17 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    uint64_t v14 = *(int *)(v15 + 72);
  }
  uint64_t v18 = (char *)v7 + v14;
  uint64_t v19 = sub_1DFDEF130();
  uint64_t v20 = *(void *)(v19 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
  }
  uint64_t v21 = (int *)type metadata accessor for FeedPaywallConfig();
  uint64_t v22 = (id *)((char *)v7 + v21[5]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v24 = (char *)v22 + v23[5];
    uint64_t v25 = sub_1DFDE7220();
    uint64_t v26 = *(void *)(v25 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v27 = (char *)v22 + v23[22];
    uint64_t v28 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    swift_bridgeObjectRelease();
    uint64_t v29 = v23[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v31 = (char *)v22 + *(int *)(v30 + 64);
    uint64_t v32 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    swift_bridgeObjectRelease();
    uint64_t v29 = *(int *)(v30 + 72);
  }
  uint64_t v33 = (char *)v22 + v29;
  uint64_t v34 = sub_1DFDEF130();
  uint64_t v35 = *(void *)(v34 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
  }
  uint64_t v36 = (id *)((char *)v7 + v21[6]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    id v38 = (char *)v36 + v37[5];
    uint64_t v39 = sub_1DFDE7220();
    uint64_t v40 = *(void *)(v39 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39)) {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v41 = (char *)v36 + v37[22];
    uint64_t v42 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
    swift_bridgeObjectRelease();
    uint64_t v43 = v37[24];
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v45 = (char *)v36 + *(int *)(v44 + 64);
    uint64_t v46 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
    swift_bridgeObjectRelease();
    uint64_t v43 = *(int *)(v44 + 72);
  }
  v47 = (char *)v36 + v43;
  uint64_t v48 = sub_1DFDEF130();
  uint64_t v49 = *(void *)(v48 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48)) {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v48);
  }
  v50 = (char *)v7 + v21[7];
  type metadata accessor for FeedPaywallType(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    sub_1DEC84AA4();
    uint64_t v53 = &v50[*(int *)(v52 + 48)];
    uint64_t v54 = sub_1DFDEEE80();
    uint64_t v55 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8);
    return v55(v53, v54);
  }
  return result;
}

char *sub_1DF63483C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1DFDF8C20();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[9];
  v306 = a1;
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  type metadata accessor for FeedPaywallModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  char *v14 = *v15;
  v310 = v15;
  v311 = v14;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = sub_1DFDE7220();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    *(void *)&v14[v17[6]] = *(void *)&v15[v17[6]];
    *(void *)&v14[v17[7]] = *(void *)&v15[v17[7]];
    *(void *)&v14[v17[8]] = *(void *)&v15[v17[8]];
    uint64_t v54 = v17[9];
    uint64_t v55 = *(void **)&v15[v54];
    *(void *)&v14[v54] = v55;
    uint64_t v56 = v17[10];
    v57 = *(void **)&v15[v56];
    *(void *)&v14[v56] = v57;
    uint64_t v58 = v17[11];
    uint64_t v59 = *(void **)&v15[v58];
    *(void *)((char *)v311 + v58) = v59;
    uint64_t v60 = v17[12];
    uint64_t v61 = *(void **)&v15[v60];
    *(void *)((char *)v311 + v60) = v61;
    uint64_t v62 = v17[13];
    v63 = *(void **)&v15[v62];
    *(void *)((char *)v311 + v62) = v63;
    uint64_t v64 = v17[14];
    v284 = *(void **)&v310[v64];
    *(void *)((char *)v311 + v64) = v284;
    uint64_t v65 = v17[15];
    v289 = *(void **)&v310[v65];
    *(void *)((char *)v311 + v65) = v289;
    uint64_t v66 = v17[16];
    v295 = *(void **)&v310[v66];
    *(void *)((char *)v311 + v66) = v295;
    uint64_t v67 = v17[17];
    v301 = *(void **)&v310[v67];
    *(void *)((char *)v311 + v67) = v301;
    uint64_t v68 = v17[18];
    v308 = *(void **)&v310[v68];
    *(void *)((char *)v311 + v68) = v308;
    uint64_t v69 = v17[19];
    uint64_t v70 = (void *)((char *)v311 + v69);
    uint64_t v71 = &v310[v69];
    uint64_t v279 = *((void *)v71 + 1);
    *uint64_t v70 = *(void *)v71;
    v70[1] = v279;
    uint64_t v72 = v17[20];
    v73 = (void *)((char *)v311 + v72);
    uint64_t v74 = &v310[v72];
    uint64_t v75 = *((void *)v74 + 1);
    void *v73 = *(void *)v74;
    v73[1] = v75;
    uint64_t v76 = v17[21];
    uint64_t v77 = (void *)((char *)v311 + v76);
    uint64_t v78 = &v310[v76];
    uint64_t v79 = *((void *)v78 + 1);
    *uint64_t v77 = *(void *)v78;
    v77[1] = v79;
    uint64_t v80 = v17[22];
    v276 = (char *)v311 + v80;
    v273 = &v310[v80];
    uint64_t v81 = sub_1DFDEF360();
    v270 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
    id v82 = v55;
    id v83 = v57;
    id v84 = v59;
    uint64_t v40 = v311;
    id v85 = v61;
    id v86 = v63;
    uint64_t v42 = v310;
    id v87 = v284;
    id v88 = v289;
    id v89 = v295;
    id v90 = v301;
    id v91 = v308;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v270(v276, v273, v81);
    uint64_t v92 = v17[23];
    id v93 = (void *)((char *)v311 + v92);
    uint64_t v94 = &v310[v92];
    uint64_t v95 = *((void *)v94 + 1);
    *id v93 = *(void *)v94;
    v93[1] = v95;
    uint64_t v96 = v17[24];
    uint64_t v48 = (char *)v311 + v96;
    uint64_t v49 = &v310[v96];
    uint64_t v50 = sub_1DFDEF130();
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    swift_bridgeObjectRetain();
    if (!v97(v49, 1, v50)) {
      goto LABEL_8;
    }
LABEL_5:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_9;
  }
  uint64_t v24 = (void *)*((void *)v15 + 1);
  uint64_t v25 = (void *)*((void *)v15 + 2);
  *((void *)v14 + 1) = v24;
  *((void *)v14 + 2) = v25;
  long long v27 = (void *)*((void *)v15 + 3);
  uint64_t v26 = (void *)*((void *)v15 + 4);
  *((void *)v14 + 3) = v27;
  *((void *)v14 + 4) = v26;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
  uint64_t v28 = (void *)*((void *)v15 + 8);
  v311[7] = *((void *)v15 + 7);
  v311[8] = v28;
  uint64_t v29 = *((void *)v15 + 10);
  v311[9] = *((void *)v15 + 9);
  v311[10] = v29;
  uint64_t v30 = *((void *)v15 + 12);
  v311[11] = *((void *)v15 + 11);
  v311[12] = v30;
  uint64_t v31 = *((void *)v15 + 14);
  v311[13] = *((void *)v15 + 13);
  v311[14] = v31;
  uint64_t v32 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v33 = v32[16];
  v307 = (char *)v311 + v33;
  v300 = &v15[v33];
  uint64_t v34 = sub_1DFDEF360();
  v294 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
  id v35 = v24;
  id v36 = v25;
  id v37 = v27;
  id v38 = v26;
  id v39 = v28;
  uint64_t v40 = v311;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = v34;
  uint64_t v42 = v310;
  v294(v307, v300, v41);
  uint64_t v43 = v32[17];
  uint64_t v44 = (void *)((char *)v311 + v43);
  uint64_t v45 = &v310[v43];
  uint64_t v46 = *((void *)v45 + 1);
  void *v44 = *(void *)v45;
  v44[1] = v46;
  uint64_t v47 = v32[18];
  uint64_t v48 = (char *)v311 + v47;
  uint64_t v49 = &v310[v47];
  uint64_t v50 = sub_1DFDEF130();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
  swift_bridgeObjectRetain();
  if (v52(v49, 1, v50)) {
    goto LABEL_5;
  }
LABEL_8:
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
LABEL_9:
  swift_storeEnumTagMultiPayload();
  v309 = (int *)type metadata accessor for FeedPaywallConfig();
  uint64_t v98 = v309[5];
  v99 = (char *)v40 + v98;
  uint64_t v100 = &v42[v98];
  int v101 = swift_getEnumCaseMultiPayload();
  char *v99 = *v100;
  if (v101 == 1)
  {
    v102 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v103 = v102[5];
    v104 = &v99[v103];
    uint64_t v105 = &v100[v103];
    uint64_t v106 = sub_1DFDE7220();
    uint64_t v107 = *(void *)(v106 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v104, v105, v106);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
    }
    *(void *)&v99[v102[6]] = *(void *)&v100[v102[6]];
    *(void *)&v99[v102[7]] = *(void *)&v100[v102[7]];
    *(void *)&v99[v102[8]] = *(void *)&v100[v102[8]];
    uint64_t v134 = v102[9];
    uint64_t v135 = *(void **)&v100[v134];
    *(void *)&v99[v134] = v135;
    uint64_t v136 = v102[10];
    v137 = *(void **)&v100[v136];
    *(void *)&v99[v136] = v137;
    uint64_t v138 = v102[11];
    v139 = *(void **)&v100[v138];
    *(void *)&v99[v138] = v139;
    uint64_t v140 = v102[12];
    v141 = *(void **)&v100[v140];
    *(void *)&v99[v140] = v141;
    uint64_t v142 = v102[13];
    v274 = *(void **)&v100[v142];
    *(void *)&v99[v142] = v274;
    uint64_t v143 = v102[14];
    uint64_t v281 = *(void **)&v100[v143];
    *(void *)&v99[v143] = v281;
    uint64_t v144 = v102[15];
    v286 = *(void **)&v100[v144];
    *(void *)&v99[v144] = v286;
    uint64_t v145 = v102[16];
    v291 = *(void **)&v100[v145];
    *(void *)&v99[v145] = v291;
    uint64_t v146 = v102[17];
    v297 = *(void **)&v100[v146];
    *(void *)&v99[v146] = v297;
    uint64_t v147 = v102[18];
    v303 = *(void **)&v100[v147];
    *(void *)&v99[v147] = v303;
    uint64_t v148 = v102[19];
    uint64_t v149 = &v99[v148];
    uint64_t v150 = &v100[v148];
    uint64_t v277 = *((void *)v150 + 1);
    *(void *)uint64_t v149 = *(void *)v150;
    *((void *)v149 + 1) = v277;
    uint64_t v151 = v102[20];
    v152 = &v99[v151];
    uint64_t v153 = &v100[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    uint64_t v155 = v102[21];
    uint64_t v156 = &v99[v155];
    uint64_t v157 = &v100[v155];
    uint64_t v158 = *((void *)v157 + 1);
    *(void *)uint64_t v156 = *(void *)v157;
    *((void *)v156 + 1) = v158;
    uint64_t v159 = v102[22];
    v268 = &v100[v159];
    v271 = &v99[v159];
    uint64_t v160 = sub_1DFDEF360();
    uint64_t v266 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
    id v161 = v135;
    id v162 = v137;
    id v163 = v139;
    id v164 = v141;
    id v165 = v274;
    id v166 = v281;
    id v167 = v286;
    id v168 = v291;
    id v169 = v297;
    id v170 = v303;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v266(v271, v268, v160);
    uint64_t v171 = v102[23];
    id v172 = &v99[v171];
    uint64_t v173 = &v100[v171];
    uint64_t v174 = *((void *)v173 + 1);
    *(void *)id v172 = *(void *)v173;
    *((void *)v172 + 1) = v174;
    uint64_t v175 = v102[24];
    uint64_t v128 = &v99[v175];
    uint64_t v129 = &v100[v175];
    uint64_t v130 = sub_1DFDEF130();
    uint64_t v131 = *(void *)(v130 - 8);
    uint64_t v176 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
    swift_bridgeObjectRetain();
    if (!v176(v129, 1, v130)) {
      goto LABEL_16;
    }
LABEL_13:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v128, v129, *(void *)(*(void *)(v133 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v109 = (void *)*((void *)v100 + 1);
  uint64_t v110 = (void *)*((void *)v100 + 2);
  *((void *)v99 + 1) = v109;
  *((void *)v99 + 2) = v110;
  v111 = (void *)*((void *)v100 + 3);
  v302 = (void *)*((void *)v100 + 4);
  *((void *)v99 + 3) = v111;
  *((void *)v99 + 4) = v302;
  *(_OWORD *)(v99 + 40) = *(_OWORD *)(v100 + 40);
  v296 = (void *)*((void *)v100 + 8);
  *((void *)v99 + 7) = *((void *)v100 + 7);
  *((void *)v99 + 8) = v296;
  uint64_t v112 = *((void *)v100 + 10);
  *((void *)v99 + 9) = *((void *)v100 + 9);
  *((void *)v99 + 10) = v112;
  uint64_t v113 = *((void *)v100 + 12);
  *((void *)v99 + 11) = *((void *)v100 + 11);
  *((void *)v99 + 12) = v113;
  uint64_t v114 = *((void *)v100 + 14);
  *((void *)v99 + 13) = *((void *)v100 + 13);
  *((void *)v99 + 14) = v114;
  uint64_t v115 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v116 = v115[16];
  v285 = &v100[v116];
  v290 = &v99[v116];
  uint64_t v117 = sub_1DFDEF360();
  uint64_t v280 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
  id v118 = v109;
  id v119 = v110;
  id v120 = v111;
  id v121 = v302;
  id v122 = v296;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v280(v290, v285, v117);
  uint64_t v123 = v115[17];
  id v124 = &v99[v123];
  uint64_t v125 = &v100[v123];
  uint64_t v126 = *((void *)v125 + 1);
  *(void *)id v124 = *(void *)v125;
  *((void *)v124 + 1) = v126;
  uint64_t v127 = v115[18];
  uint64_t v128 = &v99[v127];
  uint64_t v129 = &v100[v127];
  uint64_t v130 = sub_1DFDEF130();
  uint64_t v131 = *(void *)(v130 - 8);
  uint64_t v132 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
  swift_bridgeObjectRetain();
  if (v132(v129, 1, v130)) {
    goto LABEL_13;
  }
LABEL_16:
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v128, v129, v130);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
LABEL_17:
  swift_storeEnumTagMultiPayload();
  uint64_t v177 = v309[6];
  v178 = (char *)v311 + v177;
  uint64_t v179 = &v310[v177];
  int v180 = swift_getEnumCaseMultiPayload();
  char *v178 = *v179;
  if (v180 == 1)
  {
    v181 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v182 = v181[5];
    v183 = &v178[v182];
    uint64_t v184 = &v179[v182];
    uint64_t v185 = sub_1DFDE7220();
    uint64_t v186 = *(void *)(v185 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v184, 1, v185))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v183, v184, *(void *)(*(void *)(v187 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v183, v184, v185);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v186 + 56))(v183, 0, 1, v185);
    }
    *(void *)&v178[v181[6]] = *(void *)&v179[v181[6]];
    *(void *)&v178[v181[7]] = *(void *)&v179[v181[7]];
    *(void *)&v178[v181[8]] = *(void *)&v179[v181[8]];
    uint64_t v213 = v181[9];
    uint64_t v214 = *(void **)&v179[v213];
    *(void *)&v178[v213] = v214;
    uint64_t v215 = v181[10];
    v216 = *(void **)&v179[v215];
    *(void *)&v178[v215] = v216;
    uint64_t v217 = v181[11];
    v218 = *(void **)&v179[v217];
    *(void *)&v178[v217] = v218;
    uint64_t v219 = v181[12];
    v220 = *(void **)&v179[v219];
    *(void *)&v178[v219] = v220;
    uint64_t v221 = v181[13];
    v275 = *(void **)&v179[v221];
    *(void *)&v178[v221] = v275;
    uint64_t v222 = v181[14];
    v283 = *(void **)&v179[v222];
    *(void *)&v178[v222] = v283;
    uint64_t v223 = v181[15];
    v288 = *(void **)&v179[v223];
    *(void *)&v178[v223] = v288;
    uint64_t v224 = v181[16];
    v293 = *(void **)&v179[v224];
    *(void *)&v178[v224] = v293;
    uint64_t v225 = v181[17];
    v299 = *(void **)&v179[v225];
    *(void *)&v178[v225] = v299;
    uint64_t v226 = v181[18];
    v305 = *(void **)&v179[v226];
    *(void *)&v178[v226] = v305;
    uint64_t v227 = v181[19];
    uint64_t v228 = &v178[v227];
    uint64_t v229 = &v179[v227];
    uint64_t v278 = *((void *)v229 + 1);
    *(void *)uint64_t v228 = *(void *)v229;
    *((void *)v228 + 1) = v278;
    uint64_t v230 = v181[20];
    v231 = &v178[v230];
    uint64_t v232 = &v179[v230];
    uint64_t v233 = *((void *)v232 + 1);
    *(void *)v231 = *(void *)v232;
    *((void *)v231 + 1) = v233;
    uint64_t v234 = v181[21];
    uint64_t v235 = &v178[v234];
    uint64_t v236 = &v179[v234];
    uint64_t v237 = *((void *)v236 + 1);
    *(void *)uint64_t v235 = *(void *)v236;
    *((void *)v235 + 1) = v237;
    uint64_t v238 = v181[22];
    v269 = &v179[v238];
    v272 = &v178[v238];
    uint64_t v239 = sub_1DFDEF360();
    v267 = *(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16);
    id v240 = v214;
    id v241 = v216;
    id v242 = v218;
    id v243 = v220;
    id v244 = v275;
    id v245 = v283;
    id v246 = v288;
    id v247 = v293;
    id v248 = v299;
    id v249 = v305;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v267(v272, v269, v239);
    uint64_t v250 = v181[23];
    id v251 = &v178[v250];
    uint64_t v252 = &v179[v250];
    uint64_t v253 = *((void *)v252 + 1);
    *(void *)id v251 = *(void *)v252;
    *((void *)v251 + 1) = v253;
    uint64_t v254 = v181[24];
    uint64_t v207 = &v178[v254];
    uint64_t v208 = &v179[v254];
    uint64_t v209 = sub_1DFDEF130();
    uint64_t v210 = *(void *)(v209 - 8);
    uint64_t v255 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48);
    swift_bridgeObjectRetain();
    if (!v255(v208, 1, v209)) {
      goto LABEL_24;
    }
LABEL_21:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v207, v208, *(void *)(*(void *)(v212 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v188 = (void *)*((void *)v179 + 1);
  uint64_t v189 = (void *)*((void *)v179 + 2);
  *((void *)v178 + 1) = v188;
  *((void *)v178 + 2) = v189;
  v190 = (void *)*((void *)v179 + 3);
  v304 = (void *)*((void *)v179 + 4);
  *((void *)v178 + 3) = v190;
  *((void *)v178 + 4) = v304;
  *(_OWORD *)(v178 + 40) = *(_OWORD *)(v179 + 40);
  v298 = (void *)*((void *)v179 + 8);
  *((void *)v178 + 7) = *((void *)v179 + 7);
  *((void *)v178 + 8) = v298;
  uint64_t v191 = *((void *)v179 + 10);
  *((void *)v178 + 9) = *((void *)v179 + 9);
  *((void *)v178 + 10) = v191;
  uint64_t v192 = *((void *)v179 + 12);
  *((void *)v178 + 11) = *((void *)v179 + 11);
  *((void *)v178 + 12) = v192;
  uint64_t v193 = *((void *)v179 + 14);
  *((void *)v178 + 13) = *((void *)v179 + 13);
  *((void *)v178 + 14) = v193;
  uint64_t v194 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v195 = v194[16];
  v287 = &v179[v195];
  v292 = &v178[v195];
  uint64_t v196 = sub_1DFDEF360();
  v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16);
  id v197 = v188;
  id v198 = v189;
  id v199 = v190;
  id v200 = v304;
  id v201 = v298;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v282(v292, v287, v196);
  uint64_t v202 = v194[17];
  id v203 = &v178[v202];
  uint64_t v204 = &v179[v202];
  uint64_t v205 = *((void *)v204 + 1);
  *(void *)id v203 = *(void *)v204;
  *((void *)v203 + 1) = v205;
  uint64_t v206 = v194[18];
  uint64_t v207 = &v178[v206];
  uint64_t v208 = &v179[v206];
  uint64_t v209 = sub_1DFDEF130();
  uint64_t v210 = *(void *)(v209 - 8);
  uint64_t v211 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48);
  swift_bridgeObjectRetain();
  if (v211(v208, 1, v209)) {
    goto LABEL_21;
  }
LABEL_24:
  (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v207, v208, v209);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v210 + 56))(v207, 0, 1, v209);
LABEL_25:
  swift_storeEnumTagMultiPayload();
  uint64_t v256 = v309[7];
  v257 = (void *)((char *)v311 + v256);
  uint64_t v258 = &v310[v256];
  uint64_t v259 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v257, v258, *(void *)(*(void *)(v259 - 8) + 64));
  }
  else
  {
    void *v257 = *(void *)v258;
    sub_1DEC84AA4();
    uint64_t v261 = *(int *)(v260 + 48);
    uint64_t v262 = (char *)v257 + v261;
    uint64_t v263 = &v258[v261];
    uint64_t v264 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 16))(v262, v263, v264);
    swift_storeEnumTagMultiPayload();
  }
  return v306;
}

char *sub_1DF635BF4(char *a1, char *a2, int *a3)
{
  uint64_t v5 = a1;
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &v5[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DFDF8C20();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&v5[a3[6]], &a2[a3[6]], v9);
  *(void *)&v5[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&v5[a3[8]] = *(void *)&a2[a3[8]];
  if (v5 == a2)
  {
    type metadata accessor for FeedPaywallConfig();
    return v5;
  }
  uint64_t v11 = a3[9];
  uint64_t v12 = &v5[v11];
  uint64_t v13 = &a2[v11];
  sub_1DF004C0C((uint64_t)&v5[v11], type metadata accessor for FeedPaywallModel);
  type metadata accessor for FeedPaywallModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *uint64_t v12 = *v13;
  v283 = v13;
  v284 = v12;
  uint64_t v279 = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v16 = v15[5];
    uint64_t v17 = &v12[v16];
    uint64_t v18 = &v13[v16];
    uint64_t v19 = sub_1DFDE7220();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    *(void *)&v12[v15[6]] = *(void *)&v13[v15[6]];
    *(void *)&v12[v15[7]] = *(void *)&v13[v15[7]];
    *(void *)&v12[v15[8]] = *(void *)&v13[v15[8]];
    uint64_t v47 = v15[9];
    uint64_t v48 = *(void **)&v13[v47];
    *(void *)&v12[v47] = v48;
    uint64_t v49 = v15[10];
    uint64_t v50 = *(void **)&v13[v49];
    *(void *)&v12[v49] = v50;
    uint64_t v51 = v15[11];
    uint64_t v52 = *(void **)&v13[v51];
    *(void *)&v12[v51] = v52;
    uint64_t v53 = v15[12];
    uint64_t v54 = *(void **)&v13[v53];
    *(void *)&v12[v53] = v54;
    uint64_t v55 = v15[13];
    uint64_t v56 = *(void **)&v13[v55];
    *(void *)&v12[v55] = v56;
    uint64_t v57 = v15[14];
    uint64_t v262 = *(void **)&v283[v57];
    *(void *)&v12[v57] = v262;
    uint64_t v58 = v15[15];
    v268 = *(void **)&v283[v58];
    *(void *)&v12[v58] = v268;
    uint64_t v59 = v15[16];
    v274 = *(void **)&v283[v59];
    *(void *)&v12[v59] = v274;
    uint64_t v60 = v15[17];
    uint64_t v281 = *(void **)&v283[v60];
    *(void *)&v12[v60] = v281;
    uint64_t v61 = v15[18];
    uint64_t v62 = *(void **)&v283[v61];
    *(void *)((char *)v284 + v61) = v62;
    uint64_t v63 = v15[19];
    uint64_t v64 = (void *)((char *)v284 + v63);
    uint64_t v65 = &v283[v63];
    *uint64_t v64 = *(void *)v65;
    v64[1] = *((void *)v65 + 1);
    uint64_t v66 = v15[20];
    uint64_t v67 = (void *)((char *)v284 + v66);
    uint64_t v68 = &v283[v66];
    *uint64_t v67 = *(void *)v68;
    v67[1] = *((void *)v68 + 1);
    uint64_t v69 = v15[21];
    uint64_t v70 = (void *)((char *)v284 + v69);
    uint64_t v71 = &v283[v69];
    *uint64_t v70 = *(void *)v71;
    v70[1] = *((void *)v71 + 1);
    uint64_t v72 = v15[22];
    uint64_t v255 = (char *)v284 + v72;
    uint64_t v252 = &v283[v72];
    uint64_t v73 = sub_1DFDEF360();
    id v249 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
    id v74 = v48;
    id v75 = v50;
    id v76 = v52;
    id v77 = v54;
    uint64_t v33 = v284;
    id v78 = v56;
    id v36 = v283;
    id v79 = v262;
    id v80 = v268;
    id v81 = v274;
    id v82 = v281;
    id v83 = v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v249(v255, v252, v73);
    uint64_t v84 = v15[23];
    id v85 = (void *)((char *)v284 + v84);
    id v86 = &v283[v84];
    *id v85 = *(void *)v86;
    v85[1] = *((void *)v86 + 1);
    uint64_t v87 = v15[24];
    uint64_t v41 = (char *)v284 + v87;
    uint64_t v42 = &v283[v87];
    uint64_t v43 = sub_1DFDEF130();
    uint64_t v44 = *(void *)(v43 - 8);
    id v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
    swift_bridgeObjectRetain();
    if (!v88(v42, 1, v43)) {
      goto LABEL_10;
    }
LABEL_7:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_11;
  }
  uint64_t v22 = (void *)*((void *)v13 + 1);
  *((void *)v12 + 1) = v22;
  uint64_t v23 = (void *)*((void *)v13 + 2);
  *((void *)v12 + 2) = v23;
  uint64_t v24 = (void *)*((void *)v13 + 3);
  *((void *)v12 + 3) = v24;
  uint64_t v25 = (void *)*((void *)v13 + 4);
  *((void *)v12 + 4) = v25;
  *((void *)v12 + 5) = *((void *)v13 + 5);
  *((void *)v12 + 6) = *((void *)v13 + 6);
  *((void *)v12 + 7) = *((void *)v13 + 7);
  uint64_t v26 = (void *)*((void *)v13 + 8);
  v284[8] = v26;
  v284[9] = *((void *)v13 + 9);
  v284[10] = *((void *)v13 + 10);
  v284[11] = *((void *)v13 + 11);
  v284[12] = *((void *)v13 + 12);
  v284[13] = *((void *)v13 + 13);
  v284[14] = *((void *)v13 + 14);
  long long v27 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v28 = v27[16];
  uint64_t v280 = (char *)v284 + v28;
  v273 = &v13[v28];
  uint64_t v29 = sub_1DFDEF360();
  v267 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
  id v30 = v22;
  id v31 = v23;
  id v32 = v24;
  uint64_t v33 = v284;
  id v34 = v25;
  id v35 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v36 = v283;
  v267(v280, v273, v29);
  uint64_t v37 = v27[17];
  id v38 = (void *)((char *)v284 + v37);
  id v39 = &v283[v37];
  *id v38 = *(void *)v39;
  v38[1] = *((void *)v39 + 1);
  uint64_t v40 = v27[18];
  uint64_t v41 = (char *)v284 + v40;
  uint64_t v42 = &v283[v40];
  uint64_t v43 = sub_1DFDEF130();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  swift_bridgeObjectRetain();
  if (v45(v42, 1, v43)) {
    goto LABEL_7;
  }
LABEL_10:
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
LABEL_11:
  swift_storeEnumTagMultiPayload();
  v282 = (int *)type metadata accessor for FeedPaywallConfig();
  uint64_t v89 = v282[5];
  id v90 = (char *)v33 + v89;
  id v91 = &v36[v89];
  sub_1DF004C0C((uint64_t)v33 + v89, type metadata accessor for FeedPaywallModel);
  int v92 = swift_getEnumCaseMultiPayload();
  *id v90 = *v91;
  if (v92 == 1)
  {
    id v93 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v94 = v93[5];
    uint64_t v95 = &v90[v94];
    uint64_t v96 = &v91[v94];
    uint64_t v97 = sub_1DFDE7220();
    uint64_t v98 = *(void *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v96, v97);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
    }
    *(void *)&v90[v93[6]] = *(void *)&v91[v93[6]];
    *(void *)&v90[v93[7]] = *(void *)&v91[v93[7]];
    *(void *)&v90[v93[8]] = *(void *)&v91[v93[8]];
    uint64_t v121 = v93[9];
    id v122 = *(void **)&v91[v121];
    *(void *)&v90[v121] = v122;
    uint64_t v123 = v93[10];
    id v124 = *(void **)&v91[v123];
    *(void *)&v90[v123] = v124;
    uint64_t v125 = v93[11];
    uint64_t v126 = *(void **)&v91[v125];
    *(void *)&v90[v125] = v126;
    uint64_t v127 = v93[12];
    uint64_t v250 = *(void **)&v91[v127];
    *(void *)&v90[v127] = v250;
    uint64_t v128 = v93[13];
    uint64_t v253 = *(void **)&v91[v128];
    *(void *)&v90[v128] = v253;
    uint64_t v129 = v93[14];
    uint64_t v259 = *(void **)&v91[v129];
    *(void *)&v90[v129] = v259;
    uint64_t v130 = v93[15];
    uint64_t v264 = *(void **)&v91[v130];
    *(void *)&v90[v130] = v264;
    uint64_t v131 = v93[16];
    v270 = *(void **)&v91[v131];
    *(void *)&v90[v131] = v270;
    uint64_t v132 = v93[17];
    v276 = *(void **)&v91[v132];
    *(void *)&v90[v132] = v276;
    uint64_t v133 = v93[18];
    uint64_t v134 = *(void **)&v91[v133];
    *(void *)&v90[v133] = v134;
    uint64_t v135 = v93[19];
    uint64_t v136 = &v90[v135];
    v137 = &v91[v135];
    *(void *)uint64_t v136 = *(void *)v137;
    *((void *)v136 + 1) = *((void *)v137 + 1);
    uint64_t v138 = v93[20];
    v139 = &v90[v138];
    uint64_t v140 = &v91[v138];
    *(void *)v139 = *(void *)v140;
    *((void *)v139 + 1) = *((void *)v140 + 1);
    uint64_t v141 = v93[21];
    uint64_t v142 = &v90[v141];
    uint64_t v143 = &v91[v141];
    *(void *)uint64_t v142 = *(void *)v143;
    *((void *)v142 + 1) = *((void *)v143 + 1);
    uint64_t v144 = v93[22];
    id v245 = &v91[v144];
    id v247 = &v90[v144];
    uint64_t v145 = sub_1DFDEF360();
    id v243 = *(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16);
    id v146 = v122;
    id v147 = v124;
    id v148 = v126;
    id v149 = v250;
    id v150 = v253;
    id v151 = v259;
    id v152 = v264;
    id v153 = v270;
    id v154 = v276;
    id v155 = v134;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v243(v247, v245, v145);
    uint64_t v156 = v93[23];
    uint64_t v157 = &v90[v156];
    uint64_t v158 = &v91[v156];
    *(void *)uint64_t v157 = *(void *)v158;
    *((void *)v157 + 1) = *((void *)v158 + 1);
    uint64_t v159 = v93[24];
    uint64_t v115 = &v90[v159];
    uint64_t v116 = &v91[v159];
    uint64_t v117 = sub_1DFDEF130();
    uint64_t v118 = *(void *)(v117 - 8);
    uint64_t v160 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
    swift_bridgeObjectRetain();
    if (!v160(v116, 1, v117)) {
      goto LABEL_18;
    }
LABEL_15:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v115, v116, *(void *)(*(void *)(v120 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v100 = (void *)*((void *)v91 + 1);
  *((void *)v90 + 1) = v100;
  int v101 = (void *)*((void *)v91 + 2);
  *((void *)v90 + 2) = v101;
  v269 = (void *)*((void *)v91 + 3);
  *((void *)v90 + 3) = v269;
  v275 = (void *)*((void *)v91 + 4);
  *((void *)v90 + 4) = v275;
  *((void *)v90 + 5) = *((void *)v91 + 5);
  *((void *)v90 + 6) = *((void *)v91 + 6);
  *((void *)v90 + 7) = *((void *)v91 + 7);
  v102 = (void *)*((void *)v91 + 8);
  *((void *)v90 + 8) = v102;
  *((void *)v90 + 9) = *((void *)v91 + 9);
  *((void *)v90 + 10) = *((void *)v91 + 10);
  *((void *)v90 + 11) = *((void *)v91 + 11);
  *((void *)v90 + 12) = *((void *)v91 + 12);
  *((void *)v90 + 13) = *((void *)v91 + 13);
  *((void *)v90 + 14) = *((void *)v91 + 14);
  uint64_t v103 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v104 = v103[16];
  uint64_t v258 = &v91[v104];
  uint64_t v263 = &v90[v104];
  uint64_t v105 = sub_1DFDEF360();
  uint64_t v256 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
  id v106 = v100;
  id v107 = v101;
  id v108 = v269;
  id v109 = v275;
  id v110 = v102;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v256(v263, v258, v105);
  uint64_t v111 = v103[17];
  uint64_t v112 = &v90[v111];
  uint64_t v113 = &v91[v111];
  *(void *)uint64_t v112 = *(void *)v113;
  *((void *)v112 + 1) = *((void *)v113 + 1);
  uint64_t v114 = v103[18];
  uint64_t v115 = &v90[v114];
  uint64_t v116 = &v91[v114];
  uint64_t v117 = sub_1DFDEF130();
  uint64_t v118 = *(void *)(v117 - 8);
  id v119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
  swift_bridgeObjectRetain();
  if (v119(v116, 1, v117)) {
    goto LABEL_15;
  }
LABEL_18:
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v115, v116, v117);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
LABEL_19:
  swift_storeEnumTagMultiPayload();
  uint64_t v161 = v282[6];
  id v162 = (char *)v284 + v161;
  id v163 = &v283[v161];
  sub_1DF004C0C((uint64_t)v284 + v161, type metadata accessor for FeedPaywallModel);
  int v164 = swift_getEnumCaseMultiPayload();
  *id v162 = *v163;
  if (v164 == 1)
  {
    id v165 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v166 = v165[5];
    id v167 = &v162[v166];
    id v168 = &v163[v166];
    uint64_t v169 = sub_1DFDE7220();
    uint64_t v170 = *(void *)(v169 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v168, 1, v169))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v167, v168, *(void *)(*(void *)(v171 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v167, v168, v169);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
    }
    *(void *)&v162[v165[6]] = *(void *)&v163[v165[6]];
    *(void *)&v162[v165[7]] = *(void *)&v163[v165[7]];
    *(void *)&v162[v165[8]] = *(void *)&v163[v165[8]];
    uint64_t v192 = v165[9];
    uint64_t v193 = *(void **)&v163[v192];
    *(void *)&v162[v192] = v193;
    uint64_t v194 = v165[10];
    uint64_t v195 = *(void **)&v163[v194];
    *(void *)&v162[v194] = v195;
    uint64_t v196 = v165[11];
    id v197 = *(void **)&v163[v196];
    *(void *)&v162[v196] = v197;
    uint64_t v198 = v165[12];
    id v251 = *(void **)&v163[v198];
    *(void *)&v162[v198] = v251;
    uint64_t v199 = v165[13];
    uint64_t v254 = *(void **)&v163[v199];
    *(void *)&v162[v199] = v254;
    uint64_t v200 = v165[14];
    uint64_t v261 = *(void **)&v163[v200];
    *(void *)&v162[v200] = v261;
    uint64_t v201 = v165[15];
    uint64_t v266 = *(void **)&v163[v201];
    *(void *)&v162[v201] = v266;
    uint64_t v202 = v165[16];
    v272 = *(void **)&v163[v202];
    *(void *)&v162[v202] = v272;
    uint64_t v203 = v165[17];
    uint64_t v278 = *(void **)&v163[v203];
    *(void *)&v162[v203] = v278;
    uint64_t v204 = v165[18];
    uint64_t v205 = *(void **)&v163[v204];
    *(void *)&v162[v204] = v205;
    uint64_t v206 = v165[19];
    uint64_t v207 = &v162[v206];
    uint64_t v208 = &v163[v206];
    *(void *)uint64_t v207 = *(void *)v208;
    *((void *)v207 + 1) = *((void *)v208 + 1);
    uint64_t v209 = v165[20];
    uint64_t v210 = &v162[v209];
    uint64_t v211 = &v163[v209];
    *(void *)uint64_t v210 = *(void *)v211;
    *((void *)v210 + 1) = *((void *)v211 + 1);
    uint64_t v212 = v165[21];
    uint64_t v213 = &v162[v212];
    uint64_t v214 = &v163[v212];
    *(void *)uint64_t v213 = *(void *)v214;
    *((void *)v213 + 1) = *((void *)v214 + 1);
    uint64_t v215 = v165[22];
    id v246 = &v163[v215];
    id v248 = &v162[v215];
    uint64_t v216 = sub_1DFDEF360();
    id v244 = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
    id v217 = v193;
    id v218 = v195;
    id v219 = v197;
    id v220 = v251;
    id v221 = v254;
    id v222 = v261;
    id v223 = v266;
    id v224 = v272;
    id v225 = v278;
    id v226 = v205;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v244(v248, v246, v216);
    uint64_t v227 = v165[23];
    uint64_t v228 = &v162[v227];
    uint64_t v229 = &v163[v227];
    *(void *)uint64_t v228 = *(void *)v229;
    *((void *)v228 + 1) = *((void *)v229 + 1);
    uint64_t v230 = v165[24];
    uint64_t v187 = &v162[v230];
    uint64_t v188 = &v163[v230];
    uint64_t v189 = sub_1DFDEF130();
    uint64_t v190 = *(void *)(v189 - 8);
    v231 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48);
    swift_bridgeObjectRetain();
    if (v231(v188, 1, v189)) {
      goto LABEL_26;
    }
  }
  else
  {
    id v172 = (void *)*((void *)v163 + 1);
    *((void *)v162 + 1) = v172;
    uint64_t v173 = (void *)*((void *)v163 + 2);
    *((void *)v162 + 2) = v173;
    v271 = (void *)*((void *)v163 + 3);
    *((void *)v162 + 3) = v271;
    uint64_t v277 = (void *)*((void *)v163 + 4);
    *((void *)v162 + 4) = v277;
    *((void *)v162 + 5) = *((void *)v163 + 5);
    *((void *)v162 + 6) = *((void *)v163 + 6);
    *((void *)v162 + 7) = *((void *)v163 + 7);
    uint64_t v174 = (void *)*((void *)v163 + 8);
    *((void *)v162 + 8) = v174;
    *((void *)v162 + 9) = *((void *)v163 + 9);
    *((void *)v162 + 10) = *((void *)v163 + 10);
    *((void *)v162 + 11) = *((void *)v163 + 11);
    *((void *)v162 + 12) = *((void *)v163 + 12);
    *((void *)v162 + 13) = *((void *)v163 + 13);
    *((void *)v162 + 14) = *((void *)v163 + 14);
    uint64_t v175 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v176 = v175[16];
    uint64_t v260 = &v163[v176];
    v265 = &v162[v176];
    uint64_t v177 = sub_1DFDEF360();
    v257 = *(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16);
    id v178 = v172;
    id v179 = v173;
    id v180 = v271;
    id v181 = v277;
    id v182 = v174;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v257(v265, v260, v177);
    uint64_t v183 = v175[17];
    uint64_t v184 = &v162[v183];
    uint64_t v185 = &v163[v183];
    *(void *)uint64_t v184 = *(void *)v185;
    *((void *)v184 + 1) = *((void *)v185 + 1);
    uint64_t v186 = v175[18];
    uint64_t v187 = &v162[v186];
    uint64_t v188 = &v163[v186];
    uint64_t v189 = sub_1DFDEF130();
    uint64_t v190 = *(void *)(v189 - 8);
    uint64_t v191 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48);
    swift_bridgeObjectRetain();
    if (v191(v188, 1, v189))
    {
LABEL_26:
      sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      memcpy(v187, v188, *(void *)(*(void *)(v232 - 8) + 64));
      goto LABEL_28;
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v187, v188, v189);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v190 + 56))(v187, 0, 1, v189);
LABEL_28:
  uint64_t v5 = v279;
  swift_storeEnumTagMultiPayload();
  uint64_t v233 = v282[7];
  uint64_t v234 = (void *)((char *)v284 + v233);
  uint64_t v235 = &v283[v233];
  sub_1DF004C0C((uint64_t)v284 + v233, type metadata accessor for FeedPaywallType);
  uint64_t v236 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v234, v235, *(void *)(*(void *)(v236 - 8) + 64));
  }
  else
  {
    void *v234 = *(void *)v235;
    sub_1DEC84AA4();
    uint64_t v238 = *(int *)(v237 + 48);
    uint64_t v239 = (char *)v234 + v238;
    id v240 = &v235[v238];
    uint64_t v241 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 16))(v239, v240, v241);
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

char *sub_1DF637154(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DFDF8C20();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  uint64_t v12 = a3[9];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  type metadata accessor for FeedPaywallModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *uint64_t v13 = *v14;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v16 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v17 = v16[5];
    uint64_t v18 = &v13[v17];
    uint64_t v19 = &v14[v17];
    uint64_t v20 = sub_1DFDE7220();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *(void *)&v13[v16[6]] = *(void *)&v14[v16[6]];
    *(void *)&v13[v16[7]] = *(void *)&v14[v16[7]];
    *(void *)&v13[v16[8]] = *(void *)&v14[v16[8]];
    *(void *)&v13[v16[9]] = *(void *)&v14[v16[9]];
    *(void *)&v13[v16[10]] = *(void *)&v14[v16[10]];
    *(void *)&v13[v16[11]] = *(void *)&v14[v16[11]];
    *(void *)&v13[v16[12]] = *(void *)&v14[v16[12]];
    *(void *)&v13[v16[13]] = *(void *)&v14[v16[13]];
    *(void *)&v13[v16[14]] = *(void *)&v14[v16[14]];
    *(void *)&v13[v16[15]] = *(void *)&v14[v16[15]];
    *(void *)&v13[v16[16]] = *(void *)&v14[v16[16]];
    *(void *)&v13[v16[17]] = *(void *)&v14[v16[17]];
    *(void *)&v13[v16[18]] = *(void *)&v14[v16[18]];
    *(_OWORD *)&v13[v16[19]] = *(_OWORD *)&v14[v16[19]];
    *(_OWORD *)&v13[v16[20]] = *(_OWORD *)&v14[v16[20]];
    *(_OWORD *)&v13[v16[21]] = *(_OWORD *)&v14[v16[21]];
    uint64_t v35 = v16[22];
    id v36 = &v13[v35];
    uint64_t v37 = &v14[v35];
    uint64_t v38 = sub_1DFDEF360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
    *(_OWORD *)&v13[v16[23]] = *(_OWORD *)&v14[v16[23]];
    uint64_t v39 = v16[24];
    id v30 = &v13[v39];
    id v31 = &v14[v39];
    uint64_t v32 = sub_1DFDEF130();
    uint64_t v33 = *(void *)(v32 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
      goto LABEL_8;
    }
LABEL_5:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_9;
  }
  *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
  uint64_t v23 = *((void *)v14 + 8);
  *((void *)v13 + 7) = *((void *)v14 + 7);
  *((void *)v13 + 8) = v23;
  *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
  uint64_t v24 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v25 = v24[16];
  uint64_t v26 = &v13[v25];
  long long v27 = &v14[v25];
  uint64_t v28 = sub_1DFDEF360();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  *(_OWORD *)&v13[v24[17]] = *(_OWORD *)&v14[v24[17]];
  uint64_t v29 = v24[18];
  id v30 = &v13[v29];
  id v31 = &v14[v29];
  uint64_t v32 = sub_1DFDEF130();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
    goto LABEL_5;
  }
LABEL_8:
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_9:
  swift_storeEnumTagMultiPayload();
  id v108 = (int *)type metadata accessor for FeedPaywallConfig();
  uint64_t v40 = v108[5];
  uint64_t v41 = &v13[v40];
  uint64_t v42 = &v14[v40];
  int v43 = swift_getEnumCaseMultiPayload();
  char *v41 = *v42;
  if (v43 == 1)
  {
    uint64_t v44 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v45 = v44[5];
    uint64_t v46 = &v41[v45];
    uint64_t v47 = &v42[v45];
    uint64_t v48 = sub_1DFDE7220();
    uint64_t v49 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    *(void *)&v41[v44[6]] = *(void *)&v42[v44[6]];
    *(void *)&v41[v44[7]] = *(void *)&v42[v44[7]];
    *(void *)&v41[v44[8]] = *(void *)&v42[v44[8]];
    *(void *)&v41[v44[9]] = *(void *)&v42[v44[9]];
    *(void *)&v41[v44[10]] = *(void *)&v42[v44[10]];
    *(void *)&v41[v44[11]] = *(void *)&v42[v44[11]];
    *(void *)&v41[v44[12]] = *(void *)&v42[v44[12]];
    *(void *)&v41[v44[13]] = *(void *)&v42[v44[13]];
    *(void *)&v41[v44[14]] = *(void *)&v42[v44[14]];
    *(void *)&v41[v44[15]] = *(void *)&v42[v44[15]];
    *(void *)&v41[v44[16]] = *(void *)&v42[v44[16]];
    *(void *)&v41[v44[17]] = *(void *)&v42[v44[17]];
    *(void *)&v41[v44[18]] = *(void *)&v42[v44[18]];
    *(_OWORD *)&v41[v44[19]] = *(_OWORD *)&v42[v44[19]];
    *(_OWORD *)&v41[v44[20]] = *(_OWORD *)&v42[v44[20]];
    *(_OWORD *)&v41[v44[21]] = *(_OWORD *)&v42[v44[21]];
    uint64_t v63 = v44[22];
    uint64_t v64 = &v41[v63];
    uint64_t v65 = &v42[v63];
    uint64_t v66 = sub_1DFDEF360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
    *(_OWORD *)&v41[v44[23]] = *(_OWORD *)&v42[v44[23]];
    uint64_t v67 = v44[24];
    uint64_t v58 = &v41[v67];
    uint64_t v59 = &v42[v67];
    uint64_t v68 = sub_1DFDEF130();
    uint64_t v69 = *(void *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v59, 1, v68)) {
      goto LABEL_13;
    }
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v58, v59, v68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v58, 0, 1, v68);
  }
  else
  {
    *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v42 + 40);
    uint64_t v51 = *((void *)v42 + 8);
    *((void *)v41 + 7) = *((void *)v42 + 7);
    *((void *)v41 + 8) = v51;
    *(_OWORD *)(v41 + 72) = *(_OWORD *)(v42 + 72);
    *(_OWORD *)(v41 + 88) = *(_OWORD *)(v42 + 88);
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v42 + 104);
    uint64_t v52 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v53 = v52[16];
    uint64_t v54 = &v41[v53];
    uint64_t v55 = &v42[v53];
    uint64_t v56 = sub_1DFDEF360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
    *(_OWORD *)&v41[v52[17]] = *(_OWORD *)&v42[v52[17]];
    uint64_t v57 = v52[18];
    uint64_t v58 = &v41[v57];
    uint64_t v59 = &v42[v57];
    uint64_t v60 = sub_1DFDEF130();
    uint64_t v61 = *(void *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
LABEL_13:
      sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
      goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
LABEL_19:
  swift_storeEnumTagMultiPayload();
  uint64_t v70 = v108[6];
  uint64_t v71 = &v13[v70];
  uint64_t v72 = &v14[v70];
  int v73 = swift_getEnumCaseMultiPayload();
  *uint64_t v71 = *v72;
  if (v73 == 1)
  {
    id v74 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v75 = v74[5];
    id v76 = &v71[v75];
    id v77 = &v72[v75];
    uint64_t v78 = sub_1DFDE7220();
    uint64_t v79 = *(void *)(v78 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
    }
    *(void *)&v71[v74[6]] = *(void *)&v72[v74[6]];
    *(void *)&v71[v74[7]] = *(void *)&v72[v74[7]];
    *(void *)&v71[v74[8]] = *(void *)&v72[v74[8]];
    *(void *)&v71[v74[9]] = *(void *)&v72[v74[9]];
    *(void *)&v71[v74[10]] = *(void *)&v72[v74[10]];
    *(void *)&v71[v74[11]] = *(void *)&v72[v74[11]];
    *(void *)&v71[v74[12]] = *(void *)&v72[v74[12]];
    *(void *)&v71[v74[13]] = *(void *)&v72[v74[13]];
    *(void *)&v71[v74[14]] = *(void *)&v72[v74[14]];
    *(void *)&v71[v74[15]] = *(void *)&v72[v74[15]];
    *(void *)&v71[v74[16]] = *(void *)&v72[v74[16]];
    *(void *)&v71[v74[17]] = *(void *)&v72[v74[17]];
    *(void *)&v71[v74[18]] = *(void *)&v72[v74[18]];
    *(_OWORD *)&v71[v74[19]] = *(_OWORD *)&v72[v74[19]];
    *(_OWORD *)&v71[v74[20]] = *(_OWORD *)&v72[v74[20]];
    *(_OWORD *)&v71[v74[21]] = *(_OWORD *)&v72[v74[21]];
    uint64_t v93 = v74[22];
    uint64_t v94 = &v71[v93];
    uint64_t v95 = &v72[v93];
    uint64_t v96 = sub_1DFDEF360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
    *(_OWORD *)&v71[v74[23]] = *(_OWORD *)&v72[v74[23]];
    uint64_t v97 = v74[24];
    id v88 = &v71[v97];
    uint64_t v89 = &v72[v97];
    uint64_t v90 = sub_1DFDEF130();
    uint64_t v91 = *(void *)(v90 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90)) {
      goto LABEL_26;
    }
LABEL_23:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
    goto LABEL_27;
  }
  *(_OWORD *)(v71 + 8) = *(_OWORD *)(v72 + 8);
  *(_OWORD *)(v71 + 24) = *(_OWORD *)(v72 + 24);
  *(_OWORD *)(v71 + 40) = *(_OWORD *)(v72 + 40);
  uint64_t v81 = *((void *)v72 + 8);
  *((void *)v71 + 7) = *((void *)v72 + 7);
  *((void *)v71 + 8) = v81;
  *(_OWORD *)(v71 + 72) = *(_OWORD *)(v72 + 72);
  *(_OWORD *)(v71 + 88) = *(_OWORD *)(v72 + 88);
  *(_OWORD *)(v71 + 104) = *(_OWORD *)(v72 + 104);
  id v82 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v83 = v82[16];
  uint64_t v84 = &v71[v83];
  id v85 = &v72[v83];
  uint64_t v86 = sub_1DFDEF360();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
  *(_OWORD *)&v71[v82[17]] = *(_OWORD *)&v72[v82[17]];
  uint64_t v87 = v82[18];
  id v88 = &v71[v87];
  uint64_t v89 = &v72[v87];
  uint64_t v90 = sub_1DFDEF130();
  uint64_t v91 = *(void *)(v90 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90)) {
    goto LABEL_23;
  }
LABEL_26:
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
LABEL_27:
  swift_storeEnumTagMultiPayload();
  uint64_t v98 = v108[7];
  uint64_t v99 = &v13[v98];
  uint64_t v100 = &v14[v98];
  uint64_t v101 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v99 = *(void *)v100;
    sub_1DEC84AA4();
    uint64_t v103 = *(int *)(v102 + 48);
    uint64_t v104 = &v99[v103];
    uint64_t v105 = &v100[v103];
    uint64_t v106 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1DF638188(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1DFDF8C20();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  if (a1 == a2)
  {
    type metadata accessor for FeedPaywallConfig();
    return a1;
  }
  uint64_t v13 = a3[9];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  sub_1DF004C0C((uint64_t)&a1[v13], type metadata accessor for FeedPaywallModel);
  type metadata accessor for FeedPaywallModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  char *v14 = *v15;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = sub_1DFDE7220();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    *(void *)&v14[v17[6]] = *(void *)&v15[v17[6]];
    *(void *)&v14[v17[7]] = *(void *)&v15[v17[7]];
    *(void *)&v14[v17[8]] = *(void *)&v15[v17[8]];
    *(void *)&v14[v17[9]] = *(void *)&v15[v17[9]];
    *(void *)&v14[v17[10]] = *(void *)&v15[v17[10]];
    *(void *)&v14[v17[11]] = *(void *)&v15[v17[11]];
    *(void *)&v14[v17[12]] = *(void *)&v15[v17[12]];
    *(void *)&v14[v17[13]] = *(void *)&v15[v17[13]];
    *(void *)&v14[v17[14]] = *(void *)&v15[v17[14]];
    *(void *)&v14[v17[15]] = *(void *)&v15[v17[15]];
    *(void *)&v14[v17[16]] = *(void *)&v15[v17[16]];
    *(void *)&v14[v17[17]] = *(void *)&v15[v17[17]];
    *(void *)&v14[v17[18]] = *(void *)&v15[v17[18]];
    *(_OWORD *)&v14[v17[19]] = *(_OWORD *)&v15[v17[19]];
    *(_OWORD *)&v14[v17[20]] = *(_OWORD *)&v15[v17[20]];
    *(_OWORD *)&v14[v17[21]] = *(_OWORD *)&v15[v17[21]];
    uint64_t v36 = v17[22];
    uint64_t v37 = &v14[v36];
    uint64_t v38 = &v15[v36];
    uint64_t v39 = sub_1DFDEF360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    *(_OWORD *)&v14[v17[23]] = *(_OWORD *)&v15[v17[23]];
    uint64_t v40 = v17[24];
    id v31 = &v14[v40];
    uint64_t v32 = &v15[v40];
    uint64_t v33 = sub_1DFDEF130();
    uint64_t v34 = *(void *)(v33 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33)) {
      goto LABEL_10;
    }
LABEL_7:
    sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_11;
  }
  *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
  uint64_t v24 = *((void *)v15 + 8);
  *((void *)v14 + 7) = *((void *)v15 + 7);
  *((void *)v14 + 8) = v24;
  *(_OWORD *)(v14 + 72) = *(_OWORD *)(v15 + 72);
  *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
  *(_OWORD *)(v14 + 104) = *(_OWORD *)(v15 + 104);
  uint64_t v25 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
  uint64_t v26 = v25[16];
  long long v27 = &v14[v26];
  uint64_t v28 = &v15[v26];
  uint64_t v29 = sub_1DFDEF360();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  *(_OWORD *)&v14[v25[17]] = *(_OWORD *)&v15[v25[17]];
  uint64_t v30 = v25[18];
  id v31 = &v14[v30];
  uint64_t v32 = &v15[v30];
  uint64_t v33 = sub_1DFDEF130();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33)) {
    goto LABEL_7;
  }
LABEL_10:
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_11:
  swift_storeEnumTagMultiPayload();
  id v109 = (int *)type metadata accessor for FeedPaywallConfig();
  uint64_t v41 = v109[5];
  uint64_t v42 = &v14[v41];
  int v43 = &v15[v41];
  sub_1DF004C0C((uint64_t)&v14[v41], type metadata accessor for FeedPaywallModel);
  int v44 = swift_getEnumCaseMultiPayload();
  *uint64_t v42 = *v43;
  if (v44 == 1)
  {
    uint64_t v45 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v46 = v45[5];
    uint64_t v47 = &v42[v46];
    uint64_t v48 = &v43[v46];
    uint64_t v49 = sub_1DFDE7220();
    uint64_t v50 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    *(void *)&v42[v45[6]] = *(void *)&v43[v45[6]];
    *(void *)&v42[v45[7]] = *(void *)&v43[v45[7]];
    *(void *)&v42[v45[8]] = *(void *)&v43[v45[8]];
    *(void *)&v42[v45[9]] = *(void *)&v43[v45[9]];
    *(void *)&v42[v45[10]] = *(void *)&v43[v45[10]];
    *(void *)&v42[v45[11]] = *(void *)&v43[v45[11]];
    *(void *)&v42[v45[12]] = *(void *)&v43[v45[12]];
    *(void *)&v42[v45[13]] = *(void *)&v43[v45[13]];
    *(void *)&v42[v45[14]] = *(void *)&v43[v45[14]];
    *(void *)&v42[v45[15]] = *(void *)&v43[v45[15]];
    *(void *)&v42[v45[16]] = *(void *)&v43[v45[16]];
    *(void *)&v42[v45[17]] = *(void *)&v43[v45[17]];
    *(void *)&v42[v45[18]] = *(void *)&v43[v45[18]];
    *(_OWORD *)&v42[v45[19]] = *(_OWORD *)&v43[v45[19]];
    *(_OWORD *)&v42[v45[20]] = *(_OWORD *)&v43[v45[20]];
    *(_OWORD *)&v42[v45[21]] = *(_OWORD *)&v43[v45[21]];
    uint64_t v64 = v45[22];
    uint64_t v65 = &v42[v64];
    uint64_t v66 = &v43[v64];
    uint64_t v67 = sub_1DFDEF360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
    *(_OWORD *)&v42[v45[23]] = *(_OWORD *)&v43[v45[23]];
    uint64_t v68 = v45[24];
    uint64_t v59 = &v42[v68];
    uint64_t v60 = &v43[v68];
    uint64_t v69 = sub_1DFDEF130();
    uint64_t v70 = *(void *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v60, 1, v69)) {
      goto LABEL_15;
    }
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v59, v60, v69);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v59, 0, 1, v69);
  }
  else
  {
    *(_OWORD *)(v42 + 8) = *(_OWORD *)(v43 + 8);
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
    *(_OWORD *)(v42 + 40) = *(_OWORD *)(v43 + 40);
    uint64_t v52 = *((void *)v43 + 8);
    *((void *)v42 + 7) = *((void *)v43 + 7);
    *((void *)v42 + 8) = v52;
    *(_OWORD *)(v42 + 72) = *(_OWORD *)(v43 + 72);
    *(_OWORD *)(v42 + 88) = *(_OWORD *)(v43 + 88);
    *(_OWORD *)(v42 + 104) = *(_OWORD *)(v43 + 104);
    uint64_t v53 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v54 = v53[16];
    uint64_t v55 = &v42[v54];
    uint64_t v56 = &v43[v54];
    uint64_t v57 = sub_1DFDEF360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
    *(_OWORD *)&v42[v53[17]] = *(_OWORD *)&v43[v53[17]];
    uint64_t v58 = v53[18];
    uint64_t v59 = &v42[v58];
    uint64_t v60 = &v43[v58];
    uint64_t v61 = sub_1DFDEF130();
    uint64_t v62 = *(void *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
    {
LABEL_15:
      sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
      goto LABEL_21;
    }
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
LABEL_21:
  swift_storeEnumTagMultiPayload();
  uint64_t v71 = v109[6];
  uint64_t v72 = &v14[v71];
  int v73 = &v15[v71];
  sub_1DF004C0C((uint64_t)&v14[v71], type metadata accessor for FeedPaywallModel);
  int v74 = swift_getEnumCaseMultiPayload();
  char *v72 = *v73;
  if (v74 == 1)
  {
    uint64_t v75 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
    uint64_t v76 = v75[5];
    id v77 = &v72[v76];
    uint64_t v78 = &v73[v76];
    uint64_t v79 = sub_1DFDE7220();
    uint64_t v80 = *(void *)(v79 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
    {
      sub_1DF001B00(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
    }
    *(void *)&v72[v75[6]] = *(void *)&v73[v75[6]];
    *(void *)&v72[v75[7]] = *(void *)&v73[v75[7]];
    *(void *)&v72[v75[8]] = *(void *)&v73[v75[8]];
    *(void *)&v72[v75[9]] = *(void *)&v73[v75[9]];
    *(void *)&v72[v75[10]] = *(void *)&v73[v75[10]];
    *(void *)&v72[v75[11]] = *(void *)&v73[v75[11]];
    *(void *)&v72[v75[12]] = *(void *)&v73[v75[12]];
    *(void *)&v72[v75[13]] = *(void *)&v73[v75[13]];
    *(void *)&v72[v75[14]] = *(void *)&v73[v75[14]];
    *(void *)&v72[v75[15]] = *(void *)&v73[v75[15]];
    *(void *)&v72[v75[16]] = *(void *)&v73[v75[16]];
    *(void *)&v72[v75[17]] = *(void *)&v73[v75[17]];
    *(void *)&v72[v75[18]] = *(void *)&v73[v75[18]];
    *(_OWORD *)&v72[v75[19]] = *(_OWORD *)&v73[v75[19]];
    *(_OWORD *)&v72[v75[20]] = *(_OWORD *)&v73[v75[20]];
    *(_OWORD *)&v72[v75[21]] = *(_OWORD *)&v73[v75[21]];
    uint64_t v93 = v75[22];
    uint64_t v94 = &v72[v93];
    uint64_t v95 = &v73[v93];
    uint64_t v96 = sub_1DFDEF360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
    *(_OWORD *)&v72[v75[23]] = *(_OWORD *)&v73[v75[23]];
    uint64_t v97 = v75[24];
    uint64_t v89 = &v72[v97];
    uint64_t v90 = &v73[v97];
    uint64_t v91 = sub_1DFDEF130();
    uint64_t v92 = *(void *)(v91 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91)) {
      goto LABEL_28;
    }
  }
  else
  {
    *(_OWORD *)(v72 + 8) = *(_OWORD *)(v73 + 8);
    *(_OWORD *)(v72 + 24) = *(_OWORD *)(v73 + 24);
    *(_OWORD *)(v72 + 40) = *(_OWORD *)(v73 + 40);
    uint64_t v82 = *((void *)v73 + 8);
    *((void *)v72 + 7) = *((void *)v73 + 7);
    *((void *)v72 + 8) = v82;
    *(_OWORD *)(v72 + 72) = *(_OWORD *)(v73 + 72);
    *(_OWORD *)(v72 + 88) = *(_OWORD *)(v73 + 88);
    *(_OWORD *)(v72 + 104) = *(_OWORD *)(v73 + 104);
    uint64_t v83 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
    uint64_t v84 = v83[16];
    id v85 = &v72[v84];
    uint64_t v86 = &v73[v84];
    uint64_t v87 = sub_1DFDEF360();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
    *(_OWORD *)&v72[v83[17]] = *(_OWORD *)&v73[v83[17]];
    uint64_t v88 = v83[18];
    uint64_t v89 = &v72[v88];
    uint64_t v90 = &v73[v88];
    uint64_t v91 = sub_1DFDEF130();
    uint64_t v92 = *(void *)(v91 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
    {
LABEL_28:
      sub_1DF001B00(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
      memcpy(v89, v90, *(void *)(*(void *)(v98 - 8) + 64));
      goto LABEL_30;
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v89, v90, v91);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
LABEL_30:
  swift_storeEnumTagMultiPayload();
  uint64_t v99 = v109[7];
  uint64_t v100 = &v14[v99];
  uint64_t v101 = &v15[v99];
  sub_1DF004C0C((uint64_t)v100, type metadata accessor for FeedPaywallType);
  uint64_t v102 = type metadata accessor for FeedPaywallType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v100 = *(void *)v101;
    sub_1DEC84AA4();
    uint64_t v104 = *(int *)(v103 + 48);
    uint64_t v105 = &v100[v104];
    uint64_t v106 = &v101[v104];
    uint64_t v107 = sub_1DFDEEE80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DF639244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF639258);
}

uint64_t sub_1DF639258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF8C20();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedPaywallConfig();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DF639384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF639398);
}

uint64_t sub_1DF639398(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF8C20();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedPaywallConfig();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1DF6394C4(uint64_t a1)
{
  uint64_t v2 = sub_1DF639774(&qword_1EBADACD8);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DF63951C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FeedPaywallType(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDEEE80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1 + *(int *)(a1 + 36);
  uint64_t v11 = type metadata accessor for FeedPaywallConfig();
  sub_1DEEEFD48(v10 + *(int *)(v11 + 28), (uint64_t)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F823B8], v6);
  }
  else
  {
    sub_1DEC84AA4();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, &v5[*(int *)(v12 + 48)], v6);
  }
  uint64_t v13 = sub_1DFDEEE60();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

uint64_t sub_1DF6396D8()
{
  return sub_1DF639774(&qword_1EBADACE0);
}

uint64_t sub_1DF63970C()
{
  return sub_1DF639774(&qword_1EBADACF0);
}

uint64_t sub_1DF639740()
{
  return sub_1DF639774(&qword_1EBADACE8);
}

uint64_t sub_1DF639774(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PaywallMagazineFeedGroup();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SportsNavigationStyler()
{
  return self;
}

uint64_t initializeWithCopy for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.NotificationConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.NotificationConfig()
{
  return &type metadata for LegacyAudioFeedConfiguration.NotificationConfig;
}

uint64_t *sub_1DF639A74(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDE7600();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DEA21140(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v16 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DF639C50(uint64_t a1)
{
  uint64_t v2 = sub_1DFDE7600();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_1DF639D38(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA21140(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  *(void *)&a1[v10] = *(void *)&a2[v10];
  uint64_t v14 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1DF639EC4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA21140(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1DF63A0E0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA21140(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  return a1;
}

char *sub_1DF63A250(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA21140(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF63A448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA21140(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

void sub_1DF63A538(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA21140(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

uint64_t sub_1DF63A624()
{
  return sub_1DF63D8A4(&qword_1EBAC50C8, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig);
}

unint64_t sub_1DF63A670()
{
  unint64_t result = qword_1EAC2EF48;
  if (!qword_1EAC2EF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF48);
  }
  return result;
}

uint64_t sub_1DF63A6C4()
{
  if (*(void *)(v0 + 8))
  {
    sub_1DFE00120();
    swift_bridgeObjectRetain();
    sub_1DFDFDE20();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 24)) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1DFE00120();
    if (*(void *)(v0 + 40)) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1DFE00120();
  if (!*(void *)(v0 + 24)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1DFE00120();
  swift_bridgeObjectRetain();
  sub_1DFDFDE20();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
LABEL_4:
    sub_1DFE00120();
    swift_bridgeObjectRetain();
    sub_1DFDFDE20();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_1DFE00120();
LABEL_8:
  if (*(unsigned char *)(v0 + 56) == 1)
  {
    sub_1DFE00120();
  }
  else
  {
    sub_1DFE00120();
    sub_1DFE00130();
  }
  if (*(unsigned char *)(v0 + 72) == 1) {
    return sub_1DFE00120();
  }
  sub_1DFE00120();
  return sub_1DFE00130();
}

uint64_t sub_1DF63A818(void *a1)
{
  sub_1DF63E298(0, &qword_1EAC2EF58, (uint64_t (*)(void))sub_1DF63D5DC, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF63D5DC();
  sub_1DFE001A0();
  char v14 = 0;
  sub_1DFDFFDE0();
  if (!v1)
  {
    char v13 = 1;
    sub_1DFDFFDE0();
    char v12 = 2;
    sub_1DFDFFDE0();
    char v11 = 3;
    sub_1DFDFFE00();
    char v10 = 4;
    sub_1DFDFFE00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF63AA2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF2A1210(*a1, *a2);
}

uint64_t sub_1DF63AA38()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF63AAE8()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF63AB84()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF63AC30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF63CFD8();
  *a1 = result;
  return result;
}

void sub_1DF63AC60(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB00000000657461;
  unint64_t v4 = 0xEC0000006E6F6974;
  uint64_t v5 = 0x63416F546C6C6163;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7370756F7267;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x446873696C627570;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DF63ACCC()
{
  uint64_t v1 = 0x63416F546C6C6163;
  if (*v0 != 1) {
    uint64_t v1 = 0x7370756F7267;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x446873696C627570;
  }
}

uint64_t sub_1DF63AD34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF63CFD8();
  *a1 = result;
  return result;
}

uint64_t sub_1DF63AD5C(uint64_t a1)
{
  unint64_t v2 = sub_1DF63D630();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF63AD98(uint64_t a1)
{
  unint64_t v2 = sub_1DF63D630();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF63ADD4()
{
  return 0x656C746974;
}

uint64_t sub_1DF63ADE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DFDFFF50();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DF63AE78(uint64_t a1)
{
  unint64_t v2 = sub_1DF63E244();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF63AEB4(uint64_t a1)
{
  unint64_t v2 = sub_1DF63E244();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF63AEF0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1DF63E298(0, &qword_1EBAF6E78, (uint64_t (*)(void))sub_1DF63E244, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF63E244();
  sub_1DFE00190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1DFDFFCF0();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1DF63B0A0(void *a1)
{
  sub_1DF63E298(0, &qword_1EAC2EF90, (uint64_t (*)(void))sub_1DF63E244, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF63E244();
  sub_1DFE001A0();
  sub_1DFDFFDE0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DF63B208()
{
  unint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656C746974627573;
      break;
    case 2:
      unint64_t result = 2036625250;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    case 4:
      unint64_t result = 0x65536F54656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF63B2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF63D024(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF63B2D8(uint64_t a1)
{
  unint64_t v2 = sub_1DF63D5DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF63B314(uint64_t a1)
{
  unint64_t v2 = sub_1DF63D5DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1DF63B350@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DF63D230(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1DF63B39C(void *a1)
{
  return sub_1DF63A818(a1);
}

BOOL sub_1DF63B3B4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  _OWORD v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 57);
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 57);
  long long v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_1DF63CE94((uint64_t)v7, (uint64_t)v9);
}

uint64_t sub_1DF63B410()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF63B454()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF63B490@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  sub_1DEA21140(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v17 - v5;
  sub_1DF63E298(0, &qword_1EBACA740, (uint64_t (*)(void))sub_1DF63D630, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v20 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF63D630();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v11 = v19;
    sub_1DFDE7600();
    LOBYTE(v21) = 0;
    sub_1DF63D8A4((unint64_t *)&unk_1EBAA6D90, MEMORY[0x1E4F27928]);
    sub_1DFDFFD40();
    char v23 = 1;
    sub_1DEF40EA0();
    sub_1DFDFFD40();
    uint64_t v13 = v22;
    uint64_t v17 = v21;
    uint64_t v18 = v6;
    if (v22 == 1) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = v22;
    }
    type metadata accessor for LegacyAudioFeedGroupConfig();
    LOBYTE(v21) = 2;
    sub_1DF63D8A4(&qword_1EBAC50E8, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig);
    uint64_t v15 = sub_1DFDFFCC0();
    if (v13 == 1) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = v17;
    }
    sub_1DF63B7E8((uint64_t)v18, v16, v14, v15, 0, v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF63B7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v11 = a5 & 1;
  uint64_t v12 = type metadata accessor for LegacyAudioFeedGroupConfig();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA1F784(a1, a6);
  uint64_t v16 = (int *)type metadata accessor for LegacyAudioFeedConfiguration();
  uint64_t v17 = (void *)(a6 + v16[5]);
  *uint64_t v17 = a2;
  v17[1] = a3;
  *(void *)(a6 + v16[6]) = a4;
  *(unsigned char *)(a6 + v16[7]) = v11;
  uint64_t v24 = MEMORY[0x1E4FBC868];
  uint64_t v18 = *(void *)(a4 + 16);
  if (v18)
  {
    uint64_t v19 = a4 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v20 = *(void *)(v13 + 72);
    swift_bridgeObjectRetain_n();
    do
    {
      sub_1DF63D684(v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
      sub_1DF63BC68(&v24, (uint64_t)v15, v11);
      sub_1DF63D6EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
      v19 += v20;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    uint64_t v21 = v24;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = MEMORY[0x1E4FBC868];
  }
  sub_1DEAEA868(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a6 + v16[8]) = v21;
  return result;
}

uint64_t sub_1DF63B9E4(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF63E298(0, &qword_1EAC2EF60, (uint64_t (*)(void))sub_1DF63D630, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF63D630();
  sub_1DFE001A0();
  LOBYTE(v12) = 0;
  sub_1DFDE7600();
  sub_1DF63D8A4(&qword_1EBAA6D78, MEMORY[0x1E4F27928]);
  sub_1DFDFFE30();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for LegacyAudioFeedConfiguration();
    long long v12 = *(_OWORD *)(v3 + *(int *)(v10 + 20));
    char v13 = 1;
    sub_1DEF410D8();
    sub_1DFDFFE80();
    *(void *)&long long v12 = *(void *)(v3 + *(int *)(v10 + 24));
    char v13 = 2;
    sub_1DEA21140(0, &qword_1EAC2EF68, (uint64_t (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig, MEMORY[0x1E4FBB320]);
    sub_1DF63D7D4();
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF63BC68(void *a1, uint64_t a2, char a3)
{
  uint64_t v170 = a1;
  uint64_t v5 = type metadata accessor for LegacyAudioEditorialHeroFeedGroupConfig();
  MEMORY[0x1F4188790](v5 - 8);
  *(void *)&long long v164 = (char *)v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LegacyAudioDailyBriefingInTodayFeedGroupConfig();
  MEMORY[0x1F4188790](v7 - 8);
  id v167 = (void *)((char *)v161 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for LegacyAudioConfigArticle(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v169 = (uint64_t)v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v168 = (uint64_t)v161 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v161 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v161 - v18;
  uint64_t v20 = type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v166 = (void *)((char *)v161 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for LegacyAudioFeedGroupConfig();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (void *)((char *)v161 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF63D684(a2, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v26 = v167;
      sub_1DF63DC58((uint64_t)v24, (uint64_t)v167, (uint64_t (*)(void))type metadata accessor for LegacyAudioDailyBriefingInTodayFeedGroupConfig);
      if ((a3 & 1) == 0) {
        goto LABEL_85;
      }
      uint64_t v60 = v26[3];
      uint64_t v61 = *(void *)(v60 + 16);
      if (!v61) {
        goto LABEL_85;
      }
      uint64_t v62 = *(unsigned __int8 *)(v10 + 80);
      uint64_t v63 = (uint64_t *)(v60 + ((v62 + 32) & ~v62));
      uint64_t v64 = *(void *)(v10 + 72);
      uint64_t v168 = (v62 + 16) & ~v62;
      uint64_t v169 = v64;
      uint64_t v165 = v62 | 7;
      uint64_t v166 = (void *)(v168 + v11);
      uint64_t v162 = v60;
      swift_bridgeObjectRetain();
      long long v164 = xmmword_1DFE0B250;
      uint64_t v65 = v170;
      *(void *)&long long v163 = v17;
      while (1)
      {
        uint64_t v68 = *v63;
        uint64_t v67 = v63[1];
        if (*(void *)(*v65 + 16))
        {
          swift_bridgeObjectRetain();
          sub_1DEA6D930(v68, v67);
          char v70 = v69;
          swift_bridgeObjectRelease();
          if (v70)
          {
            sub_1DE9B646C();
            uint64_t v71 = (void *)sub_1DFDFF620();
            sub_1DFDFEA40();
            sub_1DEA21140(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
            uint64_t v72 = swift_allocObject();
            *(_OWORD *)(v72 + 16) = v164;
            *(void *)(v72 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v72 + 64) = sub_1DEA08668();
            *(void *)(v72 + 32) = v68;
            *(void *)(v72 + 40) = v67;
            swift_bridgeObjectRetain();
            sub_1DFDF00C0();

            swift_bridgeObjectRelease();
            uint64_t v65 = v170;
            goto LABEL_27;
          }
        }
        sub_1DF63D684((uint64_t)v63, (uint64_t)v17, type metadata accessor for LegacyAudioConfigArticle);
        uint64_t v73 = swift_allocObject();
        sub_1DF63DC58((uint64_t)v17, v73 + v168, type metadata accessor for LegacyAudioConfigArticle);
        swift_bridgeObjectRetain();
        int v74 = v170;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v76 = v68;
        char v77 = isUniquelyReferenced_nonNull_native;
        uint64_t v171 = (void *)*v74;
        uint64_t v78 = v171;
        *int v74 = 0x8000000000000000;
        uint64_t v79 = v76;
        unint64_t v81 = sub_1DEA6D930(v76, v67);
        uint64_t v82 = v78[2];
        BOOL v83 = (v80 & 1) == 0;
        uint64_t v84 = v82 + v83;
        if (__OFADD__(v82, v83)) {
          goto LABEL_91;
        }
        char v85 = v80;
        if (v78[3] >= v84)
        {
          if (v77)
          {
            uint64_t v88 = v171;
            if ((v80 & 1) == 0) {
              goto LABEL_38;
            }
          }
          else
          {
            sub_1DF65F77C();
            uint64_t v88 = v171;
            if ((v85 & 1) == 0) {
              goto LABEL_38;
            }
          }
        }
        else
        {
          sub_1DF65747C(v84, v77);
          unint64_t v86 = sub_1DEA6D930(v79, v67);
          if ((v85 & 1) != (v87 & 1)) {
            goto LABEL_96;
          }
          unint64_t v81 = v86;
          uint64_t v88 = v171;
          if ((v85 & 1) == 0)
          {
LABEL_38:
            v88[(v81 >> 6) + 8] |= 1 << v81;
            uint64_t v89 = (uint64_t *)(v88[6] + 16 * v81);
            *uint64_t v89 = v79;
            v89[1] = v67;
            uint64_t v90 = (void *)(v88[7] + 16 * v81);
            *uint64_t v90 = sub_1DF63D750;
            v90[1] = v73;
            uint64_t v91 = v88[2];
            BOOL v58 = __OFADD__(v91, 1);
            uint64_t v92 = v91 + 1;
            if (v58) {
              goto LABEL_95;
            }
            v88[2] = v92;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          }
        }
        uint64_t v66 = (void *)(v88[7] + 16 * v81);
        swift_release();
        *uint64_t v66 = sub_1DF63D750;
        v66[1] = v73;
LABEL_26:
        uint64_t v65 = v170;
        *uint64_t v170 = v88;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v17 = (char *)v163;
LABEL_27:
        uint64_t v63 = (uint64_t *)((char *)v63 + v169);
        if (!--v61)
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = v167;
LABEL_85:
          uint64_t v160 = type metadata accessor for LegacyAudioDailyBriefingInTodayFeedGroupConfig;
          goto LABEL_86;
        }
      }
    case 2u:
      uint64_t v93 = v164;
      sub_1DF63DC58((uint64_t)v24, v164, (uint64_t (*)(void))type metadata accessor for LegacyAudioEditorialHeroFeedGroupConfig);
      uint64_t v94 = *(void *)(v93 + 24);
      uint64_t v95 = *(void *)(v94 + 16);
      if (!v95) {
        goto LABEL_79;
      }
      uint64_t v96 = *(unsigned __int8 *)(v10 + 80);
      uint64_t v97 = (uint64_t *)(v94 + ((v96 + 32) & ~v96));
      uint64_t v169 = *(void *)(v10 + 72);
      id v167 = (void *)((v96 + 16) & ~v96);
      uint64_t v165 = v96 | 7;
      uint64_t v166 = (void *)((char *)v167 + v11);
      uint64_t v162 = v94;
      swift_bridgeObjectRetain();
      long long v163 = xmmword_1DFE0B250;
      uint64_t v98 = v170;
      break;
    case 3u:
      uint64_t v124 = v24[1];
      uint64_t v123 = v24[2];
      uint64_t v126 = v24[6];
      uint64_t v125 = v24[7];
      uint64_t v127 = *(void *)(v125 + 16);
      if (v127)
      {
        v161[1] = v24[4];
        v161[2] = v124;
        uint64_t v162 = v123;
        *(void *)&long long v163 = v126;
        uint64_t v128 = *(unsigned __int8 *)(v10 + 80);
        uint64_t v129 = (uint64_t *)(v125 + ((v128 + 32) & ~v128));
        uint64_t v130 = *(void *)(v10 + 72);
        id v167 = (void *)((v128 + 16) & ~v128);
        uint64_t v168 = v130;
        uint64_t v165 = v128 | 7;
        uint64_t v166 = (void *)((char *)v167 + v11);
        v161[0] = v125;
        swift_bridgeObjectRetain();
        long long v164 = xmmword_1DFE0B250;
        uint64_t v131 = v170;
        do
        {
          uint64_t v134 = *v129;
          uint64_t v133 = v129[1];
          if (*(void *)(*v131 + 16)
            && (swift_bridgeObjectRetain(),
                sub_1DEA6D930(v134, v133),
                char v136 = v135,
                swift_bridgeObjectRelease(),
                (v136 & 1) != 0))
          {
            sub_1DE9B646C();
            v137 = (void *)sub_1DFDFF620();
            sub_1DFDFEA40();
            sub_1DEA21140(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
            uint64_t v138 = swift_allocObject();
            *(_OWORD *)(v138 + 16) = v164;
            *(void *)(v138 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v138 + 64) = sub_1DEA08668();
            *(void *)(v138 + 32) = v134;
            *(void *)(v138 + 40) = v133;
            swift_bridgeObjectRetain();
            sub_1DFDF00C0();
          }
          else
          {
            uint64_t v139 = v169;
            sub_1DF63D684((uint64_t)v129, v169, type metadata accessor for LegacyAudioConfigArticle);
            uint64_t v140 = swift_allocObject();
            sub_1DF63DC58(v139, (uint64_t)v167 + v140, type metadata accessor for LegacyAudioConfigArticle);
            swift_bridgeObjectRetain();
            char v141 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v142 = v131;
            char v143 = v141;
            uint64_t v171 = (void *)*v142;
            uint64_t v144 = v171;
            *uint64_t v142 = 0x8000000000000000;
            unint64_t v146 = sub_1DEA6D930(v134, v133);
            uint64_t v147 = v144[2];
            BOOL v148 = (v145 & 1) == 0;
            uint64_t v149 = v147 + v148;
            if (__OFADD__(v147, v148)) {
              goto LABEL_89;
            }
            char v150 = v145;
            if (v144[3] >= v149)
            {
              if ((v143 & 1) == 0) {
                sub_1DF65F77C();
              }
            }
            else
            {
              sub_1DF65747C(v149, v143);
              unint64_t v151 = sub_1DEA6D930(v134, v133);
              if ((v150 & 1) != (v152 & 1)) {
                goto LABEL_96;
              }
              unint64_t v146 = v151;
            }
            uint64_t v131 = v170;
            id v153 = v171;
            if (v150)
            {
              uint64_t v132 = (void *)(v171[7] + 16 * v146);
              swift_release();
              *uint64_t v132 = sub_1DF63D750;
              v132[1] = v140;
            }
            else
            {
              v171[(v146 >> 6) + 8] |= 1 << v146;
              id v154 = (uint64_t *)(v153[6] + 16 * v146);
              uint64_t *v154 = v134;
              v154[1] = v133;
              id v155 = (void *)(v153[7] + 16 * v146);
              void *v155 = sub_1DF63D750;
              v155[1] = v140;
              uint64_t v156 = v153[2];
              BOOL v58 = __OFADD__(v156, 1);
              uint64_t v157 = v156 + 1;
              if (v58) {
                goto LABEL_93;
              }
              v153[2] = v157;
              swift_bridgeObjectRetain();
            }
            void *v131 = v153;
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v129 = (uint64_t *)((char *)v129 + v168);
          --v127;
        }
        while (v127);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    case 4u:
    case 5u:
    case 6u:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    default:
      uint64_t v26 = v166;
      sub_1DF63DC58((uint64_t)v24, (uint64_t)v166, (uint64_t (*)(void))type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig);
      if (a3) {
        goto LABEL_83;
      }
      uint64_t v27 = *v26;
      uint64_t v28 = *(void *)(*v26 + 16);
      if (!v28) {
        goto LABEL_83;
      }
      uint64_t v29 = *(unsigned __int8 *)(v10 + 80);
      uint64_t v30 = (uint64_t *)(v27 + ((v29 + 32) & ~v29));
      uint64_t v31 = *(void *)(v10 + 72);
      id v167 = (void *)((v29 + 16) & ~v29);
      uint64_t v168 = v31;
      uint64_t v165 = (uint64_t)v167 + v11;
      *(void *)&long long v164 = v29 | 7;
      uint64_t v162 = v27;
      swift_bridgeObjectRetain();
      long long v163 = xmmword_1DFE0B250;
      uint64_t v32 = v170;
      do
      {
        uint64_t v35 = *v30;
        uint64_t v34 = v30[1];
        if (*(void *)(*v32 + 16)
          && (swift_bridgeObjectRetain(), sub_1DEA6D930(v35, v34),
                                          char v37 = v36,
                                          swift_bridgeObjectRelease(),
                                          (v37 & 1) != 0))
        {
          sub_1DE9B646C();
          uint64_t v38 = (void *)sub_1DFDFF620();
          sub_1DFDFEA40();
          sub_1DEA21140(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
          uint64_t v39 = v35;
          uint64_t v40 = swift_allocObject();
          *(_OWORD *)(v40 + 16) = v163;
          *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v40 + 64) = sub_1DEA08668();
          *(void *)(v40 + 32) = v39;
          *(void *)(v40 + 40) = v34;
          swift_bridgeObjectRetain();
          uint64_t v32 = v170;
          sub_1DFDF00C0();

          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v169 = v28;
          sub_1DF63D684((uint64_t)v30, (uint64_t)v19, type metadata accessor for LegacyAudioConfigArticle);
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = v19;
          sub_1DF63DC58((uint64_t)v19, (uint64_t)v167 + v41, type metadata accessor for LegacyAudioConfigArticle);
          swift_bridgeObjectRetain();
          char v43 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v171 = (void *)*v32;
          int v44 = v171;
          *uint64_t v32 = 0x8000000000000000;
          uint64_t v45 = v35;
          unint64_t v47 = sub_1DEA6D930(v35, v34);
          uint64_t v48 = v44[2];
          BOOL v49 = (v46 & 1) == 0;
          uint64_t v50 = v48 + v49;
          if (__OFADD__(v48, v49)) {
            goto LABEL_90;
          }
          char v51 = v46;
          if (v44[3] >= v50)
          {
            if ((v43 & 1) == 0) {
              sub_1DF65F77C();
            }
          }
          else
          {
            sub_1DF65747C(v50, v43);
            unint64_t v52 = sub_1DEA6D930(v45, v34);
            if ((v51 & 1) != (v53 & 1)) {
              goto LABEL_96;
            }
            unint64_t v47 = v52;
          }
          uint64_t v19 = v42;
          uint64_t v54 = v171;
          if (v51)
          {
            uint64_t v33 = (void *)(v171[7] + 16 * v47);
            swift_release();
            *uint64_t v33 = sub_1DF63D750;
            v33[1] = v41;
          }
          else
          {
            v171[(v47 >> 6) + 8] |= 1 << v47;
            uint64_t v55 = (uint64_t *)(v54[6] + 16 * v47);
            *uint64_t v55 = v45;
            v55[1] = v34;
            uint64_t v56 = (void *)(v54[7] + 16 * v47);
            *uint64_t v56 = sub_1DF63D750;
            v56[1] = v41;
            uint64_t v57 = v54[2];
            BOOL v58 = __OFADD__(v57, 1);
            uint64_t v59 = v57 + 1;
            if (v58) {
              goto LABEL_94;
            }
            v54[2] = v59;
            swift_bridgeObjectRetain();
          }
          uint64_t v32 = v170;
          *uint64_t v170 = v54;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v28 = v169;
        }
        uint64_t v30 = (uint64_t *)((char *)v30 + v168);
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      uint64_t v26 = v166;
LABEL_83:
      uint64_t v160 = type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig;
LABEL_86:
      uint64_t v158 = v160;
      uint64_t v159 = (uint64_t)v26;
      return sub_1DF63D6EC(v159, (uint64_t (*)(void))v158);
  }
  do
  {
    uint64_t v101 = *v97;
    uint64_t v100 = v97[1];
    if (!*(void *)(*v98 + 16)
      || (swift_bridgeObjectRetain(),
          sub_1DEA6D930(v101, v100),
          char v103 = v102,
          swift_bridgeObjectRelease(),
          (v103 & 1) == 0))
    {
      uint64_t v106 = v168;
      sub_1DF63D684((uint64_t)v97, v168, type metadata accessor for LegacyAudioConfigArticle);
      uint64_t v107 = swift_allocObject();
      sub_1DF63DC58(v106, (uint64_t)v167 + v107, type metadata accessor for LegacyAudioConfigArticle);
      swift_bridgeObjectRetain();
      char v108 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v171 = (void *)*v98;
      id v109 = v171;
      *uint64_t v98 = 0x8000000000000000;
      unint64_t v111 = sub_1DEA6D930(v101, v100);
      uint64_t v112 = v109[2];
      BOOL v113 = (v110 & 1) == 0;
      uint64_t v114 = v112 + v113;
      if (__OFADD__(v112, v113))
      {
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        sub_1DFE00000();
        __break(1u);
        JUMPOUT(0x1DF63CCE8);
      }
      char v115 = v110;
      if (v109[3] < v114)
      {
        sub_1DF65747C(v114, v108);
        unint64_t v116 = sub_1DEA6D930(v101, v100);
        if ((v115 & 1) != (v117 & 1)) {
          goto LABEL_96;
        }
        unint64_t v111 = v116;
        uint64_t v118 = v171;
        if ((v115 & 1) == 0) {
          goto LABEL_57;
        }
LABEL_44:
        uint64_t v99 = (void *)(v118[7] + 16 * v111);
        swift_release();
        void *v99 = sub_1DF63D750;
        v99[1] = v107;
LABEL_45:
        uint64_t v98 = v170;
        *uint64_t v170 = v118;
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      if (v108)
      {
        uint64_t v118 = v171;
        if (v110) {
          goto LABEL_44;
        }
      }
      else
      {
        sub_1DF65F77C();
        uint64_t v118 = v171;
        if (v115) {
          goto LABEL_44;
        }
      }
LABEL_57:
      v118[(v111 >> 6) + 8] |= 1 << v111;
      id v119 = (uint64_t *)(v118[6] + 16 * v111);
      *id v119 = v101;
      v119[1] = v100;
      uint64_t v120 = (void *)(v118[7] + 16 * v111);
      *uint64_t v120 = sub_1DF63D750;
      v120[1] = v107;
      uint64_t v121 = v118[2];
      BOOL v58 = __OFADD__(v121, 1);
      uint64_t v122 = v121 + 1;
      if (v58) {
        goto LABEL_92;
      }
      v118[2] = v122;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    sub_1DE9B646C();
    uint64_t v104 = (void *)sub_1DFDFF620();
    sub_1DFDFEA40();
    sub_1DEA21140(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v105 = swift_allocObject();
    *(_OWORD *)(v105 + 16) = v163;
    *(void *)(v105 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v105 + 64) = sub_1DEA08668();
    *(void *)(v105 + 32) = v101;
    *(void *)(v105 + 40) = v100;
    swift_bridgeObjectRetain();
    sub_1DFDF00C0();

    uint64_t v98 = v170;
LABEL_46:
    swift_bridgeObjectRelease();
    uint64_t v97 = (uint64_t *)((char *)v97 + v169);
    --v95;
  }
  while (v95);
  swift_bridgeObjectRelease();
LABEL_79:
  uint64_t v158 = type metadata accessor for LegacyAudioEditorialHeroFeedGroupConfig;
  uint64_t v159 = v164;
  return sub_1DF63D6EC(v159, (uint64_t (*)(void))v158);
}

uint64_t sub_1DF63CD04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF63B490(a1, a2);
}

uint64_t sub_1DF63CD1C(void *a1)
{
  return sub_1DF63B9E4(a1);
}

uint64_t sub_1DF63CD34(uint64_t a1, int a2)
{
  return sub_1DF63D8EC(a2);
}

uint64_t sub_1DF63CD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DEA21140(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1DEA1F784(v3, (uint64_t)&v14 - v8);
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(a2 + 20));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  LOBYTE(a2) = *(unsigned char *)(v3 + *(int *)(a2 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1DF63B7E8((uint64_t)v9, v11, v12, a1, a2, a3);
}

unint64_t sub_1DF63CE40()
{
  unint64_t result = qword_1EAC2EF50;
  if (!qword_1EAC2EF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF50);
  }
  return result;
}

BOOL sub_1DF63CE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (v7 = sub_1DFDFFF50(), BOOL result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v10 = *(void *)(a2 + 24);
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v9 != v10)
      {
        char v11 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v13 = *(void *)(a2 + 40);
    if (v12)
    {
      if (!v13) {
        return 0;
      }
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v12 != v13)
      {
        char v14 = sub_1DFDFFF50();
        BOOL result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v13)
    {
      return 0;
    }
    char v15 = *(unsigned char *)(a2 + 56);
    if (*(unsigned char *)(a1 + 56))
    {
      if (!*(unsigned char *)(a2 + 56)) {
        return 0;
      }
    }
    else
    {
      if (*(double *)(a1 + 48) != *(double *)(a2 + 48)) {
        char v15 = 1;
      }
      if (v15) {
        return 0;
      }
    }
    char v16 = *(unsigned char *)(a2 + 72);
    if ((*(unsigned char *)(a1 + 72) & 1) == 0)
    {
      if (*(double *)(a1 + 64) != *(double *)(a2 + 64)) {
        char v16 = 1;
      }
      return (v16 & 1) == 0;
    }
    return (*(unsigned char *)(a2 + 72) & 1) != 0;
  }
  return result;
}

uint64_t sub_1DF63CFD8()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DF63D024(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001DFEFE820 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65536F54656D6974 && a2 == 0xEA0000000000646ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1DF63D230@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v37 = a2;
  sub_1DF63E298(0, &qword_1EBAF6E80, (uint64_t (*)(void))sub_1DF63D5DC, (uint64_t)&type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v30 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF63D5DC();
  sub_1DFE00190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v36 = a1;
  uint64_t v9 = v6;
  char v42 = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1DFDFFCF0();
  uint64_t v13 = v12;
  char v41 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DFDFFCF0();
  uint64_t v35 = v15;
  uint64_t v33 = v14;
  uint64_t v34 = v11;
  char v40 = 2;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1DFDFFCF0();
  uint64_t v18 = v17;
  uint64_t v32 = v16;
  char v39 = 3;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1DFDFFD10();
  int v31 = v20;
  char v38 = 4;
  uint64_t v21 = sub_1DFDFFD10();
  uint64_t v22 = v8;
  char v24 = v23;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  swift_bridgeObjectRelease();
  uint64_t v25 = v19;
  uint64_t v26 = v18;
  uint64_t v27 = v35;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v29 = v37;
  uint64_t *v37 = v34;
  v29[1] = v13;
  v29[2] = v33;
  v29[3] = v27;
  v29[4] = v32;
  v29[5] = v26;
  v29[6] = v25;
  *((unsigned char *)v29 + 56) = v31 & 1;
  v29[8] = v21;
  *((unsigned char *)v29 + 72) = v24 & 1;
  return result;
}

unint64_t sub_1DF63D5DC()
{
  unint64_t result = qword_1EBAF6698;
  if (!qword_1EBAF6698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6698);
  }
  return result;
}

unint64_t sub_1DF63D630()
{
  unint64_t result = qword_1EBAC5DE8;
  if (!qword_1EBAC5DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC5DE8);
  }
  return result;
}

uint64_t sub_1DF63D684(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF63D6EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF63D760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEB37A34(a1, a2);
}

unint64_t sub_1DF63D7D4()
{
  unint64_t result = qword_1EAC2EF70;
  if (!qword_1EAC2EF70)
  {
    sub_1DEA21140(255, &qword_1EAC2EF68, (uint64_t (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig, MEMORY[0x1E4FBB320]);
    sub_1DF63D8A4(&qword_1EBAC50D8, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedGroupConfig);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF70);
  }
  return result;
}

uint64_t sub_1DF63D8A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF63D8EC(int a1)
{
  int v22 = a1;
  uint64_t v24 = type metadata accessor for LegacyAudioFeedGroupConfig();
  uint64_t v2 = *(void *)(v24 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v24);
  uint64_t v25 = (uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v21 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for LegacyAudioFeedConfiguration() + 24));
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  uint64_t v23 = v12;
  if (v12)
  {
    unint64_t v13 = 0;
    do
    {
      if (v13 >= *(void *)(v10 + 16))
      {
        __break(1u);
        JUMPOUT(0x1DF63DC3CLL);
      }
      unint64_t v14 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v15 = *(void *)(v2 + 72);
      unint64_t v16 = v13 + 1;
      sub_1DF63D684(v10 + v14 + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
      sub_1DF63D684((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1DF63D6EC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
          goto LABEL_4;
        case 3u:
          uint64_t v17 = *((void *)v7 + 6);
          v21[1] = *((void *)v7 + 2);
          v21[2] = v17;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_13;
        case 4u:
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v22) {
            goto LABEL_13;
          }
          goto LABEL_4;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v22 & 1) == 0) {
            goto LABEL_13;
          }
LABEL_4:
          sub_1DF63D6EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
          break;
        default:
          sub_1DF63D6EC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
LABEL_13:
          sub_1DF63DC58((uint64_t)v9, v25, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1DEDF8AD4(0, *(void *)(v11 + 16) + 1, 1);
          }
          uint64_t v11 = v26;
          unint64_t v19 = *(void *)(v26 + 16);
          unint64_t v18 = *(void *)(v26 + 24);
          if (v19 >= v18 >> 1)
          {
            sub_1DEDF8AD4(v18 > 1, v19 + 1, 1);
            uint64_t v11 = v26;
          }
          *(void *)(v11 + 16) = v19 + 1;
          sub_1DF63DC58(v25, v11 + v14 + v19 * v15, (uint64_t (*)(void))type metadata accessor for LegacyAudioFeedGroupConfig);
          break;
      }
      unint64_t v13 = v16;
    }
    while (v23 != v16);
    uint64_t v11 = v26;
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1DF63DC58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF63DD8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.CodingKeys()
{
  return &type metadata for LegacyAudioFeedConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF63DE90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys()
{
  return &type metadata for LegacyAudioFeedConfiguration.NotificationConfig.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.DailyBriefingKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF63DF94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.DailyBriefingKind()
{
  return &type metadata for LegacyAudioFeedConfiguration.DailyBriefingKind;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.CallToAction()
{
  return &type metadata for LegacyAudioFeedConfiguration.CallToAction;
}

unint64_t sub_1DF63DFE0()
{
  unint64_t result = qword_1EAC2EF78;
  if (!qword_1EAC2EF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF78);
  }
  return result;
}

unint64_t sub_1DF63E038()
{
  unint64_t result = qword_1EAC2EF80;
  if (!qword_1EAC2EF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF80);
  }
  return result;
}

unint64_t sub_1DF63E090()
{
  unint64_t result = qword_1EAC2EF88;
  if (!qword_1EAC2EF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF88);
  }
  return result;
}

unint64_t sub_1DF63E0E8()
{
  unint64_t result = qword_1EBAC5DF8;
  if (!qword_1EBAC5DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC5DF8);
  }
  return result;
}

unint64_t sub_1DF63E140()
{
  unint64_t result = qword_1EBAC5DF0;
  if (!qword_1EBAC5DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC5DF0);
  }
  return result;
}

unint64_t sub_1DF63E198()
{
  unint64_t result = qword_1EBAF66A8;
  if (!qword_1EBAF66A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF66A8);
  }
  return result;
}

unint64_t sub_1DF63E1F0()
{
  unint64_t result = qword_1EBAF66A0;
  if (!qword_1EBAF66A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF66A0);
  }
  return result;
}

unint64_t sub_1DF63E244()
{
  unint64_t result = qword_1EBAF6680;
  if (!qword_1EBAF6680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6680);
  }
  return result;
}

void sub_1DF63E298(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LegacyAudioFeedConfiguration.CallToAction.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF63E39CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioFeedConfiguration.CallToAction.CodingKeys()
{
  return &type metadata for LegacyAudioFeedConfiguration.CallToAction.CodingKeys;
}

unint64_t sub_1DF63E3D8()
{
  unint64_t result = qword_1EAC2EF98;
  if (!qword_1EAC2EF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EF98);
  }
  return result;
}

unint64_t sub_1DF63E430()
{
  unint64_t result = qword_1EBAF6690;
  if (!qword_1EBAF6690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6690);
  }
  return result;
}

unint64_t sub_1DF63E488()
{
  unint64_t result = qword_1EBAF6688;
  if (!qword_1EBAF6688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6688);
  }
  return result;
}

uint64_t sub_1DF63E4DC(uint64_t a1)
{
  sub_1DED4CCD8(0, (unint64_t *)&unk_1EBAEAD80, MEMORY[0x1E4FAAC40], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = sub_1DFDED4D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B750;
  uint64_t v8 = (void *)(v7 + v6);
  void *v8 = 0x6C656E6E616863;
  v8[1] = 0xE700000000000000;
  uint64_t v9 = *(void (**)(void))(v4 + 104);
  ((void (*)(void *, void, uint64_t))v9)(v8, *MEMORY[0x1E4FAAC28], v3);
  unint64_t v10 = (void *)((char *)v8 + v5);
  *unint64_t v10 = 0x657573734977656ELL;
  v10[1] = 0xE900000000000073;
  v9();
  sub_1DFA60908(MEMORY[0x1E4FBC860]);
  uint64_t v11 = sub_1DFDED510();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v11;
  *(void *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_1DF63E68C(uint64_t a1)
{
  sub_1DED4CCD8(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  char v42 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  char v43 = (char *)&v41 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v48 = (char *)&v41 - v7;
  uint64_t v8 = sub_1DFDED140();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v46 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = sub_1DFDED180();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  int v44 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v41 - v18;
  sub_1DED4CCD8(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  uint64_t v47 = a1;
  sub_1DFDED420();
  sub_1DFDED160();
  int v20 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v45 = v14;
  v20(v19, v14);
  uint64_t v21 = sub_1DFDED150();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v13, v8);
  if (v23)
  {
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v21;
    *(void *)(v25 + 24) = v23;
    *(unsigned char *)(v25 + 32) = 0;
    unint64_t v26 = v25 | 0x8000000000000004;
    uint64_t v27 = sub_1DFDEAB40();
    uint64_t v28 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v48, 1, 1, v27);
LABEL_3:
    uint64_t v54 = 0;
    long long v52 = 0u;
    long long v53 = 0u;
    uint64_t v51 = 0;
    long long v49 = 0u;
    long long v50 = 0u;
    swift_retain();
    sub_1DFBB5128(v26, 0, v28, (uint64_t)&v52, 0, 0, 0, 0, (uint64_t)&v49);
    swift_release();
    sub_1DE932F44((uint64_t)&v49, (uint64_t)&qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0], (uint64_t (*)(void))sub_1DE9B31FC);
    sub_1DE932F44((uint64_t)&v52, (uint64_t)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18], (uint64_t (*)(void))sub_1DE9B31FC);
    sub_1DE932F44(v28, (uint64_t)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DED4CCD8);
    swift_release();
    goto LABEL_11;
  }
  uint64_t v29 = v44;
  sub_1DFDED420();
  uint64_t v30 = v46;
  sub_1DFDED160();
  v20(v29, v45);
  uint64_t v31 = sub_1DFDED150();
  uint64_t v33 = v32;
  v24(v30, v8);
  if (!v33)
  {
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    *(unsigned char *)(v35 + 32) = 2;
    unint64_t v26 = v35 | 0x8000000000000004;
    uint64_t v36 = sub_1DFDEAB40();
    uint64_t v28 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v42, 1, 1, v36);
    goto LABEL_3;
  }
  if (v31 == 49 && v33 == 0xE100000000000000) {
    uint64_t v34 = 1;
  }
  else {
    uint64_t v34 = sub_1DFDFFF50() & 1;
  }
  uint64_t v37 = (uint64_t)v43;
  uint64_t v38 = swift_allocObject();
  swift_retain();
  swift_bridgeObjectRelease();
  *(void *)(v38 + 16) = v34;
  *(void *)(v38 + 24) = 0;
  *(unsigned char *)(v38 + 32) = 1;
  uint64_t v39 = sub_1DFDEAB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v37, 1, 1, v39);
  uint64_t v54 = 0;
  long long v52 = 0u;
  long long v53 = 0u;
  uint64_t v51 = 0;
  long long v49 = 0u;
  long long v50 = 0u;
  sub_1DFBB5128(v38 | 0x8000000000000004, 0, v37, (uint64_t)&v52, 0, 0, 0, 0, (uint64_t)&v49);
  swift_release();
  sub_1DE932F44((uint64_t)&v49, (uint64_t)&qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0], (uint64_t (*)(void))sub_1DE9B31FC);
  sub_1DE932F44((uint64_t)&v52, (uint64_t)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18], (uint64_t (*)(void))sub_1DE9B31FC);
  sub_1DE932F44(v37, (uint64_t)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DED4CCD8);
  swift_release();
LABEL_11:
  swift_release();
  return 1;
}

uint64_t type metadata accessor for SystemNotificationsURLHandler()
{
  return self;
}

uint64_t sub_1DF63F108(uint64_t a1)
{
  return sub_1DF63E68C(a1) & 1;
}

unint64_t sub_1DF63F134()
{
  unint64_t result = qword_1EBAE08C0;
  if (!qword_1EBAE08C0)
  {
    type metadata accessor for SystemNotificationsURLHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE08C0);
  }
  return result;
}

uint64_t sub_1DF63F188()
{
  sub_1DEFD8630(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t destroy for SearchMoreFeedServiceContext(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 3u) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for SearchMoreFeedServiceContext(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
  *(unsigned char *)(a1 + 40) = v2;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for SearchMoreFeedServiceContext(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DF51C008(a1);
    char v4 = *(unsigned char *)(a2 + 40);
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v4;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithTake for SearchMoreFeedServiceContext(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DF51C008(a1);
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchMoreFeedServiceContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchMoreFeedServiceContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMoreFeedServiceContext()
{
  return &type metadata for SearchMoreFeedServiceContext;
}

uint64_t sub_1DF63F460()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI233FormatGroupFeedGroupEmitterCursor_formatGroup;
  uint64_t v2 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DF63F500()
{
  return type metadata accessor for FormatGroupFeedGroupEmitterCursor();
}

uint64_t type metadata accessor for FormatGroupFeedGroupEmitterCursor()
{
  uint64_t result = qword_1EBAF2F70;
  if (!qword_1EBAF2F70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t dispatch thunk of AppReviewRequestStoreType.appReviewRequestState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AppReviewRequestStoreType.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AppReviewRequestStoreType.update(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1DF63F590()
{
  return sub_1DFDED1E0();
}

uint64_t sub_1DF63F5CC(void *a1)
{
  sub_1DF63FB44(0, &qword_1EAC2EFB8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF63FA9C();
  sub_1DFE001A0();
  v9[15] = 0;
  sub_1DF63FBA8();
  sub_1DFDFFE80();
  if (!v1)
  {
    v9[14] = 1;
    sub_1DFDFFE70();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF63F74C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF63F7AC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF63F810(uint64_t a1)
{
  unint64_t v2 = sub_1DF63FA9C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF63F84C(uint64_t a1)
{
  unint64_t v2 = sub_1DF63FA9C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF63F888@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DF63F8E0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DF63F8B4(void *a1)
{
  return sub_1DF63F5CC(a1);
}

ValueMetadata *type metadata accessor for SearchMoreFeedKnobsConfig()
{
  return &type metadata for SearchMoreFeedKnobsConfig;
}

uint64_t sub_1DF63F8E0(void *a1)
{
  sub_1DF63FB44(0, &qword_1EAC2EFA0, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF63FA9C();
  sub_1DFE00190();
  if (!v1)
  {
    char v13 = 0;
    sub_1DF63FAF0();
    sub_1DFDFFCD0();
    v10[15] = 1;
    sub_1DFDFFCD0();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    if (v12) {
      uint64_t v8 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v8 = v11 & ~(v11 >> 63);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1DF63FA9C()
{
  unint64_t result = qword_1EAC2EFA8;
  if (!qword_1EAC2EFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EFA8);
  }
  return result;
}

unint64_t sub_1DF63FAF0()
{
  unint64_t result = qword_1EAC2EFB0;
  if (!qword_1EAC2EFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EFB0);
  }
  return result;
}

void sub_1DF63FB44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF63FA9C();
    unint64_t v7 = a3(a1, &type metadata for SearchMoreFeedKnobsConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DF63FBA8()
{
  unint64_t result = qword_1EAC2EFC0;
  if (!qword_1EAC2EFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EFC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchMoreFeedKnobsConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF63FCC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMoreFeedKnobsConfig.CodingKeys()
{
  return &type metadata for SearchMoreFeedKnobsConfig.CodingKeys;
}

unint64_t sub_1DF63FD04()
{
  unint64_t result = qword_1EAC2EFC8;
  if (!qword_1EAC2EFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EFC8);
  }
  return result;
}

unint64_t sub_1DF63FD5C()
{
  unint64_t result = qword_1EAC2EFD0;
  if (!qword_1EAC2EFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EFD0);
  }
  return result;
}

unint64_t sub_1DF63FDB4()
{
  unint64_t result = qword_1EAC2EFD8;
  if (!qword_1EAC2EFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2EFD8);
  }
  return result;
}

uint64_t *sub_1DF63FE08(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DF640060();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEBE3100();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    char v12 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
    *(void *)&v9[v12[5]] = *(void *)&v10[v12[5]];
    *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
    *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
    *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
    *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    long long v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    uint64_t v17 = v16;
    uint64_t v22 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v22(v14, v15, v17);
    uint64_t v18 = a3[7];
    long long v19 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)((char *)a1 + v18 + 24) = v19;
    (**(void (***)(void))(v19 - 8))();
  }
  return a1;
}

void sub_1DF640060()
{
  if (!qword_1EBAE9330)
  {
    type metadata accessor for ArticleListTagFeedGroupConfigData();
    sub_1DF64012C(&qword_1EBAE3BD0, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupConfigData);
    sub_1DF64012C((unint64_t *)&unk_1EBAE3BC0, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupConfigData);
    unint64_t v0 = sub_1DFDF7430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9330);
    }
  }
}

uint64_t sub_1DF64012C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF640174(uint64_t a1, int *a2)
{
  sub_1DF640060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  uint64_t v7 = a1 + a2[7];
  return __swift_destroy_boxed_opaque_existential_1(v7);
}

uint64_t sub_1DF640284(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF640060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  uint64_t v16 = v15;
  uint64_t v20 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v20(v13, v14, v16);
  uint64_t v17 = a3[7];
  long long v18 = *(_OWORD *)(a2 + v17 + 24);
  *(_OWORD *)(a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  return a1;
}

uint64_t sub_1DF64048C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF640060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t sub_1DF64060C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF640060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  return a1;
}

uint64_t sub_1DF640744(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF640060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ArticleListTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  swift_release();
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  swift_release();
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  swift_release();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  swift_release();
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  return a1;
}

uint64_t sub_1DF6408BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF6408D0);
}

uint64_t sub_1DF6408D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DF640060();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for ArticleListTagFeedGroupKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DF6409E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6409FC);
}

uint64_t sub_1DF6409FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DF640060();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for ArticleListTagFeedGroupKnobs();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ArticleListTagFeedGroupEmitter()
{
  uint64_t result = qword_1EBAE0DC0;
  if (!qword_1EBAE0DC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF640B5C()
{
  sub_1DF640060();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ArticleListTagFeedGroupKnobs();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DF640C30()
{
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  sub_1DEBE3100();
  uint64_t v0 = sub_1DFDF8030();
  sub_1DF6460D4(0, (unint64_t *)&qword_1EBAEAF50, (uint64_t (*)(uint64_t))sub_1DEC3E5EC, MEMORY[0x1E4FBBE00]);
  sub_1DEC3E5EC(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE0B250;
  uint64_t v6 = (uint64_t *)(v5 + v4);
  *(unsigned char *)(swift_allocObject() + 16) = 1;
  sub_1DF646054(0, (unint64_t *)&unk_1EBAE9980, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7FE90]);
  swift_allocObject();
  uint64_t *v6 = sub_1DFDF9140();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4F7F8E8], v2);
  sub_1DF3DD820(v5);
  return v0;
}

uint64_t sub_1DF640E78(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ArticleListTagFeedGroupEmitter();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDEE090();
  uint64_t v7 = (void *)sub_1DFDEDCE0();
  sub_1DEA6DB58(0, (unint64_t *)&unk_1EBAD3D50);
  sub_1DFDEDDF0();
  swift_release();

  sub_1DF645374(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroupEmitter);
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = (v8 + 16) & ~v8;
  uint64_t v23 = v9;
  v21[1] = v8 | 7;
  unint64_t v10 = (v9 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21[2] = v10 + 8;
  void v21[3] = v9 + v5;
  uint64_t v11 = swift_allocObject();
  uint64_t v22 = type metadata accessor for ArticleListTagFeedGroupEmitter;
  sub_1DF64530C((uint64_t)v6, v11 + v9, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroupEmitter);
  *(void *)(v11 + v10) = a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1DF644288;
  *(void *)(v12 + 24) = v11;
  swift_retain();
  uint64_t v13 = (void *)sub_1DFDEDCE0();
  sub_1DF644368();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  sub_1DF645374(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroupEmitter);
  uint64_t v14 = swift_allocObject();
  sub_1DF64530C((uint64_t)v6, v14 + v23, (uint64_t (*)(void))v22);
  *(void *)(v14 + v10) = a1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1DF644404;
  *(void *)(v15 + 24) = v14;
  swift_retain();
  uint64_t v16 = (void *)sub_1DFDEDCE0();
  sub_1DEC3C648(0);
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  sub_1DF645374(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroupEmitter);
  uint64_t v17 = swift_allocObject();
  sub_1DF64530C((uint64_t)v6, v17 + v23, (uint64_t (*)(void))v22);
  uint64_t v18 = (void *)sub_1DFDEDCE0();
  uint64_t v19 = sub_1DFDEDEE0();
  swift_release();
  swift_release();

  return v19;
}

uint64_t sub_1DF641204(_OWORD *a1)
{
  long long v2 = a1[3];
  v12[2] = a1[2];
  v12[3] = v2;
  long long v3 = a1[5];
  v12[4] = a1[4];
  v12[5] = v3;
  long long v4 = a1[1];
  v12[0] = *a1;
  v12[1] = v4;
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = a1[3];
  v5[3] = a1[2];
  v5[4] = v6;
  long long v7 = a1[5];
  v5[5] = a1[4];
  v5[6] = v7;
  long long v8 = a1[1];
  v5[1] = *a1;
  v5[2] = v8;
  sub_1DEBFF5C4((uint64_t)v12);
  uint64_t v9 = (void *)sub_1DFDEDCE0();
  sub_1DEA6DB58(0, (unint64_t *)&unk_1EBAD3D50);
  uint64_t v10 = sub_1DFDEDE00();
  swift_release();

  return v10;
}

uint64_t sub_1DF6412F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v41 = a2;
  sub_1DF644368();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6460D4(0, qword_1EBAD3E80, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v40 - v12;
  uint64_t v14 = type metadata accessor for ArticleListTagFeedGroupEmitter();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = v42;
  unint64_t v18 = sub_1DF6456F0(a4, v41, *(void *)a1, *(void *)(a1 + 24), *(void *)(a1 + 32));
  if (!v17)
  {
    uint64_t v41 = (uint64_t)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v42 = v8;
    if (v20 > 2u)
    {
      unint64_t v26 = v18;
      uint64_t v27 = v19;
      char v28 = v20;
      uint64_t v29 = type metadata accessor for TagFeedGroup();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 1, 1, v29);
      uint64_t v30 = &v10[*(int *)(v42 + 48)];
      sub_1DF645BE4((uint64_t)v13, (uint64_t)v10);
      *(void *)uint64_t v30 = v26;
      *((void *)v30 + 1) = v27;
      v30[16] = v28;
      sub_1DF6460D4(0, &qword_1EAC2EFF8, (uint64_t (*)(uint64_t))sub_1DF644368, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      return sub_1DFDEDE90();
    }
    else
    {
      uint64_t v21 = a4;
      unsigned __int8 v22 = v20;
      unint64_t v23 = v18;
      uint64_t v24 = (void *)v19;
      uint64_t v25 = sub_1DF6416D4(a4, v18, v19);
      v40[2] = 0;
      v40[1] = v25;
      uint64_t v31 = v41;
      sub_1DF645374(a3, v41, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroupEmitter);
      unint64_t v32 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      unint64_t v33 = v23;
      unint64_t v34 = (v16 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v35 = swift_allocObject();
      sub_1DF64530C(v31, v35 + v32, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroupEmitter);
      *(void *)(v35 + v34) = v21;
      unint64_t v36 = v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)unint64_t v36 = v33;
      *(void *)(v36 + 8) = v24;
      *(unsigned char *)(v36 + 16) = v22;
      swift_retain();
      swift_bridgeObjectRetain();
      id v37 = v24;
      uint64_t v38 = (void *)sub_1DFDEDCE0();
      a3 = sub_1DFDEDE00();

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
  }
  return a3;
}

uint64_t sub_1DF6416D4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v83 = a3;
  uint64_t v97 = a1;
  long long v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF6460D4(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v81 - v8;
  sub_1DF6460D4(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v6);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v92 = (char *)&v81 - v11;
  sub_1DF6460D4(0, (unint64_t *)&qword_1EBAE95E0, (uint64_t (*)(uint64_t))sub_1DEBE3100, v6);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v91 = (char *)&v81 - v13;
  uint64_t v14 = sub_1DFDFB960();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v98 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6460D4(0, &qword_1EBABA570, (uint64_t (*)(uint64_t))sub_1DEBFF44C, v6);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v90 = (char *)&v81 - v18;
  uint64_t v87 = sub_1DFDE7630();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  char v85 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ArticleListTagFeedGroupConfigData();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v84 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1DFDFAA20();
  uint64_t v96 = *(void *)(v108 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v108);
  uint64_t v89 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v95 = (char *)&v81 - v24;
  sub_1DF6460D4(0, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8], v6);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v88 = (char *)&v81 - v26;
  uint64_t v94 = sub_1DFDFAFE0();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v107 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1DFDFC900();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  unint64_t v32 = (uint64_t *)((char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v30);
  unint64_t v34 = (uint64_t *)((char *)&v81 - v33);
  uint64_t v35 = sub_1DFDFCAB0();
  uint64_t v105 = *(void *)(v35 - 8);
  uint64_t v106 = v35;
  MEMORY[0x1F4188790](v35);
  uint64_t v104 = (char *)&v81 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v113 = a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1DFDFFBE0();
  }
  else
  {
    uint64_t v37 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v101 = v9;
  uint64_t v102 = v4;
  uint64_t v99 = v15;
  uint64_t v100 = v14;
  if (v37)
  {
    uint64_t v115 = MEMORY[0x1E4FBC860];
    uint64_t v112 = v37;
    uint64_t result = sub_1DEDF697C(0, v37 & ~(v37 >> 63), 0);
    if (v112 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v39 = v115;
    unint64_t v40 = v113;
    if ((v113 & 0xC000000000000001) != 0)
    {
      uint64_t v41 = 0;
      LODWORD(v111) = *MEMORY[0x1E4F81600];
      do
      {
        *unint64_t v34 = MEMORY[0x1E01EE240](v41);
        (*(void (**)(void *, void, uint64_t))(v29 + 104))(v34, v111, v28);
        uint64_t v115 = v39;
        unint64_t v43 = *(void *)(v39 + 16);
        unint64_t v42 = *(void *)(v39 + 24);
        if (v43 >= v42 >> 1)
        {
          sub_1DEDF697C(v42 > 1, v43 + 1, 1);
          uint64_t v39 = v115;
        }
        ++v41;
        *(void *)(v39 + 16) = v43 + 1;
        (*(void (**)(unint64_t, void *, uint64_t))(v29 + 32))(v39+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v43, v34, v28);
      }
      while (v112 != v41);
    }
    else
    {
      uint64_t v45 = 0;
      LODWORD(v111) = *MEMORY[0x1E4F81600];
      char v46 = *(void **)(v29 + 104);
      uint64_t v109 = v29 + 32;
      char v110 = v46;
      do
      {
        *unint64_t v32 = *(void *)(v40 + 8 * v45 + 32);
        ((void (*)(void *, void, uint64_t))v110)(v32, v111, v28);
        uint64_t v115 = v39;
        unint64_t v48 = *(void *)(v39 + 16);
        unint64_t v47 = *(void *)(v39 + 24);
        swift_unknownObjectRetain();
        if (v48 >= v47 >> 1)
        {
          sub_1DEDF697C(v47 > 1, v48 + 1, 1);
          uint64_t v39 = v115;
        }
        ++v45;
        *(void *)(v39 + 16) = v48 + 1;
        (*(void (**)(unint64_t, void *, uint64_t))(v29 + 32))(v39+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v48, v32, v28);
        unint64_t v40 = v113;
      }
      while (v112 != v45);
    }
    swift_bridgeObjectRelease();
    uint64_t v44 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v44 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
  }
  sub_1DF11BA44(v44);
  sub_1DF11BB5C(v44);
  sub_1DF11BC90(v44);
  long long v49 = v104;
  sub_1DFDFCAA0();
  unint64_t v50 = sub_1DFDFEBA0();
  sub_1DE9DB7BC(0, (unint64_t *)&qword_1EBAEB000, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_1DFE13CF0;
  *(void *)(v51 + 32) = v50;
  unint64_t v113 = v50;
  uint64_t v115 = v51;
  sub_1DFDFE250();
  uint64_t v112 = v115;
  sub_1DF6460D4(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], MEMORY[0x1E4FBBE00]);
  uint64_t v52 = v105;
  unint64_t v53 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, char *, uint64_t))(v52 + 16))(v54 + v53, v49, v106);
  uint64_t v55 = sub_1DFDF66A0();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
  uint64_t v83 = v56 + 56;
  uint64_t v57 = (uint64_t)v88;
  v82(v88, 1, 1, v55);
  swift_unknownObjectRetain();
  sub_1DFC83088(v44);
  sub_1DFC83088(v44);
  sub_1DFC831BC(v44);
  sub_1DFC831D4(v44);
  sub_1DFC83308(v44);
  sub_1DFC83320(v44);
  sub_1DFDFAFD0();
  uint64_t v109 = type metadata accessor for ArticleListTagFeedGroupEmitter();
  sub_1DE94F204(v103 + *(int *)(v109 + 24), (uint64_t)&v115);
  uint64_t v111 = v117;
  uint64_t v112 = v116;
  char v110 = __swift_project_boxed_opaque_existential_1(&v115, v116);
  sub_1DF640060();
  BOOL v58 = v84;
  sub_1DFDF73B0();
  uint64_t v59 = v96;
  uint64_t v60 = v89;
  (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v89, v58, v108);
  uint64_t v61 = v85;
  sub_1DFDE7620();
  sub_1DFDE7610();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v61, v87);
  id v62 = objc_msgSend((id)v113, sel_identifier);
  sub_1DFDFDD20();

  v82((char *)v57, 1, 1, v55);
  sub_1DEBFF44C(0);
  uint64_t v64 = (uint64_t)v90;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v90, 1, 1, v63);
  uint64_t v65 = v95;
  sub_1DFDFA860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DF645EF8(v64, &qword_1EBABA570, (uint64_t (*)(uint64_t))sub_1DEBFF44C);
  sub_1DF645EF8(v57, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8]);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v59 + 8);
  v66(v60, v108);
  uint64_t v67 = v103 + *(int *)(v109 + 20);
  sub_1DEBE3100();
  uint64_t v69 = v68;
  uint64_t v70 = *(void *)(v68 - 8);
  uint64_t v71 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v91, v67, v68);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v69);
  swift_retain();
  sub_1DFDF87F0();
  id v72 = *(id *)(v118 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  uint64_t v73 = sub_1DFDFC340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v92, 1, 1, v73);
  LOBYTE(v114) = 1;
  sub_1DF646054(0, (unint64_t *)&unk_1EBAE9F30, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F81400]);
  swift_allocObject();
  sub_1DFDFC5C0();
  sub_1DFDF87F0();
  sub_1DEE821D4();
  swift_release();
  sub_1DFDF87F0();
  id v74 = *(id *)(v114 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1DFDFC5F0();
  swift_allocObject();
  sub_1DFDFC5E0();
  uint64_t v75 = sub_1DFDFB640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v101, 1, 1, v75);
  uint64_t v76 = qword_1EBAEA6E8;
  (id)*MEMORY[0x1E4F7E018];
  if (v76 != -1) {
    swift_once();
  }
  (id)qword_1EBB63310;
  char v77 = v98;
  sub_1DFDFB930();
  uint64_t v78 = v107;
  uint64_t v79 = sub_1DFDFB120();
  uint64_t v80 = v99;
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v100);
  v66(v65, v108);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v78, v94);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v106);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v115);
  return v79;
}

id sub_1DF642734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, void *a3@<X4>, char a4@<W5>, uint64_t a5@<X8>)
{
  sub_1DF644368();
  uint64_t v11 = a5 + *(int *)(v10 + 48);
  sub_1DF64280C(a1, a5);
  uint64_t v12 = type metadata accessor for TagFeedGroup();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a5, 0, 1, v12);
  *(void *)uint64_t v11 = a2;
  *(void *)(v11 + 8) = a3;
  *(unsigned char *)(v11 + 16) = a4;
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t sub_1DF64280C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v13[1] = a2;
  sub_1DF6460D4(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v13 - v4;
  uint64_t v6 = sub_1DFDF8C20();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1DFDFA9F0();
  MEMORY[0x1F4188790](v8);
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1DF640060();
  sub_1DFDF7350();
  sub_1DFDF7360();
  sub_1DFDF7360();
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  sub_1DEBE3100();
  sub_1DFDF8080();
  sub_1DFDF8050();
  sub_1DFDF80A0();
  uint64_t v11 = sub_1DFDF7CB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_1DFDF6F90();
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF642B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v50 = a1;
  v45[0] = a5;
  v45[1] = a6;
  uint64_t v51 = a4;
  uint64_t v6 = sub_1DFDF9D80();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC3C648(0);
  uint64_t v48 = v9;
  MEMORY[0x1F4188790](v9);
  long long v49 = (void *)((char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF6460D4(0, qword_1EBAD3E80, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)v45 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v45 - v18;
  uint64_t v20 = type metadata accessor for TagFeedGroup();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)v45 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)v45 - v28;
  switch((char)v51)
  {
    case 1:
      sub_1DF645278(v50, (uint64_t)v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
      {
        sub_1DF645EF8((uint64_t)v19, qword_1EBAD3E80, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup);
        uint64_t v30 = sub_1DFDF8510();
        sub_1DF64012C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
        swift_allocError();
        unint64_t v32 = v31;
        unint64_t v33 = 0xD000000000000024;
        unint64_t v34 = "batch did not create nextBatch group";
        goto LABEL_8;
      }
      sub_1DF64530C((uint64_t)v19, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
      sub_1DEC9B3EC();
      uint64_t v41 = (_OWORD *)((char *)v49 + *(int *)(v40 + 48));
      sub_1DF645374((uint64_t)v29, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
      _OWORD *v41 = 0u;
      v41[1] = 0u;
      swift_storeEnumTagMultiPayload();
      sub_1DF6460D4(0, (unint64_t *)&qword_1EBAD2B30, (uint64_t (*)(uint64_t))sub_1DEC3C648, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v20 = sub_1DFDEDE90();
      uint64_t v39 = (uint64_t)v29;
      goto LABEL_15;
    case 2:
      sub_1DF645278(v50, (uint64_t)v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20) == 1)
      {
        sub_1DF645EF8((uint64_t)v14, qword_1EBAD3E80, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup);
        uint64_t v30 = sub_1DFDF8510();
        sub_1DF64012C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
        swift_allocError();
        unint64_t v32 = v31;
        unint64_t v33 = 0xD000000000000026;
        unint64_t v34 = "batch did not create expandBatch group";
        goto LABEL_8;
      }
      sub_1DF64530C((uint64_t)v14, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
      sub_1DEC9B3EC();
      unint64_t v43 = (_OWORD *)((char *)v49 + *(int *)(v42 + 48));
      sub_1DF645374((uint64_t)v24, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
      *unint64_t v43 = 0u;
      v43[1] = 0u;
      swift_storeEnumTagMultiPayload();
      sub_1DF6460D4(0, (unint64_t *)&qword_1EBAD2B30, (uint64_t (*)(uint64_t))sub_1DEC3C648, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v20 = sub_1DFDEDE90();
      uint64_t v39 = (uint64_t)v24;
      goto LABEL_15;
    case 3:
      unint64_t v53 = 0;
      unint64_t v54 = 0xE000000000000000;
      sub_1DFDFF9B0();
      swift_bridgeObjectRelease();
      unint64_t v53 = 0xD000000000000014;
      unint64_t v54 = 0x80000001DFEFE8F0;
      type metadata accessor for ArticleListTagFeedGroupEmitter();
      type metadata accessor for ArticleListTagFeedGroupKnobs();
      sub_1DFDF8870();
      sub_1DFDF8BF0();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v47);
      uint64_t v52 = v55;
      sub_1DFDFFEE0();
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      sub_1DFDFDE90();
      unint64_t v36 = v54;
      uint64_t v37 = v49;
      *long long v49 = v53;
      v37[1] = v36;
      swift_storeEnumTagMultiPayload();
      sub_1DF6460D4(0, (unint64_t *)&qword_1EBAD2B30, (uint64_t (*)(uint64_t))sub_1DEC3C648, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      return sub_1DFDEDE90();
    case 4:
      uint64_t v30 = sub_1DFDF8510();
      sub_1DF64012C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
      swift_allocError();
      unint64_t v32 = v38;
      uint64_t v35 = (unsigned int *)MEMORY[0x1E4F7F980];
      goto LABEL_11;
    default:
      sub_1DF645278(v50, (uint64_t)v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20) == 1)
      {
        sub_1DF645EF8((uint64_t)v17, qword_1EBAD3E80, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup);
        uint64_t v30 = sub_1DFDF8510();
        sub_1DF64012C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
        swift_allocError();
        unint64_t v32 = v31;
        unint64_t v33 = 0xD000000000000024;
        unint64_t v34 = "batch did not create lastBatch group";
LABEL_8:
        *uint64_t v31 = v33;
        v31[1] = (unint64_t)(v34 - 32) | 0x8000000000000000;
        uint64_t v35 = (unsigned int *)MEMORY[0x1E4F7F9A0];
LABEL_11:
        (*(void (**)(unint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *v35, v30);
        swift_willThrow();
      }
      else
      {
        sub_1DF64530C((uint64_t)v17, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
        sub_1DF645374((uint64_t)v27, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
        swift_storeEnumTagMultiPayload();
        sub_1DF6460D4(0, (unint64_t *)&qword_1EBAD2B30, (uint64_t (*)(uint64_t))sub_1DEC3C648, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        uint64_t v20 = sub_1DFDEDE90();
        uint64_t v39 = (uint64_t)v27;
LABEL_15:
        sub_1DEC3C93C(v39);
      }
      return v20;
  }
}

uint64_t sub_1DF643464()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  type metadata accessor for TagFeedGroup();
  sub_1DEBFF3E4();
  sub_1DFDF88D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF643570(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DF6460D4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE0B250;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x1E4FBB5C8];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = v6;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  unint64_t v8 = sub_1DF6453DC(a1, a3);
  unint64_t v9 = sub_1DF644724(v8);
  swift_bridgeObjectRelease();
  unint64_t v10 = sub_1DF644C6C(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1DF645020(v10, a3);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (!v12) {
      goto LABEL_10;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_10;
  }
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1DF6437A8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = sub_1DFDF7DC0();
  unint64_t v5 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF9170();
  unint64_t v48 = *(void *)(v8 - 8);
  unint64_t v49 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF9D80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ArticleListTagFeedGroupEmitter();
  uint64_t v16 = a1;
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v54)
  {
    uint64_t v17 = (void *)(a1 + *(int *)(v15 + 28));
    uint64_t v18 = v17[3];
    unint64_t v19 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v18);
    unint64_t v21 = v48;
    unint64_t v20 = v49;
    (*(void (**)(char *, void, unint64_t))(v48 + 104))(v10, *MEMORY[0x1E4F7FEB0], v49);
    uint64_t v16 = sub_1DFDF9440();
    uint64_t v23 = *(void (**)(char *, unint64_t))(v21 + 8);
    uint64_t v22 = v21 + 8;
    v23(v10, v20);
    uint64_t v24 = sub_1DEC77C7C(v51, v16);
    uint64_t v50 = v26;
    uint64_t v51 = v27 >> 1;
    uint64_t v28 = (v27 >> 1) - v25;
    if (__OFSUB__(v27 >> 1, v25)) {
      goto LABEL_45;
    }
    unint64_t v20 = v24;
    if (v28)
    {
      uint64_t v22 = v25;
      unint64_t v53 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      uint64_t v29 = &v53;
      sub_1DFDFFA70();
      if (v28 < 0)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      unint64_t v48 = v20;
      unint64_t v49 = v16;
      uint64_t v16 = v5 + 8;
      unint64_t v20 = v52;
      if (v22 <= v51) {
        unint64_t v19 = v51;
      }
      else {
        unint64_t v19 = v22;
      }
      do
      {
        if (v19 == v22)
        {
          __break(1u);
          goto LABEL_44;
        }
        (*(void (**)(char *, char *, unint64_t))(v5 + 16))(v7, &v50[*(void *)(v5 + 72) * v22], v20);
        sub_1DFDF7DB0();
        (*(void (**)(char *, unint64_t))(v5 + 8))(v7, v20);
        sub_1DFDFFA50();
        sub_1DFDFFA90();
        sub_1DFDFFAA0();
        sub_1DFDFFA60();
        ++v22;
      }
      while (v51 != v22);
      unint64_t v20 = v53;
      swift_unknownObjectRelease();
      uint64_t v16 = v49;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      unint64_t v20 = MEMORY[0x1E4FBC860];
    }
    uint64_t v50 = (char *)v20;
    if (v20 >> 62) {
      goto LABEL_47;
    }
    uint64_t v29 = *(unint64_t **)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      uint64_t v41 = sub_1DFDD03CC((uint64_t)v29, v16);
      uint64_t v51 = v43;
      uint64_t v18 = v44 >> 1;
      uint64_t v28 = (v44 >> 1) - v42;
      if (__OFSUB__(v44 >> 1, v42)) {
        break;
      }
      unint64_t v20 = v41;
      if (!v28)
      {
LABEL_41:
        swift_unknownObjectRelease();
        return (uint64_t)v50;
      }
      uint64_t v22 = v42;
      unint64_t v53 = MEMORY[0x1E4FBC860];
      uint64_t v29 = &v53;
      sub_1DFDFFA70();
      if (v28 < 0) {
        goto LABEL_50;
      }
      unint64_t v49 = v20;
      uint64_t v16 = v5 + 16;
      unint64_t v19 = v5 + 8;
      if (v22 <= v18) {
        unint64_t v20 = v18;
      }
      else {
        unint64_t v20 = v22;
      }
      while (v20 != v22)
      {
        uint64_t v45 = v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v51 + *(void *)(v5 + 72) * v22, v52);
        sub_1DFDF7DB0();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v45);
        sub_1DFDFFA50();
        sub_1DFDFFA90();
        sub_1DFDFFAA0();
        sub_1DFDFFA60();
        if (v18 == ++v22) {
          goto LABEL_41;
        }
      }
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      swift_bridgeObjectRetain();
      uint64_t v29 = (unint64_t *)sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v7 = v50;
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_1DEC7FDBC(v51, (unint64_t)v7);
  uint64_t v22 = v30;
  uint64_t v28 = v31;
  unint64_t v19 = v32;
  swift_bridgeObjectRelease();
  if (__OFSUB__(v19 >> 1, v28)) {
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = (unint64_t *)sub_1DFDD2C80((v19 >> 1) - v28, (unint64_t)v7);
  uint64_t v52 = v33;
  uint64_t v18 = v34;
  unint64_t v5 = v35;
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
    swift_unknownObjectRetain();
LABEL_14:
    uint64_t v36 = sub_1DEC79488(v20, v22, v28, v19);
    goto LABEL_20;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain_n();
  uint64_t v37 = swift_dynamicCastClass();
  if (!v37)
  {
    swift_unknownObjectRelease();
    uint64_t v37 = MEMORY[0x1E4FBC860];
  }
  uint64_t v38 = *(void *)(v37 + 16);
  swift_release();
  if (v38 != (v19 >> 1) - v28)
  {
LABEL_51:
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  uint64_t v36 = swift_dynamicCastClass();
  if (!v36)
  {
    swift_unknownObjectRelease();
    uint64_t v36 = MEMORY[0x1E4FBC860];
  }
LABEL_20:
  swift_unknownObjectRelease();
  if (v5)
  {
    sub_1DFDFFF90();
    swift_unknownObjectRetain_n();
    uint64_t v39 = swift_dynamicCastClass();
    if (!v39)
    {
      swift_unknownObjectRelease();
      uint64_t v39 = MEMORY[0x1E4FBC860];
    }
    uint64_t v40 = *(void *)(v39 + 16);
    swift_release();
    if (__OFSUB__(v5 >> 1, v18))
    {
      __break(1u);
    }
    else if (v40 == (v5 >> 1) - v18)
    {
      if (!swift_dynamicCastClass()) {
        swift_unknownObjectRelease();
      }
      goto LABEL_29;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRetain();
  }
  sub_1DEC79488((uint64_t)v29, v52, v18, v5);
LABEL_29:
  swift_unknownObjectRelease();
  swift_unknownObjectRelease_n();
  return v36;
}

uint64_t sub_1DF643E7C@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF640060();
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocBox();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5;
  return result;
}

uint64_t sub_1DF643EF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for ArticleListTagFeedGroupKnobs();
  a2[4] = sub_1DF64012C(&qword_1EBADE3C8, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupKnobs);
  a2[5] = sub_1DF64012C((unint64_t *)&unk_1EAC2F000, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DF645374(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroupKnobs);
}

uint64_t sub_1DF643FBC()
{
  sub_1DF640060();
  return sub_1DFDF7340();
}

uint64_t sub_1DF643FE8@<X0>(uint64_t *a1@<X8>)
{
  sub_1DEE358EC();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DF640060();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DF6460D4(0, (unint64_t *)&unk_1EBAD26A8, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
  a1[3] = v5;
  a1[4] = sub_1DF646138();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF6440F8()
{
  sub_1DF64012C((unint64_t *)&unk_1EBAE0DA0, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF644164()
{
  return sub_1DF64012C((unint64_t *)&unk_1EBAE0DB0, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter);
}

uint64_t sub_1DF6441AC()
{
  return sub_1DF64012C(&qword_1EBAE0D98, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter);
}

uint64_t sub_1DF6441F4()
{
  return sub_1DF64012C((unint64_t *)&unk_1EBAE0DA0, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter);
}

uint64_t sub_1DF64423C()
{
  return sub_1DF64012C((unint64_t *)&unk_1EAC2EFE8, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter);
}

uint64_t sub_1DF644288(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ArticleListTagFeedGroupEmitter() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1DF6412F0(a1, a2, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DF644330()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DF644368()
{
  if (!qword_1EBAD3E98)
  {
    sub_1DF6460D4(255, qword_1EBAD3E80, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAD3E98);
    }
  }
}

uint64_t sub_1DF644404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for ArticleListTagFeedGroupEmitter() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_1DF642B00(a1, a2, a3, a4, v4 + v10, *(void *)(v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DF6444C4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, void, void))(v1 + 16);
  sub_1DF644368();
  return v3(a1, *(void *)(a1 + *(int *)(v4 + 48)), *(void *)(a1 + *(int *)(v4 + 48) + 8), *(unsigned __int8 *)(a1 + *(int *)(v4 + 48) + 16));
}

uint64_t sub_1DF64451C()
{
  uint64_t v1 = (int *)(type metadata accessor for ArticleListTagFeedGroupEmitter() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_1DF640060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v2 + v1[7];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[8]);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[9]);
  return swift_deallocObject();
}

uint64_t sub_1DF6446A8()
{
  return sub_1DF643464();
}

unint64_t sub_1DF644724(unint64_t a1)
{
  uint64_t v2 = sub_1DFDE7600();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDF9D80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v8, v5);
  if (v25 == 1)
  {
    sub_1DFDF8870();
    sub_1DFDF8BF0();
    v9(v8, v5);
    uint64_t v10 = v25;
    uint64_t v11 = sub_1DFDE75F0();
    MEMORY[0x1F4188790](v11);
    *(&v23 - 2) = v10;
    *(&v23 - 1) = (uint64_t)v4;
    swift_bridgeObjectRetain();
    unint64_t v12 = (unint64_t)sub_1DF7CAAD4((uint64_t (*)(uint64_t *))sub_1DF645F88, &v23 - 4, a1);
    if (v12 >> 62)
    {
      sub_1DEABCC20();
      unint64_t v13 = sub_1DFDFFBD0();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DFDFFF80();
      sub_1DEABCC20();
      unint64_t v13 = v12;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
    if (qword_1EBAEA6E8 != -1) {
      swift_once();
    }
    sub_1DF6460D4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DFE0B750;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      if (!(v13 >> 62))
      {
LABEL_8:
        a1 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        unint64_t v16 = v15 - a1;
        if (!__OFSUB__(v15, a1))
        {
LABEL_9:
          uint64_t v17 = MEMORY[0x1E4FBB550];
          uint64_t v18 = MEMORY[0x1E4FBB5C8];
          *(void *)(v14 + 56) = MEMORY[0x1E4FBB550];
          *(void *)(v14 + 64) = v18;
          *(void *)(v14 + 32) = v16;
          *(void *)(v14 + 96) = v17;
          *(void *)(v14 + 104) = v18;
          *(void *)(v14 + 72) = a1;
          sub_1DFDFEA60();
          sub_1DFDF00C0();
          swift_bridgeObjectRelease();
          return v13;
        }
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!(v13 >> 62)) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRetain();
    a1 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    unint64_t v16 = v15 - a1;
    if (!__OFSUB__(v15, a1)) {
      goto LABEL_9;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (qword_1EBAEA6E8 != -1) {
LABEL_20:
  }
    swift_once();
  sub_1DF6460D4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1DFE0B250;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v21 = MEMORY[0x1E4FBB5C8];
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v19 + 64) = v21;
  *(void *)(v19 + 32) = v20;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DF644C6C(unint64_t a1)
{
  uint64_t v2 = sub_1DFDE7600();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF9D80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1DFDE7520();
  v19[2] = v5;
  swift_bridgeObjectRetain();
  unint64_t v10 = (unint64_t)sub_1DF7CAAD4((uint64_t (*)(uint64_t *))sub_1DF645F68, v19, a1);
  if (v10 >> 62)
  {
    sub_1DEABCC20();
    unint64_t v11 = sub_1DFDFFBD0();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1DFDFFF80();
    sub_1DEABCC20();
    unint64_t v11 = v10;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DF6460D4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  unint64_t v13 = (void *)result;
  *(_OWORD *)(result + 16) = xmmword_1DFE0B750;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!(v11 >> 62)) {
      goto LABEL_7;
    }
LABEL_11:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v16 = v14 - v15;
    if (!__OFSUB__(v14, v15)) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DFDFFBE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v11 >> 62) {
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v15 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v16 = v14 - v15;
  if (!__OFSUB__(v14, v15))
  {
LABEL_8:
    uint64_t v17 = MEMORY[0x1E4FBB550];
    uint64_t v18 = MEMORY[0x1E4FBB5C8];
    v13[7] = MEMORY[0x1E4FBB550];
    v13[8] = v18;
    void v13[4] = v16;
    v13[12] = v17;
    v13[13] = v18;
    v13[9] = v15;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    return v11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1DF645020(unint64_t a1, uint64_t a2)
{
  sub_1DF6460D4(0, (unint64_t *)&qword_1EBABA9A0, (uint64_t (*)(uint64_t))sub_1DEABCC20, MEMORY[0x1E4FBB320]);
  sub_1DEBB1F5C();
  unint64_t v4 = sub_1DFDFDFE0();
  sub_1DEBFF5C4(a2);
  unint64_t v5 = sub_1DEBFDEB4(v4, a2);
  sub_1DEBFF29C(a2);
  swift_bridgeObjectRelease();
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DF6460D4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  uint64_t v7 = (void *)result;
  *(_OWORD *)(result + 16) = xmmword_1DFE0B750;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!(v5 >> 62)) {
      goto LABEL_5;
    }
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = v8 - v9;
    if (!__OFSUB__(v8, v9)) {
      goto LABEL_6;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DFDFFBE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 >> 62) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v8 - v9;
  if (!__OFSUB__(v8, v9))
  {
LABEL_6:
    uint64_t v11 = MEMORY[0x1E4FBB550];
    uint64_t v12 = MEMORY[0x1E4FBB5C8];
    v7[7] = MEMORY[0x1E4FBB550];
    v7[8] = v12;
    v7[4] = v10;
    v7[12] = v11;
    v7[13] = v12;
    v7[9] = v9;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1DF645278(uint64_t a1, uint64_t a2)
{
  sub_1DF6460D4(0, qword_1EBAD3E80, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF64530C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF645374(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF6453DC(unint64_t a1, uint64_t a2)
{
  sub_1DEBFF5C4(a2);
  unint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_1DEBFDD08(v4, a2);
  sub_1DEBFF29C(a2);
  swift_bridgeObjectRelease();
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DF6460D4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  uint64_t v7 = (void *)result;
  *(_OWORD *)(result + 16) = xmmword_1DFE0B750;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!(v5 >> 62)) {
      goto LABEL_5;
    }
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = v8 - v9;
    if (!__OFSUB__(v8, v9)) {
      goto LABEL_6;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DFDFFBE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 >> 62) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v8 - v9;
  if (!__OFSUB__(v8, v9))
  {
LABEL_6:
    uint64_t v11 = MEMORY[0x1E4FBB550];
    uint64_t v12 = MEMORY[0x1E4FBB5C8];
    v7[7] = MEMORY[0x1E4FBB550];
    v7[8] = v12;
    v7[4] = v10;
    v7[12] = v11;
    v7[13] = v12;
    v7[9] = v9;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_1DF6455B8(unint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!(a2 >> 62))
    {
LABEL_3:
      uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (a3) {
        goto LABEL_4;
      }
LABEL_17:
      if (!v10) {
        return 4;
      }
      if ((a6 & 0x8000000000000000) == 0) {
        return v10 < 0 || v10 >= a6;
      }
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!(a2 >> 62)) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DFDFFBE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!a3) {
    goto LABEL_17;
  }
LABEL_4:
  if (v10)
  {
    if ((a6 & 0x8000000000000000) == 0)
    {
      if ((v10 & 0x8000000000000000) == 0 && v10 < a6) {
        return 3;
      }
      if ((v11 & 0x8000000000000000) == 0 && v11 < a6) {
        return 2;
      }
      return 1;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  if (a5) {
    return 4;
  }
  else {
    return 3;
  }
}

unint64_t sub_1DF6456F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v38 = a5;
  unint64_t v6 = v5;
  uint64_t v37 = a4;
  uint64_t v10 = sub_1DFDF9D80();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArticleListTagFeedGroupEmitter();
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v14 = v39;
  if (v39 < 1)
  {
    sub_1DFDF8510();
    sub_1DF64012C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    sub_1DFDF8500();
    swift_willThrow();
    unint64_t v38 = v28;
  }
  else
  {
    uint64_t v15 = (char *)sub_1DF643570(a3, a1, a2);
    char v17 = v16;
    unint64_t v6 = sub_1DF6437A8(v5, a1, v15, v14);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    unint64_t v38 = sub_1DF6455B8(v6, v19, v37, v38, v17 & 1, v14);
    if (qword_1EBAEA6E8 != -1) {
      swift_once();
    }
    uint64_t v37 = qword_1EBB63310;
    sub_1DF6460D4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1DFE0FB10;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v22 = MEMORY[0x1E4FBB550];
    uint64_t v23 = MEMORY[0x1E4FBB5C8];
    *(void *)(v20 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v20 + 64) = v23;
    *(void *)(v20 + 32) = v21;
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v25 = 0xE900000000000068;
    swift_bridgeObjectRelease();
    *(void *)(v20 + 96) = v22;
    *(void *)(v20 + 104) = v23;
    uint64_t v26 = 0x637461427473616CLL;
    uint64_t v27 = v38;
    *(void *)(v20 + 72) = v24;
    switch(v27)
    {
      case 1:
        uint64_t v26 = 0x637461427478656ELL;
        break;
      case 2:
        unint64_t v25 = 0xEB00000000686374;
        uint64_t v26 = 0x6142646E61707865;
        break;
      case 3:
        unint64_t v25 = 0xED00006863746142;
        uint64_t v26 = 0x70696B536C6F6F70;
        break;
      case 4:
        unint64_t v25 = 0xEA00000000006863;
        uint64_t v26 = 0x7461427974706D65;
        break;
      default:
        break;
    }
    uint64_t v29 = MEMORY[0x1E4FBB1A0];
    *(void *)(v20 + 136) = MEMORY[0x1E4FBB1A0];
    unint64_t v30 = sub_1DEA08668();
    *(void *)(v20 + 144) = v30;
    *(void *)(v20 + 112) = v26;
    *(void *)(v20 + 120) = v25;
    sub_1DFDF87F0();
    id v31 = *(id *)(v39 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
    swift_release();
    uint64_t v32 = sub_1DFA588CC();
    uint64_t v34 = v33;

    *(void *)(v20 + 176) = v29;
    *(void *)(v20 + 184) = v30;
    *(void *)(v20 + 152) = v32;
    *(void *)(v20 + 160) = v34;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    sub_1DFDF87F0();
    *(id *)(v39 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
    swift_release();
  }
  return v6;
}

uint64_t sub_1DF645BE4(uint64_t a1, uint64_t a2)
{
  sub_1DF6460D4(0, qword_1EBAD3E80, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF645C78()
{
  uint64_t v1 = (int *)(type metadata accessor for ArticleListTagFeedGroupEmitter() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  sub_1DF640060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v4 + v1[7];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for ArticleListTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4 + v1[8]);
  __swift_destroy_boxed_opaque_existential_1(v4 + v1[9]);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1DF645E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ArticleListTagFeedGroupEmitter() - 8);
  unint64_t v6 = (((*(void *)(v5 + 64)
        + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DF642734(a1, *(void *)(v2 + v6), *(void **)(v2 + v6 + 8), *(unsigned char *)(v2 + v6 + 16), a2);
}

uint64_t sub_1DF645EF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DF6460D4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF645F68(void **a1)
{
  return sub_1DF51836C(a1) & 1;
}

uint64_t sub_1DF645F88(void **a1)
{
  return sub_1DEC3E5A4(a1, *(void *)(v1 + 24)) & 1;
}

uint64_t sub_1DF645FAC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF64603C()
{
  return swift_deallocObject();
}

uint64_t sub_1DF64604C@<X0>(unint64_t *a1@<X8>)
{
  return sub_1DF57C224(*(unsigned char *)(v1 + 16), a1);
}

void sub_1DF646054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1DF6460D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1DF646138()
{
  unint64_t result = qword_1EBAD2690[0];
  if (!qword_1EBAD2690[0])
  {
    sub_1DF6460D4(255, (unint64_t *)&unk_1EBAD26A8, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBAD2690);
  }
  return result;
}

uint64_t sub_1DF6461C4(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v31 = *v1;
  uint64_t v2 = type metadata accessor for SearchFeedServiceContext();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v32 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDE68F0();
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9365B8(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_1DFDE7220();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v17 = (char *)&v29 - v16;
  id v34 = objc_msgSend((id)v1[4], sel_appConfiguration);
  if (qword_1EBAEB978 != -1) {
    swift_once();
  }
  if ((sub_1DFDE7F00() & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(v1 + 5, v1[8]);
    sub_1DFB7DB98();
LABEL_10:
    uint64_t v23 = v1[10];
    sub_1DF646EE8(v33, (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SearchFeedServiceContext);
    unint64_t v24 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    unint64_t v25 = (v3 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    sub_1DF646D7C((uint64_t)v4, v26 + v24);
    *(void *)(v26 + v25) = v34;
    *(void *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8)) = v23;
    swift_unknownObjectRetain();
    uint64_t v27 = (void *)sub_1DFDEDCE0();
    type metadata accessor for SearchFeedServiceConfig();
    uint64_t v20 = sub_1DFDEDE00();
    swift_release();
    swift_release();

    goto LABEL_11;
  }
  if (qword_1EAC1CF80 != -1) {
    swift_once();
  }
  sub_1DEAD50D0(&qword_1EAC2F010, v18, (void (*)(uint64_t))type metadata accessor for SearchFeedServiceConfigFetcher);
  sub_1DFDE7EB0();
  sub_1DFDE71E0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    uint64_t v31 = *__swift_project_boxed_opaque_existential_1(v1 + 5, v1[8]);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    uint64_t v21 = sub_1DFDE68D0();
    MEMORY[0x1F4188790](v21);
    *(&v29 - 2) = (uint64_t)v7;
    sub_1DFDEE090();
    uint64_t v22 = (void *)sub_1DFDEDCE0();
    type metadata accessor for SearchFeedConfigFetchResult();
    type metadata accessor for SearchFeedConfigManager();
    sub_1DFDEDE20();
    swift_release();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    goto LABEL_10;
  }
  sub_1DEB4B7AC((uint64_t)v10);
  sub_1DF646E94();
  swift_allocError();
  unsigned char *v19 = 0;
  sub_1DE9365B8(0, &qword_1EBAEBB30, (uint64_t (*)(uint64_t))type metadata accessor for SearchFeedServiceConfig, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v20 = sub_1DFDEDE70();
LABEL_11:
  swift_unknownObjectRelease();
  return v20;
}

uint64_t sub_1DF64680C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v24 = a3;
  uint64_t v23 = sub_1DFDF8150();
  uint64_t v8 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SearchFeedContentConfig();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SearchFeedServiceContext();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SearchFeedServiceContext;
  sub_1DF646EE8(a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SearchFeedServiceContext);
  sub_1DF646EE8(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SearchFeedContentConfig);
  uint64_t v17 = v23;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F7F7F8], v23);
  sub_1DF646EE8((uint64_t)v16, a5, (uint64_t (*)(void))type metadata accessor for SearchFeedServiceContext);
  uint64_t v18 = (int *)type metadata accessor for SearchFeedServiceConfig();
  sub_1DF646EE8((uint64_t)v13, a5 + v18[5], (uint64_t (*)(void))type metadata accessor for SearchFeedContentConfig);
  *(void *)(a5 + v18[6]) = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a5 + v18[7], v10, v17);
  double v19 = (double)(uint64_t)objc_msgSend((id)swift_unknownObjectRetain(), sel_autoRefreshMinimumInterval);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  sub_1DF646F50((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SearchFeedContentConfig);
  uint64_t result = sub_1DF646F50((uint64_t)v16, (uint64_t (*)(void))v22);
  *(double *)(a5 + v18[8]) = v19;
  *(void *)(a5 + v18[9]) = v25;
  return result;
}

uint64_t sub_1DF646AA0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchFeedServiceConfigFetcher()
{
  return self;
}

uint64_t sub_1DF646B0C(uint64_t a1)
{
  return sub_1DF6461C4(a1);
}

uint64_t sub_1DF646B30()
{
  return sub_1DEAD50D0(&qword_1EBAA4AC0, 255, (void (*)(uint64_t))type metadata accessor for SearchFeedServiceConfig);
}

uint64_t sub_1DF646B7C()
{
  return sub_1DEAD50D0(&qword_1EBAA4EC0, 255, (void (*)(uint64_t))type metadata accessor for SearchFeedServiceContext);
}

uint64_t sub_1DF646BC8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SearchFeedServiceContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for SearchResults();
  unint64_t v4 = v0 + v2 + *(int *)(v3 + 24);
  uint64_t v5 = sub_1DFDEA1B0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v2 + *(int *)(v3 + 32);
  uint64_t v7 = sub_1DFDEB4F0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF646D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchFeedServiceContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF646DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SearchFeedServiceContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DF64680C(a1, v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), a2);
}

unint64_t sub_1DF646E94()
{
  unint64_t result = qword_1EAC2F018;
  if (!qword_1EAC2F018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F018);
  }
  return result;
}

uint64_t sub_1DF646EE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF646F50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SearchFeedServiceConfigFetcher.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF64707CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchFeedServiceConfigFetcher.Errors()
{
  return &type metadata for SearchFeedServiceConfigFetcher.Errors;
}

unint64_t sub_1DF6470B8()
{
  unint64_t result = qword_1EAC2F028;
  if (!qword_1EAC2F028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F028);
  }
  return result;
}

uint64_t sub_1DF64710C()
{
  return sub_1DFDF4CA0();
}

uint64_t sub_1DF647128()
{
  return sub_1DFDF4CA0();
}

ValueMetadata *type metadata accessor for FollowingFooterViewLayoutAttributes()
{
  return &type metadata for FollowingFooterViewLayoutAttributes;
}

unint64_t sub_1DF647158()
{
  unint64_t result = qword_1EAC2F030;
  if (!qword_1EAC2F030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F030);
  }
  return result;
}

uint64_t *sub_1DF6471AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1DFDF3DE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_1DF64725C(uint64_t a1)
{
  uint64_t v2 = sub_1DFDF3DE0();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1DF6472C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF3DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF647324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF3DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF647388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF3DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF6473EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF3DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF647450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DF647E60(a1, a2, a3, MEMORY[0x1E4FAD170]);
}

uint64_t sub_1DF647468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DF647EE8(a1, a2, a3, a4, MEMORY[0x1E4FAD170]);
}

uint64_t type metadata accessor for MagazineFeedEmbeddedDecoration(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBACC8A8);
}

uint64_t sub_1DF6474A0(uint64_t a1)
{
  uint64_t result = sub_1DFDF3DE0();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

void *sub_1DF647544(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = (void *)a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v10 = a2 + 6;
    uint64_t v9 = a2[6];
    swift_bridgeObjectRetain();
    id v11 = v7;
    swift_bridgeObjectRetain();
    if (v9)
    {
      uint64_t v13 = (void *)a2[7];
      uint64_t v12 = a2[8];
      a1[6] = v9;
      a1[7] = v13;
      a1[8] = v12;
      swift_unknownObjectRetain();
      id v14 = v13;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *v10;
      a1[8] = a2[8];
    }
    sub_1DF13FA10();
    uint64_t v17 = *(int *)(v16 + 48);
    uint64_t v18 = (char *)a1 + v17;
    double v19 = (char *)a2 + v17;
    long long v20 = *(_OWORD *)((char *)a2 + v17 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)((char *)a2 + v17);
    *((_OWORD *)v18 + 1) = v20;
    long long v21 = *(_OWORD *)((char *)a2 + v17 + 48);
    *((_OWORD *)v18 + 2) = *(_OWORD *)((char *)a2 + v17 + 32);
    *((_OWORD *)v18 + 3) = v21;
    long long v22 = *(_OWORD *)((char *)a2 + v17 + 80);
    *((_OWORD *)v18 + 4) = *(_OWORD *)((char *)a2 + v17 + 64);
    *((_OWORD *)v18 + 5) = v22;
    v18[96] = *((unsigned char *)a2 + v17 + 96);
    uint64_t v23 = *(void **)((char *)a2 + v17 + 104);
    uint64_t v24 = *(void **)((char *)a2 + v17 + 112);
    *((void *)v18 + 13) = v23;
    *((void *)v18 + 14) = v24;
    *(_OWORD *)(v18 + 120) = *(_OWORD *)((char *)a2 + v17 + 120);
    *(_OWORD *)(v18 + 136) = *(_OWORD *)((char *)a2 + v17 + 136);
    *(_OWORD *)(v18 + 145) = *(_OWORD *)((char *)a2 + v17 + 145);
    v18[161] = *((unsigned char *)a2 + v17 + 161);
    uint64_t v25 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
    uint64_t v26 = &v18[v25];
    uint64_t v27 = &v19[v25];
    uint64_t v28 = sub_1DFDE81B0();
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    id v30 = v23;
    id v31 = v24;
    v29(v26, v27, v28);
  }
  return a1;
}

uint64_t sub_1DF6476F4(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    swift_unknownObjectRelease();

    swift_release();
  }
  sub_1DF13FA10();
  uint64_t v3 = a1 + *(int *)(v2 + 48);

  uint64_t v4 = v3 + *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  uint64_t v5 = sub_1DFDE81B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1DF6477BC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v8 = a2 + 6;
  uint64_t v7 = a2[6];
  swift_bridgeObjectRetain();
  id v9 = v5;
  swift_bridgeObjectRetain();
  if (v7)
  {
    id v11 = (void *)a2[7];
    uint64_t v10 = a2[8];
    a1[6] = v7;
    a1[7] = v11;
    a1[8] = v10;
    swift_unknownObjectRetain();
    id v12 = v11;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *(_OWORD *)v8;
    a1[8] = v8[2];
  }
  sub_1DF13FA10();
  uint64_t v14 = *(int *)(v13 + 48);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  long long v17 = *(_OWORD *)((char *)a2 + v14 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)((char *)a2 + v14);
  *((_OWORD *)v15 + 1) = v17;
  long long v18 = *(_OWORD *)((char *)a2 + v14 + 48);
  *((_OWORD *)v15 + 2) = *(_OWORD *)((char *)a2 + v14 + 32);
  *((_OWORD *)v15 + 3) = v18;
  long long v19 = *(_OWORD *)((char *)a2 + v14 + 80);
  *((_OWORD *)v15 + 4) = *(_OWORD *)((char *)a2 + v14 + 64);
  *((_OWORD *)v15 + 5) = v19;
  v15[96] = *((unsigned char *)a2 + v14 + 96);
  long long v20 = *(void **)((char *)a2 + v14 + 104);
  long long v21 = *(void **)((char *)a2 + v14 + 112);
  *((void *)v15 + 13) = v20;
  *((void *)v15 + 14) = v21;
  *(_OWORD *)(v15 + 120) = *(_OWORD *)((char *)a2 + v14 + 120);
  *(_OWORD *)(v15 + 136) = *(_OWORD *)((char *)a2 + v14 + 136);
  *(_OWORD *)(v15 + 145) = *(_OWORD *)((char *)a2 + v14 + 145);
  v15[161] = *((unsigned char *)a2 + v14 + 161);
  uint64_t v22 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  uint64_t v23 = &v15[v22];
  uint64_t v24 = &v16[v22];
  uint64_t v25 = sub_1DFDE81B0();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
  id v27 = v20;
  id v28 = v21;
  v26(v23, v24, v25);
  return a1;
}

void *sub_1DF647920(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v4 = (void *)a1[3];
  uint64_t v5 = (void *)a2[3];
  a1[3] = v5;
  id v6 = v5;

  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + 6;
  id v9 = a2 + 6;
  uint64_t v8 = a2[6];
  if (a1[6])
  {
    if (v8)
    {
      a1[6] = v8;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      uint64_t v10 = (void *)a2[7];
      id v11 = (void *)a1[7];
      a1[7] = v10;
      id v12 = v10;

      a1[8] = a2[8];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1DF647B78((uint64_t)(a1 + 6));
      uint64_t v15 = a2[8];
      *uint64_t v7 = *v9;
      a1[8] = v15;
    }
  }
  else if (v8)
  {
    a1[6] = v8;
    uint64_t v13 = (void *)a2[7];
    a1[7] = v13;
    a1[8] = a2[8];
    swift_unknownObjectRetain();
    id v14 = v13;
    swift_retain();
  }
  else
  {
    long long v16 = *v9;
    a1[8] = a2[8];
    *uint64_t v7 = v16;
  }
  sub_1DF13FA10();
  uint64_t v18 = *(int *)(v17 + 48);
  long long v19 = (char *)a1 + v18;
  long long v20 = (char *)a2 + v18;
  *(void *)long long v19 = *(void *)((char *)a2 + v18);
  *((void *)v19 + 1) = *(void *)((char *)a2 + v18 + 8);
  *((void *)v19 + 2) = *(void *)((char *)a2 + v18 + 16);
  *((void *)v19 + 3) = *(void *)((char *)a2 + v18 + 24);
  *((void *)v19 + 4) = *(void *)((char *)a2 + v18 + 32);
  *((void *)v19 + 5) = *(void *)((char *)a2 + v18 + 40);
  *((void *)v19 + 6) = *(void *)((char *)a2 + v18 + 48);
  *((void *)v19 + 7) = *(void *)((char *)a2 + v18 + 56);
  *((void *)v19 + 8) = *(void *)((char *)a2 + v18 + 64);
  *((void *)v19 + 9) = *(void *)((char *)a2 + v18 + 72);
  *((void *)v19 + 10) = *(void *)((char *)a2 + v18 + 80);
  *((void *)v19 + 11) = *(void *)((char *)a2 + v18 + 88);
  v19[96] = *((unsigned char *)a2 + v18 + 96);
  long long v21 = *(void **)((char *)a2 + v18 + 104);
  uint64_t v22 = (void *)*((void *)v19 + 13);
  *((void *)v19 + 13) = v21;
  id v23 = v21;

  uint64_t v24 = (void *)*((void *)v20 + 14);
  uint64_t v25 = (void *)*((void *)v19 + 14);
  *((void *)v19 + 14) = v24;
  id v26 = v24;

  long long v27 = *(_OWORD *)(v20 + 120);
  long long v28 = *(_OWORD *)(v20 + 136);
  *(_OWORD *)(v19 + 145) = *(_OWORD *)(v20 + 145);
  *(_OWORD *)(v19 + 136) = v28;
  *(_OWORD *)(v19 + 120) = v27;
  v19[161] = v20[161];
  uint64_t v29 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  id v30 = &v19[v29];
  id v31 = &v20[v29];
  uint64_t v32 = sub_1DFDE81B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

uint64_t sub_1DF647B78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF647BCC(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  sub_1DF13FA10();
  uint64_t v7 = *(int *)(v6 + 48);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  long long v11 = *(_OWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + v7 + 32);
  *(_OWORD *)(v8 + 48) = v11;
  long long v12 = *(_OWORD *)(a2 + v7 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a2 + v7 + 64);
  *(_OWORD *)(v8 + 80) = v12;
  *(unsigned char *)(v8 + 96) = *(unsigned char *)(a2 + v7 + 96);
  *(_OWORD *)(v8 + 104) = *(_OWORD *)(a2 + v7 + 104);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(a2 + v7 + 120);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(a2 + v7 + 136);
  *(_OWORD *)(v8 + 145) = *(_OWORD *)(a2 + v7 + 145);
  *(unsigned char *)(v8 + 161) = *(unsigned char *)(a2 + v7 + 161);
  uint64_t v13 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = sub_1DFDE81B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

void *sub_1DF647CC0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  long long v5 = (void *)a1[3];
  a1[3] = a2[3];

  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  if (!a1[6]) {
    goto LABEL_5;
  }
  if (!v7)
  {
    sub_1DF647B78((uint64_t)(a1 + 6));
LABEL_5:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    a1[8] = a2[8];
    goto LABEL_6;
  }
  a1[6] = v7;
  swift_unknownObjectRelease();
  uint64_t v8 = (void *)a1[7];
  a1[7] = a2[7];

  a1[8] = a2[8];
  swift_release();
LABEL_6:
  sub_1DF13FA10();
  uint64_t v10 = *(int *)(v9 + 48);
  long long v11 = (char *)a1 + v10;
  long long v12 = (char *)a2 + v10;
  long long v13 = *(_OWORD *)((char *)a2 + v10 + 16);
  *(_OWORD *)long long v11 = *(_OWORD *)((char *)a2 + v10);
  *((_OWORD *)v11 + 1) = v13;
  long long v14 = *(_OWORD *)((char *)a2 + v10 + 48);
  *((_OWORD *)v11 + 2) = *(_OWORD *)((char *)a2 + v10 + 32);
  *((_OWORD *)v11 + 3) = v14;
  long long v15 = *(_OWORD *)((char *)a2 + v10 + 80);
  *((_OWORD *)v11 + 4) = *(_OWORD *)((char *)a2 + v10 + 64);
  *((_OWORD *)v11 + 5) = v15;
  v11[96] = *((unsigned char *)a2 + v10 + 96);
  uint64_t v16 = *(void **)((char *)a1 + v10 + 104);
  *((void *)v11 + 13) = *(void *)((char *)a2 + v10 + 104);

  uint64_t v17 = (void *)*((void *)v11 + 14);
  *((void *)v11 + 14) = *((void *)v12 + 14);

  *(_OWORD *)(v11 + 120) = *(_OWORD *)(v12 + 120);
  *(_OWORD *)(v11 + 136) = *(_OWORD *)(v12 + 136);
  *(_OWORD *)(v11 + 145) = *(_OWORD *)(v12 + 145);
  v11[161] = v12[161];
  uint64_t v18 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  long long v19 = &v11[v18];
  long long v20 = &v12[v18];
  uint64_t v21 = sub_1DFDE81B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t sub_1DF647E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DF647E60(a1, a2, a3, (uint64_t (*)(void))sub_1DF13FA10);
}

uint64_t sub_1DF647E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  return v7(a1, a2, v6);
}

uint64_t sub_1DF647ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DF647EE8(a1, a2, a3, a4, (uint64_t (*)(void))sub_1DF13FA10);
}

uint64_t sub_1DF647EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v8 = a5(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  return v9(a1, a2, a3, v8);
}

uint64_t *sub_1DF647F68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      uint64_t v7 = sub_1DFDF2EB0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1DF13F8D8();
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (char *)a1 + v9;
      long long v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1DFDF4540();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DF6480B8(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return swift_release();
  }
  else
  {
    uint64_t v3 = sub_1DFDF2EB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    sub_1DF13F8D8();
    uint64_t v5 = a1 + *(int *)(v4 + 48);
    uint64_t v6 = sub_1DFDF4540();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
}

void *sub_1DF648190(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    uint64_t v4 = sub_1DFDF2EB0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    sub_1DF13F8D8();
    uint64_t v6 = *(int *)(v5 + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1DFDF4540();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DF648290(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DF648EEC((uint64_t)a1, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      uint64_t v4 = sub_1DFDF2EB0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      sub_1DF13F8D8();
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1DFDF4540();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1DF6483B4(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1DFDF2EB0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_1DF13F8D8();
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1DFDF4540();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1DF6484B8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DF648EEC((uint64_t)a1, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1DFDF2EB0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      sub_1DF13F8D8();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_1DFDF4540();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1DF6485E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF648E84(v2, (uint64_t)v5, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  uint64_t v6 = (void *)v5[3];
  uint64_t v7 = v5[6];
  uint64_t v8 = (void *)v5[7];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1DF13F890(v7, v8);
  sub_1DF13FA10();
  sub_1DF648EEC((uint64_t)v5 + *(int *)(v9 + 48), (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes);
  uint64_t v10 = *MEMORY[0x1E4FAD2B0];
  uint64_t v11 = sub_1DFDF4140();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a2, v10, v11);
}

double sub_1DF648718()
{
  uint64_t v1 = type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes();
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (double *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF648E84(v0, (uint64_t)v6, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  uint64_t v7 = (void *)v6[3];
  uint64_t v8 = v6[6];
  uint64_t v9 = (void *)v6[7];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1DF13F890(v8, v9);
  sub_1DF13FA10();
  sub_1DF648F4C((uint64_t)v6 + *(int *)(v10 + 48), (uint64_t)v4);
  double v11 = *v4;
  sub_1DF648EEC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes);
  return v11;
}

uint64_t sub_1DF648880(uint64_t a1)
{
  uint64_t v2 = sub_1DF648DAC(&qword_1EBAF5178, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1DF6488EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDF4540();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF648E84(v1, (uint64_t)v8, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DFDFD7F0();
    return swift_release();
  }
  else
  {
    sub_1DF13F8D8();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, &v8[*(int *)(v10 + 48)], v2);
    sub_1DFDF4520();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    uint64_t v11 = sub_1DFDF2EB0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
  }
}

double sub_1DF648AB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDF4540();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF648E84(v1, (uint64_t)v8, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DFDFD810();
    double v10 = v9;
    swift_release();
  }
  else
  {
    sub_1DF13F8D8();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, &v8[*(int *)(v11 + 48)], v2);
    sub_1DFDF4530();
    double v10 = v12;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    uint64_t v13 = sub_1DFDF2EB0();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v8, v13);
  }
  return v10;
}

uint64_t sub_1DF648CB0(uint64_t a1)
{
  uint64_t v2 = sub_1DF648DAC(&qword_1EBAF5160, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1DF648D1C()
{
  return sub_1DF648DAC(&qword_1EBAF5158, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
}

uint64_t sub_1DF648D64()
{
  return sub_1DF648DAC(&qword_1EBAF5170, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
}

uint64_t sub_1DF648DAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF648DF4()
{
  return sub_1DF648DAC(&qword_1EBAF5178, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
}

uint64_t sub_1DF648E3C()
{
  return sub_1DF648DAC(&qword_1EBAF5160, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
}

uint64_t sub_1DF648E84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF648EEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF648F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF648FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF648FC8);
}

uint64_t sub_1DF648FC8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 217)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x27) {
      return v4 - 38;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1DFDFAA20();
    double v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF649070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF649084);
}

unsigned char *sub_1DF649084(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 217)
  {
    *uint64_t result = a2 + 38;
  }
  else
  {
    uint64_t v7 = sub_1DFDFAA20();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for RecentStoriesTagFeedGroupConfigData()
{
  uint64_t result = qword_1EBAE5960;
  if (!qword_1EBAE5960) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF649174()
{
  uint64_t result = sub_1DFDFAA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF64920C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF649740(0, &qword_1EBAEAB60, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6496EC();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v12 = v16;
    uint64_t v11 = v17;
    char v19 = 1;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *uint64_t v11 = 27;
    uint64_t v13 = type metadata accessor for RecentStoriesTagFeedGroupConfigData();
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v11[*(int *)(v13 + 20)], v18, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF649474(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF649740(0, &qword_1EAC2F038, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6496EC();
  sub_1DFE001A0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1DEAF3AE0();
  sub_1DFDFFE80();
  if (!v2)
  {
    type metadata accessor for RecentStoriesTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1DFDFAA20();
    sub_1DE9CB07C(&qword_1EBABA3B0);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF649644(uint64_t a1)
{
  unint64_t v2 = sub_1DF6496EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF649680(uint64_t a1)
{
  unint64_t v2 = sub_1DF6496EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF6496BC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DF64920C(a1, a2);
}

uint64_t sub_1DF6496D4(void *a1)
{
  return sub_1DF649474(a1);
}

unint64_t sub_1DF6496EC()
{
  unint64_t result = qword_1EBAE5938;
  if (!qword_1EBAE5938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE5938);
  }
  return result;
}

void sub_1DF649740(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF6496EC();
    unint64_t v7 = a3(a1, &type metadata for RecentStoriesTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for RecentStoriesTagFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF649870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecentStoriesTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for RecentStoriesTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF6498AC()
{
  unint64_t result = qword_1EAC2F040;
  if (!qword_1EAC2F040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F040);
  }
  return result;
}

unint64_t sub_1DF649904()
{
  unint64_t result = qword_1EBAE5948;
  if (!qword_1EBAE5948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE5948);
  }
  return result;
}

unint64_t sub_1DF64995C()
{
  unint64_t result = qword_1EBAE5940;
  if (!qword_1EBAE5940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE5940);
  }
  return result;
}

uint64_t dispatch thunk of SportsUpsellStateStoreType.sportsUpsellState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SportsUpsellStateStoreType.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SportsUpsellStateStoreType.update(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for FollowingSubscriptionChangeAutoModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for FollowingSubscriptionChangeAutoModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = a2 + 40;
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  uint64_t v6 = v5;
  unint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7(a1 + 40, v4, v6);
  return a1;
}

void *assignWithCopy for FollowingSubscriptionChangeAutoModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

uint64_t assignWithTake for FollowingSubscriptionChangeAutoModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingSubscriptionChangeAutoModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowingSubscriptionChangeAutoModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingSubscriptionChangeAutoModifier()
{
  return &type metadata for FollowingSubscriptionChangeAutoModifier;
}

void sub_1DF649CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1DF64BF48(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)aBlock - v12;
  long long v14 = *(void **)(v3 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)aBlock - v12, a1, v9);
  sub_1DECE3B98(v4, (uint64_t)v24);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v13, v9);
  uint64_t v18 = (_OWORD *)(v17 + v16);
  long long v19 = v24[3];
  v18[2] = v24[2];
  v18[3] = v19;
  v18[4] = v24[4];
  long long v20 = v24[1];
  *uint64_t v18 = v24[0];
  v18[1] = v20;
  uint64_t v21 = (void *)(v17 + ((v16 + 87) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v21 = a2;
  v21[1] = a3;
  aBlock[4] = sub_1DF64BD74;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9744A8;
  aBlock[3] = &block_descriptor_119;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_prepareForUseWithCompletionHandler_, v22);
  _Block_release(v22);
}

uint64_t sub_1DF649F00(uint64_t a1, uint64_t *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v37 = a3;
  sub_1DF64BF48(0, &qword_1EBAEBF50, MEMORY[0x1E4FACA00]);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v30 - v7;
  sub_1DF64BF48(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v33 = v14;
  id v31 = v13;
  ((void (*)(char *, uint64_t))v13)(v12, a1);
  v38[0] = *a2;
  swift_bridgeObjectRetain_n();
  sub_1DF64BE2C(v38);
  uint64_t v32 = a1;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v38[0] + 16);
  if (v15)
  {
    unint64_t v16 = (unsigned __int8 *)(v38[0] + 40);
    do
    {
      uint64_t v17 = *v16;
      if (v17 <= 0x3F)
      {
        uint64_t v18 = *((void *)v16 - 1);
        uint64_t v19 = swift_retain();
        sub_1DF64A2D0(v19, (uint64_t)v12);
        j__swift_release(v18, v17);
      }
      v16 += 16;
      --v15;
    }
    while (v15);
  }
  swift_release();
  type metadata accessor for FollowingModel();
  sub_1DEC38FC4();
  sub_1DEADC298();
  sub_1DF64BECC(&qword_1EBAD4970, (void (*)(uint64_t))type metadata accessor for FollowingModel);
  sub_1DFDF2420();
  __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  if (sub_1DFDF1990())
  {
    long long v20 = (unsigned int *)MEMORY[0x1E4FAC9F8];
    uint64_t v21 = v33;
  }
  else
  {
    sub_1DEC39018();
    uint64_t v23 = (uint64_t)&v8[*(int *)(v22 + 48)];
    uint64_t v24 = &v8[*(int *)(v22 + 64)];
    uint64_t v21 = v33;
    v31(v8, v12, v33);
    sub_1DE94F204((uint64_t)v38, v23);
    uint64_t v25 = *MEMORY[0x1E4FAC298];
    uint64_t v26 = sub_1DFDF1930();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
    long long v20 = (unsigned int *)MEMORY[0x1E4FAC9F0];
  }
  uint64_t v28 = v34;
  uint64_t v27 = v35;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v8, *v20, v35);
  v37(v8);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_1DF64A2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v163 = a2;
  sub_1DF64C068(0, (unint64_t *)&qword_1EBAEBA50, sub_1DEB0B564, (void (*)(void))sub_1DF64BE98, (void (*)(void))sub_1DF64BF14);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v162 = (void (**)(unint64_t, void (**)(char *)))((char *)v142 - v5);
  sub_1DEB0B564(0);
  uint64_t v155 = v6;
  uint64_t v154 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v161 = (void (**)(char *))((char *)v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  BOOL v148 = (char *)v142 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  char v150 = (char *)v142 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v166 = (char *)v142 - v13;
  sub_1DEC38D8C();
  uint64_t v152 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v149 = (char *)v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v173 = (uint64_t)v142 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v147 = (char *)v142 - v19;
  sub_1DF64C068(0, (unint64_t *)&qword_1EBAA77B0, (void (*)(uint64_t))type metadata accessor for FollowingTagModel, (void (*)(void))sub_1DF64C0F4, (void (*)(void))sub_1DF64C128);
  uint64_t v169 = v20;
  uint64_t v153 = (uint64_t)*(v20 - 1);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  char v145 = (char *)v142 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  unint64_t v168 = (unint64_t)v142 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  unint64_t v151 = (char *)v142 - v26;
  MEMORY[0x1F4188790](v25);
  unint64_t v146 = (char *)v142 - v27;
  sub_1DEBEE754(0);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v174 = (char *)v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF64BF48(0, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
  uint64_t v164 = v30;
  uint64_t v165 = *(void *)(v30 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  uint64_t v160 = (char *)v142 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  id v167 = (char *)v142 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v170 = (char *)v142 - v36;
  MEMORY[0x1F4188790](v35);
  uint64_t v156 = (char *)v142 - v37;
  uint64_t v38 = sub_1DFDFBB00();
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v41 = (void (***)(char *, uint64_t))((char *)v142 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v172 = sub_1DFDFB530();
  uint64_t v42 = *(void *)(v172 - 8);
  MEMORY[0x1F4188790](v172);
  unint64_t v44 = (char *)v142 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *(void *)(v2 + 64);
  uint64_t v171 = (void (*)(void, void, void))v2;
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 40), v45);
  uint64_t v46 = *(void (***)(char *, uint64_t))(a1 + 16);
  _OWORD *v41 = v46;
  (*(void (**)(void (***)(char *, uint64_t), void, uint64_t))(v39 + 104))(v41, *MEMORY[0x1E4F81010], v38);
  uint64_t v159 = v46;
  swift_unknownObjectRetain();
  uint64_t v47 = v165;
  sub_1DFDFD2A0();
  (*(void (**)(void *, uint64_t))(v39 + 8))(v41, v38);
  char v48 = sub_1DFDFB510();
  uint64_t v49 = v164;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v172);
  uint64_t v50 = type metadata accessor for FollowingTagModel();
  uint64_t v51 = swift_allocObject();
  *(unsigned char *)(v51 + 16) = 1;
  *(void *)(v51 + 24) = a1;
  *(unsigned char *)(v51 + 32) = v48 & 1;
  sub_1DF64BF48(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v53 = v52;
  swift_retain();
  uint64_t v54 = (uint64_t)v174;
  sub_1DFDF5AF0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v54, 1, v49) != 1)
  {
    uint64_t v143 = v50;
    uint64_t v57 = v156;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v156, v54, v49);
    uint64_t v176 = 0;
    unint64_t v177 = 0xE000000000000000;
    LOBYTE(v187[0]) = 1;
    sub_1DFDFFB10();
    sub_1DFDFDE90();
    id v58 = objc_msgSend(*(id *)(a1 + 16), sel_identifier);
    sub_1DFDFDD20();

    sub_1DFDFDE90();
    swift_bridgeObjectRelease();
    char v59 = sub_1DFDF15B0();
    swift_bridgeObjectRelease();
    if (v59) {
      goto LABEL_6;
    }
    uint64_t v60 = *((void *)v171 + 2);
    id v61 = objc_msgSend(v159, sel_identifier);
    sub_1DFDFDD20();

    id v62 = *(void **)(v60 + OBJC_IVAR____TtC7NewsUI219SubscriptionService_subscriptionController);
    uint64_t v63 = (void *)sub_1DFDFDCE0();
    LOBYTE(v62) = objc_msgSend(v62, sel_isChannelPermanentForTagID_, v63);
    swift_bridgeObjectRelease();

    if (v62)
    {
LABEL_6:
      (*(void (**)(char *, uint64_t))(v47 + 8))(v57, v49);
      return swift_release();
    }
    uint64_t v144 = v53;
    v142[2] = *((void *)v171 + 4);
    sub_1DEA74FD4();
    uint64_t v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_1DFE13CF0;
    *(void *)(v82 + 32) = v51;
    uint64_t v176 = v82;
    sub_1DFDFE250();
    uint64_t v83 = v176;
    uint64_t v84 = sub_1DF64C0F4();
    uint64_t v85 = sub_1DF64C128();
    v142[1] = v51;
    swift_retain();
    uint64_t v86 = v151;
    MEMORY[0x1E01DBA90](v83, v143, v84, v85);
    (*(void (**)(unint64_t, char *, void (**)(char *)))(v153 + 16))(v168, v86, v169);
    uint64_t v87 = *(void (**)(void, void, void))(v47 + 16);
    uint64_t v172 = v47 + 16;
    uint64_t v171 = v87;
    v87(v170, v57, v49);
    sub_1DF64C008(&qword_1EAC22090);
    uint64_t v88 = (uint64_t)v147;
    sub_1DFDFDFB0();
    uint64_t v89 = (void *)(v88 + *(int *)(v152 + 36));
    uint64_t v90 = sub_1DF64C008((unint64_t *)&unk_1EBAEBCC0);
    uint64_t v91 = *v89;
    uint64_t v174 = (char *)v90;
    sub_1DFDFE720();
    uint64_t v92 = v49;
    uint64_t v93 = v155;
    uint64_t v94 = v148;
    uint64_t v95 = (uint64_t)v145;
    if (v91 != v176)
    {
      uint64_t v161 = (void (**)(char *))(v154 + 16);
      uint64_t v159 = (void (**)(char *, uint64_t))(v165 + 8);
      uint64_t v158 = (void (**)(char *, char *, uint64_t))(v154 + 32);
      uint64_t v160 = (char *)(v154 + 8);
      uint64_t v162 = (void (**)(unint64_t, void (**)(char *)))(v153 + 8);
      uint64_t v157 = (void (**)(unint64_t, uint64_t, void (**)(char *)))(v153 + 32);
      do
      {
        uint64_t v96 = v89;
        uint64_t v97 = (void (*)(uint64_t *, void))sub_1DFDFE760();
        uint64_t v98 = v166;
        (*v161)(v166);
        v97(&v176, 0);
        uint64_t v99 = v170;
        v171(v170, v88, v92);
        sub_1DFDFE730();
        (*v159)(v99, v92);
        (*v158)(v94, v98, v93);
        unint64_t v100 = v168;
        sub_1DF64B8F8(v168, v95);
        (*(void (**)(char *, uint64_t))v160)(v94, v93);
        uint64_t v101 = v169;
        (*v162)(v100, v169);
        (*v157)(v100, v95, v101);
        uint64_t v102 = *v96;
        sub_1DFDFE720();
        BOOL v103 = v102 == v176;
        uint64_t v89 = v96;
      }
      while (!v103);
    }
    swift_getObjectType();
    sub_1DF64CFF4(v88, (uint64_t (*)(void))sub_1DEC38D8C);
    uint64_t v104 = v153;
    uint64_t v105 = v146;
    uint64_t v106 = v169;
    (*(void (**)(char *, unint64_t, void (**)(char *)))(v153 + 32))(v146, v168, v169);
    uint64_t v107 = *(void (**)(char *, void (**)(char *)))(v104 + 8);
    v107(v151, v106);
    unint64_t v108 = sub_1DFDED270();
    v107(v105, v106);
    unint64_t v168 = sub_1DEDA9898(v108);
    swift_bridgeObjectRelease();
    uint64_t v109 = v156;
    uint64_t v110 = v92;
    uint64_t v111 = (void (*)(char *, char *, uint64_t))v171;
    v171(v167, v156, v92);
    uint64_t v112 = (uint64_t)v149;
    v111(v149, v109, v92);
    sub_1DFDFE6A0();
    uint64_t v113 = v152;
    *(void *)(v112 + *(int *)(v152 + 36)) = v176;
    uint64_t v114 = v173;
    sub_1DF64CF90(v112, v173);
    uint64_t v115 = (uint64_t *)(v114 + *(int *)(v113 + 36));
    uint64_t v116 = *v115;
    sub_1DFDFE720();
    uint64_t v117 = v150;
    uint64_t v118 = v170;
    if (v116 != v176)
    {
      uint64_t v169 = (void (**)(char *))(v154 + 16);
      id v119 = (void (**)(char *, uint64_t))(v165 + 8);
      uint64_t v120 = (void (**)(char *, uint64_t))(v154 + 8);
      do
      {
        uint64_t v121 = (void (*)(uint64_t *, void))sub_1DFDFE760();
        (*v169)(v117);
        v121(&v176, 0);
        v171(v118, v114, v110);
        sub_1DFDFE730();
        (*v119)(v118, v110);
        sub_1DFDF1570();
        (*v120)(v117, v93);
        uint64_t v122 = *v115;
        sub_1DFDFE720();
        BOOL v103 = v122 == v176;
        uint64_t v114 = v173;
      }
      while (!v103);
    }
    uint64_t v123 = v110;
    uint64_t v124 = (uint64_t)v174;
    sub_1DF64CFF4(v114, (uint64_t (*)(void))sub_1DEC38D8C);
    unint64_t v125 = v168;
    unint64_t v126 = v168 >> 62;
    if (!(v168 >> 62))
    {
      if (*(uint64_t *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 13) {
        unint64_t v127 = 13;
      }
      else {
        unint64_t v127 = *(void *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
LABEL_24:
      if ((v125 & 0xC000000000000001) != 0 && v127)
      {
        uint64_t v128 = 0;
        do
        {
          uint64_t v129 = v128 + 1;
          sub_1DFDFF9F0();
          uint64_t v128 = v129;
        }
        while (v127 != v129);
      }
      if (v126)
      {
        swift_bridgeObjectRetain();
        uint64_t v131 = sub_1DFDFFBF0();
        unint64_t v126 = v132;
        uint64_t v130 = v133;
        unint64_t v127 = v134;
        swift_bridgeObjectRelease_n();
        if (v127) {
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v130 = 0;
        uint64_t v131 = v125 & 0xFFFFFFFFFFFFFF8;
        unint64_t v126 = (v125 & 0xFFFFFFFFFFFFFF8) + 32;
        unint64_t v127 = (2 * v127) | 1;
        if (v127)
        {
LABEL_33:
          sub_1DFDFFF90();
          swift_unknownObjectRetain_n();
          uint64_t v137 = swift_dynamicCastClass();
          if (!v137)
          {
            swift_unknownObjectRelease();
            uint64_t v137 = MEMORY[0x1E4FBC860];
          }
          uint64_t v138 = *(void *)(v137 + 16);
          swift_release();
          if (!__OFSUB__(v127 >> 1, v130))
          {
            if (v138 == (v127 >> 1) - v130)
            {
              unint64_t v135 = swift_dynamicCastClass();
              char v136 = v167;
              if (!v135)
              {
                swift_unknownObjectRelease();
                unint64_t v135 = MEMORY[0x1E4FBC860];
              }
              goto LABEL_39;
            }
            goto LABEL_51;
          }
LABEL_50:
          __break(1u);
LABEL_51:
          swift_unknownObjectRelease();
        }
      }
      unint64_t v135 = sub_1DEC7A4A0(v131, v126, v130, v127);
      char v136 = v167;
LABEL_39:
      swift_unknownObjectRelease();
      sub_1DEDA9698(v135);
      swift_release();
      sub_1DFDF1520();
      swift_bridgeObjectRelease();
      sub_1DFDFE6A0();
      sub_1DFDFE720();
      if (v176 != v187[0]) {
        sub_1DFDF59D0();
      }
      swift_release();
      uint64_t v139 = *(void (**)(char *, uint64_t))(v165 + 8);
      v139(v136, v123);
      return ((uint64_t (*)(char *, uint64_t))v139)(v156, v123);
    }
    swift_bridgeObjectRetain();
    uint64_t v140 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    uint64_t v141 = 13;
    if (v140 >= 13) {
      unint64_t v127 = 13;
    }
    else {
      unint64_t v127 = v140;
    }
    if ((v127 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v130 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      if ((v130 & 0x8000000000000000) == 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v131 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        if (v131 < (uint64_t)v127)
        {
          __break(1u);
          goto LABEL_50;
        }
        goto LABEL_54;
      }
    }
    __break(1u);
    (**(void (***)(uint64_t, uint64_t))(v141 - 256))(v123, v93);
    sub_1DF64CFF4(v124, (uint64_t (*)(void))sub_1DEC38D8C);
    (*v162)(v114, v169);
    __break(1u);
LABEL_54:
    unint64_t v125 = v168;
    goto LABEL_24;
  }
  sub_1DF64CFF4(v54, (uint64_t (*)(void))sub_1DEBEE754);
  unsigned int v55 = objc_msgSend(*((id *)v171 + 1), sel_isOptedInToSiriSuggestions);
  uint64_t v144 = v53;
  uint64_t v56 = v51;
  if (v55) {
    sub_1DF9BAC94(v187);
  }
  else {
    sub_1DF9BADCC(v187);
  }
  uint64_t v64 = v187[8];
  uint64_t v174 = (char *)v187[7];
  uint64_t v66 = v187[5];
  uint64_t v65 = (void *)v187[6];
  uint64_t v67 = v187[3];
  uint64_t v68 = v187[4];
  uint64_t v69 = (char *)v187[1];
  uint64_t v70 = v187[2];
  uint64_t v71 = v187[0];
  sub_1DEA74FD4();
  uint64_t v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = xmmword_1DFE13CF0;
  *(void *)(v72 + 32) = v56;
  uint64_t v176 = v72;
  sub_1DFDFE250();
  uint64_t v73 = v176;
  uint64_t v176 = v71;
  unint64_t v177 = (unint64_t)v69;
  uint64_t v178 = v70;
  uint64_t v179 = v67;
  uint64_t v180 = v68;
  uint64_t v181 = v66;
  id v182 = v65;
  uint64_t v183 = v174;
  uint64_t v184 = v64;
  uint64_t v185 = v73;
  char v186 = 8;
  uint64_t v74 = sub_1DF64BE98();
  uint64_t v75 = sub_1DF64BF14();
  swift_retain();
  uint64_t v174 = v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v76 = v65;
  swift_bridgeObjectRetain();
  uint64_t v77 = v155;
  MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v155, v74, v75);
  type metadata accessor for FollowingModel();
  sub_1DEADC298();
  sub_1DF64BECC(&qword_1EBAD4970, (void (*)(uint64_t))type metadata accessor for FollowingModel);
  uint64_t v78 = v160;
  sub_1DFDF14C0();
  uint64_t v79 = v161;
  sub_1DEDA90F4();
  uint64_t v80 = v164;
  sub_1DFDF1530();
  (*(void (**)(void (**)(char *), uint64_t))(v154 + 8))(v79, v77);
  sub_1DF64C008((unint64_t *)&unk_1EBAEBCC0);
  sub_1DFDFE6A0();
  sub_1DFDFE720();
  if (v176 == v175)
  {
    (*(void (**)(char *, uint64_t))(v165 + 8))(v78, v80);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  sub_1DECD1110();
  sub_1DFDF5AC0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v165 + 8))(v78, v80);
}

void sub_1DF64B8F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF64C068(0, (unint64_t *)&qword_1EBAA77B0, (void (*)(uint64_t))type metadata accessor for FollowingTagModel, (void (*)(void))sub_1DF64C0F4, (void (*)(void))sub_1DF64C128);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, a1, v7);
  sub_1DEB0B564(0);
  sub_1DFDF0B50();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
    case 0xEu:
      uint64_t v10 = (void *)*((void *)v6 + 3);
      goto LABEL_4;
    case 2u:
      uint64_t v11 = type metadata accessor for FollowingAudioModel;
      goto LABEL_11;
    case 3u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
      goto LABEL_6;
    case 6u:
    case 7u:
      v13[1] = *(void *)v6;
      sub_1DFDED290();
LABEL_6:
      swift_release();
      return;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      (*(void (**)(char *, uint64_t))(v9 + 8))(&v6[*(int *)(v12 + 48)], v8);
      return;
    case 0x10u:
      uint64_t v11 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_11;
    case 0x11u:
      uint64_t v11 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_11:
      sub_1DF64CFF4((uint64_t)v6, (uint64_t (*)(void))v11);
      break;
    default:
      uint64_t v10 = (void *)*((void *)v6 + 2);
LABEL_4:
      swift_bridgeObjectRelease();

      break;
  }
}

BOOL sub_1DF64BB70(uint64_t a1, uint64_t a2)
{
  return qword_1DFE6C010[*(char *)(a1 + 80)] < qword_1DFE6C010[*(char *)(a2 + 80)];
}

uint64_t sub_1DF64BB98(uint64_t a1)
{
  unint64_t v2 = sub_1DECE3BF4();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DF64BBD8()
{
  unint64_t result = qword_1EAC2F050;
  if (!qword_1EAC2F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F050);
  }
  return result;
}

uint64_t sub_1DF64BC2C()
{
  return sub_1DF64BECC(&qword_1EBAD4970, (void (*)(uint64_t))type metadata accessor for FollowingModel);
}

uint64_t sub_1DF64BC74()
{
  sub_1DF64BF48(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 40);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF64BD74()
{
  sub_1DF64BF48(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = v0 + ((v4 + 87) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void (**)(char *))v6;
  uint64_t v8 = *(void *)(v6 + 8);
  return sub_1DF649F00(v5, (uint64_t *)(v0 + v4), v7, v8);
}

uint64_t sub_1DF64BE2C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DEE484D4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DF64C15C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DF64BE98()
{
  return sub_1DF64BECC(&qword_1EBAEBBB0, sub_1DEB0B564);
}

uint64_t sub_1DF64BECC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF64BF14()
{
  return sub_1DF64BECC((unint64_t *)&unk_1EBAEBBA0, sub_1DEB0B564);
}

void sub_1DF64BF48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FollowingDescriptor;
    v8[1] = type metadata accessor for FollowingModel();
    _OWORD v8[2] = sub_1DEADC298();
    v8[3] = sub_1DF64BECC(&qword_1EBAD4970, (void (*)(uint64_t))type metadata accessor for FollowingModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DF64C008(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DF64BF48(255, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF64C068(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    a5();
    unint64_t v8 = sub_1DFDED2E0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF64C0F4()
{
  return sub_1DF64BECC(&qword_1EBAAC0B0, (void (*)(uint64_t))type metadata accessor for FollowingTagModel);
}

uint64_t sub_1DF64C128()
{
  return sub_1DF64BECC((unint64_t *)&unk_1EBAAC0A0, (void (*)(uint64_t))type metadata accessor for FollowingTagModel);
}

uint64_t sub_1DF64C15C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DFDFFED0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1DF64CB08(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v119 = result;
  uint64_t v116 = a1;
  if (v3 < 2)
  {
    unint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v125 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v118 = MEMORY[0x1E4FBC860];
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_118:
      if (v11 >= 2)
      {
        uint64_t v108 = *v116;
        do
        {
          unint64_t v109 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_147;
          }
          if (!v108) {
            goto LABEL_159;
          }
          uint64_t v110 = v8;
          uint64_t v111 = v8 + 32;
          uint64_t v112 = *(void *)&v8[16 * v109 + 32];
          uint64_t v113 = *(void *)&v8[16 * v11 + 24];
          sub_1DF64CC30((unsigned __int8 *)(v108 + 16 * v112), (unsigned __int8 *)(v108 + 16 * *(void *)&v111[16 * v11 - 16]), v108 + 16 * v113, v125);
          if (v1) {
            break;
          }
          if (v113 < v112) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v110 = sub_1DEE48394((uint64_t)v110);
          }
          if (v109 >= *((void *)v110 + 2)) {
            goto LABEL_149;
          }
          uint64_t v114 = &v110[16 * v109 + 32];
          *(void *)uint64_t v114 = v112;
          *((void *)v114 + 1) = v113;
          unint64_t v115 = *((void *)v110 + 2);
          if (v11 > v115) {
            goto LABEL_150;
          }
          unint64_t v8 = v110;
          memmove(&v110[16 * v11 + 16], &v110[16 * v11 + 32], 16 * (v115 - v11));
          *((void *)v110 + 2) = v115 - 1;
          unint64_t v11 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_129:
      swift_bridgeObjectRelease();
      *(void *)(v118 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1DFDFE350();
    *(void *)(v7 + 16) = v6;
    uint64_t v118 = v7;
    unint64_t v125 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v117 = *a1 + 8;
  unint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v121 = v3;
  while (1)
  {
    uint64_t v123 = v9;
    uint64_t v12 = v9 + 1;
    uint64_t v120 = v8;
    if (v9 + 1 >= v3)
    {
      uint64_t v22 = v9 + 1;
      goto LABEL_50;
    }
    uint64_t v13 = v10 + 16 * v12;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 8);
    if (v14 > 0x3F)
    {
      uint64_t v21 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_49;
      }
      BOOL v19 = 0;
    }
    else
    {
      uint64_t v15 = (uint64_t *)(v10 + 16 * v9);
      uint64_t v16 = *((unsigned __int8 *)v15 + 8);
      if (v16 > 0x3F)
      {
        uint64_t v21 = v123 + 2;
        uint64_t v3 = v121;
        if (v123 + 2 >= v121)
        {
          uint64_t v32 = v123;
          if (v123 < v21) {
            goto LABEL_40;
          }
LABEL_49:
          uint64_t v22 = v21;
          goto LABEL_50;
        }
        BOOL v19 = 1;
      }
      else
      {
        uint64_t v17 = *(void *)v13;
        uint64_t v18 = *v15;
        j__swift_retain(*v15, *((unsigned __int8 *)v15 + 8));
        j__swift_retain(v17, v14);
        BOOL v19 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v17, v18);
        j__swift_release(v18, v16);
        uint64_t v20 = v17;
        unint64_t v8 = v120;
        j__swift_release(v20, v14);
        uint64_t v21 = v123 + 2;
        uint64_t v3 = v121;
        if (v123 + 2 >= v121) {
          goto LABEL_35;
        }
      }
    }
    uint64_t v23 = (unsigned __int8 *)(v117 + 16 * v21);
    uint64_t v24 = v21;
    do
    {
      uint64_t v21 = v24;
      uint64_t v25 = *v23;
      if (v25 > 0x3F)
      {
        if (v19) {
          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v26 = (uint64_t *)(v10 + 16 * v12);
        uint64_t v27 = *((unsigned __int8 *)v26 + 8);
        if (v27 > 0x3F)
        {
          uint64_t v3 = v121;
          if (!v19) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v28 = *((void *)v23 - 1);
          uint64_t v29 = *v26;
          j__swift_retain(*v26, *((unsigned __int8 *)v26 + 8));
          j__swift_retain(v28, v25);
          BOOL v30 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v28, v29);
          j__swift_release(v29, v27);
          uint64_t v31 = v28;
          unint64_t v8 = v120;
          j__swift_release(v31, v25);
          uint64_t v3 = v121;
          if ((v19 ^ v30)) {
            goto LABEL_35;
          }
        }
      }
      v23 += 16;
      uint64_t v24 = v21 + 1;
      uint64_t v12 = v21;
    }
    while (v21 + 1 < v3);
    ++v21;
LABEL_35:
    uint64_t v22 = v21;
    if (v19)
    {
LABEL_36:
      uint64_t v32 = v123;
      if (v21 < v123) {
        goto LABEL_155;
      }
      if (v123 < v21)
      {
LABEL_40:
        uint64_t v33 = 16 * v21 - 16;
        uint64_t v34 = 16 * v32;
        uint64_t v35 = v21;
        while (1)
        {
          if (v32 != --v35)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v37 = (_OWORD *)(v10 + v34);
            uint64_t v38 = (_OWORD *)(v10 + v33);
            uint64_t v39 = *(void *)(v10 + v34);
            char v40 = *(unsigned char *)(v10 + v34 + 8);
            if (v34 != v33 || v37 >= v38 + 1) {
              _OWORD *v37 = *v38;
            }
            uint64_t v36 = v10 + v33;
            *(void *)uint64_t v36 = v39;
            *(unsigned char *)(v36 + 8) = v40;
          }
          ++v32;
          v33 -= 16;
          v34 += 16;
          if (v32 >= v35) {
            goto LABEL_49;
          }
        }
      }
      goto LABEL_49;
    }
LABEL_50:
    uint64_t v41 = v22;
    if (v22 >= v3) {
      goto LABEL_67;
    }
    uint64_t v42 = v22 - v123;
    if (__OFSUB__(v41, v123)) {
      goto LABEL_151;
    }
    if (v42 >= v119)
    {
LABEL_67:
      uint64_t v44 = v123;
      goto LABEL_68;
    }
    uint64_t v43 = v123 + v119;
    if (__OFADD__(v123, v119)) {
      goto LABEL_153;
    }
    if (v43 >= v3) {
      uint64_t v43 = v3;
    }
    if (v43 < v123) {
      break;
    }
    uint64_t v44 = v123;
    if (v41 != v43)
    {
      uint64_t v45 = (unsigned __int8 *)(v10 + 16 * v41);
      uint64_t v126 = v10;
      uint64_t v122 = v43;
      do
      {
        uint64_t v124 = v45;
        uint64_t v127 = v41;
        do
        {
          uint64_t v46 = v45[8];
          if (v46 > 0x3F) {
            break;
          }
          uint64_t v47 = *(v45 - 8);
          if (v47 <= 0x3F)
          {
            uint64_t v48 = *(void *)v45;
            uint64_t v130 = *(void *)v45;
            uint64_t v49 = *(void **)(*(void *)v45 + 16);
            uint64_t v131 = *((void *)v45 - 2);
            unsigned int v129 = *(v45 - 8);
            j__swift_retain(v131, v47);
            j__swift_retain(v48, v46);
            id v50 = objc_msgSend(v49, sel_name);
            sub_1DFDFDD20();

            sub_1DFDFDDD0();
            swift_bridgeObjectRelease();
            id v51 = objc_msgSend(v49, sel_identifier);
            sub_1DFDFDD20();

            sub_1DFDFDE90();
            swift_bridgeObjectRelease();
            uint64_t v52 = *(void **)(v131 + 16);
            id v53 = objc_msgSend(v52, sel_name);
            sub_1DFDFDD20();

            sub_1DFDFDDD0();
            swift_bridgeObjectRelease();
            id v54 = objc_msgSend(v52, sel_identifier);
            sub_1DFDFDD20();

            sub_1DFDFDE90();
            uint64_t v10 = v126;
            swift_bridgeObjectRelease();
            sub_1DEA4DB08();
            uint64_t v55 = sub_1DFDFF720();
            swift_bridgeObjectRelease();
            uint64_t v41 = v127;
            swift_bridgeObjectRelease();
            j__swift_release(v131, v129);
            j__swift_release(v130, v46);
            if (v55 != -1) {
              break;
            }
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v56 = *(void *)v45;
          unsigned __int8 v57 = v45[8];
          *(_OWORD *)uint64_t v45 = *((_OWORD *)v45 - 1);
          *(v45 - 8) = v57;
          *((void *)v45 - 2) = v56;
          v45 -= 16;
          ++v44;
        }
        while (v41 != v44);
        ++v41;
        uint64_t v44 = v123;
        uint64_t v45 = v124 + 16;
      }
      while (v41 != v122);
      uint64_t v41 = v122;
      unint64_t v8 = v120;
      if (v122 < v123) {
        goto LABEL_146;
      }
      goto LABEL_69;
    }
LABEL_68:
    if (v41 < v44) {
      goto LABEL_146;
    }
LABEL_69:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v8 = sub_1DEE47AC8(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v59 = *((void *)v8 + 2);
    unint64_t v58 = *((void *)v8 + 3);
    unint64_t v11 = v59 + 1;
    uint64_t v128 = v41;
    if (v59 >= v58 >> 1) {
      unint64_t v8 = sub_1DEE47AC8((char *)(v58 > 1), v59 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    uint64_t v60 = v8 + 32;
    id v61 = &v8[16 * v59 + 32];
    *(void *)id v61 = v44;
    *((void *)v61 + 1) = v128;
    if (v59)
    {
      while (1)
      {
        unint64_t v62 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v67 = &v60[16 * v11];
          uint64_t v68 = *((void *)v67 - 8);
          uint64_t v69 = *((void *)v67 - 7);
          BOOL v73 = __OFSUB__(v69, v68);
          uint64_t v70 = v69 - v68;
          if (v73) {
            goto LABEL_135;
          }
          uint64_t v72 = *((void *)v67 - 6);
          uint64_t v71 = *((void *)v67 - 5);
          BOOL v73 = __OFSUB__(v71, v72);
          uint64_t v65 = v71 - v72;
          char v66 = v73;
          if (v73) {
            goto LABEL_136;
          }
          unint64_t v74 = v11 - 2;
          uint64_t v75 = &v60[16 * v11 - 32];
          uint64_t v77 = *(void *)v75;
          uint64_t v76 = *((void *)v75 + 1);
          BOOL v73 = __OFSUB__(v76, v77);
          uint64_t v78 = v76 - v77;
          if (v73) {
            goto LABEL_138;
          }
          BOOL v73 = __OFADD__(v65, v78);
          uint64_t v79 = v65 + v78;
          if (v73) {
            goto LABEL_141;
          }
          if (v79 >= v70)
          {
            uint64_t v97 = &v60[16 * v62];
            uint64_t v99 = *(void *)v97;
            uint64_t v98 = *((void *)v97 + 1);
            BOOL v73 = __OFSUB__(v98, v99);
            uint64_t v100 = v98 - v99;
            if (v73) {
              goto LABEL_145;
            }
            BOOL v90 = v65 < v100;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v91 = *((void *)v8 + 4);
            uint64_t v92 = *((void *)v8 + 5);
            BOOL v73 = __OFSUB__(v92, v91);
            uint64_t v84 = v92 - v91;
            char v85 = v73;
            goto LABEL_99;
          }
          uint64_t v64 = *((void *)v8 + 4);
          uint64_t v63 = *((void *)v8 + 5);
          BOOL v73 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          char v66 = v73;
        }
        if (v66) {
          goto LABEL_137;
        }
        unint64_t v74 = v11 - 2;
        uint64_t v80 = &v60[16 * v11 - 32];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v83 = __OFSUB__(v81, v82);
        uint64_t v84 = v81 - v82;
        char v85 = v83;
        if (v83) {
          goto LABEL_140;
        }
        uint64_t v86 = &v60[16 * v62];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v73 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v73) {
          goto LABEL_143;
        }
        if (__OFADD__(v84, v89)) {
          goto LABEL_144;
        }
        if (v84 + v89 >= v65)
        {
          BOOL v90 = v65 < v89;
LABEL_105:
          if (v90) {
            unint64_t v62 = v74;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v85) {
          goto LABEL_139;
        }
        uint64_t v93 = &v60[16 * v62];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v73 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v73) {
          goto LABEL_142;
        }
        if (v96 < v84) {
          goto LABEL_14;
        }
LABEL_107:
        unint64_t v101 = v62 - 1;
        if (v62 - 1 >= v11)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v102 = v8;
        BOOL v103 = &v60[16 * v101];
        uint64_t v104 = *(void *)v103;
        uint64_t v105 = &v60[16 * v62];
        uint64_t v106 = *((void *)v105 + 1);
        sub_1DF64CC30((unsigned __int8 *)(v10 + 16 * *(void *)v103), (unsigned __int8 *)(v10 + 16 * *(void *)v105), v10 + 16 * v106, v125);
        if (v1) {
          goto LABEL_129;
        }
        if (v106 < v104) {
          goto LABEL_132;
        }
        if (v62 > *((void *)v102 + 2)) {
          goto LABEL_133;
        }
        *(void *)BOOL v103 = v104;
        *(void *)&v60[16 * v101 + 8] = v106;
        unint64_t v107 = *((void *)v102 + 2);
        if (v62 >= v107) {
          goto LABEL_134;
        }
        unint64_t v8 = v102;
        unint64_t v11 = v107 - 1;
        memmove(&v60[16 * v62], v105 + 16, 16 * (v107 - 1 - v62));
        *((void *)v102 + 2) = v107 - 1;
        if (v107 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    uint64_t v3 = v121;
    uint64_t v9 = v128;
    if (v128 >= v121) {
      goto LABEL_118;
    }
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1DFDFFBA0();
  __break(1u);
  return result;
}

uint64_t sub_1DF64CB08(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v15 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v17 = *a4;
    uint64_t v5 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v16 = v5;
    uint64_t v6 = v15;
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 *)(v5 + 8);
      if (v7 > 0x3F) {
        goto LABEL_4;
      }
      uint64_t v8 = *(void *)(v5 - 16);
      uint64_t v9 = *(unsigned __int8 *)(v5 - 8);
      if (v9 <= 0x3F)
      {
        uint64_t v10 = *(void *)v5;
        j__swift_retain(*(void *)(v5 - 16), *(unsigned __int8 *)(v5 - 8));
        j__swift_retain(v10, v7);
        BOOL v11 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v10, v8);
        j__swift_release(v8, v9);
        uint64_t result = j__swift_release(v10, v7);
        if (!v11)
        {
LABEL_4:
          ++v4;
          uint64_t v5 = v16 + 16;
          if (v4 == a2) {
            return result;
          }
          goto LABEL_5;
        }
      }
      if (!v17) {
        break;
      }
      uint64_t v12 = *(void *)v5;
      char v13 = *(unsigned char *)(v5 + 8);
      *(_OWORD *)uint64_t v5 = *(_OWORD *)(v5 - 16);
      *(unsigned char *)(v5 - 8) = v13;
      *(void *)(v5 - 16) = v12;
      v5 -= 16;
      if (v4 == ++v6) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF64CC30(unsigned __int8 *a1, unsigned __int8 *__src, unint64_t a3, char *__dst)
{
  unint64_t v4 = a3;
  uint64_t v5 = __src;
  uint64_t v6 = a1;
  uint64_t v7 = __src - a1;
  uint64_t v8 = __src - a1 + 15;
  if (__src - a1 >= 0) {
    uint64_t v8 = __src - a1;
  }
  uint64_t v9 = v8 >> 4;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v11 = a3 - (void)__src;
  }
  uint64_t v12 = v11 >> 4;
  char v40 = a1;
  uint64_t v39 = __dst;
  uint64_t v33 = __dst;
  if (v9 >= v12)
  {
    if (v10 >= -15)
    {
      uint64_t v24 = 16 * v12;
      if (__dst != (char *)__src || &__src[v24] <= (unsigned __int8 *)__dst)
      {
        memmove(__dst, __src, 16 * v12);
        __dst = v33;
        uint64_t v6 = a1;
      }
      uint64_t v25 = &__dst[v24];
      uint64_t v38 = &__dst[v24];
      char v40 = v5;
      if (v6 < v5 && (unint64_t)(v10 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v26 = (unsigned __int8 *)(v4 - 16);
        while (1)
        {
          uint64_t v27 = v26 + 16;
          uint64_t v28 = *((void *)v25 - 2);
          uint64_t v29 = *(v25 - 8);
          if (v29 > 0x3F) {
            goto LABEL_41;
          }
          BOOL v30 = v5 - 16;
          uint64_t v31 = *(v5 - 8);
          if (v31 > 0x3F) {
            goto LABEL_37;
          }
          uint64_t v37 = *((void *)v5 - 2);
          j__swift_retain(v37, v31);
          j__swift_retain(v28, v29);
          BOOL v35 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v28, v37);
          j__swift_release(v37, v31);
          j__swift_release(v28, v29);
          __dst = v33;
          uint64_t v6 = a1;
          if (v35)
          {
LABEL_37:
            if (v27 != v5 || v26 >= v5) {
              *(_OWORD *)uint64_t v26 = *(_OWORD *)v30;
            }
            char v40 = v5 - 16;
            if (v30 <= v6) {
              goto LABEL_47;
            }
          }
          else
          {
LABEL_41:
            uint64_t v38 = v25 - 16;
            if (v27 < (unsigned __int8 *)v25 || v26 >= (unsigned __int8 *)v25 || v27 != (unsigned __int8 *)v25) {
              *(_OWORD *)uint64_t v26 = *((_OWORD *)v25 - 1);
            }
            BOOL v30 = v5;
            v25 -= 16;
            if (v5 <= v6) {
              goto LABEL_47;
            }
          }
          v26 -= 16;
          uint64_t v5 = v30;
          if (v25 <= __dst) {
            goto LABEL_47;
          }
        }
      }
      goto LABEL_47;
    }
  }
  else if (v7 >= -15)
  {
    size_t v13 = 16 * v9;
    if (__dst != (char *)a1 || &a1[v13] <= (unsigned __int8 *)__dst)
    {
      memmove(__dst, a1, v13);
      __dst = v33;
      uint64_t v6 = a1;
    }
    uint64_t v14 = &__dst[v13];
    uint64_t v38 = &__dst[v13];
    if ((unint64_t)v5 < v4 && (unint64_t)(v7 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      unint64_t v36 = v4;
      do
      {
        uint64_t v15 = v5[8];
        if (v15 > 0x3F) {
          goto LABEL_20;
        }
        uint64_t v16 = __dst[8];
        if (v16 > 0x3F) {
          goto LABEL_16;
        }
        uint64_t v17 = *(void *)v5;
        uint64_t v18 = *(void *)__dst;
        BOOL v19 = v6;
        uint64_t v20 = __dst;
        j__swift_retain(*(void *)__dst, __dst[8]);
        j__swift_retain(v17, v15);
        BOOL v21 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v17, v18);
        j__swift_release(v18, v16);
        uint64_t v22 = v17;
        unint64_t v4 = v36;
        j__swift_release(v22, v15);
        uint64_t v6 = v19;
        __dst = v20;
        if (v21)
        {
LABEL_16:
          uint64_t v23 = v5 + 16;
          if (v6 < v5 || v6 >= v23 || v6 != v5) {
            *(_OWORD *)uint64_t v6 = *(_OWORD *)v5;
          }
        }
        else
        {
LABEL_20:
          if (v6 != (unsigned __int8 *)__dst) {
            *(_OWORD *)uint64_t v6 = *(_OWORD *)__dst;
          }
          __dst += 16;
          uint64_t v39 = __dst;
          uint64_t v23 = v5;
        }
        v6 += 16;
        if (__dst >= v14) {
          break;
        }
        uint64_t v5 = v23;
      }
      while ((unint64_t)v23 < v4);
      char v40 = v6;
    }
LABEL_47:
    sub_1DEE4806C((void **)&v40, (const void **)&v39, &v38);
    return 1;
  }
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DF64CF90(uint64_t a1, uint64_t a2)
{
  sub_1DEC38D8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF64CFF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF64D054(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    do
    {
      uint64_t v7 = (uint64_t *)(v4 + 16 * v3);
      uint64_t v8 = *v7;
      char v9 = *((unsigned char *)v7 + 8);
      uint64_t v10 = (uint64_t *)(v5 + 16 * v3);
      uint64_t v11 = *v10;
      char v12 = *((unsigned char *)v10 + 8);
      if (v9)
      {
        if ((v12 & 1) == 0) {
          return 0;
        }
        unint64_t v13 = 0xE400000000000000;
        uint64_t v14 = 1701667182;
        switch((char)v8)
        {
          case 1:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v14 = 0x6465727574616566;
            break;
          case 2:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v14 = 0x7974697669746361;
            break;
          case 3:
            uint64_t v14 = 0x446873696C627570;
            unint64_t v13 = 0xEB00000000657461;
            break;
          default:
            break;
        }
        unint64_t v23 = 0xE400000000000000;
        uint64_t v24 = 1701667182;
        switch((char)v11)
        {
          case 1:
            unint64_t v23 = 0xE800000000000000;
            if (v14 == 0x6465727574616566) {
              goto LABEL_31;
            }
            goto LABEL_5;
          case 2:
            unint64_t v23 = 0xE800000000000000;
            uint64_t v24 = 0x7974697669746361;
            goto LABEL_30;
          case 3:
            unint64_t v23 = 0xEB00000000657461;
            if (v14 != 0x446873696C627570) {
              goto LABEL_5;
            }
            goto LABEL_31;
          default:
LABEL_30:
            if (v14 != v24) {
              goto LABEL_5;
            }
LABEL_31:
            if (v13 == v23)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
LABEL_5:
              char v6 = sub_1DFDFFF50();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v6 & 1) == 0) {
                return 0;
              }
            }
            break;
        }
      }
      else
      {
        if (v12) {
          return 0;
        }
        uint64_t v15 = *(void *)(v8 + 16);
        if (v15 != *(void *)(v11 + 16)) {
          return 0;
        }
        if (v15) {
          BOOL v16 = v8 == v11;
        }
        else {
          BOOL v16 = 1;
        }
        if (!v16)
        {
          if (*(unsigned __int8 *)(v8 + 32) != *(unsigned __int8 *)(v11 + 32)) {
            return 0;
          }
          if (v15 != 1)
          {
            if (*(unsigned __int8 *)(v8 + 33) != *(unsigned __int8 *)(v11 + 33)) {
              return 0;
            }
            uint64_t v17 = (unsigned __int8 *)(v8 + 34);
            uint64_t v18 = (unsigned __int8 *)(v11 + 34);
            for (uint64_t i = v15 - 2; i; --i)
            {
              int v21 = *v17++;
              int v20 = v21;
              int v22 = *v18++;
              if (v20 != v22) {
                return 0;
              }
            }
          }
        }
      }
      ++v3;
    }
    while (v3 != v2);
  }
  return 1;
}

BOOL sub_1DF64D2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (unsigned __int8 *)(a1 + 33);
  uint64_t v4 = (unsigned __int8 *)(a2 + 33);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1DF64D33C(uint64_t a1, uint64_t a2)
{
  return sub_1DEA5F3A4(a1, a2, (uint64_t (*)(void))sub_1DEB0D97C, &qword_1EAC21470, sub_1DEB0D97C, MEMORY[0x1E4FABD68]);
}

uint64_t sub_1DF64D384(uint64_t a1, uint64_t a2)
{
  return sub_1DF64E8E4(a1, a2, type metadata accessor for MagazineCategoryConfig, type metadata accessor for MagazineCategoryConfig, (uint64_t (*)(char *, char *))sub_1DEDA4398, type metadata accessor for MagazineCategoryConfig);
}

uint64_t sub_1DF64D3D8(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v7 = sub_1DF64D054(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0) {
    return 0;
  }
  int v8 = a1 + 5;
  int v9 = a2 + 5;
  uint64_t v10 = v2 - 1;
  do
  {
    BOOL v11 = v10 == 0;
    if (!v10) {
      break;
    }
    uint64_t v13 = *v8++;
    uint64_t v12 = v13;
    uint64_t v14 = *v9++;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v15 = sub_1DF64D054(v12, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v10;
  }
  while ((v15 & 1) != 0);
  return v11;
}

uint64_t sub_1DF64D4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    char v5 = *(unsigned char *)(a1 + 80);
    double v6 = *(double *)(a1 + 72);
    double v7 = *(double *)(a1 + 56);
    char v8 = *(unsigned char *)(a1 + 48);
    double v9 = *(double *)(a1 + 40);
    double v10 = *(double *)(a2 + 40);
    char v11 = *(unsigned char *)(a2 + 48);
    double v12 = *(double *)(a2 + 56);
    char v13 = *(unsigned char *)(a2 + 64);
    double v14 = *(double *)(a2 + 72);
    char v22 = *(unsigned char *)(a2 + 80);
    char v23 = *(unsigned char *)(a1 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v15 = sub_1DFDF71E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v16 = 0;
      while (1)
      {
        if (v8)
        {
          if ((v11 & 1) == 0) {
            return 0;
          }
        }
        else if (v11 & 1 | (v9 != v10))
        {
          return 0;
        }
        if (v23)
        {
          if ((v13 & 1) == 0) {
            return 0;
          }
        }
        else if (v13 & 1 | (v7 != v12))
        {
          return 0;
        }
        if (v5)
        {
          if ((v22 & 1) == 0) {
            return 0;
          }
        }
        else if (v22 & 1 | (v6 != v14))
        {
          return 0;
        }
        if (!--v2) {
          break;
        }
        char v5 = *(unsigned char *)(a1 + v16 + 136);
        uint64_t v21 = v16 + 56;
        char v17 = *(unsigned char *)(a1 + v16 + 120);
        char v8 = *(unsigned char *)(a1 + v16 + 104);
        double v6 = *(double *)(a1 + v16 + 128);
        double v7 = *(double *)(a1 + v16 + 112);
        double v9 = *(double *)(a1 + v16 + 96);
        uint64_t v18 = a2 + v16;
        double v10 = *(double *)(v18 + 96);
        char v11 = *(unsigned char *)(v18 + 104);
        double v12 = *(double *)(v18 + 112);
        char v13 = *(unsigned char *)(v18 + 120);
        double v14 = *(double *)(v18 + 128);
        char v22 = *(unsigned char *)(v18 + 136);
        char v23 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v19 = sub_1DFDF71E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        uint64_t v16 = v21;
        if ((v19 & 1) == 0) {
          return result;
        }
      }
      return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1DF64D6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v152 = type metadata accessor for ShortcutIconURL();
  uint64_t v4 = MEMORY[0x1F4188790](v152);
  uint64_t v161 = (uint64_t)v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v149 = (uint64_t)v129 - v6;
  sub_1DF0329EC();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v162 = (uint64_t)v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  double v12 = (char *)v129 - v11;
  uint64_t v159 = type metadata accessor for ShortcutIcon();
  uint64_t v13 = *(void *)(v159 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v159);
  uint64_t v156 = (uint64_t)v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v153 = (void *)((char *)v129 - v17);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v151 = (uint64_t)v129 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  char v150 = (void *)((char *)v129 - v21);
  MEMORY[0x1F4188790](v20);
  uint64_t v157 = (uint64_t)v129 - v22;
  sub_1DEE731F4();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE76158();
  uint64_t v158 = v26;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for ShortcutCategory();
  uint64_t v29 = MEMORY[0x1F4188790](v160);
  uint64_t v31 = (void *)((char *)v129 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v29);
  uint64_t v34 = (void *)((char *)v129 - v33);
  uint64_t v35 = *(void *)(a1 + 16);
  if (v35 == *(void *)(a2 + 16))
  {
    if (!v35 || a1 == a2) {
      return 1;
    }
    unint64_t v36 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v138 = *(void *)(v32 + 72);
    uint64_t v144 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    unint64_t v37 = v36;
    uint64_t v147 = v31;
    char v136 = (char *)v129 - v33;
    unint64_t v146 = v12;
    uint64_t v145 = v8;
    BOOL v148 = v25;
    uint64_t v141 = v28;
    uint64_t v140 = a2;
    uint64_t v139 = a1;
    while (1)
    {
      uint64_t v155 = v35;
      sub_1DF6506DC(a1 + v37, (uint64_t)v34);
      sub_1DF6506DC(a2 + v37, (uint64_t)v31);
      BOOL v39 = *v34 == *v31 && v34[1] == v31[1];
      if (!v39 && (sub_1DFDFFF50() & 1) == 0) {
        break;
      }
      BOOL v40 = v34[2] == v31[2] && v34[3] == v31[3];
      if (!v40 && (sub_1DFDFFF50() & 1) == 0) {
        break;
      }
      unint64_t v154 = v37;
      uint64_t v41 = *(int *)(v160 + 24);
      uint64_t v42 = (uint64_t)v31 + v41;
      uint64_t v43 = (uint64_t)&v28[*(int *)(v158 + 48)];
      sub_1DF662FD0((uint64_t)v34 + v41, (uint64_t)v28, (uint64_t (*)(void))sub_1DEE731F4);
      sub_1DF662FD0(v42, v43, (uint64_t (*)(void))sub_1DEE731F4);
      uint64_t v44 = *v144;
      uint64_t v45 = v159;
      if ((*v144)(v28, 1, v159) == 1)
      {
        if (v44((char *)v43, 1, v45) != 1) {
          goto LABEL_53;
        }
      }
      else
      {
        sub_1DF662FD0((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(void))sub_1DEE731F4);
        if (v44((char *)v43, 1, v45) == 1)
        {
          sub_1DF65AAF4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
LABEL_53:
          uint64_t v122 = sub_1DEE76158;
          goto LABEL_65;
        }
        uint64_t v46 = (uint64_t)v25;
        uint64_t v47 = v157;
        sub_1DF66155C(v43, v157, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
        uint64_t v48 = &v12[*(int *)(v8 + 48)];
        sub_1DF662FD0(v46, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
        sub_1DF662FD0(v47, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v49 = v151;
          sub_1DF662FD0((uint64_t)v12, v151, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            sub_1DF65AAF4(v49, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
LABEL_63:
            uint64_t v25 = v148;
            uint64_t v28 = v141;
            sub_1DF65AAF4((uint64_t)v12, (uint64_t (*)(void))sub_1DF0329EC);
LABEL_64:
            sub_1DF65AAF4(v157, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
            sub_1DF65AAF4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
            uint64_t v122 = sub_1DEE731F4;
LABEL_65:
            uint64_t v127 = v122;
            uint64_t v128 = (uint64_t)v28;
            goto LABEL_66;
          }
          uint64_t v50 = v149;
          sub_1DF66155C((uint64_t)v48, v149, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
          char v51 = _s7NewsUI215ShortcutIconURLV2eeoiySbAC_ACtFZ_0(v49, v50);
          sub_1DF65AAF4(v50, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
          sub_1DF65AAF4(v49, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
          sub_1DF65AAF4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
          uint64_t v25 = v148;
          uint64_t v28 = v141;
          if ((v51 & 1) == 0) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v52 = v150;
          sub_1DF662FD0((uint64_t)v12, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
          uint64_t v54 = v52[1];
          id v53 = (void *)v52[2];
          uint64_t v55 = (void *)v52[3];
          uint64_t v56 = v52[4];
          unsigned __int8 v57 = (void *)v52[5];
          uint64_t v143 = (void *)v52[6];
          unint64_t v58 = (void *)v52[7];
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            swift_bridgeObjectRelease();
            sub_1DEB20BF4(v53, v55);
            uint64_t v31 = v147;
            uint64_t v34 = v136;
            goto LABEL_63;
          }
          uint64_t v59 = *v52;
          uint64_t v60 = v58;
          uint64_t v142 = v58;
          uint64_t v61 = *(void *)v48;
          uint64_t v62 = *((void *)v48 + 1);
          uint64_t v64 = (void *)*((void *)v48 + 2);
          uint64_t v63 = (void *)*((void *)v48 + 3);
          uint64_t v66 = *((void *)v48 + 4);
          uint64_t v65 = (void *)*((void *)v48 + 5);
          uint64_t v67 = (void *)*((void *)v48 + 6);
          uint64_t v68 = *((void *)v48 + 7);
          uint64_t v171 = v59;
          uint64_t v172 = v54;
          unint64_t v134 = v53;
          uint64_t v173 = v53;
          uint64_t v174 = v55;
          uint64_t v175 = v56;
          uint64_t v176 = v57;
          unint64_t v135 = v57;
          unint64_t v177 = v143;
          uint64_t v178 = v60;
          uint64_t v163 = v61;
          uint64_t v164 = v62;
          uint64_t v165 = v64;
          uint64_t v166 = v63;
          uint64_t v167 = v66;
          unint64_t v168 = v65;
          uint64_t v169 = v67;
          uint64_t v170 = v68;
          LODWORD(v137) = _s7NewsUI223ShortcutIconSystemImageV2eeoiySbAC_ACtFZ_0(&v171, &v163);
          swift_bridgeObjectRelease();
          sub_1DEB20BF4(v64, v63);
          swift_bridgeObjectRelease();
          sub_1DEB20BF4(v134, v55);
          sub_1DF65AAF4((uint64_t)v146, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
          uint64_t v31 = v147;
          uint64_t v34 = v136;
          uint64_t v8 = v145;
          uint64_t v25 = v148;
          uint64_t v28 = v141;
          if ((v137 & 1) == 0) {
            goto LABEL_64;
          }
        }
        sub_1DF65AAF4(v157, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
        sub_1DF65AAF4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
      }
      sub_1DF65AAF4((uint64_t)v28, (uint64_t (*)(void))sub_1DEE731F4);
      uint64_t v69 = *(int *)(v160 + 28);
      uint64_t v70 = (uint64_t)v31 + v69;
      uint64_t v71 = (uint64_t *)(v162 + *(int *)(v8 + 48));
      sub_1DF662FD0((uint64_t)v34 + v69, v162, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
      sub_1DF662FD0(v70, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v72 = v156;
        sub_1DF662FD0(v162, v156, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_1DF65AAF4(v72, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
          uint64_t v123 = sub_1DF0329EC;
          goto LABEL_60;
        }
        uint64_t v73 = v161;
        sub_1DF66155C((uint64_t)v71, v161, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
        char v74 = MEMORY[0x1E01D59B0](v72, v73);
        uint64_t v75 = v152;
        if ((v74 & 1) == 0
          || (MEMORY[0x1E01D59B0](v72 + *(int *)(v152 + 20), v161 + *(int *)(v152 + 20)) & 1) == 0
          || (MEMORY[0x1E01D59B0](v72 + *(int *)(v75 + 24), v161 + *(int *)(v75 + 24)) & 1) == 0)
        {
          goto LABEL_58;
        }
        uint64_t v76 = *(int *)(v75 + 28);
        uint64_t v77 = (void *)(v72 + v76);
        uint64_t v78 = *(void **)(v72 + v76);
        uint64_t v79 = *(void **)(v72 + v76 + 8);
        uint64_t v80 = (void *)v77[2];
        uint64_t v143 = (void *)v77[3];
        uint64_t v82 = v77[4];
        uint64_t v81 = v77[5];
        BOOL v83 = (void **)(v161 + v76);
        uint64_t v84 = *v83;
        char v85 = v83[1];
        uint64_t v137 = v83[2];
        uint64_t v142 = v83[3];
        uint64_t v86 = v83[4];
        uint64_t v87 = v83[5];
        unint64_t v135 = v78;
        if (v78)
        {
          if (!v84)
          {
LABEL_56:
            uint64_t v124 = v85;
            id v133 = v85;
            unint64_t v125 = v135;
            uint64_t v126 = v84;
            uint64_t v160 = (uint64_t)v84;
            v129[1] = v82;
            sub_1DEB20B98(v135, v79);
            sub_1DEB20B98(v126, v124);
            sub_1DEB20BF4(v125, v79);
            uint64_t v120 = (void *)v160;
            id v121 = v133;
LABEL_57:
            sub_1DEB20BF4(v120, v121);
            uint64_t v72 = v156;
            uint64_t v31 = v147;
LABEL_58:
            sub_1DF65AAF4(v161, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
            sub_1DF65AAF4(v72, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
LABEL_59:
            uint64_t v123 = (void (*)())type metadata accessor for ShortcutIcon;
LABEL_60:
            uint64_t v127 = v123;
            uint64_t v128 = v162;
LABEL_66:
            sub_1DF65AAF4(v128, (uint64_t (*)(void))v127);
            break;
          }
          uint64_t v88 = v84;
          uint64_t v131 = (uint64_t)v86;
          sub_1DE919914(0, (unint64_t *)&qword_1EBABB090);
          uint64_t v130 = (uint64_t)v87;
          uint64_t v89 = v135;
          id v133 = v85;
          id v132 = v79;
          unint64_t v134 = v80;
          sub_1DEB20B98(v135, v79);
          BOOL v90 = v79;
          id v91 = v133;
          uint64_t v92 = v82;
          uint64_t v93 = v81;
          sub_1DEB20B98(v89, v90);
          uint64_t v94 = v131;
          uint64_t v95 = v130;
          sub_1DEB20B98(v88, v91);
          if ((sub_1DFDFF550() & 1) == 0
            || (sub_1DFDFF550() & 1) == 0
            || (v134 != v137 || v143 != v142) && (sub_1DFDFFF50() & 1) == 0)
          {

LABEL_51:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v118 = v132;

            uint64_t v119 = v135;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            uint64_t v120 = v119;
            id v121 = v118;
            goto LABEL_57;
          }
          if (v92 == v94 && v93 == v95)
          {
          }
          else
          {
            char v115 = sub_1DFDFFF50();

            if ((v115 & 1) == 0) {
              goto LABEL_51;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v116 = v132;

          uint64_t v117 = v135;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          sub_1DEB20BF4(v117, v116);
          uint64_t v25 = v148;
        }
        else if (v84)
        {
          goto LABEL_56;
        }
        sub_1DF65AAF4(v161, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
        sub_1DF65AAF4(v156, (uint64_t (*)(void))type metadata accessor for ShortcutIconURL);
        uint64_t v31 = v147;
      }
      else
      {
        uint64_t v96 = v153;
        sub_1DF662FD0(v162, (uint64_t)v153, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
        uint64_t v97 = v96[1];
        uint64_t v98 = (void *)v96[2];
        uint64_t v100 = (void *)v96[3];
        uint64_t v99 = v96[4];
        uint64_t v102 = (void *)v96[5];
        unint64_t v101 = (void *)v96[6];
        BOOL v103 = (void *)v96[7];
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          sub_1DEB20BF4(v98, v100);
          uint64_t v31 = v147;
          uint64_t v34 = v136;
          uint64_t v123 = sub_1DF0329EC;
          goto LABEL_60;
        }
        uint64_t v104 = *v96;
        uint64_t v105 = v103;
        uint64_t v143 = v103;
        uint64_t v106 = *v71;
        uint64_t v107 = v71[1];
        uint64_t v108 = v101;
        uint64_t v142 = v101;
        uint64_t v110 = (void *)v71[2];
        unint64_t v109 = (void *)v71[3];
        uint64_t v111 = v71[4];
        unint64_t v135 = (void *)v71[5];
        uint64_t v112 = (void *)v71[6];
        uint64_t v113 = v71[7];
        unint64_t v134 = v112;
        uint64_t v171 = v104;
        uint64_t v172 = v97;
        uint64_t v173 = v98;
        uint64_t v174 = v100;
        uint64_t v175 = v99;
        uint64_t v176 = v102;
        unint64_t v177 = v108;
        uint64_t v178 = v105;
        uint64_t v163 = v106;
        uint64_t v164 = v107;
        uint64_t v165 = v110;
        uint64_t v166 = v109;
        uint64_t v167 = v111;
        unint64_t v168 = v135;
        uint64_t v169 = v112;
        uint64_t v170 = v113;
        LODWORD(v137) = _s7NewsUI223ShortcutIconSystemImageV2eeoiySbAC_ACtFZ_0(&v171, &v163);
        swift_bridgeObjectRelease();
        uint64_t v114 = v110;
        uint64_t v25 = v148;
        sub_1DEB20BF4(v114, v109);
        swift_bridgeObjectRelease();
        sub_1DEB20BF4(v98, v100);
        uint64_t v31 = v147;
        uint64_t v34 = v136;
        uint64_t v28 = v141;
        if ((v137 & 1) == 0) {
          goto LABEL_59;
        }
      }
      sub_1DF65AAF4(v162, (uint64_t (*)(void))type metadata accessor for ShortcutIcon);
      sub_1DF65AAF4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      sub_1DF65AAF4((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      unint64_t v37 = v154 + v138;
      uint64_t result = 1;
      uint64_t v35 = v155 - 1;
      a2 = v140;
      a1 = v139;
      double v12 = v146;
      uint64_t v8 = v145;
      if (v155 == 1) {
        return result;
      }
    }
    sub_1DF65AAF4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
    sub_1DF65AAF4((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
  }
  return 0;
}

uint64_t sub_1DF64E7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (double *)(a1 + 40);
    uint64_t v4 = (double *)(a2 + 40);
    do
    {
      double v5 = *(v3 - 1);
      char v6 = *(unsigned char *)v3;
      double v7 = *(v4 - 1);
      int v8 = *(unsigned __int8 *)v4;
      uint64_t result = 0;
      if (*(char *)v3 < 0)
      {
        if ((v8 & 0x80) == 0) {
          return result;
        }
        BOOL v10 = (v6 & 1) == 0;
        if (v5 != v7) {
          return result;
        }
      }
      else
      {
        if ((v8 & 0x80) != 0) {
          return result;
        }
        BOOL v10 = (v6 & 1) == 0;
        if (*(void *)&v5 != *(void *)&v7) {
          return result;
        }
      }
      if (((v10 ^ v8) & 1) == 0) {
        return result;
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1DF64E890(uint64_t a1, uint64_t a2)
{
  return sub_1DF64E8E4(a1, a2, type metadata accessor for MagazineCategoryConfig.Channel, type metadata accessor for MagazineCategoryConfig.Channel, (uint64_t (*)(char *, char *))sub_1DEDA43CC, type metadata accessor for MagazineCategoryConfig.Channel);
}

uint64_t sub_1DF64E8E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  uint64_t v11 = a3(0) - 8;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v28 = a2;
      uint64_t v19 = a5;
      unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v22 = v18 - 1;
      do
      {
        sub_1DF662FD0(a1 + v20, (uint64_t)v17, a4);
        sub_1DF662FD0(v28 + v20, (uint64_t)v14, a4);
        char v23 = v19(v17, v14);
        sub_1DF65AAF4((uint64_t)v14, a6);
        sub_1DF65AAF4((uint64_t)v17, a6);
        BOOL v25 = v22-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v20 += v21;
      }
      while (v25);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1DF64EAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleSettingsItem();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  double v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  BOOL v10 = (uint64_t *)((char *)&v23 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_30:
    char v19 = 0;
    return v19 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_1DF662FD0(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleSettingsItem);
      sub_1DF662FD0(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleSettingsItem);
      BOOL v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_1DFDFFF50() & 1) == 0) {
        break;
      }
      BOOL v16 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v16 && (sub_1DFDFFF50() & 1) == 0) {
        break;
      }
      uint64_t v17 = v10[5];
      uint64_t v18 = v7[5];
      if (v17)
      {
        if (!v18 || (v10[4] != v7[4] || v17 != v18) && (sub_1DFDFFF50() & 1) == 0) {
          break;
        }
      }
      else if (v18)
      {
        break;
      }
      char v19 = sub_1DF32E48C((uint64_t)v10 + *(int *)(v4 + 28), (uint64_t)v7 + *(int *)(v4 + 28));
      sub_1DF65AAF4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleSettingsItem);
      sub_1DF65AAF4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleSettingsItem);
      BOOL v21 = v14-- != 0;
      if (v19)
      {
        v12 += v13;
        if (v21) {
          continue;
        }
      }
      return v19 & 1;
    }
    sub_1DF65AAF4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleSettingsItem);
    sub_1DF65AAF4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleSettingsItem);
    goto LABEL_30;
  }
  char v19 = 1;
  return v19 & 1;
}

uint64_t sub_1DF64ED04(uint64_t a1, uint64_t a2)
{
  return sub_1DF64E8E4(a1, a2, type metadata accessor for MyMagazinesIssue, type metadata accessor for MyMagazinesIssue, (uint64_t (*)(char *, char *))sub_1DF7D5040, type metadata accessor for MyMagazinesIssue);
}

BOOL sub_1DF64ED58(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

uint64_t sub_1DF64ED6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioFeedTrack(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  double v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (id *)((char *)&v34 - v10);
  MEMORY[0x1F4188790](v9);
  BOOL v15 = (id *)((char *)&v34 - v14);
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 != *(void *)(a2 + 16))
  {
    char v33 = 0;
    return v33 & 1;
  }
  uint64_t v39 = v13;
  if (!v16 || a1 == a2)
  {
    char v33 = 1;
    return v33 & 1;
  }
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v35 = *(void *)(v12 + 72);
  uint64_t v36 = a1;
  uint64_t v18 = v16 - 1;
  uint64_t v37 = a2;
  uint64_t v38 = v4;
  while (1)
  {
    sub_1DEDDB1E0(a1 + v17, (uint64_t)v15);
    sub_1DEDDB1E0(a2 + v17, (uint64_t)v11);
    id v19 = objc_msgSend(*v15, sel_identifier);
    uint64_t v20 = sub_1DFDFDD20();
    uint64_t v22 = v21;

    id v23 = objc_msgSend(*v11, sel_identifier);
    uint64_t v24 = sub_1DFDFDD20();
    uint64_t v26 = v25;

    if (v20 == v24 && v22 == v26)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v29 = v39;
      sub_1DEDDB1E0((uint64_t)v15, v39);
      sub_1DEDDB1E0((uint64_t)v11, (uint64_t)v7);
      goto LABEL_12;
    }
    char v28 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v39;
    sub_1DEDDB1E0((uint64_t)v15, v39);
    sub_1DEDDB1E0((uint64_t)v11, (uint64_t)v7);
    if ((v28 & 1) == 0) {
      break;
    }
LABEL_12:
    char v33 = sub_1DFAA0CBC((void *)(v29 + *(int *)(v38 + 32)), &v7[*(int *)(v38 + 32)]);
    sub_1DF65AAF4((uint64_t)v7, type metadata accessor for AudioFeedTrack);
    sub_1DF65AAF4(v29, type metadata accessor for AudioFeedTrack);
    sub_1DF65AAF4((uint64_t)v11, type metadata accessor for AudioFeedTrack);
    sub_1DF65AAF4((uint64_t)v15, type metadata accessor for AudioFeedTrack);
    BOOL v31 = v18-- != 0;
    if (v33)
    {
      a1 = v36;
      v17 += v35;
      a2 = v37;
      if (v31) {
        continue;
      }
    }
    return v33 & 1;
  }
  sub_1DF65AAF4((uint64_t)v7, type metadata accessor for AudioFeedTrack);
  sub_1DF65AAF4(v29, type metadata accessor for AudioFeedTrack);
  sub_1DF65AAF4((uint64_t)v11, type metadata accessor for AudioFeedTrack);
  sub_1DF65AAF4((uint64_t)v15, type metadata accessor for AudioFeedTrack);
  char v33 = 0;
  return v33 & 1;
}

id sub_1DF64F094(unint64_t a1, uint64_t a2)
{
  return sub_1DF64F0BC(a1, a2, (uint64_t)&qword_1EBAF59C0);
}

id sub_1DF64F0A8(unint64_t a1, uint64_t a2)
{
  return sub_1DF64F0BC(a1, a2, (uint64_t)&qword_1EBABAC50);
}

id sub_1DF64F0BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v7 == v28) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  if (v7 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v7) {
    goto LABEL_38;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0) {
    uint64_t v8 = v5;
  }
  if (!v6) {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10)
  {
LABEL_38:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v29 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v5 + 32); ; id result = (id)MEMORY[0x1E01EE240](0, v5))
  {
    uint64_t v13 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v14 = (id)MEMORY[0x1E01EE240](0, a2);
LABEL_22:
    BOOL v15 = v14;
    sub_1DE919914(0, (unint64_t *)a3);
    a3 = sub_1DFDFF550();

    if ((a3 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v16 = v7 - 1;
    if (v7 == 1) {
      return (id)(v7 & 1);
    }
    if (((a2 | v5) & 0xC000000000000001) != 0)
    {
      uint64_t v17 = 0;
      unint64_t v18 = v7 - 2;
      while (v16 != v17)
      {
        unint64_t v7 = v17 + 1;
        if (v29) {
          id v19 = (id)MEMORY[0x1E01EE240](v17 + 1, v5);
        }
        else {
          id v19 = *(id *)(v5 + 40 + 8 * v17);
        }
        a3 = (uint64_t)v19;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x1E01EE240](v17 + 1, a2);
        }
        else
        {
          if (v7 >= *(void *)(v9 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v17);
        }
        uint64_t v21 = v20;
        unint64_t v7 = sub_1DFDFF550();

        if ((v7 & 1) != 0 && v18 != v17++) {
          continue;
        }
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v9 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      a3 = v23 - 1;
      uint64_t v24 = (void **)(v5 + 40);
      uint64_t v9 = a2 + 40;
      while (v16)
      {
        if (!a3) {
          goto LABEL_53;
        }
        uint64_t v26 = *v24++;
        uint64_t v25 = v26;
        uint64_t v27 = *(void **)v9;
        v9 += 8;
        a2 = v25;
        uint64_t v5 = v27;
        unint64_t v7 = sub_1DFDFF550();

        if (v7)
        {
          --a3;
          if (--v16) {
            continue;
          }
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v9 + 16))
  {
    id v14 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_1DF64F3A8(unint64_t a1, uint64_t a2)
{
  return sub_1DF64F0BC(a1, a2, (uint64_t)&qword_1EBAEA4E0);
}

id sub_1DF64F3BC(unint64_t a1, uint64_t a2)
{
  return sub_1DF64F0BC(a1, a2, (uint64_t)&qword_1EBAA65B0);
}

uint64_t sub_1DF64F3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    do
    {
      sub_1DEDCA690(v3, (uint64_t)v9);
      sub_1DEDCA690(v4, (uint64_t)v8);
      if (v9[0] == v8[0] && v9[1] == v8[1])
      {
        sub_1DED9E99C((uint64_t)v8);
        sub_1DED9E99C((uint64_t)v9);
      }
      else
      {
        char v6 = sub_1DFDFFF50();
        sub_1DED9E99C((uint64_t)v8);
        sub_1DED9E99C((uint64_t)v9);
        if ((v6 & 1) == 0) {
          return 0;
        }
      }
      v4 += 176;
      v3 += 176;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1DF64F4A4(uint64_t a1, uint64_t a2)
{
  return sub_1DF64E8E4(a1, a2, type metadata accessor for OfflineContentRequest, type metadata accessor for OfflineContentRequest, (uint64_t (*)(char *, char *))sub_1DF437984, type metadata accessor for OfflineContentRequest);
}

NewsUI2::ShortcutsConfigResource __swiftcall ShortcutsConfigResource.init(categories:)(Swift::OpaquePointer categories)
{
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for ShortcutCategory() - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&rawValue - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&rawValue - v9;
  uint64_t v11 = *((void *)categories._rawValue + 2);
  if (!v11)
  {
    swift_bridgeObjectRetain();
    id v14 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
    uint64_t v32 = (void *)swift_bridgeObjectRelease();
    v3->_rawValue = categories._rawValue;
    v3[1]._rawValue = v14;
    goto LABEL_22;
  }
  rawValue = categories._rawValue;
  uint64_t v36 = v3;
  uint64_t v12 = (char *)categories._rawValue
      + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v13 = *(void *)(v8 + 72);
  swift_bridgeObjectRetain_n();
  id v14 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v37 = v10;
  while (1)
  {
    sub_1DF6506DC((uint64_t)v12, (uint64_t)v10);
    uint64_t v16 = *((void *)v10 + 2);
    uint64_t v15 = *((void *)v10 + 3);
    uint64_t v17 = (uint64_t)v10;
    uint64_t v18 = (uint64_t)v7;
    sub_1DF6506DC(v17, (uint64_t)v7);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = v14;
    unint64_t v21 = sub_1DEA6D930(v16, v15);
    uint64_t v22 = v14[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (v14[3] >= v24)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        id v14 = v38;
        if (v20) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1DF65A664((uint64_t (*)(void))type metadata accessor for ShortcutCategory, sub_1DF663038, (void (*)(unint64_t, char *))sub_1DF6506DC, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        id v14 = v38;
        if (v25) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1DEA283FC(v24, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void))type metadata accessor for ShortcutCategory, sub_1DF663038, (uint64_t (*)(void))type metadata accessor for ShortcutCategory, (void (*)(uint64_t, char *))sub_1DF6506DC);
      unint64_t v26 = sub_1DEA6D930(v16, v15);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_21;
      }
      unint64_t v21 = v26;
      id v14 = v38;
      if (v25)
      {
LABEL_3:
        unint64_t v7 = (char *)v18;
        sub_1DF65A8E4(v18, v14[7] + v21 * v13);
        goto LABEL_4;
      }
    }
    v14[(v21 >> 6) + 8] |= 1 << v21;
    uint64_t v28 = (uint64_t *)(v14[6] + 16 * v21);
    *uint64_t v28 = v16;
    v28[1] = v15;
    unint64_t v7 = (char *)v18;
    sub_1DF66155C(v18, v14[7] + v21 * v13, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
    uint64_t v29 = v14[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_20;
    }
    v14[2] = v31;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v37;
    sub_1DF65AAF4((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
    v12 += v13;
    if (!--v11)
    {
      categories._rawValue = rawValue;
      swift_bridgeObjectRelease();
      uint64_t v3 = v36;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t v32 = (void *)sub_1DFE00000();
  __break(1u);
LABEL_22:
  result.categoriesById._rawValue = v33;
  result.categories._rawValue = v32;
  return result;
}

uint64_t ShortcutsConfigResource.categories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShortcutsConfigResource.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  id v19 = a2;
  sub_1DF65A948(0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6617C0(0, &qword_1EAC2F098, (uint64_t (*)(void))sub_1DF65AAA0, (uint64_t)&type metadata for ShortcutsConfigResource.CodingKeys, MEMORY[0x1E4FAAF08]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v18 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF65AAA0();
  sub_1DFE00160();
  if (!v2)
  {
    uint64_t v18 = v8;
    uint64_t v11 = v19;
    sub_1DF65A97C();
    uint64_t v13 = v12;
    sub_1DF65AA58(&qword_1EAC2F0A8, (void (*)(uint64_t))sub_1DF65A97C);
    uint64_t v14 = (uint64_t)v21;
    sub_1DFDEDB30();
    uint64_t v15 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v14, 1, v13) == 1)
    {
      sub_1DF65AAF4(v14, (uint64_t (*)(void))sub_1DF65A948);
      uint64_t v16 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v16 = sub_1DFDECCD0();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v13);
    }
    ShortcutsConfigResource.init(categories:)((Swift::OpaquePointer)v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v7);
    *uint64_t v11 = v20;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF64FB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x69726F6765746163 && a2 == 0xEA00000000007365)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DFDFFF50();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DF64FC38(uint64_t a1)
{
  unint64_t v2 = sub_1DF65AAA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF64FC74(uint64_t a1)
{
  unint64_t v2 = sub_1DF65AAA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ShortcutsConfigResource.encode(to:)(void *a1)
{
  sub_1DF6617C0(0, &qword_1EAC2F0B0, (uint64_t (*)(void))sub_1DF65AAA0, (uint64_t)&type metadata for ShortcutsConfigResource.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF65AAA0();
  sub_1DFE001A0();
  v10[3] = v8;
  sub_1DF65AB54(0);
  sub_1DF662BB0((unint64_t *)&unk_1EAC2F0C0, sub_1DF65AB54, (void (*)(void))sub_1DF65AA24);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF64FE78@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return ShortcutsConfigResource.init(from:)(a1, a2);
}

uint64_t sub_1DF64FE90(void *a1)
{
  return ShortcutsConfigResource.encode(to:)(a1);
}

uint64_t sub_1DF64FEA8()
{
  uint64_t v0 = sub_1DFDE8100();
  __swift_allocate_value_buffer(v0, qword_1EAC2F060);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAC2F060);
  uint64_t v2 = *MEMORY[0x1E4FAB430];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);
  return v3(v1, v2, v0);
}

uint64_t static ShortcutsConfigResource.dataType.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAC1D408 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DFDE8100();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAC2F060);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t static ShortcutsConfigResource.convert(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DFDF01D0();
  MEMORY[0x1F4188790](v4);
  sub_1DEA6FC28(a1, (uint64_t)&v8);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_1DFDE6980();
    swift_allocObject();
    sub_1DFDE6970();
    sub_1DED373B0();
    sub_1DFDE6950();
    sub_1DEA5E6E4(v6, v7);
    uint64_t result = swift_release();
    *(_OWORD *)a2 = v8;
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t ShortcutsConfigResource.toData()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DFDF01D0();
  MEMORY[0x1F4188790](v2);
  sub_1DFDE6A00();
  swift_allocObject();
  sub_1DFDE69F0();
  sub_1DF65ABEC();
  uint64_t v3 = sub_1DFDE69E0();
  uint64_t v5 = v4;
  uint64_t result = swift_release();
  a1[3] = MEMORY[0x1E4F277C0];
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t static ShortcutsConfigResource.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_1DF64D6C4(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_1DF50962C(v2, v3);
}

uint64_t sub_1DF6505D0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAC1D408 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DFDE8100();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAC2F060);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1DF650680(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_1DF64D6C4(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_1DF50962C(v2, v3);
}

uint64_t sub_1DF6506DC(uint64_t a1, uint64_t a2)
{
  return sub_1DF662FD0(a1, a2, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
}

uint64_t sub_1DF6506F4(uint64_t a1, int a2)
{
  return sub_1DEA283FC(a1, a2, (uint64_t (*)(void))type metadata accessor for CuratedMagazineFeedGroupKnobs, sub_1DF662900, (uint64_t (*)(void))type metadata accessor for CuratedMagazineFeedGroupKnobs, (void (*)(uint64_t, char *))sub_1DF662934);
}

uint64_t sub_1DF650784(uint64_t a1, char a2)
{
  return sub_1DF6577D0(a1, a2, (unint64_t *)&qword_1EBABB1B0, (uint64_t)&qword_1EBABAD10, (uint64_t)&protocolRef_FCHeadlineProviding);
}

uint64_t sub_1DF6507A0(uint64_t a1, char a2)
{
  return sub_1DF658888(a1, a2, sub_1DF662354);
}

uint64_t sub_1DF6507B8(uint64_t a1, char a2)
{
  return sub_1DF659484(a1, a2, (unint64_t *)&unk_1EBABB1D0, (uint64_t)&unk_1EBABAFB0, 0x1E4F7E420);
}

uint64_t sub_1DF6507D4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = _s9DataStoreC10CaptureKeyVMa();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1DF662A18();
  int v42 = a2;
  uint64_t v9 = sub_1DFDFFC20();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    uint64_t v22 = v39;
    unint64_t v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v23 = v39[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v37;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v38) {
              goto LABEL_34;
            }
            unint64_t v23 = v39[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v40 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v42)
    {
      sub_1DF66155C(v26, (uint64_t)v7, (uint64_t (*)(void))_s9DataStoreC10CaptureKeyVMa);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_1DF662FD0(v26, (uint64_t)v7, (uint64_t (*)(void))_s9DataStoreC10CaptureKeyVMa);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
      swift_bridgeObjectRetain();
    }
    sub_1DFE00100();
    swift_bridgeObjectRetain();
    sub_1DFDFDE20();
    swift_bridgeObjectRelease();
    sub_1DFDEFBA0();
    sub_1DF65AA58(&qword_1EAC2F2C0, MEMORY[0x1E4F81F98]);
    sub_1DFDFDBE0();
    uint64_t result = sub_1DFE00140();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_1DF66155C((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, (uint64_t (*)(void))_s9DataStoreC10CaptureKeyVMa);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  uint64_t v22 = v39;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1DF650C24(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF661664();
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    char v31 = *(void **)(*(void *)(v5 + 48) + v30);
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1DFDFF540();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF650EF4(uint64_t a1, int a2)
{
  return sub_1DEA6EC40(a1, a2, MEMORY[0x1E4F7FCA8], (unint64_t *)&unk_1EAC2F1D0, MEMORY[0x1E4F7FCA8]);
}

uint64_t sub_1DF650F28(uint64_t a1, int a2)
{
  return sub_1DEA283FC(a1, a2, (uint64_t (*)(void))type metadata accessor for TagFeedModelPlaceholder, sub_1DF6628CC, (uint64_t (*)(void))type metadata accessor for TagFeedModelPlaceholder, (void (*)(uint64_t, char *))sub_1DEFF8340);
}

uint64_t sub_1DF650F7C(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, sub_1DF661BF8);
}

uint64_t sub_1DF650F94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF661938();
  char v37 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF65129C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  sub_1DEC5ADE4();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1DF6619A0();
  unint64_t v10 = (void *)sub_1DFDFFC20();
  if (*(void *)(v9 + 16))
  {
    BOOL v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              uint64_t v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_1DF66155C(v24, (uint64_t)v8, (uint64_t (*)(void))sub_1DEC5ADE4);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_1DF662FD0(v24, (uint64_t)v8, (uint64_t (*)(void))sub_1DEC5ADE4);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
        swift_retain();
      }
      uint64_t result = sub_1DF659AE0((uint64_t)v8, v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v10;
  return result;
}

unint64_t sub_1DF651558(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF6631D4();
  uint64_t v6 = (void *)sub_1DFDFFC20();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v22 = 1 << *(unsigned char *)(v5 + 32);
                if (v22 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v22;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = 8 * v15;
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + v19);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + v19);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_retain();
      }
      unint64_t result = sub_1DF659D14(v20, v21, v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1DF651744(uint64_t a1, char a2)
{
  return sub_1DF658888(a1, a2, sub_1DF663280);
}

unint64_t sub_1DF65175C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF6632B4();
  uint64_t v6 = (void *)sub_1DFDFFC20();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v22 = 1 << *(unsigned char *)(v5 + 32);
                if (v22 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v22;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = 8 * v15;
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + v19);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + v19);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_1DF659D14(v20, v21, v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1DF651948(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for EngagementUpsellTriggerState(0);
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for EngagementUpsellTriggerGroupStateKey(0);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_1DF35177C();
  int v47 = a2;
  uint64_t v12 = sub_1DFDFFC20();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int v42 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v43 = v7;
  while (1)
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    uint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v47)
    {
      sub_1DF66155C(v29, (uint64_t)v10, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
      uint64_t v30 = *(void *)(v44 + 72);
      sub_1DF66155C(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for EngagementUpsellTriggerState);
    }
    else
    {
      sub_1DF662FD0(v29, (uint64_t)v10, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
      uint64_t v30 = *(void *)(v44 + 72);
      sub_1DF662FD0(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for EngagementUpsellTriggerState);
    }
    sub_1DFE00100();
    swift_bridgeObjectRetain();
    sub_1DFDFDE20();
    swift_bridgeObjectRelease();
    sub_1DFDEE390();
    sub_1DF65AA58(&qword_1EBAC11B8, MEMORY[0x1E4F7EA38]);
    sub_1DFDFDBE0();
    uint64_t result = sub_1DFE00140();
    uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v7 = v43;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      uint64_t v7 = v43;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    sub_1DF66155C((uint64_t)v10, *(void *)(v13 + 48) + v28 * v21, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    uint64_t result = sub_1DF66155C((uint64_t)v7, *(void *)(v13 + 56) + v30 * v21, type metadata accessor for EngagementUpsellTriggerState);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1DF651E74(uint64_t a1, int a2)
{
  return sub_1DEA283FC(a1, a2, type metadata accessor for AudioFeedTrack, sub_1DF661904, type metadata accessor for AudioFeedTrack, (void (*)(uint64_t, char *))sub_1DEDDB1E0);
}

uint64_t sub_1DF651EC8(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, (void (*)(void))sub_1DF661720);
}

uint64_t sub_1DF651EE0(uint64_t a1, int a2)
{
  return sub_1DEA6EC40(a1, a2, MEMORY[0x1E4F27928], (unint64_t *)&unk_1EBABE0B8, MEMORY[0x1E4F27928]);
}

uint64_t sub_1DF651F14(uint64_t a1, int a2)
{
  return sub_1DEA283FC(a1, a2, type metadata accessor for SportsHeadlineExposureTracker.GroupSession, sub_1DF661C2C, type metadata accessor for SportsHeadlineExposureTracker.GroupSession, (void (*)(uint64_t, char *))sub_1DF661C60);
}

uint64_t sub_1DF651F68(uint64_t a1, char a2)
{
  return sub_1DF658888(a1, a2, sub_1DF661C78);
}

uint64_t sub_1DF651F80(uint64_t a1, char a2)
{
  return sub_1DE9F2368(a1, a2, (unint64_t *)&unk_1EBAEA810, (unint64_t *)&qword_1EBAD2130, MEMORY[0x1E4F4A9F0], (void (*)(uint64_t, unsigned char *))sub_1DE942EC4);
}

uint64_t sub_1DF651FB0(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, sub_1DF661370);
}

uint64_t sub_1DF651FC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF66140C();
  uint64_t result = sub_1DFDFFC20();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    char v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_1DFE000F0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF65226C(uint64_t a1, char a2)
{
  return sub_1DF658E8C(a1, a2, (void (*)(void))sub_1DF661308);
}

uint64_t sub_1DF652284(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, sub_1DF662694);
}

uint64_t sub_1DF65229C(uint64_t a1, int a2)
{
  return sub_1DEA283FC(a1, a2, (uint64_t (*)(void))type metadata accessor for PuzzleSetting, sub_1DF661630, (uint64_t (*)(void))type metadata accessor for PuzzleSetting, (void (*)(uint64_t, char *))sub_1DF32E3E0);
}

uint64_t sub_1DF6522F0(uint64_t a1, int a2)
{
  return sub_1DEA6EC40(a1, a2, MEMORY[0x1E4F80A88], (unint64_t *)&unk_1EAC2F220, MEMORY[0x1E4F80A88]);
}

uint64_t sub_1DF652324(uint64_t a1, char a2)
{
  return sub_1DF658888(a1, a2, sub_1DF661CE0);
}

uint64_t sub_1DF65233C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF661DB0();
  char v40 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v34 = *(void *)v32;
      uint64_t v33 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1DEF6791C();
      }
      sub_1DFE00100();
      sub_1DFDFDE20();
      uint64_t result = sub_1DFE00140();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v34;
      *(void *)(v19 + 8) = v33;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF652664(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF08DBD8();
  char v48 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v47 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v45 = v2;
  int64_t v46 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v48) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v24 >= v46) {
      break;
    }
    char v25 = (void *)(v5 + 64);
    unint64_t v26 = *(void *)(v47 + 8 * v24);
    ++v13;
    if (!v26)
    {
      int64_t v13 = v24 + 1;
      if (v24 + 1 >= v46) {
        goto LABEL_35;
      }
      unint64_t v26 = *(void *)(v47 + 8 * v13);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v46)
        {
LABEL_35:
          swift_release();
          uint64_t v3 = v45;
          if ((v48 & 1) == 0) {
            goto LABEL_42;
          }
          goto LABEL_38;
        }
        unint64_t v26 = *(void *)(v47 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v13 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_44;
            }
            if (v13 >= v46) {
              goto LABEL_35;
            }
            unint64_t v26 = *(void *)(v47 + 8 * v13);
            ++v27;
            if (v26) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v27;
      }
    }
LABEL_22:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v18 = __clz(__rbit64(v26)) + (v13 << 6);
    if (v48)
    {
LABEL_10:
      uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 152 * v18;
      long long v49 = *(_OWORD *)v22;
      long long v50 = *(_OWORD *)(v22 + 16);
      long long v55 = *(_OWORD *)(v22 + 48);
      long long v56 = *(_OWORD *)(v22 + 32);
      long long v53 = *(_OWORD *)(v22 + 80);
      long long v54 = *(_OWORD *)(v22 + 64);
      long long v51 = *(_OWORD *)(v22 + 112);
      long long v52 = *(_OWORD *)(v22 + 96);
      long long v57 = *(_OWORD *)(v22 + 128);
      uint64_t v23 = *(void *)(v22 + 144);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v28 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v28;
    uint64_t v21 = v28[1];
    uint64_t v29 = *(void *)(v5 + 56) + 152 * v18;
    long long v30 = *(_OWORD *)(v29 + 16);
    long long v58 = *(_OWORD *)v29;
    long long v59 = v30;
    long long v31 = *(_OWORD *)(v29 + 80);
    long long v33 = *(_OWORD *)(v29 + 32);
    long long v32 = *(_OWORD *)(v29 + 48);
    long long v62 = *(_OWORD *)(v29 + 64);
    long long v63 = v31;
    long long v60 = v33;
    long long v61 = v32;
    long long v35 = *(_OWORD *)(v29 + 112);
    long long v34 = *(_OWORD *)(v29 + 128);
    long long v36 = *(_OWORD *)(v29 + 96);
    uint64_t v67 = *(void *)(v29 + 144);
    long long v65 = v35;
    long long v66 = v34;
    long long v64 = v36;
    uint64_t v23 = v67;
    long long v56 = v33;
    long long v57 = v34;
    long long v54 = v62;
    long long v55 = v61;
    long long v52 = v36;
    long long v53 = v63;
    long long v50 = v59;
    long long v51 = v35;
    long long v49 = v58;
    swift_bridgeObjectRetain();
    sub_1DEF73608((uint64_t)&v58);
LABEL_24:
    sub_1DFE00100();
    sub_1DFE00120();
    if (v21)
    {
      swift_bridgeObjectRetain();
      sub_1DFDFDE20();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1DFE00140();
    uint64_t v37 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v11 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v38) & ~*(void *)(v11 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v11 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v14 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 152 * v14;
    *(_OWORD *)uint64_t v16 = v49;
    *(_OWORD *)(v16 + 16) = v50;
    *(_OWORD *)(v16 + 32) = v56;
    *(_OWORD *)(v16 + 48) = v55;
    *(_OWORD *)(v16 + 64) = v54;
    *(_OWORD *)(v16 + 80) = v53;
    *(_OWORD *)(v16 + 96) = v52;
    *(_OWORD *)(v16 + 112) = v51;
    *(_OWORD *)(v16 + 128) = v57;
    *(void *)(v16 + 144) = v23;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v45;
  char v25 = (void *)(v5 + 64);
  if ((v48 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v44 = 1 << *(unsigned char *)(v5 + 32);
  if (v44 >= 64) {
    bzero(v25, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v44;
  }
  *(void *)(v5 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF652AA0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF6614DC(0, &qword_1EBACBCF8, (void (*)(uint64_t))sub_1DF662DB8, (void (*)(void))sub_1DF662EAC);
  char v33 = a2;
  uint64_t result = sub_1DFDFFC20();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    long long v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *long long v32 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      long long v34 = *(_OWORD *)v28;
      uint64_t v29 = *(void *)(v28 + 16);
      if ((v33 & 1) == 0)
      {
        swift_retain();
        swift_retain();
      }
      sub_1DFE00100();
      sub_1DFE00110();
      uint64_t result = sub_1DFE00140();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(_OWORD *)uint64_t v17 = v34;
      *(void *)(v17 + 16) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF652DDC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF661D14();
  char v37 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF6530E4(uint64_t a1, char a2)
{
  return sub_1DF659484(a1, a2, &qword_1EBABE0C8, (uint64_t)&unk_1EBABABD0, 0x1E4F82A78);
}

uint64_t sub_1DF653100(uint64_t a1, char a2)
{
  return sub_1DF659484(a1, a2, &qword_1EBABB198, (uint64_t)&unk_1EBABAB10, 0x1E4F82BE8);
}

uint64_t sub_1DF65311C(uint64_t a1, char a2)
{
  return sub_1DF659484(a1, a2, (unint64_t *)&unk_1EBAEA8A8, (uint64_t)&qword_1EBAEA580, 0x1E4F829A8);
}

uint64_t sub_1DF653138(uint64_t a1, char a2)
{
  return sub_1DF659484(a1, a2, &qword_1EBABB1A8, (uint64_t)&unk_1EBABAC70, 0x1E4F829B0);
}

uint64_t sub_1DF653154(uint64_t a1, char a2)
{
  return sub_1DF659484(a1, a2, (unint64_t *)&unk_1EBABB1B8, (uint64_t)&unk_1EBABAE60, 0x1E4F82A60);
}

uint64_t sub_1DF653170(uint64_t a1, int a2)
{
  return sub_1DEA6EC40(a1, a2, MEMORY[0x1E4F80EA0], &qword_1EAC2F280, MEMORY[0x1E4F80EA0]);
}

uint64_t sub_1DF6531A4(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, sub_1DF66243C);
}

uint64_t sub_1DF6531BC(uint64_t a1, char a2)
{
  return sub_1DF6577D0(a1, a2, (unint64_t *)&qword_1EBAA6700, (uint64_t)&qword_1EBABAB70, (uint64_t)&protocolRef_FCTagProviding);
}

uint64_t sub_1DF6531D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF66262C();
  char v40 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v21);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      uint64_t v35 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1DFE00100();
      sub_1DFDFDE20();
      uint64_t result = sub_1DFE00140();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      unint64_t v19 = (void *)(*(void *)(v7 + 56) + 24 * v17);
      void *v19 = v33;
      v19[1] = v34;
      v19[2] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF6534FC(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, (void (*)(void))sub_1DF11C3A0);
}

uint64_t sub_1DF653514(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, sub_1DF661D7C);
}

uint64_t sub_1DF65352C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF661474();
  char v36 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF653840(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF662D40(0, (unint64_t *)&unk_1EBAF5A48, (unint64_t *)&unk_1EBAF43F0);
  uint64_t v6 = (void *)sub_1DFDFFC20();
  if (*(void *)(v5 + 16))
  {
    int64_t v24 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_23;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_23;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v24;
                goto LABEL_30;
              }
              uint64_t v23 = 1 << *(unsigned char *)(v5 + 32);
              if (v23 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v8 = -1 << v23;
              }
              uint64_t v3 = v24;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_32;
                }
                if (v13 >= v11) {
                  goto LABEL_23;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_20:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      unint64_t v21 = v19[1];
      int64_t v22 = (long long *)(*(void *)(v5 + 56) + 40 * v15);
      if (a2)
      {
        sub_1DE942EC4(v22, (uint64_t)v25);
      }
      else
      {
        sub_1DE94F204((uint64_t)v22, (uint64_t)v25);
        sub_1DEB0AF44(v20, v21);
      }
      uint64_t result = sub_1DF659E30(v20, v21, (uint64_t)v25, v6, (uint64_t (*)(uint64_t, unint64_t))sub_1DE942EC4);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1DF653A88(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF662D40(0, &qword_1EBAF5A58, (unint64_t *)&unk_1EBAF4400);
  uint64_t v6 = (void *)sub_1DFDFFC20();
  if (*(void *)(v5 + 16))
  {
    int64_t v24 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_23;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_23;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v24;
                goto LABEL_30;
              }
              uint64_t v23 = 1 << *(unsigned char *)(v5 + 32);
              if (v23 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v8 = -1 << v23;
              }
              uint64_t v3 = v24;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_32;
                }
                if (v13 >= v11) {
                  goto LABEL_23;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_20:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      unint64_t v21 = v19[1];
      int64_t v22 = (long long *)(*(void *)(v5 + 56) + 40 * v15);
      if (a2)
      {
        sub_1DE942EC4(v22, (uint64_t)v25);
      }
      else
      {
        sub_1DE94F204((uint64_t)v22, (uint64_t)v25);
        sub_1DEB0AF44(v20, v21);
      }
      uint64_t result = sub_1DF659E30(v20, v21, (uint64_t)v25, v6, (uint64_t (*)(uint64_t, unint64_t))sub_1DE942EC4);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1DF653CD0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1DFDEFA50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1DF662C54(0, &qword_1EAC2F2F8, MEMORY[0x1E4FBBD58]);
  int v50 = a2;
  uint64_t v10 = sub_1DFDFFC20();
  int64_t v11 = (void *)v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    int64_t v46 = (void *)(v9 + 64);
    uint64_t v47 = v6;
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    uint64_t v44 = v3;
    int64_t v45 = (unint64_t)(v12 + 63) >> 6;
    int64_t v16 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v17 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v19 = 0;
    uint64_t v48 = v9;
    long long v49 = v11;
    while (1)
    {
      if (v15)
      {
        unint64_t v22 = __clz(__rbit64(v15));
        uint64_t v23 = (v15 - 1) & v15;
        int64_t v52 = v19;
        unint64_t v24 = v22 | (v19 << 6);
      }
      else
      {
        int64_t v25 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v25 >= v45) {
          goto LABEL_36;
        }
        unint64_t v26 = v46[v25];
        int64_t v27 = v19 + 1;
        if (!v26)
        {
          int64_t v27 = v25 + 1;
          if (v25 + 1 >= v45) {
            goto LABEL_36;
          }
          unint64_t v26 = v46[v27];
          if (!v26)
          {
            int64_t v28 = v25 + 2;
            if (v28 >= v45)
            {
LABEL_36:
              swift_release();
              uint64_t v3 = v44;
              if (v50)
              {
                uint64_t v42 = 1 << *(unsigned char *)(v9 + 32);
                if (v42 >= 64) {
                  bzero(v46, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v46 = -1 << v42;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v26 = v46[v28];
            if (!v26)
            {
              while (1)
              {
                int64_t v27 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  goto LABEL_43;
                }
                if (v27 >= v45) {
                  goto LABEL_36;
                }
                unint64_t v26 = v46[v27];
                ++v28;
                if (v26) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v27 = v28;
          }
        }
LABEL_21:
        uint64_t v23 = (v26 - 1) & v26;
        int64_t v52 = v27;
        unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
      }
      unint64_t v53 = v23;
      uint64_t v29 = 8 * v24;
      uint64_t v30 = *(void *)(*(void *)(v9 + 48) + v29);
      uint64_t v51 = *(void *)(*(void *)(v9 + 56) + v29);
      if ((v50 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DFE00100();
      sub_1DFE00110();
      uint64_t v54 = v30;
      uint64_t v31 = *(void *)(v30 + 16);
      if (v31)
      {
        uint64_t v32 = v54 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
        uint64_t v33 = *(void *)(v47 + 72);
        int64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
        do
        {
          v34(v8, v32, v5);
          sub_1DF662C20();
          sub_1DFDFDBE0();
          (*v16)(v8, v5);
          v32 += v33;
          --v31;
        }
        while (v31);
      }
      uint64_t result = sub_1DFE00140();
      int64_t v11 = v49;
      uint64_t v35 = -1 << *((unsigned char *)v49 + 32);
      unint64_t v36 = result & ~v35;
      unint64_t v37 = v36 >> 6;
      if (((-1 << v36) & ~*(void *)(v17 + 8 * (v36 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v36) & ~*(void *)(v17 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v9 = v48;
        int64_t v19 = v52;
        unint64_t v15 = v53;
      }
      else
      {
        char v38 = 0;
        unint64_t v39 = (unint64_t)(63 - v35) >> 6;
        uint64_t v9 = v48;
        int64_t v19 = v52;
        unint64_t v15 = v53;
        do
        {
          if (++v37 == v39 && (v38 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v40 = v37 == v39;
          if (v37 == v39) {
            unint64_t v37 = 0;
          }
          v38 |= v40;
          uint64_t v41 = *(void *)(v17 + 8 * v37);
        }
        while (v41 == -1);
        unint64_t v20 = __clz(__rbit64(~v41)) + (v37 << 6);
      }
      *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t v21 = 8 * v20;
      *(void *)(v11[6] + v21) = v54;
      *(void *)(v11[7] + v21) = v51;
      ++v11[2];
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1DF654108(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1DFDEF9C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1DF662AB4();
  int v46 = a2;
  uint64_t v10 = sub_1DFDFFC20();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  BOOL v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_1DF65AA58(&qword_1EAC2F2F0, MEMORY[0x1E4F81E90]);
    uint64_t result = sub_1DFDFDBD0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1DF654528(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF6621B8();
  char v42 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    unint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    int64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF65484C(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, sub_1DF66306C);
}

uint64_t sub_1DF654864(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF6630D4();
  uint64_t result = sub_1DFDFFC20();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1DFE000F0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF654B18(uint64_t a1, int a2)
{
  return sub_1DEA6EC40(a1, a2, MEMORY[0x1E4F80758], (unint64_t *)&unk_1EAC2F1E0, MEMORY[0x1E4F80758]);
}

uint64_t sub_1DF654B4C(uint64_t a1, char a2)
{
  return sub_1DF659484(a1, a2, (unint64_t *)&unk_1EAC2F108, (uint64_t)&qword_1EBAF59C0, 0x1E4FB2398);
}

uint64_t sub_1DF654B68(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DEA6F04C(0, &qword_1EAC2F100, (uint64_t (*)(uint64_t))type metadata accessor for FloatingTabGroup, MEMORY[0x1E4FBBD58]);
  char v38 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF654EA4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF661E18();
  char v42 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(v5 + 56) + v31;
    uint64_t v36 = *(void *)v35;
    char v37 = *(unsigned char *)(v35 + 8);
    if ((v42 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    uint64_t v20 = *(void *)(v7 + 56) + v18;
    *(void *)uint64_t v20 = v36;
    *(unsigned char *)(v20 + 8) = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF6551C8(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, (void (*)(void))sub_1DF6627C0);
}

uint64_t sub_1DF6551E0(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, sub_1DF662898);
}

uint64_t sub_1DF6551F8(uint64_t a1, char a2)
{
  return sub_1DF6577D0(a1, a2, (unint64_t *)&unk_1EAC2B890, (uint64_t)&qword_1EBAEA530, (uint64_t)&protocolRef_FCSportsProviding);
}

uint64_t sub_1DF655214(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF6622B4();
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1DEA6FDEC((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1DE9B4B50(v25, (uint64_t)&v38);
      sub_1DEA6FC28(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_1DFDFF930();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1DEA6FDEC(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF655528(uint64_t a1, int a2)
{
  return sub_1DEA283FC(a1, a2, (uint64_t (*)(void))sub_1DE929F5C, sub_1DF662D0C, (uint64_t (*)(void))sub_1DE929F5C, (void (*)(uint64_t, char *))sub_1DF3AFC4C);
}

uint64_t sub_1DF65557C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for EngagementUpsellTriggerGroupStateKey(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1DF661E80();
  int v42 = a2;
  uint64_t v9 = sub_1DFDFFC20();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  long long v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v37 = v2;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    unint64_t v22 = v39;
    unint64_t v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v23 = v39[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v37;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v38) {
              goto LABEL_34;
            }
            unint64_t v23 = v39[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v40 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v42) {
      sub_1DF66155C(v26, (uint64_t)v7, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    }
    else {
      sub_1DF662FD0(v26, (uint64_t)v7, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    }
    uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    sub_1DFE00100();
    swift_bridgeObjectRetain();
    sub_1DFDFDE20();
    swift_bridgeObjectRelease();
    sub_1DFDEE390();
    sub_1DF65AA58(&qword_1EBAC11B8, MEMORY[0x1E4F7EA38]);
    sub_1DFDFDBE0();
    uint64_t result = sub_1DFE00140();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_1DF66155C((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  unint64_t v22 = v39;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1DF6559C0(uint64_t a1, int a2)
{
  return sub_1DEA283FC(a1, a2, type metadata accessor for TagFeedCuration, sub_1DF6623F0, type metadata accessor for TagFeedCuration, (void (*)(uint64_t, char *))sub_1DF662424);
}

uint64_t sub_1DF655A14(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF351940();
  char v37 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v36[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v37)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v36[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      uint64_t v29 = *(void *)(v5 + 56) + 16 * v20;
      char v31 = *(void **)v29;
      unint64_t v30 = *(void **)(v29 + 8);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_retain();
        id v33 = v31;
      }
      sub_1DFE00100();
      swift_bridgeObjectRetain();
      sub_1DFDFDE20();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DFE00140();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v7 + 48) + 8 * v17) = v28;
      unint64_t v18 = (void *)(*(void *)(v7 + 56) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF655D28(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF661F84();
  char v37 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v35 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v34) {
          goto LABEL_33;
        }
        unint64_t v22 = v35[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v22 = v35[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v35[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v22 = v35[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 56) + 32 * v20);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = v29[3];
      uint64_t v38 = v29[2];
      if ((v37 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1DFE00100();
      swift_bridgeObjectRetain();
      sub_1DFDFDE20();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DFE00140();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v7 + 48) + 8 * v17) = v28;
      unint64_t v18 = (void *)(*(void *)(v7 + 56) + 32 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      v18[2] = v38;
      v18[3] = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF65605C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF661F1C();
  char v42 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v40 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v39 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v39) {
          goto LABEL_33;
        }
        unint64_t v23 = v40[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v39) {
            goto LABEL_33;
          }
          unint64_t v23 = v40[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v42)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
                if (v38 >= 64) {
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v40 = -1 << v38;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v39) {
                  goto LABEL_33;
                }
                unint64_t v23 = v40[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 32 * v21;
      uint64_t v33 = *(void **)v32;
      char v34 = *(unsigned char *)(v32 + 9);
      char v46 = *(unsigned char *)(v32 + 10);
      char v47 = *(unsigned char *)(v32 + 8);
      char v44 = *(unsigned char *)(v32 + 12);
      char v45 = *(unsigned char *)(v32 + 11);
      int64_t v35 = *(void **)(v32 + 16);
      char v43 = *(unsigned char *)(v32 + 24);
      if ((v42 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        id v36 = v33;
        id v37 = v35;
      }
      sub_1DFE00100();
      sub_1DFDFDE20();
      uint64_t result = sub_1DFE00140();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
      *(void *)uint64_t v19 = v33;
      *(unsigned char *)(v19 + 8) = v47;
      *(unsigned char *)(v19 + 9) = v34;
      *(unsigned char *)(v19 + 10) = v46;
      *(unsigned char *)(v19 + 11) = v45;
      *(unsigned char *)(v19 + 12) = v44;
      *(void *)(v19 + 16) = v35;
      *(unsigned char *)(v19 + 24) = v43;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF6563C4(uint64_t a1, char a2)
{
  return sub_1DF6577D0(a1, a2, &qword_1EBACCCA0, (uint64_t)&qword_1EBAC0110, (uint64_t)&protocolRef_FCChannelProviding);
}

uint64_t sub_1DF6563E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF662F68();
  char v6 = a2;
  uint64_t v7 = sub_1DFDFFC20();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v37) {
          goto LABEL_33;
        }
        unint64_t v24 = v38[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v24 = v38[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v38[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v24 = v38[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        id v34 = (id)v39;
        id v35 = *((id *)&v39 + 1);
      }
      sub_1DFE00100();
      sub_1DFDFDE20();
      uint64_t result = sub_1DFE00140();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v39;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1DF6566F4(uint64_t a1, char a2)
{
  return sub_1DF659484(a1, a2, &qword_1EAC2F318, (uint64_t)&qword_1EBABE090, 0x1E4FB15E0);
}

uint64_t sub_1DF656710(uint64_t a1, char a2)
{
  return sub_1DF6577D0(a1, a2, (unint64_t *)&unk_1EAC2F210, (uint64_t)&unk_1EBAEA570, (uint64_t)&protocolRef_FCPuzzleTypeProviding);
}

uint64_t sub_1DF65672C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DEDAB460();
  char v37 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  id v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF656A30(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF662550();
  char v35 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v33) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = 8 * v20;
    uint64_t v30 = *(void *)(*(void *)(v5 + 48) + v29);
    uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
    if ((v35 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    sub_1DFE00100();
    swift_bridgeObjectRetain();
    sub_1DFDFDE20();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DFE00140();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v30;
    *(void *)(*(void *)(v7 + 56) + v18) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF656D58(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1DFDEE390();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1DF662094();
  int v46 = a2;
  uint64_t v10 = sub_1DFDFFC20();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  char v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1DF65AA58(&qword_1EBAC11B8, MEMORY[0x1E4F7EA38]);
    uint64_t result = sub_1DFDFDBD0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1DF657178(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF662150();
  char v37 = a2;
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    id v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF65747C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DEA6F04C(0, (unint64_t *)&unk_1EBAF6E30, (uint64_t (*)(uint64_t))sub_1DF66294C, MEMORY[0x1E4FBBD58]);
  char v6 = a2;
  uint64_t v7 = sub_1DFDFFC20();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1DFE00100();
      sub_1DFDFDE20();
      uint64_t result = sub_1DFE00140();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1DF6577B4(uint64_t a1, char a2)
{
  return sub_1DF6577D0(a1, a2, (unint64_t *)&unk_1EAC2F258, (uint64_t)&qword_1EBAEA5A0, (uint64_t)&protocolRef_FCSportsEventProviding);
}

uint64_t sub_1DF6577D0(uint64_t a1, char a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  char v6 = v5;
  uint64_t v8 = *v5;
  sub_1DF6615C4(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE9266B8);
  char v39 = a2;
  uint64_t v9 = sub_1DFDFFC20();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_40;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v38 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v37) {
      break;
    }
    int64_t v25 = (void *)(v8 + 64);
    unint64_t v26 = *(void *)(v38 + 8 * v24);
    ++v16;
    if (!v26)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v16);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v37)
        {
LABEL_33:
          swift_release();
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v16 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v16 >= v37) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v38 + 8 * v16);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v16 = v27;
      }
    }
LABEL_30:
    unint64_t v13 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
    uint64_t v32 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v23);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(*(void *)(v8 + 56) + 8 * v23);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v17 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v19 == v29;
        if (v19 == v29) {
          unint64_t v19 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      unint64_t v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    unint64_t v21 = (void *)(*(void *)(v10 + 48) + 16 * v20);
    *unint64_t v21 = v34;
    v21[1] = v33;
    *(void *)(*(void *)(v10 + 56) + 8 * v20) = v35;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  int64_t v25 = (void *)(v8 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v6 = v10;
  return result;
}

uint64_t sub_1DF657B04(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for SportsHighlights(0);
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SportsHighlights.SubsectionDescriptor(0);
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_1DF6624A4();
  int v45 = a2;
  uint64_t v12 = sub_1DFDFFC20();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v44 + 72);
    uint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v45)
    {
      sub_1DF66155C(v29, (uint64_t)v10, type metadata accessor for SportsHighlights.SubsectionDescriptor);
      uint64_t v30 = *(void *)(v43 + 72);
      sub_1DF66155C(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for SportsHighlights);
    }
    else
    {
      sub_1DF662FD0(v29, (uint64_t)v10, type metadata accessor for SportsHighlights.SubsectionDescriptor);
      uint64_t v30 = *(void *)(v43 + 72);
      sub_1DF662FD0(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for SportsHighlights);
    }
    sub_1DFE00100();
    sub_1DF3A0408();
    uint64_t result = sub_1DFE00140();
    uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    sub_1DF66155C((uint64_t)v10, *(void *)(v13 + 48) + v28 * v21, type metadata accessor for SportsHighlights.SubsectionDescriptor);
    uint64_t result = sub_1DF66155C((uint64_t)v7, *(void *)(v13 + 56) + v30 * v21, type metadata accessor for SportsHighlights);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1DF657FAC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF662F00();
  char v6 = a2;
  uint64_t v7 = sub_1DFDFFC20();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1DE9E14D8(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1DFE00100();
      sub_1DFDFDE20();
      uint64_t result = sub_1DFE00140();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      int64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *int64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1DF6582B8(uint64_t a1, char a2)
{
  return sub_1DE9F2368(a1, a2, (unint64_t *)&unk_1EBAEA868, (unint64_t *)&qword_1EBAE7860, (uint64_t)&protocol descriptor for PuzzleArchiveFilterOptionPredicateType, (void (*)(uint64_t, unsigned char *))sub_1DE942EC4);
}

uint64_t sub_1DF6582E8(uint64_t a1, int a2)
{
  return sub_1DEA6EC40(a1, a2, MEMORY[0x1E4F7FE10], &qword_1EAC2F230, MEMORY[0x1E4F7FE10]);
}

uint64_t sub_1DF65831C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  sub_1DEC60E4C();
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1DF661A1C();
  int v41 = a2;
  uint64_t v9 = sub_1DFDFFC20();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_44;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  BOOL v36 = v2;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_37;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_37:
          swift_release();
          uint64_t v3 = v36;
          if ((v41 & 1) == 0) {
            goto LABEL_44;
          }
          goto LABEL_40;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_46;
            }
            if (v17 >= v37) {
              goto LABEL_37;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v39 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v41)
    {
      sub_1DF66155C(v26, (uint64_t)v7, (uint64_t (*)(void))sub_1DEC60E4C);
      id v27 = *(id *)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_1DF662FD0(v26, (uint64_t)v7, (uint64_t (*)(void))sub_1DEC60E4C);
      id v27 = *(id *)(*(void *)(v8 + 56) + 8 * v20);
    }
    sub_1DFE00100();
    sub_1DFDE79A0();
    sub_1DF65AA58(&qword_1EBABE390, MEMORY[0x1E4F27DE8]);
    sub_1DFDFDBE0();
    if (*(void *)&v7[*(int *)(v40 + 52) + 8])
    {
      unint64_t v42 = v14;
      sub_1DFE00120();
      swift_bridgeObjectRetain();
      unint64_t v14 = v42;
      sub_1DFDFDE20();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DFE00120();
    }
    uint64_t result = sub_1DFE00140();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_1DF66155C((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, (uint64_t (*)(void))sub_1DEC60E4C);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v22 = v38;
  if ((v41 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_44:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1DF6587C8(uint64_t a1, int a2)
{
  return sub_1DEA283FC(a1, a2, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroupKnobs, sub_1DF66221C, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroupKnobs, (void (*)(uint64_t, char *))sub_1DF662250);
}

uint64_t sub_1DF65881C(uint64_t a1, int a2)
{
  return sub_1DEA283FC(a1, a2, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupKnobs, sub_1DF662268, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupKnobs, (void (*)(uint64_t, char *))sub_1DF66229C);
}

uint64_t sub_1DF658870(uint64_t a1, char a2)
{
  return sub_1DF658888(a1, a2, sub_1DF662320);
}

uint64_t sub_1DF658888(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v37 = a2;
  uint64_t v7 = sub_1DFDFFC20();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1DF658BA0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF661828();
  uint64_t v6 = sub_1DFDFFC20();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1DFDFF540();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF658E74(uint64_t a1, char a2)
{
  return sub_1DF658E8C(a1, a2, (void (*)(void))sub_1DF662388);
}

uint64_t sub_1DF658E8C(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v38 = a2;
  uint64_t v7 = sub_1DFDFFC20();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v36) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v35;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1DF659198(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1DF6626C8();
  uint64_t result = sub_1DFDFFC20();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DFE00100();
      sub_1DFE00110();
      uint64_t result = sub_1DFE00140();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DF659468(uint64_t a1, char a2)
{
  return sub_1DF659484(a1, a2, &qword_1EBABB1C8, (uint64_t)&unk_1EBABAEE0, 0x1E4F7E640);
}

uint64_t sub_1DF659484(uint64_t a1, char a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = *v5;
  sub_1DF6615C4(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE919914);
  char v41 = a2;
  uint64_t v9 = sub_1DFDFFC20();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_40;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v40 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  char v38 = v5;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v39) {
      break;
    }
    uint64_t v25 = (void *)(v8 + 64);
    unint64_t v26 = *(void *)(v40 + 8 * v24);
    ++v16;
    if (!v26)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v40 + 8 * v16);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v6 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v40 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v16 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v16 >= v39) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v40 + 8 * v16);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v16 = v27;
      }
    }
LABEL_30:
    unint64_t v13 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
    uint64_t v32 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v23);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    int64_t v35 = *(void **)(*(void *)(v8 + 56) + 8 * v23);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v36 = v35;
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v17 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v19 == v29;
        if (v19 == v29) {
          unint64_t v19 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      unint64_t v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    int64_t v21 = (void *)(*(void *)(v10 + 48) + 16 * v20);
    *int64_t v21 = v34;
    v21[1] = v33;
    *(void *)(*(void *)(v10 + 56) + 8 * v20) = v35;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v6 = v38;
  uint64_t v25 = (void *)(v8 + 64);
  if ((v41 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v25, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v6 = v10;
  return result;
}

uint64_t sub_1DF6597B0(uint64_t a1, char a2)
{
  return sub_1DF6597C8(a1, a2, sub_1DF66316C);
}

uint64_t sub_1DF6597C8(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v37 = a2;
  uint64_t v7 = sub_1DFDFFC20();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DFE00100();
    sub_1DFDFDE20();
    uint64_t result = sub_1DFE00140();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1DF659AE0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1DFE00100();
  sub_1DFDE79A0();
  sub_1DF65AA58(&qword_1EBABE390, MEMORY[0x1E4F27DE8]);
  sub_1DFDFDBE0();
  sub_1DEC5ADE4();
  uint64_t v7 = v6;
  sub_1DFDFDE20();
  swift_bridgeObjectRelease();
  sub_1DFE00140();
  unint64_t v8 = sub_1DFDFF850();
  *(void *)((char *)a3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
  uint64_t result = sub_1DF66155C(a1, a3[6] + *(void *)(*(void *)(v7 - 8) + 72) * v8, (uint64_t (*)(void))sub_1DEC5ADE4);
  *(void *)(a3[7] + 8 * v8) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_1DF659D14(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1DFE00100();
  swift_bridgeObjectRetain();
  sub_1DFDFDE20();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    sub_1DFE00120();
    swift_bridgeObjectRetain();
    sub_1DFDFDE20();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DFE00120();
  }
  sub_1DFE00140();
  unint64_t result = sub_1DFDFF850();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v7 = 8 * result;
  *(void *)(a3[6] + v7) = a1;
  *(void *)(a3[7] + v7) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_1DF659E30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t, unint64_t))
{
  sub_1DFE00100();
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      sub_1DFE00110();
      break;
    default:
      sub_1DFE00110();
      sub_1DFDFDE20();
      break;
  }
  sub_1DFE00140();
  unint64_t v10 = sub_1DFDFF850();
  *(void *)((char *)a4 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
  unint64_t v11 = (void *)(a4[6] + 16 * v10);
  *unint64_t v11 = a1;
  v11[1] = a2;
  uint64_t result = a5(a3, a4[7] + 40 * v10);
  ++a4[2];
  return result;
}

uint64_t sub_1DF659FC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1DFE00100();
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      sub_1DFE00110();
      break;
    default:
      sub_1DFE00110();
      sub_1DFDFDE20();
      break;
  }
  sub_1DFE00140();
  unint64_t v8 = sub_1DFDFF850();
  *(void *)((char *)a4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
  uint64_t v9 = (void *)(a4[6] + 16 * v8);
  *uint64_t v9 = a1;
  v9[1] = a2;
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for OfflineFeedManifest(0);
  uint64_t result = sub_1DF66155C(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * v8, type metadata accessor for OfflineFeedManifest);
  ++a4[2];
  return result;
}

void *sub_1DF65A180()
{
  return sub_1DF65A664((uint64_t (*)(void))type metadata accessor for CuratedMagazineFeedGroupKnobs, sub_1DF662900, (void (*)(unint64_t, char *))sub_1DF662934, (uint64_t (*)(void))type metadata accessor for CuratedMagazineFeedGroupKnobs);
}

void *sub_1DF65A1D4()
{
  uint64_t v1 = v0;
  sub_1DEA62C08();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65A374()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDFFB50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA70FF4();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1DFDFFC10();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v8;
    return result;
  }
  unint64_t v23 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v25) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v25) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_12:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v18, v2);
    uint64_t v19 = 32 * v17;
    sub_1DEA6FC28(*(void *)(v6 + 56) + v19, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v18, v5, v2);
    uint64_t result = sub_1DEA6FDEC(v27, (_OWORD *)(*(void *)(v8 + 56) + v19));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v25)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DF65A614()
{
  return sub_1DF65F988((unint64_t *)&qword_1EBABB1B0, (uint64_t)&qword_1EBABAD10, (uint64_t)&protocolRef_FCHeadlineProviding);
}

void *sub_1DF65A630()
{
  return sub_1DF65B964(sub_1DF662354);
}

id sub_1DF65A648()
{
  return sub_1DF661120((unint64_t *)&unk_1EBABB1D0, (uint64_t)&unk_1EBABAFB0, 0x1E4F7E420);
}

void *sub_1DF65A664(uint64_t (*a1)(void), void (*a2)(void), void (*a3)(unint64_t, char *), uint64_t (*a4)(void))
{
  uint64_t v36 = a3;
  char v37 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)&v32 - v8;
  a2(0);
  uint64_t v10 = *v4;
  uint64_t v11 = sub_1DFDFFC10();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v6 = v12;
    return result;
  }
  uint64_t v33 = v6;
  uint64_t result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    uint64_t result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  uint64_t v34 = v10 + 64;
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v20) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v29);
    ++v16;
    if (!v30)
    {
      int64_t v16 = v29 + 1;
      if (v29 + 1 >= v20) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v34 + 8 * v16);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = (v30 - 1) & v30;
    unint64_t v22 = __clz(__rbit64(v30)) + (v16 << 6);
LABEL_12:
    uint64_t v23 = 16 * v22;
    uint64_t v24 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v22);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    unint64_t v27 = *(void *)(v35 + 72) * v22;
    v36(*(void *)(v10 + 56) + v27, v9);
    BOOL v28 = (void *)(*(void *)(v12 + 48) + v23);
    *BOOL v28 = v25;
    v28[1] = v26;
    sub_1DF66155C((uint64_t)v9, *(void *)(v12 + 56) + v27, v37);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v20)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v6 = v33;
    goto LABEL_28;
  }
  unint64_t v30 = *(void *)(v34 + 8 * v31);
  if (v30)
  {
    int64_t v16 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v16);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DF65A8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1DF65A948(uint64_t a1)
{
}

void sub_1DF65A97C()
{
  if (!qword_1EAC2F080)
  {
    type metadata accessor for ShortcutCategory();
    sub_1DF65AA58(&qword_1EAC2F088, (void (*)(uint64_t))type metadata accessor for ShortcutCategory);
    sub_1DF65AA24();
    unint64_t v0 = sub_1DFDECCE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F080);
    }
  }
}

uint64_t sub_1DF65AA24()
{
  return sub_1DF65AA58(&qword_1EAC2F090, (void (*)(uint64_t))type metadata accessor for ShortcutCategory);
}

uint64_t sub_1DF65AA58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF65AAA0()
{
  unint64_t result = qword_1EAC2F0A0;
  if (!qword_1EAC2F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F0A0);
  }
  return result;
}

uint64_t sub_1DF65AAF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DF65AB54(uint64_t a1)
{
}

void sub_1DF65AB88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1DF65ABEC()
{
  unint64_t result = qword_1EAC2F0D0;
  if (!qword_1EAC2F0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F0D0);
  }
  return result;
}

unint64_t sub_1DF65AC44()
{
  unint64_t result = qword_1EAC2F0D8;
  if (!qword_1EAC2F0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F0D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShortcutsConfigResource()
{
  return &type metadata for ShortcutsConfigResource;
}

unsigned char *storeEnumTagSinglePayload for ShortcutsConfigResource.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF65AD44);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShortcutsConfigResource.CodingKeys()
{
  return &type metadata for ShortcutsConfigResource.CodingKeys;
}

unint64_t sub_1DF65AD80()
{
  unint64_t result = qword_1EAC2F0E0;
  if (!qword_1EAC2F0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F0E0);
  }
  return result;
}

unint64_t sub_1DF65ADD8()
{
  unint64_t result = qword_1EAC2F0E8;
  if (!qword_1EAC2F0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F0E8);
  }
  return result;
}

unint64_t sub_1DF65AE30()
{
  unint64_t result = qword_1EAC2F0F0;
  if (!qword_1EAC2F0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F0F0);
  }
  return result;
}

void *sub_1DF65AE84()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s9DataStoreC10CaptureKeyVMa();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF662A18();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DFDFFC10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v25 = v1;
  unint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v9 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v26 + 72) * v18;
    sub_1DF662FD0(*(void *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(void))_s9DataStoreC10CaptureKeyVMa);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    sub_1DF66155C((uint64_t)v4, *(void *)(v7 + 48) + v19, (uint64_t (*)(void))_s9DataStoreC10CaptureKeyVMa);
    *(void *)(*(void *)(v7 + 56) + v20) = v21;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v9 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DF65B104()
{
  return sub_1DF6602B0(MEMORY[0x1E4F810F8], (unint64_t *)&unk_1EBAEA878, MEMORY[0x1E4F810F8]);
}

id sub_1DF65B138()
{
  uint64_t v1 = v0;
  sub_1DF661664();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    unint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65B2DC()
{
  return sub_1DF6602B0(MEMORY[0x1E4F7FCA8], (unint64_t *)&unk_1EAC2F1D0, MEMORY[0x1E4F7FCA8]);
}

void *sub_1DF65B310()
{
  return sub_1DF65A664((uint64_t (*)(void))type metadata accessor for TagFeedModelPlaceholder, sub_1DF6628CC, (void (*)(unint64_t, char *))sub_1DEFF8340, (uint64_t (*)(void))type metadata accessor for TagFeedModelPlaceholder);
}

void *sub_1DF65B364()
{
  return sub_1DF65C060(sub_1DF661BF8);
}

void *sub_1DF65B37C()
{
  uint64_t v1 = v0;
  sub_1DF661938();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    id v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    void *v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65B524()
{
  uint64_t v1 = v0;
  sub_1DEC5ADE4();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6619A0();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DFDFFC10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v9 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v26 + 72) * v18;
    sub_1DF662FD0(*(void *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(void))sub_1DEC5ADE4);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    sub_1DF66155C((uint64_t)v4, *(void *)(v7 + 48) + v19, (uint64_t (*)(void))sub_1DEC5ADE4);
    *(void *)(*(void *)(v7 + 56) + v20) = v21;
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v9 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DF65B7A4()
{
  uint64_t v1 = v0;
  sub_1DF6631D4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65B94C()
{
  return sub_1DF65B964(sub_1DF663280);
}

void *sub_1DF65B964(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DFDFFC10();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    int64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65BB20()
{
  uint64_t v1 = v0;
  sub_1DF6632B4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65BCC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EngagementUpsellTriggerState(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EngagementUpsellTriggerGroupStateKey(0);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF35177C();
  uint64_t v8 = *v0;
  uint64_t v9 = sub_1DFDFFC10();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v10;
    return result;
  }
  unint64_t v27 = v1;
  id result = (void *)(v9 + 64);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v12 + 8 * v13) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v13);
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v23);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v12 + 8 * v14);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v28 + 72) * v20;
    sub_1DF662FD0(*(void *)(v8 + 48) + v21, (uint64_t)v7, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    unint64_t v22 = *(void *)(v29 + 72) * v20;
    sub_1DF662FD0(*(void *)(v8 + 56) + v22, (uint64_t)v4, type metadata accessor for EngagementUpsellTriggerState);
    sub_1DF66155C((uint64_t)v7, *(void *)(v10 + 48) + v21, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    id result = (void *)sub_1DF66155C((uint64_t)v4, *(void *)(v10 + 56) + v22, type metadata accessor for EngagementUpsellTriggerState);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v18)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v12 + 8 * v25);
  if (v24)
  {
    int64_t v14 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v14);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DF65BFF4()
{
  return sub_1DF65A664(type metadata accessor for AudioFeedTrack, sub_1DF661904, (void (*)(unint64_t, char *))sub_1DEDDB1E0, type metadata accessor for AudioFeedTrack);
}

void *sub_1DF65C048()
{
  return sub_1DF65C060((void (*)(void))sub_1DF661720);
}

void *sub_1DF65C060(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DFDFFC10();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    int64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *unint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65C21C()
{
  return sub_1DF6602B0(MEMORY[0x1E4F27928], (unint64_t *)&unk_1EBABE0B8, MEMORY[0x1E4F27928]);
}

void *sub_1DF65C250()
{
  return sub_1DF65A664(type metadata accessor for SportsHeadlineExposureTracker.GroupSession, sub_1DF661C2C, (void (*)(unint64_t, char *))sub_1DF661C60, type metadata accessor for SportsHeadlineExposureTracker.GroupSession);
}

void *sub_1DF65C2A4()
{
  return sub_1DF65B964(sub_1DF661C78);
}

void *sub_1DF65C2BC()
{
  return sub_1DF66007C((unint64_t *)&unk_1EBAEA810, (unint64_t *)&qword_1EBAD2130, MEMORY[0x1E4F4A9F0], (void (*)(unsigned char *, uint64_t))sub_1DE942EC4);
}

void *sub_1DF65C2EC()
{
  return sub_1DF65C060(sub_1DF661370);
}

void *sub_1DF65C304()
{
  uint64_t v1 = v0;
  sub_1DF66140C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65C490()
{
  return sub_1DF660AE8((void (*)(void))sub_1DF661308);
}

void *sub_1DF65C4A8()
{
  uint64_t v1 = v0;
  sub_1DEA6DF70();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1DEA6FC28(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1DEA6FDEC(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DF65C68C()
{
  uint64_t v1 = v0;
  sub_1DE9E2CE8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65C84C()
{
  return sub_1DF65C060(sub_1DF662694);
}

void *sub_1DF65C864()
{
  return sub_1DF65A664((uint64_t (*)(void))type metadata accessor for PuzzleSetting, sub_1DF661630, (void (*)(unint64_t, char *))sub_1DF32E3E0, (uint64_t (*)(void))type metadata accessor for PuzzleSetting);
}

void *sub_1DF65C8B8()
{
  return sub_1DF6602B0(MEMORY[0x1E4F80A88], (unint64_t *)&unk_1EAC2F220, MEMORY[0x1E4F80A88]);
}

void *sub_1DF65C8EC()
{
  return sub_1DF65B964(sub_1DF661CE0);
}

void *sub_1DF65C904()
{
  uint64_t v1 = v0;
  sub_1DF661DB0();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = v18[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v17 + v20);
    uint64_t v22 = *(void *)(v17 + v20 + 8);
    char v23 = *(unsigned char *)(v17 + v20 + 16);
    int64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    void *v24 = *v18;
    v24[1] = v19;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v21;
    *(void *)(v25 + 8) = v22;
    *(unsigned char *)(v25 + 16) = v23;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1DEF6791C();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65CADC()
{
  uint64_t v1 = v0;
  sub_1DF08DBD8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v35 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v35 >= v13) {
      goto LABEL_26;
    }
    unint64_t v36 = *(void *)(v6 + 8 * v35);
    ++v9;
    if (!v36)
    {
      int64_t v9 = v35 + 1;
      if (v35 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v36 = *(void *)(v6 + 8 * v9);
      if (!v36) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v36 - 1) & v36;
    unint64_t v15 = __clz(__rbit64(v36)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 152 * v15;
    long long v18 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *(void *)(v2 + 56) + v17;
    long long v20 = *(_OWORD *)(v19 + 32);
    long long v21 = *(_OWORD *)(v19 + 48);
    long long v22 = *(_OWORD *)(v19 + 80);
    long long v42 = *(_OWORD *)(v19 + 64);
    long long v43 = v22;
    long long v41 = v21;
    long long v24 = *(_OWORD *)(v19 + 112);
    long long v23 = *(_OWORD *)(v19 + 128);
    long long v25 = *(_OWORD *)(v19 + 96);
    uint64_t v47 = *(void *)(v19 + 144);
    long long v45 = v24;
    long long v46 = v23;
    long long v44 = v25;
    long long v26 = *(_OWORD *)(v19 + 16);
    long long v38 = *(_OWORD *)v19;
    long long v39 = v26;
    long long v40 = v20;
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v18;
    uint64_t v27 = *(void *)(v4 + 56) + v17;
    long long v28 = v39;
    *(_OWORD *)uint64_t v27 = v38;
    *(_OWORD *)(v27 + 16) = v28;
    long long v29 = v40;
    long long v30 = v41;
    long long v31 = v43;
    *(_OWORD *)(v27 + 64) = v42;
    *(_OWORD *)(v27 + 80) = v31;
    *(_OWORD *)(v27 + 32) = v29;
    *(_OWORD *)(v27 + 48) = v30;
    long long v32 = v44;
    long long v33 = v45;
    long long v34 = v46;
    *(void *)(v27 + 144) = v47;
    *(_OWORD *)(v27 + 112) = v33;
    *(_OWORD *)(v27 + 128) = v34;
    *(_OWORD *)(v27 + 96) = v32;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1DEF73608((uint64_t)&v38);
  }
  int64_t v37 = v35 + 2;
  if (v37 >= v13) {
    goto LABEL_26;
  }
  unint64_t v36 = *(void *)(v6 + 8 * v37);
  if (v36)
  {
    int64_t v9 = v37;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v36 = *(void *)(v6 + 8 * v9);
    ++v37;
    if (v36) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65CCFC()
{
  uint64_t v1 = v0;
  sub_1DF6614DC(0, &qword_1EBACBCF8, (void (*)(uint64_t))sub_1DF662DB8, (void (*)(void))sub_1DF662EAC);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 24 * v15;
    uint64_t v17 = *(void *)(v16 + 16);
    long long v18 = *(_OWORD *)v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v19 = *(void *)(v4 + 56) + 24 * v15;
    *(_OWORD *)uint64_t v19 = v18;
    *(void *)(v19 + 16) = v17;
    swift_retain();
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65CEF4()
{
  uint64_t v1 = v0;
  sub_1DF661D14();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65D0A0()
{
  return sub_1DF6602B0(MEMORY[0x1E4F80EA0], &qword_1EAC2F280, MEMORY[0x1E4F80EA0]);
}

void *sub_1DF65D0D4()
{
  return sub_1DF65C060(sub_1DF66243C);
}

void *sub_1DF65D0EC()
{
  return sub_1DF65F988((unint64_t *)&qword_1EBAA6700, (uint64_t)&qword_1EBABAB70, (uint64_t)&protocolRef_FCTagProviding);
}

void *sub_1DF65D108()
{
  uint64_t v1 = v0;
  sub_1DF66262C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    int64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v25 = v19;
    v25[1] = v18;
    long long v26 = (void *)(*(void *)(v4 + 56) + v20);
    *long long v26 = v22;
    v26[1] = v23;
    _OWORD v26[2] = v24;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65D2D0()
{
  return sub_1DF65C060((void (*)(void))sub_1DF11C3A0);
}

void *sub_1DF65D2E8()
{
  return sub_1DF65C060(sub_1DF661D7C);
}

void *sub_1DF65D300()
{
  uint64_t v1 = v0;
  sub_1DF661474();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65D4B4()
{
  return sub_1DF65D514((unint64_t *)&unk_1EBAF5A48, (unint64_t *)&unk_1EBAF43F0, (uint64_t)&protocol descriptor for OfflineFeedBuilderType, (void (*)(unsigned char *, uint64_t))sub_1DE942EC4);
}

void *sub_1DF65D4E4()
{
  return sub_1DF65D514(&qword_1EBAF5A58, (unint64_t *)&unk_1EBAF4400, (uint64_t)&protocol descriptor for OfflineFeedUpdaterType, (void (*)(unsigned char *, uint64_t))sub_1DE942EC4);
}

void *sub_1DF65D514(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v5 = v4;
  sub_1DF662D40(0, a1, a2);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1DFDFFC10();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v5 = v8;
    return result;
  }
  int64_t v29 = v5;
  id result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v17) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v10 + 8 * v26);
    ++v13;
    if (!v27)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v17) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v10 + 8 * v13);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v19 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 16 * v19;
    uint64_t v21 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v19);
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    uint64_t v24 = 40 * v19;
    sub_1DE94F204(*(void *)(v6 + 56) + 40 * v19, (uint64_t)v31);
    int64_t v25 = (uint64_t *)(*(void *)(v8 + 48) + v20);
    *int64_t v25 = v22;
    v25[1] = v23;
    a4(v31, *(void *)(v8 + 56) + v24);
    id result = (void *)sub_1DEB0AF44(v22, v23);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v17)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v5 = v29;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v10 + 8 * v28);
  if (v27)
  {
    int64_t v13 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v10 + 8 * v13);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DF65D718()
{
  uint64_t v1 = v0;
  sub_1DF662C54(0, &qword_1EAC2F2F8, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65D8D4()
{
  uint64_t v1 = v0;
  sub_1DEABB41C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    sub_1DF177614(*(void *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (void *)sub_1DE922160((uint64_t)v22, *(void *)(v4 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65DA94()
{
  uint64_t v1 = sub_1DFDEF9C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF662AB4();
  uint64_t v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DFDFFC10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v24 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v25 = v5 + 64;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  uint64_t v28 = v2 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65DD24()
{
  uint64_t v1 = v0;
  sub_1DF6621B8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65DEDC()
{
  return sub_1DF65C060(sub_1DF66306C);
}

void *sub_1DF65DEF4()
{
  uint64_t v1 = v0;
  sub_1DF6630D4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65E094()
{
  return sub_1DF6602B0(MEMORY[0x1E4F80758], (unint64_t *)&unk_1EAC2F1E0, MEMORY[0x1E4F80758]);
}

id sub_1DF65E0C8()
{
  return sub_1DF661120((unint64_t *)&unk_1EAC2F108, (uint64_t)&qword_1EBAF59C0, 0x1E4FB2398);
}

id sub_1DF65E0E4()
{
  uint64_t v1 = v0;
  sub_1DEA6F04C(0, &qword_1EAC2F100, (uint64_t (*)(uint64_t))type metadata accessor for FloatingTabGroup, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65E2C4()
{
  uint64_t v1 = v0;
  sub_1DF661E18();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    uint64_t v21 = *(void *)v20;
    LOBYTE(v20) = *(unsigned char *)(v20 + 8);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    uint64_t v23 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v23 = v21;
    *(unsigned char *)(v23 + 8) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65E47C()
{
  return sub_1DF65C060((void (*)(void))sub_1DF6627C0);
}

void *sub_1DF65E494()
{
  return sub_1DF65C060(sub_1DF662898);
}

void *sub_1DF65E4AC()
{
  return sub_1DF65F988((unint64_t *)&unk_1EAC2B890, (uint64_t)&qword_1EBAEA530, (uint64_t)&protocolRef_FCSportsProviding);
}

void *sub_1DF65E4C8()
{
  uint64_t v1 = v0;
  sub_1DF6622B4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1DE9B4B50(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1DEA6FC28(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_1DEA6FDEC(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65E6AC()
{
  return sub_1DF65A664((uint64_t (*)(void))sub_1DE929F5C, sub_1DF662D0C, (void (*)(unint64_t, char *))sub_1DF3AFC4C, (uint64_t (*)(void))sub_1DE929F5C);
}

void *sub_1DF65E700()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EngagementUpsellTriggerGroupStateKey(0);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF661E80();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DFDFFC10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v9 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v26 + 72) * v18;
    sub_1DF662FD0(*(void *)(v5 + 48) + v19, (uint64_t)v4, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + v20);
    id result = (void *)sub_1DF66155C((uint64_t)v4, *(void *)(v7 + 48) + v19, type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    *(void *)(*(void *)(v7 + 56) + v20) = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v9 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DF65E978()
{
  return sub_1DF65A664(type metadata accessor for TagFeedCuration, sub_1DF6623F0, (void (*)(unint64_t, char *))sub_1DF662424, type metadata accessor for TagFeedCuration);
}

void *sub_1DF65E9CC()
{
  return sub_1DF65A664((uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupKnobs, sub_1DEA287BC, (void (*)(unint64_t, char *))sub_1DEA288D4, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupKnobs);
}

void *sub_1DF65EA20()
{
  uint64_t v1 = v0;
  sub_1DF661F84();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = v19[3];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v18);
    void *v24 = v20;
    v24[1] = v21;
    _OWORD v24[2] = v22;
    v24[3] = v23;
    swift_retain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DF65EBEC()
{
  uint64_t v1 = v0;
  sub_1DF661F1C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v32 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v13) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v6 + 8 * v32);
    ++v9;
    if (!v33)
    {
      int64_t v9 = v32 + 1;
      if (v32 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v6 + 8 * v9);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v33 - 1) & v33;
    unint64_t v15 = __clz(__rbit64(v33)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void **)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 9);
    char v25 = *(unsigned char *)(v21 + 10);
    char v26 = *(unsigned char *)(v21 + 11);
    char v27 = *(unsigned char *)(v21 + 12);
    uint64_t v28 = *(void **)(v21 + 16);
    LOBYTE(v21) = *(unsigned char *)(v21 + 24);
    int64_t v29 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v29 = v19;
    v29[1] = v18;
    uint64_t v30 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v30 = v22;
    *(unsigned char *)(v30 + 8) = v23;
    *(unsigned char *)(v30 + 9) = v24;
    *(unsigned char *)(v30 + 10) = v25;
    *(unsigned char *)(v30 + 11) = v26;
    *(unsigned char *)(v30 + 12) = v27;
    *(void *)(v30 + 16) = v28;
    *(unsigned char *)(v30 + 24) = v21;
    swift_bridgeObjectRetain();
    id v31 = v22;
    id result = v28;
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v13) {
    goto LABEL_26;
  }
  unint64_t v33 = *(void *)(v6 + 8 * v34);
  if (v33)
  {
    int64_t v9 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v6 + 8 * v9);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DF65EDE8()
{
  uint64_t v1 = v0;
  sub_1DF662F68();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v25 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v25;
    swift_bridgeObjectRetain();
    id v21 = (id)v25;
    id result = *((id *)&v25 + 1);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DF65EFB4()
{
  return sub_1DF661120(&qword_1EAC2F318, (uint64_t)&qword_1EBABE090, 0x1E4FB15E0);
}

void *sub_1DF65EFD0()
{
  return sub_1DF65F988((unint64_t *)&unk_1EAC2F210, (uint64_t)&unk_1EBAEA570, (uint64_t)&protocolRef_FCPuzzleTypeProviding);
}

void *sub_1DF65EFEC()
{
  uint64_t v1 = v0;
  sub_1DEDAB460();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    id v21 = (void *)(*(void *)(v4 + 48) + v16);
    *id v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65F198()
{
  uint64_t v1 = v0;
  sub_1DF662550();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DF65F340()
{
  uint64_t v1 = sub_1DFDEE390();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF662094();
  int64_t v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DFDFFC10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v24 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v28 = v2 + 16;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    unint64_t v19 = *(void **)(*(void *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65F5D0()
{
  uint64_t v1 = v0;
  sub_1DF662150();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65F77C()
{
  uint64_t v1 = v0;
  sub_1DEA6F04C(0, (unint64_t *)&unk_1EBAF6E30, (uint64_t (*)(uint64_t))sub_1DF66294C, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65F96C()
{
  return sub_1DF65F988((unint64_t *)&unk_1EAC2F258, (uint64_t)&qword_1EBAEA5A0, (uint64_t)&protocolRef_FCSportsEventProviding);
}

void *sub_1DF65F988(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1DF6615C4(0, a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE9266B8);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1DFDFFC10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v4 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      int64_t v12 = v25 + 1;
      if (v25 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v9 + 8 * v12);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v26 - 1) & v26;
    unint64_t v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = 16 * v18;
    long long v20 = (void *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v21 = v20[1];
    uint64_t v22 = 8 * v18;
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + v22);
    int64_t v24 = (void *)(*(void *)(v7 + 48) + v19);
    void *v24 = *v20;
    v24[1] = v21;
    *(void *)(*(void *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v16) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v9 + 8 * v27);
  if (v26)
  {
    int64_t v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v12);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF65FB5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SportsHighlights(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SportsHighlights.SubsectionDescriptor(0);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6624A4();
  uint64_t v8 = *v0;
  uint64_t v9 = sub_1DFDFFC10();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v10;
    return result;
  }
  int64_t v27 = v1;
  id result = (void *)(v9 + 64);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v12 + 8 * v13) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v13);
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v23);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v12 + 8 * v14);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v28 + 72) * v20;
    sub_1DF662FD0(*(void *)(v8 + 48) + v21, (uint64_t)v7, type metadata accessor for SportsHighlights.SubsectionDescriptor);
    unint64_t v22 = *(void *)(v29 + 72) * v20;
    sub_1DF662FD0(*(void *)(v8 + 56) + v22, (uint64_t)v4, type metadata accessor for SportsHighlights);
    sub_1DF66155C((uint64_t)v7, *(void *)(v10 + 48) + v21, type metadata accessor for SportsHighlights.SubsectionDescriptor);
    id result = (void *)sub_1DF66155C((uint64_t)v4, *(void *)(v10 + 56) + v22, type metadata accessor for SportsHighlights);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v18)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v12 + 8 * v25);
  if (v24)
  {
    int64_t v14 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v14);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DF65FE88()
{
  uint64_t v1 = v0;
  sub_1DF662F00();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    unint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1DE9E14D8(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF66004C()
{
  return sub_1DF66007C((unint64_t *)&unk_1EBAEA868, (unint64_t *)&qword_1EBAE7860, (uint64_t)&protocol descriptor for PuzzleArchiveFilterOptionPredicateType, (void (*)(unsigned char *, uint64_t))sub_1DE942EC4);
}

void *sub_1DF66007C(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v5 = v4;
  sub_1DE9F2694(0, a1, a2);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1DFDFFC10();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v5 = v8;
    return result;
  }
  uint64_t v29 = v5;
  id result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v17) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v10 + 8 * v26);
    ++v13;
    if (!v27)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v17) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v10 + 8 * v13);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v19 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 16 * v19;
    int64_t v21 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v19);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = 40 * v19;
    sub_1DE94F204(*(void *)(v6 + 56) + 40 * v19, (uint64_t)v31);
    int64_t v25 = (void *)(*(void *)(v8 + 48) + v20);
    *int64_t v25 = v22;
    v25[1] = v23;
    a4(v31, *(void *)(v8 + 56) + v24);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v17)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v5 = v29;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v10 + 8 * v28);
  if (v27)
  {
    int64_t v13 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v10 + 8 * v13);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DF66027C()
{
  return sub_1DF6602B0(MEMORY[0x1E4F7FE10], &qword_1EAC2F230, MEMORY[0x1E4F7FE10]);
}

void *sub_1DF6602B0(uint64_t (*a1)(void), unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v41 = a1(0);
  uint64_t v6 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  long long v40 = (char *)&v35 - v7;
  sub_1DEA6F04C(0, a2, a3, MEMORY[0x1E4FBBD58]);
  int64_t v35 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1DFDFFC10();
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v42 = v9;
  if (!v10)
  {
    id result = (void *)swift_release();
    uint64_t v34 = v42;
    unint64_t v33 = v35;
LABEL_28:
    *unint64_t v33 = v34;
    return result;
  }
  uint64_t v11 = v9;
  id result = (void *)(v9 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    uint64_t v11 = v42;
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v8 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v8 + 64);
  uint64_t v36 = v8 + 64;
  int64_t v37 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v38 = v6 + 32;
  uint64_t v39 = v6 + 16;
  unint64_t v19 = v40;
  uint64_t v20 = v41;
  while (1)
  {
    if (v18)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v30 >= v37) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v30);
    ++v15;
    if (!v31)
    {
      int64_t v15 = v30 + 1;
      if (v30 + 1 >= v37) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v36 + 8 * v15);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v18 = (v31 - 1) & v31;
    unint64_t v22 = __clz(__rbit64(v31)) + (v15 << 6);
LABEL_12:
    uint64_t v23 = 16 * v22;
    uint64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v22);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    unint64_t v27 = *(void *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(void *)(v8 + 56) + v27, v20);
    uint64_t v28 = v42;
    uint64_t v29 = (void *)(*(void *)(v42 + 48) + v23);
    *uint64_t v29 = v25;
    v29[1] = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v28 + 56) + v27, v19, v20);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v37)
  {
LABEL_26:
    id result = (void *)swift_release();
    unint64_t v33 = v35;
    uint64_t v34 = v42;
    goto LABEL_28;
  }
  unint64_t v31 = *(void *)(v36 + 8 * v32);
  if (v31)
  {
    int64_t v15 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v15 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v15 >= v37) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v15);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1DF660598()
{
  uint64_t v1 = v0;
  sub_1DEC60E4C();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF661A1C();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DFDFFC10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_28:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v25 = v1;
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v9 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v26 + 72) * v18;
    sub_1DF662FD0(*(void *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(void))sub_1DEC60E4C);
    uint64_t v20 = 8 * v18;
    unint64_t v21 = *(void **)(*(void *)(v5 + 56) + v20);
    sub_1DF66155C((uint64_t)v4, *(void *)(v7 + 48) + v19, (uint64_t (*)(void))sub_1DEC60E4C);
    *(void *)(*(void *)(v7 + 56) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v9 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DF660814()
{
  return sub_1DF65A664((uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroupKnobs, sub_1DEABB360, (void (*)(unint64_t, char *))sub_1DEAD1E4C, (uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroupKnobs);
}

void *sub_1DF660868()
{
  return sub_1DF65A664((uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroupKnobs, sub_1DF66221C, (void (*)(unint64_t, char *))sub_1DF662250, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroupKnobs);
}

void *sub_1DF6608BC()
{
  return sub_1DF65A664((uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupKnobs, sub_1DF662268, (void (*)(unint64_t, char *))sub_1DF66229C, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupKnobs);
}

void *sub_1DF660910()
{
  return sub_1DF65B964(sub_1DF662320);
}

void *sub_1DF660928()
{
  uint64_t v1 = v0;
  sub_1DF661828();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF660AD0()
{
  return sub_1DF660AE8((void (*)(void))sub_1DF662388);
}

void *sub_1DF660AE8(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DFDFFC10();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v7 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 8 * v16;
    uint64_t v22 = *(void *)(*(void *)(v3 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v5 + 48) + v17);
    *unint64_t v23 = v20;
    v23[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v21) = v22;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v14) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v7 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF660C9C()
{
  uint64_t v1 = v0;
  sub_1DF6626C8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DFDFFC10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF660E3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OfflineFeedManifest(0);
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6614DC(0, (unint64_t *)&qword_1EBAD1BC0, (void (*)(uint64_t))type metadata accessor for OfflineFeedManifest, (void (*)(void))sub_1DEAE0810);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DFDFFC10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v28 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v29 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    int64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v30 + 72) * v17;
    sub_1DF662FD0(*(void *)(v5 + 56) + v22, (uint64_t)v4, type metadata accessor for OfflineFeedManifest);
    unint64_t v23 = (uint64_t *)(*(void *)(v7 + 48) + v18);
    *unint64_t v23 = v20;
    v23[1] = v21;
    sub_1DF66155C((uint64_t)v4, *(void *)(v7 + 56) + v22, type metadata accessor for OfflineFeedManifest);
    id result = (void *)sub_1DEB0AF44(v20, v21);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1DF661104()
{
  return sub_1DF661120(&qword_1EBABB1C8, (uint64_t)&unk_1EBABAEE0, 0x1E4F7E640);
}

id sub_1DF661120(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1DF6615C4(0, a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE919914);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1DFDFFC10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v4 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      int64_t v12 = v25 + 1;
      if (v25 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v9 + 8 * v12);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v26 - 1) & v26;
    unint64_t v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = 16 * v18;
    uint64_t v20 = (void *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v21 = v20[1];
    uint64_t v22 = 8 * v18;
    unint64_t v23 = *(void **)(*(void *)(v5 + 56) + v22);
    int64_t v24 = (void *)(*(void *)(v7 + 48) + v19);
    void *v24 = *v20;
    v24[1] = v21;
    *(void *)(*(void *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    id result = v23;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v16) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v9 + 8 * v27);
  if (v26)
  {
    int64_t v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v12);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DF6612F0()
{
  return sub_1DF65C060(sub_1DF66316C);
}

void sub_1DF661308()
{
  if (!qword_1EBAA66F0)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA66F0);
    }
  }
}

void sub_1DF661370(uint64_t a1)
{
}

void sub_1DF6613A4()
{
  if (!qword_1EBABE040)
  {
    unint64_t v0 = sub_1DFDFDB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABE040);
    }
  }
}

void sub_1DF66140C()
{
  if (!qword_1EBAC0190)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAC0190);
    }
  }
}

void sub_1DF661474()
{
  if (!qword_1EBAF87C8)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF87C8);
    }
  }
}

void sub_1DF6614DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1DFDFFC50();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DF66155C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1DF6615C4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1DFDFFC50();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DF661630(uint64_t a1)
{
}

void sub_1DF661664()
{
  if (!qword_1EBABB200)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBABB040);
    sub_1DE919914(255, (unint64_t *)&unk_1EBABAFB0);
    sub_1DEA15EA8((unint64_t *)&qword_1EBABB050, (unint64_t *)&qword_1EBABB040);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABB200);
    }
  }
}

void sub_1DF661720()
{
  if (!qword_1EAC2F120)
  {
    sub_1DF6617C0(255, (unint64_t *)&qword_1EAC224D8, (uint64_t (*)(void))sub_1DEC80DA0, (uint64_t)&type metadata for PuzzleArchiveFilterOption, MEMORY[0x1E4FBB510]);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F120);
    }
  }
}

void sub_1DF6617C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1DF661828()
{
  if (!qword_1EAC2F128)
  {
    sub_1DE919914(255, &qword_1EAC2F130);
    sub_1DF65AB88(255, &qword_1EAC2F138, MEMORY[0x1E4FAC038], MEMORY[0x1E4FBB320]);
    sub_1DEA15EA8((unint64_t *)&unk_1EAC2F140, &qword_1EAC2F130);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F128);
    }
  }
}

void sub_1DF661904(uint64_t a1)
{
}

void sub_1DF661938()
{
  if (!qword_1EBAF3228)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF3228);
    }
  }
}

void sub_1DF6619A0()
{
  if (!qword_1EAC2F168)
  {
    sub_1DEC5ADE4();
    _s4ItemCMa_0();
    sub_1DEC5AEF0();
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F168);
    }
  }
}

void sub_1DF661A1C()
{
  if (!qword_1EAC2F190)
  {
    sub_1DEC60E4C();
    sub_1DE919914(255, (unint64_t *)&qword_1EBABE090);
    sub_1DF661AA8();
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F190);
    }
  }
}

unint64_t sub_1DF661AA8()
{
  unint64_t result = qword_1EAC2F1A0;
  if (!qword_1EAC2F1A0)
  {
    sub_1DEC60E4C();
    sub_1DF65AA58(&qword_1EBABE390, MEMORY[0x1E4F27DE8]);
    sub_1DF661B74((unint64_t *)&qword_1EBABA660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F1A0);
  }
  return result;
}

uint64_t sub_1DF661B74(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DF66284C(255, (unint64_t *)&qword_1EBABA650, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF661BF8(uint64_t a1)
{
}

void sub_1DF661C2C(uint64_t a1)
{
}

uint64_t sub_1DF661C60(uint64_t a1, uint64_t a2)
{
  return sub_1DF662FD0(a1, a2, type metadata accessor for SportsHeadlineExposureTracker.GroupSession);
}

void sub_1DF661C78(uint64_t a1)
{
}

void sub_1DF661CAC(uint64_t a1)
{
}

void sub_1DF661CE0(uint64_t a1)
{
}

void sub_1DF661D14()
{
  if (!qword_1EBABB150)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABB150);
    }
  }
}

void sub_1DF661D7C(uint64_t a1)
{
}

void sub_1DF661DB0()
{
  if (!qword_1EAC2F1F0)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F1F0);
    }
  }
}

void sub_1DF661E18()
{
  if (!qword_1EAC2F1F8)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F1F8);
    }
  }
}

void sub_1DF661E80()
{
  if (!qword_1EBAEA800)
  {
    type metadata accessor for EngagementUpsellTriggerGroupStateKey(255);
    sub_1DF65AA58(&qword_1EBAE6100, (void (*)(uint64_t))type metadata accessor for EngagementUpsellTriggerGroupStateKey);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA800);
    }
  }
}

void sub_1DF661F1C()
{
  if (!qword_1EAC2F208)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F208);
    }
  }
}

void sub_1DF661F84()
{
  if (!qword_1EBACCC78)
  {
    type metadata accessor for TagFeedServiceContext();
    sub_1DF662030();
    sub_1DF65AA58(&qword_1EBAD9280, (void (*)(uint64_t))type metadata accessor for TagFeedServiceContext);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACCC78);
    }
  }
}

void sub_1DF662030()
{
  if (!qword_1EBAA64B0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAA64B0);
    }
  }
}

void sub_1DF662094()
{
  if (!qword_1EBAEA7B8)
  {
    sub_1DFDEE390();
    sub_1DE919914(255, (unint64_t *)&unk_1EBACCC10);
    sub_1DF65AA58(&qword_1EBAC11B8, MEMORY[0x1E4F7EA38]);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA7B8);
    }
  }
}

void sub_1DF662150()
{
  if (!qword_1EBACCC88)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACCC88);
    }
  }
}

void sub_1DF6621B8()
{
  if (!qword_1EBAA66C8)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA66C8);
    }
  }
}

void sub_1DF66221C(uint64_t a1)
{
}

uint64_t sub_1DF662250(uint64_t a1, uint64_t a2)
{
  return sub_1DF662FD0(a1, a2, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroupKnobs);
}

void sub_1DF662268(uint64_t a1)
{
}

uint64_t sub_1DF66229C(uint64_t a1, uint64_t a2)
{
  return sub_1DF662FD0(a1, a2, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupKnobs);
}

void sub_1DF6622B4()
{
  if (!qword_1EBACA6E0)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACA6E0);
    }
  }
}

void sub_1DF662320(uint64_t a1)
{
}

void sub_1DF662354(uint64_t a1)
{
}

void sub_1DF662388()
{
  if (!qword_1EAC2F248)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F248);
    }
  }
}

void sub_1DF6623F0(uint64_t a1)
{
}

uint64_t sub_1DF662424(uint64_t a1, uint64_t a2)
{
  return sub_1DF662FD0(a1, a2, type metadata accessor for TagFeedCuration);
}

void sub_1DF66243C(uint64_t a1)
{
}

void sub_1DF662470(uint64_t a1)
{
}

void sub_1DF6624A4()
{
  if (!qword_1EAC2F268)
  {
    type metadata accessor for SportsHighlights.SubsectionDescriptor(255);
    type metadata accessor for SportsHighlights(255);
    sub_1DF65AA58((unint64_t *)&unk_1EAC2F270, (void (*)(uint64_t))type metadata accessor for SportsHighlights.SubsectionDescriptor);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F268);
    }
  }
}

void sub_1DF662550()
{
  if (!qword_1EBAEA7C8)
  {
    type metadata accessor for TagFeedServiceContext();
    sub_1DF65AB88(255, (unint64_t *)&qword_1EBAEA000, MEMORY[0x1E4F81880], MEMORY[0x1E4FBB718]);
    sub_1DF65AA58(&qword_1EBAD9280, (void (*)(uint64_t))type metadata accessor for TagFeedServiceContext);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA7C8);
    }
  }
}

void sub_1DF66262C()
{
  if (!qword_1EBAEA828)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA828);
    }
  }
}

void sub_1DF662694(uint64_t a1)
{
}

void sub_1DF6626C8()
{
  if (!qword_1EAC2F288)
  {
    sub_1DF6617C0(255, (unint64_t *)&qword_1EAC224D8, (uint64_t (*)(void))sub_1DEC80DA0, (uint64_t)&type metadata for PuzzleArchiveFilterOption, MEMORY[0x1E4FBB510]);
    sub_1DF66276C();
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F288);
    }
  }
}

unint64_t sub_1DF66276C()
{
  unint64_t result = qword_1EAC2F290;
  if (!qword_1EAC2F290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F290);
  }
  return result;
}

void sub_1DF6627C0()
{
  if (!qword_1EBABB180)
  {
    sub_1DF66284C(255, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABB180);
    }
  }
}

void sub_1DF66284C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1DF662898(uint64_t a1)
{
}

void sub_1DF6628CC(uint64_t a1)
{
}

void sub_1DF662900(uint64_t a1)
{
}

uint64_t sub_1DF662934(uint64_t a1, uint64_t a2)
{
  return sub_1DF662FD0(a1, a2, (uint64_t (*)(void))type metadata accessor for CuratedMagazineFeedGroupKnobs);
}

unint64_t sub_1DF66294C()
{
  unint64_t result = qword_1EBAF6038;
  if (!qword_1EBAF6038)
  {
    type metadata accessor for AudioFeedTrack.Configurables(255);
    sub_1DF6629AC();
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EBAF6038);
  }
  return result;
}

void sub_1DF6629AC()
{
  if (!qword_1EBAE9E50)
  {
    sub_1DE925C98(255, (unint64_t *)&qword_1EBABA510);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9E50);
    }
  }
}

void sub_1DF662A18()
{
  if (!qword_1EAC2F2B0)
  {
    _s9DataStoreC10CaptureKeyVMa();
    sub_1DF65AA58(&qword_1EAC21298, (void (*)(uint64_t))_s9DataStoreC10CaptureKeyVMa);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F2B0);
    }
  }
}

void sub_1DF662AB4()
{
  if (!qword_1EAC2F2C8)
  {
    sub_1DFDEF9C0();
    sub_1DF662C54(255, (unint64_t *)&qword_1EAC2F2D0, MEMORY[0x1E4FBAEA0]);
    sub_1DF65AA58(&qword_1EAC2F2F0, MEMORY[0x1E4F81E90]);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F2C8);
    }
  }
}

void sub_1DF662B7C(uint64_t a1)
{
}

uint64_t sub_1DF662BB0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF662C20()
{
  return sub_1DF65AA58((unint64_t *)&unk_1EAC283B0, MEMORY[0x1E4F81EC0]);
}

void sub_1DF662C54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, uint64_t))
{
  if (!*a2)
  {
    sub_1DF662B7C(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1DF662BB0((unint64_t *)&qword_1EAC2F2E0, sub_1DF662B7C, (void (*)(void))sub_1DF662C20);
    unint64_t v9 = a3(a1, v7, MEMORY[0x1E4FBB550], v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1DF662D0C(uint64_t a1)
{
}

void sub_1DF662D40(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1DE925C98(255, a3);
    sub_1DEAE0810();
    unint64_t v4 = sub_1DFDFFC50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1DF662DB8()
{
  if (!qword_1EBAD19F0)
  {
    sub_1DF662E2C();
    sub_1DEDDB2BC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAD19F0);
    }
  }
}

void sub_1DF662E2C()
{
  if (!qword_1EBACBC78)
  {
    sub_1DE925C98(255, (unint64_t *)&qword_1EBABB7C0);
    unint64_t v0 = sub_1DFDFE4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACBC78);
    }
  }
}

unint64_t sub_1DF662EAC()
{
  unint64_t result = qword_1EBACBAD0;
  if (!qword_1EBACBAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBACBAD0);
  }
  return result;
}

void sub_1DF662F00()
{
  if (!qword_1EBABB128)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABB128);
    }
  }
}

void sub_1DF662F68()
{
  if (!qword_1EAC2F320)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F320);
    }
  }
}

uint64_t sub_1DF662FD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1DF663038(uint64_t a1)
{
}

void sub_1DF66306C(uint64_t a1)
{
}

void sub_1DF6630A0(uint64_t a1)
{
}

void sub_1DF6630D4()
{
  if (!qword_1EAC2F340)
  {
    sub_1DF65AB88(255, (unint64_t *)&unk_1EAC2F348, (uint64_t (*)(uint64_t))sub_1DEE030E8, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F340);
    }
  }
}

void sub_1DF66316C(uint64_t a1)
{
}

void sub_1DF6631A0(uint64_t a1)
{
}

void sub_1DF6631D4()
{
  if (!qword_1EAC2F368)
  {
    type metadata accessor for SportsDateHeader();
    type metadata accessor for SportsScores();
    sub_1DF65AA58((unint64_t *)&unk_1EAC2F370, (void (*)(uint64_t))type metadata accessor for SportsDateHeader);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F368);
    }
  }
}

void sub_1DF663280(uint64_t a1)
{
}

void sub_1DF6632B4()
{
  if (!qword_1EAC2F380)
  {
    type metadata accessor for SportsDateHeader();
    sub_1DEA6F04C(255, qword_1EAC2F388, (uint64_t (*)(uint64_t))type metadata accessor for SportsScores, MEMORY[0x1E4FBAEA0]);
    sub_1DF65AA58((unint64_t *)&unk_1EAC2F370, (void (*)(uint64_t))type metadata accessor for SportsDateHeader);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F380);
    }
  }
}

uint64_t sub_1DF663390(uint64_t a1, void *a2, void *a3)
{
  uint64_t v112 = a3;
  id v121 = a2;
  sub_1DEA73DB4(0, (unint64_t *)&unk_1EBACCBE0, MEMORY[0x1E4F81808], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v111 = &v92[-v5];
  uint64_t v110 = sub_1DFDFC910();
  unint64_t v146 = *(char **)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  unint64_t v109 = (uint64_t *)&v92[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v108 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  uint64_t v107 = *(void *)(v108 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v108);
  uint64_t v106 = (id *)&v92[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v105 = &v92[-v10];
  MEMORY[0x1F4188790](v9);
  int64_t v12 = &v92[-v11];
  uint64_t v145 = sub_1DFDFB5C0();
  uint64_t v13 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  unint64_t v15 = &v92[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DED3B964();
  uint64_t v138 = v16;
  uint64_t v147 = *(void (***)(unsigned char *, uint64_t))(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v137 = &v92[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v149 = sub_1DFDFAB10();
  uint64_t v18 = *(void *)(v149 - 8);
  MEMORY[0x1F4188790](v149);
  uint64_t v20 = &v92[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v123 = sub_1DFDFB060();
  uint64_t v21 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  id v133 = &v92[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DF66AF10(0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v114 = &v92[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DEED9B08(0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v119 = &v92[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = sub_1DFDFBC20();
  uint64_t v27 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  id v118 = &v92[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = a1;
  int64_t v30 = *(void *)(a1 + 16);
  uint64_t v31 = MEMORY[0x1E4FBC860];
  if (!v30) {
    return v31;
  }
  uint64_t v95 = v12;
  uint64_t v153 = MEMORY[0x1E4FBC860];
  int64_t v99 = v30;
  sub_1DEDF8B1C(0, v30, 0);
  unint64_t v98 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v104 = v29 + v98;
  uint64_t v32 = *(void *)(v27 + 72);
  sub_1DEA34164();
  uint64_t v103 = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v148 = v18 + 16;
  uint64_t v144 = (uint64_t (**)(unsigned char *, uint64_t))(v13 + 88);
  uint64_t v102 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
  uint64_t v101 = v34 + 56;
  uint64_t v140 = (void (**)(unsigned char *, uint64_t))(v13 + 96);
  uint64_t v141 = (void (**)(unsigned char *, uint64_t))(v13 + 8);
  uint64_t v35 = 0;
  char v136 = (void (**)(unsigned char *, uint64_t, uint64_t))(v147 + 2);
  unint64_t v135 = v147 + 1;
  uint64_t v147 = (void (**)(unsigned char *, uint64_t))(v18 + 8);
  int v143 = *MEMORY[0x1E4F80E58];
  uint64_t v94 = (void (**)(uint64_t *, void, uint64_t))(v146 + 104);
  uint64_t v124 = (void (**)(unsigned char *, unint64_t, uint64_t))(v21 + 16);
  int v139 = *MEMORY[0x1E4F80BE0];
  unint64_t v125 = (void (**)(unint64_t, unsigned char *, uint64_t))(v21 + 32);
  uint64_t v96 = (void (**)(unint64_t, unsigned char *, uint64_t))(v27 + 32);
  unsigned int v93 = *MEMORY[0x1E4F815C0];
  unint64_t v146 = "c}@ Local News articles";
  unint64_t v142 = 0x80000001DFEFEE40;
  long long v120 = xmmword_1DFE0B250;
  uint64_t v36 = v149;
  uint64_t v37 = v123;
  uint64_t v100 = v21;
  uint64_t v97 = v32;
  uint64_t v122 = v18;
  while (1)
  {
    uint64_t v38 = v104 + v32 * v35;
    v102(v119, 1, 1, v103);
    uint64_t v116 = v38;
    uint64_t v39 = sub_1DFDFBC00();
    int64_t v40 = *(void *)(v39 + 16);
    uint64_t v117 = v35;
    if (v40) {
      break;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_1DFDFAAC0();
    uint64_t v86 = (uint64_t)v114;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v114, 1, 1, v85);
    uint64_t v87 = (uint64_t)v119;
    sub_1DFDFBBF0();
    swift_bridgeObjectRelease();
    sub_1DE9E360C(v86, (uint64_t (*)(void))sub_1DF66AF10);
    sub_1DE9E360C(v87, (uint64_t (*)(void))sub_1DEED9B08);
    uint64_t v31 = v153;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DEDF8B1C(0, *(void *)(v31 + 16) + 1, 1);
      uint64_t v31 = v153;
    }
    unint64_t v89 = *(void *)(v31 + 16);
    unint64_t v88 = *(void *)(v31 + 24);
    if (v89 >= v88 >> 1)
    {
      sub_1DEDF8B1C(v88 > 1, v89 + 1, 1);
      uint64_t v31 = v153;
    }
    uint64_t v90 = v117 + 1;
    *(void *)(v31 + 16) = v89 + 1;
    uint64_t v35 = v90;
    unint64_t v91 = v31 + v98 + v89 * v97;
    uint64_t v32 = v97;
    (*v96)(v91, v118, v113);
    uint64_t v153 = v31;
    uint64_t v21 = v100;
    if (v35 == v99) {
      return v31;
    }
  }
  uint64_t v152 = MEMORY[0x1E4FBC860];
  int64_t v128 = v40;
  sub_1DEDF8B64(0, v40, 0);
  uint64_t v41 = 0;
  uint64_t v134 = v152;
  unint64_t v42 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v115 = v39;
  unint64_t v127 = v42;
  unint64_t v129 = v39 + v42;
  uint64_t v43 = *(void *)(v21 + 72);
  uint64_t v126 = v43;
  while (1)
  {
    uint64_t v132 = v41;
    unint64_t v44 = v129 + v43 * v41;
    uint64_t v45 = sub_1DFDFAFF0();
    uint64_t v46 = *(void *)(v45 + 16);
    if (v46) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_20:
    (*v124)(v133, v44, v37);
LABEL_21:
    uint64_t v61 = v132;
    uint64_t v62 = v134;
    uint64_t v152 = v134;
    unint64_t v64 = *(void *)(v134 + 16);
    unint64_t v63 = *(void *)(v134 + 24);
    if (v64 >= v63 >> 1)
    {
      sub_1DEDF8B64(v63 > 1, v64 + 1, 1);
      uint64_t v61 = v132;
      uint64_t v62 = v152;
    }
    uint64_t v41 = v61 + 1;
    *(void *)(v62 + 16) = v64 + 1;
    uint64_t v134 = v62;
    unint64_t v65 = v62 + v127 + v64 * v126;
    uint64_t v43 = v126;
    (*v125)(v65, v133, v37);
    if (v41 == v128) {
      goto LABEL_34;
    }
  }
  unint64_t v130 = v44;
  unint64_t v47 = v45 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  uint64_t v48 = *(void *)(v18 + 72);
  long long v49 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v18 + 16);
  uint64_t v131 = v45;
  swift_bridgeObjectRetain();
  while (1)
  {
    v49(v20, v47, v36);
    if (sub_1DFDFAAE0() == 0xD00000000000001ALL && v50 == v142)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v51 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      if ((v51 & 1) == 0) {
        goto LABEL_8;
      }
    }
    sub_1DFDFAB00();
    uint64_t v52 = v145;
    int v53 = (*v144)(v15, v145);
    if (v53 != v143)
    {
      (*v141)(v15, v52);
      goto LABEL_8;
    }
    (*v140)(v15, v52);
    uint64_t v54 = sub_1DFDFB0C0();
    uint64_t v55 = *(void *)(v54 - 8);
    int v56 = (*(uint64_t (**)(unsigned char *, uint64_t))(v55 + 88))(v15, v54);
    if (v56 != v139)
    {
      (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v15, v54);
      goto LABEL_8;
    }
    (*(void (**)(unsigned char *, uint64_t))(v55 + 96))(v15, v54);
    uint64_t v57 = swift_projectBox();
    long long v58 = v137;
    uint64_t v59 = v138;
    (*v136)(v137, v57, v138);
    swift_release();
    sub_1DFDFB5E0();
    char v60 = v150;
    (*v135)(v58, v59);
    if (v60) {
      break;
    }
LABEL_8:
    uint64_t v36 = v149;
    (*v147)(v20, v149);
    v47 += v48;
    if (!--v46)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v18 = v122;
      uint64_t v37 = v123;
      unint64_t v44 = v130;
      goto LABEL_20;
    }
  }
  uint64_t v36 = v149;
  (*v147)(v20, v149);
  uint64_t result = swift_bridgeObjectRelease_n();
  unint64_t v67 = v121[1];
  unint64_t v68 = *(void *)(*v121 + 16);
  if (v67 == v68)
  {
    uint64_t v18 = v122;
    if (qword_1EBAC0170 != -1) {
      swift_once();
    }
    sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = v120;
    unint64_t v70 = v130;
    uint64_t v71 = sub_1DFDFB010();
    uint64_t v73 = v72;
    *(void *)(v69 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v69 + 64) = sub_1DEA08668();
    *(void *)(v69 + 32) = v71;
    *(void *)(v69 + 40) = v73;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v37 = v123;
    (*v124)(v133, v70, v123);
    goto LABEL_21;
  }
  if (v67 >= v68)
  {
    __break(1u);
  }
  else
  {
    char v74 = v105;
    sub_1DF66AF44(*v121+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(void *)(v107 + 72) * v67, (uint64_t)v105, type metadata accessor for TodayLocalNewsArticle.Resolved);
    v121[1] = v67 + 1;
    uint64_t v75 = (uint64_t)v95;
    sub_1DF66AFAC((uint64_t)v74, (uint64_t)v95, type metadata accessor for TodayLocalNewsArticle.Resolved);
    uint64_t v131 = sub_1DFDFB010();
    unint64_t v130 = v76;
    sub_1DEA73DB4(0, (unint64_t *)&unk_1EBAEAF70, MEMORY[0x1E4F81058], MEMORY[0x1E4FBBE00]);
    sub_1DFDFBB70();
    *(_OWORD *)(swift_allocObject() + 16) = v120;
    sub_1DFDFA7E0();
    uint64_t v77 = v106;
    sub_1DF66AF44(v75, (uint64_t)v106, type metadata accessor for TodayLocalNewsArticle.Resolved);
    uint64_t v78 = sub_1DF669C50(v77);
    uint64_t v79 = v109;
    *unint64_t v109 = v78;
    (*v94)(v79, v93, v110);
    uint64_t v80 = sub_1DFDFCF30();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v111, 1, 1, v80);
    sub_1DFDFBB50();
    sub_1DFDFB000();
    if (qword_1EBAC0170 != -1) {
      swift_once();
    }
    sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = v120;
    uint64_t v150 = 0;
    unint64_t v151 = 0xE000000000000000;
    sub_1DFDFFB10();
    uint64_t v82 = v75;
    uint64_t v83 = v150;
    unint64_t v84 = v151;
    *(void *)(v81 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v81 + 64) = sub_1DEA08668();
    *(void *)(v81 + 32) = v83;
    *(void *)(v81 + 40) = v84;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DE9E360C(v82, type metadata accessor for TodayLocalNewsArticle.Resolved);
    uint64_t v37 = v123;
    if (!__OFADD__(*v112, 1))
    {
      ++*v112;
      uint64_t v18 = v122;
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

double sub_1DF664538@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1DEA51414(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDEE390();
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (char *)&v30 - v11;
  uint64_t v12 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA4C310();
  sub_1DFDF73B0();
  uint64_t v16 = *(void *)&v15[*(int *)(v13 + 68)];
  swift_bridgeObjectRetain();
  sub_1DE9E360C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  if (v16)
  {
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v31 = v2;
      uint64_t v32 = a1;
      uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      uint64_t v19 = (void (**)(char *, char *, uint64_t))(v35 + 32);
      swift_bridgeObjectRetain();
      uint64_t v30 = v16;
      uint64_t v20 = v16 + 40;
      unint64_t v21 = MEMORY[0x1E4FBC860];
      uint64_t v33 = v10;
      do
      {
        swift_bridgeObjectRetain();
        sub_1DFDEE360();
        if ((*v18)(v6, 1, v7) == 1)
        {
          sub_1DE9E360C((uint64_t)v6, (uint64_t (*)(void))sub_1DEA51414);
        }
        else
        {
          uint64_t v22 = *v19;
          uint64_t v23 = v34;
          (*v19)(v34, v6, v7);
          v22(v10, v23, v7);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v21 = sub_1DEA51674(0, *(void *)(v21 + 16) + 1, 1, v21);
          }
          unint64_t v25 = *(void *)(v21 + 16);
          unint64_t v24 = *(void *)(v21 + 24);
          if (v25 >= v24 >> 1) {
            unint64_t v21 = sub_1DEA51674(v24 > 1, v25 + 1, 1, v21);
          }
          *(void *)(v21 + 16) = v25 + 1;
          unint64_t v26 = v21
              + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))
              + *(void *)(v35 + 72) * v25;
          uint64_t v10 = v33;
          v22((char *)v26, v33, v7);
        }
        v20 += 16;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease_n();
      uint64_t v27 = *__swift_project_boxed_opaque_existential_1((void *)(v31 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_todayFeedEngagementEventHandler), *(void *)(v31+ OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_todayFeedEngagementEventHandler+ 24));
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v27;
      *(void *)(v28 + 24) = v21;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1DFDEE310();
      swift_bridgeObjectRelease();
      swift_release();
      a1 = v32;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1DF664900(uint64_t a1)
{
  uint64_t v51 = a1;
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1DFDFAA20();
  uint64_t v57 = *(void *)(v1 - 8);
  uint64_t v58 = v1;
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  int v56 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v59 = (char *)&v48 - v4;
  uint64_t v64 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  uint64_t v5 = MEMORY[0x1F4188790](v64);
  uint64_t v54 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v48 - v7;
  uint64_t v9 = sub_1DFDF9D80();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v67) = 0;
  sub_1DEA35DD4(0);
  uint64_t v55 = sub_1DFDF8030();
  sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB670, (uint64_t (*)(uint64_t))sub_1DEE1FDA8, MEMORY[0x1E4FBBE00]);
  sub_1DEE1FDA8();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v62 = *(void *)(v15 + 72);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DFE0FB10;
  uint64_t v53 = v17;
  uint64_t v18 = (uint64_t *)(v17 + v16);
  uint64_t v19 = swift_allocObject();
  sub_1DF66A6DC(0, &qword_1EBABA270, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7FE90]);
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  uint64_t v60 = v20;
  swift_allocObject();
  *uint64_t v18 = sub_1DFDF9140();
  unint64_t v21 = *(void (**)(void))(v15 + 104);
  uint64_t v22 = v18;
  unsigned int v61 = *MEMORY[0x1E4F7F8E8];
  uint64_t v63 = v14;
  unint64_t v65 = (void (*)(uint64_t *, void, uint64_t))v21;
  uint64_t v66 = v15 + 104;
  v21(v18);
  uint64_t v23 = v52;
  type metadata accessor for CuratedTodayFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  if (v67 == 1)
  {
    sub_1DEA4C310();
    sub_1DFDF73B0();
    uint64_t v27 = v57;
    uint64_t v26 = v58;
    uint64_t v28 = v59;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v59, &v8[*(int *)(v64 + 20)], v58);
    sub_1DE9E360C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
    uint64_t v24 = sub_1DFDFA880();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
  }
  uint64_t v30 = (uint64_t *)((char *)v22 + v62);
  uint64_t v31 = v62;
  uint64_t v50 = v22;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v24;
  *(void *)(v32 + 24) = v25;
  swift_allocObject();
  swift_bridgeObjectRetain();
  *uint64_t v30 = sub_1DFDF9140();
  v65(v30, v61, v63);
  swift_bridgeObjectRelease();
  uint64_t v51 = 2 * v31;
  uint64_t v33 = (uint64_t *)((char *)v22 + 2 * v31);
  uint64_t v52 = v23 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_config;
  sub_1DEA4C310();
  sub_1DFDF73B0();
  uint64_t v34 = &v8[*(int *)(v64 + 20)];
  uint64_t v35 = v57;
  uint64_t v36 = v58;
  long long v49 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t v37 = v59;
  v49(v59, v34, v58);
  sub_1DE9E360C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  uint64_t v38 = sub_1DFDFA800();
  uint64_t v40 = v39;
  uint64_t v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  v41(v37, v36);
  *uint64_t v33 = v38;
  v33[1] = v40;
  uint64_t v42 = v63;
  v65(v33, *MEMORY[0x1E4F7F8B0], v63);
  uint64_t v43 = (uint64_t *)((char *)v50 + v51 + v62);
  uint64_t v44 = (uint64_t)v54;
  sub_1DFDF73B0();
  uint64_t v45 = v56;
  v49(v56, (char *)(v44 + *(int *)(v64 + 20)), v36);
  sub_1DE9E360C(v44, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  uint64_t v46 = sub_1DFDFA830();
  v41(v45, v36);
  *(void *)(swift_allocObject() + 16) = v46;
  swift_allocObject();
  swift_bridgeObjectRetain();
  *uint64_t v43 = sub_1DFDF9140();
  v65(v43, v61, v42);
  swift_bridgeObjectRelease();
  uint64_t v67 = v55;
  sub_1DF3DDFF0(v53);
  return v67;
}

uint64_t sub_1DF66506C(uint64_t a1, uint64_t a2)
{
  v3[35] = a2;
  v3[36] = v2;
  v3[34] = a1;
  uint64_t v4 = sub_1DFDF8F10();
  v3[37] = v4;
  v3[38] = *(void *)(v4 - 8);
  v3[39] = swift_task_alloc();
  v3[40] = type metadata accessor for CuratedTodayFeedGroup();
  v3[41] = swift_task_alloc();
  uint64_t v5 = sub_1DFDFA9F0();
  v3[42] = v5;
  v3[43] = *(void *)(v5 - 8);
  v3[44] = swift_task_alloc();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA73DB4(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  v3[45] = swift_task_alloc();
  sub_1DFDF8C20();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  uint64_t v7 = sub_1DFDF7010();
  v3[48] = v7;
  v3[49] = *(void *)(v7 - 8);
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  sub_1DEA73DB4(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], v6);
  v3[52] = swift_task_alloc();
  sub_1DEA73DB4(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v6);
  v3[53] = swift_task_alloc();
  sub_1DEA73DB4(0, &qword_1EBABA130, (uint64_t (*)(uint64_t))sub_1DEA35DD4, v6);
  v3[54] = swift_task_alloc();
  uint64_t v8 = sub_1DFDFB960();
  v3[55] = v8;
  v3[56] = *(void *)(v8 - 8);
  v3[57] = swift_task_alloc();
  sub_1DEA92F28(0);
  v3[58] = swift_task_alloc();
  sub_1DEA73DB4(0, (unint64_t *)&unk_1EBAE9A10, MEMORY[0x1E4F801A8], v6);
  v3[59] = swift_task_alloc();
  uint64_t v9 = sub_1DFDF8C30();
  v3[60] = v9;
  v3[61] = *(void *)(v9 - 8);
  v3[62] = swift_task_alloc();
  uint64_t v10 = sub_1DFDF9170();
  v3[63] = v10;
  v3[64] = *(void *)(v10 - 8);
  v3[65] = swift_task_alloc();
  uint64_t v11 = sub_1DFDF9D80();
  v3[66] = v11;
  v3[67] = *(void *)(v11 - 8);
  v3[68] = swift_task_alloc();
  sub_1DEA73DB4(0, (unint64_t *)&unk_1EBACA4B0, MEMORY[0x1E4F80F40], v6);
  v3[69] = swift_task_alloc();
  uint64_t v12 = sub_1DFDFB640();
  v3[70] = v12;
  v3[71] = *(void *)(v12 - 8);
  v3[72] = swift_task_alloc();
  sub_1DFDF72B0();
  v3[73] = swift_task_alloc();
  uint64_t v13 = sub_1DFDFC340();
  v3[74] = v13;
  v3[75] = *(void *)(v13 - 8);
  v3[76] = swift_task_alloc();
  sub_1DEBFF4C8(0);
  v3[77] = swift_task_alloc();
  uint64_t v14 = sub_1DFDFAFE0();
  v3[78] = v14;
  v3[79] = *(void *)(v14 - 8);
  v3[80] = swift_task_alloc();
  uint64_t v15 = sub_1DFDFAA20();
  v3[81] = v15;
  v3[82] = *(void *)(v15 - 8);
  v3[83] = swift_task_alloc();
  v3[84] = swift_task_alloc();
  v3[85] = swift_task_alloc();
  v3[86] = type metadata accessor for CuratedTodayFeedGroupConfigData();
  v3[87] = swift_task_alloc();
  v3[88] = swift_task_alloc();
  v3[89] = swift_task_alloc();
  v3[90] = swift_task_alloc();
  v3[91] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF665824, 0, 0);
}

uint64_t sub_1DF665824()
{
  if ((objc_msgSend(*(id *)(*(void *)(v0 + 288)+ OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_featureAvailability), sel_puzzlesEnabled) & 1) == 0)
  {
    sub_1DFDF87F0();
    uint64_t v1 = *(void **)(*(void *)(v0 + 208) + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig);
    swift_unknownObjectRetain();
    swift_release();
    id v2 = objc_msgSend(v1, sel_puzzlesConfig);
    swift_unknownObjectRelease();
    id v3 = objc_msgSend(v2, sel_puzzleHubTagID);

    if (v3)
    {
      uint64_t v4 = *(void *)(v0 + 728);
      uint64_t v5 = *(void *)(v0 + 688);
      uint64_t v6 = *(void *)(v0 + 680);
      uint64_t v7 = *(void *)(v0 + 656);
      uint64_t v8 = *(void *)(v0 + 648);
      uint64_t v9 = sub_1DFDFDD20();
      uint64_t v11 = v10;

      sub_1DEA4C310();
      sub_1DFDF73B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v4 + *(int *)(v5 + 20), v8);
      sub_1DE9E360C(v4, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
      uint64_t v12 = sub_1DFDFA880();
      uint64_t v14 = v13;
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
      if (v14)
      {
        if (v12 == v9 && v14 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_28:
          uint64_t v75 = sub_1DFDF8510();
          sub_1DEA53FD8((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
          swift_allocError();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v75 - 8) + 104))(v76, *MEMORY[0x1E4F7F9A8], v75);
          swift_willThrow();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v77 = *(uint64_t (**)(void))(v0 + 8);
          return v77();
        }
        char v16 = sub_1DFDFFF50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_28;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  sub_1DFDF88A0();
  uint64_t v17 = *(void *)(v0 + 216);
  *(void *)(v0 + 736) = v17;
  sub_1DFDF87F0();
  uint64_t v18 = *(void *)(*(void *)(v0 + 224) + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_contentConfigData);
  swift_retain();
  swift_release();
  swift_retain();
  uint64_t v19 = swift_bridgeObjectRetain();
  unint64_t v20 = sub_1DF66ACFC(v19, v18);
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v98 = v17;
  if (v17)
  {
    long long v23 = *(_OWORD *)(v17 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_headlines);
    long long v22 = *(_OWORD *)(v17 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_headlines + 16);
    *(void *)(v0 + 168) = *(void *)(v17 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_headlines + 32);
    *(_OWORD *)(v0 + 136) = v23;
    *(_OWORD *)(v0 + 152) = v22;
    uint64_t v24 = *(void *)(v0 + 136);
    unint64_t v25 = *(void *)(v0 + 144);
    uint64_t v26 = *(void *)(v0 + 160);
    *(void *)(v0 + 176) = *(void *)(v0 + 152);
    *(void *)(v0 + 184) = v24;
    *(void *)(v0 + 192) = v26;
    uint64_t v100 = v24;
    sub_1DEBB1F30(v0 + 184);
    swift_bridgeObjectRetain();
    sub_1DEBB1F30(v0 + 184);
    swift_bridgeObjectRetain();
    sub_1DEBB1F30(v0 + 176);
    sub_1DEBB1F30(v0 + 192);
    swift_retain();
    sub_1DEA74168(v25);
    *(void *)(v0 + 264) = v100;
    *(void *)(swift_task_alloc() + 16) = v0 + 136;
    sub_1DEE49A14(0, (unint64_t *)&qword_1EBABA9A0, (unint64_t *)&qword_1EBABAD10);
    sub_1DF66AE84((unint64_t *)&qword_1EBABA9B0, (unint64_t *)&qword_1EBABA9A0, (unint64_t *)&qword_1EBABAD10);
    sub_1DFDFDFF0();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    sub_1DEBA2BAC(v0 + 184);
    swift_bridgeObjectRelease();
    sub_1DEBA2BAC(v0 + 176);
    sub_1DEBA2BAC(v0 + 192);
    swift_release();
    swift_bridgeObjectRelease();
    long long v28 = *(_OWORD *)(v17 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_tags);
    long long v27 = *(_OWORD *)(v17 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_tags + 16);
    *(void *)(v0 + 128) = *(void *)(v17 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_tags + 32);
    *(_OWORD *)(v0 + 96) = v28;
    *(_OWORD *)(v0 + 112) = v27;
    uint64_t v29 = *(void *)(v0 + 96);
    unint64_t v30 = *(void *)(v0 + 104);
    *(void *)(v0 + 200) = v29;
    *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 112);
    uint64_t v101 = v29;
    sub_1DEBB1F30(v0 + 200);
    swift_bridgeObjectRetain();
    sub_1DEBB1F30(v0 + 200);
    swift_bridgeObjectRetain();
    sub_1DEBB1F30(v0 + 232);
    sub_1DEBB1F30(v0 + 240);
    swift_retain();
    sub_1DEABE108(v30);
    *(void *)(v0 + 248) = v101;
    *(void *)(swift_task_alloc() + 16) = v0 + 96;
    sub_1DEE49A14(0, (unint64_t *)&unk_1EBABA950, (unint64_t *)&qword_1EBABAB70);
    sub_1DF66AE84((unint64_t *)&qword_1EBABA960, (unint64_t *)&unk_1EBABA950, (unint64_t *)&qword_1EBABAB70);
    sub_1DFDFDFF0();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    sub_1DEBA2BAC(v0 + 200);
    swift_bridgeObjectRelease();
    sub_1DEBA2BAC(v0 + 232);
    sub_1DEBA2BAC(v0 + 240);
    swift_release();
  }
  else
  {
    sub_1DEA74168(v20);
  }
  uint64_t v31 = *(void *)(v0 + 720);
  uint64_t v94 = *(void *)(v0 + 688);
  uint64_t v32 = *(void *)(v0 + 616);
  uint64_t v33 = sub_1DFDF66A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  sub_1DFC83088(v21);
  sub_1DFC83088(v21);
  sub_1DFC831BC(v21);
  sub_1DFC831D4(v21);
  sub_1DFC83308(v21);
  sub_1DFC83320(v21);
  sub_1DFDFAFD0();
  *(void *)(v0 + 744) = OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_config;
  sub_1DEA4C310();
  *(void *)(v0 + 752) = v34;
  sub_1DFDF73B0();
  int v35 = *(unsigned __int8 *)(v31 + *(int *)(v94 + 48));
  sub_1DE9E360C(v31, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  uint64_t v36 = *(void **)(v0 + 608);
  if (v35 == 1)
  {
    uint64_t v37 = *(void *)(v0 + 600);
    uint64_t v38 = *(void *)(v0 + 592);
    void *v36 = 0x404E000000000000;
    (*(void (**)(void *, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E4F81370], v38);
  }
  else
  {
    sub_1DFDF87C0();
    sub_1DFDFC350();
  }
  uint64_t v39 = *(void *)(v0 + 552);
  uint64_t v40 = *(void *)(v0 + 512);
  uint64_t v86 = *(void *)(v0 + 504);
  uint64_t v88 = *(void *)(v0 + 520);
  uint64_t v41 = *(void *)(v0 + 488);
  uint64_t v95 = *(void *)(v0 + 496);
  uint64_t v90 = *(void *)(v0 + 480);
  uint64_t v92 = *(void *)(v0 + 464);
  uint64_t v42 = *(void *)(v0 + 280);
  uint64_t v43 = *(void *)(v0 + 288);
  sub_1DFDF8870();
  uint64_t v44 = OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_knobs;
  *(void *)(v0 + 760) = OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_knobs;
  uint64_t v45 = v43 + v44;
  uint64_t v46 = type metadata accessor for CuratedTodayFeedGroupKnobs();
  *(void *)(v0 + 768) = v46;
  *(void *)(v0 + 80) = v46;
  *(void *)(v0 + 88) = sub_1DEA53FD8((unint64_t *)&unk_1EBADC8D8, (void (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 56));
  sub_1DF66AF44(v45, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupKnobs);
  sub_1DFDFB970();
  uint64_t v48 = sub_1DFDFB980();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v39, 0, 1, v48);
  sub_1DF667B9C(v42);
  (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v88, *MEMORY[0x1E4F7FFA0], v86);
  (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v95, *MEMORY[0x1E4F7FC20], v90);
  uint64_t v96 = v45;
  sub_1DF66AF44(v45 + *(int *)(v46 + 40), v92, (uint64_t (*)(void))sub_1DEA92F28);
  uint64_t v49 = sub_1DFDF8EA0();
  uint64_t v50 = *(void *)(v49 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v92, 1, v49) == 1)
  {
    uint64_t v51 = *(void *)(v0 + 472);
    sub_1DE9E360C(*(void *)(v0 + 464), (uint64_t (*)(void))sub_1DEA92F28);
    uint64_t v52 = sub_1DFDF9620();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
  }
  else
  {
    uint64_t v53 = *(void *)(v0 + 544);
    uint64_t v54 = *(void *)(v0 + 536);
    uint64_t v55 = *(void *)(v0 + 528);
    uint64_t v57 = *(void *)(v0 + 464);
    uint64_t v56 = *(void *)(v0 + 472);
    sub_1DFDF8870();
    sub_1DFDF8E70();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v57, v49);
    uint64_t v58 = sub_1DFDF9620();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v56, 0, 1, v58);
  }
  uint64_t v59 = *(void *)(v0 + 720);
  uint64_t v79 = *(void *)(v0 + 688);
  uint64_t v80 = *(void *)(v0 + 672);
  uint64_t v60 = *(void *)(v0 + 664);
  uint64_t v61 = *(void *)(v0 + 656);
  uint64_t v62 = *(void *)(v0 + 648);
  uint64_t v63 = *(void *)(v0 + 600);
  uint64_t v82 = *(void *)(v0 + 592);
  uint64_t v83 = *(void *)(v0 + 608);
  uint64_t v84 = *(void *)(v0 + 576);
  uint64_t v87 = *(void *)(v0 + 712);
  uint64_t v89 = *(void *)(v0 + 568);
  uint64_t v91 = *(void *)(v0 + 560);
  uint64_t v99 = *(void *)(v0 + 432);
  uint64_t v81 = *(void *)(v0 + 424);
  uint64_t v85 = *(void *)(v0 + 416);
  uint64_t v65 = *(void *)(v0 + 280);
  uint64_t v64 = *(void *)(v0 + 288);
  sub_1DFDFB630();
  *(CFTimeInterval *)(v0 + 776) = CACurrentMediaTime();
  sub_1DE94F204(v64 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_formatService, v0 + 16);
  uint64_t v93 = *(void *)(v0 + 48);
  uint64_t v97 = *(void *)(v0 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v97);
  sub_1DFDF73B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v59 + *(int *)(v79 + 20), v62);
  sub_1DE9E360C(v59, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  sub_1DF667EA4(v65, v60, v80);
  uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  *(void *)(v0 + 784) = v66;
  *(void *)(v0 + 792) = (v61 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v66(v60, v62);
  sub_1DEA35DD4(0);
  uint64_t v68 = v67;
  *(void *)(v0 + 800) = v67;
  uint64_t v69 = *(void *)(v67 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v99, v96, v67);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v99, 0, 1, v68);
  swift_retain();
  sub_1DFDF73B0();
  swift_bridgeObjectRetain();
  sub_1DE9E360C(v59, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v81, v83, v82);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v81, 0, 1, v82);
  *(unsigned char *)(v0 + 833) = 0;
  sub_1DF66A6DC(0, (unint64_t *)&unk_1EBAE9F40, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F81400]);
  swift_allocObject();
  sub_1DFDFC5C0();
  sub_1DFDF73B0();
  sub_1DEC86794();
  sub_1DE9E360C(v87, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v85, v84, v91);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v85, 0, 1, v91);
  if (v98) {
    swift_bridgeObjectRetain();
  }
  uint64_t v70 = qword_1EBAC0170;
  (id)*MEMORY[0x1E4F7E020];
  if (v70 != -1) {
    swift_once();
  }
  (id)qword_1EBB628A8;
  sub_1DFDFB930();
  uint64_t v71 = (void *)swift_task_alloc();
  *(void *)(v0 + 808) = v71;
  *uint64_t v71 = v0;
  v71[1] = sub_1DF66696C;
  uint64_t v72 = *(void *)(v0 + 672);
  uint64_t v73 = *(void *)(v0 + 640);
  uint64_t v74 = *(void *)(v0 + 456);
  return MEMORY[0x1F4136D58](v72, v73, v74, v97, v93);
}

uint64_t sub_1DF66696C(uint64_t a1)
{
  id v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[102] = a1;
  v4[103] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v3[98];
  uint64_t v6 = v3[84];
  uint64_t v7 = v3[81];
  (*(void (**)(void, void))(v3[56] + 8))(v3[57], v3[55]);
  v5(v6, v7);
  if (v1) {
    uint64_t v8 = sub_1DF6678F8;
  }
  else {
    uint64_t v8 = sub_1DF666B4C;
  }
  return MEMORY[0x1F4188298](v8, 0, 0);
}

uint64_t sub_1DF666B4C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 720);
  uint64_t v90 = *(void *)(v0 + 344);
  uint64_t v79 = *(void *)(v0 + 352);
  uint64_t v83 = *(void *)(v0 + 336);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DFE0B750;
  sub_1DFDF73B0();
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  swift_bridgeObjectRetain();
  sub_1DE9E360C((uint64_t)v1, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1DEA08668();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1DFDFE560();
  uint64_t v5 = MEMORY[0x1E4FBB460];
  *(void *)(v2 + 96) = MEMORY[0x1E4FBB3D0];
  *(void *)(v2 + 104) = v5;
  *(void *)(v2 + 72) = v6;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1DFDF7350();
  sub_1DFDF7360();
  sub_1DFDF7360();
  sub_1DFDF8080();
  sub_1DFDF8050();
  sub_1DFDF80A0();
  sub_1DF66A6DC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  sub_1DFDF83A0();
  sub_1DFDF6F70();
  sub_1DFDFB600();
  unint64_t v7 = sub_1DFDFA9B0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
  v8(v79, v83);
  char v9 = sub_1DF668338(v7);
  swift_bridgeObjectRelease();
  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + 632);
    uint64_t v84 = *(void *)(v0 + 624);
    uint64_t v86 = *(void *)(v0 + 640);
    uint64_t v11 = *(void *)(v0 + 600);
    uint64_t v77 = *(void *)(v0 + 592);
    uint64_t v80 = *(void *)(v0 + 608);
    uint64_t v75 = *(void *)(v0 + 576);
    uint64_t v12 = *(void *)(v0 + 568);
    uint64_t v73 = *(void *)(v0 + 560);
    uint64_t v13 = *(void *)(v0 + 408);
    uint64_t v14 = *(void *)(v0 + 384);
    uint64_t v15 = *(void *)(v0 + 392);
    uint64_t v16 = sub_1DFDF8510();
    sub_1DEA53FD8((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, *MEMORY[0x1E4F7F998], v16);
    swift_willThrow();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v75, v73);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v80, v77);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v86, v84);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  uint64_t v18 = *(void *)(v0 + 544);
  uint64_t v19 = *(void *)(v0 + 536);
  uint64_t v20 = *(void *)(v0 + 528);
  uint64_t v21 = *(void *)(v0 + 352);
  uint64_t v87 = *(void *)(v0 + 336);
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  long long v22 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v22(v18, v20);
  uint64_t v23 = *(void *)(v0 + 256);
  sub_1DFDF6FB0();
  uint64_t v24 = sub_1DFDFA9D0();
  v8(v21, v87);
  uint64_t v25 = *(void *)(v24 + 16);
  swift_bridgeObjectRelease();
  if (v25 < v23)
  {
    uint64_t v85 = *(void *)(v0 + 624);
    uint64_t v88 = *(void *)(v0 + 640);
    uint64_t v78 = *(void *)(v0 + 608);
    uint64_t v81 = *(void *)(v0 + 632);
    uint64_t v74 = *(void *)(v0 + 600);
    uint64_t v76 = *(void *)(v0 + 592);
    uint64_t v31 = *(void *)(v0 + 568);
    uint64_t v71 = *(void *)(v0 + 560);
    uint64_t v72 = *(void *)(v0 + 576);
    uint64_t v32 = *(void *)(v0 + 392);
    uint64_t v69 = *(void *)(v0 + 408);
    uint64_t v70 = *(void *)(v0 + 384);
    uint64_t v33 = *(void *)(v0 + 352);
    uint64_t v68 = *(void *)(v0 + 336);
    uint64_t v34 = sub_1DFDF8510();
    sub_1DEA53FD8((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    uint64_t v36 = v35;
    sub_1DFDF6FB0();
    uint64_t v37 = sub_1DFDFA9D0();
    v8(v33, v68);
    uint64_t v38 = *(void *)(v37 + 16);
    swift_bridgeObjectRelease();
    void *v36 = v23;
    v36[1] = v38;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x1E4F7F9C8], v34);
    swift_willThrow();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v69, v70);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v72, v71);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v78, v76);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v88, v85);
    goto LABEL_5;
  }
  uint64_t v40 = *(uint64_t **)(v0 + 704);
  uint64_t v91 = *(void *)(v0 + 696);
  uint64_t v50 = *(void *)(v0 + 688);
  uint64_t v65 = *(void *)(v0 + 632);
  uint64_t v66 = *(void *)(v0 + 624);
  uint64_t v67 = *(void *)(v0 + 640);
  uint64_t v61 = *(void *)(v0 + 600);
  uint64_t v62 = *(void *)(v0 + 592);
  uint64_t v63 = *(void *)(v0 + 608);
  uint64_t v56 = *(void *)(v0 + 568);
  uint64_t v58 = *(void *)(v0 + 560);
  uint64_t v59 = *(void *)(v0 + 576);
  uint64_t v89 = *(void *)(v0 + 544);
  uint64_t v60 = *(void *)(v0 + 296);
  uint64_t v49 = *(void *)(v0 + 528);
  uint64_t v41 = *(void *)(v0 + 408);
  uint64_t v42 = *(void *)(v0 + 392);
  uint64_t v82 = *(void *)(v0 + 400);
  uint64_t v48 = v22;
  uint64_t v43 = *(void *)(v0 + 384);
  uint64_t v55 = *(void *)(v0 + 328);
  uint64_t v57 = *(int **)(v0 + 320);
  uint64_t v44 = *(void *)(v0 + 304);
  uint64_t v52 = *(void *)(v0 + 312);
  uint64_t v64 = *(void *)(v0 + 272);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE, void, char, void))(v42 + 16))(v82, v41, v43, v26, v27, v28, v29, v30, 0, 0, 1, 0);
  sub_1DFDF73B0();
  uint64_t v53 = v40[1];
  uint64_t v54 = *v40;
  swift_bridgeObjectRetain();
  sub_1DE9E360C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  sub_1DFDF73B0();
  uint64_t v51 = *(void *)(v91 + *(int *)(v50 + 60));
  swift_bridgeObjectRetain();
  sub_1DE9E360C(v91, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  swift_release();
  swift_release();
  v48(v89, v49);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v59, v58);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v63, v62);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v67, v66);
  uint64_t v45 = (unsigned int *)MEMORY[0x1E4F7FCF0];
  if (!*(unsigned char *)(v0 + 832)) {
    uint64_t v45 = (unsigned int *)MEMORY[0x1E4F7FCE8];
  }
  (*(void (**)(uint64_t, void, uint64_t))(v44 + 104))(v52, *v45, v60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v55, v82, v43);
  uint64_t v46 = (void *)(v55 + v57[5]);
  *uint64_t v46 = v54;
  v46[1] = v53;
  *(void *)(v55 + v57[6]) = v51;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v55 + v57[7], v52, v60);
  sub_1DF66AFAC(v55, v64, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
  type metadata accessor for TodayFeedGroup();
  swift_storeEnumTagMultiPayload();
  sub_1DF66A6DC(0, (unint64_t *)&qword_1EBABA1B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F7FA98]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
  return v39();
}

uint64_t sub_1DF6678F8()
{
  uint64_t v1 = v0[80];
  uint64_t v2 = v0[79];
  uint64_t v3 = v0[78];
  uint64_t v4 = v0[76];
  uint64_t v5 = v0[75];
  uint64_t v6 = v0[74];
  uint64_t v7 = v0[72];
  uint64_t v8 = v0[71];
  uint64_t v9 = v0[70];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1DF667B9C(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v1 = sub_1DFDFC600();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v19 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v18 = (uint64_t)&v18 - v6;
  uint64_t v20 = sub_1DFDF9D80();
  uint64_t v7 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA73DB4(0, (unint64_t *)&unk_1EBAEAFA0, MEMORY[0x1E4F81428], MEMORY[0x1E4FBBE00]);
  uint64_t v10 = *(void *)(v2 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DFE0B750;
  uint64_t v13 = *(void (**)(unint64_t, void, uint64_t))(v3 + 104);
  v13(v12 + v11, *MEMORY[0x1E4F81418], v1);
  v13(v12 + v11 + v10, *MEMORY[0x1E4F81408], v1);
  uint64_t v14 = sub_1DF3C0C60(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v23 = v14;
  type metadata accessor for CuratedTodayFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
  if (v22 == 1)
  {
    uint64_t v15 = v19;
    v13((unint64_t)v19, *MEMORY[0x1E4F81410], v1);
    uint64_t v16 = v18;
    sub_1DED70CA4(v18, v15);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v16, v1);
  }
  return v23;
}

uint64_t sub_1DF667EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DEBFF418(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DEBFF4C8(0);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1DFDFAA20();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = a2;
  unint64_t v16 = sub_1DF668BD8(a1, (uint64_t (*)(uint64_t))sub_1DF66AED4);
  if (!v16) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a3, a2, v12);
  }
  v30[0] = v16;
  v30[1] = 0;
  uint64_t v29 = 0;
  uint64_t v17 = sub_1DFDF66A0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  sub_1DEBFF44C(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
  uint64_t v19 = sub_1DFDFAA10();
  sub_1DF663390(v19, v30, &v29);
  swift_bridgeObjectRelease();
  sub_1DFDFA860();
  swift_bridgeObjectRelease();
  sub_1DE9E360C((uint64_t)v8, (uint64_t (*)(void))sub_1DEBFF418);
  sub_1DE9E360C((uint64_t)v11, (uint64_t (*)(void))sub_1DEBFF4C8);
  uint64_t v20 = v29;
  if (v29 < 1)
  {
    if (qword_1EBAC0170 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a3, a2, v12);
  }
  else
  {
    if (qword_1EBAC0170 != -1) {
      swift_once();
    }
    sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1DFE0B250;
    uint64_t v28 = v20;
    uint64_t v22 = sub_1DFDFFEE0();
    uint64_t v24 = v23;
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 64) = sub_1DEA08668();
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v24;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a3, v15, v12);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF668338(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (void *)((char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  unint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_1DF66AB30(v6, v1);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEA4C310();
  sub_1DFDF73B0();
  if (*v5 == 0x73656C7A7A7570 && v5[1] == 0xE700000000000000)
  {
    sub_1DE9E360C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  }
  else
  {
    char v9 = sub_1DFDFFF50();
    sub_1DE9E360C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
    if ((v9 & 1) == 0) {
      goto LABEL_31;
    }
  }
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (!v11) {
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
    {
LABEL_32:
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (!v10)
    {
LABEL_12:
      if (v12 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_13;
      }
LABEL_31:
      uint64_t v11 = 0;
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v12 < v30) {
    goto LABEL_31;
  }
LABEL_13:
  if (qword_1EBAC0170 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EBB628A8;
  sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = (void *)v14;
  *(_OWORD *)(v14 + 16) = xmmword_1DFE0B250;
  uint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_26:
    uint64_t v27 = MEMORY[0x1E4FBB1A0];
    MEMORY[0x1E01ECA60](v18, MEMORY[0x1E4FBB1A0]);
    sub_1DFDFDE90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = v33;
    unint64_t v29 = v34;
    v15[7] = v27;
    v15[8] = sub_1DEA08668();
    v15[4] = v28;
    v15[5] = v29;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    uint64_t v11 = 1;
    goto LABEL_32;
  }
  v31[0] = v14;
  v31[1] = v13;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEA9B358(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = 0;
    uint64_t v18 = v32;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v19 = (void *)MEMORY[0x1E01EE240](v17, v7);
      }
      else
      {
        uint64_t v19 = *(void **)(v7 + 8 * v17 + 32);
        swift_unknownObjectRetain();
      }
      id v20 = objc_msgSend(v19, sel_identifier);
      uint64_t v21 = sub_1DFDFDD20();
      uint64_t v23 = v22;
      swift_unknownObjectRelease();

      uint64_t v32 = v18;
      unint64_t v25 = *(void *)(v18 + 16);
      unint64_t v24 = *(void *)(v18 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1DEA9B358(v24 > 1, v25 + 1, 1);
        uint64_t v18 = v32;
      }
      ++v17;
      *(void *)(v18 + 16) = v25 + 1;
      uint64_t v26 = v18 + 16 * v25;
      *(void *)(v26 + 32) = v21;
      *(void *)(v26 + 40) = v23;
    }
    while (v12 != v17);
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)v31[0];
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF66877C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  sub_1DEAE1B58(0);
  v4[7] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TodayFeedGroup();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = type metadata accessor for CuratedTodayFeedGroupConfigData();
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF66889C, 0, 0);
}

uint64_t sub_1DF66889C()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  sub_1DEA4C310();
  sub_1DFDF73B0();
  char v3 = *(unsigned char *)(v1 + *(int *)(v2 + 52));
  sub_1DE9E360C(v1, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  if (v3)
  {
    uint64_t v4 = v0[3];
    sub_1DF1696CC(v0[5], v4);
    sub_1DF66A6DC(0, (unint64_t *)&qword_1EBAF8660, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F80050]);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
    goto LABEL_7;
  }
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[7];
  sub_1DF66A6DC(0, (unint64_t *)&qword_1EBAF8660, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F80050]);
  uint64_t v10 = v9;
  sub_1DFDF92B0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    sub_1DE9E360C(v0[7], (uint64_t (*)(void))sub_1DEAE1B58);
  }
  else
  {
    sub_1DF66AFAC(v0[7], v0[10], (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    sub_1DFDF88A0();
    uint64_t v16 = v0[10];
    char v17 = sub_1DEB617C8(v0[2]);
    swift_release();
    sub_1DE9E360C(v16, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    if (v17)
    {
      uint64_t v18 = v0[3];
      sub_1DF1696CC(v0[5], v18);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
      uint64_t v11 = v18;
      uint64_t v13 = 0;
      goto LABEL_6;
    }
  }
  uint64_t v11 = v0[3];
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  uint64_t v13 = 1;
LABEL_6:
  v12(v11, v13, 1, v10);
LABEL_7:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

unint64_t sub_1DF668BD8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v45 = a1;
  uint64_t v3 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (void *)((char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v44 - v7);
  sub_1DEA4C310();
  sub_1DFDF73B0();
  if (*v8 == 0x69726F7453706F74 && v8[1] == 0xEA00000000007365)
  {
    sub_1DE9E360C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  }
  else
  {
    char v10 = sub_1DFDFFF50();
    sub_1DE9E360C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
    if ((v10 & 1) == 0)
    {
      if (qword_1EBAC0170 != -1) {
        swift_once();
      }
      sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1DFE0B250;
      sub_1DFDF73B0();
      uint64_t v13 = *v6;
      uint64_t v12 = v6[1];
      swift_bridgeObjectRetain();
      sub_1DE9E360C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
      *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v11 + 64) = sub_1DEA08668();
      *(void *)(v11 + 32) = v13;
      *(void *)(v11 + 40) = v12;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
LABEL_35:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  sub_1DFDF87F0();
  uint64_t v14 = *(void *)(v47 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_contentConfigData);
  swift_retain();
  swift_release();
  uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_localNewsArticles);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRelease();
  if (!v16)
  {
    if (qword_1EBAC0170 == -1) {
      goto LABEL_37;
    }
    goto LABEL_41;
  }
  sub_1DFDF87F0();
  uint64_t v17 = *(void *)(v46 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_contentConfigData);
  swift_retain();
  swift_release();
  swift_retain();
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = sub_1DF66B014(v18, v17);
  swift_bridgeObjectRelease();
  uint64_t v20 = swift_release_n();
  unint64_t v47 = v19;
  if (!*(void *)(v19 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1EBAC0170 == -1) {
      goto LABEL_37;
    }
    goto LABEL_41;
  }
  unint64_t v21 = a2(v20);
  unint64_t v22 = v21;
  if (v21 >> 62)
  {
    uint64_t v23 = sub_1DFDFFBE0();
    if (v23) {
      goto LABEL_14;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
    goto LABEL_29;
  }
  uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v23) {
    goto LABEL_28;
  }
LABEL_14:
  v44[1] = 0;
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_1DEA9B358(0, v23 & ~(v23 >> 63), 0);
  if (v23 < 0)
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v24 = 0;
  uint64_t v25 = v46;
  unint64_t v26 = v22 & 0xC000000000000001;
  unint64_t v27 = v22;
  do
  {
    if (v26) {
      MEMORY[0x1E01EE240](v24, v22);
    }
    else {
      swift_retain();
    }
    uint64_t v28 = sub_1DFDFA7A0();
    uint64_t v30 = v29;
    swift_release();
    uint64_t v46 = v25;
    unint64_t v32 = *(void *)(v25 + 16);
    unint64_t v31 = *(void *)(v25 + 24);
    if (v32 >= v31 >> 1)
    {
      sub_1DEA9B358(v31 > 1, v32 + 1, 1);
      uint64_t v25 = v46;
    }
    ++v24;
    *(void *)(v25 + 16) = v32 + 1;
    uint64_t v33 = v25 + 16 * v32;
    *(void *)(v33 + 32) = v28;
    *(void *)(v33 + 40) = v30;
    unint64_t v22 = v27;
  }
  while (v23 != v24);
  swift_bridgeObjectRelease();
LABEL_29:
  uint64_t v34 = sub_1DE9DB9D8(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1DF66B3E4(&v47, v34);
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v47 + 16);
  if (v36 < v35)
  {
    __break(1u);
    goto LABEL_41;
  }
  sub_1DEBF58A4(v35, v36);
  swift_bridgeObjectRelease();
  if (!*(void *)(v47 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1EBAC0170 == -1)
    {
LABEL_37:
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      return 0;
    }
LABEL_41:
    swift_once();
    goto LABEL_37;
  }
  sub_1DF66BDA8(v45, (uint64_t)&v47);
  unint64_t v37 = v47;
  if (!*(void *)(v47 + 16))
  {
    if (qword_1EBAC0170 != -1) {
      swift_once();
    }
    sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1DFE0B250;
    uint64_t v39 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
    uint64_t v40 = MEMORY[0x1E01ECA60](v37, v39);
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    *(void *)(v38 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v38 + 64) = sub_1DEA08668();
    *(void *)(v38 + 32) = v40;
    *(void *)(v38 + 40) = v42;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    goto LABEL_35;
  }
  return v37;
}

uint64_t sub_1DF6692F8(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v4 = sub_1DFE001F0();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v56 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1DFE001D0();
  uint64_t v55 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1DFE00250();
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v50 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1DFE00260();
  uint64_t v54 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v61 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA83C40();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDE7600();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v65 = a1;
  id v19 = objc_msgSend(*(id *)(a1 + 8), sel_publisherSpecifiedArticleIDsModifiedDate);
  if (v19)
  {
    uint64_t v20 = v19;
    sub_1DFDE7570();

    unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v21(v11, v16, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      v21(v18, v11, v12);
      if ((sub_1DFDE74F0() & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
        return 0;
      }
      sub_1DFDE7530();
      if ((~COERCE__INT64(-v22) & 0x7FF0000000000000) != 0)
      {
        if (v22 < 9.22337204e18)
        {
          if (v22 > -9.22337204e18)
          {
            uint64_t v62 = v2;
            uint64_t v23 = sub_1DFE00280();
            uint64_t v47 = v24;
            uint64_t v48 = v23;
            if (qword_1EBAC0170 == -1)
            {
LABEL_8:
              uint64_t v49 = qword_1EBB628A8;
              uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
              sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
              uint64_t v26 = swift_allocObject();
              long long v44 = xmmword_1DFE0CC10;
              *(_OWORD *)(v26 + 16) = xmmword_1DFE0CC10;
              uint64_t v46 = v26 + 32;
              sub_1DEA73DB4(0, &qword_1EBAEAFF8, MEMORY[0x1E4F281B0], v25);
              uint64_t v45 = sub_1DFE00230();
              uint64_t v27 = swift_allocObject();
              *(_OWORD *)(v27 + 16) = v44;
              sub_1DFE00200();
              sub_1DFE00210();
              sub_1DFE00220();
              sub_1DF66BA7C(v27);
              swift_setDeallocating();
              swift_arrayDestroy();
              swift_deallocClassInstance();
              uint64_t v28 = v50;
              sub_1DFE00240();
              uint64_t v29 = v52;
              sub_1DFE001C0();
              uint64_t v30 = v56;
              sub_1DFE001E0();
              uint64_t v31 = 1;
              sub_1DFDE6920();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v60);
              (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v58);
              (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v53);
              uint64_t v32 = MEMORY[0x1E4FBB1A0];
              *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
              unint64_t v33 = sub_1DEA08668();
              *(void *)(v26 + 64) = v33;
              sub_1DEA53FD8(&qword_1EBAEB020, MEMORY[0x1E4F281D0]);
              uint64_t v34 = v61;
              uint64_t v35 = v57;
              sub_1DFE00270();
              (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v35);
              sub_1DEA53FD8((unint64_t *)&qword_1EBAA6DA0, MEMORY[0x1E4F27928]);
              uint64_t v36 = sub_1DFDFFEE0();
              *(void *)(v26 + 96) = v32;
              *(void *)(v26 + 104) = v33;
              *(void *)(v26 + 72) = v36;
              *(void *)(v26 + 80) = v37;
              uint64_t v63 = 0;
              unint64_t v64 = 0xE000000000000000;
              type metadata accessor for TodayLocalNewsArticle.Resolved(0);
              sub_1DFDFFB10();
              uint64_t v38 = v63;
              unint64_t v39 = v64;
              *(void *)(v26 + 136) = v32;
              *(void *)(v26 + 144) = v33;
              *(void *)(v26 + 112) = v38;
              *(void *)(v26 + 120) = v39;
              sub_1DFDFEA60();
              sub_1DFDF00C0();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
              return v31;
            }
LABEL_18:
            swift_once();
            goto LABEL_8;
          }
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_17;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1DE9E360C((uint64_t)v11, (uint64_t (*)(void))sub_1DEA83C40);
  if (qword_1EBAC0170 != -1) {
    swift_once();
  }
  sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1DFE0B250;
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  sub_1DFDFFB10();
  uint64_t v41 = v63;
  unint64_t v42 = v64;
  *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v40 + 64) = sub_1DEA08668();
  *(void *)(v40 + 32) = v41;
  *(void *)(v40 + 40) = v42;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1DF669C50(id *a1)
{
  uint64_t v2 = sub_1DFDE7220();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v34 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDFB5C0();
  uint64_t v27 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDFBE60();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v11;
  id v12 = objc_msgSend(*a1, sel_identifier);
  uint64_t v13 = sub_1DFDFDD20();
  uint64_t v32 = v14;
  uint64_t v33 = v13;

  uint64_t v15 = *(int *)(type metadata accessor for TodayLocalNewsArticle.Resolved(0) + 24);
  uint64_t v28 = a1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, (char *)a1 + v15, v8);
  uint64_t v30 = sub_1DF3BFF80((uint64_t)&unk_1F3A64668);
  swift_arrayDestroy();
  sub_1DEA73DB4(0, &qword_1EBABB6A0, MEMORY[0x1E4F809C8], MEMORY[0x1E4FBBE00]);
  uint64_t v29 = 2 * *(void *)(*(void *)(sub_1DFDFAB10() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0CC10;
  id v16 = objc_msgSend(a1[1], sel_name);
  sub_1DFDFDD20();

  sub_1DFDFB0A0();
  swift_bridgeObjectRelease();
  uint64_t v17 = *MEMORY[0x1E4F80E58];
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v18(v7, v17, v4);
  sub_1DFDFAAD0();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v20 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  sub_1DFDFB0A0();
  swift_bridgeObjectRelease();
  uint64_t v21 = v27;
  v18(v7, v17, v27);
  sub_1DFDFAAD0();
  uint64_t v22 = (uint64_t)v28;
  uint64_t v23 = v34;
  sub_1DED476C4();
  sub_1DFDFB090();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
  v18(v7, v17, v21);
  sub_1DFDFAAD0();
  uint64_t v24 = sub_1DFDFA780();
  sub_1DE9E360C(v22, type metadata accessor for TodayLocalNewsArticle.Resolved);
  return v24;
}

uint64_t sub_1DF66A18C()
{
  return type metadata accessor for CuratedTodayFeedGroupEmitter();
}

double sub_1DF66A194@<D0>(_OWORD *a1@<X8>)
{
  return sub_1DF664538(a1);
}

uint64_t sub_1DF66A1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DEB7BED8;
  return sub_1DF66506C(a1, a2);
}

uint64_t sub_1DF66A264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1DEB7BAE0;
  return sub_1DF66877C(a1, a2, a3);
}

uint64_t sub_1DF66A318()
{
  uint64_t v0 = type metadata accessor for CuratedTodayFeedGroupConfigData();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[0] = 0x2064657461727543;
  v4[1] = 0xE900000000000028;
  sub_1DEA4C310();
  sub_1DFDF73B0();
  swift_bridgeObjectRetain();
  sub_1DE9E360C((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupConfigData);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return v4[0];
}

uint64_t sub_1DF66A414@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_config;
  sub_1DEA4C310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for TodayFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF66A4A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for CuratedTodayFeedGroupKnobs();
  a1[4] = sub_1DEA53FD8(&qword_1EBAB2100, (void (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupKnobs);
  a1[5] = sub_1DEA53FD8(&qword_1EBAA5210, (void (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DF66AF44(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroupKnobs);
}

uint64_t sub_1DF66A574(uint64_t a1)
{
  return sub_1DF664900(a1);
}

uint64_t sub_1DF66A598()
{
  sub_1DEA53FD8((unint64_t *)&unk_1EBAB3610, (void (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF66A604()
{
  return sub_1DEA53FD8(&qword_1EBAB3608, (void (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupEmitter);
}

uint64_t sub_1DF66A64C()
{
  return sub_1DEA53FD8((unint64_t *)&unk_1EBAB3610, (void (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupEmitter);
}

uint64_t sub_1DF66A694()
{
  return sub_1DEA53FD8(&qword_1EBAF8160, (void (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroupEmitter);
}

void sub_1DF66A6DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1DF66A75C(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for TodayLocalNewsArticle.Resolved(0) - 8;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v33 = (uint64_t)&v30 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = (uint64_t)&v30 - v11;
  unint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v31 = v14;
  while (1)
  {
    char v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v19 = *(void *)(v12 + 16);
    if (v16 + 1 == v19) {
      return v16;
    }
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    uint64_t v30 = v1;
    uint64_t v32 = v15;
    while (v21 < v19)
    {
      uint64_t v22 = v3;
      uint64_t v36 = v20;
      uint64_t v23 = v35;
      sub_1DF66AF44(v12 + v20, v35, type metadata accessor for TodayLocalNewsArticle.Resolved);
      char v24 = a1(v23);
      uint64_t result = sub_1DE9E360C(v23, type metadata accessor for TodayLocalNewsArticle.Resolved);
      if (v24)
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
      }
      else
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v26 = *v3;
          unint64_t v27 = *(void *)(*v3 + 16);
          if (v16 >= v27) {
            goto LABEL_33;
          }
          uint64_t result = sub_1DF66AF44(v26 + v31 + v16 * v32, v33, type metadata accessor for TodayLocalNewsArticle.Resolved);
          if (v21 >= v27) {
            goto LABEL_34;
          }
          sub_1DF66AF44(v26 + v36, v34, type metadata accessor for TodayLocalNewsArticle.Resolved);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v3 = v30;
          *uint64_t v30 = v26;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1DF3E4C54(v26);
            unint64_t v26 = result;
            *uint64_t v3 = result;
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1DF66C4F4(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1DF66C4F4(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_30;
      }
      unint64_t v12 = *v3;
      unint64_t v19 = *(void *)(*v3 + 16);
      ++v21;
      uint64_t v20 = v36 + v25;
      if (v29 == v19) {
        return v16;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF66AAE0@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_getAtKeyPath();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DF66AB30(unint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a1;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_16:
    uint64_t v4 = sub_1DFDFFBE0();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      unint64_t v5 = 0;
      uint64_t v11 = (uint64_t *)((char *)a2 + OBJC_IVAR____TtC7NewsUI228CuratedTodayFeedGroupEmitter_puzzleHistoryService);
      uint64_t v13 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v14 = v3 & 0xC000000000000001;
      unint64_t v12 = v3;
      while (1)
      {
        if (v14)
        {
          uint64_t v6 = (void *)MEMORY[0x1E01EE240](v5, v3);
          unint64_t v7 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
LABEL_13:
            __break(1u);
            return v15;
          }
        }
        else
        {
          if (v5 >= *(void *)(v13 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          uint64_t v6 = *(void **)(v3 + 8 * v5 + 32);
          swift_unknownObjectRetain();
          unint64_t v7 = v5 + 1;
          if (__OFADD__(v5, 1)) {
            goto LABEL_13;
          }
        }
        a2 = __swift_project_boxed_opaque_existential_1(v11, v11[3]);
        id v8 = objc_msgSend(v6, sel_identifier);
        sub_1DFDFDD20();

        char v9 = sub_1DFDFC190();
        swift_bridgeObjectRelease();
        if (v9)
        {
          sub_1DFDFFA50();
          sub_1DFDFFA90();
          sub_1DFDFFAA0();
          a2 = &v15;
          sub_1DFDFFA60();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        unint64_t v3 = v12;
        ++v5;
        if (v7 == v4) {
          return v15;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DF66ACFC(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = *(void *)(type metadata accessor for TodayLocalNewsArticle(0) - 8);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_headlines);
    uint64_t v9 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t *)(v7 + a1 + 8);
    do
    {
      if (*(void *)(v8 + 16))
      {
        uint64_t v11 = *(v10 - 1);
        uint64_t v12 = *v10;
        swift_bridgeObjectRetain();
        sub_1DEA6D930(v11, v12);
        if (v13)
        {
          swift_unknownObjectRetain();
          uint64_t v14 = swift_bridgeObjectRelease();
          MEMORY[0x1E01ECA20](v14);
          if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1DFDFE320();
          }
          sub_1DFDFE370();
          sub_1DFDFE250();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v10 = (uint64_t *)((char *)v10 + v9);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_1DF66AE84(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEE49A14(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF66AED4()
{
  sub_1DFDFA820();
  uint64_t v0 = sub_1DFDFE3C0();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1DF66AF10(uint64_t a1)
{
}

uint64_t sub_1DF66AF44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF66AFAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DF66B014(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)v41 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = (uint64_t)v41 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  v41[2] = v2;
  uint64_t v43 = type metadata accessor for TodayLocalNewsArticle(0);
  char v13 = (uint64_t *)(a1
                  + ((*(unsigned __int8 *)(*(void *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v43 - 8) + 80)));
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_headlines);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC7NewsUI215TodayConfigData_tags);
  uint64_t v16 = *(void *)(*(void *)(v43 - 8) + 72);
  v41[1] = a1;
  swift_bridgeObjectRetain();
  unint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v42 = v15;
  uint64_t v49 = v16;
  do
  {
    if (*(void *)(v14 + 16))
    {
      uint64_t v18 = *v13;
      uint64_t v19 = v13[1];
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1DEA6D930(v18, v19);
      if (v21)
      {
        uint64_t v22 = *(void *)(*(void *)(v14 + 56) + 8 * v20);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if (*(void *)(v15 + 16))
        {
          uint64_t v23 = v13[2];
          uint64_t v24 = v13[3];
          swift_bridgeObjectRetain();
          unint64_t v25 = sub_1DEA6D930(v23, v24);
          if (v26)
          {
            uint64_t v27 = *(void *)(*(void *)(v15 + 56) + 8 * v25);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v28 = (char *)v13 + *(int *)(v43 + 24);
            uint64_t v29 = *(int *)(v47 + 24);
            uint64_t v30 = (uint64_t)v8;
            unint64_t v48 = v17;
            unint64_t v31 = v45;
            uint64_t v32 = &v45[v29];
            uint64_t v33 = sub_1DFDFBE60();
            uint64_t v34 = v32;
            uint64_t v8 = (char *)v30;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v34, v28, v33);
            *unint64_t v31 = v22;
            v31[1] = v27;
            uint64_t v35 = (uint64_t)v31;
            uint64_t v36 = v44;
            sub_1DF66AFAC(v35, v44, type metadata accessor for TodayLocalNewsArticle.Resolved);
            uint64_t v37 = v36;
            unint64_t v17 = v48;
            sub_1DF66AFAC(v37, v30, type metadata accessor for TodayLocalNewsArticle.Resolved);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v17 = sub_1DEE1B7E8(0, *(void *)(v17 + 16) + 1, 1, v17);
            }
            unint64_t v39 = *(void *)(v17 + 16);
            unint64_t v38 = *(void *)(v17 + 24);
            uint64_t v15 = v42;
            if (v39 >= v38 >> 1) {
              unint64_t v17 = sub_1DEE1B7E8(v38 > 1, v39 + 1, 1, v17);
            }
            *(void *)(v17 + 16) = v39 + 1;
            sub_1DF66AFAC((uint64_t)v8, v17+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v39, type metadata accessor for TodayLocalNewsArticle.Resolved);
          }
          else
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
        uint64_t v16 = v49;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    char v13 = (uint64_t *)((char *)v13 + v16);
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1DF66B3E4(unint64_t *a1, uint64_t a2)
{
  uint64_t v61 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  uint64_t v5 = MEMORY[0x1F4188790](v61);
  uint64_t v59 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v60 = (uint64_t)&v52 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v67 = a1;
  unint64_t v11 = *a1;
  uint64_t v55 = *(void *)(v11 + 16);
  uint64_t v53 = v2;
  if (v55)
  {
    uint64_t v54 = (id *)((char *)&v52 - v10);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v57 = v11 + v12;
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v64 = a2;
    *(void *)&long long v62 = a2 + 56;
    swift_bridgeObjectRetain();
    unint64_t v14 = 0;
    unint64_t v58 = v12;
    uint64_t v15 = v13 + v12;
    unint64_t v16 = 1;
    uint64_t v63 = v13;
    while (1)
    {
      unint64_t v56 = v13 * v14;
      id v17 = objc_msgSend(*(id *)(v57 + v13 * v14), sel_identifier);
      uint64_t v18 = sub_1DFDFDD20();
      uint64_t v20 = v19;

      if (*(void *)(v64 + 16))
      {
        uint64_t v21 = v64;
        sub_1DFE00100();
        sub_1DFDFDE20();
        uint64_t v22 = sub_1DFE00140();
        uint64_t v23 = -1 << *(unsigned char *)(v21 + 32);
        unint64_t v24 = v22 & ~v23;
        if ((*(void *)(v62 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
        {
          uint64_t v25 = *(void *)(v64 + 48);
          char v26 = (void *)(v25 + 16 * v24);
          BOOL v27 = *v26 == v18 && v26[1] == v20;
          if (v27 || (sub_1DFDFFF50() & 1) != 0)
          {
LABEL_18:
            swift_bridgeObjectRelease();
            if (qword_1EBAC0170 != -1) {
              goto LABEL_49;
            }
            while (1)
            {
              uint64_t v57 = qword_1EBB628A8;
              sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
              uint64_t v31 = swift_allocObject();
              long long v62 = xmmword_1DFE0B250;
              *(_OWORD *)(v31 + 16) = xmmword_1DFE0B250;
              uint64_t v65 = 0;
              unint64_t v66 = 0xE000000000000000;
              sub_1DFDFFB10();
              uint64_t v32 = v65;
              unint64_t v33 = v66;
              *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
              unint64_t v34 = sub_1DEA08668();
              *(void *)(v31 + 64) = v34;
              *(void *)(v31 + 32) = v32;
              *(void *)(v31 + 40) = v33;
              sub_1DFDFEA60();
              sub_1DFDF00C0();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              if (__OFADD__(v14, 1)) {
                break;
              }
              unint64_t v36 = *(void *)(v11 + 16);
              if (v14 + 1 == v36) {
                return v14;
              }
              uint64_t v37 = v54;
              while (v16 < v36)
              {
                sub_1DF66AF44(v11 + v15, (uint64_t)v37, type metadata accessor for TodayLocalNewsArticle.Resolved);
                id v38 = objc_msgSend(*v37, sel_identifier);
                uint64_t v39 = sub_1DFDFDD20();
                uint64_t v40 = (uint64_t)v37;
                uint64_t v42 = v41;

                unint64_t v11 = sub_1DEAAB55C(v39, v42, v64);
                swift_bridgeObjectRelease();
                if (v11)
                {
                  unint64_t v11 = qword_1EBB628A8;
                  uint64_t v43 = swift_allocObject();
                  *(_OWORD *)(v43 + 16) = v62;
                  uint64_t v65 = 0;
                  unint64_t v66 = 0xE000000000000000;
                  sub_1DFDFFB10();
                  uint64_t v44 = v65;
                  unint64_t v45 = v66;
                  *(void *)(v43 + 56) = MEMORY[0x1E4FBB1A0];
                  *(void *)(v43 + 64) = v34;
                  *(void *)(v43 + 32) = v44;
                  *(void *)(v43 + 40) = v45;
                  sub_1DFDFEA60();
                  sub_1DFDF00C0();
                  swift_bridgeObjectRelease();
                  sub_1DE9E360C(v40, type metadata accessor for TodayLocalNewsArticle.Resolved);
                  uint64_t v37 = (id *)v40;
                  uint64_t v46 = v63;
                }
                else
                {
                  sub_1DE9E360C(v40, type metadata accessor for TodayLocalNewsArticle.Resolved);
                  uint64_t v37 = (id *)v40;
                  uint64_t v46 = v63;
                  if (v16 != v14)
                  {
                    if ((v14 & 0x8000000000000000) != 0) {
                      goto LABEL_44;
                    }
                    unint64_t v11 = *v67;
                    unint64_t v47 = *(void *)(*v67 + 16);
                    if (v14 >= v47) {
                      goto LABEL_45;
                    }
                    unint64_t v48 = v14 * v63;
                    sub_1DF66AF44(v11 + v58 + v14 * v63, v60, type metadata accessor for TodayLocalNewsArticle.Resolved);
                    if (v16 >= v47) {
                      goto LABEL_46;
                    }
                    sub_1DF66AF44(v11 + v15, v59, type metadata accessor for TodayLocalNewsArticle.Resolved);
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    *uint64_t v67 = v11;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      unint64_t v11 = sub_1DF3E4C54(v11);
                      *uint64_t v67 = v11;
                    }
                    uint64_t v37 = v54;
                    if (v14 >= *(void *)(v11 + 16)) {
                      goto LABEL_47;
                    }
                    sub_1DF66C4F4(v59, v11 + v58 + v48);
                    if (v16 >= *(void *)(*v67 + 16)) {
                      goto LABEL_48;
                    }
                    sub_1DF66C4F4(v60, *v67 + v15);
                  }
                  if (__OFADD__(v14++, 1)) {
                    goto LABEL_43;
                  }
                }
                unint64_t v51 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_42;
                }
                unint64_t v11 = *v67;
                unint64_t v36 = *(void *)(*v67 + 16);
                ++v16;
                v15 += v46;
                if (v51 == v36) {
                  return v14;
                }
              }
              __break(1u);
LABEL_42:
              __break(1u);
LABEL_43:
              __break(1u);
LABEL_44:
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              swift_once();
            }
            __break(1u);
            return result;
          }
          uint64_t v28 = ~v23;
          while (1)
          {
            unint64_t v24 = (v24 + 1) & v28;
            if (((*(void *)(v62 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
              break;
            }
            uint64_t v29 = (void *)(v25 + 16 * v24);
            BOOL v30 = *v29 == v18 && v29[1] == v20;
            if (v30 || (sub_1DFDFFF50() & 1) != 0) {
              goto LABEL_18;
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      ++v14;
      ++v16;
      uint64_t v13 = v63;
      v15 += v63;
      if (v14 == v55)
      {
        swift_bridgeObjectRelease();
        return *(void *)(v11 + 16);
      }
    }
  }
  return 0;
}

uint64_t sub_1DF66BA7C(uint64_t a1)
{
  uint64_t v2 = sub_1DFE00230();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1DF66A6DC(0, &qword_1EBAEA788, MEMORY[0x1E4F281B0], sub_1DF66C558, MEMORY[0x1E4FBB9A8]);
    uint64_t v9 = sub_1DFDFF990();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v13 = *(void *)(v11 + 56);
    unint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = v8;
    uint64_t v32 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v13 * v10, v2);
      sub_1DF66C558();
      uint64_t v15 = sub_1DFDFDBD0();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        uint64_t v21 = ~v16;
        do
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v17 * v13, v2);
          sub_1DEA53FD8(&qword_1EBAEB018, MEMORY[0x1E4F281B0]);
          char v23 = sub_1DFDFDC70();
          unint64_t v24 = *v14;
          (*v14)(v6, v2);
          if (v23)
          {
            v24(v37, v2);
            uint64_t v11 = v22;
            uint64_t v8 = v31;
            goto LABEL_4;
          }
          unint64_t v17 = (v17 + 1) & v21;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v11 = v22;
        }
        while ((v19 & (1 << v17)) != 0);
        uint64_t v8 = v31;
      }
      uint64_t v25 = v37;
      *(void *)(v36 + 8 * v18) = v20 | v19;
      uint64_t result = (*v32)(*(void *)(v9 + 48) + v17 * v13, v25, v2);
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        break;
      }
      *(void *)(v9 + 16) = v29;
LABEL_4:
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v8) {
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC870];
  }
  return result;
}

uint64_t sub_1DF66BDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a2;
  uint64_t v2 = sub_1DFE001F0();
  uint64_t v44 = *(void *)(v2 - 8);
  uint64_t v45 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v41 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1DFE001D0();
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFE00250();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1DFE00260();
  uint64_t v39 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDE7600();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)v35 - v16;
  sub_1DFDF87F0();
  unint64_t v18 = *(void **)(v47 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig);
  swift_unknownObjectRetain();
  swift_release();
  if ((objc_msgSend(v18, sel_respondsToSelector_, sel_topStoriesLocalNewsExpiration) & 1) == 0) {
    return swift_unknownObjectRelease();
  }
  objc_msgSend(v18, sel_topStoriesLocalNewsExpiration);
  swift_unknownObjectRelease();
  uint64_t v19 = sub_1DFE00280();
  v35[3] = v20;
  v35[4] = v19;
  sub_1DFDE7580();
  sub_1DFDE7510();
  v35[0] = *(void *)(v12 + 8);
  v35[1] = v12 + 8;
  ((void (*)(char *, uint64_t))v35[0])(v15, v11);
  uint64_t v36 = v11;
  if (qword_1EBAC0170 != -1) {
    swift_once();
  }
  v35[5] = qword_1EBB628A8;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEA73DB4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0B750;
  v35[2] = v22 + 32;
  sub_1DEA73DB4(0, &qword_1EBAEAFF8, MEMORY[0x1E4F281B0], v21);
  sub_1DFE00230();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DFE0CC10;
  sub_1DFE00200();
  sub_1DFE00210();
  sub_1DFE00220();
  sub_1DF66BA7C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1DFE00240();
  sub_1DFE001C0();
  unint64_t v24 = v41;
  sub_1DFE001E0();
  sub_1DFDE6920();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v45);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v43);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v38);
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v26 = sub_1DEA08668();
  *(void *)(v22 + 64) = v26;
  sub_1DEA53FD8(&qword_1EBAEB020, MEMORY[0x1E4F281D0]);
  uint64_t v27 = v42;
  sub_1DFE00270();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v27);
  sub_1DEA53FD8((unint64_t *)&qword_1EBAA6DA0, MEMORY[0x1E4F27928]);
  uint64_t v28 = v36;
  uint64_t v29 = sub_1DFDFFEE0();
  *(void *)(v22 + 96) = v25;
  *(void *)(v22 + 104) = v26;
  *(void *)(v22 + 72) = v29;
  *(void *)(v22 + 80) = v30;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  uint64_t v31 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v31);
  v35[-2] = v17;
  uint64_t v32 = v46;
  uint64_t result = sub_1DF66A75C((uint64_t (*)(unint64_t))sub_1DF66C4D4);
  uint64_t v34 = *(void *)(*(void *)v32 + 16);
  if (v34 < result)
  {
    __break(1u);
  }
  else
  {
    sub_1DEBF58A4(result, v34);
    return ((uint64_t (*)(char *, uint64_t))v35[0])(v17, v28);
  }
  return result;
}

uint64_t sub_1DF66C4D4(uint64_t a1)
{
  return sub_1DF6692F8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1DF66C4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TodayLocalNewsArticle.Resolved(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF66C558()
{
  return sub_1DEA53FD8(&qword_1EBAEB010, MEMORY[0x1E4F281B0]);
}

uint64_t sub_1DF66C58C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF66C5CC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF66C604()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DF66C63C(void *a1@<X8>)
{
  sub_1DF9F1A0C(*(void *)(v1 + 16), a1);
}

uint64_t type metadata accessor for MyMagazinesSectionHeaderViewStyler()
{
  return self;
}

uint64_t *sub_1DF66C66C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DF66C8C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEBE3100();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
    *(void *)&v9[v12[5]] = *(void *)&v10[v12[5]];
    *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
    *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
    *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    long long v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    uint64_t v17 = v16;
    unint64_t v26 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v26(v14, v15, v17);
    uint64_t v18 = a3[7];
    long long v19 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)((char *)a1 + v18 + 24) = v19;
    (**(void (***)(void))(v19 - 8))();
    uint64_t v20 = a3[8];
    uint64_t v21 = (uint64_t *)((char *)a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1DF66C8C0()
{
  if (!qword_1EBAE9470)
  {
    type metadata accessor for SportsKeyPlayersTagFeedGroupConfigData();
    sub_1DF6709EC(&qword_1EBAE7B58, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupConfigData);
    sub_1DF6709EC(&qword_1EBAE7B50, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupConfigData);
    unint64_t v0 = sub_1DFDF7430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9470);
    }
  }
}

uint64_t sub_1DF66C98C(uint64_t a1, int *a2)
{
  sub_1DF66C8C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF66CAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DF66C8C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v25 = a3;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  uint64_t v16 = v15;
  uint64_t v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v17(v13, v14, v16);
  uint64_t v18 = *(int *)(v25 + 28);
  long long v19 = *(_OWORD *)(a2 + v18 + 24);
  *(_OWORD *)(a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  uint64_t v20 = *(int *)(v25 + 32);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DF66CCA4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF66C8C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF66CE34(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF66C8C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1DF66CF6C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF66C8C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  swift_release();
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  swift_release();
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  swift_release();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF66D0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF66D100);
}

uint64_t sub_1DF66D100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DF66C8C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DF66D218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF66D22C);
}

uint64_t sub_1DF66D22C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DF66C8C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter()
{
  uint64_t result = qword_1EBAE5BF0;
  if (!qword_1EBAE5BF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF66D38C()
{
  sub_1DF66C8C0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DF66D468(uint64_t a1)
{
  uint64_t v14 = sub_1DFDFCAB0();
  uint64_t v2 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1DEDF737C(0, 0, 0);
  uint64_t v5 = v15;
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  v13[1] = a1;
  if (v6)
  {
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 32;
    do
    {
      unint64_t v9 = *(void *)(v8 + 8 * v7);
      swift_bridgeObjectRetain();
      sub_1DF670370(v7, v9, (uint64_t)v4);
      swift_bridgeObjectRelease();
      uint64_t v15 = v5;
      unint64_t v11 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1DEDF737C(v10 > 1, v11 + 1, 1);
        uint64_t v5 = v15;
      }
      ++v7;
      *(void *)(v5 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v11, v4, v14);
    }
    while (v6 != v7);
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DF66D61C()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DF66D69C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v1;
  uint64_t v24 = a1;
  uint64_t v21 = v1;
  sub_1DF670880(0, &qword_1EAC22548, MEMORY[0x1E4F819A0], MEMORY[0x1E4FBB320]);
  sub_1DFDEE090();
  uint64_t v20 = type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter;
  sub_1DF670A34(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v22 = v7 + v5;
  unint64_t v8 = (v7 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  sub_1DF66E750((uint64_t)v6, v9 + v7);
  *(void *)(v9 + v8) = a1;
  swift_retain();
  unint64_t v10 = (void *)sub_1DFDEDCE0();
  sub_1DFDFA9F0();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v12 = v20;
  uint64_t v11 = v21;
  sub_1DF670A34(v21, (uint64_t)v6, (uint64_t (*)(void))v20);
  uint64_t v13 = swift_allocObject();
  sub_1DF66E750((uint64_t)v6, v13 + v7);
  *(void *)(v13 + v8) = a1;
  swift_retain();
  uint64_t v14 = (void *)sub_1DFDEDCE0();
  sub_1DEC3C648(0);
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  sub_1DF670A34(v11, (uint64_t)v6, (uint64_t (*)(void))v12);
  uint64_t v15 = swift_allocObject();
  sub_1DF66E750((uint64_t)v6, v15 + v7);
  uint64_t v16 = (void *)sub_1DFDEDCE0();
  uint64_t v17 = sub_1DFDEDEE0();
  swift_release();
  swift_release();

  return v17;
}

uint64_t sub_1DF66D988@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF66C8C0();
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocBox();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0x5000000000000004;
  return result;
}

uint64_t sub_1DF66DA08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  a2[4] = sub_1DF6709EC(&qword_1EBAE40E0, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs);
  a2[5] = sub_1DF6709EC(&qword_1EAC2F3E8, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DF670A34(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs);
}

unint64_t sub_1DF66DAD4(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DFDF9D80();
  uint64_t v22 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + *(int *)(type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter() + 20);
  LOBYTE(v31) = 23;
  sub_1DEBE3100();
  uint64_t v25 = v7;
  uint64_t v26 = a1;
  uint64_t v30 = sub_1DFDF8030();
  sub_1DF670880(0, (unint64_t *)&qword_1EBAEAF50, (uint64_t (*)(uint64_t))sub_1DEC3E5EC, MEMORY[0x1E4FBBE00]);
  sub_1DEC3E5EC(0);
  uint64_t v28 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v27 = *(void *)(v9 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v29 = v11;
  *(_OWORD *)(v11 + 16) = xmmword_1DFE0B750;
  uint64_t v12 = (uint64_t *)(v11 + v10);
  uint64_t v24 = type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  sub_1DFDF8870();
  uint64_t v13 = sub_1DFDF8530();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21[1] = v4 + 8;
  uint64_t v23 = v14;
  v14(v6, v3);
  unint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  unint64_t v31 = 0xD00000000000001BLL;
  unint64_t v32 = 0x80000001DFEC6230;
  sub_1DEC3E634();
  sub_1DFDFE5E0();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v13;
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9980, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7FE90]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *uint64_t v12 = sub_1DFDF9140();
  uint64_t v15 = *MEMORY[0x1E4F7F8E8];
  uint64_t v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 104);
  v21[0] = v9 + 104;
  uint64_t v17 = v28;
  v16(v12, v15, v28);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t *)((char *)v12 + v27);
  sub_1DFDF8870();
  uint64_t v19 = sub_1DFDF8530();
  v23(v6, v22);
  unint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  unint64_t v31 = 0xD00000000000001ELL;
  unint64_t v32 = 0x80000001DFEC6250;
  sub_1DFDFE5E0();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v19;
  swift_allocObject();
  swift_bridgeObjectRetain();
  *uint64_t v18 = sub_1DFDF9140();
  v16(v18, v15, v17);
  swift_bridgeObjectRelease();
  unint64_t v31 = v30;
  sub_1DF3DD820(v29);
  return v31;
}

uint64_t sub_1DF66DFA4()
{
  sub_1DF66C8C0();
  return sub_1DFDF7340();
}

uint64_t sub_1DF66DFD0@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF670880(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DF66C8C0();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DF670880(0, &qword_1EAC2F3F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
  a1[3] = v5;
  a1[4] = sub_1DF670A9C();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF66E128()
{
  sub_1DF6709EC(&qword_1EAC2F3D8, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF66E194()
{
  return sub_1DF6709EC(&qword_1EAC2F3C8, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter);
}

uint64_t sub_1DF66E1DC()
{
  return sub_1DF6709EC(&qword_1EAC2F3D0, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter);
}

uint64_t sub_1DF66E224()
{
  return sub_1DF6709EC(&qword_1EAC2F3D8, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter);
}

uint64_t sub_1DF66E26C()
{
  return sub_1DF6709EC(&qword_1EAC2F3E0, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter);
}

uint64_t sub_1DF66E2B4()
{
  return sub_1DF66E2DC();
}

uint64_t sub_1DF66E2DC()
{
  uint64_t v1 = sub_1DFDF9D80();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  uint64_t v21 = v0;
  type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v2 + 8);
  v5(v4, v1);
  uint64_t v6 = v22;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v5(v4, v1);
  uint64_t v7 = v22;
  sub_1DFDF87F0();
  id v8 = *(id *)(v22 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1DFDF87F0();
  uint64_t v9 = *(void *)(v22 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_sportsEventVisualizationResult);
  swift_retain();
  swift_release();
  if (v9)
  {
    if (qword_1EBAEA6E8 != -1) {
      swift_once();
    }
    sub_1DEA086BC();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DFE0B750;
    uint64_t v11 = MEMORY[0x1E4FBB550];
    uint64_t v12 = MEMORY[0x1E4FBB5C8];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v10 + 64) = v12;
    *(void *)(v10 + 32) = v6;
    *(void *)(v10 + 96) = v11;
    *(void *)(v10 + 104) = v12;
    *(void *)(v10 + 72) = v7;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    uint64_t v13 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v13);
    *(&v21 - 2) = v21;
    sub_1DFDFC570();
    sub_1DFDEE090();
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v9;
    v14[3] = v8;
    v14[4] = v7;
    v14[5] = v6;
    id v15 = v8;
    swift_retain();
    uint64_t v16 = (void *)sub_1DFDEDCE0();
    sub_1DF670880(0, &qword_1EAC22548, MEMORY[0x1E4F819A0], MEMORY[0x1E4FBB320]);
    sub_1DFDEDE00();
    swift_release();
    swift_release();

    uint64_t v17 = (void *)sub_1DFDEDCE0();
    uint64_t v18 = sub_1DFDEDE50();

    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v18 = sub_1DFDF8510();
    sub_1DF6709EC((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, *MEMORY[0x1E4F7F9D0], v18);
    swift_willThrow();
  }
  return v18;
}

uint64_t sub_1DF66E750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF66E7B4(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter() - 8);
  return sub_1DF66E858(*(void *)(v1+ ((*(void *)(v3 + 64)+ ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), *a1);
}

uint64_t sub_1DF66E858(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF670880(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v59 = (char *)v47 - v5;
  sub_1DF670880(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v3);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v51 = (char *)v47 - v7;
  sub_1DF670880(0, (unint64_t *)&qword_1EBAE95E0, (uint64_t (*)(uint64_t))sub_1DEBE3100, v3);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v50 = (char *)v47 - v9;
  uint64_t v10 = sub_1DFDFB960();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v56 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF670880(0, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8], v3);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v47 - v13;
  uint64_t v15 = sub_1DFDFAFE0();
  uint64_t v54 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v53 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SportsKeyPlayersTagFeedGroupConfigData();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DFDFAA20();
  uint64_t v61 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v60 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF87F0();
  id v22 = *(id *)(v63 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  uint64_t v23 = (void *)sub_1DFDFEBA0();

  id v24 = objc_msgSend(v23, sel_asSportsEvent);
  swift_unknownObjectRelease();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (!v24)
  {
    if (MEMORY[0x1E4FBC860] >> 62) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  id v26 = objc_msgSend(v24, sel_eventCompetitorTags);
  swift_unknownObjectRelease();
  if (!v26)
  {
    if (MEMORY[0x1E4FBC860] >> 62) {
      goto LABEL_10;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v63 = a2;
    goto LABEL_7;
  }
  sub_1DEC9C144();
  unint64_t v27 = sub_1DFDFE220();

  if (!(v27 >> 62)) {
    goto LABEL_6;
  }
LABEL_10:
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease_n();
  uint64_t v63 = a2;
  if (v46 < 0)
  {
    sub_1DFDFFBA0();
    __break(1u);
    goto LABEL_12;
  }
LABEL_7:
  sub_1DF670880(0, &qword_1EAC22548, MEMORY[0x1E4F819A0], MEMORY[0x1E4FBB320]);
  sub_1DEC81170();
  uint64_t v28 = sub_1DFDFE6C0();
  uint64_t v29 = v52;
  sub_1DF66D468(v28);
  v47[3] = v29;
  swift_bridgeObjectRelease();
  sub_1DF66C8C0();
  uint64_t v30 = v49;
  sub_1DFDF73B0();
  unint64_t v31 = &v19[*(int *)(v17 + 20)];
  sub_1DFDFA840();
  unint64_t v32 = *(void (**)(char *, uint64_t))(v61 + 8);
  uint64_t v52 = v20;
  v61 += 8;
  unint64_t v48 = v32;
  v32(v31, v20);
  uint64_t v33 = (void *)(v30 + *(int *)(type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter() + 24));
  uint64_t v34 = v33[3];
  v47[2] = v33[4];
  uint64_t v49 = v34;
  v47[1] = __swift_project_boxed_opaque_existential_1(v33, v34);
  uint64_t v35 = sub_1DFDF66A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v14, 1, 1, v35);
  sub_1DFC83088(v25);
  sub_1DFC83088(v25);
  sub_1DFC831BC(v25);
  sub_1DFC831D4(v25);
  sub_1DFC83308(v25);
  sub_1DFC83320(v25);
  uint64_t v14 = v53;
  sub_1DFDFAFD0();
  sub_1DEBE3100();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v50, 1, 1, v36);
  swift_retain();
  sub_1DFDF87F0();
  id v37 = *(id *)(v63 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  uint64_t v38 = sub_1DFDFC340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v51, 1, 1, v38);
  LOBYTE(v62) = 23;
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9F30, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F81400]);
  swift_allocObject();
  sub_1DFDFC5C0();
  sub_1DFDF87F0();
  sub_1DEE821D4();
  swift_release();
  sub_1DFDF87F0();
  id v39 = *(id *)(v62 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1DFDFC5F0();
  swift_allocObject();
  sub_1DFDFC5E0();
  uint64_t v40 = sub_1DFDFB640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v59, 1, 1, v40);
  uint64_t v41 = qword_1EBAEA6E8;
  (id)*MEMORY[0x1E4F7E018];
  if (v41 != -1) {
LABEL_12:
  }
    swift_once();
  (id)qword_1EBB63310;
  uint64_t v42 = v56;
  sub_1DFDFB930();
  uint64_t v43 = v60;
  uint64_t v44 = sub_1DFDFB120();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v58);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v55);
  v48(v43, v52);
  return v44;
}

uint64_t sub_1DF66F25C(uint64_t a1)
{
  sub_1DEC3C648(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF66F478(a1, (uint64_t)v7);
  sub_1DF670A34((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1DF670880(0, (unint64_t *)&qword_1EBAD2B30, (uint64_t (*)(uint64_t))sub_1DEC3C648, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v8 = sub_1DFDEDE90();
  sub_1DEC3C93C((uint64_t)v7);
  return v8;
}

uint64_t sub_1DF66F3E0(uint64_t a1)
{
  return sub_1DF66F25C(a1);
}

uint64_t sub_1DF66F478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v13[1] = a2;
  sub_1DF670880(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v13 - v4;
  uint64_t v6 = sub_1DFDF8C20();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1DFDFA9F0();
  MEMORY[0x1F4188790](v8);
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1DF66C8C0();
  sub_1DFDF7350();
  sub_1DFDF7360();
  sub_1DFDF7360();
  type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  sub_1DEBE3100();
  sub_1DFDF8080();
  sub_1DFDF8050();
  sub_1DFDF80A0();
  uint64_t v11 = sub_1DFDF7CB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_1DFDF6F90();
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF66F76C()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  type metadata accessor for TagFeedGroup();
  sub_1DEBFF3E4();
  return sub_1DFDF88D0();
}

uint64_t sub_1DF66F830()
{
  uint64_t v1 = (int *)(type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_1DF66C8C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v2 + v1[7];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for SportsKeyPlayersTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[8]);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[9]);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF66F9C0()
{
  return sub_1DF66F76C();
}

uint64_t sub_1DF66FA3C(uint64_t a1)
{
  uint64_t v2 = sub_1DFDFD1B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter();
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v6 + 28)), *(void *)(a1 + *(int *)(v6 + 28) + 24));
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F81918], v2);
  uint64_t v7 = sub_1DFDFD630();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1DF66FB70@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, int64_t a4@<X4>, uint64_t *a5@<X8>)
{
  id v39 = a5;
  uint64_t v40 = a3;
  unint64_t v8 = sub_1DFDFCFD0();
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DFE0B750;
  int64_t v41 = a4;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v11 = MEMORY[0x1E4FBB5C8];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 32) = v10;
  id v12 = objc_msgSend(objc_msgSend(a2, sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v13 = sub_1DFDFDD20();
  uint64_t v15 = v14;

  *(void *)(v9 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 104) = sub_1DEA08668();
  *(void *)(v9 + 72) = v13;
  *(void *)(v9 + 80) = v15;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  uint64_t v16 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v16);
  v38[2] = a1;
  v38[3] = a2;
  unint64_t v17 = sub_1DEFC6AA8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1DF670998, (uint64_t)v38, v8);
  swift_bridgeObjectRelease();
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v35)
    {
LABEL_7:
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1DFE0B250;
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      *(void *)(v18 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v18 + 64) = MEMORY[0x1E4FBB5C8];
      *(void *)(v18 + 32) = v19;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_1DEC7FFDC(v40, v17);
      uint64_t v22 = v21;
      uint64_t v24 = v23;
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      int64_t v27 = (v26 >> 1) - v24;
      int64_t v28 = v41;
      if (__OFSUB__(v26 >> 1, v24))
      {
        __break(1u);
      }
      else
      {
        if (v27 < v41)
        {
          uint64_t v29 = sub_1DFDF8510();
          sub_1DF6709EC((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
          swift_allocError();
          *uint64_t v30 = v28;
          v30[1] = v27;
          (*(void (**)(int64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v30, *MEMORY[0x1E4F7F9C8], v29);
          swift_willThrow();
          return swift_unknownObjectRelease();
        }
        if ((v26 & 1) == 0) {
          goto LABEL_14;
        }
        sub_1DFDFFF90();
        swift_unknownObjectRetain_n();
        uint64_t v33 = swift_dynamicCastClass();
        if (!v33)
        {
          swift_unknownObjectRelease();
          uint64_t v33 = MEMORY[0x1E4FBC860];
        }
        uint64_t v34 = *(void *)(v33 + 16);
        swift_release();
        if (v34 == v27)
        {
          uint64_t v32 = swift_dynamicCastClass();
          if (!v32)
          {
            swift_unknownObjectRelease();
            uint64_t v32 = MEMORY[0x1E4FBC860];
          }
          goto LABEL_20;
        }
      }
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v32 = sub_1DEC7A8D8(v20, v22, v24, v26);
LABEL_20:
      uint64_t result = swift_unknownObjectRelease();
      *id v39 = v32;
      return result;
    }
  }
  else if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_1DFDF8510();
  sub_1DF6709EC((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v36 - 8) + 104))(v37, *MEMORY[0x1E4F7F9D8], v36);
  return swift_willThrow();
}

uint64_t sub_1DF6700A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1DFDFD900();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v13 = (void *)sub_1DFDFD360();
  id v14 = objc_msgSend(a3, sel_alternativeFeedDescriptor);
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel_feedConfiguration);
  }
  else
  {
    id v16 = objc_msgSend(a3, sel_feedConfiguration);
  }
  swift_getObjectType();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F81B28], v8);
  uint64_t v17 = sub_1DEE996E4(v13, v12, 23, (uint64_t)v16, (uint64_t)v11, a2);
  swift_unknownObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a4 = v17;
  return result;
}

uint64_t sub_1DF670244()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1DEA08668();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1DFDF00C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF670370@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = sub_1DFDFC200();
  uint64_t v42 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (void *)((char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DFDFC900();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  int64_t v41 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v40 - v11;
  uint64_t v48 = 0x6579616C5079656BLL;
  unint64_t v49 = 0xEB000000002D7372;
  uint64_t v47 = a1;
  sub_1DFDFFEE0();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  uint64_t v13 = v48;
  unint64_t v14 = v49;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v15)
  {
LABEL_15:
    uint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1DF11BA44(MEMORY[0x1E4FBC860]);
    sub_1DF11BB5C(v39);
    sub_1DF11BC90(v39);
    return sub_1DFDFCAA0();
  }
  uint64_t v48 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEDF697C(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    v40[0] = v14;
    v40[1] = v13;
    v40[2] = a3;
    uint64_t v17 = v48;
    if ((a2 & 0xC000000000000001) != 0)
    {
      unint64_t v44 = a2;
      uint64_t v18 = 0;
      unsigned int v43 = *MEMORY[0x1E4F812D0];
      uint64_t v19 = (void (**)(uint64_t *, void, uint64_t))(v42 + 104);
      LODWORD(v42) = *MEMORY[0x1E4F81608];
      int64_t v41 = (char *)(v8 + 32);
      uint64_t v20 = v7;
      do
      {
        uint64_t v21 = MEMORY[0x1E01EE240](v18, v44);
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v21;
        uint64_t v24 = v45;
        uint64_t v23 = v46;
        *uint64_t v45 = v22;
        (*v19)(v24, v43, v23);
        swift_retain();
        sub_1DFDFAB90();
        (*(void (**)(char *, void, uint64_t))(v8 + 104))(v12, v42, v20);
        swift_release();
        uint64_t v48 = v17;
        uint64_t v25 = v20;
        unint64_t v27 = *(void *)(v17 + 16);
        unint64_t v26 = *(void *)(v17 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1DEDF697C(v26 > 1, v27 + 1, 1);
          uint64_t v17 = v48;
        }
        ++v18;
        *(void *)(v17 + 16) = v27 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v27, v12, v25);
        uint64_t v20 = v25;
      }
      while (v15 != v18);
    }
    else
    {
      int64_t v28 = (uint64_t *)(a2 + 32);
      LODWORD(v44) = *MEMORY[0x1E4F812D0];
      uint64_t v29 = v41;
      uint64_t v30 = (void (**)(uint64_t *, void, uint64_t))(v42 + 104);
      unsigned int v43 = *MEMORY[0x1E4F81608];
      uint64_t v42 = v8 + 32;
      uint64_t v31 = v7;
      do
      {
        uint64_t v32 = *v28;
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = v32;
        uint64_t v35 = v45;
        uint64_t v34 = v46;
        *uint64_t v45 = v33;
        (*v30)(v35, v44, v34);
        swift_retain_n();
        sub_1DFDFAB90();
        (*(void (**)(char *, void, uint64_t))(v8 + 104))(v29, v43, v31);
        swift_release();
        uint64_t v48 = v17;
        uint64_t v36 = v29;
        unint64_t v38 = *(void *)(v17 + 16);
        unint64_t v37 = *(void *)(v17 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_1DEDF697C(v37 > 1, v38 + 1, 1);
          uint64_t v17 = v48;
        }
        *(void *)(v17 + 16) = v38 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v38, v36, v31);
        ++v28;
        --v15;
        uint64_t v29 = v36;
      }
      while (v15);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void sub_1DF670880(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF6708E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF67091C()
{
  return sub_1DF66FA3C(*(void *)(v0 + 16));
}

uint64_t sub_1DF670938()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DF670978@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DF66FB70(a1, *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_1DF670998@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DF6700A4(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1DF6709B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF6709EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF670A34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DF670A9C()
{
  unint64_t result = qword_1EAC2F3F8;
  if (!qword_1EAC2F3F8)
  {
    sub_1DF670880(255, &qword_1EAC2F3F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F3F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedAvailabilityServiceError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedAvailabilityServiceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedAvailabilityServiceError()
{
  return &type metadata for FeedAvailabilityServiceError;
}

uint64_t sub_1DF670BE0(uint64_t a1, uint64_t a2)
{
  sub_1DEA35DD4(0);
  unsigned int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF670C4C(uint64_t a1, uint64_t a2)
{
  sub_1DEA35DD4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF670CB0(uint64_t a1, uint64_t a2)
{
  sub_1DEA35DD4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF670D14(uint64_t a1, uint64_t a2)
{
  sub_1DEA35DD4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF670D78(uint64_t a1, uint64_t a2)
{
  sub_1DEA35DD4(0);
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF670DE4(uint64_t a1, uint64_t a2)
{
  sub_1DEA35DD4(0);
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1DF670E54(uint64_t a1)
{
  unint64_t v2 = sub_1DEACD100();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF670E90(uint64_t a1)
{
  unint64_t v2 = sub_1DEACD100();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF670ECC(void *a1)
{
  sub_1DEAB9D70(0, &qword_1EBACA808, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEACD100();
  sub_1DFE001A0();
  sub_1DEA35DD4(0);
  sub_1DEA4B1F4(&qword_1EBAA6348, sub_1DEA35DD4);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DF671054()
{
  type metadata accessor for TodayFeedServiceConfig();
  sub_1DEA4B1F4((unint64_t *)&qword_1EBAAF9B0, (void (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig);
  return sub_1DFDF80C0();
}

unsigned char *storeEnumTagSinglePayload for EngagementTodayFeedGroupKnobs.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF67117CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementTodayFeedGroupKnobs.CodingKeys()
{
  return &type metadata for EngagementTodayFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DF6711B8()
{
  unint64_t result = qword_1EAC2F400;
  if (!qword_1EAC2F400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F400);
  }
  return result;
}

uint64_t sub_1DF67120C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v35 = a4;
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9E8E54();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA211A4(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  id v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v30 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v30 - v20;
  uint64_t v34 = a1;
  sub_1DEA1F784(a1, (uint64_t)&v30 - v20);
  uint64_t v32 = a2;
  sub_1DEA1F784(a2, (uint64_t)v19);
  uint64_t v22 = (uint64_t)&v12[*(int *)(v10 + 56)];
  sub_1DEA1F784((uint64_t)v21, (uint64_t)v12);
  sub_1DEA1F784((uint64_t)v19, v22);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v23((uint64_t)v12, 1, v6) != 1)
  {
    sub_1DEA1F784((uint64_t)v12, (uint64_t)v16);
    if (v23(v22, 1, v6) != 1)
    {
      uint64_t v25 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v31, v22, v6);
      sub_1DEAAECA0((unint64_t *)&qword_1EBAC0CE0, MEMORY[0x1E4F27928]);
      char v26 = sub_1DFDFDC70();
      unint64_t v27 = *(void (**)(char *, uint64_t))(v7 + 8);
      v27(v25, v6);
      sub_1DEAEA868((uint64_t)v19);
      sub_1DEAEA868((uint64_t)v21);
      v27(v16, v6);
      sub_1DEAEA868((uint64_t)v12);
      uint64_t v24 = v32;
      if (v26) {
        return sub_1DF671688(v24, v35);
      }
LABEL_8:
      uint64_t v28 = v34;
      sub_1DFDED000();
      uint64_t v24 = v28;
      return sub_1DF671688(v24, v35);
    }
    sub_1DEAEA868((uint64_t)v19);
    sub_1DEAEA868((uint64_t)v21);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
LABEL_6:
    sub_1DF671AFC((uint64_t)v12, (uint64_t (*)(void))sub_1DE9E8E54);
    goto LABEL_8;
  }
  sub_1DEAEA868((uint64_t)v19);
  sub_1DEAEA868((uint64_t)v21);
  if (v23(v22, 1, v6) != 1) {
    goto LABEL_6;
  }
  sub_1DEAEA868((uint64_t)v12);
  uint64_t v24 = v32;
  return sub_1DF671688(v24, v35);
}

uint64_t sub_1DF6715D8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF671620()
{
  uint64_t v0 = sub_1DFDECEB0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DF671688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioFeedContentConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF6716EC()
{
  uint64_t v1 = type metadata accessor for AudioFeedContentConfig();
  uint64_t v15 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = v0 + ((v15 + 16) & ~v15);
  uint64_t v3 = sub_1DFDE7600();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v14(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  uint64_t v13 = v4;
  type metadata accessor for AudioFeedConfig();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v2 + *(int *)(v1 + 20);
  sub_1DEA83BAC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v8(v5, v6);
  type metadata accessor for UpNextAudioFeedGroupKnobs();
  swift_release();
  swift_release();
  uint64_t v9 = type metadata accessor for AudioFeedGroupKnobs();
  v8(v5 + *(int *)(v9 + 20), v7);
  type metadata accessor for ForYouAudioFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + *(int *)(v1 + 24);
  uint64_t v11 = type metadata accessor for LegacyAudioFeedConfiguration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    if (!v14(v10, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v3);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF6719F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioFeedContentConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF671A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AudioFeedContentConfig() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1DF67120C(a1, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_1DF671AFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DF671B5C()
{
  unint64_t result = qword_1EAC2F408;
  if (!qword_1EAC2F408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F408);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioFeedConfigManager.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF671C4CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioFeedConfigManager.Errors()
{
  return &type metadata for AudioFeedConfigManager.Errors;
}

unint64_t sub_1DF671C88()
{
  unint64_t result = qword_1EAC2F410;
  if (!qword_1EAC2F410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F410);
  }
  return result;
}

uint64_t sub_1DF671CDC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DFDF4740();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v2 + 56);
  id v11 = objc_msgSend(self, sel__searchElement);
  id v12 = objc_msgSend(v11, sel__identifier);

  uint64_t v13 = sub_1DFDFDD20();
  uint64_t v15 = v14;

  sub_1DEC0DA5C((uint64_t)v9);
  uint64_t v16 = MEMORY[0x1E01EFB70](v10 + 16);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    uint64_t v18 = (void *)sub_1DF1F5B40(v13, v15, (uint64_t)v9);
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v18)
    {
      type metadata accessor for SearchHomeCoordinatingController();
      sub_1DFDFED50();
      id v19 = (id)v26[0];
      if (v26[0])
      {
        if (a2)
        {
          id v20 = objc_msgSend(*(id *)(v26[0]+ OBJC_IVAR____TtC7NewsUI232SearchHomeCoordinatingController_searchHomeContainerController), sel_parentViewController);
          if (v20)
          {
            uint64_t v21 = v20;
            sub_1DEB51528();
            id v19 = v19;
            id v22 = v21;
            LOBYTE(v21) = sub_1DFDFF550();

            if (v21) {
              sub_1DFD646E8(a1, a2, 4);
            }
          }

          return (uint64_t)v18;
        }
      }
      else
      {
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  sub_1DE925CE8(0, &qword_1EBAA43C0);
  uint64_t result = sub_1DFDECCC0();
  if (v25)
  {
    sub_1DE942EC4(&v24, (uint64_t)v26);
    __swift_project_boxed_opaque_existential_1(v26, v26[3]);
    uint64_t v18 = (void *)sub_1DEBB2504();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return (uint64_t)v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF671FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  sub_1DEAE6578();
  uint64_t v4 = v3;
  uint64_t v34 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v32 = v5;
  uint64_t v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDEC4E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDE8730();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF5000();
  if (*((void *)&v47 + 1))
  {
    sub_1DFDE8900();
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F7CFE0], v6);
      sub_1DFDE8720();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1DFDE8890();
      swift_release();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  else
  {
    sub_1DE9E4C20((uint64_t)&v46);
  }
  sub_1DF6724D4(v35, (uint64_t)&v46);
  if ((v52 & 1) == 0)
  {
    uint64_t v28 = (void *)v47;
    swift_bridgeObjectRelease();
    sub_1DFDF45C0();
    objc_msgSend(objc_allocWithZone((Class)sub_1DFDF24C0()), sel_initWithRootViewController_, v28);
    uint64_t v27 = sub_1DFDF4560();
    uint64_t v29 = (void (*)(uint64_t))sub_1DFDF4FD0();
    v29(v27);
    swift_release();

    return v27;
  }
  void v44[2] = v48;
  v44[3] = v49;
  v44[4] = v50;
  char v45 = v51;
  v44[0] = v46;
  v44[1] = v47;
  uint64_t v14 = v31[5];
  uint64_t v35 = v31[6];
  __swift_project_boxed_opaque_existential_1(v31 + 2, v14);
  sub_1DE925CE8(0, &qword_1EBAC31A8);
  uint64_t v15 = v33;
  uint64_t v16 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, a1, v4);
  sub_1DF672684((uint64_t)v44, (uint64_t)&v36);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (v32 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v19 + v17, v15, v4);
  unint64_t v20 = v19 + v18;
  long long v21 = v39;
  *(_OWORD *)(v20 + 32) = v38;
  *(_OWORD *)(v20 + 48) = v21;
  *(_OWORD *)(v20 + 64) = v40;
  *(unsigned char *)(v20 + 80) = v41;
  long long v22 = v37;
  *(_OWORD *)unint64_t v20 = v36;
  *(_OWORD *)(v20 + 16) = v22;
  sub_1DFDECCA0();
  uint64_t result = swift_release();
  if (v43)
  {
    sub_1DE942EC4(&v42, (uint64_t)&v36);
    uint64_t v24 = *((void *)&v37 + 1);
    uint64_t v25 = v38;
    __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
    char v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
    sub_1DFDF45C0();
    objc_msgSend(objc_allocWithZone((Class)sub_1DFDF24C0()), sel_initWithRootViewController_, v26);
    uint64_t v27 = sub_1DFDF4560();

    sub_1DF672838((uint64_t)v44);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    return v27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF6724D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DF672530(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1DEAE6578();
  uint64_t v5 = (void (*)(void *))sub_1DFDF4FE0();
  v5(a1);
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDECAA0();
  uint64_t v6 = *(void *)(a3 + 56);
  if (v6)
  {
    uint64_t v8 = *(void *)(a3 + 64);
    uint64_t v7 = *(void *)(a3 + 72);
    uint64_t v9 = *(void *)(a3 + 48);
    char v10 = *(unsigned char *)(a3 + 80) & 1;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v13[0] = v9;
    v13[1] = v6;
    void v13[2] = v8;
    v13[3] = v7;
    char v14 = v10;
    sub_1DFDECAA0();
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF51BFAC(a3, (uint64_t)v13);
  uint64_t v11 = qword_1DFE6C928[v15];
  sub_1DF51C008((uint64_t)v13);
  v13[0] = v11;
  return sub_1DFDECAA0();
}

uint64_t sub_1DF672684(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DF6726E0()
{
  sub_1DEAE6578();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(unsigned __int8 *)(v0 + v4 + 40) <= 3u) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v4);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF67279C(void *a1)
{
  sub_1DEAE6578();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1DF672530(a1, v1 + v5, v6);
}

uint64_t sub_1DF672838(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF67288C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DF672C28(a4);
}

uint64_t sub_1DF6728B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DF6728E0(a4) & 1;
}

uint64_t sub_1DF6728E0(uint64_t a1)
{
  uint64_t v3 = sub_1DFDFBCA0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (id *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!objc_msgSend(*(id *)(v1 + 24), sel_useOfflineMode)
    || (__swift_project_boxed_opaque_existential_1((void *)(v1 + 32), *(void *)(v1 + 56)), (sub_1DFDF8460() & 1) == 0))
  {
    (*(void (**)(id *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    int v7 = (*(uint64_t (**)(id *, uint64_t))(v4 + 88))(v6, v3);
    if (v7 == *MEMORY[0x1E4F81080])
    {
      (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);
      uint64_t v8 = (void *)sub_1DFDFCC00();
      if (v8)
      {
        uint64_t v9 = v8;
        if (objc_msgSend(v8, sel_isRouteable))
        {
          unsigned __int8 v10 = objc_msgSend(v9, sel_isDeprecated);
          swift_unknownObjectRelease();
          if ((v10 & 1) == 0)
          {
            swift_release();
            return 1;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      if (qword_1EBAEA6D8 != -1) {
        swift_once();
      }
      sub_1DEA6A904(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1DFE0B250;
      uint64_t v17 = sub_1DFDFCBE0();
      uint64_t v19 = v18;
      *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v16 + 64) = sub_1DEA08668();
      *(void *)(v16 + 32) = v17;
      *(void *)(v16 + 40) = v19;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else if (v7 == *MEMORY[0x1E4F81088])
    {
      (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);
      id v12 = objc_msgSend(*v6, sel_sportsEventIDs);
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = sub_1DFDFE220();

        swift_unknownObjectRelease();
        uint64_t v15 = *(void *)(v14 + 16);
        swift_bridgeObjectRelease();
        if (v15 == 1) {
          return 1;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      (*(void (**)(id *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return 0;
}

uint64_t sub_1DF672C28(uint64_t a1)
{
  sub_1DEB28694();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v3);
  int v7 = &v33[-v6];
  uint64_t v8 = sub_1DFDFBCA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (id *)&v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(id *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(id *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x1E4F81080])
  {
    (*(void (**)(id *, uint64_t))(v9 + 96))(v11, v8);
    uint64_t v13 = (void *)sub_1DFDFCC00();
    if (v13)
    {
      uint64_t v14 = v13;
      if ((objc_msgSend(v13, sel_isRouteable) & 1) != 0
        && (objc_msgSend(v14, sel_isDeprecated) & 1) == 0)
      {
        id v25 = objc_msgSend(v14, sel_identifier);
        uint64_t v26 = sub_1DFDFDD20();
        uint64_t v28 = v27;

        id v29 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v26;
        *(void *)(v30 + 24) = v28;
        uint64_t v31 = MEMORY[0x1E4FBC860];
        *(void *)(v30 + 32) = v29;
        *(void *)(v30 + 40) = v31;
        *(unsigned char *)(v30 + 48) = 1;
        *(void *)(v30 + 56) = 8;
        *(_OWORD *)(v30 + 64) = 0u;
        *(_OWORD *)(v30 + 80) = 0u;
        *(unsigned char *)(v30 + 96) = -1;
        uint64_t v32 = sub_1DFDEAB40();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v7, 1, 1, v32);
        uint64_t v39 = 0;
        long long v37 = 0u;
        long long v38 = 0u;
        uint64_t v36 = 0;
        long long v34 = 0u;
        long long v35 = 0u;
        swift_retain();
        sub_1DED23604(v26, v28, v29, v31, 1);
        sub_1DED2369C(0, 0, 0, 0, 0xFFu);
        sub_1DFBB5128(v30 | 0x2000000000000006, 0, (uint64_t)v7, (uint64_t)&v37, 0, 0, 0, 0, (uint64_t)&v34);
        swift_unknownObjectRelease();
        swift_release();
        sub_1DEB28744(v26, v28, v29, MEMORY[0x1E4FBC860], 1);
        sub_1DED236B0(0, 0, 0, 0, 0xFFu);
        swift_release();
        sub_1DE9330D4((uint64_t)&v34, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
        sub_1DE9330D4((uint64_t)&v37, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
        sub_1DEBFF970((uint64_t)v7);
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    return swift_release();
  }
  if (v12 != *MEMORY[0x1E4F81088]) {
    return (*(uint64_t (**)(id *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(id *, uint64_t))(v9 + 96))(v11, v8);
  id v16 = objc_msgSend(*v11, sel_sportsEventIDs);
  if (!v16) {
    return swift_unknownObjectRelease();
  }
  uint64_t v17 = v16;
  uint64_t v18 = (void *)sub_1DFDFE220();

  if (v18[2])
  {
    uint64_t v19 = v18[4];
    uint64_t v20 = (void *)v18[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v19;
    *(void *)(v22 + 24) = v20;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    *(void *)(v22 + 32) = v21;
    *(void *)(v22 + 40) = v23;
    *(unsigned char *)(v22 + 48) = 1;
    *(void *)(v22 + 56) = 8;
    *(_OWORD *)(v22 + 64) = 0u;
    *(_OWORD *)(v22 + 80) = 0u;
    *(unsigned char *)(v22 + 96) = -1;
    uint64_t v24 = sub_1DFDEAB40();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 1, 1, v24);
    uint64_t v39 = 0;
    long long v37 = 0u;
    long long v38 = 0u;
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    swift_retain();
    sub_1DED23604(v19, v20, v21, v23, 1);
    sub_1DED2369C(0, 0, 0, 0, 0xFFu);
    sub_1DFBB5128(v22 | 0x2000000000000006, 0, (uint64_t)v5, (uint64_t)&v37, 0, 0, 0, 0, (uint64_t)&v34);
    swift_unknownObjectRelease();
    sub_1DEB28744(v19, v20, v21, v23, 1);
    sub_1DED236B0(0, 0, 0, 0, 0xFFu);
    swift_release();
    sub_1DE9330D4((uint64_t)&v34, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
    sub_1DE9330D4((uint64_t)&v37, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
    sub_1DEBFF970((uint64_t)v5);
    swift_release();
    return swift_release();
  }
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6732B4()
{
  sub_1DEB28744(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_1DEB287CC(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1DF67330C()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF673388()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6733F0()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF673468@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1DF6734C8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1936154996;
  if (!*v1) {
    uint64_t v2 = 0x73656C6369747261;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DF673500(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF2A2450(*a1, *a2);
}

uint64_t sub_1DF67350C()
{
  return sub_1DFDFE1D0();
}

uint64_t sub_1DF67356C()
{
  return sub_1DFDFE180();
}

void sub_1DF6735BC(void *a1@<X8>)
{
  *a1 = &unk_1F3A69CE0;
}

uint64_t sub_1DF6735CC()
{
  if (*v0) {
    return 1936154964;
  }
  else {
    return 0x73656C6369747241;
  }
}

unint64_t sub_1DF673604()
{
  unint64_t result = qword_1EAC2F418;
  if (!qword_1EAC2F418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F418);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchMoreFeedGroupKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF673724);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMoreFeedGroupKind()
{
  return &type metadata for SearchMoreFeedGroupKind;
}

unint64_t sub_1DF673760()
{
  unint64_t result = qword_1EAC2F420;
  if (!qword_1EAC2F420)
  {
    sub_1DF6737B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F420);
  }
  return result;
}

void sub_1DF6737B8()
{
  if (!qword_1EAC2F428)
  {
    unint64_t v0 = sub_1DFDFE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F428);
    }
  }
}

uint64_t sub_1DF673810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF673824);
}

uint64_t sub_1DF673824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF673890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6738A4);
}

uint64_t sub_1DF6738A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1DF673914@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v16 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF673DB4(0, &qword_1EBAD1C28, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF673D60();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v12 = v14;
    uint64_t v11 = v15;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v16, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF673B5C(uint64_t a1)
{
  unint64_t v2 = sub_1DF673D60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF673B98(uint64_t a1)
{
  unint64_t v2 = sub_1DF673D60();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF673BD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF673914(a1, a2);
}

uint64_t sub_1DF673BEC(void *a1)
{
  sub_1DF673DB4(0, &qword_1EBACBD20, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF673D60();
  sub_1DFE001A0();
  sub_1DFDFAA20();
  sub_1DE9CB07C(&qword_1EBABA3B0);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DF673D60()
{
  unint64_t result = qword_1EBAD1420;
  if (!qword_1EBAD1420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD1420);
  }
  return result;
}

void sub_1DF673DB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF673D60();
    unint64_t v7 = a3(a1, &type metadata for SavedStoriesTodayFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SavedStoriesTodayFeedGroupConfigData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF673EB4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SavedStoriesTodayFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SavedStoriesTodayFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF673EF0()
{
  unint64_t result = qword_1EAC2F430;
  if (!qword_1EAC2F430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F430);
  }
  return result;
}

unint64_t sub_1DF673F48()
{
  unint64_t result = qword_1EBAD1430;
  if (!qword_1EBAD1430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD1430);
  }
  return result;
}

unint64_t sub_1DF673FA0()
{
  unint64_t result = qword_1EBAD1428;
  if (!qword_1EBAD1428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD1428);
  }
  return result;
}

uint64_t TagModel.identifier.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  uint64_t v2 = sub_1DFDFDD20();

  return v2;
}

uint64_t TagModel.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  int v3 = *(void **)(v1 + 16);
  id v4 = objc_msgSend(v3, sel_identifier, 0xD000000000000013, 0x80000001DFEE9FF0);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1CB10]);
  unint64_t v6 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithString_, v6);

  if (v7)
  {
    sub_1DFDFDE30();
    uint64_t v8 = sub_1DFDFF270();
    swift_bridgeObjectRelease();
    if (v8)
    {
      id v9 = objc_msgSend(v3, sel_name);
      sub_1DFDFDD20();

      sub_1DFDF5730();
      uint64_t v10 = sub_1DFDF5740();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
      uint64_t v12 = v10;
      uint64_t v13 = a1;
      uint64_t v14 = 0;
      goto LABEL_6;
    }
  }
  uint64_t v15 = sub_1DFDF5740();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v12 = v15;
  uint64_t v13 = a1;
  uint64_t v14 = 1;
LABEL_6:
  return v11(v13, v14, 1, v12);
}

uint64_t sub_1DF67424C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_asSports);
  if (v2
    && (unint64_t v3 = (unint64_t)objc_msgSend(v2, sel_sportsLeagueType),
        swift_unknownObjectRelease(),
        (v3 & 0xFFFFFFFFFFFFFFFELL) == 2))
  {
    id v4 = objc_msgSend(v1, sel_asSports);
    uint64_t v5 = (uint64_t)v4;
    if (v4)
    {
      id v6 = objc_msgSend(v4, sel_sportsSecondaryName);
      swift_unknownObjectRelease();
      if (v6)
      {
        uint64_t v7 = sub_1DFDFDD20();
LABEL_10:
        uint64_t v5 = v7;

        return v5;
      }
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1DF67441C();
    if (!v9)
    {
      if ((*(unsigned char *)(v0 + 27) & 0x81) == 1)
      {
        type metadata accessor for Localized();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        uint64_t v7 = sub_1DFDE6ED0();
        goto LABEL_10;
      }
      return 0;
    }
    return v8;
  }
  return v5;
}

uint64_t sub_1DF6743E0(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0) {
      return 0;
    }
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t sub_1DF67441C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_asSports);
  if (!v1) {
    return 0;
  }
  int v2 = v1;
  if (((unint64_t)objc_msgSend(v1, sel_sportsLeagueType) & 0xFFFFFFFFFFFFFFFELL) != 2)
  {
    switch((unint64_t)objc_msgSend(v2, sel_sportsType))
    {
      case 1uLL:
      case 7uLL:
        id v3 = objc_msgSend(v2, sel_sportsSecondaryName);
        if (!v3) {
          goto LABEL_6;
        }
        goto LABEL_4;
      default:
        goto LABEL_6;
    }
  }
  id v3 = objc_msgSend(v2, sel_sportsSecondaryName);
  if (!v3)
  {
LABEL_6:
    swift_unknownObjectRelease();
    return 0;
  }
LABEL_4:
  id v4 = v3;
  uint64_t v5 = sub_1DFDFDD20();

  swift_unknownObjectRelease();
  return v5;
}

uint64_t TagModel.deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TagModel.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF6745C0(void *a1, void *a2)
{
  return static TagModel.== infix(_:_:)(*a1, *a2) & 1;
}

BOOL sub_1DF6745E4(uint64_t *a1, uint64_t *a2)
{
  return _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_1DF6745F0(uint64_t *a1, uint64_t *a2)
{
  return !_s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(*a2, *a1);
}

BOOL sub_1DF67461C(uint64_t *a1, uint64_t *a2)
{
  return !_s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_1DF674644(uint64_t *a1, uint64_t *a2)
{
  return _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(*a2, *a1);
}

uint64_t sub_1DF674654@<X0>(uint64_t a1@<X8>)
{
  return TagModel.dragItem.getter(a1);
}

uint64_t TagModel.description.getter()
{
  sub_1DFDFF9B0();
  sub_1DFDFDE90();
  id v1 = *(void **)(v0 + 16);
  sub_1DEABCEB0();
  sub_1DFDFFB10();
  sub_1DFDFDE90();
  id v2 = objc_msgSend(v1, sel_name);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFFB10();
  sub_1DFDFDE90();
  sub_1DFDFFB10();
  sub_1DFDFDE90();
  sub_1DF674CC4();
  sub_1DFDFDD90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFFB10();
  sub_1DFDFDE90();
  sub_1DF674D1C();
  swift_bridgeObjectRetain();
  sub_1DFDFDD90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return 0;
}

uint64_t sub_1DF674924()
{
  return TagModel.description.getter();
}

BOOL _s7NewsUI28TagModelC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(*(id *)(a1 + 16), sel_identifier);
  uint64_t v5 = sub_1DFDFDD20();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(*(id *)(a2 + 16), sel_identifier);
  uint64_t v9 = sub_1DFDFDD20();
  uint64_t v11 = v10;

  if (v5 == v9 && v7 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v13 & 1) == 0) {
      return result;
    }
  }
  if (*(unsigned __int8 *)(a1 + 24) != *(unsigned __int8 *)(a2 + 24)
    || *(unsigned __int8 *)(a1 + 25) != *(unsigned __int8 *)(a2 + 25))
  {
    return 0;
  }
  int v15 = *(unsigned __int8 *)(a1 + 26);
  int v16 = *(unsigned __int8 *)(a2 + 26);
  if (v15 == 2)
  {
    if (v16 != 2) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    BOOL v17 = (v15 & 1) == 0;
    if (v16 == 2 || ((v17 ^ v16) & 1) == 0) {
      return result;
    }
  }
  char v18 = *(unsigned char *)(a1 + 27);
  int v19 = *(unsigned __int8 *)(a2 + 27);
  if (v18 < 0)
  {
    if ((v19 & 0x80) == 0 || ((v18 & 1) == 0) == (v19 & 1)) {
      return 0;
    }
  }
  else if ((v19 & 0x80) != 0 || ((((v18 & 1) == 0) ^ v19) & 1) == 0)
  {
    return 0;
  }
  uint64_t v20 = *(void *)(a1 + 32);
  uint64_t v21 = *(void *)(a2 + 32);
  BOOL result = (v20 | v21) == 0;
  if (v20)
  {
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = swift_bridgeObjectRetain();
      char v23 = sub_1DF8BEF3C(v22, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v23 & 1;
    }
  }
  return result;
}

BOOL _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 16);
  id v4 = objc_msgSend(v3, sel_name);
  sub_1DFDFDD20();

  sub_1DFDFDDD0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_identifier);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a2 + 16);
  id v7 = objc_msgSend(v6, sel_name);
  sub_1DFDFDD20();

  sub_1DFDFDDD0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_identifier);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DEA4DB08();
  uint64_t v9 = sub_1DFDFF720();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 == -1;
}

void sub_1DF674CC4()
{
  if (!qword_1EBAEA3E8)
  {
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA3E8);
    }
  }
}

void sub_1DF674D1C()
{
  if (!qword_1EBAEA410)
  {
    sub_1DF351678();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA410);
    }
  }
}

uint64_t sub_1DF674D74(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1DF674E38((unint64_t *)&unk_1EBAF30D0, a2, (void (*)(uint64_t))type metadata accessor for TagModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for TagModel()
{
  return self;
}

uint64_t sub_1DF674DF0(uint64_t a1, uint64_t a2)
{
  return sub_1DF674E38((unint64_t *)&unk_1EBAF30E0, a2, (void (*)(uint64_t))type metadata accessor for TagModel);
}

uint64_t sub_1DF674E38(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for TagModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TagModel);
}

uint64_t getEnumTagSinglePayload for TagSubscription(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7F) {
    goto LABEL_17;
  }
  if (a2 + 129 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 129) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 129;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for TagSubscription(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 129 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 129) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7E)
  {
    unsigned int v6 = ((a2 - 127) >> 8) + 1;
    *uint64_t result = a2 - 127;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF67500CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
        break;
    }
  }
  return result;
}

uint64_t sub_1DF675034(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_1DF675040(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_1DF675050(unsigned char *result, char a2)
{
  *uint64_t result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for TagSubscription()
{
  return &type metadata for TagSubscription;
}

unsigned char *storeEnumTagSinglePayload for NotificationSetting(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF675140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSetting()
{
  return &type metadata for NotificationSetting;
}

unsigned char *storeEnumTagSinglePayload for TagSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF675244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagSource()
{
  return &type metadata for TagSource;
}

unint64_t sub_1DF675280()
{
  unint64_t result = qword_1EAC2F440;
  if (!qword_1EAC2F440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F440);
  }
  return result;
}

unint64_t sub_1DF6752D8()
{
  unint64_t result = qword_1EAC2F448;
  if (!qword_1EAC2F448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F448);
  }
  return result;
}

uint64_t sub_1DF67532C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF675340);
}

uint64_t sub_1DF675340(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 217)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x27) {
      return v4 - 38;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1DFDFAA20();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF6753E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6753FC);
}

unsigned char *sub_1DF6753FC(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 217)
  {
    *unint64_t result = a2 + 38;
  }
  else
  {
    uint64_t v7 = sub_1DFDFAA20();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsFavoritesTagFeedGroupConfigData()
{
  uint64_t result = qword_1EBAE73B0;
  if (!qword_1EBAE73B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF6754EC()
{
  uint64_t result = sub_1DFDFAA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF675584@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL v17 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF675AB8(0, &qword_1EBAEABB8, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF675A64();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v12 = v16;
    uint64_t v11 = v17;
    char v19 = 1;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *uint64_t v11 = 12;
    uint64_t v13 = type metadata accessor for SportsFavoritesTagFeedGroupConfigData();
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v11[*(int *)(v13 + 20)], v18, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF6757EC(void *a1)
{
  int v3 = v1;
  sub_1DF675AB8(0, &qword_1EAC2F450, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF675A64();
  sub_1DFE001A0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1DEAF3AE0();
  sub_1DFDFFE80();
  if (!v2)
  {
    type metadata accessor for SportsFavoritesTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1DFDFAA20();
    sub_1DE9CB07C(&qword_1EBABA3B0);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF6759BC(uint64_t a1)
{
  unint64_t v2 = sub_1DF675A64();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF6759F8(uint64_t a1)
{
  unint64_t v2 = sub_1DF675A64();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF675A34@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DF675584(a1, a2);
}

uint64_t sub_1DF675A4C(void *a1)
{
  return sub_1DF6757EC(a1);
}

unint64_t sub_1DF675A64()
{
  unint64_t result = qword_1EBAE7380;
  if (!qword_1EBAE7380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE7380);
  }
  return result;
}

void sub_1DF675AB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF675A64();
    unint64_t v7 = a3(a1, &type metadata for SportsFavoritesTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsFavoritesTagFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF675BE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsFavoritesTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SportsFavoritesTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF675C24()
{
  unint64_t result = qword_1EAC2F458;
  if (!qword_1EAC2F458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F458);
  }
  return result;
}

unint64_t sub_1DF675C7C()
{
  unint64_t result = qword_1EBAE7390;
  if (!qword_1EBAE7390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE7390);
  }
  return result;
}

unint64_t sub_1DF675CD4()
{
  unint64_t result = qword_1EBAE7388;
  if (!qword_1EBAE7388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE7388);
  }
  return result;
}

uint64_t sub_1DF675D28(void *a1)
{
  sub_1DEB28694();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    unint64_t v7 = v6 | 0xB000000000000002;
    uint64_t v8 = sub_1DFDEAB40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    id v9 = a1;
    sub_1DFBB5128(v7, 0, (uint64_t)v4, (uint64_t)v13, 0, 0, 0, 0, (uint64_t)v11);
    swift_release();
    sub_1DE932EE8((uint64_t)v11, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460);
    sub_1DE932EE8((uint64_t)v13, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0);
    sub_1DEBFF970((uint64_t)v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF675ED4()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF675F0C(void *a1)
{
  return sub_1DF675D28(a1);
}

uint64_t sub_1DF675F30()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for WebViewerTracker()
{
  return self;
}

id sub_1DF675F8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDF4C30();
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + 24);
  if (v6)
  {
    id v7 = *(id *)(v1 + 24);
  }
  else
  {
    uint64_t v8 = *(void **)(v1 + 16);
    (*(void (**)(char *, void))(v3 + 104))(v5, *MEMORY[0x1E4FAD608]);
    objc_allocWithZone((Class)sub_1DFDF4500());
    id v9 = v8;
    uint64_t v10 = (void *)sub_1DFDF44E0();
    uint64_t v11 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = v10;
    id v7 = v10;

    uint64_t v6 = 0;
  }
  id v12 = v6;
  return v7;
}

unint64_t sub_1DF6760A4()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 80), *(void *)(v0 + 104));
  id v1 = objc_msgSend(objc_msgSend(*(id *)(v0 + 72), sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v2 = sub_1DFDFDD20();
  uint64_t v4 = v3;

  uint64_t v5 = sub_1DF754288(v2, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = *__swift_project_boxed_opaque_existential_1((void *)(v0 + 80), *(void *)(v0 + 104));
  unint64_t result = swift_beginAccess();
  uint64_t v8 = *(void *)(v6 + 24);
  if (!*(void *)(v8 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  char v9 = 0;
  char v10 = 0;
  int64_t v11 = 0;
  id v12 = v5 + 56;
  uint64_t v13 = 1 << v5[32];
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *((void *)v5 + 7);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
LABEL_6:
  char v17 = v9;
  while (1)
  {
    char v19 = v10;
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v11 << 6);
      goto LABEL_25;
    }
    int64_t v22 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v22 >= v16) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)&v12[8 * v22];
    ++v11;
    if (!v23)
    {
      int64_t v11 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)&v12[8 * v11];
      if (!v23)
      {
        int64_t v11 = v22 + 2;
        if (v22 + 2 >= v16) {
          goto LABEL_34;
        }
        unint64_t v23 = *(void *)&v12[8 * v11];
        if (!v23) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v11 << 6);
LABEL_25:
    uint64_t v25 = *((void *)v5 + 6) + 16 * v21;
    unint64_t result = *(void *)v25;
    int v26 = *(unsigned __int8 *)(v25 + 8);
    if ((v26 - 1) < 3)
    {
      char v18 = 1;
      goto LABEL_8;
    }
    if (!*(unsigned char *)(v25 + 8))
    {
      char v18 = result & 1;
LABEL_8:
      unint64_t result = sub_1DEDF43C4(result, v26, v8);
      if (result) {
        goto LABEL_9;
      }
      if (v18)
      {
        char v10 = 0;
        char v9 = 1;
        if ((v19 & 1) == 0) {
          goto LABEL_6;
        }
      }
      else
      {
LABEL_5:
        char v9 = 0;
        char v10 = 1;
        if ((v17 & 1) == 0) {
          goto LABEL_6;
        }
      }
      swift_release();
LABEL_39:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v29 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v27 = sub_1DFDE6ED0();

      return v27;
    }
    if (result >= 2)
    {
      unint64_t result = sub_1DEDF43C4(result, 4, v8);
      if ((result & 1) == 0) {
        goto LABEL_5;
      }
    }
LABEL_9:
    char v10 = 0;
    if (v19) {
      goto LABEL_5;
    }
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v16)
  {
LABEL_34:
    swift_release();
    if (v19 & 1) != 0 || (v17) {
      goto LABEL_39;
    }
    return 0;
  }
  unint64_t v23 = *(void *)&v12[8 * v24];
  int64_t v11 = v24;
  if (v23) {
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v11 >= v16) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)&v12[8 * v11];
    ++v24;
    if (v23) {
      goto LABEL_24;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1DF6764AC()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 10));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagFeedViewerPuzzleFullArchiveTitleViewProvider()
{
  return self;
}

id sub_1DF676528()
{
  return sub_1DF675F8C();
}

uint64_t sub_1DF67654C(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(char **)(v3 + 16);
  id v5 = sub_1DF675F8C();
  uint64_t v6 = *(void *)(v3 + 72);
  id v7 = objc_msgSend(a1, sel_navigationBar);
  unint64_t v8 = sub_1DF6760A4();
  sub_1DF874160(v4, v6, v7, v8, v9);

  return swift_bridgeObjectRelease();
}

uint64_t *sub_1DF6765E8(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *result;
  if (*result) {
    BOOL v4 = a2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    swift_unknownObjectRetain();
    if (sub_1DFDF2D50())
    {
      id v7 = (void *)swift_allocObject();
      _OWORD v7[2] = v3;
      _OWORD v7[3] = a2;
      v7[4] = a3;
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      sub_1DFDE87E0();
      swift_unknownObjectRelease();
      swift_release();
      return (uint64_t *)swift_release();
    }
    else
    {
      return (uint64_t *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1DF6766F8(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v66 = a4;
  unint64_t v79 = a3;
  uint64_t v97 = a1;
  uint64_t v69 = sub_1DFDEB9A0();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v67 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1DFDEA280();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v63 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF677518(0, &qword_1EBAC03F0, MEMORY[0x1E4F7C2D8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v83 = (char *)&v62 - v9;
  uint64_t v10 = sub_1DFDEB700();
  uint64_t v84 = *(void *)(v10 - 8);
  uint64_t v85 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1DFDEAF20();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v80 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF677518(0, (unint64_t *)&unk_1EAC2A8F0, MEMORY[0x1E4FACB80], v7);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v75 = (char *)&v62 - v14;
  uint64_t v15 = sub_1DFDEA3F0();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v74 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1DFDEA080();
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v76 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1DFDEBCD0();
  uint64_t v73 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v71 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DFDEA260();
  uint64_t v95 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v92 = a2;
  uint64_t ObjectType = swift_getObjectType();
  sub_1DFDFEF90();
  sub_1DF677518(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v93 = v22;
  uint64_t v23 = sub_1DFDE8410();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = (v25 + 32) & ~v25;
  uint64_t v27 = v26 + *(void *)(v24 + 72);
  uint64_t v96 = v25 | 7;
  uint64_t v28 = swift_allocObject();
  long long v98 = xmmword_1DFE0B250;
  *(_OWORD *)(v28 + 16) = xmmword_1DFE0B250;
  unsigned int v91 = *MEMORY[0x1E4F4AA18];
  id v29 = *(void (**)(uint64_t))(v24 + 104);
  v29(v28 + v26);
  sub_1DF67757C((unint64_t *)&unk_1EBAA7180, MEMORY[0x1E4F7B338]);
  unint64_t v88 = (unint64_t)"Filtering by play state";
  unint64_t v70 = 0x80000001DFEFF760;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v21, v19);
  uint64_t v30 = v71;
  sub_1DFDFEFC0();
  uint64_t v95 = v27;
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = v98;
  uint64_t v86 = v26;
  uint64_t v87 = v24 + 104;
  uint64_t v32 = v91;
  uint64_t v94 = v23;
  uint64_t v89 = v29;
  ((void (*)(uint64_t, void, uint64_t))v29)(v31 + v26, v91, v23);
  sub_1DF67757C((unint64_t *)&unk_1EBAA7320, MEMORY[0x1E4F7C850]);
  uint64_t v33 = v72;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v30, v33);
  if (v79)
  {
    long long v34 = v75;
    sub_1DFDF2D80();
    uint64_t v35 = sub_1DFDF33E0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
  else
  {
    uint64_t v36 = sub_1DFDF33E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v75, 1, 1, v36);
  }
  sub_1DFDEA400();
  long long v37 = v76;
  sub_1DFDEA070();
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v98;
  uint64_t v39 = v86;
  long long v40 = (void (*)(uint64_t, uint64_t, uint64_t))v89;
  ((void (*)(uint64_t, uint64_t, uint64_t))v89)(v38 + v86, v32, v94);
  sub_1DF67757C((unint64_t *)&unk_1EAC2A900, MEMORY[0x1E4F7B1B0]);
  unint64_t v41 = v88 | 0x8000000000000000;
  uint64_t v42 = v78;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  uint64_t v43 = v37;
  unint64_t v44 = v40;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v43, v42);
  sub_1DFDFDD20();
  char v45 = v80;
  sub_1DFDEAF10();
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v98;
  v44(v46 + v39, v32, v94);
  sub_1DF67757C(&qword_1EAC2F460, MEMORY[0x1E4F7BCD8]);
  unint64_t v79 = v41;
  uint64_t v47 = v82;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v45, v47);
  uint64_t v48 = (uint64_t)v83;
  sub_1DFDFEFB0();
  uint64_t v50 = v84;
  uint64_t v49 = v85;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v48, 1, v85) == 1)
  {
    sub_1DF14DA44(v48);
  }
  else
  {
    char v51 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v62, v48, v49);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = v98;
    v44(v52 + v39, v91, v94);
    sub_1DF67757C(&qword_1EAC22960, MEMORY[0x1E4F7C2D8]);
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v49);
  }
  if (objc_msgSend(v92, sel_sourceChannel))
  {
    uint64_t v53 = v63;
    sub_1DFDEB250();
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = v98;
    uint64_t v55 = v54 + v39;
    uint64_t v56 = v94;
    v44(v55, v91, v94);
    sub_1DF67757C((unint64_t *)&unk_1EBAA71A0, MEMORY[0x1E4F7B368]);
    id v92 = (id)(v88 | 0x8000000000000000);
    uint64_t v57 = v65;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v53, v57);
    uint64_t v58 = v67;
    sub_1DFDEB240();
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v98;
    ((void (*)(uint64_t, void, uint64_t))v89)(v59 + v86, v91, v56);
    sub_1DF67757C((unint64_t *)&unk_1EBAA7300, MEMORY[0x1E4F7C5A0]);
    uint64_t v60 = v69;
    sub_1DFDE8390();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v58, v60);
  }
  sub_1DFDEAFD0();
  sub_1DF67757C((unint64_t *)&unk_1EBAD22D0, MEMORY[0x1E4F7BDA8]);
  memset(v99, 0, sizeof(v99));
  sub_1DFDE83B0();
  return sub_1DE9E4C20((uint64_t)v99);
}

uint64_t sub_1DF6774C4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF67750C(uint64_t a1)
{
  return sub_1DF6766F8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1DF677518(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF67757C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1DF6775C4(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_showingPrefixLabel;
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v13 = v4;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_selectCategoryButton;
  uint64_t v15 = (objc_class *)sub_1DFDF1D80();
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(v15), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v16 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_onSelectCategoryButtonTap;
  sub_1DEC193E8();
  *(void *)&v13[v16] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  uint64_t v18 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_sortByButton;
  *(void *)&v13[v18] = objc_msgSend(objc_allocWithZone(v15), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v36.receiver = v13;
  v36.super_class = ObjectType;
  uint64_t v19 = (char *)objc_msgSendSuper2(&v36, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v20 = *(void *)&v19[OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_showingPrefixLabel];
  unint64_t v21 = v19;
  objc_msgSend(v21, sel_addSubview_, v20);
  uint64_t v22 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_selectCategoryButton;
  objc_msgSend(v21, sel_addSubview_, *(void *)&v21[OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_selectCategoryButton]);
  uint64_t v23 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_sortByButton;
  uint64_t v24 = *(void **)&v21[OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_sortByButton];
  objc_msgSend(v21, sel_addSubview_, v24);
  id v25 = objc_msgSend(v24, sel_imageView);
  if (v25)
  {
    uint64_t v26 = v25;
    objc_msgSend(v25, sel_setContentMode_, 4);
  }
  uint64_t v27 = *(void **)&v21[v23];
  uint64_t v28 = self;
  id v29 = v27;
  id v30 = objc_msgSend(v28, sel_mainBundle);
  sub_1DFDE6ED0();

  uint64_t v31 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setAccessibilityLabel_, v31, 0x80000001DFEF5370);

  uint64_t v32 = *(void **)&v21[v22];
  id v33 = *(id *)&v21[OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_onSelectCategoryButtonTap];
  id v34 = v32;
  sub_1DFDF50A0();

  return v21;
}

uint64_t type metadata accessor for MagazineCatalogSectionHeaderView()
{
  return self;
}

void sub_1DF677974()
{
  uint64_t v0 = (void *)sub_1DFDF5060();
}

void sub_1DF6779B4()
{
  sub_1DF677A40(&qword_1EAC2CC20);
  JUMPOUT(0x1E01E4080);
}

uint64_t sub_1DF677A0C()
{
  return sub_1DF677A40(&qword_1EAC2F488);
}

uint64_t sub_1DF677A40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MagazineCatalogSectionHeaderView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF677A80()
{
  uint64_t v1 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_showingPrefixLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_selectCategoryButton;
  uint64_t v3 = (objc_class *)sub_1DFDF1D80();
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_onSelectCategoryButtonTap;
  sub_1DEC193E8();
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC7NewsUI232MagazineCatalogSectionHeaderView_sortByButton;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DFDFFBB0();
  __break(1u);
}

void *initializeBufferWithCopyOfBuffer for TagFeedCoverViewStyler(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for TagFeedCoverViewStyler(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

void *assignWithCopy for TagFeedCoverViewStyler(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[2];
  unint64_t v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for TagFeedCoverViewStyler(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for TagFeedCoverViewStyler()
{
  return &type metadata for TagFeedCoverViewStyler;
}

id sub_1DF677CD0()
{
  return *(id *)(v0 + 8);
}

id sub_1DF677CD8()
{
  return *(id *)(v0 + 16);
}

void *sub_1DF677CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1DEA9B358(0, 3, 0);
  uint64_t v5 = v23;
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v23 + 16);
  unint64_t v6 = *(void *)(v23 + 24);
  if (v7 >= v6 >> 1)
  {
    sub_1DEA9B358(v6 > 1, v7 + 1, 1);
    uint64_t v5 = v23;
  }
  *(void *)(v5 + 16) = v7 + 1;
  uint64_t v8 = v5 + 16 * v7;
  *(void *)(v8 + 32) = 47;
  *(void *)(v8 + 40) = 0xE100000000000000;
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)(v5 + 16);
  unint64_t v9 = *(void *)(v5 + 24);
  if (v10 >= v9 >> 1) {
    sub_1DEA9B358(v9 > 1, v10 + 1, 1);
  }
  *(void *)(v5 + 16) = v10 + 1;
  uint64_t v11 = v5 + 16 * v10;
  *(void *)(v11 + 32) = 47;
  *(void *)(v11 + 40) = 0xE100000000000000;
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  unint64_t v13 = *(void *)(v5 + 16);
  unint64_t v12 = *(void *)(v5 + 24);
  if (v13 >= v12 >> 1) {
    sub_1DEA9B358(v12 > 1, v13 + 1, 1);
  }
  *(void *)(v5 + 16) = v13 + 1;
  uint64_t v14 = v5 + 16 * v13;
  *(void *)(v14 + 32) = 47;
  *(void *)(v14 + 40) = 0xE100000000000000;
  sub_1DED4CCD8(0, (unint64_t *)&unk_1EBAEAD80, MEMORY[0x1E4FAAC40], MEMORY[0x1E4FBBE00]);
  uint64_t v15 = *(void *)(sub_1DFDED4D0() - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DFE0B250;
  uint64_t v18 = (void *)(v17 + v16);
  *uint64_t v18 = 0x6472616F626E6FLL;
  v18[1] = 0xE700000000000000;
  (*(void (**)(void))(v15 + 104))();
  sub_1DFA60908(MEMORY[0x1E4FBC860]);
  uint64_t v19 = sub_1DFDED510();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3[2] = v19;
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = a3;
  return v3;
}

uint64_t sub_1DF6780B8(uint64_t a1)
{
  sub_1DED4CCD8(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  char v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  long long v40 = (char *)&v40 - v5;
  uint64_t v6 = sub_1DFDED140();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDE7220();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDED180();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v40 - v17;
  sub_1DED4CCD8(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  uint64_t v44 = a1;
  sub_1DFDED420();
  sub_1DFDED130();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v18, v12);
  uint64_t v20 = sub_1DFDE70F0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!*(void *)(v20 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v21 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v21 > 2) {
    return 0;
  }
  uint64_t v22 = v44;
  sub_1DFDED420();
  uint64_t v23 = v41;
  sub_1DFDED160();
  v19(v16, v12);
  uint64_t v24 = sub_1DFDED150();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v43);
  uint64_t v27 = (uint64_t)v45;
  if (!v26) {
    goto LABEL_17;
  }
  if (v24 == 0x65726F666562 && v26 == 0xE600000000000000)
  {
    if (v21) {
      goto LABEL_7;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    char v29 = 0;
    goto LABEL_18;
  }
  char v30 = sub_1DFDFFF50();
  if (!v21 && (v30 & 1) != 0) {
    goto LABEL_13;
  }
  if (v24 != 0x7265746661 || v26 != 0xE500000000000000)
  {
LABEL_7:
    char v28 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if ((6u >> v21) & 1) == 0 && (v28) {
      goto LABEL_9;
    }
LABEL_17:
    char v29 = 2;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_17;
  }
LABEL_9:
  char v29 = 1;
LABEL_18:
  uint64_t v31 = sub_1DF1B283C(v22);
  char v32 = sub_1DEF974DC();
  uint64_t v33 = qword_1DFE6D400[(char)v21];
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v33;
  *(void *)(v34 + 24) = v31;
  *(unsigned char *)(v34 + 32) = v29;
  uint64_t v35 = v34 | 0x6000000000000004;
  if (v32)
  {
    swift_retain();
    objc_super v36 = v31;
    uint64_t v27 = (uint64_t)v40;
    sub_1DFDED3F0();
    uint64_t v37 = sub_1DFDEAB40();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v27, 0, 1, v37);
    uint64_t v51 = 0;
    long long v49 = 0u;
    long long v50 = 0u;
    uint64_t v48 = 0;
    long long v46 = 0u;
    long long v47 = 0u;
    sub_1DFBB5128(v35, 0, v27, (uint64_t)&v49, 0, 0, 0, 0, (uint64_t)&v46);
  }
  else
  {
    objc_super v36 = v31;
    swift_retain();
    sub_1DFDED3F0();
    uint64_t v39 = sub_1DFDEAB40();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v27, 0, 1, v39);
    uint64_t v51 = 0;
    long long v49 = 0u;
    long long v50 = 0u;
    uint64_t v48 = 0;
    long long v46 = 0u;
    long long v47 = 0u;
    sub_1DFBB5748(v35, 0, v27, (uint64_t)&v49, 0, 0, (uint64_t)&v46);
  }
  swift_release();

  sub_1DE932F44((uint64_t)&v46, (uint64_t)&qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0], (uint64_t (*)(void))sub_1DE9B31FC);
  sub_1DE932F44((uint64_t)&v49, (uint64_t)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18], (uint64_t (*)(void))sub_1DE9B31FC);
  sub_1DE932F44(v27, (uint64_t)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DED4CCD8);
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_1DF678A38()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MySportsURLHandler()
{
  return self;
}

uint64_t sub_1DF678AAC(uint64_t a1)
{
  return sub_1DF6780B8(a1) & 1;
}

uint64_t sub_1DF678AD4()
{
  return swift_deallocObject();
}

uint64_t sub_1DF678B0C()
{
  swift_unknownObjectRelease();
  sub_1DEABEEF0(*(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExplicitContentRestrictionAlertPresenter()
{
  return self;
}

uint64_t sub_1DF678B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = *(void *)(v7 + 24);
  *(void *)(v7 + 24) = sub_1DE981454;
  *(void *)(v7 + 32) = v8;
  swift_retain();
  sub_1DEABEEF0(v9);
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1DF678C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(v5 + 24);
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  sub_1DEABEEF0(v6);
  *a3 = v5;
  swift_retain();
  return swift_retain();
}

void sub_1DF678C68()
{
}

void sub_1DF678CC4()
{
}

void sub_1DF678D20()
{
}

void sub_1DF678D7C()
{
}

id sub_1DF678DD8(uint64_t a1)
{
  return sub_1DF678DFC(a1);
}

id sub_1DF678DFC(uint64_t a1)
{
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 24);
  if (v3)
  {
    self;
    uint64_t v4 = swift_dynamicCastObjCClass();
    swift_retain();
    v3(v4);
    sub_1DEABEEF0((uint64_t)v3);
  }
  uint64_t v5 = *(void **)(v1 + 16);
  return objc_msgSend(v5, sel_presentExplicitContentRestrictionAlertWithPresentingViewController_, a1);
}

uint64_t sub_1DF678E98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF678ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v87 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DE9413A8(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v80 = (char *)&v69 - v5;
  sub_1DE9413A8(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v3);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v88 = (char *)&v69 - v7;
  uint64_t v8 = type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v83 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9413A8(0, (unint64_t *)&qword_1EBAE95C8, (uint64_t (*)(uint64_t))sub_1DEAC0EDC, v3);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v81 = (char *)&v69 - v11;
  uint64_t v86 = type metadata accessor for AudioPlaylistFeedServiceConfig;
  uint64_t v85 = sub_1DEACB6D8;
  sub_1DF67AB60(0, (unint64_t *)&unk_1EAC2F500, (uint64_t (*)(uint64_t))type metadata accessor for AudioPlaylistFeedServiceConfig, (uint64_t (*)(void))sub_1DEACB6D8, MEMORY[0x1E4F7F258]);
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v79 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v76 = (char *)&v69 - v13;
  uint64_t v14 = sub_1DFDFB960();
  uint64_t v92 = *(void *)(v14 - 8);
  uint64_t v93 = v14;
  MEMORY[0x1F4188790](v14);
  unsigned int v91 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAC10D4(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v72 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DFDF8C20();
  uint64_t v89 = *(void *)(v18 - 8);
  uint64_t v90 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v95 = (uint64_t)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v71 = (char *)&v69 - v21;
  sub_1DEBFF418(0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v84 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBFF4C8(0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = v26;
  uint64_t v27 = type metadata accessor for ArticleListAudioPlaylistFeedGroupConfigData();
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  char v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  char v32 = (char *)&v69 - v31;
  uint64_t v33 = sub_1DFDFAA20();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v69 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v37;
  MEMORY[0x1F4188790](v35);
  uint64_t v94 = (uint64_t)&v69 - v38;
  uint64_t v70 = a1;
  uint64_t v39 = *(void *)(a1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_formatService + 24);
  uint64_t v74 = *(void *)(a1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_formatService + 32);
  uint64_t v75 = v39;
  uint64_t v77 = __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_formatService), v39);
  sub_1DEEE9450();
  sub_1DFDF73B0();
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v37, v32, v33);
  uint64_t v40 = sub_1DFDF66A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v26, 1, 1, v40);
  sub_1DEBFF44C(0);
  uint64_t v42 = v84;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v84, 1, 1, v41);
  sub_1DFDF73B0();
  uint64_t v43 = sub_1DFDFAA00();
  uint64_t v44 = *(char **)(v34 + 8);
  ((void (*)(char *, uint64_t))v44)(v30, v33);
  sub_1DF756068((uint64_t)&unk_1F3A69D98, v43);
  swift_arrayDestroy();
  uint64_t v45 = (uint64_t)v42;
  uint64_t v46 = (uint64_t)v73;
  long long v47 = v82;
  sub_1DFDFA860();
  uint64_t v48 = v72;
  swift_bridgeObjectRelease();
  sub_1DF67ABFC(v45, (uint64_t (*)(void))sub_1DEBFF418);
  sub_1DF67ABFC(v46, (uint64_t (*)(void))sub_1DEBFF4C8);
  long long v49 = v47;
  long long v50 = v71;
  uint64_t v84 = (char *)v33;
  uint64_t v82 = (char *)(v34 + 8);
  uint64_t v73 = v44;
  ((void (*)(char *, uint64_t))v44)(v49, v33);
  uint64_t v51 = (uint64_t)v50;
  sub_1DFDF7360();
  sub_1DFDF7360();
  uint64_t v52 = sub_1DFDF7CB0();
  uint64_t v53 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v48, 1, 1, v52);
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v76, v87, v79);
  uint64_t v54 = v83;
  sub_1DF67AC5C(v70 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_knobs, v83, (uint64_t (*)(void))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs);
  sub_1DEAC0EDC();
  uint64_t v56 = v55;
  uint64_t v57 = *(void *)(v55 - 8);
  uint64_t v58 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v81, v54, v55);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
  uint64_t v59 = sub_1DFDFC340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v88, 1, 1, v59);
  sub_1DF67AB60(0, &qword_1EAC2F510, (uint64_t (*)(uint64_t))v86, (uint64_t (*)(void))v85, MEMORY[0x1E4F81400]);
  swift_allocObject();
  sub_1DFDFC5D0();
  uint64_t v60 = sub_1DFDFB640();
  (*(void (**)(void))(*(void *)(v60 - 8) + 56))();
  uint64_t v61 = qword_1EBAEA6A8;
  (id)*MEMORY[0x1E4F7DFC0];
  if (v61 != -1) {
    swift_once();
  }
  (id)qword_1EBB62CB8;
  uint64_t v62 = (uint64_t)v91;
  sub_1DFDFB930();
  uint64_t v63 = v94;
  uint64_t v64 = v95;
  uint64_t v65 = sub_1DF11A6A4(v94, 0x73656C6369747261, 0xE800000000000000, v51, v95, MEMORY[0x1E4FBC860], v53, v62, v75, v74);
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v62, v93);
  sub_1DF67ABFC(v53, (uint64_t (*)(void))sub_1DEAC10D4);
  uint64_t v66 = v90;
  uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
  v67(v64, v90);
  v67(v51, v66);
  ((void (*)(uint64_t, char *))v73)(v63, v84);
  return v65;
}

uint64_t sub_1DF679A0C(uint64_t a1)
{
  uint64_t v2 = sub_1DFDF7010();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = type metadata accessor for FormatGroupFeedGroupEmitterCursor();
  uint64_t v7 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v7 + OBJC_IVAR____TtC7NewsUI233FormatGroupFeedGroupEmitterCursor_formatGroup, v5, v2);
  _OWORD v9[3] = v6;
  v9[0] = v7;
  sub_1DE9413A8(0, (unint64_t *)&qword_1EBAA79D0, (uint64_t (*)(uint64_t))sub_1DE9E4C7C, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DF679B80()
{
  type metadata accessor for FormatGroupFeedGroupEmitterCursor();
  sub_1DFDF8790();
  sub_1DFDEE090();
  uint64_t v0 = (void *)sub_1DFDEDCE0();
  sub_1DEBFF55C();
  sub_1DFDEDDF0();
  swift_release();

  uint64_t v1 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDDF0();
  swift_release();

  uint64_t v2 = (void *)sub_1DFDEDCE0();
  uint64_t v3 = sub_1DFDEDCC0();
  swift_release();
  swift_release();

  return v3;
}

uint64_t sub_1DF679CA8(uint64_t a1, unint64_t a2)
{
  sub_1DF67AB18(0);
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1DFDE7630();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ArticleListAudioPlaylistFeedGroup();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (void *)((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_3;
    }
LABEL_5:
    *uint64_t v7 = 0xD00000000000002BLL;
    v7[1] = 0x80000001DFEFFAB0;
    swift_storeEnumTagMultiPayload();
    sub_1DE9413A8(0, &qword_1EAC2F4F8, (uint64_t (*)(uint64_t))sub_1DF67AB18, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1DFDEDE90();
  }
  if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1DFDE7620();
  uint64_t v15 = sub_1DFDE7610();
  v24[1] = v5;
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = a1 + OBJC_IVAR____TtC7NewsUI233FormatGroupFeedGroupEmitterCursor_formatGroup;
  uint64_t v19 = (char *)v14 + *(int *)(v12 + 20);
  uint64_t v20 = sub_1DFDF7010();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v18, v20);
  uint64_t *v14 = v15;
  v14[1] = v17;
  *(uint64_t *)((char *)v14 + *(int *)(v12 + 24)) = a2;
  sub_1DF67AC5C((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ArticleListAudioPlaylistFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1DE9413A8(0, &qword_1EAC2F4F8, (uint64_t (*)(uint64_t))sub_1DF67AB18, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1DFDEDE90();
  sub_1DF67ABFC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ArticleListAudioPlaylistFeedGroup);
  return v21;
}

uint64_t sub_1DF67A004(uint64_t a1)
{
  return sub_1DF679CA8(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t sub_1DF67A034(uint64_t a1)
{
  sub_1DF67AB18(0);
  uint64_t v10 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EBAEA6A8 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE0B250;
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  uint64_t v13 = a1;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  uint64_t v7 = v11;
  unint64_t v6 = v12;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1DEA08668();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v6;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1DFDFF9B0();
  sub_1DFDFDE90();
  uint64_t v13 = a1;
  sub_1DFDFFB10();
  unint64_t v8 = v12;
  *uint64_t v4 = v11;
  v4[1] = v8;
  swift_storeEnumTagMultiPayload();
  sub_1DE9413A8(0, &qword_1EAC2F4F8, (uint64_t (*)(uint64_t))sub_1DF67AB18, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DF67A288()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DF67A318()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_config;
  sub_1DEEE9450();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DF67ABFC(v0 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_knobs, (uint64_t (*)(void))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_formatService);
  return swift_deallocClassInstance();
}

uint64_t sub_1DF67A3EC()
{
  return type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter();
}

uint64_t type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter()
{
  uint64_t result = qword_1EAC2F4B0;
  if (!qword_1EAC2F4B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF67A440()
{
  sub_1DEEE9450();
  if (v0 <= 0x3F)
  {
    sub_1DEAC0EDC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1DF67A514()
{
  sub_1DFDF7010();
  sub_1DFDEE090();
  unint64_t v0 = (void *)sub_1DFDEDCE0();
  sub_1DE9E4C7C();
  uint64_t v1 = sub_1DFDEDDF0();
  swift_release();

  return v1;
}

uint64_t sub_1DF67A5BC()
{
  sub_1DF306B9C();
  sub_1DFDEE090();
  unint64_t v0 = (void *)sub_1DFDEDCE0();
  sub_1DF67AB18(0);
  sub_1DFDEDDF0();
  swift_release();

  uint64_t v1 = (void *)sub_1DFDEDCE0();
  uint64_t v2 = sub_1DFDEDED0();
  swift_release();

  return v2;
}

uint64_t sub_1DF67A69C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_config;
  sub_1DEEE9450();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1DF67A714@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI240ArticleListAudioPlaylistFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs();
  a1[4] = sub_1DF67ACC4(&qword_1EAC2F518, (void (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs);
  a1[5] = sub_1DF67ACC4(&qword_1EAC2F520, (void (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DF67AC5C(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ArticleListAudioPlaylistFeedGroupKnobs);
}

uint64_t sub_1DF67A7E4()
{
  return sub_1DFDF7340();
}

uint64_t sub_1DF67A81C@<X0>(uint64_t *a1@<X8>)
{
  sub_1DE9413A8(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DEEE9450();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DE9413A8(0, &qword_1EAC2F528, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
  a1[3] = v5;
  a1[4] = sub_1DF67AD0C();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF67A96C()
{
  sub_1DF67ACC4(&qword_1EAC2F4D0, (void (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF67A9D8()
{
  return sub_1DF67ACC4(&qword_1EAC2F4C0, (void (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter);
}

uint64_t sub_1DF67AA20()
{
  return sub_1DF67ACC4(&qword_1EAC2F4C8, (void (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter);
}

uint64_t sub_1DF67AA68()
{
  return sub_1DF67ACC4(&qword_1EAC2F4D0, (void (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter);
}

uint64_t sub_1DF67AAB4()
{
  return sub_1DF67ACC4((unint64_t *)&unk_1EAC2F4D8, (void (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter);
}

uint64_t sub_1DF67AAFC()
{
  return sub_1DF679B80();
}

void sub_1DF67AB18(uint64_t a1)
{
}

void sub_1DF67AB60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1DF67ABE0()
{
  return sub_1DF678ED0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DF67ABFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF67AC5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF67ACC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF67AD0C()
{
  unint64_t result = qword_1EAC2F530;
  if (!qword_1EAC2F530)
  {
    sub_1DE9413A8(255, &qword_1EAC2F528, (uint64_t (*)(uint64_t))type metadata accessor for ArticleListAudioPlaylistFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F530);
  }
  return result;
}

uint64_t sub_1DF67AD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF67ADA8);
}

uint64_t sub_1DF67ADA8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 217)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x27) {
      return v4 - 38;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1DFDFAA20();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF67AE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF67AE64);
}

unsigned char *sub_1DF67AE64(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 217)
  {
    *unint64_t result = a2 + 38;
  }
  else
  {
    uint64_t v7 = sub_1DFDFAA20();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsEventArticlesTagFeedGroupConfigData()
{
  uint64_t result = qword_1EBAE88E8;
  if (!qword_1EBAE88E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF67AF54()
{
  uint64_t result = sub_1DFDFAA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF67AFEC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF67B520(0, &qword_1EBAEABF8, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF67B4CC();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v12 = v16;
    unint64_t v11 = v17;
    char v19 = 1;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *unint64_t v11 = 24;
    uint64_t v13 = type metadata accessor for SportsEventArticlesTagFeedGroupConfigData();
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v11[*(int *)(v13 + 20)], v18, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF67B254(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF67B520(0, &qword_1EAC2F540, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF67B4CC();
  sub_1DFE001A0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1DEAF3AE0();
  sub_1DFDFFE80();
  if (!v2)
  {
    type metadata accessor for SportsEventArticlesTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1DFDFAA20();
    sub_1DE9CB07C(&qword_1EBABA3B0);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF67B424(uint64_t a1)
{
  unint64_t v2 = sub_1DF67B4CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF67B460(uint64_t a1)
{
  unint64_t v2 = sub_1DF67B4CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF67B49C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DF67AFEC(a1, a2);
}

uint64_t sub_1DF67B4B4(void *a1)
{
  return sub_1DF67B254(a1);
}

unint64_t sub_1DF67B4CC()
{
  unint64_t result = qword_1EBAE88B8;
  if (!qword_1EBAE88B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE88B8);
  }
  return result;
}

void sub_1DF67B520(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF67B4CC();
    unint64_t v7 = a3(a1, &type metadata for SportsEventArticlesTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsEventArticlesTagFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF67B650);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEventArticlesTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SportsEventArticlesTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF67B68C()
{
  unint64_t result = qword_1EAC2F548;
  if (!qword_1EAC2F548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F548);
  }
  return result;
}

unint64_t sub_1DF67B6E4()
{
  unint64_t result = qword_1EBAE88C8;
  if (!qword_1EBAE88C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE88C8);
  }
  return result;
}

unint64_t sub_1DF67B73C()
{
  unint64_t result = qword_1EBAE88C0;
  if (!qword_1EBAE88C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE88C0);
  }
  return result;
}

uint64_t sub_1DF67B790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF67B7A4);
}

uint64_t sub_1DF67B7A4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 217)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x27) {
      return v4 - 38;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1DFDFAA20();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF67B84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF67B860);
}

unsigned char *sub_1DF67B860(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 217)
  {
    *unint64_t result = a2 + 38;
  }
  else
  {
    uint64_t v7 = sub_1DFDFAA20();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsBracketTagFeedGroupConfigData()
{
  uint64_t result = qword_1EBAE5A00;
  if (!qword_1EBAE5A00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF67B950()
{
  uint64_t result = sub_1DFDFAA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF67B9E8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF67BF1C(0, &qword_1EBAD1C20, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF67BEC8();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v12 = v16;
    unint64_t v11 = v17;
    char v19 = 1;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *unint64_t v11 = 19;
    uint64_t v13 = type metadata accessor for SportsBracketTagFeedGroupConfigData();
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v11[*(int *)(v13 + 20)], v18, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF67BC50(void *a1)
{
  int v3 = v1;
  sub_1DF67BF1C(0, &qword_1EAC2F550, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF67BEC8();
  sub_1DFE001A0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1DEAF3AE0();
  sub_1DFDFFE80();
  if (!v2)
  {
    type metadata accessor for SportsBracketTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1DFDFAA20();
    sub_1DE9CB07C(&qword_1EBABA3B0);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF67BE20(uint64_t a1)
{
  unint64_t v2 = sub_1DF67BEC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF67BE5C(uint64_t a1)
{
  unint64_t v2 = sub_1DF67BEC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF67BE98@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DF67B9E8(a1, a2);
}

uint64_t sub_1DF67BEB0(void *a1)
{
  return sub_1DF67BC50(a1);
}

unint64_t sub_1DF67BEC8()
{
  unint64_t result = qword_1EBAD13E8;
  if (!qword_1EBAD13E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD13E8);
  }
  return result;
}

void sub_1DF67BF1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF67BEC8();
    unint64_t v7 = a3(a1, &type metadata for SportsBracketTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsBracketTagFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF67C04CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsBracketTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SportsBracketTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF67C088()
{
  unint64_t result = qword_1EAC2F558;
  if (!qword_1EAC2F558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F558);
  }
  return result;
}

unint64_t sub_1DF67C0E0()
{
  unint64_t result = qword_1EBAD13F8;
  if (!qword_1EBAD13F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD13F8);
  }
  return result;
}

unint64_t sub_1DF67C138()
{
  unint64_t result = qword_1EBAD13F0;
  if (!qword_1EBAD13F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD13F0);
  }
  return result;
}

uint64_t *sub_1DF67C18C()
{
  if (qword_1EBAC0768 != -1) {
    swift_once();
  }
  return &qword_1EBB62900;
}

uint64_t *sub_1DF67C1D8()
{
  if (qword_1EBAEA6D8 != -1) {
    swift_once();
  }
  return &qword_1EBB63308;
}

uint64_t sub_1DF67C224()
{
  if (qword_1EBAD2E18 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DFDF01D0();
  return __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62BA0);
}

uint64_t *sub_1DF67C288()
{
  if (qword_1EBABE0A8 != -1) {
    swift_once();
  }
  return &qword_1EBB62650;
}

uint64_t *sub_1DF67C2D4()
{
  if (qword_1EAC1D448 != -1) {
    swift_once();
  }
  return &qword_1EACDFD60;
}

uint64_t sub_1DF67C320()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EACDFD38 = result;
  return result;
}

uint64_t sub_1DF67C3E8()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB62648 = result;
  return result;
}

uint64_t sub_1DF67C4C0()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB62CB0 = result;
  return result;
}

uint64_t sub_1DF67C598()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB62CB8 = result;
  return result;
}

uint64_t sub_1DF67C670()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB634D0 = result;
  return result;
}

uint64_t sub_1DF67C740()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB62DA8 = result;
  return result;
}

uint64_t sub_1DF67C81C()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB63530 = result;
  return result;
}

uint64_t sub_1DF67C8F4()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB628F8 = result;
  return result;
}

uint64_t sub_1DF67C9C8()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EACDFD40 = result;
  return result;
}

uint64_t sub_1DF67CAA0()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EACDFD48 = result;
  return result;
}

uint64_t sub_1DF67CB78()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB62880 = result;
  return result;
}

uint64_t sub_1DF67CC4C()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB62910 = result;
  return result;
}

id sub_1DF67CD20()
{
  qword_1EBB62650 = *MEMORY[0x1E4F7DF78];
  return (id)qword_1EBB62650;
}

uint64_t sub_1DF67CD38()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB62DA0 = result;
  return result;
}

uint64_t sub_1DF67CE10()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB62CC0 = result;
  return result;
}

uint64_t sub_1DF67CEE8()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EACDFD50 = result;
  return result;
}

uint64_t sub_1DF67CFBC()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EACDFD58 = result;
  return result;
}

uint64_t sub_1DF67D098()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EACDFD60 = result;
  return result;
}

uint64_t sub_1DF67D174()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB634C8 = result;
  return result;
}

uint64_t sub_1DF67D24C()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EACDFD68 = result;
  return result;
}

uint64_t sub_1DF67D328()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB634B0 = result;
  return result;
}

uint64_t sub_1DF67D404()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EACDFD70 = result;
  return result;
}

uint64_t sub_1DF67D4DC()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB634C0 = result;
  return result;
}

uint64_t sub_1DF67D5B4()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EACDFD78 = result;
  return result;
}

uint64_t sub_1DF67D68C()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DFDFDD20();
  }
  sub_1DE9B646C();
  uint64_t result = sub_1DFDFF600();
  qword_1EBB634B8 = result;
  return result;
}

uint64_t sub_1DF67D764()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFD80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFD80);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67D850()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFD98);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFD98);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67D940()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB63470);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB63470);
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67D9C4()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFDB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFDB0);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67DAB8()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB62B70);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62B70);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67DBAC()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFDC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFDC8);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67DCA0()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB62BA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62BA0);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67DD80()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB633E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB633E8);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67DE6C()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFDE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFDE0);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67DF58(uint64_t a1)
{
  return sub_1DF67DFA0(a1, qword_1EBB62930);
}

uint64_t sub_1DF67DF7C(uint64_t a1)
{
  return sub_1DF67DFA0(a1, qword_1EACDFDF8);
}

uint64_t sub_1DF67DFA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  id v4 = objc_msgSend(self, sel_mainBundle);
  id v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E090()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB62A40);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62A40);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E17C()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB63458);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB63458);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E270()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFE10);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFE10);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E364()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB62BB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62BB8);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E444()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB62C00);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62C00);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E530()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB62B88);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62B88);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E620()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFE28);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFE28);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E70C()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFE40);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFE40);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E7F4()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB62BE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62BE8);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E8D8()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFE58);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFE58);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67E9C4()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EBB63400);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB63400);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67EAB4()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFE70);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFE70);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67EBA0()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFE88);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFE88);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67EC88()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFEA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFEA0);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67ED78()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFEB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFEB8);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t sub_1DF67EE6C()
{
  uint64_t v0 = sub_1DFDF01D0();
  __swift_allocate_value_buffer(v0, qword_1EACDFED0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFED0);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DFDFDD20();
  }
  return sub_1DFDF01C0();
}

uint64_t getEnumTagSinglePayload for TagFeedSectionDescriptor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x58 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 88);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 1) & 0xFFFFFFBF | ((*(void *)a1 & 1) << 6)) ^ 0x7F;
  if (v3 >= 0x57) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TagFeedSectionDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x57)
  {
    *(void *)uint64_t result = a2 - 88;
    if (a3 >= 0x58) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x58) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 6) & 1 | (2 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagFeedSectionDescriptor()
{
  return &type metadata for TagFeedSectionDescriptor;
}

uint64_t sub_1DF67F014@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v71[0] = a2;
  sub_1DF157838();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC9D34();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC5A44();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
      type metadata accessor for ArticleListTagFeedGroup();
      uint64_t v23 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v23, v71[0], (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 2uLL:
      type metadata accessor for PromotedArticleListTagFeedGroup();
      uint64_t v26 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v26, v71[0], (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 3uLL:
      type metadata accessor for WeatherTagFeedGroup();
      uint64_t v27 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v27, v71[0], (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 4uLL:
      uint64_t v28 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v28, v14);
      uint64_t v29 = v71[0];
      sub_1DFDF7520();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      uint64_t v30 = type metadata accessor for TagFeedGroup();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
    case 5uLL:
      type metadata accessor for ChannelSectionTagFeedGroup();
      uint64_t v32 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v32, v71[0], (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 6uLL:
      type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
      uint64_t v33 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v33, v71[0], (uint64_t (*)(void))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 7uLL:
      uint64_t v34 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v34, v9);
      uint64_t v35 = v71[0];
      sub_1DFDF7520();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v36 = type metadata accessor for TagFeedGroup();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    case 8uLL:
      uint64_t v37 = sub_1DFDF6D40();
      uint64_t v38 = swift_projectBox();
      uint64_t v24 = v71[0];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v71[0], v38, v37);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 9uLL:
      uint64_t v39 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v39, v4);
      sub_1DFDF7B10();
      sub_1DF67F014(v71[1]);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    case 0xAuLL:
      type metadata accessor for CuratedTagFeedGroup();
      uint64_t v40 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v40, v71[0], (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0xBuLL:
      type metadata accessor for SportsRecordTagFeedGroup();
      uint64_t v41 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v41, v71[0], (uint64_t (*)(void))type metadata accessor for SportsRecordTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0xCuLL:
      type metadata accessor for SportsNavigationTagFeedGroup();
      uint64_t v42 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v42, v71[0], (uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0xDuLL:
      type metadata accessor for SportsScheduleTagFeedGroup();
      uint64_t v43 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v43, v71[0], (uint64_t (*)(void))type metadata accessor for SportsScheduleTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0xEuLL:
      type metadata accessor for SportsTopStoriesTagFeedGroup();
      uint64_t v44 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v44, v71[0], (uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0xFuLL:
      type metadata accessor for SportsFavoritesTagFeedGroup();
      uint64_t v45 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v45, v71[0], (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x10uLL:
      type metadata accessor for SportsScoresTagFeedGroup();
      uint64_t v46 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v46, v71[0], (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x11uLL:
      type metadata accessor for SportsLinksTagFeedGroup();
      uint64_t v47 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v47, v71[0], (uint64_t (*)(void))type metadata accessor for SportsLinksTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x12uLL:
      type metadata accessor for MySportsTopicTagFeedGroup();
      uint64_t v48 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v48, v71[0], (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x13uLL:
      type metadata accessor for SportsStandingsTagFeedGroup();
      uint64_t v49 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v49, v71[0], (uint64_t (*)(void))type metadata accessor for SportsStandingsTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x14uLL:
      type metadata accessor for SportsBracketTagFeedGroup();
      uint64_t v50 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v50, v71[0], (uint64_t (*)(void))type metadata accessor for SportsBracketTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x15uLL:
      type metadata accessor for SportsBoxScoresTagFeedGroup();
      uint64_t v51 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v51, v71[0], (uint64_t (*)(void))type metadata accessor for SportsBoxScoresTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x16uLL:
      type metadata accessor for SportsEventInfoTagFeedGroup();
      uint64_t v52 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v52, v71[0], (uint64_t (*)(void))type metadata accessor for SportsEventInfoTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x17uLL:
      type metadata accessor for SportsInjuryReportsTagFeedGroup();
      uint64_t v53 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v53, v71[0], (uint64_t (*)(void))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x18uLL:
      type metadata accessor for SportsKeyPlayersTagFeedGroup();
      uint64_t v54 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v54, v71[0], (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x19uLL:
      type metadata accessor for SportsEventArticlesTagFeedGroup();
      uint64_t v55 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v55, v71[0], (uint64_t (*)(void))type metadata accessor for SportsEventArticlesTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x1AuLL:
      type metadata accessor for HighlightsTagFeedGroup();
      uint64_t v56 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v56, v71[0], (uint64_t (*)(void))type metadata accessor for HighlightsTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x1BuLL:
      type metadata accessor for ForYouTagFeedGroup();
      uint64_t v57 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v57, v71[0], (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x1CuLL:
      type metadata accessor for RecentStoriesTagFeedGroup();
      uint64_t v58 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v58, v71[0], (uint64_t (*)(void))type metadata accessor for RecentStoriesTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x1DuLL:
      type metadata accessor for DateRangeTagFeedGroup();
      uint64_t v59 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v59, v71[0], (uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x1EuLL:
      type metadata accessor for SportsOnboardingTagFeedGroup();
      uint64_t v60 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v60, v71[0], (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x1FuLL:
      type metadata accessor for SportsMastheadTagFeedGroup();
      uint64_t v61 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v61, v71[0], (uint64_t (*)(void))type metadata accessor for SportsMastheadTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x20uLL:
      type metadata accessor for SportsEventTopicTagFeedGroup();
      uint64_t v62 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v62, v71[0], (uint64_t (*)(void))type metadata accessor for SportsEventTopicTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x21uLL:
      type metadata accessor for PuzzleListTagFeedGroup();
      uint64_t v63 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v63, v71[0], (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x22uLL:
      type metadata accessor for PuzzleArchiveTagFeedGroup();
      uint64_t v64 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v64, v71[0], (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x23uLL:
      type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
      uint64_t v65 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v65, v71[0], (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x24uLL:
      type metadata accessor for PuzzleFeaturedTagFeedGroup();
      uint64_t v66 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v66, v71[0], (uint64_t (*)(void))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x25uLL:
      type metadata accessor for PuzzleFullArchiveTagFeedGroup();
      uint64_t v67 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v67, v71[0], (uint64_t (*)(void))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x26uLL:
      type metadata accessor for PuzzleScoreboardTagFeedGroup();
      uint64_t v68 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v68, v71[0], (uint64_t (*)(void))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x27uLL:
      type metadata accessor for AffinityTagFeedGroup();
      uint64_t v69 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v69, v71[0], (uint64_t (*)(void))type metadata accessor for AffinityTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
      goto LABEL_45;
    case 0x28uLL:
      type metadata accessor for SponsoredBannerTagFeedGroup();
      uint64_t v70 = swift_projectBox();
      uint64_t v24 = v71[0];
      sub_1DF68D598(v70, v71[0], (uint64_t (*)(void))type metadata accessor for SponsoredBannerTagFeedGroup);
      uint64_t v25 = type metadata accessor for TagFeedGroup();
LABEL_45:
      swift_storeEnumTagMultiPayload();
      char v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      uint64_t v21 = v24;
      uint64_t v22 = 0;
      uint64_t v20 = v25;
      break;
    default:
      uint64_t v18 = type metadata accessor for TagFeedGroup();
      char v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
      uint64_t v20 = v18;
      uint64_t v21 = v71[0];
      uint64_t v22 = 1;
      break;
  }
  return v19(v21, v22, 1, v20);
}

uint64_t sub_1DF680128@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DF157838();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D130];
      goto LABEL_42;
    case 2uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D2A8];
      goto LABEL_42;
    case 3uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D330];
      goto LABEL_42;
    case 4uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D300];
      goto LABEL_42;
    case 5uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D1E8];
      goto LABEL_42;
    case 6uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D2E0];
      goto LABEL_42;
    case 7uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D318];
      goto LABEL_42;
    case 8uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D2E8];
      goto LABEL_42;
    case 9uLL:
      uint64_t v10 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
      sub_1DFDF7B10();
      sub_1DF680128(v15[1]);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    case 0xAuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D310];
      goto LABEL_42;
    case 0xBuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D170];
      goto LABEL_42;
    case 0xCuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D270];
      goto LABEL_42;
    case 0xDuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D208];
      goto LABEL_42;
    case 0xEuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D280];
      goto LABEL_42;
    case 0x10uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D178];
      goto LABEL_42;
    case 0x11uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D150];
      goto LABEL_42;
    case 0x12uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D1B8];
      goto LABEL_42;
    case 0x13uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D238];
      goto LABEL_42;
    case 0x14uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D1D8];
      goto LABEL_42;
    case 0x15uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D228];
      goto LABEL_42;
    case 0x16uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D230];
      goto LABEL_42;
    case 0x17uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D2C0];
      goto LABEL_42;
    case 0x18uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D268];
      goto LABEL_42;
    case 0x19uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D2D8];
      goto LABEL_42;
    case 0x1AuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D108];
      goto LABEL_42;
    case 0x1BuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D1E0];
      goto LABEL_42;
    case 0x1CuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D288];
      goto LABEL_42;
    case 0x1DuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D180];
      goto LABEL_42;
    case 0x1EuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D278];
      goto LABEL_42;
    case 0x1FuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D200];
      goto LABEL_42;
    case 0x20uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D260];
      goto LABEL_42;
    case 0x21uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D120];
      goto LABEL_42;
    case 0x22uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D1C0];
      goto LABEL_42;
    case 0x23uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D2D0];
      goto LABEL_42;
    case 0x24uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D1F8];
      goto LABEL_42;
    case 0x25uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D290];
      goto LABEL_42;
    case 0x26uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D250];
      goto LABEL_42;
    case 0x27uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D338];
      goto LABEL_42;
    case 0x28uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D220];
      goto LABEL_42;
    default:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7D328];
LABEL_42:
      uint64_t v12 = *v9;
      uint64_t v13 = sub_1DFDEC600();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
      return v14(a2, v12, v13);
  }
}

uint64_t sub_1DF68054C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SponsoredBannerTagFeedGroup();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v195 = (char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AffinityTagFeedGroup();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v169 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v168 = (char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v194 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v193 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v192 = (char *)&v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v191 = (char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PuzzleListTagFeedGroup();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v190 = (char *)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SportsEventTopicTagFeedGroup();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v167 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for SportsMastheadTagFeedGroup();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v166 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v165 = (char *)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DateRangeTagFeedGroup();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v164 = (uint64_t *)((char *)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = type metadata accessor for RecentStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v163 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ForYouTagFeedGroup();
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v189 = (uint64_t *)((char *)&v147 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = type metadata accessor for HighlightsTagFeedGroup();
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v162 = (char *)&v147 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v188 = (char *)&v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v187 = (char *)&v147 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v161 = (char *)&v147 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for SportsLinksTagFeedGroup();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v160 = (char *)&v147 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for SportsEventInfoTagFeedGroup();
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v159 = (char *)&v147 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v158 = (char *)&v147 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for SportsBracketTagFeedGroup();
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v157 = (char *)&v147 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for SportsStandingsTagFeedGroup();
  MEMORY[0x1F4188790](v46 - 8);
  uint64_t v156 = (char *)&v147 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1F4188790](v154);
  uint64_t v155 = (uint64_t *)((char *)&v147 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v185 = type metadata accessor for SportsScoresTagFeedGroup();
  MEMORY[0x1F4188790](v185);
  char v186 = (uint64_t *)((char *)&v147 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v50 = type metadata accessor for SportsFavoritesTagFeedGroup();
  MEMORY[0x1F4188790](v50 - 8);
  uint64_t v184 = (char *)&v147 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v182);
  uint64_t v183 = (uint64_t *)((char *)&v147 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = type metadata accessor for SportsScheduleTagFeedGroup();
  MEMORY[0x1F4188790](v53 - 8);
  uint64_t v153 = (char *)&v147 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = type metadata accessor for SportsNavigationTagFeedGroup();
  MEMORY[0x1F4188790](v180);
  uint64_t v181 = (uint64_t *)((char *)&v147 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = type metadata accessor for SportsRecordTagFeedGroup();
  MEMORY[0x1F4188790](v56 - 8);
  uint64_t v179 = (char *)&v147 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for CuratedTagFeedGroup();
  MEMORY[0x1F4188790](v58 - 8);
  uint64_t v152 = (char *)&v147 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF157838();
  uint64_t v177 = *(void *)(v60 - 8);
  uint64_t v178 = v60;
  MEMORY[0x1F4188790](v60);
  uint64_t v176 = (char *)&v147 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_1DFDF6D40();
  uint64_t v150 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  uint64_t v149 = (char *)&v147 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC9D34();
  uint64_t v175 = v63;
  uint64_t v174 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v173 = (char *)&v147 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = type metadata accessor for WeatherTagFeedGroup();
  MEMORY[0x1F4188790](v171);
  uint64_t v172 = (uint64_t *)((char *)&v147 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  MEMORY[0x1F4188790](v66 - 8);
  uint64_t v148 = (char *)&v147 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for ChannelSectionTagFeedGroup();
  MEMORY[0x1F4188790](v68 - 8);
  uint64_t v70 = (char *)&v147 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC5A44();
  uint64_t v72 = v71;
  uint64_t v170 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v74 = (char *)&v147 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for PromotedArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v75 - 8);
  uint64_t v77 = (uint64_t *)((char *)&v147 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = type metadata accessor for ArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v78 - 8);
  uint64_t v80 = (char *)&v147 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for TagFeedBlueprintCollapsedSection(0);
  uint64_t v82 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v84 = (char *)&v147 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TagFeedSectionGapDescriptor(0);
  uint64_t v85 = MEMORY[0x1F4188790](a1);
  uint64_t v87 = (char *)&v147 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v88 = MEMORY[0x1F4188790](v85);
  uint64_t v90 = (char *)&v147 - v89;
  switch((v88 >> 58) & 0x3C | (v88 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v122 = swift_projectBox();
      sub_1DF68D598(v122, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for ArticleListTagFeedGroup;
      goto LABEL_46;
    case 2uLL:
      uint64_t v93 = swift_projectBox();
      sub_1DF68D598(v93, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v94 = type metadata accessor for PromotedArticleListTagFeedGroup;
      goto LABEL_40;
    case 3uLL:
      uint64_t v95 = swift_projectBox();
      uint64_t v77 = v172;
      sub_1DF68D598(v95, (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v94 = type metadata accessor for WeatherTagFeedGroup;
      goto LABEL_40;
    case 4uLL:
      uint64_t v96 = swift_projectBox();
      uint64_t v97 = v170;
      (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v74, v96, v72);
      uint64_t v92 = sub_1DFDF74F0();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v74, v72);
      return v92;
    case 5uLL:
      uint64_t v123 = swift_projectBox();
      sub_1DF68D598(v123, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v124 = (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup;
      uint64_t v125 = (uint64_t)v70;
      break;
    case 6uLL:
      uint64_t v126 = swift_projectBox();
      uint64_t v80 = v148;
      sub_1DF68D598(v126, (uint64_t)v148, (uint64_t (*)(void))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup;
      goto LABEL_46;
    case 7uLL:
      uint64_t v98 = swift_projectBox();
      uint64_t v99 = v174;
      uint64_t v100 = v173;
      uint64_t v101 = v175;
      (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v173, v98, v175);
      uint64_t v102 = sub_1DFDF74F0();
      goto LABEL_27;
    case 8uLL:
      uint64_t v127 = swift_projectBox();
      uint64_t v99 = v150;
      uint64_t v100 = v149;
      uint64_t v101 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v149, v127, v151);
      uint64_t v102 = sub_1DFDF6CC0();
LABEL_27:
      uint64_t v92 = v102;
      (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v101);
      return v92;
    case 9uLL:
      uint64_t v103 = swift_projectBox();
      uint64_t v105 = v177;
      uint64_t v104 = v178;
      uint64_t v106 = v176;
      (*(void (**)(char *, uint64_t, uint64_t))(v177 + 16))(v176, v103, v178);
      sub_1DFDF7B10();
      uint64_t v92 = sub_1DF68054C(v196);
      swift_release();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v104);
      return v92;
    case 0xAuLL:
      uint64_t v128 = swift_projectBox();
      uint64_t v80 = v152;
      sub_1DF68D598(v128, (uint64_t)v152, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for CuratedTagFeedGroup;
      goto LABEL_46;
    case 0xBuLL:
      uint64_t v107 = swift_projectBox();
      uint64_t v80 = v179;
      sub_1DF68D598(v107, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for SportsRecordTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsRecordTagFeedGroup;
      goto LABEL_46;
    case 0xCuLL:
      uint64_t v109 = swift_projectBox();
      uint64_t v77 = v181;
      sub_1DF68D598(v109, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v94 = type metadata accessor for SportsNavigationTagFeedGroup;
      goto LABEL_40;
    case 0xDuLL:
      uint64_t v129 = swift_projectBox();
      uint64_t v80 = v153;
      sub_1DF68D598(v129, (uint64_t)v153, (uint64_t (*)(void))type metadata accessor for SportsScheduleTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsScheduleTagFeedGroup;
      goto LABEL_46;
    case 0xEuLL:
      uint64_t v110 = swift_projectBox();
      uint64_t v77 = v183;
      sub_1DF68D598(v110, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v94 = type metadata accessor for SportsTopStoriesTagFeedGroup;
      goto LABEL_40;
    case 0xFuLL:
      uint64_t v111 = swift_projectBox();
      uint64_t v80 = v184;
      sub_1DF68D598(v111, (uint64_t)v184, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsFavoritesTagFeedGroup;
      goto LABEL_46;
    case 0x10uLL:
      uint64_t v112 = swift_projectBox();
      uint64_t v77 = v186;
      sub_1DF68D598(v112, (uint64_t)v186, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v94 = type metadata accessor for SportsScoresTagFeedGroup;
      goto LABEL_40;
    case 0x11uLL:
      uint64_t v130 = swift_projectBox();
      uint64_t v80 = v160;
      sub_1DF68D598(v130, (uint64_t)v160, (uint64_t (*)(void))type metadata accessor for SportsLinksTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsLinksTagFeedGroup;
      goto LABEL_46;
    case 0x12uLL:
      uint64_t v131 = swift_projectBox();
      uint64_t v77 = v155;
      sub_1DF68D598(v131, (uint64_t)v155, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v94 = type metadata accessor for MySportsTopicTagFeedGroup;
      goto LABEL_40;
    case 0x13uLL:
      uint64_t v132 = swift_projectBox();
      uint64_t v80 = v156;
      sub_1DF68D598(v132, (uint64_t)v156, (uint64_t (*)(void))type metadata accessor for SportsStandingsTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsStandingsTagFeedGroup;
      goto LABEL_46;
    case 0x14uLL:
      uint64_t v133 = swift_projectBox();
      uint64_t v80 = v157;
      sub_1DF68D598(v133, (uint64_t)v157, (uint64_t (*)(void))type metadata accessor for SportsBracketTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsBracketTagFeedGroup;
      goto LABEL_46;
    case 0x15uLL:
      uint64_t v134 = swift_projectBox();
      uint64_t v80 = v158;
      sub_1DF68D598(v134, (uint64_t)v158, (uint64_t (*)(void))type metadata accessor for SportsBoxScoresTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsBoxScoresTagFeedGroup;
      goto LABEL_46;
    case 0x16uLL:
      uint64_t v135 = swift_projectBox();
      uint64_t v80 = v159;
      sub_1DF68D598(v135, (uint64_t)v159, (uint64_t (*)(void))type metadata accessor for SportsEventInfoTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsEventInfoTagFeedGroup;
      goto LABEL_46;
    case 0x17uLL:
      uint64_t v136 = swift_projectBox();
      uint64_t v80 = v161;
      sub_1DF68D598(v136, (uint64_t)v161, (uint64_t (*)(void))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsInjuryReportsTagFeedGroup;
      goto LABEL_46;
    case 0x18uLL:
      uint64_t v113 = swift_projectBox();
      uint64_t v80 = v187;
      sub_1DF68D598(v113, (uint64_t)v187, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsKeyPlayersTagFeedGroup;
      goto LABEL_46;
    case 0x19uLL:
      uint64_t v114 = swift_projectBox();
      uint64_t v80 = v188;
      sub_1DF68D598(v114, (uint64_t)v188, (uint64_t (*)(void))type metadata accessor for SportsEventArticlesTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsEventArticlesTagFeedGroup;
      goto LABEL_46;
    case 0x1AuLL:
      uint64_t v137 = swift_projectBox();
      uint64_t v80 = v162;
      sub_1DF68D598(v137, (uint64_t)v162, (uint64_t (*)(void))type metadata accessor for HighlightsTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for HighlightsTagFeedGroup;
      goto LABEL_46;
    case 0x1BuLL:
      uint64_t v115 = swift_projectBox();
      uint64_t v77 = v189;
      sub_1DF68D598(v115, (uint64_t)v189, (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
      uint64_t v92 = *v77;
      swift_bridgeObjectRetain();
      uint64_t v94 = type metadata accessor for ForYouTagFeedGroup;
      goto LABEL_40;
    case 0x1CuLL:
      uint64_t v138 = swift_projectBox();
      uint64_t v80 = v163;
      sub_1DF68D598(v138, (uint64_t)v163, (uint64_t (*)(void))type metadata accessor for RecentStoriesTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for RecentStoriesTagFeedGroup;
      goto LABEL_46;
    case 0x1DuLL:
      uint64_t v139 = swift_projectBox();
      uint64_t v77 = v164;
      sub_1DF68D598(v139, (uint64_t)v164, (uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
      uint64_t v92 = *v77;
      swift_bridgeObjectRetain();
      uint64_t v94 = type metadata accessor for DateRangeTagFeedGroup;
LABEL_40:
      uint64_t v124 = (uint64_t (*)(void))v94;
      uint64_t v125 = (uint64_t)v77;
      break;
    case 0x1EuLL:
      uint64_t v140 = swift_projectBox();
      uint64_t v80 = v165;
      sub_1DF68D598(v140, (uint64_t)v165, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsOnboardingTagFeedGroup;
      goto LABEL_46;
    case 0x1FuLL:
      uint64_t v141 = swift_projectBox();
      uint64_t v80 = v166;
      sub_1DF68D598(v141, (uint64_t)v166, (uint64_t (*)(void))type metadata accessor for SportsMastheadTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsMastheadTagFeedGroup;
      goto LABEL_46;
    case 0x20uLL:
      uint64_t v142 = swift_projectBox();
      uint64_t v80 = v167;
      sub_1DF68D598(v142, (uint64_t)v167, (uint64_t (*)(void))type metadata accessor for SportsEventTopicTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SportsEventTopicTagFeedGroup;
      goto LABEL_46;
    case 0x21uLL:
      uint64_t v116 = swift_projectBox();
      uint64_t v80 = v190;
      sub_1DF68D598(v116, (uint64_t)v190, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for PuzzleListTagFeedGroup;
      goto LABEL_46;
    case 0x22uLL:
      uint64_t v117 = swift_projectBox();
      uint64_t v80 = v191;
      sub_1DF68D598(v117, (uint64_t)v191, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for PuzzleArchiveTagFeedGroup;
      goto LABEL_46;
    case 0x23uLL:
      uint64_t v118 = swift_projectBox();
      uint64_t v80 = v192;
      sub_1DF68D598(v118, (uint64_t)v192, (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup;
      goto LABEL_46;
    case 0x24uLL:
      uint64_t v119 = swift_projectBox();
      uint64_t v80 = v193;
      sub_1DF68D598(v119, (uint64_t)v193, (uint64_t (*)(void))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for PuzzleFeaturedTagFeedGroup;
      goto LABEL_46;
    case 0x25uLL:
      uint64_t v120 = swift_projectBox();
      uint64_t v80 = v194;
      sub_1DF68D598(v120, (uint64_t)v194, (uint64_t (*)(void))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for PuzzleFullArchiveTagFeedGroup;
      goto LABEL_46;
    case 0x26uLL:
      uint64_t v143 = swift_projectBox();
      uint64_t v80 = v168;
      sub_1DF68D598(v143, (uint64_t)v168, (uint64_t (*)(void))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for PuzzleScoreboardTagFeedGroup;
      goto LABEL_46;
    case 0x27uLL:
      uint64_t v144 = swift_projectBox();
      uint64_t v80 = v169;
      sub_1DF68D598(v144, (uint64_t)v169, (uint64_t (*)(void))type metadata accessor for AffinityTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for AffinityTagFeedGroup;
      goto LABEL_46;
    case 0x28uLL:
      uint64_t v121 = swift_projectBox();
      uint64_t v80 = v195;
      sub_1DF68D598(v121, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for SponsoredBannerTagFeedGroup);
      uint64_t v92 = sub_1DFDF6EC0();
      uint64_t v108 = type metadata accessor for SponsoredBannerTagFeedGroup;
LABEL_46:
      uint64_t v124 = (uint64_t (*)(void))v108;
      uint64_t v125 = (uint64_t)v80;
      break;
    default:
      uint64_t v91 = swift_projectBox();
      sub_1DF68D598(v91, (uint64_t)v90, type metadata accessor for TagFeedSectionGapDescriptor);
      sub_1DF68D598((uint64_t)v90, (uint64_t)v87, type metadata accessor for TagFeedSectionGapDescriptor);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v87, 1, v81) == 1)
      {
        uint64_t v92 = 7364967;
      }
      else
      {
        sub_1DF68D6CC((uint64_t)v87, (uint64_t)v84, type metadata accessor for TagFeedBlueprintCollapsedSection);
        sub_1DEB0DFE4();
        uint64_t v196 = sub_1DFDF14E0();
        uint64_t v197 = v146;
        sub_1DFDFDE90();
        swift_bridgeObjectRetain();
        sub_1DFDFDE90();
        swift_bridgeObjectRelease();
        uint64_t v92 = v196;
        sub_1DF68D66C((uint64_t)v84, type metadata accessor for TagFeedBlueprintCollapsedSection);
      }
      uint64_t v124 = type metadata accessor for TagFeedSectionGapDescriptor;
      uint64_t v125 = (uint64_t)v90;
      break;
  }
  sub_1DF68D66C(v125, v124);
  return v92;
}

unint64_t sub_1DF6821E8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC9D34();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC5A44();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a2 >> 58) & 0x3C | (a2 >> 1) & 3)
  {
    case 4uLL:
      uint64_t v17 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v17, v12);
      uint64_t v18 = swift_allocBox();
      sub_1DFDF7510();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      a2 = v18 | 0x1000000000000000;
      break;
    case 7uLL:
      uint64_t v19 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v19, v7);
      uint64_t v20 = swift_allocBox();
      sub_1DFDF7510();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      a2 = v20 | 0x1000000000000006;
      break;
    case 0x23uLL:
      uint64_t v21 = swift_projectBox();
      sub_1DF68D598(v21, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      sub_1DFDF6FE0();
      uint64_t v22 = swift_allocBox();
      sub_1DF68D6CC((uint64_t)v5, v23, (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      a2 = v22 | 0x8000000000000006;
      break;
    default:
      swift_retain();
      break;
  }
  return a2;
}

uint64_t sub_1DF682598()
{
  return sub_1DF68054C(*v0);
}

uint64_t sub_1DF6825A0(uint64_t *a1, unint64_t *a2)
{
  return sub_1DF689990(*a1, *a2);
}

uint64_t sub_1DF6825AC()
{
  uint64_t v0 = type metadata accessor for AffinityTagFeedGroup();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v204 = (char *)&v164 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v203 = (char *)&v164 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v202 = (char *)&v164 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v201 = (char *)&v164 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v200 = (char *)&v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v199 = (char *)&v164 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PuzzleListTagFeedGroup();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v198 = (char *)&v164 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SportsEventTopicTagFeedGroup();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v197 = (char *)&v164 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SportsMastheadTagFeedGroup();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v196 = (char *)&v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v195 = (char *)&v164 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for DateRangeTagFeedGroup();
  MEMORY[0x1F4188790](v193);
  uint64_t v194 = (char *)&v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for RecentStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v192 = (char *)&v164 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = type metadata accessor for ForYouTagFeedGroup();
  MEMORY[0x1F4188790](v190);
  uint64_t v191 = (char *)&v164 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for HighlightsTagFeedGroup();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v189 = (char *)&v164 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v188 = (char *)&v164 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v187 = (char *)&v164 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  MEMORY[0x1F4188790](v30 - 8);
  char v186 = (char *)&v164 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for SportsEventInfoTagFeedGroup();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v185 = (char *)&v164 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v184 = (char *)&v164 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SportsBracketTagFeedGroup();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v183 = (char *)&v164 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for SportsStandingsTagFeedGroup();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v182 = (char *)&v164 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1F4188790](v180);
  uint64_t v181 = (char *)&v164 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for SportsLinksTagFeedGroup();
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v179 = (char *)&v164 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = type metadata accessor for SportsScoresTagFeedGroup();
  MEMORY[0x1F4188790](v177);
  uint64_t v178 = (char *)&v164 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for SportsFavoritesTagFeedGroup();
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v176 = (char *)&v164 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v174);
  uint64_t v175 = (char *)&v164 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for SportsScheduleTagFeedGroup();
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v173 = (char *)&v164 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = type metadata accessor for SportsNavigationTagFeedGroup();
  MEMORY[0x1F4188790](v171);
  uint64_t v172 = (char *)&v164 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for SportsRecordTagFeedGroup();
  MEMORY[0x1F4188790](v50 - 8);
  uint64_t v170 = (char *)&v164 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for CuratedTagFeedGroup();
  MEMORY[0x1F4188790](v52 - 8);
  uint64_t v169 = (char *)&v164 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF157838();
  uint64_t v168 = v54;
  uint64_t v167 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v166 = (char *)&v164 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for WeatherTagFeedGroup();
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (char *)&v164 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  MEMORY[0x1F4188790](v59 - 8);
  uint64_t v61 = (char *)&v164 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for ChannelSectionTagFeedGroup();
  MEMORY[0x1F4188790](v62 - 8);
  uint64_t v64 = (char *)&v164 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for IssueListTagFeedGroup();
  MEMORY[0x1F4188790](v65);
  uint64_t v67 = (char *)&v164 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC5A44();
  uint64_t v69 = v68;
  uint64_t v165 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v71 = (char *)&v164 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for PromotedArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v72 - 8);
  uint64_t v74 = (char *)&v164 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1DFDFA9F0();
  uint64_t v76 = *(void *)(v75 - 8);
  uint64_t v206 = v75;
  uint64_t v207 = v76;
  MEMORY[0x1F4188790](v75);
  uint64_t v205 = (char *)&v164 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for ArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v78 - 8);
  uint64_t v80 = (char *)&v164 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = 0;
  switch((v81 >> 58) & 0x3C | (v81 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v83 = swift_projectBox();
      sub_1DF68D598(v83, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      uint64_t v84 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v84, v206);
      uint64_t v86 = type metadata accessor for ArticleListTagFeedGroup;
      uint64_t v87 = (uint64_t)v80;
      goto LABEL_40;
    case 2uLL:
      uint64_t v88 = swift_projectBox();
      sub_1DF68D598(v88, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      uint64_t v89 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v89, v206);
      uint64_t v90 = type metadata accessor for PromotedArticleListTagFeedGroup;
      goto LABEL_39;
    case 3uLL:
      uint64_t v91 = swift_projectBox();
      sub_1DF68D598(v91, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
      uint64_t v92 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v92, v206);
      uint64_t v86 = type metadata accessor for WeatherTagFeedGroup;
      uint64_t v87 = (uint64_t)v58;
      goto LABEL_40;
    case 4uLL:
      uint64_t v93 = swift_projectBox();
      uint64_t v94 = v165;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v71, v93, v69);
      sub_1DFDF7520();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v71, v69);
      uint64_t v95 = *(void *)&v67[*(int *)(v65 + 32)];
      swift_unknownObjectRetain();
      sub_1DF68D66C((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for IssueListTagFeedGroup);
      return v95;
    case 5uLL:
      uint64_t v96 = swift_projectBox();
      sub_1DF68D598(v96, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      uint64_t v97 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v97, v206);
      uint64_t v86 = type metadata accessor for ChannelSectionTagFeedGroup;
      uint64_t v87 = (uint64_t)v64;
      goto LABEL_40;
    case 6uLL:
      uint64_t v98 = swift_projectBox();
      sub_1DF68D598(v98, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      uint64_t v99 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v99, v206);
      uint64_t v86 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup;
      uint64_t v87 = (uint64_t)v61;
      goto LABEL_40;
    case 9uLL:
      uint64_t v100 = swift_projectBox();
      uint64_t v101 = v167;
      uint64_t v102 = v166;
      uint64_t v103 = v168;
      (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v166, v100, v168);
      sub_1DFDF7B10();
      uint64_t v85 = sub_1DF6825AC(v208);
      swift_release();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v103);
      goto LABEL_41;
    case 0xAuLL:
      uint64_t v104 = swift_projectBox();
      uint64_t v74 = v169;
      sub_1DF68D598(v104, (uint64_t)v169, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
      uint64_t v105 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v105, v206);
      uint64_t v90 = type metadata accessor for CuratedTagFeedGroup;
      goto LABEL_39;
    case 0xBuLL:
      uint64_t v106 = swift_projectBox();
      uint64_t v74 = v170;
      sub_1DF68D598(v106, (uint64_t)v170, (uint64_t (*)(void))type metadata accessor for SportsRecordTagFeedGroup);
      uint64_t v107 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v107, v206);
      uint64_t v90 = type metadata accessor for SportsRecordTagFeedGroup;
      goto LABEL_39;
    case 0xCuLL:
      uint64_t v108 = swift_projectBox();
      uint64_t v74 = v172;
      sub_1DF68D598(v108, (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
      uint64_t v109 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v109, v206);
      uint64_t v90 = type metadata accessor for SportsNavigationTagFeedGroup;
      goto LABEL_39;
    case 0xDuLL:
      uint64_t v110 = swift_projectBox();
      uint64_t v74 = v173;
      sub_1DF68D598(v110, (uint64_t)v173, (uint64_t (*)(void))type metadata accessor for SportsScheduleTagFeedGroup);
      uint64_t v111 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v111, v206);
      uint64_t v90 = type metadata accessor for SportsScheduleTagFeedGroup;
      goto LABEL_39;
    case 0xEuLL:
      uint64_t v112 = swift_projectBox();
      uint64_t v74 = v175;
      sub_1DF68D598(v112, (uint64_t)v175, (uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
      uint64_t v113 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v113, v206);
      uint64_t v90 = type metadata accessor for SportsTopStoriesTagFeedGroup;
      goto LABEL_39;
    case 0xFuLL:
      uint64_t v114 = swift_projectBox();
      uint64_t v74 = v176;
      sub_1DF68D598(v114, (uint64_t)v176, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroup);
      uint64_t v115 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v115, v206);
      uint64_t v90 = type metadata accessor for SportsFavoritesTagFeedGroup;
      goto LABEL_39;
    case 0x10uLL:
      uint64_t v116 = swift_projectBox();
      uint64_t v74 = v178;
      sub_1DF68D598(v116, (uint64_t)v178, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
      uint64_t v117 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v117, v206);
      uint64_t v90 = type metadata accessor for SportsScoresTagFeedGroup;
      goto LABEL_39;
    case 0x11uLL:
      uint64_t v118 = swift_projectBox();
      uint64_t v74 = v179;
      sub_1DF68D598(v118, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for SportsLinksTagFeedGroup);
      uint64_t v119 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v119, v206);
      uint64_t v90 = type metadata accessor for SportsLinksTagFeedGroup;
      goto LABEL_39;
    case 0x12uLL:
      uint64_t v120 = swift_projectBox();
      uint64_t v74 = v181;
      sub_1DF68D598(v120, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      uint64_t v121 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v121, v206);
      uint64_t v90 = type metadata accessor for MySportsTopicTagFeedGroup;
      goto LABEL_39;
    case 0x13uLL:
      uint64_t v122 = swift_projectBox();
      uint64_t v74 = v182;
      sub_1DF68D598(v122, (uint64_t)v182, (uint64_t (*)(void))type metadata accessor for SportsStandingsTagFeedGroup);
      uint64_t v123 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v123, v206);
      uint64_t v90 = type metadata accessor for SportsStandingsTagFeedGroup;
      goto LABEL_39;
    case 0x14uLL:
      uint64_t v124 = swift_projectBox();
      uint64_t v74 = v183;
      sub_1DF68D598(v124, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for SportsBracketTagFeedGroup);
      uint64_t v125 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v125, v206);
      uint64_t v90 = type metadata accessor for SportsBracketTagFeedGroup;
      goto LABEL_39;
    case 0x15uLL:
      uint64_t v126 = swift_projectBox();
      uint64_t v74 = v184;
      sub_1DF68D598(v126, (uint64_t)v184, (uint64_t (*)(void))type metadata accessor for SportsBoxScoresTagFeedGroup);
      uint64_t v127 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v127, v206);
      uint64_t v90 = type metadata accessor for SportsBoxScoresTagFeedGroup;
      goto LABEL_39;
    case 0x16uLL:
      uint64_t v128 = swift_projectBox();
      uint64_t v74 = v185;
      sub_1DF68D598(v128, (uint64_t)v185, (uint64_t (*)(void))type metadata accessor for SportsEventInfoTagFeedGroup);
      uint64_t v129 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v129, v206);
      uint64_t v90 = type metadata accessor for SportsEventInfoTagFeedGroup;
      goto LABEL_39;
    case 0x17uLL:
      uint64_t v130 = swift_projectBox();
      uint64_t v74 = v186;
      sub_1DF68D598(v130, (uint64_t)v186, (uint64_t (*)(void))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      uint64_t v131 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v131, v206);
      uint64_t v90 = type metadata accessor for SportsInjuryReportsTagFeedGroup;
      goto LABEL_39;
    case 0x18uLL:
      uint64_t v132 = swift_projectBox();
      uint64_t v74 = v187;
      sub_1DF68D598(v132, (uint64_t)v187, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      uint64_t v133 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v133, v206);
      uint64_t v90 = type metadata accessor for SportsKeyPlayersTagFeedGroup;
      goto LABEL_39;
    case 0x19uLL:
      uint64_t v134 = swift_projectBox();
      uint64_t v74 = v188;
      sub_1DF68D598(v134, (uint64_t)v188, (uint64_t (*)(void))type metadata accessor for SportsEventArticlesTagFeedGroup);
      uint64_t v135 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v135, v206);
      uint64_t v90 = type metadata accessor for SportsEventArticlesTagFeedGroup;
      goto LABEL_39;
    case 0x1AuLL:
      uint64_t v136 = swift_projectBox();
      uint64_t v74 = v189;
      sub_1DF68D598(v136, (uint64_t)v189, (uint64_t (*)(void))type metadata accessor for HighlightsTagFeedGroup);
      uint64_t v137 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v137, v206);
      uint64_t v90 = type metadata accessor for HighlightsTagFeedGroup;
      goto LABEL_39;
    case 0x1BuLL:
      uint64_t v138 = swift_projectBox();
      uint64_t v74 = v191;
      sub_1DF68D598(v138, (uint64_t)v191, (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
      uint64_t v139 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v139, v206);
      uint64_t v90 = type metadata accessor for ForYouTagFeedGroup;
      goto LABEL_39;
    case 0x1CuLL:
      uint64_t v140 = swift_projectBox();
      uint64_t v74 = v192;
      sub_1DF68D598(v140, (uint64_t)v192, (uint64_t (*)(void))type metadata accessor for RecentStoriesTagFeedGroup);
      uint64_t v141 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v141, v206);
      uint64_t v90 = type metadata accessor for RecentStoriesTagFeedGroup;
      goto LABEL_39;
    case 0x1DuLL:
      uint64_t v142 = swift_projectBox();
      uint64_t v74 = v194;
      sub_1DF68D598(v142, (uint64_t)v194, (uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
      uint64_t v143 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v143, v206);
      uint64_t v90 = type metadata accessor for DateRangeTagFeedGroup;
      goto LABEL_39;
    case 0x1EuLL:
      uint64_t v144 = swift_projectBox();
      uint64_t v74 = v195;
      sub_1DF68D598(v144, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
      uint64_t v145 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v145, v206);
      uint64_t v90 = type metadata accessor for SportsOnboardingTagFeedGroup;
      goto LABEL_39;
    case 0x1FuLL:
      uint64_t v146 = swift_projectBox();
      uint64_t v74 = v196;
      sub_1DF68D598(v146, (uint64_t)v196, (uint64_t (*)(void))type metadata accessor for SportsMastheadTagFeedGroup);
      uint64_t v147 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v147, v206);
      uint64_t v90 = type metadata accessor for SportsMastheadTagFeedGroup;
      goto LABEL_39;
    case 0x20uLL:
      uint64_t v148 = swift_projectBox();
      uint64_t v74 = v197;
      sub_1DF68D598(v148, (uint64_t)v197, (uint64_t (*)(void))type metadata accessor for SportsEventTopicTagFeedGroup);
      uint64_t v149 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v149, v206);
      uint64_t v90 = type metadata accessor for SportsEventTopicTagFeedGroup;
      goto LABEL_39;
    case 0x21uLL:
      uint64_t v150 = swift_projectBox();
      uint64_t v74 = v198;
      sub_1DF68D598(v150, (uint64_t)v198, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      uint64_t v151 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v151, v206);
      uint64_t v90 = type metadata accessor for PuzzleListTagFeedGroup;
      goto LABEL_39;
    case 0x22uLL:
      uint64_t v152 = swift_projectBox();
      uint64_t v74 = v199;
      sub_1DF68D598(v152, (uint64_t)v199, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroup);
      uint64_t v153 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v153, v206);
      uint64_t v90 = type metadata accessor for PuzzleArchiveTagFeedGroup;
      goto LABEL_39;
    case 0x23uLL:
      uint64_t v154 = swift_projectBox();
      uint64_t v74 = v200;
      sub_1DF68D598(v154, (uint64_t)v200, (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      uint64_t v155 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v155, v206);
      uint64_t v90 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup;
      goto LABEL_39;
    case 0x24uLL:
      uint64_t v156 = swift_projectBox();
      uint64_t v74 = v201;
      sub_1DF68D598(v156, (uint64_t)v201, (uint64_t (*)(void))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      uint64_t v157 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v157, v206);
      uint64_t v90 = type metadata accessor for PuzzleFeaturedTagFeedGroup;
      goto LABEL_39;
    case 0x25uLL:
      uint64_t v158 = swift_projectBox();
      uint64_t v74 = v202;
      sub_1DF68D598(v158, (uint64_t)v202, (uint64_t (*)(void))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      uint64_t v159 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v159, v206);
      uint64_t v90 = type metadata accessor for PuzzleFullArchiveTagFeedGroup;
      goto LABEL_39;
    case 0x26uLL:
      uint64_t v160 = swift_projectBox();
      uint64_t v74 = v203;
      sub_1DF68D598(v160, (uint64_t)v203, (uint64_t (*)(void))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      uint64_t v161 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v161, v206);
      uint64_t v90 = type metadata accessor for PuzzleScoreboardTagFeedGroup;
      goto LABEL_39;
    case 0x27uLL:
      uint64_t v162 = swift_projectBox();
      uint64_t v74 = v204;
      sub_1DF68D598(v162, (uint64_t)v204, (uint64_t (*)(void))type metadata accessor for AffinityTagFeedGroup);
      uint64_t v163 = v205;
      sub_1DFDF6FB0();
      uint64_t v85 = sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v163, v206);
      uint64_t v90 = type metadata accessor for AffinityTagFeedGroup;
LABEL_39:
      uint64_t v86 = v90;
      uint64_t v87 = (uint64_t)v74;
LABEL_40:
      sub_1DF68D66C(v87, (uint64_t (*)(void))v86);
LABEL_41:
      uint64_t result = v85;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF684468@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DF157838();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
    case 2uLL:
    case 5uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AA48];
      goto LABEL_40;
    case 3uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7ABA0];
      goto LABEL_40;
    case 4uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7ABE8];
      goto LABEL_40;
    case 6uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB58];
      goto LABEL_40;
    case 7uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB98];
      goto LABEL_40;
    case 8uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB60];
      goto LABEL_40;
    case 9uLL:
      uint64_t v10 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
      sub_1DFDF7B10();
      sub_1DF684468(v15[1]);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    case 0xAuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB90];
      goto LABEL_40;
    case 0xBuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AA58];
      goto LABEL_40;
    case 0xCuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB18];
      goto LABEL_40;
    case 0xDuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAC8];
      goto LABEL_40;
    case 0xEuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB28];
      goto LABEL_40;
    case 0xFuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAF0];
      goto LABEL_40;
    case 0x10uLL:
    case 0x11uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AA60];
      goto LABEL_40;
    case 0x12uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AA98];
      goto LABEL_40;
    case 0x13uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAF8];
      goto LABEL_40;
    case 0x14uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAB0];
      goto LABEL_40;
    case 0x15uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAE0];
      goto LABEL_40;
    case 0x16uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAE8];
      goto LABEL_40;
    case 0x17uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB48];
      goto LABEL_40;
    case 0x18uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB10];
      goto LABEL_40;
    case 0x19uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB40];
      goto LABEL_40;
    case 0x1AuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AA28];
      goto LABEL_40;
    case 0x1BuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AA18];
      goto LABEL_40;
    case 0x1CuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB30];
      goto LABEL_40;
    case 0x1DuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AA70];
      goto LABEL_40;
    case 0x1EuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB20];
      goto LABEL_40;
    case 0x1FuLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAC0];
      goto LABEL_40;
    case 0x20uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB08];
      goto LABEL_40;
    case 0x21uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AA38];
      goto LABEL_40;
    case 0x22uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAA0];
      goto LABEL_40;
    case 0x23uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB50];
      goto LABEL_40;
    case 0x24uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAB8];
      goto LABEL_40;
    case 0x25uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB38];
      goto LABEL_40;
    case 0x26uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB00];
      goto LABEL_40;
    case 0x27uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7ABA8];
      goto LABEL_40;
    case 0x28uLL:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AAD8];
      goto LABEL_40;
    default:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7AB68];
LABEL_40:
      uint64_t v12 = *v9;
      uint64_t v13 = sub_1DFDF6580();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
      return v14(a2, v12, v13);
  }
}

uint64_t sub_1DF684874()
{
  if (((1 << ((*v0 >> 58) & 0x3C | (*v0 >> 1) & 3)) & 0x1FEC1E32999) != 0)
  {
    return MEMORY[0x1F41353B8]();
  }
  else
  {
    uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7F878];
    sub_1DEA6AD44(0, (unint64_t *)&unk_1EBAEAF40, MEMORY[0x1E4F7F878], MEMORY[0x1E4FBBE00]);
    sub_1DFDF8250();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0B750;
    sub_1DFDF8230();
    sub_1DFDF8240();
    sub_1DF689948(&qword_1EBAE9670, MEMORY[0x1E4F7F878]);
    sub_1DEA6AD44(0, &qword_1EBAEA2E0, v1, MEMORY[0x1E4FBB320]);
    sub_1DE98C6AC();
    return sub_1DFDFF830();
  }
}

uint64_t sub_1DF684A5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF684468(*v1, a1);
}

uint64_t sub_1DF684A64()
{
  return sub_1DF6825AC();
}

uint64_t sub_1DF684A70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((1 << ((*v1 >> 58) & 0x3C | (*v1 >> 1) & 3)) & 0x1FFC7FBFFDDLL) != 0)
  {
    uint64_t v6 = (unsigned int *)MEMORY[0x1E4F80168];
  }
  else
  {
    if (((1 << ((*v1 >> 58) & 0x3C | (*v1 >> 1) & 3)) & 0x38000022) == 0)
    {
      uint64_t v11 = swift_projectBox();
      sub_1DF68D598(v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      uint64_t v12 = &v5[*(int *)(v3 + 24)];
      uint64_t v13 = sub_1DFDF95F0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, v12, v13);
      return sub_1DF68D66C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
    }
    uint64_t v6 = (unsigned int *)MEMORY[0x1E4F80178];
  }
  uint64_t v7 = *v6;
  uint64_t v8 = sub_1DFDF95F0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);
  return v9(a1, v7, v8);
}

uint64_t sub_1DF684C28@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1DFDF8130();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  sub_1DF157838();
  uint64_t v11 = swift_allocBox();
  v13[1] = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_1DEF39FEC();
  swift_retain();
  uint64_t result = sub_1DFDF7B00();
  *a3 = v11 | 0x2000000000000002;
  return result;
}

uint64_t sub_1DF684D6C@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1DF157838();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *a1;
  if (((v9 >> 58) & 0x3C | (v9 >> 1) & 3) == 9)
  {
    uint64_t v10 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
    sub_1DFDF7B10();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    unint64_t v9 = v12[1];
  }
  else
  {
    uint64_t result = swift_retain();
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1DF684E98@<X0>(uint64_t a1@<X8>)
{
  sub_1DF157838();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*v1 >> 58) & 0x3C | (*v1 >> 1) & 3) == 9)
  {
    uint64_t v8 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
    sub_1DF68D600();
    uint64_t v10 = v9;
    sub_1DFDF7B10();
    sub_1DFDF7B20();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
  else
  {
    sub_1DF68D600();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a1, 1, 1, v12);
  }
}

uint64_t sub_1DF685078@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DF157838();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((1 << ((a1 >> 58) & 0x3C | (a1 >> 1) & 3)) & 0x1FEFDFBFDDFLL) != 0)
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7F478];
  }
  else
  {
    if (((1 << ((a1 >> 58) & 0x3C | (a1 >> 1) & 3)) & 0x102040020) == 0)
    {
      uint64_t v14 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
      sub_1DFDF7B10();
      sub_1DF685078(v15[1]);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v9 = (unsigned int *)MEMORY[0x1E4F7F470];
  }
  uint64_t v10 = *v9;
  uint64_t v11 = sub_1DFDF7480();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);
  return v12(a2, v10, v11);
}

uint64_t sub_1DF685254@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DF157838();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((a1 >> 58) & 0x3C | (a1 >> 1) & 3) - 10 >= 0x1F)
  {
    switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
    {
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 5uLL:
      case 6uLL:
        goto LABEL_2;
      case 4uLL:
      case 7uLL:
        uint64_t v9 = (unsigned int *)MEMORY[0x1E4F80698];
        goto LABEL_3;
      case 8uLL:
        uint64_t v9 = (unsigned int *)MEMORY[0x1E4F80680];
        goto LABEL_3;
      case 9uLL:
        uint64_t v14 = swift_projectBox();
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
        sub_1DFDF7B10();
        sub_1DF685254(v15[1]);
        swift_release();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        break;
      default:
        uint64_t v9 = (unsigned int *)MEMORY[0x1E4F80688];
        goto LABEL_3;
    }
  }
  else
  {
LABEL_2:
    uint64_t v9 = (unsigned int *)MEMORY[0x1E4F806A0];
LABEL_3:
    uint64_t v10 = *v9;
    uint64_t v11 = sub_1DFDFA2A0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);
    return v12(a2, v10, v11);
  }
  return result;
}

uint64_t sub_1DF685464@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DF157838();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v10 = type metadata accessor for ArticleListTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v10;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EBAD9E70, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for ArticleListTagFeedGroup;
      goto LABEL_43;
    case 2uLL:
      uint64_t v14 = type metadata accessor for PromotedArticleListTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v14;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2D178, (void (*)(uint64_t))type metadata accessor for PromotedArticleListTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for PromotedArticleListTagFeedGroup;
      goto LABEL_43;
    case 3uLL:
      uint64_t v15 = type metadata accessor for WeatherTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v15;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC25DF8, (void (*)(uint64_t))type metadata accessor for WeatherTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for WeatherTagFeedGroup;
      goto LABEL_43;
    case 5uLL:
      uint64_t v16 = type metadata accessor for ChannelSectionTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v16;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2F580, (void (*)(uint64_t))type metadata accessor for ChannelSectionTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for ChannelSectionTagFeedGroup;
      goto LABEL_43;
    case 6uLL:
      uint64_t v17 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v17;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30A30, (void (*)(uint64_t))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup;
      goto LABEL_43;
    case 8uLL:
      uint64_t v18 = sub_1DFDF6D40();
      uint64_t v19 = swift_projectBox();
      uint64_t v20 = MEMORY[0x1E4F7F1A8];
      *(void *)(a2 + 24) = v18;
      *(void *)(a2 + 32) = v20;
      uint64_t v21 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v22 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
      return v22(v21, v19, v18);
    case 9uLL:
      uint64_t v23 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v23, v5);
      sub_1DFDF7B10();
      sub_1DF685464(v55[1]);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    case 0xAuLL:
      uint64_t v24 = type metadata accessor for CuratedTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v24;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EBAD6B70, (void (*)(uint64_t))type metadata accessor for CuratedTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for CuratedTagFeedGroup;
      goto LABEL_43;
    case 0xBuLL:
      uint64_t v25 = type metadata accessor for SportsRecordTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v25;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2F578, (void (*)(uint64_t))type metadata accessor for SportsRecordTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsRecordTagFeedGroup;
      goto LABEL_43;
    case 0xCuLL:
      uint64_t v26 = type metadata accessor for SportsNavigationTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v26;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2E040, (void (*)(uint64_t))type metadata accessor for SportsNavigationTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsNavigationTagFeedGroup;
      goto LABEL_43;
    case 0xDuLL:
      uint64_t v27 = type metadata accessor for SportsScheduleTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v27;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC282E0, (void (*)(uint64_t))type metadata accessor for SportsScheduleTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsScheduleTagFeedGroup;
      goto LABEL_43;
    case 0xEuLL:
      uint64_t v28 = type metadata accessor for SportsTopStoriesTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v28;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30A10, (void (*)(uint64_t))type metadata accessor for SportsTopStoriesTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsTopStoriesTagFeedGroup;
      goto LABEL_43;
    case 0xFuLL:
      uint64_t v29 = type metadata accessor for SportsFavoritesTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v29;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC21ED8, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsFavoritesTagFeedGroup;
      goto LABEL_43;
    case 0x10uLL:
      uint64_t v30 = type metadata accessor for SportsScoresTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v30;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EBADB0F0, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsScoresTagFeedGroup;
      goto LABEL_43;
    case 0x11uLL:
      uint64_t v31 = type metadata accessor for SportsLinksTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v31;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2F570, (void (*)(uint64_t))type metadata accessor for SportsLinksTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsLinksTagFeedGroup;
      goto LABEL_43;
    case 0x12uLL:
      uint64_t v32 = type metadata accessor for MySportsTopicTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v32;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EBADBBA0, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for MySportsTopicTagFeedGroup;
      goto LABEL_43;
    case 0x13uLL:
      uint64_t v33 = type metadata accessor for SportsStandingsTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v33;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30A00, (void (*)(uint64_t))type metadata accessor for SportsStandingsTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsStandingsTagFeedGroup;
      goto LABEL_43;
    case 0x14uLL:
      uint64_t v34 = type metadata accessor for SportsBracketTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v34;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2F568, (void (*)(uint64_t))type metadata accessor for SportsBracketTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsBracketTagFeedGroup;
      goto LABEL_43;
    case 0x15uLL:
      uint64_t v35 = type metadata accessor for SportsBoxScoresTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v35;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC309F0, (void (*)(uint64_t))type metadata accessor for SportsBoxScoresTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsBoxScoresTagFeedGroup;
      goto LABEL_43;
    case 0x16uLL:
      uint64_t v36 = type metadata accessor for SportsEventInfoTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v36;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2E1A0, (void (*)(uint64_t))type metadata accessor for SportsEventInfoTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsEventInfoTagFeedGroup;
      goto LABEL_43;
    case 0x17uLL:
      uint64_t v37 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v37;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC309E0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsInjuryReportsTagFeedGroup;
      goto LABEL_43;
    case 0x18uLL:
      uint64_t v38 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v38;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC24F38, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsKeyPlayersTagFeedGroup;
      goto LABEL_43;
    case 0x19uLL:
      uint64_t v39 = type metadata accessor for SportsEventArticlesTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v39;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC309D0, (void (*)(uint64_t))type metadata accessor for SportsEventArticlesTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsEventArticlesTagFeedGroup;
      goto LABEL_43;
    case 0x1AuLL:
      uint64_t v40 = type metadata accessor for HighlightsTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v40;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2E2D0, (void (*)(uint64_t))type metadata accessor for HighlightsTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for HighlightsTagFeedGroup;
      goto LABEL_43;
    case 0x1BuLL:
      uint64_t v41 = type metadata accessor for ForYouTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v41;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EBAD6280, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for ForYouTagFeedGroup;
      goto LABEL_43;
    case 0x1CuLL:
      uint64_t v42 = type metadata accessor for RecentStoriesTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v42;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EBADBE10, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for RecentStoriesTagFeedGroup;
      goto LABEL_43;
    case 0x1DuLL:
      uint64_t v43 = type metadata accessor for DateRangeTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v43;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC309C0, (void (*)(uint64_t))type metadata accessor for DateRangeTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for DateRangeTagFeedGroup;
      goto LABEL_43;
    case 0x1EuLL:
      uint64_t v44 = type metadata accessor for SportsOnboardingTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v44;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EBADF028, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsOnboardingTagFeedGroup;
      goto LABEL_43;
    case 0x1FuLL:
      uint64_t v45 = type metadata accessor for SportsMastheadTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v45;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC309B0, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsMastheadTagFeedGroup;
      goto LABEL_43;
    case 0x20uLL:
      uint64_t v46 = type metadata accessor for SportsEventTopicTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v46;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC28C88, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SportsEventTopicTagFeedGroup;
      goto LABEL_43;
    case 0x21uLL:
      uint64_t v47 = type metadata accessor for PuzzleListTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v47;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC309A0, (void (*)(uint64_t))type metadata accessor for PuzzleListTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for PuzzleListTagFeedGroup;
      goto LABEL_43;
    case 0x22uLL:
      uint64_t v48 = type metadata accessor for PuzzleArchiveTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v48;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC21568, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for PuzzleArchiveTagFeedGroup;
      goto LABEL_43;
    case 0x23uLL:
      uint64_t v49 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v49;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30990, (void (*)(uint64_t))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup;
      goto LABEL_43;
    case 0x24uLL:
      uint64_t v50 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v50;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2E7C0, (void (*)(uint64_t))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for PuzzleFeaturedTagFeedGroup;
      goto LABEL_43;
    case 0x25uLL:
      uint64_t v51 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v51;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30980, (void (*)(uint64_t))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for PuzzleFullArchiveTagFeedGroup;
      goto LABEL_43;
    case 0x26uLL:
      uint64_t v52 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v52;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2A1D8, (void (*)(uint64_t))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for PuzzleScoreboardTagFeedGroup;
      goto LABEL_43;
    case 0x27uLL:
      uint64_t v53 = type metadata accessor for AffinityTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v53;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EBAF41B0, (void (*)(uint64_t))type metadata accessor for AffinityTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for AffinityTagFeedGroup;
      goto LABEL_43;
    case 0x28uLL:
      uint64_t v54 = type metadata accessor for SponsoredBannerTagFeedGroup();
      uint64_t v11 = swift_projectBox();
      *(void *)(a2 + 24) = v54;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EBAF4A30, (void (*)(uint64_t))type metadata accessor for SponsoredBannerTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v13 = type metadata accessor for SponsoredBannerTagFeedGroup;
LABEL_43:
      uint64_t result = sub_1DF68D598(v11, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v13);
      break;
    default:
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      break;
  }
  return result;
}

uint64_t sub_1DF68686C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF685078(*v1, a1);
}

uint64_t sub_1DF686874@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF685254(*v1, a1);
}

uint64_t sub_1DF68687C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF685464(*v1, a1);
}

BOOL sub_1DF686884()
{
  return ((*v0 >> 58) & 0x3C | (*v0 >> 1) & 3) != 0;
}

uint64_t sub_1DF6868A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v149 = a1;
  uint64_t v1 = type metadata accessor for AffinityTagFeedGroup();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v142 = (char *)&v114 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SportsEventTopicTagFeedGroup();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v141 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SportsMastheadTagFeedGroup();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v140 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v139 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for DateRangeTagFeedGroup();
  MEMORY[0x1F4188790](v137);
  uint64_t v138 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RecentStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v136 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for ForYouTagFeedGroup();
  MEMORY[0x1F4188790](v134);
  uint64_t v135 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for HighlightsTagFeedGroup();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v133 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v132 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v131 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v130 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SportsEventInfoTagFeedGroup();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v129 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v128 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for SportsBracketTagFeedGroup();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v127 = (char *)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for SportsStandingsTagFeedGroup();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v126 = (char *)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1F4188790](v124);
  uint64_t v125 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for SportsLinksTagFeedGroup();
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v123 = (char *)&v114 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for SportsScoresTagFeedGroup();
  MEMORY[0x1F4188790](v121);
  uint64_t v122 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for SportsFavoritesTagFeedGroup();
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v120 = (char *)&v114 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v118);
  uint64_t v119 = (char *)&v114 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SportsScheduleTagFeedGroup();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v117 = (char *)&v114 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for SportsNavigationTagFeedGroup();
  MEMORY[0x1F4188790](v115);
  uint64_t v116 = (char *)&v114 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for SportsRecordTagFeedGroup();
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v41 = (char *)&v114 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for CuratedTagFeedGroup();
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v44 = (char *)&v114 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF157838();
  uint64_t v46 = v45;
  uint64_t v114 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v48 = (char *)&v114 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  MEMORY[0x1F4188790](v49 - 8);
  uint64_t v51 = (char *)&v114 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for ChannelSectionTagFeedGroup();
  MEMORY[0x1F4188790](v52 - 8);
  uint64_t v54 = (char *)&v114 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for WeatherTagFeedGroup();
  MEMORY[0x1F4188790](v55);
  uint64_t v57 = (char *)&v114 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for PromotedArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v58 - 8);
  uint64_t v60 = (char *)&v114 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1DFDE91C0();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v145 = v61;
  uint64_t v146 = v62;
  MEMORY[0x1F4188790](v61);
  uint64_t v148 = (char *)&v114 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1DFDF7010();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v143 = v64;
  uint64_t v144 = v65;
  MEMORY[0x1F4188790](v64);
  uint64_t v147 = (char *)&v114 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for ArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v67 - 8);
  uint64_t v69 = (char *)&v114 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((v70 >> 58) & 0x3C | (v70 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v76 = swift_projectBox();
      sub_1DF68D598(v76, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v69, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v78 = type metadata accessor for ArticleListTagFeedGroup;
      uint64_t v79 = (uint64_t)v69;
      goto LABEL_36;
    case 2uLL:
      uint64_t v80 = swift_projectBox();
      sub_1DF68D598(v80, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v60, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v78 = type metadata accessor for PromotedArticleListTagFeedGroup;
      uint64_t v79 = (uint64_t)v60;
      goto LABEL_36;
    case 3uLL:
      uint64_t v81 = swift_projectBox();
      sub_1DF68D598(v81, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, &v57[*(int *)(v55 + 20)], v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v78 = type metadata accessor for WeatherTagFeedGroup;
      uint64_t v79 = (uint64_t)v57;
      goto LABEL_36;
    case 5uLL:
      uint64_t v82 = swift_projectBox();
      sub_1DF68D598(v82, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v54, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v83 = v149;
      sub_1DFDE96F0();
      sub_1DF68D66C((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      uint64_t v84 = sub_1DFDE9700();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v83, 0, 1, v84);
    case 6uLL:
      uint64_t v85 = swift_projectBox();
      sub_1DF68D598(v85, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup;
      goto LABEL_35;
    case 9uLL:
      uint64_t v87 = swift_projectBox();
      uint64_t v88 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v48, v87, v46);
      sub_1DFDF7B10();
      sub_1DF6868A0(v150);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v48, v46);
    case 0xAuLL:
      uint64_t v89 = swift_projectBox();
      sub_1DF68D598(v89, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v44, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v78 = type metadata accessor for CuratedTagFeedGroup;
      uint64_t v79 = (uint64_t)v44;
      goto LABEL_36;
    case 0xBuLL:
      uint64_t v90 = swift_projectBox();
      sub_1DF68D598(v90, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for SportsRecordTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v41, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v78 = type metadata accessor for SportsRecordTagFeedGroup;
      uint64_t v79 = (uint64_t)v41;
      goto LABEL_36;
    case 0xCuLL:
      uint64_t v91 = swift_projectBox();
      uint64_t v51 = v116;
      sub_1DF68D598(v91, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, &v51[*(int *)(v115 + 20)], v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsNavigationTagFeedGroup;
      goto LABEL_35;
    case 0xDuLL:
      uint64_t v92 = swift_projectBox();
      uint64_t v51 = v117;
      sub_1DF68D598(v92, (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for SportsScheduleTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsScheduleTagFeedGroup;
      goto LABEL_35;
    case 0xEuLL:
      uint64_t v93 = swift_projectBox();
      uint64_t v51 = v119;
      sub_1DF68D598(v93, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, &v51[*(int *)(v118 + 20)], v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsTopStoriesTagFeedGroup;
      goto LABEL_35;
    case 0xFuLL:
      uint64_t v94 = swift_projectBox();
      uint64_t v51 = v120;
      sub_1DF68D598(v94, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsFavoritesTagFeedGroup;
      goto LABEL_35;
    case 0x10uLL:
      uint64_t v95 = swift_projectBox();
      uint64_t v51 = v122;
      sub_1DF68D598(v95, (uint64_t)v122, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, &v51[*(int *)(v121 + 20)], v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsScoresTagFeedGroup;
      goto LABEL_35;
    case 0x11uLL:
      uint64_t v96 = swift_projectBox();
      uint64_t v51 = v123;
      sub_1DF68D598(v96, (uint64_t)v123, (uint64_t (*)(void))type metadata accessor for SportsLinksTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsLinksTagFeedGroup;
      goto LABEL_35;
    case 0x12uLL:
      uint64_t v97 = swift_projectBox();
      uint64_t v51 = v125;
      sub_1DF68D598(v97, (uint64_t)v125, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, &v51[*(int *)(v124 + 20)], v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for MySportsTopicTagFeedGroup;
      goto LABEL_35;
    case 0x13uLL:
      uint64_t v98 = swift_projectBox();
      uint64_t v51 = v126;
      sub_1DF68D598(v98, (uint64_t)v126, (uint64_t (*)(void))type metadata accessor for SportsStandingsTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsStandingsTagFeedGroup;
      goto LABEL_35;
    case 0x14uLL:
      uint64_t v99 = swift_projectBox();
      uint64_t v51 = v127;
      sub_1DF68D598(v99, (uint64_t)v127, (uint64_t (*)(void))type metadata accessor for SportsBracketTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsBracketTagFeedGroup;
      goto LABEL_35;
    case 0x15uLL:
      uint64_t v100 = swift_projectBox();
      uint64_t v51 = v128;
      sub_1DF68D598(v100, (uint64_t)v128, (uint64_t (*)(void))type metadata accessor for SportsBoxScoresTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsBoxScoresTagFeedGroup;
      goto LABEL_35;
    case 0x16uLL:
      uint64_t v101 = swift_projectBox();
      uint64_t v51 = v129;
      sub_1DF68D598(v101, (uint64_t)v129, (uint64_t (*)(void))type metadata accessor for SportsEventInfoTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsEventInfoTagFeedGroup;
      goto LABEL_35;
    case 0x17uLL:
      uint64_t v102 = swift_projectBox();
      uint64_t v51 = v130;
      sub_1DF68D598(v102, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsInjuryReportsTagFeedGroup;
      goto LABEL_35;
    case 0x18uLL:
      uint64_t v103 = swift_projectBox();
      uint64_t v51 = v131;
      sub_1DF68D598(v103, (uint64_t)v131, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsKeyPlayersTagFeedGroup;
      goto LABEL_35;
    case 0x19uLL:
      uint64_t v104 = swift_projectBox();
      uint64_t v51 = v132;
      sub_1DF68D598(v104, (uint64_t)v132, (uint64_t (*)(void))type metadata accessor for SportsEventArticlesTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsEventArticlesTagFeedGroup;
      goto LABEL_35;
    case 0x1AuLL:
      uint64_t v105 = swift_projectBox();
      uint64_t v51 = v133;
      sub_1DF68D598(v105, (uint64_t)v133, (uint64_t (*)(void))type metadata accessor for HighlightsTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for HighlightsTagFeedGroup;
      goto LABEL_35;
    case 0x1BuLL:
      uint64_t v106 = swift_projectBox();
      uint64_t v51 = v135;
      sub_1DF68D598(v106, (uint64_t)v135, (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, &v51[*(int *)(v134 + 20)], v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for ForYouTagFeedGroup;
      goto LABEL_35;
    case 0x1CuLL:
      uint64_t v107 = swift_projectBox();
      uint64_t v51 = v136;
      sub_1DF68D598(v107, (uint64_t)v136, (uint64_t (*)(void))type metadata accessor for RecentStoriesTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for RecentStoriesTagFeedGroup;
      goto LABEL_35;
    case 0x1DuLL:
      uint64_t v108 = swift_projectBox();
      uint64_t v51 = v138;
      sub_1DF68D598(v108, (uint64_t)v138, (uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, &v51[*(int *)(v137 + 20)], v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for DateRangeTagFeedGroup;
      goto LABEL_35;
    case 0x1EuLL:
      uint64_t v109 = swift_projectBox();
      uint64_t v51 = v139;
      sub_1DF68D598(v109, (uint64_t)v139, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsOnboardingTagFeedGroup;
      goto LABEL_35;
    case 0x1FuLL:
      uint64_t v110 = swift_projectBox();
      uint64_t v51 = v140;
      sub_1DF68D598(v110, (uint64_t)v140, (uint64_t (*)(void))type metadata accessor for SportsMastheadTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsMastheadTagFeedGroup;
      goto LABEL_35;
    case 0x20uLL:
      uint64_t v111 = swift_projectBox();
      uint64_t v51 = v141;
      sub_1DF68D598(v111, (uint64_t)v141, (uint64_t (*)(void))type metadata accessor for SportsEventTopicTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for SportsEventTopicTagFeedGroup;
      goto LABEL_35;
    case 0x27uLL:
      uint64_t v112 = swift_projectBox();
      uint64_t v51 = v142;
      sub_1DF68D598(v112, (uint64_t)v142, (uint64_t (*)(void))type metadata accessor for AffinityTagFeedGroup);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v147, v51, v143);
      (*(void (**)(char *, void, uint64_t))(v146 + 104))(v148, *MEMORY[0x1E4F7D730], v145);
      uint64_t v77 = v149;
      sub_1DFDE96F0();
      uint64_t v86 = type metadata accessor for AffinityTagFeedGroup;
LABEL_35:
      uint64_t v78 = v86;
      uint64_t v79 = (uint64_t)v51;
LABEL_36:
      sub_1DF68D66C(v79, (uint64_t (*)(void))v78);
      uint64_t v113 = sub_1DFDE9700();
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v77, 0, 1, v113);
      break;
    default:
      uint64_t v71 = sub_1DFDE9700();
      uint64_t v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
      uint64_t v73 = v71;
      uint64_t v74 = v149;
      uint64_t result = v72(v74, 1, 1, v73);
      break;
  }
  return result;
}

uint64_t sub_1DF688734@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF6868A0(a1);
}

unint64_t sub_1DF68873C@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 1uLL:
      uint64_t v3 = type metadata accessor for ArticleListTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v3;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC30B50, (void (*)(uint64_t))type metadata accessor for ArticleListTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for ArticleListTagFeedGroup;
      goto LABEL_38;
    case 2uLL:
      uint64_t v7 = type metadata accessor for PromotedArticleListTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v7;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2D190, (void (*)(uint64_t))type metadata accessor for PromotedArticleListTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for PromotedArticleListTagFeedGroup;
      goto LABEL_38;
    case 3uLL:
      uint64_t v8 = type metadata accessor for WeatherTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v8;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC25E10, (void (*)(uint64_t))type metadata accessor for WeatherTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for WeatherTagFeedGroup;
      goto LABEL_38;
    case 5uLL:
      uint64_t v9 = type metadata accessor for ChannelSectionTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v9;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30B40, (void (*)(uint64_t))type metadata accessor for ChannelSectionTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for ChannelSectionTagFeedGroup;
      goto LABEL_38;
    case 6uLL:
      uint64_t v10 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v10;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2F598, (void (*)(uint64_t))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup;
      goto LABEL_38;
    case 0xAuLL:
      uint64_t v11 = type metadata accessor for CuratedTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v11;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EBAD0A60, (void (*)(uint64_t))type metadata accessor for CuratedTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for CuratedTagFeedGroup;
      goto LABEL_38;
    case 0xBuLL:
      uint64_t v12 = type metadata accessor for SportsRecordTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v12;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30B30, (void (*)(uint64_t))type metadata accessor for SportsRecordTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsRecordTagFeedGroup;
      goto LABEL_38;
    case 0xCuLL:
      uint64_t v13 = type metadata accessor for SportsNavigationTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v13;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2E058, (void (*)(uint64_t))type metadata accessor for SportsNavigationTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsNavigationTagFeedGroup;
      goto LABEL_38;
    case 0xDuLL:
      uint64_t v14 = type metadata accessor for SportsScheduleTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v14;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30B20, (void (*)(uint64_t))type metadata accessor for SportsScheduleTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsScheduleTagFeedGroup;
      goto LABEL_38;
    case 0xEuLL:
      uint64_t v15 = type metadata accessor for SportsTopStoriesTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v15;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2F590, (void (*)(uint64_t))type metadata accessor for SportsTopStoriesTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsTopStoriesTagFeedGroup;
      goto LABEL_38;
    case 0xFuLL:
      uint64_t v16 = type metadata accessor for SportsFavoritesTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v16;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30B10, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsFavoritesTagFeedGroup;
      goto LABEL_38;
    case 0x10uLL:
      uint64_t v17 = type metadata accessor for SportsScoresTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v17;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EBAD0EE0, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsScoresTagFeedGroup;
      goto LABEL_38;
    case 0x11uLL:
      uint64_t v18 = type metadata accessor for SportsLinksTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v18;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30B00, (void (*)(uint64_t))type metadata accessor for SportsLinksTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsLinksTagFeedGroup;
      goto LABEL_38;
    case 0x12uLL:
      uint64_t v19 = type metadata accessor for MySportsTopicTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v19;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EBAD0F40, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for MySportsTopicTagFeedGroup;
      goto LABEL_38;
    case 0x13uLL:
      uint64_t v20 = type metadata accessor for SportsStandingsTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v20;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30AF0, (void (*)(uint64_t))type metadata accessor for SportsStandingsTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsStandingsTagFeedGroup;
      goto LABEL_38;
    case 0x14uLL:
      uint64_t v21 = type metadata accessor for SportsBracketTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v21;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2F588, (void (*)(uint64_t))type metadata accessor for SportsBracketTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsBracketTagFeedGroup;
      goto LABEL_38;
    case 0x15uLL:
      uint64_t v22 = type metadata accessor for SportsBoxScoresTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v22;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30AE0, (void (*)(uint64_t))type metadata accessor for SportsBoxScoresTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsBoxScoresTagFeedGroup;
      goto LABEL_38;
    case 0x16uLL:
      uint64_t v23 = type metadata accessor for SportsEventInfoTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v23;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2E1B8, (void (*)(uint64_t))type metadata accessor for SportsEventInfoTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsEventInfoTagFeedGroup;
      goto LABEL_38;
    case 0x17uLL:
      uint64_t v24 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v24;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30AD0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsInjuryReportsTagFeedGroup;
      goto LABEL_38;
    case 0x18uLL:
      uint64_t v25 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v25;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC24F50, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsKeyPlayersTagFeedGroup;
      goto LABEL_38;
    case 0x19uLL:
      uint64_t v26 = type metadata accessor for SportsEventArticlesTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v26;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30AC0, (void (*)(uint64_t))type metadata accessor for SportsEventArticlesTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsEventArticlesTagFeedGroup;
      goto LABEL_38;
    case 0x1AuLL:
      uint64_t v27 = type metadata accessor for HighlightsTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v27;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2E2E8, (void (*)(uint64_t))type metadata accessor for HighlightsTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for HighlightsTagFeedGroup;
      goto LABEL_38;
    case 0x1BuLL:
      uint64_t v28 = type metadata accessor for ForYouTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v28;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30AB0, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for ForYouTagFeedGroup;
      goto LABEL_38;
    case 0x1CuLL:
      uint64_t v29 = type metadata accessor for RecentStoriesTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v29;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC28880, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for RecentStoriesTagFeedGroup;
      goto LABEL_38;
    case 0x1DuLL:
      uint64_t v30 = type metadata accessor for DateRangeTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v30;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30AA0, (void (*)(uint64_t))type metadata accessor for DateRangeTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for DateRangeTagFeedGroup;
      goto LABEL_38;
    case 0x1EuLL:
      uint64_t v31 = type metadata accessor for SportsOnboardingTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v31;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EBAD1140, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsOnboardingTagFeedGroup;
      goto LABEL_38;
    case 0x1FuLL:
      uint64_t v32 = type metadata accessor for SportsMastheadTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v32;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30A90, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsMastheadTagFeedGroup;
      goto LABEL_38;
    case 0x20uLL:
      uint64_t v33 = type metadata accessor for SportsEventTopicTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v33;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC28CA0, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for SportsEventTopicTagFeedGroup;
      goto LABEL_38;
    case 0x21uLL:
      uint64_t v34 = type metadata accessor for PuzzleListTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v34;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30A80, (void (*)(uint64_t))type metadata accessor for PuzzleListTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for PuzzleListTagFeedGroup;
      goto LABEL_38;
    case 0x22uLL:
      uint64_t v35 = type metadata accessor for PuzzleArchiveTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v35;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC21580, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for PuzzleArchiveTagFeedGroup;
      goto LABEL_38;
    case 0x23uLL:
      uint64_t v36 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v36;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30A70, (void (*)(uint64_t))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup;
      goto LABEL_38;
    case 0x24uLL:
      uint64_t v37 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v37;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2E7D8, (void (*)(uint64_t))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for PuzzleFeaturedTagFeedGroup;
      goto LABEL_38;
    case 0x25uLL:
      uint64_t v38 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v38;
      *(void *)(a2 + 32) = sub_1DF689948((unint64_t *)&unk_1EAC30A60, (void (*)(uint64_t))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for PuzzleFullArchiveTagFeedGroup;
      goto LABEL_38;
    case 0x26uLL:
      uint64_t v39 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v39;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EAC2A1F0, (void (*)(uint64_t))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for PuzzleScoreboardTagFeedGroup;
      goto LABEL_38;
    case 0x27uLL:
      uint64_t v40 = type metadata accessor for AffinityTagFeedGroup();
      uint64_t v4 = swift_projectBox();
      *(void *)(a2 + 24) = v40;
      *(void *)(a2 + 32) = sub_1DF689948(&qword_1EBAF41E0, (void (*)(uint64_t))type metadata accessor for AffinityTagFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      uint64_t v6 = type metadata accessor for AffinityTagFeedGroup;
LABEL_38:
      uint64_t result = sub_1DF68D598(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v6);
      break;
    default:
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      break;
  }
  return result;
}

unint64_t sub_1DF689940@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF68873C(*v1, a1);
}

uint64_t sub_1DF689948(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF689990(uint64_t a1, unint64_t a2)
{
  unint64_t v517 = a2;
  uint64_t v3 = type metadata accessor for SponsoredBannerTagFeedGroup();
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v516 = (uint64_t)&v432 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v515 = (uint64_t)&v432 - v6;
  uint64_t v7 = type metadata accessor for AffinityTagFeedGroup();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v514 = (uint64_t)&v432 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v513 = (uint64_t)&v432 - v10;
  uint64_t v11 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v512 = (uint64_t)&v432 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v511 = (uint64_t)&v432 - v14;
  uint64_t v15 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v510 = (uint64_t)&v432 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v509 = (uint64_t)&v432 - v18;
  uint64_t v19 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v508 = (uint64_t)&v432 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v507 = (uint64_t)&v432 - v22;
  uint64_t v23 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v506 = (uint64_t)&v432 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v505 = (uint64_t)&v432 - v26;
  uint64_t v27 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  uint64_t v504 = (uint64_t)&v432 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v503 = (uint64_t)&v432 - v30;
  uint64_t v31 = type metadata accessor for PuzzleListTagFeedGroup();
  uint64_t v32 = MEMORY[0x1F4188790](v31 - 8);
  uint64_t v502 = (uint64_t)&v432 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v501 = (uint64_t)&v432 - v34;
  uint64_t v35 = type metadata accessor for SportsEventTopicTagFeedGroup();
  uint64_t v36 = MEMORY[0x1F4188790](v35 - 8);
  uint64_t v500 = (uint64_t)&v432 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v499 = (uint64_t)&v432 - v38;
  uint64_t v39 = type metadata accessor for SportsMastheadTagFeedGroup();
  uint64_t v40 = MEMORY[0x1F4188790](v39 - 8);
  uint64_t v498 = (uint64_t)&v432 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v497 = (uint64_t)&v432 - v42;
  uint64_t v43 = type metadata accessor for SportsOnboardingTagFeedGroup();
  uint64_t v44 = MEMORY[0x1F4188790](v43 - 8);
  uint64_t v496 = (uint64_t)&v432 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  uint64_t v495 = (uint64_t)&v432 - v46;
  uint64_t v47 = type metadata accessor for DateRangeTagFeedGroup();
  uint64_t v48 = MEMORY[0x1F4188790](v47 - 8);
  v494 = (uint64_t *)((char *)&v432 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v48);
  v493 = (uint64_t *)((char *)&v432 - v50);
  uint64_t v51 = type metadata accessor for RecentStoriesTagFeedGroup();
  uint64_t v52 = MEMORY[0x1F4188790](v51 - 8);
  uint64_t v492 = (uint64_t)&v432 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v52);
  uint64_t v491 = (uint64_t)&v432 - v54;
  uint64_t v55 = type metadata accessor for ForYouTagFeedGroup();
  uint64_t v56 = MEMORY[0x1F4188790](v55 - 8);
  v490 = (uint64_t *)((char *)&v432 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v56);
  v489 = (uint64_t *)((char *)&v432 - v58);
  uint64_t v59 = type metadata accessor for HighlightsTagFeedGroup();
  uint64_t v60 = MEMORY[0x1F4188790](v59 - 8);
  uint64_t v488 = (uint64_t)&v432 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v60);
  uint64_t v487 = (uint64_t)&v432 - v62;
  uint64_t v63 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1F4188790](v63 - 8);
  uint64_t v486 = (uint64_t)&v432 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  uint64_t v66 = MEMORY[0x1F4188790](v65 - 8);
  uint64_t v485 = (uint64_t)&v432 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  uint64_t v484 = (uint64_t)&v432 - v69;
  MEMORY[0x1F4188790](v68);
  uint64_t v483 = (uint64_t)&v432 - v70;
  uint64_t v71 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  uint64_t v72 = MEMORY[0x1F4188790](v71 - 8);
  uint64_t v482 = (uint64_t)&v432 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v72);
  uint64_t v481 = (uint64_t)&v432 - v74;
  uint64_t v75 = type metadata accessor for SportsEventInfoTagFeedGroup();
  uint64_t v76 = MEMORY[0x1F4188790](v75 - 8);
  uint64_t v480 = (uint64_t)&v432 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v76);
  uint64_t v479 = (uint64_t)&v432 - v78;
  uint64_t v79 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  uint64_t v80 = MEMORY[0x1F4188790](v79 - 8);
  uint64_t v478 = (uint64_t)&v432 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v80);
  uint64_t v477 = (uint64_t)&v432 - v82;
  uint64_t v83 = type metadata accessor for SportsBracketTagFeedGroup();
  uint64_t v84 = MEMORY[0x1F4188790](v83 - 8);
  uint64_t v476 = (uint64_t)&v432 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v84);
  uint64_t v475 = (uint64_t)&v432 - v86;
  uint64_t v87 = type metadata accessor for SportsStandingsTagFeedGroup();
  uint64_t v88 = MEMORY[0x1F4188790](v87 - 8);
  uint64_t v474 = (uint64_t)&v432 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v88);
  uint64_t v473 = (uint64_t)&v432 - v90;
  uint64_t v468 = type metadata accessor for MySportsTopicTagFeedGroup();
  uint64_t v91 = MEMORY[0x1F4188790](v468);
  uint64_t v472 = (uint64_t)&v432 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v91);
  uint64_t v471 = (uint64_t)&v432 - v93;
  uint64_t v94 = type metadata accessor for SportsLinksTagFeedGroup();
  uint64_t v95 = MEMORY[0x1F4188790](v94 - 8);
  uint64_t v470 = (uint64_t)&v432 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v95);
  uint64_t v469 = (uint64_t)&v432 - v97;
  uint64_t v465 = type metadata accessor for SportsScoresTagFeedGroup();
  uint64_t v98 = MEMORY[0x1F4188790](v465);
  uint64_t v467 = (uint64_t)&v432 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v98);
  uint64_t v466 = (uint64_t)&v432 - v100;
  uint64_t v101 = type metadata accessor for SportsFavoritesTagFeedGroup();
  uint64_t v102 = MEMORY[0x1F4188790](v101 - 8);
  v462 = (uint64_t *)((char *)&v432 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v102);
  v461 = (uint64_t *)((char *)&v432 - v104);
  uint64_t v458 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  uint64_t v105 = MEMORY[0x1F4188790](v458);
  uint64_t v464 = (uint64_t)&v432 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v105);
  uint64_t v463 = (uint64_t)&v432 - v107;
  uint64_t v108 = type metadata accessor for SportsScheduleTagFeedGroup();
  uint64_t v109 = MEMORY[0x1F4188790](v108 - 8);
  uint64_t v460 = (uint64_t)&v432 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v109);
  uint64_t v459 = (uint64_t)&v432 - v111;
  uint64_t v455 = type metadata accessor for SportsNavigationTagFeedGroup();
  uint64_t v112 = MEMORY[0x1F4188790](v455);
  uint64_t v457 = (uint64_t)&v432 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v112);
  uint64_t v456 = (uint64_t)&v432 - v114;
  uint64_t v115 = type metadata accessor for SportsRecordTagFeedGroup();
  uint64_t v116 = MEMORY[0x1F4188790](v115 - 8);
  v452 = (uint64_t *)((char *)&v432 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v116);
  v451 = (uint64_t *)((char *)&v432 - v118);
  uint64_t v119 = type metadata accessor for CuratedTagFeedGroup();
  uint64_t v120 = MEMORY[0x1F4188790](v119 - 8);
  uint64_t v454 = (uint64_t)&v432 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v120);
  uint64_t v453 = (uint64_t)&v432 - v122;
  sub_1DF157838();
  uint64_t v450 = v123;
  uint64_t v449 = *(void *)(v123 - 8);
  uint64_t v124 = MEMORY[0x1F4188790](v123);
  v448 = (char *)&v432 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v124);
  v446 = (char *)&v432 - v126;
  uint64_t v444 = sub_1DFDF6D40();
  uint64_t v443 = *(void *)(v444 - 8);
  uint64_t v127 = MEMORY[0x1F4188790](v444);
  v440 = (char *)&v432 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v127);
  v439 = (char *)&v432 - v129;
  sub_1DEBC9D34();
  uint64_t v447 = v130;
  uint64_t v445 = *(void *)(v130 - 8);
  uint64_t v131 = MEMORY[0x1F4188790](v130);
  v442 = (char *)&v432 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v131);
  v441 = (char *)&v432 - v133;
  uint64_t v434 = type metadata accessor for WeatherTagFeedGroup();
  uint64_t v134 = MEMORY[0x1F4188790](v434);
  uint64_t v438 = (uint64_t)&v432 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v134);
  uint64_t v437 = (uint64_t)&v432 - v136;
  uint64_t v137 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  uint64_t v138 = MEMORY[0x1F4188790](v137 - 8);
  uint64_t v436 = (uint64_t)&v432 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v138);
  uint64_t v435 = (uint64_t)&v432 - v140;
  uint64_t v141 = type metadata accessor for ChannelSectionTagFeedGroup();
  uint64_t v142 = MEMORY[0x1F4188790](v141 - 8);
  uint64_t v433 = (uint64_t)&v432 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v142);
  uint64_t v145 = (char *)&v432 - v144;
  sub_1DEBC5A44();
  uint64_t v147 = v146;
  uint64_t v432 = *(void *)(v146 - 8);
  uint64_t v148 = MEMORY[0x1F4188790](v146);
  uint64_t v150 = (char *)&v432 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v148);
  uint64_t v152 = (char *)&v432 - v151;
  uint64_t v153 = type metadata accessor for PromotedArticleListTagFeedGroup();
  uint64_t v154 = MEMORY[0x1F4188790](v153 - 8);
  uint64_t v156 = (char *)&v432 - ((v155 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v154);
  uint64_t v158 = (char *)&v432 - v157;
  uint64_t v159 = type metadata accessor for ArticleListTagFeedGroup();
  uint64_t v160 = MEMORY[0x1F4188790](v159 - 8);
  uint64_t v162 = (char *)&v432 - ((v161 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v160);
  uint64_t v164 = (char *)&v432 - v163;
  type metadata accessor for TagFeedSectionGapDescriptor(0);
  uint64_t v165 = MEMORY[0x1F4188790](a1);
  uint64_t v167 = (char *)&v432 - ((v166 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v168 = MEMORY[0x1F4188790](v165);
  uint64_t v170 = (char *)&v432 - v169;
  switch((v168 >> 58) & 0x3C | (v168 >> 1) & 3)
  {
    case 1uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 1) {
        goto LABEL_158;
      }
      uint64_t v176 = swift_projectBox();
      uint64_t v177 = swift_projectBox();
      sub_1DF68D598(v176, (uint64_t)v164, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      sub_1DF68D598(v177, (uint64_t)v162, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      uint64_t v178 = sub_1DFDF6EC0();
      uint64_t v180 = v179;
      if (v178 == sub_1DFDF6EC0() && v180 == v181) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v174 = type metadata accessor for ArticleListTagFeedGroup;
      sub_1DF68D66C((uint64_t)v162, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      uint64_t v175 = (uint64_t)v164;
      goto LABEL_233;
    case 2uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 2) {
        goto LABEL_158;
      }
      uint64_t v182 = swift_projectBox();
      uint64_t v183 = swift_projectBox();
      sub_1DF68D598(v182, (uint64_t)v158, (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      sub_1DF68D598(v183, (uint64_t)v156, (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      uint64_t v184 = sub_1DFDF6EC0();
      uint64_t v186 = v185;
      if (v184 == sub_1DFDF6EC0() && v186 == v187) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v174 = type metadata accessor for PromotedArticleListTagFeedGroup;
      sub_1DF68D66C((uint64_t)v156, (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      uint64_t v175 = (uint64_t)v158;
      goto LABEL_233;
    case 3uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 3) {
        goto LABEL_158;
      }
      uint64_t v188 = swift_projectBox();
      uint64_t v189 = swift_projectBox();
      uint64_t v190 = v437;
      sub_1DF68D598(v188, v437, (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
      uint64_t v191 = v438;
      sub_1DF68D598(v189, v438, (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
      uint64_t v192 = sub_1DFDF6EC0();
      uint64_t v194 = v193;
      if (v192 == sub_1DFDF6EC0() && v194 == v195) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for WeatherTagFeedGroup;
      goto LABEL_232;
    case 4uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 4) {
        goto LABEL_158;
      }
      uint64_t v196 = swift_projectBox();
      uint64_t v197 = swift_projectBox();
      uint64_t v198 = v432;
      uint64_t v199 = *(void (**)(char *, uint64_t, uint64_t))(v432 + 16);
      v199(v152, v196, v147);
      v199(v150, v197, v147);
      uint64_t v200 = sub_1DFDF74F0();
      uint64_t v202 = v201;
      if (v200 == sub_1DFDF74F0() && v202 == v203) {
        char v204 = 1;
      }
      else {
        char v204 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v428 = *(void (**)(char *, uint64_t))(v198 + 8);
      v428(v150, v147);
      v428(v152, v147);
      char v173 = v204;
      return v173 & 1;
    case 5uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 5) {
        goto LABEL_158;
      }
      uint64_t v205 = swift_projectBox();
      uint64_t v206 = swift_projectBox();
      sub_1DF68D598(v205, (uint64_t)v145, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      uint64_t v207 = v433;
      sub_1DF68D598(v206, v433, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      uint64_t v208 = sub_1DFDF6EC0();
      uint64_t v210 = v209;
      if (v208 == sub_1DFDF6EC0() && v210 == v211) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v174 = type metadata accessor for ChannelSectionTagFeedGroup;
      sub_1DF68D66C(v207, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      uint64_t v175 = (uint64_t)v145;
      goto LABEL_233;
    case 6uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 6) {
        goto LABEL_158;
      }
      uint64_t v212 = swift_projectBox();
      uint64_t v213 = swift_projectBox();
      uint64_t v190 = v435;
      sub_1DF68D598(v212, v435, (uint64_t (*)(void))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      uint64_t v191 = v436;
      sub_1DF68D598(v213, v436, (uint64_t (*)(void))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      uint64_t v214 = sub_1DFDF6EC0();
      uint64_t v216 = v215;
      if (v214 == sub_1DFDF6EC0() && v216 == v217) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup;
      goto LABEL_232;
    case 7uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 7) {
        goto LABEL_158;
      }
      uint64_t v218 = swift_projectBox();
      uint64_t v219 = swift_projectBox();
      uint64_t v220 = v445;
      id v221 = *(void (**)(char *, uint64_t, uint64_t))(v445 + 16);
      id v222 = v441;
      uint64_t v223 = v447;
      v221(v441, v218, v447);
      id v224 = v442;
      v221(v442, v219, v223);
      uint64_t v225 = sub_1DFDF74F0();
      uint64_t v227 = v226;
      if (v225 == sub_1DFDF74F0() && v227 == v228) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v429 = *(void (**)(char *, uint64_t))(v220 + 8);
      v429(v224, v223);
      v429(v222, v223);
      return v173 & 1;
    case 8uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 8) {
        goto LABEL_158;
      }
      uint64_t v229 = swift_projectBox();
      uint64_t v230 = swift_projectBox();
      uint64_t v231 = v443;
      uint64_t v232 = *(void (**)(char *, uint64_t, uint64_t))(v443 + 16);
      uint64_t v233 = v439;
      uint64_t v234 = v229;
      uint64_t v235 = v444;
      v232(v439, v234, v444);
      uint64_t v236 = v440;
      v232(v440, v230, v235);
      char v237 = sub_1DFDF6D10();
      goto LABEL_36;
    case 9uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 9) {
        goto LABEL_158;
      }
      uint64_t v238 = swift_projectBox();
      uint64_t v239 = swift_projectBox();
      uint64_t v231 = v449;
      id v240 = *(void (**)(char *, uint64_t, uint64_t))(v449 + 16);
      uint64_t v233 = v446;
      uint64_t v241 = v238;
      uint64_t v235 = v450;
      v240(v446, v241, v450);
      uint64_t v236 = v448;
      v240(v448, v239, v235);
      sub_1DEF39FEC();
      char v237 = sub_1DFDF7AF0();
LABEL_36:
      char v173 = v237;
      id v242 = *(void (**)(char *, uint64_t))(v231 + 8);
      v242(v236, v235);
      v242(v233, v235);
      return v173 & 1;
    case 0xAuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0xA) {
        goto LABEL_158;
      }
      uint64_t v243 = swift_projectBox();
      uint64_t v244 = swift_projectBox();
      uint64_t v190 = v453;
      sub_1DF68D598(v243, v453, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
      uint64_t v191 = v454;
      sub_1DF68D598(v244, v454, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
      uint64_t v245 = sub_1DFDF6EC0();
      uint64_t v247 = v246;
      if (v245 == sub_1DFDF6EC0() && v247 == v248) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for CuratedTagFeedGroup;
      goto LABEL_232;
    case 0xBuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0xB) {
        goto LABEL_158;
      }
      uint64_t v249 = swift_projectBox();
      uint64_t v250 = swift_projectBox();
      id v251 = v451;
      sub_1DF68D598(v249, (uint64_t)v451, (uint64_t (*)(void))type metadata accessor for SportsRecordTagFeedGroup);
      uint64_t v252 = v452;
      sub_1DF68D598(v250, (uint64_t)v452, (uint64_t (*)(void))type metadata accessor for SportsRecordTagFeedGroup);
      char v173 = sub_1DFC2DA54(v251, v252);
      uint64_t v253 = type metadata accessor for SportsRecordTagFeedGroup;
      goto LABEL_209;
    case 0xCuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0xC) {
        goto LABEL_158;
      }
      uint64_t v254 = swift_projectBox();
      uint64_t v255 = swift_projectBox();
      uint64_t v190 = v456;
      sub_1DF68D598(v254, v456, (uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
      uint64_t v191 = v457;
      sub_1DF68D598(v255, v457, (uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
      uint64_t v256 = sub_1DFDF6EC0();
      uint64_t v258 = v257;
      if (v256 == sub_1DFDF6EC0() && v258 == v259) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsNavigationTagFeedGroup;
      goto LABEL_232;
    case 0xDuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0xD) {
        goto LABEL_158;
      }
      uint64_t v260 = swift_projectBox();
      uint64_t v261 = swift_projectBox();
      uint64_t v190 = v459;
      sub_1DF68D598(v260, v459, (uint64_t (*)(void))type metadata accessor for SportsScheduleTagFeedGroup);
      uint64_t v191 = v460;
      sub_1DF68D598(v261, v460, (uint64_t (*)(void))type metadata accessor for SportsScheduleTagFeedGroup);
      uint64_t v262 = sub_1DFDF6EC0();
      uint64_t v264 = v263;
      if (v262 == sub_1DFDF6EC0() && v264 == v265) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsScheduleTagFeedGroup;
      goto LABEL_232;
    case 0xEuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0xE) {
        goto LABEL_158;
      }
      uint64_t v266 = swift_projectBox();
      uint64_t v267 = swift_projectBox();
      uint64_t v190 = v463;
      sub_1DF68D598(v266, v463, (uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
      uint64_t v191 = v464;
      sub_1DF68D598(v267, v464, (uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
      uint64_t v268 = sub_1DFDF6EC0();
      uint64_t v270 = v269;
      if (v268 == sub_1DFDF6EC0() && v270 == v271) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsTopStoriesTagFeedGroup;
      goto LABEL_232;
    case 0xFuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0xF) {
        goto LABEL_158;
      }
      uint64_t v272 = swift_projectBox();
      uint64_t v273 = swift_projectBox();
      id v251 = v461;
      sub_1DF68D598(v272, (uint64_t)v461, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroup);
      uint64_t v252 = v462;
      sub_1DF68D598(v273, (uint64_t)v462, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroup);
      char v173 = MEMORY[0x1E01E5780](v251, v252);
      uint64_t v253 = type metadata accessor for SportsFavoritesTagFeedGroup;
      goto LABEL_209;
    case 0x10uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x10) {
        goto LABEL_158;
      }
      uint64_t v274 = swift_projectBox();
      uint64_t v275 = swift_projectBox();
      uint64_t v190 = v466;
      sub_1DF68D598(v274, v466, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
      uint64_t v191 = v467;
      sub_1DF68D598(v275, v467, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
      uint64_t v276 = sub_1DFDF6EC0();
      uint64_t v278 = v277;
      if (v276 == sub_1DFDF6EC0() && v278 == v279) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsScoresTagFeedGroup;
      goto LABEL_232;
    case 0x11uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x11) {
        goto LABEL_158;
      }
      uint64_t v280 = swift_projectBox();
      uint64_t v281 = swift_projectBox();
      uint64_t v190 = v469;
      sub_1DF68D598(v280, v469, (uint64_t (*)(void))type metadata accessor for SportsLinksTagFeedGroup);
      uint64_t v191 = v470;
      sub_1DF68D598(v281, v470, (uint64_t (*)(void))type metadata accessor for SportsLinksTagFeedGroup);
      uint64_t v282 = sub_1DFDF6EC0();
      uint64_t v284 = v283;
      if (v282 == sub_1DFDF6EC0() && v284 == v285) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsLinksTagFeedGroup;
      goto LABEL_232;
    case 0x12uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x12) {
        goto LABEL_158;
      }
      uint64_t v286 = swift_projectBox();
      uint64_t v287 = swift_projectBox();
      uint64_t v190 = v471;
      sub_1DF68D598(v286, v471, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      uint64_t v191 = v472;
      sub_1DF68D598(v287, v472, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      uint64_t v288 = sub_1DFDF6EC0();
      uint64_t v290 = v289;
      if (v288 == sub_1DFDF6EC0() && v290 == v291) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for MySportsTopicTagFeedGroup;
      goto LABEL_232;
    case 0x13uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x13) {
        goto LABEL_158;
      }
      uint64_t v292 = swift_projectBox();
      uint64_t v293 = swift_projectBox();
      uint64_t v190 = v473;
      sub_1DF68D598(v292, v473, (uint64_t (*)(void))type metadata accessor for SportsStandingsTagFeedGroup);
      uint64_t v191 = v474;
      sub_1DF68D598(v293, v474, (uint64_t (*)(void))type metadata accessor for SportsStandingsTagFeedGroup);
      uint64_t v294 = sub_1DFDF6EC0();
      uint64_t v296 = v295;
      if (v294 == sub_1DFDF6EC0() && v296 == v297) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsStandingsTagFeedGroup;
      goto LABEL_232;
    case 0x14uLL:
      unint64_t v298 = v517;
      if (((v298 >> 58) & 0x3C | (v298 >> 1) & 3) == 0x14)
      {
        uint64_t v299 = swift_projectBox();
        uint64_t v300 = swift_projectBox();
        uint64_t v190 = v475;
        sub_1DF68D598(v299, v475, (uint64_t (*)(void))type metadata accessor for SportsBracketTagFeedGroup);
        uint64_t v191 = v476;
        sub_1DF68D598(v300, v476, (uint64_t (*)(void))type metadata accessor for SportsBracketTagFeedGroup);
        uint64_t v301 = sub_1DFDF6EC0();
        uint64_t v303 = v302;
        if (v301 == sub_1DFDF6EC0() && v303 == v304) {
          char v173 = 1;
        }
        else {
          char v173 = sub_1DFDFFF50();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v427 = type metadata accessor for SportsBracketTagFeedGroup;
LABEL_232:
        uint64_t v174 = v427;
        sub_1DF68D66C(v191, (uint64_t (*)(void))v427);
        uint64_t v175 = v190;
LABEL_233:
        v430 = v174;
LABEL_234:
        sub_1DF68D66C(v175, (uint64_t (*)(void))v430);
      }
      else
      {
        unint64_t v419 = v168;
        sub_1DEA6AD44(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
        uint64_t v420 = swift_allocObject();
        *(_OWORD *)(v420 + 16) = xmmword_1DFE0B750;
        uint64_t v519 = 0;
        unint64_t v520 = 0xE000000000000000;
        unint64_t v518 = v419;
        sub_1DFDFFB10();
        uint64_t v421 = v519;
        unint64_t v422 = v520;
        uint64_t v423 = MEMORY[0x1E4FBB1A0];
        *(void *)(v420 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v424 = sub_1DEA08668();
        *(void *)(v420 + 64) = v424;
        *(void *)(v420 + 32) = v421;
        *(void *)(v420 + 40) = v422;
        uint64_t v519 = 0;
        unint64_t v520 = 0xE000000000000000;
        unint64_t v518 = v298;
        sub_1DFDFFB10();
        uint64_t v425 = v519;
        unint64_t v426 = v520;
        *(void *)(v420 + 96) = v423;
        *(void *)(v420 + 104) = v424;
        *(void *)(v420 + 72) = v425;
        *(void *)(v420 + 80) = v426;
        MEMORY[0x1E01DB6A0]("Missing case in section descriptor equatable, lhs=%@, rhs=%@", 60, 2, v420);
        swift_bridgeObjectRelease();
LABEL_158:
        char v173 = 0;
      }
      return v173 & 1;
    case 0x15uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x15) {
        goto LABEL_158;
      }
      uint64_t v305 = swift_projectBox();
      uint64_t v306 = swift_projectBox();
      uint64_t v190 = v477;
      sub_1DF68D598(v305, v477, (uint64_t (*)(void))type metadata accessor for SportsBoxScoresTagFeedGroup);
      uint64_t v191 = v478;
      sub_1DF68D598(v306, v478, (uint64_t (*)(void))type metadata accessor for SportsBoxScoresTagFeedGroup);
      uint64_t v307 = sub_1DFDF6EC0();
      uint64_t v309 = v308;
      if (v307 == sub_1DFDF6EC0() && v309 == v310) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsBoxScoresTagFeedGroup;
      goto LABEL_232;
    case 0x16uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x16) {
        goto LABEL_158;
      }
      uint64_t v311 = swift_projectBox();
      uint64_t v312 = swift_projectBox();
      uint64_t v190 = v479;
      sub_1DF68D598(v311, v479, (uint64_t (*)(void))type metadata accessor for SportsEventInfoTagFeedGroup);
      uint64_t v191 = v480;
      sub_1DF68D598(v312, v480, (uint64_t (*)(void))type metadata accessor for SportsEventInfoTagFeedGroup);
      uint64_t v313 = sub_1DFDF6EC0();
      uint64_t v315 = v314;
      if (v313 == sub_1DFDF6EC0() && v315 == v316) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsEventInfoTagFeedGroup;
      goto LABEL_232;
    case 0x17uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x17) {
        goto LABEL_158;
      }
      uint64_t v317 = swift_projectBox();
      uint64_t v318 = swift_projectBox();
      uint64_t v190 = v481;
      sub_1DF68D598(v317, v481, (uint64_t (*)(void))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      uint64_t v191 = v482;
      sub_1DF68D598(v318, v482, (uint64_t (*)(void))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      uint64_t v319 = sub_1DFDF6EC0();
      uint64_t v321 = v320;
      if (v319 == sub_1DFDF6EC0() && v321 == v322) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsInjuryReportsTagFeedGroup;
      goto LABEL_232;
    case 0x18uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x18) {
        goto LABEL_158;
      }
      uint64_t v323 = swift_projectBox();
      uint64_t v324 = swift_projectBox();
      uint64_t v190 = v483;
      sub_1DF68D598(v323, v483, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      uint64_t v191 = v484;
      sub_1DF68D598(v324, v484, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      uint64_t v325 = sub_1DFDF6EC0();
      uint64_t v327 = v326;
      if (v325 == sub_1DFDF6EC0() && v327 == v328) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsKeyPlayersTagFeedGroup;
      goto LABEL_232;
    case 0x19uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x18) {
        goto LABEL_158;
      }
      uint64_t v329 = swift_projectBox();
      uint64_t v330 = swift_projectBox();
      uint64_t v331 = v486;
      sub_1DF68D598(v329, v486, (uint64_t (*)(void))type metadata accessor for SportsEventArticlesTagFeedGroup);
      uint64_t v332 = v485;
      sub_1DF68D598(v330, v485, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      uint64_t v333 = sub_1DFDF6EC0();
      uint64_t v335 = v334;
      if (v333 == sub_1DFDF6EC0() && v335 == v336) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DF68D66C(v332, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      v430 = type metadata accessor for SportsEventArticlesTagFeedGroup;
      uint64_t v175 = v331;
      goto LABEL_234;
    case 0x1AuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x1A) {
        goto LABEL_158;
      }
      uint64_t v337 = swift_projectBox();
      uint64_t v338 = swift_projectBox();
      uint64_t v190 = v487;
      sub_1DF68D598(v337, v487, (uint64_t (*)(void))type metadata accessor for HighlightsTagFeedGroup);
      uint64_t v191 = v488;
      sub_1DF68D598(v338, v488, (uint64_t (*)(void))type metadata accessor for HighlightsTagFeedGroup);
      uint64_t v339 = sub_1DFDF6EC0();
      uint64_t v341 = v340;
      if (v339 == sub_1DFDF6EC0() && v341 == v342) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for HighlightsTagFeedGroup;
      goto LABEL_232;
    case 0x1BuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x1B) {
        goto LABEL_158;
      }
      uint64_t v343 = swift_projectBox();
      uint64_t v344 = swift_projectBox();
      id v251 = v489;
      sub_1DF68D598(v343, (uint64_t)v489, (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
      uint64_t v252 = v490;
      sub_1DF68D598(v344, (uint64_t)v490, (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
      if (*v251 == *v252 && v251[1] == v252[1]) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      uint64_t v253 = type metadata accessor for ForYouTagFeedGroup;
      goto LABEL_209;
    case 0x1CuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x1C) {
        goto LABEL_158;
      }
      uint64_t v345 = swift_projectBox();
      uint64_t v346 = swift_projectBox();
      uint64_t v190 = v491;
      sub_1DF68D598(v345, v491, (uint64_t (*)(void))type metadata accessor for RecentStoriesTagFeedGroup);
      uint64_t v191 = v492;
      sub_1DF68D598(v346, v492, (uint64_t (*)(void))type metadata accessor for RecentStoriesTagFeedGroup);
      uint64_t v347 = sub_1DFDF6EC0();
      uint64_t v349 = v348;
      if (v347 == sub_1DFDF6EC0() && v349 == v350) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for RecentStoriesTagFeedGroup;
      goto LABEL_232;
    case 0x1DuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x1D) {
        goto LABEL_158;
      }
      uint64_t v351 = swift_projectBox();
      uint64_t v352 = swift_projectBox();
      id v251 = v493;
      sub_1DF68D598(v351, (uint64_t)v493, (uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
      uint64_t v252 = v494;
      sub_1DF68D598(v352, (uint64_t)v494, (uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
      if (*v251 == *v252 && v251[1] == v252[1]) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      uint64_t v253 = type metadata accessor for DateRangeTagFeedGroup;
LABEL_209:
      uint64_t v174 = v253;
      sub_1DF68D66C((uint64_t)v252, (uint64_t (*)(void))v253);
      uint64_t v175 = (uint64_t)v251;
      goto LABEL_233;
    case 0x1EuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x1E) {
        goto LABEL_158;
      }
      uint64_t v353 = swift_projectBox();
      uint64_t v354 = swift_projectBox();
      uint64_t v190 = v495;
      sub_1DF68D598(v353, v495, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
      uint64_t v191 = v496;
      sub_1DF68D598(v354, v496, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
      uint64_t v355 = sub_1DFDF6EC0();
      uint64_t v357 = v356;
      if (v355 == sub_1DFDF6EC0() && v357 == v358) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsOnboardingTagFeedGroup;
      goto LABEL_232;
    case 0x1FuLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x1F) {
        goto LABEL_158;
      }
      uint64_t v359 = swift_projectBox();
      uint64_t v360 = swift_projectBox();
      uint64_t v190 = v497;
      sub_1DF68D598(v359, v497, (uint64_t (*)(void))type metadata accessor for SportsMastheadTagFeedGroup);
      uint64_t v191 = v498;
      sub_1DF68D598(v360, v498, (uint64_t (*)(void))type metadata accessor for SportsMastheadTagFeedGroup);
      uint64_t v361 = sub_1DFDF6EC0();
      uint64_t v363 = v362;
      if (v361 == sub_1DFDF6EC0() && v363 == v364) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsMastheadTagFeedGroup;
      goto LABEL_232;
    case 0x20uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x20) {
        goto LABEL_158;
      }
      uint64_t v365 = swift_projectBox();
      uint64_t v366 = swift_projectBox();
      uint64_t v190 = v499;
      sub_1DF68D598(v365, v499, (uint64_t (*)(void))type metadata accessor for SportsEventTopicTagFeedGroup);
      uint64_t v191 = v500;
      sub_1DF68D598(v366, v500, (uint64_t (*)(void))type metadata accessor for SportsEventTopicTagFeedGroup);
      uint64_t v367 = sub_1DFDF6EC0();
      uint64_t v369 = v368;
      if (v367 == sub_1DFDF6EC0() && v369 == v370) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SportsEventTopicTagFeedGroup;
      goto LABEL_232;
    case 0x21uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x21) {
        goto LABEL_158;
      }
      uint64_t v371 = swift_projectBox();
      uint64_t v372 = swift_projectBox();
      uint64_t v190 = v501;
      sub_1DF68D598(v371, v501, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      uint64_t v191 = v502;
      sub_1DF68D598(v372, v502, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      uint64_t v373 = sub_1DFDF6EC0();
      uint64_t v375 = v374;
      if (v373 == sub_1DFDF6EC0() && v375 == v376) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for PuzzleListTagFeedGroup;
      goto LABEL_232;
    case 0x22uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x22) {
        goto LABEL_158;
      }
      uint64_t v377 = swift_projectBox();
      uint64_t v378 = swift_projectBox();
      uint64_t v190 = v503;
      sub_1DF68D598(v377, v503, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroup);
      uint64_t v191 = v504;
      sub_1DF68D598(v378, v504, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroup);
      uint64_t v379 = sub_1DFDF6EC0();
      uint64_t v381 = v380;
      if (v379 == sub_1DFDF6EC0() && v381 == v382) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for PuzzleArchiveTagFeedGroup;
      goto LABEL_232;
    case 0x23uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x23) {
        goto LABEL_158;
      }
      uint64_t v383 = swift_projectBox();
      uint64_t v384 = swift_projectBox();
      uint64_t v190 = v505;
      sub_1DF68D598(v383, v505, (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      uint64_t v191 = v506;
      sub_1DF68D598(v384, v506, (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      uint64_t v385 = sub_1DFDF6EC0();
      uint64_t v387 = v386;
      if (v385 == sub_1DFDF6EC0() && v387 == v388) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup;
      goto LABEL_232;
    case 0x24uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x24) {
        goto LABEL_158;
      }
      uint64_t v389 = swift_projectBox();
      uint64_t v390 = swift_projectBox();
      uint64_t v190 = v507;
      sub_1DF68D598(v389, v507, (uint64_t (*)(void))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      uint64_t v191 = v508;
      sub_1DF68D598(v390, v508, (uint64_t (*)(void))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      uint64_t v391 = sub_1DFDF6EC0();
      uint64_t v393 = v392;
      if (v391 == sub_1DFDF6EC0() && v393 == v394) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for PuzzleFeaturedTagFeedGroup;
      goto LABEL_232;
    case 0x25uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x25) {
        goto LABEL_158;
      }
      uint64_t v395 = swift_projectBox();
      uint64_t v396 = swift_projectBox();
      uint64_t v190 = v509;
      sub_1DF68D598(v395, v509, (uint64_t (*)(void))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      uint64_t v191 = v510;
      sub_1DF68D598(v396, v510, (uint64_t (*)(void))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      uint64_t v397 = sub_1DFDF6EC0();
      uint64_t v399 = v398;
      if (v397 == sub_1DFDF6EC0() && v399 == v400) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for PuzzleFullArchiveTagFeedGroup;
      goto LABEL_232;
    case 0x26uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x26) {
        goto LABEL_158;
      }
      uint64_t v401 = swift_projectBox();
      uint64_t v402 = swift_projectBox();
      uint64_t v190 = v511;
      sub_1DF68D598(v401, v511, (uint64_t (*)(void))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      uint64_t v191 = v512;
      sub_1DF68D598(v402, v512, (uint64_t (*)(void))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      uint64_t v403 = sub_1DFDF6EC0();
      uint64_t v405 = v404;
      if (v403 == sub_1DFDF6EC0() && v405 == v406) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for PuzzleScoreboardTagFeedGroup;
      goto LABEL_232;
    case 0x27uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x27) {
        goto LABEL_158;
      }
      uint64_t v407 = swift_projectBox();
      uint64_t v408 = swift_projectBox();
      uint64_t v190 = v513;
      sub_1DF68D598(v407, v513, (uint64_t (*)(void))type metadata accessor for AffinityTagFeedGroup);
      uint64_t v191 = v514;
      sub_1DF68D598(v408, v514, (uint64_t (*)(void))type metadata accessor for AffinityTagFeedGroup);
      uint64_t v409 = sub_1DFDF6EC0();
      uint64_t v411 = v410;
      if (v409 == sub_1DFDF6EC0() && v411 == v412) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for AffinityTagFeedGroup;
      goto LABEL_232;
    case 0x28uLL:
      if (((v517 >> 58) & 0x3C | (v517 >> 1) & 3) != 0x28) {
        goto LABEL_158;
      }
      uint64_t v413 = swift_projectBox();
      uint64_t v414 = swift_projectBox();
      uint64_t v190 = v515;
      sub_1DF68D598(v413, v515, (uint64_t (*)(void))type metadata accessor for SponsoredBannerTagFeedGroup);
      uint64_t v191 = v516;
      sub_1DF68D598(v414, v516, (uint64_t (*)(void))type metadata accessor for SponsoredBannerTagFeedGroup);
      uint64_t v415 = sub_1DFDF6EC0();
      uint64_t v417 = v416;
      if (v415 == sub_1DFDF6EC0() && v417 == v418) {
        char v173 = 1;
      }
      else {
        char v173 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v427 = type metadata accessor for SponsoredBannerTagFeedGroup;
      goto LABEL_232;
    default:
      if ((v517 >> 58) & 0x3C | (v517 >> 1) & 3) {
        goto LABEL_158;
      }
      uint64_t v171 = swift_projectBox();
      uint64_t v172 = swift_projectBox();
      sub_1DF68D598(v171, (uint64_t)v170, type metadata accessor for TagFeedSectionGapDescriptor);
      sub_1DF68D598(v172, (uint64_t)v167, type metadata accessor for TagFeedSectionGapDescriptor);
      char v173 = sub_1DFB76250((uint64_t)v170, (uint64_t)v167);
      uint64_t v174 = (uint64_t (*)())type metadata accessor for TagFeedSectionGapDescriptor;
      sub_1DF68D66C((uint64_t)v167, type metadata accessor for TagFeedSectionGapDescriptor);
      uint64_t v175 = (uint64_t)v170;
      goto LABEL_233;
  }
}

uint64_t sub_1DF68D598(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1DF68D600()
{
  if (!qword_1EAC2F560)
  {
    sub_1DFDF8130();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC2F560);
    }
  }
}

uint64_t sub_1DF68D66C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF68D6CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for ChannelIssuesBuildBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ChannelIssuesBuildBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 24, v5, v7);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for ChannelIssuesBuildBlueprintModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  a1[8] = a2[8];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = a2[10];
  a1[9] = a2[9];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[10] = v4;
  return a1;
}

uint64_t assignWithTake for ChannelIssuesBuildBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_unknownObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelIssuesBuildBlueprintModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelIssuesBuildBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelIssuesBuildBlueprintModifier()
{
  return &type metadata for ChannelIssuesBuildBlueprintModifier;
}

uint64_t sub_1DF68DA30(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v41 = a3;
  uint64_t v42 = a2;
  sub_1DF68EAD8(0, &qword_1EAC2F5A8, MEMORY[0x1E4FACA00]);
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (char *)&v31 - v6;
  sub_1DF68E9AC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v35 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF68EAD8(0, (unint64_t *)&qword_1EAC20410, MEMORY[0x1E4FAD830]);
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)&v31 - v10;
  sub_1DF68EB98();
  MEMORY[0x1F4188790](v11 - 8);
  sub_1DF68EAD8(0, (unint64_t *)&qword_1EAC203E0, MEMORY[0x1E4FAC180]);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  uint64_t v33 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v31 - v14;
  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  uint64_t v16 = sub_1DF69A05C(*v3);
  uint64_t v44 = v3;
  sub_1DEB06684((void (*)(id *))sub_1DF68EC64, (uint64_t)v43, v16, (uint64_t)v47);
  swift_bridgeObjectRelease();
  unint64_t v17 = v3[2];
  unint64_t v45 = v4[1];
  unint64_t v46 = v17;
  sub_1DEB0D750(0);
  uint64_t v19 = v18;
  uint64_t v20 = sub_1DF68ED58(&qword_1EAC2F5D0, sub_1DEB0D750);
  uint64_t v21 = sub_1DF68ED58(&qword_1EAC2F5D8, sub_1DEB0D750);
  swift_bridgeObjectRetain();
  MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v19, v20, v21);
  type metadata accessor for ChannelIssuesModel();
  sub_1DEB0D28C();
  sub_1DF68ED58(&qword_1EAC203F0, (void (*)(uint64_t))type metadata accessor for ChannelIssuesModel);
  sub_1DFDF14C0();
  uint64_t v22 = v32;
  sub_1DFDF1520();
  swift_bridgeObjectRelease();
  sub_1DF68EC84();
  uint64_t v23 = v33;
  unint64_t v24 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 16))(v25 + v24, v15, v22);
  uint64_t v26 = sub_1DF68EA78(&qword_1EAC2F5B8);
  uint64_t v27 = sub_1DF68EA78(&qword_1EAC2F5C0);
  MEMORY[0x1E01DBA70](v25, v22, v26, v27);
  uint64_t v28 = v34;
  sub_1DFDF5A70();
  uint64_t v29 = v38;
  sub_1DFDF3030();
  v42(v29);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v22);
}

uint64_t sub_1DF68DFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v28 = a3;
  uint64_t v27 = type metadata accessor for ChannelIssuesModel();
  MEMORY[0x1F4188790](v27);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF99F0();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v23 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 9);
  char v11 = *(unsigned char *)(a1 + 10);
  char v12 = *(unsigned char *)(a1 + 11);
  char v13 = *(unsigned char *)(a1 + 12);
  uint64_t v14 = *(void **)(a1 + 16);
  LOBYTE(a1) = *(unsigned char *)(a1 + 24);
  sub_1DF68E208(v26, v8, v23);
  sub_1DEB8A284();
  uint64_t v16 = &v5[*(int *)(v15 + 48)];
  *(void *)uint64_t v5 = v8;
  v5[8] = v9;
  v5[9] = v10;
  v5[10] = v11;
  v5[11] = v12;
  v5[12] = v13;
  *((void *)v5 + 2) = v14;
  v5[24] = a1;
  uint64_t v18 = v23;
  uint64_t v17 = v24;
  uint64_t v19 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v16, v23, v25);
  sub_1DF68ED58(&qword_1EAC203F0, (void (*)(uint64_t))type metadata accessor for ChannelIssuesModel);
  id v20 = v8;
  id v21 = v14;
  sub_1DFDF0B40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
}

uint64_t sub_1DF68E208@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DFDF99F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v51 = (char *)&v47 - v11;
  sub_1DF68ECF8(0, &qword_1EAC237B0, MEMORY[0x1E4FBBE00]);
  uint64_t v53 = v7;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DFE0B250;
  sub_1DFDF99E0();
  v57[0] = v12;
  sub_1DF68ED58((unint64_t *)&qword_1EBABA2C0, MEMORY[0x1E4F80458]);
  sub_1DF68ECF8(0, &qword_1EBABA8C0, MEMORY[0x1E4FBB320]);
  sub_1DED85DB0();
  sub_1DFDFF830();
  uint64_t v52 = a1;
  id v13 = *(id *)(a1 + 64);
  unsigned int v14 = objc_msgSend(a2, sel_isPaid);
  unsigned int v15 = objc_msgSend(a2, sel_isBundlePaid);
  id v16 = objc_msgSend(objc_msgSend(a2, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v17 = sub_1DFDFDD20();
  uint64_t v19 = v18;

  uint64_t v49 = v17;
  if (!v14)
  {
    if (v15) {
      goto LABEL_6;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v27 = v51;
LABEL_9:
    sub_1DFDF9990();
    sub_1DF408D08(v27, (uint64_t)v10);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v53 + 8);
    v28(v10, v6);
    v28(v27, v6);
    goto LABEL_29;
  }
  unsigned int v48 = v15;
  id v20 = objc_msgSend(objc_msgSend(v13, sel_purchaseProvider), sel_purchasedTagIDs);
  uint64_t v21 = sub_1DFDFE5D0();
  id v50 = v13;
  uint64_t v22 = v10;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v25 = v21;

  LOBYTE(v20) = sub_1DEAAB55C(v17, v19, v25);
  swift_unknownObjectRelease();
  a3 = v24;
  a2 = v23;
  char v10 = v22;
  id v13 = v50;
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_8;
  }
  if (!v48) {
    goto LABEL_26;
  }
LABEL_6:
  id v50 = v13;
  uint64_t v26 = (char *)objc_msgSend(objc_msgSend(v13, sel_bundleSubscriptionProvider, a3), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v26, v26 + 1))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v55, (uint64_t)v57);
  if (!v58)
  {
    sub_1DE9E4C20((uint64_t)v57);
    goto LABEL_16;
  }
  sub_1DEA69724();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    id v29 = 0;
    unint64_t v31 = 0;
    goto LABEL_17;
  }
  id v29 = v54;
  id v30 = objc_msgSend(v54, sel_integerValue);
  if (v30 == (id)-1)
  {

    goto LABEL_28;
  }
  unint64_t v31 = (unint64_t)v30;
LABEL_17:
  if (objc_getAssociatedObject(v26, (const void *)~v31))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v55, (uint64_t)v57);
  if (!v58)
  {
    sub_1DE9E4C20((uint64_t)v57);
LABEL_25:

    if (v31) {
      goto LABEL_28;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v27 = v51;
    goto LABEL_29;
  }
  sub_1DEA69724();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_25;
  }
  id v32 = v54;
  unsigned int v33 = objc_msgSend(v32, sel_integerValue);

  if ((((v33 + 1) ^ (v31 + 1)) & 1) == 0) {
    goto LABEL_26;
  }
LABEL_28:
  id v34 = objc_msgSend(objc_msgSend(v50, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v35 = objc_msgSend(v34, sel_bundleChannelIDs);

  uint64_t v36 = (void *)sub_1DFDFDCE0();
  unsigned __int8 v37 = objc_msgSend(v35, sel_containsObject_, v36);
  swift_bridgeObjectRelease();

  uint64_t v27 = v51;
  if (v37) {
    goto LABEL_9;
  }
LABEL_29:
  uint64_t v38 = *(void *)(v52 + 80);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v38 + 56))(ObjectType, v38);
  sub_1DFDED020();
  swift_release();
  uint64_t v40 = v57[0];
  id v41 = objc_msgSend(a2, sel_identifier);
  uint64_t v42 = sub_1DFDFDD20();
  uint64_t v44 = v43;

  LOBYTE(v41) = sub_1DEAAB55C(v42, v44, v40);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v41)
  {
    sub_1DFDF9980();
    sub_1DF408D08(v27, (uint64_t)v10);
    unint64_t v46 = *(void (**)(char *, uint64_t))(v53 + 8);
    v46(v10, v6);
    return ((uint64_t (*)(char *, uint64_t))v46)(v27, v6);
  }
  return result;
}

uint64_t sub_1DF68E8D0(uint64_t a1)
{
  unint64_t v2 = sub_1DF68EDA0();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DF68E910()
{
  unint64_t result = qword_1EAC2F5A0;
  if (!qword_1EAC2F5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F5A0);
  }
  return result;
}

uint64_t sub_1DF68E964()
{
  return sub_1DF68ED58(&qword_1EAC203F0, (void (*)(uint64_t))type metadata accessor for ChannelIssuesModel);
}

void sub_1DF68E9AC()
{
  if (!qword_1EAC2F5B0)
  {
    sub_1DF68EAD8(255, (unint64_t *)&qword_1EAC203E0, MEMORY[0x1E4FAC180]);
    sub_1DF68EA78(&qword_1EAC2F5B8);
    sub_1DF68EA78(&qword_1EAC2F5C0);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F5B0);
    }
  }
}

uint64_t sub_1DF68EA78(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DF68EAD8(255, (unint64_t *)&qword_1EAC203E0, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF68EAD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for ChannelIssuesSectionDescriptor;
    v8[1] = type metadata accessor for ChannelIssuesModel();
    _OWORD v8[2] = sub_1DEB0D28C();
    v8[3] = sub_1DF68ED58(&qword_1EAC203F0, (void (*)(uint64_t))type metadata accessor for ChannelIssuesModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DF68EB98()
{
  if (!qword_1EAC2F5C8)
  {
    sub_1DEB0D750(255);
    sub_1DF68ED58(&qword_1EAC2F5D0, sub_1DEB0D750);
    sub_1DF68ED58(&qword_1EAC2F5D8, sub_1DEB0D750);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F5C8);
    }
  }
}

uint64_t sub_1DF68EC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF68DFB8(a1, *(void *)(v2 + 16), a2);
}

void sub_1DF68EC84()
{
  if (!qword_1EAC2F5E0)
  {
    sub_1DF68EAD8(255, (unint64_t *)&qword_1EAC203E0, MEMORY[0x1E4FAC180]);
    unint64_t v0 = sub_1DFDFFEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F5E0);
    }
  }
}

void sub_1DF68ECF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1DFDF99F0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF68ED58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF68EDA0()
{
  unint64_t result = qword_1EAC2F5E8[0];
  if (!qword_1EAC2F5E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAC2F5E8);
  }
  return result;
}

uint64_t sub_1DF68EDF4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
    uint64_t v4 = sub_1DFDFE220();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF68EE98()
{
  sub_1DEA35DD4(0);
  uint64_t v0 = sub_1DFDF8030();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEA73E18(0, (unint64_t *)&qword_1EBABB670, (uint64_t (*)(uint64_t))sub_1DEE1FDA8, MEMORY[0x1E4FBBE00]);
  sub_1DEE1FDA8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B750;
  uint64_t v8 = (uint64_t *)(v7 + v6);
  uint64_t *v8 = sub_1DEDFFD88((uint64_t)&unk_1F3A69DD8);
  uint64_t v9 = *(void (**)(uint64_t *, void, uint64_t))(v4 + 104);
  v9(v8, *MEMORY[0x1E4F7F8D0], v3);
  char v10 = (uint64_t *)((char *)v8 + v5);
  sub_1DEA73E18(0, &qword_1EBACBD50, MEMORY[0x1E4F80420], v1);
  uint64_t v11 = sub_1DFDF98F0();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E4F80418], v11);
  uint64_t v15 = sub_1DF3C10DC(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *char v10 = v15;
  v9(v10, *MEMORY[0x1E4F7F8A8], v3);
  sub_1DF3DDFF0(v7);
  return v0;
}

uint64_t sub_1DF68F170(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  uint64_t v3 = sub_1DFDF9D80();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF68F230, 0, 0);
}

uint64_t sub_1DF68F230()
{
  sub_1DFDF88A0();
  v0[6].i64[1] = v0[1].i64[0];
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[7].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[4], v0[4], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7].i64[1] = (uint64_t)v2;
  sub_1DEBFF55C();
  v0[8].i64[0] = v3;
  *uint64_t v2 = v0;
  v2[1] = sub_1DF68F394;
  return MEMORY[0x1F4188160](&v0[1].u64[1], 0, 0, 0xD000000000000027, 0x80000001DFF00610, sub_1DF693E04, v1, v3);
}

uint64_t sub_1DF68F394()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DF68FCF4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1DF68F4B0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DF68F4B0()
{
  uint64_t v46 = v0;
  unint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = *(void *)(v0 + 136);
  sub_1DE924AA4((unint64_t *)&qword_1EBABA9B0, (void (*)(uint64_t))sub_1DEBFF55C);
  unint64_t v45 = (void *)sub_1DFDFE0D0();
  swift_bridgeObjectRetain();
  sub_1DF692830(&v45);
  if (v2)
  {
    return swift_release();
  }
  uint64_t v4 = *(void *)(v0 + 104);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1DF209A00((uint64_t)v45);
  sub_1DFDF87F0();
  unint64_t v6 = (unint64_t)sub_1DF69152C(v5, v4, *(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1EBAC0170 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B750;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1E4FBB550];
  uint64_t v10 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v7 + 64) = v10;
  *(void *)(v7 + 32) = v8;
  if (v6 >> 62)
  {
    uint64_t v39 = v9;
    uint64_t v40 = v10;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    uint64_t v10 = v40;
    uint64_t v9 = v39;
  }
  else
  {
    uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v12 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 80);
  *(void *)(v7 + 96) = v9;
  *(void *)(v7 + 104) = v10;
  *(void *)(v7 + 72) = v11;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  type metadata accessor for LatestStoriesTodayFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v15(v12, v14);
  uint64_t v16 = sub_1DEC7FDBC(*(void *)(v0 + 56), v6);
  uint64_t v42 = v17;
  uint64_t v43 = v16;
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
  unint64_t v44 = v21;
  unint64_t v23 = v21 >> 1;
  if (__OFSUB__(v23, v19))
  {
    __break(1u);
    goto LABEL_42;
  }
  *(void *)(v22 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v22 + 64) = MEMORY[0x1E4FBB5C8];
  unint64_t v41 = v23 - v19;
  *(void *)(v22 + 32) = v23 - v19;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  if (v19 == v23) {
    goto LABEL_36;
  }
  uint64_t v24 = *(void *)(v0 + 96);
  uint64_t v25 = *(void *)(v0 + 80);
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v15(v24, v25);
  if (*(unsigned char *)(v0 + 144) == 1)
  {
    unint64_t v6 = v43;
    uint64_t v15 = (void (*)(uint64_t, uint64_t))v44;
    if ((v44 & 1) == 0)
    {
      swift_unknownObjectRetain();
LABEL_16:
      sub_1DEC79488(v6, v42, v19, (unint64_t)v15);
LABEL_25:
      swift_unknownObjectRelease();
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
      uint64_t v28 = (void *)sub_1DFDFE200();
      swift_release();
      id v29 = (void *)FCPromoteAccessibleHeadline();
      goto LABEL_32;
    }
    sub_1DFDFFF90();
    swift_unknownObjectRetain_n();
    uint64_t v26 = swift_dynamicCastClass();
    if (!v26)
    {
      swift_unknownObjectRelease();
      uint64_t v26 = MEMORY[0x1E4FBC860];
    }
    uint64_t v27 = *(void *)(v26 + 16);
    swift_release();
    if (v27 == v41)
    {
      if (!swift_dynamicCastClass()) {
        swift_unknownObjectRelease();
      }
      goto LABEL_25;
    }
LABEL_42:
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
  if (v44)
  {
    sub_1DFDFFF90();
    swift_unknownObjectRetain_n();
    uint64_t v30 = swift_dynamicCastClass();
    if (!v30)
    {
      swift_unknownObjectRelease();
      uint64_t v30 = MEMORY[0x1E4FBC860];
    }
    uint64_t v31 = *(void *)(v30 + 16);
    swift_release();
    if (v31 == v41)
    {
      if (!swift_dynamicCastClass()) {
        swift_unknownObjectRelease();
      }
      goto LABEL_31;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRetain();
  }
  sub_1DEC79488(v43, v42, v19, v44);
LABEL_31:
  swift_unknownObjectRelease();
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
  uint64_t v28 = (void *)sub_1DFDFE200();
  swift_release();
  id v29 = (void *)FCPromoteOneHeadline();
LABEL_32:
  id v32 = v29;

  if (v32)
  {
    uint64_t v33 = sub_1DFDFE220();

    sub_1DFDF8ED0();
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1DFDF8EC0();
    swift_unknownObjectRelease();
    swift_release();
    swift_task_dealloc();
    id v35 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v35(v33, v34);
  }
LABEL_36:
  swift_release();
  uint64_t v36 = sub_1DFDF8510();
  sub_1DE924AA4((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v36 - 8) + 104))(v37, *MEMORY[0x1E4F7F980], v36);
  swift_willThrow();
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_1DF68FCF4()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DF68FD68(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA73E18(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  v3[5] = swift_task_alloc();
  sub_1DEA73E18(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v4);
  v3[6] = swift_task_alloc();
  sub_1DEA73E18(0, &qword_1EBABA130, (uint64_t (*)(uint64_t))sub_1DEA35DD4, v4);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_1DFDFB960();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v6 = sub_1DFDFAFE0();
  v3[11] = v6;
  v3[12] = *(void *)(v6 - 8);
  v3[13] = swift_task_alloc();
  sub_1DEBFF418(0);
  v3[14] = swift_task_alloc();
  sub_1DEBFF4C8(0);
  v3[15] = swift_task_alloc();
  uint64_t v7 = sub_1DFDE7630();
  v3[16] = v7;
  v3[17] = *(void *)(v7 - 8);
  v3[18] = swift_task_alloc();
  type metadata accessor for LatestStoriesTodayFeedGroupConfigData();
  v3[19] = swift_task_alloc();
  uint64_t v8 = sub_1DFDFAA20();
  v3[20] = v8;
  v3[21] = *(void *)(v8 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v9 = sub_1DFDFC900();
  v3[24] = v9;
  v3[25] = *(void *)(v9 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  uint64_t v10 = sub_1DFDFCAB0();
  v3[28] = v10;
  v3[29] = *(void *)(v10 - 8);
  v3[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF690194, 0, 0);
}

uint64_t sub_1DF690194()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v58 = MEMORY[0x1E4FBC860];
    uint64_t v4 = sub_1DEDF697C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      return MEMORY[0x1F4136D58](v4, v5, v6, v7, v8);
    }
    uint64_t v9 = *(void *)(v0 + 200);
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      uint64_t v11 = *MEMORY[0x1E4F81600];
      do
      {
        uint64_t v12 = *(void **)(v0 + 216);
        uint64_t v13 = *(void *)(v0 + 192);
        *uint64_t v12 = MEMORY[0x1E01EE240](v10, *(void *)(v0 + 24));
        (*(void (**)(void *, uint64_t, uint64_t))(v9 + 104))(v12, v11, v13);
        unint64_t v15 = *(void *)(v58 + 16);
        unint64_t v14 = *(void *)(v58 + 24);
        if (v15 >= v14 >> 1) {
          sub_1DEDF697C(v14 > 1, v15 + 1, 1);
        }
        uint64_t v16 = *(void *)(v0 + 216);
        uint64_t v17 = *(void *)(v0 + 192);
        ++v10;
        *(void *)(v58 + 16) = v15 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v58+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v15, v16, v17);
      }
      while (v2 != v10);
    }
    else
    {
      uint64_t v18 = (void *)(*(void *)(v0 + 24) + 32);
      long long v55 = *(void (**)(void))(v9 + 104);
      do
      {
        **(void **)(v0 + 208) = *v18;
        v55();
        unint64_t v20 = *(void *)(v58 + 16);
        unint64_t v19 = *(void *)(v58 + 24);
        swift_unknownObjectRetain();
        if (v20 >= v19 >> 1) {
          sub_1DEDF697C(v19 > 1, v20 + 1, 1);
        }
        uint64_t v21 = *(void *)(v0 + 208);
        uint64_t v22 = *(void *)(v0 + 192);
        *(void *)(v58 + 16) = v20 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v58+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v20, v21, v22);
        ++v18;
        --v2;
      }
      while (v2);
    }
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  uint64_t v47 = *(void *)(v0 + 240);
  uint64_t v48 = *(void *)(v0 + 232);
  uint64_t v50 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 168);
  uint64_t v42 = *(void *)(v0 + 176);
  uint64_t v24 = *(void *)(v0 + 152);
  uint64_t v57 = *(void *)(v0 + 160);
  uint64_t v25 = *(void *)(v0 + 144);
  uint64_t v43 = *(void *)(v0 + 136);
  uint64_t v44 = *(void *)(v0 + 128);
  uint64_t v45 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 112);
  uint64_t v51 = *(void *)(v0 + 56);
  uint64_t v26 = *(void *)(v0 + 32);
  uint64_t v53 = *(void *)(v0 + 40);
  uint64_t v52 = *(void *)(v0 + 48);
  sub_1DF11BA44(v3);
  sub_1DF11BB5C(v3);
  sub_1DF11BC90(v3);
  sub_1DFDFCAA0();
  uint64_t v49 = v26;
  uint64_t v54 = *(void *)(v26 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_formatService + 32);
  uint64_t v56 = *(void *)(v26 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_formatService + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v26 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_formatService), v56);
  sub_1DEA49270();
  sub_1DFDF73B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v42, v24, v57);
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  sub_1DFDE7620();
  sub_1DFDE7610();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v25, v44);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_1DFDF66A0();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v45, 1, 1, v27);
  sub_1DEBFF44C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v46, 1, 1, v29);
  sub_1DFDFA860();
  swift_bridgeObjectRelease();
  sub_1DF694084(v46, (uint64_t (*)(void))sub_1DEBFF418);
  sub_1DF694084(v45, (uint64_t (*)(void))sub_1DEBFF4C8);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  *(void *)(v0 + 248) = v30;
  *(void *)(v0 + 256) = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v30(v42, v57);
  sub_1DEA73E18(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], MEMORY[0x1E4FBBE00]);
  unint64_t v31 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 16))(v32 + v31, v47, v50);
  v28(v45, 1, 1, v27);
  sub_1DFC83088(v3);
  sub_1DFC83088(v3);
  sub_1DFC831BC(v3);
  sub_1DFC831D4(v3);
  sub_1DFC83308(v3);
  sub_1DFC83320(v3);
  sub_1DFDFAFD0();
  uint64_t v33 = v49 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_knobs;
  sub_1DEA35DD4(0);
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v51, v33, v34);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v51, 0, 1, v35);
  uint64_t v37 = sub_1DFDFC340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v52, 1, 1, v37);
  *(unsigned char *)(v0 + 288) = 5;
  sub_1DF693F9C(0, (unint64_t *)&unk_1EBAE9F40, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F81400]);
  swift_allocObject();
  swift_retain();
  sub_1DFDFC5C0();
  uint64_t v38 = sub_1DFDFB640();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v53, 1, 1, v38);
  uint64_t v39 = qword_1EBAC0170;
  (id)*MEMORY[0x1E4F7E020];
  if (v39 != -1) {
    swift_once();
  }
  (id)qword_1EBB628A8;
  sub_1DFDFB930();
  uint64_t v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v40;
  void *v40 = v0;
  v40[1] = sub_1DF690AAC;
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v8 = v54;
  uint64_t v7 = v56;
  return MEMORY[0x1F4136D58](v4, v5, v6, v7, v8);
}

uint64_t sub_1DF690AAC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[34] = v1;
  swift_task_dealloc();
  unint64_t v15 = (void (*)(uint64_t, uint64_t))v3[31];
  uint64_t v4 = v3[23];
  uint64_t v5 = v3[20];
  uint64_t v6 = v3[13];
  uint64_t v7 = v3[12];
  uint64_t v8 = v3[11];
  uint64_t v9 = v3[10];
  uint64_t v10 = v3[9];
  uint64_t v11 = v3[8];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v15(v4, v5);
    uint64_t v12 = sub_1DF690E68;
  }
  else
  {
    v3[35] = a1;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v15(v4, v5);
    uint64_t v12 = sub_1DF690D2C;
  }
  return MEMORY[0x1F4188298](v12, 0, 0);
}

uint64_t sub_1DF690D2C()
{
  (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[35];
  return v1(v2);
}

uint64_t sub_1DF690E68()
{
  (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1DF690FA0()
{
  sub_1DEA73E18(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1DFDF8C20();
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  MEMORY[0x1F4188790](v2);
  sub_1DEA49270();
  swift_retain();
  sub_1DFDF7350();
  sub_1DFDF7360();
  sub_1DFDF7360();
  sub_1DEA35DD4(0);
  sub_1DFDF8080();
  sub_1DFDF8050();
  sub_1DFDF80A0();
  type metadata accessor for LatestStoriesTodayFeedGroupKnobs();
  sub_1DF693F9C(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  sub_1DFDF83A0();
  swift_retain();
  sub_1DFDF6F70();
  type metadata accessor for TodayFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF69125C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  sub_1DEAE1B58(0);
  v3[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TodayFeedGroup();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF69134C, 0, 0);
}

uint64_t sub_1DF69134C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  sub_1DEF1D768();
  uint64_t v5 = v4;
  sub_1DFDF92B0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DF694084(v0[6], (uint64_t (*)(void))sub_1DEAE1B58);
  }
  else
  {
    sub_1DEF73790(v0[6], v0[9]);
    sub_1DFDF88A0();
    uint64_t v8 = v0[9];
    char v10 = sub_1DEB617C8(v0[2]);
    swift_release();
    sub_1DF694084(v8, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    if (v10)
    {
      sub_1DF69401C(v0[5], v0[3], (uint64_t (*)(void))sub_1DEF1D768);
      uint64_t v6 = 0;
      goto LABEL_4;
    }
  }
  uint64_t v6 = 1;
LABEL_4:
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v0[3], v6, 1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

id sub_1DF69152C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA74FD4();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE28FE0;
  uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_cloudContext);
  id result = objc_msgSend(v6, sel_subscriptionController);
  if (result)
  {
    uint64_t v8 = result;
    id v9 = objc_msgSend(result, sel_autoFavoriteTagIDs);

    if (v9)
    {
      uint64_t v10 = sub_1DFDFE220();
    }
    else
    {
      uint64_t v10 = MEMORY[0x1E4FBC860];
    }
    uint64_t v11 = self;
    sub_1DE9DB9D8(v10);
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1DFDFE5C0();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v11, sel_transformationWithFeedContextByFeedID_autoFavoriteTagIDs_, 0, v12);

    *(void *)(v5 + 32) = v13;
    id v14 = (id)NewsCoreUserDefaults();
    unsigned int v15 = objc_msgSend(v14, sel_BOOLForKey_, *MEMORY[0x1E4F7E0E0]);

    uint64_t v16 = self;
    uint64_t v17 = *(void *)(a3 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig);
    if (v15) {
      uint64_t v18 = 0x44022513ELL;
    }
    else {
      uint64_t v18 = 0x44022113ELL;
    }
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_1DEC78FF4(v19);
    swift_bridgeObjectRelease();
    unint64_t v20 = (void *)sub_1DFDFE200();
    swift_release();
    id v21 = objc_msgSend(v16, sel_transformationWithFilterOptions_configuration_context_otherArticleIDs_, v18, v17, v6, v20);

    *(void *)(v5 + 40) = v21;
    sub_1DFDFE250();
    id v22 = objc_allocWithZone(MEMORY[0x1E4F7E450]);
    sub_1DE9266B8(0, (unint64_t *)&unk_1EBABACB0);
    uint64_t v23 = (void *)sub_1DFDFE200();
    swift_bridgeObjectRelease();
    id v24 = objc_msgSend(v22, sel_initWithFeedTransformations_, v23);

    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
    uint64_t v25 = (void *)sub_1DFDFE200();
    id v26 = objc_msgSend(v24, sel_transformHeadlines_, v25);

    uint64_t v27 = sub_1DFDFE220();
    return (id)v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DF691844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DF693E0C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = v9;
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1DFDF9D80();
  uint64_t v11 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  id v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA73E18(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = type metadata accessor for TodayFeedServiceContext();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (id *)((char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v41 = *(id *)(a2 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_cloudContext);
  uint64_t v48 = a3;
  sub_1DFDF87F0();
  sub_1DF69401C(aBlock[0] + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_context, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TodayFeedServiceContext);
  swift_release();
  id v20 = v19[1];
  sub_1DF694084((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TodayFeedServiceContext);
  id v21 = objc_msgSend(v20, sel_laterDate);

  uint64_t v45 = v8;
  uint64_t v46 = v7;
  uint64_t v43 = a1;
  uint64_t v44 = v10;
  if (v21)
  {
    sub_1DFDE7570();

    uint64_t v22 = sub_1DFDE7600();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v16, 0, 1, v22);
  }
  else
  {
    uint64_t v22 = sub_1DFDE7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v16, 1, 1, v22);
  }
  type metadata accessor for LatestStoriesTodayFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v13, v47);
  double v24 = *(double *)&aBlock[6];
  sub_1DFDE7600();
  uint64_t v25 = *(void *)(v22 - 8);
  id v26 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v16, 1, v22) != 1)
  {
    id v26 = (void *)sub_1DFDE74D0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v22);
  }
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E380]), sel_initWithStartDate_timeInterval_, v26, v24);

  if (v27)
  {
    sub_1DFDF8870();
    sub_1DFDF8BF0();
    uint64_t v28 = v47;
    v23(v13, v47);
    uint64_t v29 = aBlock[0];
    if ((aBlock[0] & 0x8000000000000000) == 0)
    {
      sub_1DFDF8870();
      sub_1DFDF8BF0();
      v23(v13, v28);
      uint64_t v30 = aBlock[0];
      if ((aBlock[0] & 0x8000000000000000) == 0)
      {
        id v31 = objc_allocWithZone(MEMORY[0x1E4F7E530]);
        uint64_t v32 = v41;
        id v33 = objc_msgSend(v31, sel_initWithContext_dateRange_totalLimit_perFeedLimit_, v41, v27, v29, v30);

        uint64_t v35 = v44;
        uint64_t v34 = v45;
        uint64_t v36 = v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v43, v46);
        unint64_t v37 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
        uint64_t v38 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v38 + v37, v35, v36);
        aBlock[4] = sub_1DF693F1C;
        aBlock[5] = v38;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DF68EDF4;
        aBlock[3] = &block_descriptor_120;
        uint64_t v39 = _Block_copy(aBlock);
        swift_release();
        objc_msgSend(v33, sel_setHeadlinesCompletionHandler_, v39);
        _Block_release(v39);
        objc_msgSend(v33, sel_start);

        return;
      }
    }
  }
  else
  {
    __break(1u);
  }
  sub_1DFDFFBA0();
  __break(1u);
}

uint64_t sub_1DF691EA0(int a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
    sub_1DF693E0C();
    return sub_1DFDFE440();
  }
  else
  {
    sub_1DF693E0C();
    swift_bridgeObjectRetain();
    return sub_1DFDFE450();
  }
}

uint64_t sub_1DF691F30()
{
  return type metadata accessor for LatestStoriesTodayFeedGroupEmitter();
}

uint64_t sub_1DF691F38(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v3[5] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1DF691FD8;
  return sub_1DF68F170(a2);
}

uint64_t sub_1DF691FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  uint64_t v6 = (void *)*v3;
  v5[6] = a1;
  v5[7] = a2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = (uint64_t (*)(void))v6[1];
    return v7();
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v5[8] = v9;
    *uint64_t v9 = v6;
    v9[1] = sub_1DF692158;
    uint64_t v10 = v5[3];
    return sub_1DF68FD68(v10, a1);
  }
}

uint64_t sub_1DF692158(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1DF692378;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_1DF692288;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DF692288()
{
  sub_1DF690FA0();
  swift_release();
  swift_release();
  sub_1DF693F9C(0, (unint64_t *)&qword_1EBABA1B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F7FA98]);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DF692378()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DF6923E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1DEB7BAE0;
  return sub_1DF69125C(a1, a2, a3);
}

uint64_t sub_1DF692494()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DF6924D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_config;
  sub_1DEA49270();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for TodayFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF692564@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI234LatestStoriesTodayFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for LatestStoriesTodayFeedGroupKnobs();
  a1[4] = sub_1DE924AA4(&qword_1EBAB63E0, (void (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroupKnobs);
  a1[5] = sub_1DE924AA4((unint64_t *)&unk_1EBAA5AB0, (void (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DF69401C(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroupKnobs);
}

uint64_t sub_1DF692634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F7FCD0];
  uint64_t v3 = sub_1DFDF8EE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1DF6926A8()
{
  return sub_1DFDF8EF0();
}

uint64_t sub_1DF6926C8()
{
  return sub_1DF68EE98();
}

uint64_t sub_1DF6926EC()
{
  sub_1DE924AA4((unint64_t *)&unk_1EBAB76D8, (void (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF692758()
{
  return sub_1DE924AA4(&qword_1EBAB76D0, (void (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroupEmitter);
}

uint64_t sub_1DF6927A0()
{
  return sub_1DE924AA4((unint64_t *)&unk_1EBAB76D8, (void (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroupEmitter);
}

uint64_t sub_1DF6927E8()
{
  return sub_1DE924AA4((unint64_t *)&unk_1EBAF83F8, (void (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroupEmitter);
}

uint64_t sub_1DF692830(void **a1)
{
  uint64_t v2 = *(void *)(sub_1DFDF7DC0() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DEE483D0(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1DF6928D8(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1DF6928D8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DFDF7DC0();
  uint64_t v153 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v150 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v165 = (char *)&v145 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v160 = (char *)&v145 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v161 = (char *)&v145 - v11;
  uint64_t v12 = a1[1];
  uint64_t result = sub_1DFDFFED0();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      return sub_1DF6934E4(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v146 = result;
  if (v12 < 2)
  {
    uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v152 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    uint64_t v145 = MEMORY[0x1E4FBC860];
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_106:
      uint64_t v138 = v153;
      if (v21 >= 2)
      {
        uint64_t v139 = *a1;
        do
        {
          unint64_t v140 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v139) {
            goto LABEL_147;
          }
          uint64_t v141 = *(void *)&v19[16 * v140 + 32];
          uint64_t v142 = *(void *)&v19[16 * v21 + 24];
          sub_1DF693800(v139 + *(void *)(v138 + 72) * v141, v139 + *(void *)(v138 + 72) * *(void *)&v19[16 * v21 + 16], v139 + *(void *)(v138 + 72) * v142, v152);
          if (v2) {
            break;
          }
          if (v142 < v141) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_1DEE48394((uint64_t)v19);
          }
          if (v140 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v143 = &v19[16 * v140 + 32];
          *(void *)uint64_t v143 = v141;
          *((void *)v143 + 1) = v142;
          unint64_t v144 = *((void *)v19 + 2);
          if (v21 > v144) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v144 - v21));
          *((void *)v19 + 2) = v144 - 1;
          unint64_t v21 = v144 - 1;
        }
        while (v144 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v145 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v17 = v153;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DFDFE350();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = v153;
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v145 = v16;
    unint64_t v152 = v16 + v18;
  }
  id v20 = 0;
  uint64_t v158 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v159 = v17 + 16;
  unint64_t v168 = (void (**)(char *, uint64_t, uint64_t))(v17 + 32);
  uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v163 = a1;
  uint64_t v164 = v4;
  while (1)
  {
    uint64_t v22 = (uint64_t)v20;
    uint64_t v23 = (uint64_t)v20 + 1;
    if ((uint64_t)v20 + 1 < v12)
    {
      uint64_t v24 = *a1;
      uint64_t v25 = *(void *)(v153 + 72);
      uint64_t v157 = (uint64_t)v20 + 1;
      uint64_t v167 = v25;
      id v26 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 16);
      v26(v161, v24 + v25 * v23, v4);
      uint64_t v27 = v24 + v25 * v22;
      uint64_t v151 = v22;
      uint64_t v28 = v160;
      uint64_t v166 = v26;
      v26(v160, v27, v4);
      uint64_t v29 = v161;
      uint64_t v30 = (void *)sub_1DFDF7D70();
      objc_msgSend(v30, sel_sortingScore);
      double v32 = v31;

      id v33 = (void *)sub_1DFDF7D70();
      objc_msgSend(v33, sel_sortingScore);
      double v35 = v34;

      uint64_t v36 = *(void (**)(char *, uint64_t))(v153 + 8);
      unint64_t v37 = v28;
      uint64_t v22 = v151;
      v36(v37, v4);
      uint64_t v162 = v36;
      v36(v29, v4);
      uint64_t v23 = v22 + 2;
      uint64_t v155 = v24;
      if (v22 + 2 >= v12)
      {
        uint64_t v51 = v167;
      }
      else
      {
        uint64_t v149 = v2;
        uint64_t v147 = v19;
        uint64_t v38 = v24;
        uint64_t v156 = v167 * v23;
        v157 *= v167;
        while (1)
        {
          uint64_t v39 = v12;
          uint64_t v40 = v23;
          id v41 = v161;
          uint64_t v42 = v166;
          v166(v161, v38 + v156, v4);
          uint64_t v43 = v160;
          v42(v160, v38 + v157, v4);
          uint64_t v44 = (void *)sub_1DFDF7D70();
          objc_msgSend(v44, sel_sortingScore);
          double v46 = v45;

          uint64_t v47 = (void *)sub_1DFDF7D70();
          objc_msgSend(v47, sel_sortingScore);
          double v49 = v48;

          uint64_t v50 = v162;
          v162(v43, v4);
          v50(v41, v4);
          if (v35 < v32 == v49 >= v46) {
            break;
          }
          uint64_t v23 = v40 + 1;
          uint64_t v51 = v167;
          v38 += v167;
          uint64_t v12 = v39;
          if (v39 == v23)
          {
            uint64_t v23 = v39;
            uint64_t v19 = v147;
            uint64_t v2 = v149;
            uint64_t v22 = v151;
            goto LABEL_24;
          }
        }
        uint64_t v19 = v147;
        uint64_t v2 = v149;
        uint64_t v23 = v40;
        uint64_t v22 = v151;
        uint64_t v12 = v39;
        uint64_t v51 = v167;
      }
LABEL_24:
      a1 = v163;
      if (v35 < v32)
      {
        if (v23 < v22) {
          goto LABEL_141;
        }
        if (v22 < v23)
        {
          uint64_t v162 = (void (*)(char *, uint64_t))v12;
          uint64_t v147 = v19;
          uint64_t v52 = 0;
          uint64_t v53 = v51 * (v23 - 1);
          uint64_t v54 = v22;
          uint64_t v55 = v23 * v51;
          uint64_t v56 = v54;
          uint64_t v57 = v54 * v51;
          do
          {
            if (v56 != v23 + v52 - 1)
            {
              uint64_t v149 = v2;
              uint64_t v58 = v155;
              if (!v155) {
                goto LABEL_146;
              }
              unint64_t v59 = v155 + v57;
              uint64_t v60 = v155 + v53;
              uint64_t v166 = *v168;
              v166(v150, v155 + v57, v164);
              if (v57 < v53 || v59 >= v58 + v55)
              {
                uint64_t v4 = v164;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v4 = v164;
                if (v57 != v53) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              v166((char *)v60, (uint64_t)v150, v4);
              a1 = v163;
              uint64_t v2 = v149;
              uint64_t v51 = v167;
            }
            ++v56;
            --v52;
            v53 -= v51;
            v55 -= v51;
            v57 += v51;
          }
          while (v56 < v23 + v52);
          uint64_t v19 = v147;
          uint64_t v22 = v151;
          uint64_t v12 = (uint64_t)v162;
        }
      }
    }
    if (v23 < v12)
    {
      if (__OFSUB__(v23, v22)) {
        goto LABEL_139;
      }
      if (v23 - v22 < v146) {
        break;
      }
    }
LABEL_56:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v162 = (void (*)(char *, uint64_t))v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_1DEE47AC8(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v87 = *((void *)v19 + 2);
    unint64_t v86 = *((void *)v19 + 3);
    unint64_t v21 = v87 + 1;
    if (v87 >= v86 >> 1) {
      uint64_t v19 = sub_1DEE47AC8((char *)(v86 > 1), v87 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v88 = v19 + 32;
    uint64_t v89 = &v19[16 * v87 + 32];
    uint64_t v90 = v162;
    *(void *)uint64_t v89 = v22;
    *((void *)v89 + 1) = v90;
    if (v87)
    {
      a1 = v163;
      while (1)
      {
        unint64_t v91 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v96 = &v88[16 * v21];
          uint64_t v97 = *((void *)v96 - 8);
          uint64_t v98 = *((void *)v96 - 7);
          BOOL v102 = __OFSUB__(v98, v97);
          uint64_t v99 = v98 - v97;
          if (v102) {
            goto LABEL_123;
          }
          uint64_t v101 = *((void *)v96 - 6);
          uint64_t v100 = *((void *)v96 - 5);
          BOOL v102 = __OFSUB__(v100, v101);
          uint64_t v94 = v100 - v101;
          char v95 = v102;
          if (v102) {
            goto LABEL_124;
          }
          unint64_t v103 = v21 - 2;
          uint64_t v104 = &v88[16 * v21 - 32];
          uint64_t v106 = *(void *)v104;
          uint64_t v105 = *((void *)v104 + 1);
          BOOL v102 = __OFSUB__(v105, v106);
          uint64_t v107 = v105 - v106;
          if (v102) {
            goto LABEL_126;
          }
          BOOL v102 = __OFADD__(v94, v107);
          uint64_t v108 = v94 + v107;
          if (v102) {
            goto LABEL_129;
          }
          if (v108 >= v99)
          {
            uint64_t v126 = &v88[16 * v91];
            uint64_t v128 = *(void *)v126;
            uint64_t v127 = *((void *)v126 + 1);
            BOOL v102 = __OFSUB__(v127, v128);
            uint64_t v129 = v127 - v128;
            if (v102) {
              goto LABEL_133;
            }
            BOOL v119 = v94 < v129;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v120 = *((void *)v19 + 4);
            uint64_t v121 = *((void *)v19 + 5);
            BOOL v102 = __OFSUB__(v121, v120);
            uint64_t v113 = v121 - v120;
            char v114 = v102;
            goto LABEL_88;
          }
          uint64_t v93 = *((void *)v19 + 4);
          uint64_t v92 = *((void *)v19 + 5);
          BOOL v102 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          char v95 = v102;
        }
        if (v95) {
          goto LABEL_125;
        }
        unint64_t v103 = v21 - 2;
        uint64_t v109 = &v88[16 * v21 - 32];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v112 = __OFSUB__(v110, v111);
        uint64_t v113 = v110 - v111;
        char v114 = v112;
        if (v112) {
          goto LABEL_128;
        }
        uint64_t v115 = &v88[16 * v91];
        uint64_t v117 = *(void *)v115;
        uint64_t v116 = *((void *)v115 + 1);
        BOOL v102 = __OFSUB__(v116, v117);
        uint64_t v118 = v116 - v117;
        if (v102) {
          goto LABEL_131;
        }
        if (__OFADD__(v113, v118)) {
          goto LABEL_132;
        }
        if (v113 + v118 >= v94)
        {
          BOOL v119 = v94 < v118;
LABEL_94:
          if (v119) {
            unint64_t v91 = v103;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v114) {
          goto LABEL_127;
        }
        uint64_t v122 = &v88[16 * v91];
        uint64_t v124 = *(void *)v122;
        uint64_t v123 = *((void *)v122 + 1);
        BOOL v102 = __OFSUB__(v123, v124);
        uint64_t v125 = v123 - v124;
        if (v102) {
          goto LABEL_130;
        }
        if (v125 < v113) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v130 = v91 - 1;
        if (v91 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v131 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v132 = v19;
        uint64_t v133 = &v88[16 * v130];
        uint64_t v134 = *(void *)v133;
        uint64_t v135 = &v88[16 * v91];
        uint64_t v136 = *((void *)v135 + 1);
        sub_1DF693800(v131 + *(void *)(v153 + 72) * *(void *)v133, v131 + *(void *)(v153 + 72) * *(void *)v135, v131 + *(void *)(v153 + 72) * v136, v152);
        if (v2) {
          goto LABEL_117;
        }
        if (v136 < v134) {
          goto LABEL_120;
        }
        if (v91 > *((void *)v132 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v133 = v134;
        *(void *)&v88[16 * v130 + 8] = v136;
        unint64_t v137 = *((void *)v132 + 2);
        if (v91 >= v137) {
          goto LABEL_122;
        }
        uint64_t v19 = v132;
        unint64_t v21 = v137 - 1;
        memmove(&v88[16 * v91], v135 + 16, 16 * (v137 - 1 - v91));
        *((void *)v132 + 2) = v137 - 1;
        a1 = v163;
        uint64_t v4 = v164;
        if (v137 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
    a1 = v163;
LABEL_15:
    uint64_t v12 = a1[1];
    id v20 = v162;
    if ((uint64_t)v162 >= v12) {
      goto LABEL_106;
    }
  }
  if (__OFADD__(v22, v146)) {
    goto LABEL_142;
  }
  if (v22 + v146 >= v12) {
    uint64_t v61 = v12;
  }
  else {
    uint64_t v61 = v22 + v146;
  }
  if (v61 >= v22)
  {
    if (v23 != v61)
    {
      uint64_t v151 = v22;
      uint64_t v147 = v19;
      uint64_t v149 = v2;
      uint64_t v62 = *(void *)(v153 + 72);
      uint64_t v154 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 16);
      uint64_t v155 = v62;
      uint64_t v63 = v62 * (v23 - 1);
      uint64_t v64 = v23 * v62;
      uint64_t v148 = v61;
      do
      {
        uint64_t v66 = 0;
        uint64_t v67 = v151;
        uint64_t v162 = (void (*)(char *, uint64_t))v23;
        uint64_t v156 = v64;
        uint64_t v157 = v63;
        while (1)
        {
          uint64_t v167 = v67;
          uint64_t v68 = *a1;
          uint64_t v166 = (void (*)(char *, uint64_t, uint64_t))(v64 + v66);
          uint64_t v69 = v64 + v66 + v68;
          uint64_t v70 = v161;
          uint64_t v71 = v154;
          v154(v161, v69, v4);
          uint64_t v72 = v63 + v66 + v68;
          uint64_t v73 = a1;
          uint64_t v74 = v160;
          v71(v160, v72, v4);
          uint64_t v75 = (void *)sub_1DFDF7D70();
          objc_msgSend(v75, sel_sortingScore);
          double v77 = v76;

          uint64_t v78 = (void *)sub_1DFDF7D70();
          objc_msgSend(v78, sel_sortingScore);
          double v80 = v79;

          uint64_t v81 = *v158;
          (*v158)(v74, v4);
          v81(v70, v4);
          if (v80 >= v77) {
            break;
          }
          uint64_t v82 = *v73;
          if (!*v73) {
            goto LABEL_144;
          }
          uint64_t v64 = v156;
          uint64_t v63 = v157;
          uint64_t v83 = (char *)(v82 + v157 + v66);
          uint64_t v84 = *v168;
          uint64_t v4 = v164;
          (*v168)(v165, v82 + v156 + v66, v164);
          swift_arrayInitWithTakeFrontToBack();
          v84(v83, (uint64_t)v165, v4);
          v66 -= v155;
          uint64_t v67 = v167 + 1;
          uint64_t v65 = v162;
          a1 = v163;
          if (v162 == (void (*)(char *, uint64_t))(v167 + 1)) {
            goto LABEL_49;
          }
        }
        uint64_t v4 = v164;
        uint64_t v65 = v162;
        a1 = v73;
        uint64_t v64 = v156;
        uint64_t v63 = v157;
LABEL_49:
        uint64_t v23 = (uint64_t)v65 + 1;
        v63 += v155;
        v64 += v155;
      }
      while (v23 != v148);
      uint64_t v23 = v148;
      uint64_t v2 = v149;
      uint64_t v19 = v147;
      uint64_t v22 = v151;
    }
    goto LABEL_56;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1DFDFFBA0();
  __break(1u);
  return result;
}

uint64_t sub_1DF6934E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v37 = a1;
  uint64_t v7 = sub_1DFDF7DC0();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v47 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v42 = (char *)&v35 - v11;
  uint64_t result = MEMORY[0x1F4188790](v10);
  id v41 = (char *)&v35 - v14;
  uint64_t v45 = a3;
  uint64_t v36 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v39 = v16;
    uint64_t v40 = v15;
    double v46 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v50 = v17 * (v45 - 1);
    uint64_t v43 = v17;
    uint64_t v18 = v17 * v45;
LABEL_5:
    uint64_t v19 = 0;
    uint64_t v49 = v37;
    uint64_t v44 = v18;
    while (1)
    {
      uint64_t v20 = *a4;
      uint64_t v48 = v18 + v19;
      uint64_t v21 = v18 + v19 + v20;
      uint64_t v22 = v41;
      uint64_t v23 = v39;
      v39(v41, v21, v7);
      uint64_t v24 = v42;
      v23(v42, v50 + v19 + v20, v7);
      uint64_t v25 = (void *)sub_1DFDF7D70();
      objc_msgSend(v25, sel_sortingScore);
      double v27 = v26;

      uint64_t v28 = (void *)sub_1DFDF7D70();
      objc_msgSend(v28, sel_sortingScore);
      double v30 = v29;

      double v31 = *v38;
      (*v38)(v24, v7);
      uint64_t result = v31(v22, v7);
      uint64_t v18 = v44;
      if (v30 >= v27)
      {
LABEL_4:
        v50 += v43;
        v18 += v43;
        if (++v45 == v36) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v32 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v33 = v32 + v50 + v19;
      double v34 = *v46;
      (*v46)(v47, v32 + v44 + v19, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v34)(v33, v47, v7);
      v19 -= v43;
      if (v45 == ++v49) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF693800(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v64 = a3;
  uint64_t v7 = sub_1DFDF7DC0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v67 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v66 = (char *)&v59 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  int64_t v14 = v64 - a2;
  if (v64 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_63;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v70 = a1;
  unint64_t v69 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v18;
      unint64_t v68 = a4 + v18;
      unint64_t v70 = a2;
      BOOL v35 = v18 < 1 || a1 >= a2;
      unint64_t v36 = v64;
      if (!v35)
      {
        uint64_t v37 = -v13;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v65 = v8 + 16;
        uint64_t v61 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v62 = v38;
        unint64_t v60 = a4;
        unint64_t v63 = a1;
        uint64_t v39 = v66;
        do
        {
          unint64_t v64 = v36 + v37;
          uint64_t v40 = v7;
          unint64_t v41 = v36;
          uint64_t v42 = v7;
          uint64_t v43 = v62;
          v62(v39, v34 + v37, v40);
          unint64_t v44 = a2 + v37;
          uint64_t v45 = v67;
          v43(v67, a2 + v37, v42);
          uint64_t v7 = v42;
          double v46 = (void *)sub_1DFDF7D70();
          objc_msgSend(v46, sel_sortingScore);
          double v48 = v47;

          uint64_t v49 = (void *)sub_1DFDF7D70();
          objc_msgSend(v49, sel_sortingScore);
          double v51 = v50;

          uint64_t v52 = *v61;
          (*v61)(v45, v42);
          v52(v39, v42);
          if (v51 >= v48)
          {
            unint64_t v57 = v68;
            v68 += v37;
            unint64_t v53 = v64;
            if (v41 < v57 || v64 >= v57)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = a2;
              unint64_t v55 = v60;
              unint64_t v56 = v63;
            }
            else
            {
              unint64_t v56 = v63;
              if (v41 != v57) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v44 = a2;
              unint64_t v55 = v60;
            }
          }
          else
          {
            unint64_t v53 = v64;
            if (v41 < a2 || v64 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v55 = v60;
              unint64_t v56 = v63;
            }
            else
            {
              BOOL v54 = v41 == a2;
              unint64_t v55 = v60;
              unint64_t v56 = v63;
              if (!v54) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v70 += v37;
          }
          unint64_t v34 = v68;
          if (v68 <= v55) {
            break;
          }
          a2 = v44;
          unint64_t v36 = v53;
        }
        while (v44 > v56);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v63 = a4 + v17;
    unint64_t v68 = a4 + v17;
    if (v17 >= 1 && a2 < v64)
    {
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v65 = v8 + 16;
      uint64_t v21 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v22 = v66;
      do
      {
        v20(v22, a2, v7);
        uint64_t v23 = v67;
        v20(v67, a4, v7);
        uint64_t v24 = (void *)sub_1DFDF7D70();
        objc_msgSend(v24, sel_sortingScore);
        double v26 = v25;

        double v27 = (void *)sub_1DFDF7D70();
        objc_msgSend(v27, sel_sortingScore);
        double v29 = v28;

        double v30 = *v21;
        (*v21)(v23, v7);
        v30(v22, v7);
        unint64_t v31 = v70;
        if (v29 >= v26)
        {
          unint64_t v33 = v69 + v13;
          if (v70 < v69 || v70 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v70 != v69)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v69 = v33;
          unint64_t v32 = a2;
        }
        else
        {
          unint64_t v32 = a2 + v13;
          if (v70 < a2 || v70 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v70 == a2)
          {
            unint64_t v31 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v70 = v31 + v13;
        a4 = v69;
        if (v69 >= v63) {
          break;
        }
        a2 = v32;
      }
      while (v32 < v64);
    }
LABEL_60:
    sub_1DEE47CC4(&v70, &v69, (uint64_t *)&v68);
    return 1;
  }
LABEL_64:
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

void sub_1DF693E04(uint64_t a1)
{
  sub_1DF691844(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1DF693E0C()
{
  if (!qword_1EBAF8730)
  {
    sub_1DEBFF55C();
    sub_1DE925CE8(255, (unint64_t *)&qword_1EBABB7C0);
    unint64_t v0 = sub_1DFDFE460();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF8730);
    }
  }
}

uint64_t sub_1DF693E8C()
{
  sub_1DF693E0C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DF693F1C(int a1, void *a2)
{
  sub_1DF693E0C();
  return sub_1DF691EA0(a1, a2);
}

void sub_1DF693F9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1DF69401C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF694084(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF6940E4()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(self, sel_defaultQueue);
  objc_msgSend(v2, sel_addTransactionObserver_, *(void *)(v1 + 16));

  sub_1DEAE8198();
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DF694158()
{
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  uint64_t v0 = type metadata accessor for SportsSection();
  uint64_t v1 = swift_bridgeObjectRetain();
  MEMORY[0x1E01ECA60](v1, v0);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v2 = swift_bridgeObjectRetain();
  MEMORY[0x1E01ECA60](v2, v0);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return 0x3D73656F7265687BLL;
}

uint64_t sub_1DF694264()
{
  return sub_1DF694158();
}

ValueMetadata *type metadata accessor for SportsSectionCurationResult()
{
  return &type metadata for SportsSectionCurationResult;
}

ValueMetadata *type metadata accessor for SportsSectionBuilderResult()
{
  return &type metadata for SportsSectionBuilderResult;
}

uint64_t sub_1DF69428C(void *a1)
{
  swift_getObjectType();
  uint64_t v3 = MEMORY[0x1E01EFB70](v1 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate);
  if (v3)
  {
    if (MEMORY[0x1E01EFB70](v3 + 16))
    {
      sub_1DF695118();
      swift_unknownObjectRelease();
    }
    uint64_t v3 = swift_unknownObjectRelease();
  }
  MEMORY[0x1F4188790](v3);
  sub_1DFDEE090();
  sub_1DEAA29D0();
  uint64_t v4 = (void *)sub_1DFDFEE60();
  sub_1DFDEDE20();
  swift_release();

  uint64_t v5 = (void *)sub_1DFDFEE60();
  sub_1DFDEDE60();
  swift_release();
  swift_release();

  uint64_t v6 = (void *)sub_1DFDFAC20();
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a1;
  id v9 = a1;

  return swift_release();
}

void sub_1DF6944A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEF4F630();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF694DF8(a1, (uint64_t)v8);
  uint64_t v9 = sub_1DFDFA6C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    sub_1DF694E5C((uint64_t)v8);
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1E01EFB70](a2 + 16);
    if (v10)
    {
      unint64_t v11 = (void *)v10;
      *(&v14 - 2) = MEMORY[0x1F4188790](v10);
      *(&v14 - 1) = a3;
      sub_1DFDEE090();
      sub_1DEAA29D0();
      uint64_t v12 = (void *)sub_1DFDFEE60();
      type metadata accessor for MagazineSectionsInteractor();
      sub_1DFDEDE20();
      swift_release();

      uint64_t v13 = (void *)sub_1DFDFEE60();
      sub_1DFDEDE60();

      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_1DF694E5C((uint64_t)v8);
  }
}

uint64_t sub_1DF694750(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a2 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate;
  uint64_t v5 = MEMORY[0x1E01EFB70](a2 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate);
  if (v5)
  {
    uint64_t v6 = MEMORY[0x1E01EFB70](v5 + 16);
    if (v6)
    {
      sub_1DF694F2C(v2, v3, v6);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  uint64_t result = MEMORY[0x1E01EFB70](v4);
  if (result)
  {
    if (MEMORY[0x1E01EFB70](result + 16))
    {
      sub_1DF695118();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DF694824(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DFDFA6C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  sub_1DEF4F630();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDFAC30();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    uint64_t result = MEMORY[0x1E01EFB70](a2 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate);
    if (!result) {
      return result;
    }
    uint64_t v14 = result;
    if (qword_1EAC1D630 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v3, (uint64_t)qword_1EACE0078);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v15, v3);
    uint64_t v16 = MEMORY[0x1E01EFB70](v14 + 16);
    if (!v16)
    {
      uint64_t v7 = v9;
      goto LABEL_12;
    }
    sub_1DF69534C((uint64_t)v9, v16);
    uint64_t v7 = v9;
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v3);
  uint64_t v17 = MEMORY[0x1E01EFB70](a2 + OBJC_IVAR____TtC7NewsUI226MagazineSectionsInteractor_delegate);
  if (v17)
  {
    uint64_t v18 = MEMORY[0x1E01EFB70](v17 + 16);
    if (!v18)
    {
LABEL_12:
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    sub_1DF69534C((uint64_t)v7, v18);
LABEL_10:
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t type metadata accessor for MagazineSectionsInteractor()
{
  return self;
}

void sub_1DF694B5C(uint64_t a1)
{
  uint64_t v2 = sub_1DFDF2B50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1E01EFB70](a1 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = type metadata accessor for MagazineSectionsViewController();
    uint64_t v9 = sub_1DF695674(&qword_1EBABF7B8, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
    uint64_t v10 = MEMORY[0x1E01DF1F0](v8, v9);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      if (objc_msgSend(v7, sel_view))
      {
        sub_1DFDF3BB0();
        objc_msgSend(objc_allocWithZone((Class)sub_1DFDF4B10()), sel_init);
        (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC850], v2);
        uint64_t v12 = (void *)sub_1DFDF3BA0();
        sub_1DF69428C(v12);
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1DF694D60()
{
  return sub_1DF694EB8();
}

uint64_t sub_1DF694D78()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF694DB0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1DF694DF0(uint64_t a1)
{
  sub_1DF6944A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DF694DF8(uint64_t a1, uint64_t a2)
{
  sub_1DEF4F630();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF694E5C(uint64_t a1)
{
  sub_1DEF4F630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF694EB8()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = (uint64_t (*)(void *))off_1F3A7BDD0[0];
  type metadata accessor for MagazineSectionsDataManager();
  return v2(v1);
}

void sub_1DF694F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = a3 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation;
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_presentation + 17) != 1
    || (uint64_t v8 = *(void *)v6,
        uint64_t v7 = *(void *)(v6 + 8),
        unsigned __int8 v9 = *(unsigned char *)(v6 + 16),
        uint64_t v10 = swift_bridgeObjectRetain(),
        char v11 = sub_1DF64F3D0(v10, a2),
        sub_1DF04A11C(v8, v7, v9, 1),
        (v11 & 1) == 0))
  {
    sub_1DF04A6D8(a3, a2, (uint64_t)&v24);
    uint64_t v12 = v25;
    uint64_t v23 = v24;
    int v13 = v26;
    uint64_t v14 = *(void *)v6;
    uint64_t v15 = *(void *)(v6 + 8);
    char v16 = *(unsigned char *)(v6 + 17);
    *(void *)uint64_t v6 = a2;
    *(void *)(v6 + 8) = 0;
    unsigned __int8 v17 = *(unsigned char *)(v6 + 16);
    *(_WORD *)(v6 + 16) = 256;
    swift_bridgeObjectRetain();
    sub_1DF04A11C(v14, v15, v17, v16);
    sub_1DFDEE0F0();
    uint64_t v18 = sub_1DF695674(&qword_1EBABF7B8, (void (*)(uint64_t))type metadata accessor for MagazineSectionsViewController);
    uint64_t v19 = MEMORY[0x1E01DF1F0](ObjectType, v18);
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      swift_getObjectType();
      sub_1DFDF3A30();
    }
    uint64_t v21 = MEMORY[0x1E01DF1F0](ObjectType, v18);
    if (v21)
    {
      uint64_t v22 = (void *)v21;
      swift_getObjectType();
      swift_retain();
      sub_1DFDF3A40();
    }
    if (v13 != 255)
    {
      uint64_t v24 = v23;
      uint64_t v25 = v12;
      unsigned __int8 v26 = v13;
      sub_1DF048848((uint64_t)&v24);
      sub_1DF04A128(v23, v12, v13);
    }
  }
}

uint64_t sub_1DF695118()
{
  uint64_t v0 = sub_1DFDED6F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEEC8CC8(0, (unint64_t *)&unk_1EBABE0E0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DFE0B750;
  sub_1DFDED6E0();
  sub_1DFDED6D0();
  v6[1] = v4;
  sub_1DF695674((unint64_t *)&qword_1EBABE4C0, MEMORY[0x1E4FAAD18]);
  sub_1DEEC8CC8(0, (unint64_t *)&unk_1EBAC00C0, MEMORY[0x1E4FBB320]);
  sub_1DEA635E8();
  sub_1DFDFF830();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1DFDECBB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_release();
}

uint64_t sub_1DF69534C(uint64_t a1, uint64_t a2)
{
  v15[0] = a2;
  uint64_t v16 = a1;
  uint64_t v3 = sub_1DFDFA6C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = sub_1DFDED6F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned __int8 v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(a2 + OBJC_IVAR____TtC7NewsUI230MagazineSectionsViewController_eventManager);
  sub_1DEEC8CC8(0, (unint64_t *)&unk_1EBABE0E0, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DFE0B750;
  sub_1DFDED6E0();
  sub_1DFDED6D0();
  uint64_t v17 = v10;
  sub_1DF695674((unint64_t *)&qword_1EBABE4C0, MEMORY[0x1E4FAAD18]);
  sub_1DEEC8CC8(0, (unint64_t *)&unk_1EBAC00C0, MEMORY[0x1E4FBB320]);
  sub_1DEA635E8();
  sub_1DFDFF830();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v3);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain();
  sub_1DFDECBB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_1DF695674(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF6956BC()
{
  uint64_t v1 = sub_1DFDFA6C0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DF695788()
{
  sub_1DFDFA6C0();
  uint64_t v1 = *(void *)(v0 + 16);
  return sub_1DF04AEBC(v1);
}

uint64_t sub_1DF6957EC()
{
  return sub_1DF04ACAC(v0);
}

uint64_t sub_1DF6957F4()
{
  return sub_1DF04A924(v0);
}

uint64_t sub_1DF695800(uint64_t a1)
{
  uint64_t v2 = sub_1DF6974A0(&qword_1EBAF04B0, (void (*)(uint64_t))type metadata accessor for TitleViewLayoutAttributes);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1DF69586C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FAD3D8];
  uint64_t v3 = sub_1DFDF44A0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

int *sub_1DF6958E4@<X0>(double *a1@<X0>, double a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  CGFloat v220 = a2;
  *(double *)&uint64_t v7 = COERCE_DOUBLE(sub_1DFDE81B0());
  double v8 = *(double *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  *(void *)&double v209 = (char *)v193 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_1DFDF47E0();
  double v213 = *(double *)(v214 - 8);
  MEMORY[0x1F4188790](v214);
  *(void *)&double v212 = (char *)v193 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF697594(0, &qword_1EBADC2E8, type metadata accessor for TitleViewLayoutAttributes, MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)v193 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  *(void *)&CGFloat v218 = (char *)v193 - v15;
  uint64_t v16 = sub_1DFDF2BF0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v193 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)v193 - v21;
  double v23 = a1[5];
  if (v23 == 0.0)
  {
    uint64_t v26 = *((void *)a1 + 3);
    BOOL v25 = 1;
    if ((v26 & 0x2000000000000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v24 = HIBYTE(*(void *)&v23) & 0xFLL;
    if ((*(void *)&v23 & 0x2000000000000000) == 0) {
      uint64_t v24 = (void)a1[4] & 0xFFFFFFFFFFFFLL;
    }
    BOOL v25 = v24 == 0;
    uint64_t v26 = *((void *)a1 + 3);
    if ((v26 & 0x2000000000000000) == 0)
    {
LABEL_5:
      if (((void)a1[2] & 0xFFFFFFFFFFFFLL) != 0) {
        goto LABEL_11;
      }
      goto LABEL_9;
    }
  }
  if ((v26 & 0xF00000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_9:
  if (v25)
  {
    uint64_t v27 = *MEMORY[0x1E4FAD2B0];
    uint64_t v28 = sub_1DFDF4140();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(a3, v27, v28);
    uint64_t result = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
    double v30 = (void *)(a3 + result[5]);
    *double v30 = 0;
    v30[1] = 0;
    void v30[2] = 0;
    v30[3] = 0x4020000000000000;
    unint64_t v31 = (_OWORD *)(a3 + result[6]);
    *unint64_t v31 = 0u;
    v31[1] = 0u;
    unint64_t v32 = (_OWORD *)(a3 + result[7]);
    *unint64_t v32 = 0u;
    v32[1] = 0u;
    uint64_t v33 = a3 + result[8];
    *(unsigned char *)(v33 + 32) = 0;
    *(_OWORD *)uint64_t v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    uint64_t v34 = a3 + result[9];
    *(_OWORD *)uint64_t v34 = 0u;
    *(_OWORD *)(v34 + 16) = 0u;
    *(unsigned char *)(v34 + 32) = 1;
    *(unsigned char *)(a3 + result[10]) = 0;
    *(unsigned char *)(a3 + result[11]) = 0;
    return result;
  }
LABEL_11:
  CGFloat v208 = a1[4];
  CGFloat v210 = v23;
  CGFloat v199 = v8;
  double v200 = *(double *)&v7;
  double v217 = *(double *)&a1;
  char v204 = v14;
  double v206 = *(double *)&a3;
  BOOL v35 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  CGFloat v36 = v220;
  v35((char *)v193 - v21, *(char **)&v220, v16);
  double v203 = COERCE_DOUBLE(type metadata accessor for TitleViewLayoutOptions(0));
  int v37 = *(unsigned __int8 *)(*(void *)&v36 + *(int *)(*(void *)&v203 + 32));
  sub_1DFDF2AC0();
  double v39 = v38;
  uint64_t v40 = (void *)sub_1DFDF2AF0();
  id v41 = objc_msgSend(v40, sel_preferredContentSizeCategory);

  int v205 = sub_1DFDFF0C0();
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 56), *(void *)(v4 + 80));
  double v216 = COERCE_DOUBLE(sub_1DF931C7C(v37));
  uint64_t v215 = v4;
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 56), *(void *)(v4 + 80));
  int v201 = v37;
  id v211 = sub_1DF931E28(v37);
  uint64_t v42 = (void *)sub_1DFDF2B20();
  uint64_t v43 = self;
  id v44 = objc_msgSend(v43, sel_traitCollectionWithHorizontalSizeClass_, 1);
  unsigned int v45 = objc_msgSend(v42, sel_containsTraitsInCollection_, v44);

  uint64_t v219 = v22;
  v35(v20, v22, v16);
  uint64_t v207 = v16;
  if (v45)
  {
    double v46 = (void *)sub_1DFDF2AF0();
    id v47 = objc_msgSend(v43, sel_traitCollectionWithHorizontalSizeClass_, 1);
    unsigned __int8 v48 = objc_msgSend(v46, sel_containsTraitsInCollection_, v47);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    uint64_t v49 = *(void *)&v217;
    if (v48)
    {
      unint64_t v50 = 0xE700000000000000;
      uint64_t v51 = 0x746361706D6F63;
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    uint64_t v49 = *(void *)&v217;
  }
  unint64_t v50 = 0xEA00000000007463;
  uint64_t v51 = 0x61706D6F636E6F6ELL;
LABEL_16:
  id v52 = v211;
  double v53 = v216;
  sub_1DEA6A194(0, (unint64_t *)&qword_1EBABB6F0, MEMORY[0x1E4FBBE00]);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1DFE2E4F0;
  *(void *)(v54 + 32) = sub_1DFDFE530();
  *(void *)(v54 + 40) = v55;
  objc_msgSend(*(id *)&v53, sel_pointSize);
  *(void *)(v54 + 48) = sub_1DFDFE530();
  *(void *)(v54 + 56) = v56;
  objc_msgSend(v52, sel_pointSize);
  *(void *)(v54 + 64) = sub_1DFDFE530();
  *(void *)(v54 + 72) = v57;
  long long v223 = *(_OWORD *)v49;
  *(_OWORD *)(v54 + 80) = v223;
  *(void *)(v54 + 96) = v51;
  *(void *)(v54 + 104) = v50;
  unint64_t v58 = *(void *)(v49 + 24);
  CGFloat MinX = *(double *)(v49 + 16);
  *(CGFloat *)(v54 + 112) = MinX;
  *(void *)(v54 + 120) = v58;
  uint64_t v221 = 0;
  unint64_t v222 = 0xE000000000000000;
  sub_1DEB9BF10((uint64_t)&v223);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  unint64_t v59 = v222;
  *(void *)(v54 + 128) = v221;
  *(void *)(v54 + 136) = v59;
  uint64_t v221 = 0;
  unint64_t v222 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  unint64_t v60 = v222;
  *(void *)(v54 + 144) = v221;
  *(void *)(v54 + 152) = v60;
  uint64_t v221 = v54;
  sub_1DEA6A194(0, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB320]);
  sub_1DEBA4E98();
  uint64_t v61 = sub_1DFDFDC10();
  unint64_t v63 = v62;
  swift_bridgeObjectRelease();
  uint64_t v221 = v61;
  unint64_t v222 = v63;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v64 = *(void *)&v218;
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v65 = type metadata accessor for TitleViewLayoutAttributes(0);
  uint64_t v66 = *(void *)(v65 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65) != 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v219, v207);
    swift_bridgeObjectRelease();

    return (int *)sub_1DEC0BD34(v64, *(uint64_t *)&v206);
  }
  uint64_t v195 = v66;
  uint64_t v196 = (int *)v65;
  uint64_t v198 = v61;
  unint64_t v197 = v63;
  uint64_t v194 = v17;
  sub_1DF697508(v64);
  double v67 = v203;
  CGFloat v68 = v220;
  double v69 = *(double *)(*(void *)&v220 + *(int *)(*(void *)&v203 + 28));
  sub_1DFDF2AB0();
  double v71 = v69 - v70;
  double v72 = v212;
  sub_1DFDF2A70();
  sub_1DFDF47D0();
  double v74 = v73;
  (*(void (**)(double, uint64_t))(*(void *)&v213 + 8))(COERCE_DOUBLE(*(void *)&v72), v214);
  CGFloat v75 = *(double *)(*(void *)&v68 + *(int *)(*(void *)&v67 + 20));
  double v76 = *(double *)(*(void *)&v68 + *(int *)(*(void *)&v67 + 24));
  sub_1DF697594(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  uint64_t v78 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v79 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  *(void *)(inited + 64) = v79;
  double v80 = v216;
  *(double *)(inited + 40) = v216;
  swift_bridgeObjectRetain();
  v193[0] = v78;
  double v216 = COERCE_DOUBLE(*(id *)&v80);
  sub_1DEA65870(inited);
  id v81 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  CGFloat v82 = MinX;
  uint64_t v83 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  double v85 = v84;
  uint64_t v86 = sub_1DF6974A0((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
  double v203 = v85;
  v193[1] = v86;
  unint64_t v87 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v88 = objc_msgSend(v81, sel_initWithString_attributes_, v83, v87);

  uint64_t v89 = HIBYTE(v58) & 0xF;
  if ((v58 & 0x2000000000000000) == 0) {
    uint64_t v89 = *(void *)&v82 & 0xFFFFFFFFFFFFLL;
  }
  double v213 = v76;
  if (v89)
  {
    sub_1DFDF2AB0();
    sub_1DFDFE8F0();
    objc_msgSend(v88, sel_boundingRectWithSize_options_context_, 1, 0, v39 - v90, 1.79769313e308);
    CGFloat v92 = v91;
    CGFloat v94 = v93;
    CGFloat v96 = v95;
    CGFloat v98 = v97;
  }
  else
  {
    CGFloat v92 = 0.0;
    CGFloat v94 = 0.0;
    CGFloat v96 = 0.0;
    CGFloat v98 = 0.0;
  }
  uint64_t v99 = *(void *)&v217;
  char v100 = v205;
  uint64_t v101 = v198;
  double v102 = v216;
  unint64_t v103 = v88;
  double v104 = v71 + v74;
  v224.origin.x = v92;
  v224.origin.y = v94;
  v224.size.width = v96;
  v224.size.height = v98;
  double Width = CGRectGetWidth(v224);
  v225.origin.x = v92;
  v225.origin.y = v94;
  v225.size.width = v96;
  v225.size.height = v98;
  double v106 = ceil(CGRectGetHeight(v225));
  uint64_t v107 = *(void **)(v99 + 48);
  CGFloat v220 = v106;
  double v212 = v104;
  if (v107)
  {
    double v108 = v39;
    double v109 = v75;
    id v110 = v107;
    objc_msgSend(v110, sel_size);
    double v112 = v111;
    objc_msgSend(v110, sel_size);
    if (v112 > v113) {
      double v114 = v112;
    }
    else {
      double v114 = v113;
    }
    double v115 = ceil(v114);
    uint64_t v116 = v194;
    char v117 = v201;
    if (v115 <= 0.0)
    {

      uint64_t v214 = 0;
      double v203 = 0.0;
      double v200 = 0.0;
      CGFloat v199 = 0.0;
      CGFloat v122 = 0.0;
      CGFloat MinX = 0.0;
      double v123 = v108;
      CGFloat v218 = v108;
      double v125 = 0.0;
      uint64_t v124 = *(void *)&v206;
    }
    else
    {
      v226.size.width = v108 - v115;
      double v203 = v108 + v115 - v104;
      v226.origin.x = v104;
      v226.origin.y = v75;
      CGFloat v218 = v108 - v115;
      v226.size.height = v106;
      CGFloat MaxY = CGRectGetMaxY(v226);
      uint64_t v214 = *(void *)&v115;
      CGFloat v119 = MaxY - v115;
      objc_msgSend(*(id *)&v102, sel_descender);
      double v121 = v120;

      double v200 = v119 + v121;
      CGFloat v199 = 0.0;
      CGFloat v122 = 0.0;
      CGFloat MinX = 0.0;
      double v123 = v108;
      uint64_t v124 = *(void *)&v206;
      double v125 = 0.0;
    }
    goto LABEL_39;
  }
  double v126 = ceil(Width);
  CGFloat v218 = v126;
  if (v210 == 0.0)
  {
    uint64_t v214 = 0;
    CGFloat v157 = v75;
    double v203 = 0.0;
    double v200 = 0.0;
    CGFloat v199 = 0.0;
    CGFloat v122 = 0.0;
    CGFloat MinX = 0.0;
    double v123 = v39;
    double v125 = 0.0;
    uint64_t v124 = *(void *)&v206;
    uint64_t v116 = v194;
    char v117 = v201;
    double v109 = v157;
LABEL_37:
    char v100 = v205;
    goto LABEL_39;
  }
  uint64_t v214 = 0;
  uint64_t v127 = swift_initStackObject();
  uint64_t v128 = (void **)MEMORY[0x1E4FB0700];
  *(_OWORD *)(v127 + 16) = xmmword_1DFE0B750;
  uint64_t v129 = *v128;
  *(void *)(v127 + 32) = *v128;
  unint64_t v130 = self;
  swift_bridgeObjectRetain();
  id v131 = v129;
  id v132 = objc_msgSend(v130, sel_secondaryLabelColor);
  uint64_t v133 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  *(void *)(v127 + 40) = v132;
  uint64_t v134 = (void *)v193[0];
  *(void *)(v127 + 64) = v133;
  *(void *)(v127 + 72) = v134;
  sub_1DFDF9E80();
  id v135 = v134;
  uint64_t v136 = (void *)sub_1DFDFF360();
  CGFloat v137 = v199;
  double v138 = v209;
  double v139 = v200;
  (*(void (**)(double, void, double))(*(void *)&v199 + 104))(COERCE_DOUBLE(*(void *)&v209), *MEMORY[0x1E4FAB820], COERCE_DOUBLE(*(void *)&v200));
  uint64_t v140 = sub_1DFDF9E60();

  (*(void (**)(double, double))(*(void *)&v137 + 8))(COERCE_DOUBLE(*(void *)&v138), COERCE_DOUBLE(*(void *)&v139));
  *(void *)(v127 + 104) = v79;
  *(void *)(v127 + 80) = v140;
  sub_1DEA65870(v127);
  id v141 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v142 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v143 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v144 = objc_msgSend(v141, sel_initWithString_attributes_, v142, v143);

  if (v144)
  {
    sub_1DFDF2AB0();
    sub_1DFDFE8F0();
    objc_msgSend(v144, sel_boundingRectWithSize_options_context_, 33, 0, v39 - v145, 1.79769313e308);
    CGFloat v210 = v146;
    double v209 = *(double *)&v147;
    CGFloat v208 = v148;
    CGFloat v150 = v149;
    v227.origin.x = v104;
    v227.origin.y = v75;
    v227.size.width = v126;
    v227.size.height = v106;
    CGFloat Height = CGRectGetHeight(v227);
    uint64_t v214 = 0;
    if (Height == 0.0) {
      double v152 = 0.0;
    }
    else {
      double v152 = 8.0;
    }
    v228.origin.x = v104;
    v228.origin.y = v75;
    v228.size.width = v126;
    v228.size.height = v106;
    CGFloat MinX = CGRectGetMinX(v228);
    CGFloat v153 = v75;
    v229.origin.x = v104;
    v229.origin.y = v75;
    v229.size.width = v126;
    v229.size.height = v106;
    double v123 = v39;
    double v125 = CGRectGetMaxY(v229) + v152;
    CGFloat v154 = v210;
    v230.origin.x = v210;
    CGFloat v155 = v209;
    v230.origin.y = v209;
    CGFloat v156 = v208;
    v230.size.width = v208;
    v230.size.height = v150;
    CGFloat v199 = CGRectGetWidth(v230);
    v231.origin.x = v154;
    v231.origin.y = v155;
    v231.size.width = v156;
    v231.size.height = v150;
    CGFloat v122 = CGRectGetHeight(v231);

    double v203 = 0.0;
    double v200 = 0.0;
    uint64_t v124 = *(void *)&v206;
    uint64_t v116 = v194;
    char v117 = v201;
    uint64_t v101 = v198;
    double v102 = v216;
    double v109 = v153;
    unint64_t v103 = v88;
    goto LABEL_37;
  }
  CGFloat v158 = v75;
  double v203 = 0.0;
  double v200 = 0.0;
  CGFloat v199 = 0.0;
  CGFloat v122 = 0.0;
  CGFloat MinX = 0.0;
  double v123 = v39;
  double v125 = 0.0;
  uint64_t v124 = *(void *)&v206;
  uint64_t v116 = v194;
  char v117 = v201;
  uint64_t v101 = v198;
  double v102 = v216;
  double v109 = v158;
  unint64_t v103 = v88;
  char v100 = v205;
LABEL_39:
  double v159 = sub_1DF6975F8(*(uint64_t *)&v217);
  double v161 = v160;
  double v217 = v123;
  sub_1DFDF2AB0();
  double v163 = v123 - v159 - v162 + -12.0;
  objc_msgSend(*(id *)&v102, sel_lineHeight);
  double v165 = v164;
  objc_msgSend(*(id *)&v102, sel_descender);
  CGFloat v210 = v109 + v165 + v166 - v161;
  double v216 = v159;
  if (v159 != 0.0 || v161 != 0.0)
  {
    objc_msgSend(v103, sel_boundingRectWithSize_options_context_, 3, 0, v163, 1.79769313e308);
    CGFloat v218 = v167;
    CGFloat v220 = v168;
  }
  double v209 = v161;
  CGFloat v169 = MinX;
  v232.origin.x = MinX;
  v232.origin.y = v125;
  double v206 = v125;
  CGFloat v170 = v199;
  v232.size.width = v199;
  CGFloat v171 = v122;
  v232.size.height = v122;
  double v172 = CGRectGetMaxY(v232);
  double v173 = v212;
  v233.origin.x = v212;
  v233.origin.y = v109;
  CGFloat v208 = v163;
  CGFloat v174 = v218;
  v233.size.width = v218;
  CGFloat v175 = v220;
  v233.size.height = v220;
  double v176 = CGRectGetMaxY(v233);
  if (v172 > v176) {
    double v176 = v172;
  }
  double v177 = v213 + ceil(v176);
  uint64_t v178 = *MEMORY[0x1E4FAD2B0];
  uint64_t v179 = sub_1DFDF4140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v179 - 8) + 104))(v124, v178, v179);
  uint64_t v180 = v196;
  uint64_t v181 = v124 + v196[5];
  *(void *)uint64_t v181 = 0;
  *(void *)(v181 + 8) = 0;
  *(double *)(v181 + 16) = v217;
  *(double *)(v181 + 24) = v177;
  uint64_t v182 = v124 + v180[6];
  *(double *)uint64_t v182 = v173;
  *(double *)(v182 + 8) = v109;
  *(CGFloat *)(v182 + 16) = v174;
  *(CGFloat *)(v182 + 24) = v175;
  uint64_t v183 = (CGFloat *)(v124 + v180[7]);
  uint64_t v184 = *(void *)&v206;
  CGFloat *v183 = v169;
  *((void *)v183 + 1) = v184;
  v183[2] = v170;
  v183[3] = v171;
  uint64_t v185 = v124 + v180[8];
  double v186 = v200;
  *(double *)uint64_t v185 = v203;
  *(double *)(v185 + 8) = v186;
  uint64_t v187 = v214;
  *(void *)(v185 + 16) = v214;
  *(void *)(v185 + 24) = v187;
  *(unsigned char *)(v185 + 32) = 0;
  uint64_t v188 = v124 + v180[9];
  CGFloat v189 = v210;
  *(CGFloat *)uint64_t v188 = v208;
  *(CGFloat *)(v188 + 8) = v189;
  double v190 = v209;
  *(double *)(v188 + 16) = v216;
  *(double *)(v188 + 24) = v190;
  *(unsigned char *)(v188 + 32) = 0;
  *(unsigned char *)(v124 + v180[10]) = v100 & 1;
  *(unsigned char *)(v124 + v180[11]) = v117;
  uint64_t v191 = v124;
  uint64_t v192 = (uint64_t)v204;
  sub_1DF6977D0(v191, (uint64_t)v204);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v195 + 56))(v192, 0, 1, v180);
  uint64_t v221 = v101;
  unint64_t v222 = v197;
  swift_retain();
  sub_1DFDEDC70();

  swift_release();
  return (int *)(*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v219, v207);
}

uint64_t type metadata accessor for TitleViewLayoutAttributesFactory()
{
  return self;
}

void *sub_1DF696D08(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDF4140();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (_OWORD *)((char *)a1 + v8);
    uint64_t v11 = (_OWORD *)((char *)a2 + v8);
    long long v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (_OWORD *)((char *)a1 + v9);
    uint64_t v14 = (_OWORD *)((char *)a2 + v9);
    long long v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (_OWORD *)((char *)a1 + v16);
    uint64_t v19 = (_OWORD *)((char *)a2 + v16);
    long long v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)a1 + v17;
    uint64_t v22 = (char *)a2 + v17;
    v21[32] = v22[32];
    long long v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    uint64_t v26 = (char *)a1 + v24;
    uint64_t v27 = (char *)a2 + v24;
    long long v28 = *(_OWORD *)v27;
    long long v29 = *((_OWORD *)v27 + 1);
    v26[32] = v27[32];
    *(_OWORD *)uint64_t v26 = v28;
    *((_OWORD *)v26 + 1) = v29;
    *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return a1;
}

uint64_t sub_1DF696E48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDF4140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *long long v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  uint64_t v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  *(unsigned char *)(v20 + 32) = *(unsigned char *)(v21 + 32);
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = (long long *)(a2 + v23);
  long long v27 = *v26;
  long long v28 = v26[1];
  *(unsigned char *)(v25 + 32) = *((unsigned char *)v26 + 32);
  *(_OWORD *)uint64_t v25 = v27;
  *(_OWORD *)(v25 + 16) = v28;
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1DF696F38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDF4140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  _OWORD v8[2] = v9[2];
  v8[3] = v9[3];
  uint64_t v10 = a3[6];
  long long v11 = (void *)(a1 + v10);
  long long v12 = (void *)(a2 + v10);
  *long long v11 = *v12;
  v11[1] = v12[1];
  _OWORD v11[2] = v12[2];
  v11[3] = v12[3];
  uint64_t v13 = a3[7];
  long long v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  char v19 = *(unsigned char *)(v18 + 32);
  long long v20 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v20;
  *(unsigned char *)(v17 + 32) = v19;
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (long long *)(a2 + v21);
  long long v25 = *v23;
  long long v24 = v23[1];
  *(unsigned char *)(v22 + 32) = *((unsigned char *)v23 + 32);
  *(_OWORD *)uint64_t v22 = v25;
  *(_OWORD *)(v22 + 16) = v24;
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1DF69707C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDF4140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *long long v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  uint64_t v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  *(unsigned char *)(v20 + 32) = *(unsigned char *)(v21 + 32);
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = (long long *)(a2 + v23);
  long long v27 = *v26;
  long long v28 = v26[1];
  *(unsigned char *)(v25 + 32) = *((unsigned char *)v26 + 32);
  *(_OWORD *)uint64_t v25 = v27;
  *(_OWORD *)(v25 + 16) = v28;
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1DF69716C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDF4140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *long long v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  uint64_t v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(unsigned char *)(v20 + 32) = *(unsigned char *)(v21 + 32);
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = (long long *)(a2 + v23);
  long long v27 = *v26;
  long long v28 = v26[1];
  *(unsigned char *)(v25 + 32) = *((unsigned char *)v26 + 32);
  *(_OWORD *)uint64_t v25 = v27;
  *(_OWORD *)(v25 + 16) = v28;
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1DF69725C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF697270);
}

uint64_t sub_1DF697270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDF4140();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 40));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1DF697340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF697354);
}

uint64_t sub_1DF697354(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DFDF4140();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 40)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1DF697410()
{
  return sub_1DF6974A0(&qword_1EBAF04B8, (void (*)(uint64_t))type metadata accessor for TitleViewLayoutAttributes);
}

uint64_t sub_1DF697458()
{
  return sub_1DF6974A0(&qword_1EBAF04B0, (void (*)(uint64_t))type metadata accessor for TitleViewLayoutAttributes);
}

uint64_t sub_1DF6974A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for TitleViewLayoutOptions(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAEF988);
}

uint64_t sub_1DF697508(uint64_t a1)
{
  sub_1DF697594(0, &qword_1EBADC2E8, type metadata accessor for TitleViewLayoutAttributes, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DF697594(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

double sub_1DF6975F8(uint64_t a1)
{
  sub_1DED371BC(a1 + 56, (uint64_t)v12);
  sub_1DED371BC((uint64_t)v12, (uint64_t)v13);
  if (!v13[1]) {
    return 0.0;
  }
  sub_1DF697594(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  uint64_t v2 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  sub_1DEB9BF10((uint64_t)v12);
  id v3 = v2;
  id v4 = sub_1DF34909C();
  *(void *)(inited + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  *(void *)(inited + 40) = v4;
  sub_1DEA65870(inited);
  id v5 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v6 = (void *)sub_1DFDFDCE0();
  sub_1DEB9BF68((uint64_t)v12);
  type metadata accessor for Key(0);
  sub_1DF6974A0((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
  uint64_t v7 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_initWithString_attributes_, v6, v7);

  sub_1DFDFF310();
  sub_1DFDFEF40();
  double v10 = v9;

  return v10;
}

uint64_t sub_1DF6977D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TitleViewLayoutAttributes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1DF697834(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDF2BF0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  }
  return a1;
}

uint64_t sub_1DF69791C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_1DF6979B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1DF697A54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_1DF697AEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_1DF697B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF697B98);
}

uint64_t sub_1DF697B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1DF697C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF697C68);
}

uint64_t sub_1DF697C68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DFDF2BF0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1DF697D24()
{
  uint64_t result = sub_1DFDF2BF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TitleViewContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF697E98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TitleViewContext()
{
  return &type metadata for TitleViewContext;
}

unint64_t sub_1DF697ED4()
{
  unint64_t result = qword_1EAC2F640;
  if (!qword_1EAC2F640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F640);
  }
  return result;
}

uint64_t sub_1DF697F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF697F3C);
}

uint64_t sub_1DF697F3C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 217)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x27) {
      return v4 - 38;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1DFDFAA20();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    long long v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF697FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF697FF8);
}

unsigned char *sub_1DF697FF8(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 217)
  {
    *unint64_t result = a2 + 38;
  }
  else
  {
    uint64_t v7 = sub_1DFDFAA20();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DF69809C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6985D0(0, &qword_1EBAEABF0, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF69857C();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v12 = v16;
    long long v11 = v17;
    char v19 = 1;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *long long v11 = 11;
    uint64_t v13 = type metadata accessor for SportsTopStoriesTagFeedGroupConfigData();
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v11[*(int *)(v13 + 20)], v18, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF698304(void *a1)
{
  int v3 = v1;
  sub_1DF6985D0(0, &qword_1EAC2F648, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF69857C();
  sub_1DFE001A0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1DEAF3AE0();
  sub_1DFDFFE80();
  if (!v2)
  {
    type metadata accessor for SportsTopStoriesTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1DFDFAA20();
    sub_1DE9CB07C(&qword_1EBABA3B0);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF6984D4(uint64_t a1)
{
  unint64_t v2 = sub_1DF69857C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF698510(uint64_t a1)
{
  unint64_t v2 = sub_1DF69857C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF69854C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DF69809C(a1, a2);
}

uint64_t sub_1DF698564(void *a1)
{
  return sub_1DF698304(a1);
}

unint64_t sub_1DF69857C()
{
  unint64_t result = qword_1EBAE7D88;
  if (!qword_1EBAE7D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE7D88);
  }
  return result;
}

void sub_1DF6985D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF69857C();
    unint64_t v7 = a3(a1, &type metadata for SportsTopStoriesTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsTopStoriesTagFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF698700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTopStoriesTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SportsTopStoriesTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF69873C()
{
  unint64_t result = qword_1EAC2F650[0];
  if (!qword_1EAC2F650[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAC2F650);
  }
  return result;
}

unint64_t sub_1DF698794()
{
  unint64_t result = qword_1EBAE7D98;
  if (!qword_1EBAE7D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE7D98);
  }
  return result;
}

unint64_t sub_1DF6987EC()
{
  unint64_t result = qword_1EBAE7D90;
  if (!qword_1EBAE7D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE7D90);
  }
  return result;
}

uint64_t sub_1DF698840()
{
  v23[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = type metadata accessor for EngagementTodayFeedGroupKnobs();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF699BCC(v0 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_knobs, (uint64_t)v3);
  LOBYTE(v23[0]) = 17;
  sub_1DEA821DC(0, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
  uint64_t v5 = v4;
  uint64_t v6 = sub_1DFDF8030();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  sub_1DEFE171C();
  sub_1DEA821DC(0, (unint64_t *)&qword_1EBABA150, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DFE0B750;
  uint64_t v13 = (uint64_t *)(v12 + v11);
  uint64_t v14 = swift_allocObject();
  sub_1DEA821DC(0, &qword_1EBABA270, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7FE90]);
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  swift_allocObject();
  *uint64_t v13 = sub_1DFDF9140();
  uint64_t v15 = *(void (**)(uint64_t *, void, uint64_t))(v9 + 104);
  v15(v13, *MEMORY[0x1E4F7F8E8], v8);
  uint64_t v16 = (uint64_t *)((char *)v13 + v10);
  sub_1DF699C9C(0, &qword_1EBACBD50, MEMORY[0x1E4F80420], MEMORY[0x1E4FBBE00]);
  uint64_t v17 = sub_1DFDF98F0();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x1E4F80418], v17);
  uint64_t v21 = sub_1DF3C10DC(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *uint64_t v16 = v21;
  v15(v16, *MEMORY[0x1E4F7F8A8], v8);
  v23[0] = v6;
  sub_1DF3DDFF0(v12);
  return v23[0];
}

uint64_t sub_1DF698C74(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  sub_1DEAA23C8();
  v2[8] = swift_task_alloc();
  uint64_t v3 = sub_1DFDEE800();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  sub_1DEA51414(0);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_1DFDEE390();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF698E18, 0, 0);
}

uint64_t sub_1DF698E18()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[7] + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_config;
  sub_1DEAC2768();
  uint64_t v33 = v5;
  uint64_t v34 = v4;
  sub_1DFDF73B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DFDEE360();
  uint64_t v6 = *(unsigned int (**)(void, void, void))(v1 + 48);
  if (v6(v3, 1, v2) == 1)
  {
    sub_1DF699B6C(v0[14], (uint64_t (*)(void))sub_1DEA51414);
  }
  else
  {
    unint64_t v32 = v6;
    uint64_t v8 = v0[11];
    uint64_t v7 = v0[12];
    uint64_t v10 = v0[9];
    uint64_t v9 = v0[10];
    uint64_t v11 = v0[7];
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[18], v0[14], v0[15]);
    __swift_project_boxed_opaque_existential_1((void *)(v11 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager), *(void *)(v11 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager + 24));
    sub_1DFDEE8F0();
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E4F7EC78], v10);
    char v12 = sub_1DFDEE7F0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v13(v8, v10);
    v13(v7, v10);
    uint64_t v14 = v0[18];
    if (v12)
    {
      uint64_t v15 = v0[16];
      uint64_t v16 = v0[15];
      uint64_t v17 = sub_1DFDF8510();
      sub_1DEA4B23C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
      swift_allocError();
      unint64_t v19 = v18;
      sub_1DFDFF9B0();
      swift_bridgeObjectRelease();
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      sub_1DFDFDE90();
      void *v19 = 0xD000000000000015;
      v19[1] = 0x80000001DFF007C0;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4F7F9A0], v17);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v20 = (uint64_t (*)(void))v0[1];
      goto LABEL_12;
    }
    (*(void (**)(void, void))(v0[16] + 8))(v0[18], v0[15]);
    uint64_t v6 = v32;
  }
  uint64_t v21 = v0[15];
  uint64_t v22 = v0[13];
  sub_1DFDEE360();
  if (v6(v22, 1, v21) == 1)
  {
    sub_1DF699B6C(v0[13], (uint64_t (*)(void))sub_1DEA51414);
  }
  else
  {
    uint64_t v24 = v0[7];
    uint64_t v23 = v0[8];
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[13], v0[15]);
    uint64_t v25 = (void *)(v24 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager);
    __swift_project_boxed_opaque_existential_1((void *)(v24 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager), *(void *)(v24 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager + 24));
    sub_1DFDEE930();
    uint64_t v26 = sub_1DFDEE740();
    int v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v23, 1, v26);
    sub_1DF699B6C(v23, (uint64_t (*)(void))sub_1DEAA23C8);
    uint64_t v28 = v0[16];
    uint64_t v29 = v0[17];
    uint64_t v30 = v0[15];
    if (v27 == 1)
    {
      __swift_project_boxed_opaque_existential_1(v25, v25[3]);
      sub_1DFDEE8B0();
    }
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
  }
  (*(void (**)(void, uint64_t))(*(void *)(v33 - 8) + 16))(v0[6], v34);
  type metadata accessor for TodayFeedGroup();
  swift_storeEnumTagMultiPayload();
  sub_1DEA821DC(0, (unint64_t *)&qword_1EBABA1B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F7FA98]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
LABEL_12:
  return v20();
}

uint64_t sub_1DF699404()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_config;
  sub_1DEAC2768();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DF699B6C(v0 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_knobs, (uint64_t (*)(void))type metadata accessor for EngagementTodayFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_engagementInlineViewManager);
  return swift_deallocClassInstance();
}

uint64_t sub_1DF6994D8()
{
  return type metadata accessor for EngagementTodayFeedGroupEmitter();
}

uint64_t type metadata accessor for EngagementTodayFeedGroupEmitter()
{
  uint64_t result = qword_1EBAC77B0;
  if (!qword_1EBAC77B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF69952C()
{
  sub_1DEAC2768();
  if (v0 <= 0x3F)
  {
    sub_1DEA821DC(319, (unint64_t *)&unk_1EBABA120, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F760]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1DF699640(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DEB7BED8;
  return sub_1DF698C74(a1);
}

uint64_t sub_1DF6996DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_config;
  sub_1DEAC2768();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for TodayFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF69976C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI231EngagementTodayFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for EngagementTodayFeedGroupKnobs();
  a1[4] = sub_1DEA4B23C(qword_1EBAC6660, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupKnobs);
  a1[5] = sub_1DEA4B23C(&qword_1EBAC6658, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DF699BCC(v3, (uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1DF699834()
{
  return sub_1DF698840();
}

uint64_t sub_1DF699858()
{
  return sub_1DFDF7340();
}

uint64_t sub_1DF699890@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF699C9C(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DEAC2768();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DF699C68(0);
  a1[3] = v5;
  a1[4] = sub_1DEA4B23C(&qword_1EBAC1080, sub_1DF699C68);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF6999E0()
{
  sub_1DEA4B23C(&qword_1EBAC77A0, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF699A4C()
{
  return sub_1DEA4B23C(&qword_1EBAC77A8, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter);
}

uint64_t sub_1DF699A94()
{
  return sub_1DEA4B23C(&qword_1EBAC7798, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter);
}

uint64_t sub_1DF699ADC()
{
  return sub_1DEA4B23C(&qword_1EBAC77A0, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter);
}

uint64_t sub_1DF699B24()
{
  return sub_1DEA4B23C(&qword_1EBAF8278, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroupEmitter);
}

uint64_t sub_1DF699B6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF699BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EngagementTodayFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF699C30()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DF699C68(uint64_t a1)
{
}

void sub_1DF699C9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for SportsScoreSortingConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) >= 2uLL) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsScoreSortingConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  unint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >= 2) {
    swift_retain();
  }
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v10;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsScoreSortingConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) >= 2uLL)
  {
    if (v7 >= 2)
    {
      *(void *)(a1 + 56) = v7;
      swift_retain();
      swift_release();
    }
    else
    {
      swift_release();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
  }
  else
  {
    *(void *)(a1 + 56) = v7;
    if (v7 >= 2) {
      swift_retain();
    }
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsScoreSortingConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) >= 2uLL)
  {
    if (v6 >= 2)
    {
      *(void *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_6;
    }
    swift_release();
  }
  *(void *)(a1 + 56) = v6;
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsScoreSortingConfig()
{
  return &type metadata for SportsScoreSortingConfig;
}

uint64_t sub_1DF69A05C(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DFDF75B0();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDF8C30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F7FC18], v7);
  uint64_t v11 = sub_1DFDF9430();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    unint64_t v41 = a1;
    uint64_t v42 = v2;
    uint64_t v13 = v47 + 16;
    double v46 = *(void (**)(char *, unint64_t, uint64_t))(v47 + 16);
    unint64_t v14 = v11 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    uint64_t v43 = *(void *)(v47 + 72);
    id v44 = (void (**)(char *, uint64_t))(v47 + 8);
    v40[1] = v11;
    swift_bridgeObjectRetain();
    uint64_t v15 = MEMORY[0x1E4FBC868];
    uint64_t v47 = v13;
    uint64_t v45 = v4;
    while (1)
    {
      v46(v6, v14, v4);
      uint64_t v17 = (void *)sub_1DFDF7590();
      uint64_t v18 = sub_1DFDF7580();
      if ((v15 & 0xC000000000000001) != 0)
      {
        if (v15 < 0) {
          uint64_t v19 = v15;
        }
        else {
          uint64_t v19 = v15 & 0xFFFFFFFFFFFFFF8;
        }
        uint64_t v20 = sub_1DFDFF8C0();
        if (__OFADD__(v20, 1)) {
          goto LABEL_27;
        }
        uint64_t v15 = sub_1DF69AD04(v19, v20 + 1);
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v48 = v15;
      unint64_t v23 = sub_1DF50BC18((uint64_t)v17);
      uint64_t v24 = *(void *)(v15 + 16);
      BOOL v25 = (v22 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25)) {
        break;
      }
      char v27 = v22;
      if (*(void *)(v15 + 24) >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1DF65B138();
        }
      }
      else
      {
        sub_1DF650C24(v26, isUniquelyReferenced_nonNull_native);
        unint64_t v28 = sub_1DF50BC18((uint64_t)v17);
        if ((v27 & 1) != (v29 & 1)) {
          goto LABEL_29;
        }
        unint64_t v23 = v28;
      }
      uint64_t v15 = v48;
      if (v27)
      {
        uint64_t v16 = *(void *)(v48 + 56);

        *(void *)(v16 + 8 * v23) = v18;
      }
      else
      {
        *(void *)(v48 + 8 * (v23 >> 6) + 64) |= 1 << v23;
        *(void *)(*(void *)(v15 + 48) + 8 * v23) = v17;
        *(void *)(*(void *)(v15 + 56) + 8 * v23) = v18;
        uint64_t v30 = *(void *)(v15 + 16);
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_28;
        }
        *(void *)(v15 + 16) = v32;
        id v33 = v17;
      }

      swift_bridgeObjectRelease();
      uint64_t v4 = v45;
      (*v44)(v6, v45);
      v14 += v43;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        a1 = v41;
        uint64_t v2 = v42;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB040);
    uint64_t result = sub_1DFE00000();
    __break(1u);
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBC868];
LABEL_22:
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(*(id *)(v2 + 72), sel_autoFavoriteTagIDs);
    if (v34)
    {
      uint64_t v35 = v34;
      CGFloat v36 = (void *)sub_1DFDFE220();
    }
    else
    {
      CGFloat v36 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v37 = sub_1DFCD89B4();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1DF69B09C(a1, v36, v37, v2, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease_n();
    return v38;
  }
  return result;
}

void sub_1DF69A4DC(id *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v9 = *a1;
  id v10 = objc_msgSend(objc_msgSend(*a1, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v11 = sub_1DFDFDD20();
  uint64_t v13 = v12;

  char v57 = sub_1DF1B5544(v11, v13, a2);
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(objc_msgSend(v9, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v15 = sub_1DFDFDD20();
  uint64_t v17 = v16;

  char v56 = sub_1DEAAB55C(v15, v17, a3);
  swift_bridgeObjectRelease();
  BOOL v55 = sub_1DF69AB30(a4, v9);
  unsigned __int8 v54 = sub_1DF69ABF4(a4, v9);
  uint64_t v18 = *(void **)(a4 + 16);
  id v19 = v9;
  id v20 = objc_msgSend(v19, sel_identifier);
  if (!v20)
  {
    sub_1DFDFDD20();
    id v20 = (id)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v21 = objc_msgSend(v18, sel_hasIssueWithIDBeenVisited_, v20);

  id v22 = v19;
  unint64_t v23 = sub_1DED5E340(v22, a5);

  if (v23) {
    id v59 = v23;
  }
  else {
    id v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
  }
  uint64_t v24 = *(void **)(a4 + 96);
  unsigned int v25 = objc_msgSend(v22, sel_isPaid);
  unsigned int v26 = objc_msgSend(v22, sel_isBundlePaid);
  id v27 = objc_msgSend(objc_msgSend(v22, (SEL)&selRef_initWithType_), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v28 = sub_1DFDFDD20();
  uint64_t v30 = v29;

  if (!v25)
  {
    if ((v26 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      char v33 = 1;
      char v35 = v56;
      char v34 = v57;
      unsigned __int8 v36 = v54;
      BOOL v37 = v55;
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  unsigned __int8 v51 = v21;
  id v31 = objc_msgSend(objc_msgSend(v24, sel_purchaseProvider), sel_purchasedTagIDs);
  uint64_t v32 = sub_1DFDFE5D0();

  LOBYTE(v31) = sub_1DEAAB55C(v28, v30, v32);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    unsigned __int8 v21 = v51;
    if (!v26)
    {
      swift_bridgeObjectRelease();
      char v35 = v56;
      char v34 = v57;
      unsigned __int8 v36 = v54;
      BOOL v37 = v55;
      id v38 = v59;
LABEL_33:
      uint64_t v39 = a6;
      goto LABEL_37;
    }
LABEL_13:
    uint64_t v40 = (char *)objc_msgSend(objc_msgSend(v24, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v40, v40 + 1))
    {
      sub_1DFDFF780();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v60 = 0u;
      long long v61 = 0u;
    }
    sub_1DEA6964C((uint64_t)&v60, (uint64_t)v62);
    unsigned __int8 v52 = v21;
    if (v63)
    {
      sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
      if (swift_dynamicCast())
      {
        id v41 = v64;
        id v42 = objc_msgSend(v64, sel_integerValue);
        if (v42 == (id)-1)
        {

          double v46 = v24;
          id v38 = v59;
          goto LABEL_35;
        }
        unint64_t v43 = (unint64_t)v42;
LABEL_22:
        if (objc_getAssociatedObject(v40, (const void *)~v43))
        {
          sub_1DFDFF780();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v60 = 0u;
          long long v61 = 0u;
        }
        sub_1DEA6964C((uint64_t)&v60, (uint64_t)v62);
        if (v63)
        {
          sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
          if (swift_dynamicCast())
          {
            id v44 = v64;
            unsigned int v45 = objc_msgSend(v44, sel_integerValue);

            double v46 = v24;
            id v38 = v59;
            if (((v45 + 1) ^ (v43 + 1)))
            {
LABEL_35:
              id v47 = objc_msgSend(objc_msgSend(v46, sel_bundleSubscriptionProvider), sel_bundleSubscription);
              swift_unknownObjectRelease();
              id v48 = objc_msgSend(v47, sel_bundleChannelIDs);

              uint64_t v49 = (void *)sub_1DFDFDCE0();
              unsigned __int8 v50 = objc_msgSend(v48, sel_containsObject_, v49);
              swift_bridgeObjectRelease();

              char v35 = v56;
              char v34 = v57;
              unsigned __int8 v36 = v54;
              BOOL v37 = v55;
              unsigned __int8 v21 = v52;
              uint64_t v39 = a6;
              if (v50)
              {
                char v33 = 1;
                goto LABEL_38;
              }
LABEL_37:
              char v33 = 0;
              goto LABEL_38;
            }
            goto LABEL_32;
          }
        }
        else
        {
          sub_1DE9E4C20((uint64_t)v62);
        }

        double v46 = v24;
        id v38 = v59;
        if (v43) {
          goto LABEL_35;
        }
LABEL_32:
        swift_bridgeObjectRelease();
        char v35 = v56;
        char v34 = v57;
        unsigned __int8 v36 = v54;
        BOOL v37 = v55;
        unsigned __int8 v21 = v52;
        goto LABEL_33;
      }
    }
    else
    {
      sub_1DE9E4C20((uint64_t)v62);
    }
    id v41 = 0;
    unint64_t v43 = 0;
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  char v33 = 1;
  char v35 = v56;
  char v34 = v57;
  unsigned __int8 v36 = v54;
  BOOL v37 = v55;
  unsigned __int8 v21 = v51;
LABEL_11:
  id v38 = v59;
  uint64_t v39 = a6;
LABEL_38:
  *(void *)uint64_t v39 = v22;
  *(unsigned char *)(v39 + 8) = v21;
  *(unsigned char *)(v39 + 9) = (v34 & 1) == 0;
  *(unsigned char *)(v39 + 10) = (v35 & 1) == 0;
  *(unsigned char *)(v39 + 11) = v37;
  *(unsigned char *)(v39 + 12) = v36 & 1;
  *(void *)(v39 + 16) = v38;
  *(unsigned char *)(v39 + 24) = v33;
}

BOOL sub_1DF69AB30(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(ObjectType, v3);
  sub_1DFDED020();
  swift_release();
  id v5 = objc_msgSend(a2, sel_identifier);
  uint64_t v6 = sub_1DFDFDD20();
  uint64_t v8 = v7;

  LOBYTE(v5) = sub_1DEAAB55C(v6, v8, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v5 & 1) == 0;
}

id sub_1DF69ABF4(uint64_t a1, id a2)
{
  uint64_t v2 = *(void **)(a1 + 72);
  id v3 = objc_msgSend(objc_msgSend(a2, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  if (!v3)
  {
    sub_1DFDFDD20();
    id v3 = (id)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
  }
  id v4 = objc_msgSend(v2, sel_hasMutedSubscriptionForTagID_, v3);

  return v4;
}

uint64_t sub_1DF69AC9C()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF69AD04(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1DF661664();
    uint64_t v2 = sub_1DFDFFC30();
    uint64_t v18 = v2;
    sub_1DFDFFB60();
    uint64_t v3 = sub_1DFDFFB90();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1DE919914(0, (unint64_t *)&qword_1EBABB040);
      do
      {
        swift_dynamicCast();
        sub_1DE919914(0, (unint64_t *)&unk_1EBABAFB0);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1DF650C24(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1DFDFF540();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1DFDFFB90();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

void *sub_1DF69AF54(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1DF6631D4();
    uint64_t v2 = (void *)sub_1DFDFFC30();
    unint64_t v8 = v2;
    sub_1DFDFFB60();
    uint64_t v3 = sub_1DFDFFB90();
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for SportsDateHeader();
      do
      {
        swift_dynamicCast();
        type metadata accessor for SportsScores();
        swift_dynamicCast();
        uint64_t v2 = v8;
        unint64_t v5 = v8[2];
        if (v8[3] <= v5)
        {
          sub_1DF651558(v5 + 1, 1);
          uint64_t v2 = v8;
        }
        sub_1DF659D14(v7, v4, v2);
        uint64_t v4 = sub_1DFDFFB90();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (void *)MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1DF69B09C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v7 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (!v8) {
      return v9;
    }
    uint64_t v44 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEDF67CC(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0;
    uint64_t v9 = v44;
    unint64_t v29 = v7;
    unint64_t v30 = v7 & 0xC000000000000001;
    uint64_t v28 = v8;
    while (v8 != v11)
    {
      if (v30) {
        id v12 = (id)MEMORY[0x1E01EE240](v11, v7);
      }
      else {
        id v12 = *(id *)(v7 + 8 * v11 + 32);
      }
      char v13 = v12;
      id v35 = v12;
      sub_1DF69A4DC(&v35, a2, a3, a4, a5, (uint64_t)&v36);
      if (v6)
      {
        swift_release();

        return v9;
      }

      uint64_t v14 = v36;
      char v15 = v37;
      char v16 = v38;
      char v17 = v39;
      char v18 = v40;
      char v19 = v41;
      uint64_t v20 = v42;
      char v21 = v43;
      unint64_t v23 = *(void *)(v9 + 16);
      unint64_t v22 = *(void *)(v9 + 24);
      uint64_t v44 = v9;
      if (v23 >= v22 >> 1)
      {
        char v27 = v41;
        uint64_t v26 = v42;
        char v25 = v43;
        sub_1DEDF67CC(v22 > 1, v23 + 1, 1);
        char v21 = v25;
        uint64_t v20 = v26;
        char v19 = v27;
        uint64_t v9 = v44;
      }
      *(void *)(v9 + 16) = v23 + 1;
      uint64_t v24 = v9 + 32 * v23;
      *(void *)(v24 + 32) = v14;
      ++v11;
      *(unsigned char *)(v24 + 40) = v15;
      *(unsigned char *)(v24 + 41) = v16;
      *(unsigned char *)(v24 + 42) = v17;
      *(unsigned char *)(v24 + 43) = v18;
      *(unsigned char *)(v24 + 44) = v19;
      *(void *)(v24 + 48) = v20;
      *(unsigned char *)(v24 + 56) = v21;
      uint64_t v8 = v28;
      unint64_t v7 = v29;
      uint64_t v6 = 0;
      if (v28 == v11) {
        return v9;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF69B28C(uint64_t a1, uint64_t a2)
{
  sub_1DEA7F6E4(0);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF69B2F8(uint64_t a1)
{
  sub_1DEA7F6E4(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1DF69B35C(uint64_t a1, uint64_t a2)
{
  sub_1DEA7F6E4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF69B3C0(uint64_t a1, uint64_t a2)
{
  sub_1DEA7F6E4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF69B424(uint64_t a1, uint64_t a2)
{
  sub_1DEA7F6E4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF69B488(uint64_t a1, uint64_t a2)
{
  sub_1DEA7F6E4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF69B4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF69B500);
}

uint64_t sub_1DF69B500(uint64_t a1, uint64_t a2)
{
  sub_1DEA7F6E4(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF69B56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF69B580);
}

uint64_t sub_1DF69B580(uint64_t a1, uint64_t a2)
{
  sub_1DEA7F6E4(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TodayUncollapseBlueprintModifier(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC2F670);
}

void sub_1DF69B610()
{
  sub_1DEA7F6E4(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1DF69B69C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v86 = a3;
  unint64_t v87 = a2;
  uint64_t v88 = a1;
  sub_1DEAA74B4(0, &qword_1EBAA8158, MEMORY[0x1E4FACA00]);
  uint64_t v83 = *((void *)v4 - 1);
  double v84 = v4;
  MEMORY[0x1F4188790](v4);
  double v85 = (uint64_t *)((char *)&v67 - v5);
  sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  uint64_t v7 = v6;
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v75 = *(void *)(v76 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v78 = (char *)&v67 - v8;
  uint64_t v9 = type metadata accessor for TodayUncollapseBlueprintModifier(0);
  uint64_t v71 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v73 = v10;
  uint64_t v74 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TodaySectionGapDescriptor(0);
  MEMORY[0x1F4188790](v11 - 8);
  double v80 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for TodayBlueprintCollapsedSection(0);
  uint64_t v77 = *(void *)(v79 - 8);
  uint64_t v13 = *(void *)(v77 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v79);
  uint64_t v72 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v81 = (uint64_t)&v67 - v15;
  sub_1DEAA7740();
  MEMORY[0x1F4188790](v16 - 8);
  char v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  uint64_t v20 = v19;
  char v21 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v23 = (char *)&v67 - v22;
  sub_1DEA7F6E4(0);
  uint64_t v82 = v3;
  sub_1DFDF0B10();
  uint64_t v24 = v7;
  sub_1DFDF59E0();
  uint64_t v25 = v20;
  swift_bridgeObjectRelease();
  if (v21[6](v18, 1, v20) == 1)
  {
    sub_1DEA98950((uint64_t)v18, (uint64_t (*)(void))sub_1DEAA7740);
    type metadata accessor for TodayUncollapseBlueprintModifier.Errors(0);
    sub_1DEA94C98(&qword_1EAC2F688, (void (*)(uint64_t))type metadata accessor for TodayUncollapseBlueprintModifier.Errors);
    uint64_t v26 = swift_allocError();
    uint64_t v28 = v27;
    *char v27 = sub_1DFDF0B10();
    v28[1] = v29;
    swift_storeEnumTagMultiPayload();
    unint64_t v30 = v84;
    id v31 = (char *)v85;
    *double v85 = v26;
    uint64_t v32 = v83;
    (*(void (**)(char *, void, uint64_t (*)(uint64_t)))(v83 + 104))(v31, *MEMORY[0x1E4FAC9E0], v30);
    v87(v31);
    return (*(uint64_t (**)(char *, uint64_t (*)(uint64_t)))(v32 + 8))(v31, v30);
  }
  uint64_t v35 = v79;
  uint64_t v34 = (uint64_t)v80;
  uint64_t v68 = v13;
  uint64_t v36 = v85;
  uint64_t v67 = v24;
  uint64_t v37 = v81;
  char v38 = v86;
  v21[4](v23, (uint64_t)v18, v25);
  uint64_t v70 = v25;
  sub_1DFDF14D0();
  char v39 = (void (**)(uint64_t, char *, uint64_t))v21;
  double v69 = v23;
  if ((v89 >> 58) & 0x3C | (v89 >> 1) & 3) {
    goto LABEL_6;
  }
  uint64_t v40 = swift_projectBox();
  sub_1DF69D33C(v40, v34, type metadata accessor for TodaySectionGapDescriptor);
  uint64_t v41 = v77;
  uint64_t v42 = v38;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v34, 1, v35) == 1)
  {
    sub_1DEA98950(v34, type metadata accessor for TodaySectionGapDescriptor);
LABEL_6:
    swift_release();
    type metadata accessor for TodayUncollapseBlueprintModifier.Errors(0);
    sub_1DEA94C98(&qword_1EAC2F688, (void (*)(uint64_t))type metadata accessor for TodayUncollapseBlueprintModifier.Errors);
    uint64_t v43 = swift_allocError();
    unsigned int v45 = v69;
    uint64_t v44 = v70;
    v39[2](v46, v69, v70);
    swift_storeEnumTagMultiPayload();
    uint64_t *v36 = v43;
    uint64_t v48 = v83;
    id v47 = v84;
    (*(void (**)(uint64_t *, void, uint64_t (*)(uint64_t)))(v83 + 104))(v36, *MEMORY[0x1E4FAC9E0], v84);
    v87((char *)v36);
    (*(void (**)(uint64_t *, uint64_t (*)(uint64_t)))(v48 + 8))(v36, v47);
    return ((uint64_t (*)(char *, uint64_t))v39[1])(v45, v44);
  }
  double v84 = type metadata accessor for TodayBlueprintCollapsedSection;
  sub_1DF69D618(v34, v37, type metadata accessor for TodayBlueprintCollapsedSection);
  uint64_t v49 = swift_release();
  double v85 = (uint64_t *)v39;
  MEMORY[0x1F4188790](v49);
  *(&v67 - 2) = v37;
  uint64_t v50 = v37;
  sub_1DF69D2D8(0, &qword_1EBABA740, MEMORY[0x1E4FABC38], MEMORY[0x1E4FBB320]);
  uint64_t v83 = sub_1DFDEE090();
  uint64_t v51 = v74;
  sub_1DF69D33C(v82, v74, type metadata accessor for TodayUncollapseBlueprintModifier);
  uint64_t v52 = v76;
  uint64_t v53 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v78, v88, v67);
  uint64_t v54 = v50;
  uint64_t v55 = v72;
  sub_1DF69D33C(v54, v72, type metadata accessor for TodayBlueprintCollapsedSection);
  unint64_t v56 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v57 = v41;
  unint64_t v58 = (v73 + *(unsigned __int8 *)(v52 + 80) + v56) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v59 = (v75 + *(unsigned __int8 *)(v57 + 80) + v58) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v60 = (v68 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v61 = swift_allocObject();
  sub_1DF69D618(v51, v61 + v56, type metadata accessor for TodayUncollapseBlueprintModifier);
  (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v61 + v58, v78, v53);
  sub_1DF69D618(v55, v61 + v59, v84);
  unint64_t v62 = (void (**)(char *))(v61 + v60);
  uint64_t v63 = v87;
  *unint64_t v62 = v87;
  v62[1] = (void (*)(char *))v42;
  swift_retain();
  id v64 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE00();
  swift_release();
  swift_release();

  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v63;
  *(void *)(v65 + 24) = v42;
  swift_retain();
  uint64_t v66 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE50();
  swift_release();
  swift_release();
  swift_release();

  ((void (*)(char *, uint64_t))v85[1])(v69, v70);
  return sub_1DEA98950(v81, type metadata accessor for TodayBlueprintCollapsedSection);
}

uint64_t sub_1DF69C088()
{
  sub_1DF69D2D8(0, qword_1EBAA7860, MEMORY[0x1E4FABC38], MEMORY[0x1E4FAB088]);
  type metadata accessor for TodayBlueprintCollapsedSection(0);
  swift_bridgeObjectRetain();
  unint64_t v0 = (void *)sub_1DFDEDCE0();
  sub_1DEB4FBF4();
  sub_1DEA94C98(&qword_1EBABA5D0, (void (*)(uint64_t))sub_1DEB4FBF4);
  uint64_t v1 = sub_1DFDEDDC0();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1DF69C18C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v42 = a6;
  uint64_t v43 = a5;
  uint64_t v8 = sub_1DFDF1930();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  MEMORY[0x1F4188790](v8);
  char v39 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA74B4(0, &qword_1EBAA8158, MEMORY[0x1E4FACA00]);
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v38 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v36 = (char *)&v32 - v11;
  sub_1DE917A00();
  MEMORY[0x1F4188790](v12 - 8);
  sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  uint64_t v14 = v13;
  uint64_t v34 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v32 - v15;
  *(void *)&long long v47 = *a1;
  sub_1DF69D2D8(0, &qword_1EBABA740, MEMORY[0x1E4FABC38], MEMORY[0x1E4FBB320]);
  sub_1DE9BB9C8();
  sub_1DEA94C98((unint64_t *)&unk_1EBAA7B80, MEMORY[0x1E4FABC38]);
  uint64_t v17 = sub_1DFDFDFD0();
  uint64_t v35 = v14;
  uint64_t v32 = sub_1DFDF5960();
  uint64_t v45 = a4;
  uint64_t v46 = v17;
  uint64_t v18 = v33;
  uint64_t v19 = sub_1DEB0661C((void (*)(char *))sub_1DF69D8A8, (uint64_t)v44, (uint64_t)v49);
  uint64_t v33 = v18;
  sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1DF69D848((unint64_t *)&unk_1EBAA7D60);
  uint64_t v23 = sub_1DF69D848(&qword_1EBAA7D50);
  MEMORY[0x1E01DBA90](v19, v21, v22, v23);
  type metadata accessor for TodayModel(0);
  sub_1DEA98AA4();
  sub_1DEA94C98(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
  sub_1DFDF5950();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1DEA94918();
  sub_1DFDF8730();
  sub_1DFDF8720();
  type metadata accessor for TodayFeedServiceConfig();
  sub_1DEA94C98((unint64_t *)&qword_1EBAAF9B0, (void (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig);
  uint64_t v25 = sub_1DFDF8700();
  swift_release();
  if (v25)
  {
    *((void *)&v48 + 1) = sub_1DFDF7310();
    *(void *)&long long v47 = v25;
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
  }
  uint64_t v26 = v35;
  sub_1DFDF5A60();
  sub_1DEA54378(v24);
  uint64_t v28 = v39;
  uint64_t v27 = v40;
  uint64_t v29 = v41;
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v39, *MEMORY[0x1E4FAC288], v41);
  sub_1DEA908FC();
  unint64_t v30 = v36;
  sub_1DFDF3010();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  v43(v30);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v16, v26);
}

uint64_t sub_1DF69C734(void *a1, void (*a2)(char *))
{
  sub_1DEAA74B4(0, &qword_1EBAA8158, MEMORY[0x1E4FACA00]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  *(uint64_t *)((char *)&v11 - v7) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))((char *)&v11 - v7, *MEMORY[0x1E4FAC9E0], v5);
  id v9 = a1;
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DF69C858@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t a1)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v82 = a4;
  uint64_t v70 = a3;
  uint64_t v77 = a2;
  uint64_t v5 = sub_1DFDE7630();
  uint64_t v75 = *(void *)(v5 - 8);
  uint64_t v76 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v73 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v72 = (char *)&v64 - v10;
  sub_1DEA75880();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v78 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TodayBlueprintCollapsedSection(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v74 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v79 = (uint64_t)&v64 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v64 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v64 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v64 - v25;
  uint64_t v71 = type metadata accessor for TodaySectionGapDescriptor(0);
  MEMORY[0x1F4188790](v71);
  uint64_t v80 = (uint64_t)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = a1;
  sub_1DFDF14D0();
  if ((v85 >> 58) & 0x3C | (v85 >> 1) & 3
    || (uint64_t v28 = swift_projectBox(),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v28, 1, v13) == 1))
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v82, v81, v8);
  }
  uint64_t v69 = v13;
  uint64_t v64 = v14;
  uint64_t v30 = v80;
  sub_1DF69D33C(v28, v80, type metadata accessor for TodaySectionGapDescriptor);
  uint64_t v65 = type metadata accessor for TodayBlueprintCollapsedSection;
  sub_1DF69D33C(v30, (uint64_t)v26, type metadata accessor for TodayBlueprintCollapsedSection);
  uint64_t v31 = type metadata accessor for TodayModel(0);
  unint64_t v32 = sub_1DEA98AA4();
  uint64_t v33 = sub_1DEA94C98(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
  uint64_t v34 = v77;
  uint64_t v66 = v31;
  uint64_t v67 = v33;
  uint64_t v35 = (uint64_t)v26;
  unint64_t v68 = v32;
  char v36 = sub_1DFDF14F0();
  uint64_t v37 = v65;
  sub_1DF69D33C(v35, (uint64_t)v24, v65);
  sub_1DF69D33C((uint64_t)v34, (uint64_t)v21, v37);
  if (v36)
  {
    uint64_t v38 = *(int *)(v69 + 20);
    uint64_t v39 = *(void *)&v24[v38];
    uint64_t v40 = *(void *)&v24[v38 + 8];
    uint64_t v41 = &v21[v38];
    if (v39 == *(void *)v41 && v40 == *((void *)v41 + 1))
    {
      sub_1DEA98950((uint64_t)v24, type metadata accessor for TodayBlueprintCollapsedSection);
      sub_1DEA98950((uint64_t)v21, type metadata accessor for TodayBlueprintCollapsedSection);
LABEL_10:
      sub_1DFDF14D0();
      uint64_t v83 = v84;
      uint64_t v43 = v70;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1DF69D8C8(v35, v43);
      swift_bridgeObjectRelease();
      sub_1DEA7F6E4(0);
      uint64_t v46 = v45;
      uint64_t v47 = sub_1DEA94C98((unint64_t *)&unk_1EBAA7BB0, sub_1DEA7F6E4);
      uint64_t v48 = sub_1DEA94C98(&qword_1EBAA7BA8, sub_1DEA7F6E4);
      MEMORY[0x1E01DBA90](v44, v46, v47, v48);
      sub_1DFDF14C0();
      sub_1DEA98950(v35, type metadata accessor for TodayBlueprintCollapsedSection);
      sub_1DEA98950(v80, type metadata accessor for TodayBlueprintCollapsedSection);
      return swift_release();
    }
    char v42 = sub_1DFDFFF50();
    sub_1DEA98950((uint64_t)v24, type metadata accessor for TodayBlueprintCollapsedSection);
    sub_1DEA98950((uint64_t)v21, type metadata accessor for TodayBlueprintCollapsedSection);
    if (v42) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_1DEA98950((uint64_t)v24, type metadata accessor for TodayBlueprintCollapsedSection);
    sub_1DEA98950((uint64_t)v21, type metadata accessor for TodayBlueprintCollapsedSection);
  }
  uint64_t v77 = type metadata accessor for TodayBlueprintCollapsedSection;
  sub_1DEA98950(v35, type metadata accessor for TodayBlueprintCollapsedSection);
  uint64_t v49 = v79;
  sub_1DF69D618(v80, v79, type metadata accessor for TodayBlueprintCollapsedSection);
  uint64_t v50 = v72;
  uint64_t v51 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v72, v49, v8);
  uint64_t v52 = v73;
  sub_1DFDE7620();
  uint64_t v53 = sub_1DFDE7610();
  uint64_t v55 = v54;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v52, v76);
  uint64_t v56 = v69;
  uint64_t v57 = *(void *)(v51 + *(int *)(v69 + 24));
  uint64_t v58 = (uint64_t)v74;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v74, v50, v8);
  unint64_t v59 = (uint64_t *)(v58 + *(int *)(v56 + 20));
  *unint64_t v59 = v53;
  v59[1] = v55;
  *(void *)(v58 + *(int *)(v56 + 24)) = v57;
  uint64_t v60 = swift_allocBox();
  uint64_t v62 = v61;
  sub_1DF69D33C(v58, v61, type metadata accessor for TodayBlueprintCollapsedSection);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v62, 0, 1, v56);
  uint64_t v84 = v60;
  swift_bridgeObjectRetain();
  sub_1DFDF1510();
  sub_1DFDF14C0();
  uint64_t v63 = v77;
  sub_1DEA98950(v58, v77);
  sub_1DEA98950(v79, v63);
  return swift_release();
}

uint64_t sub_1DF69D060()
{
  sub_1DF69D2D8(0, (unint64_t *)&qword_1EBAF3230, MEMORY[0x1E4FAC8B8], MEMORY[0x1E4FBBE00]);
  uint64_t v0 = sub_1DFDF2C50();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E4FAC898], v0);
  uint64_t v4 = sub_1DF3C05E8(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_1DF69D1A0(uint64_t a1)
{
  uint64_t v2 = sub_1DEA94C98(&qword_1EAC25D40, (void (*)(uint64_t))type metadata accessor for TodayUncollapseBlueprintModifier);
  return MEMORY[0x1F4161388](a1, v2);
}

uint64_t sub_1DF69D20C()
{
  return sub_1DEA94C98(&qword_1EAC2F680, (void (*)(uint64_t))type metadata accessor for TodayUncollapseBlueprintModifier);
}

uint64_t sub_1DF69D254()
{
  return sub_1DEA94C98(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
}

uint64_t type metadata accessor for TodayUncollapseBlueprintModifier.Errors(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC2F690);
}

uint64_t sub_1DF69D2BC()
{
  return sub_1DF69C088();
}

void sub_1DF69D2D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF69D33C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF69D3A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for TodayUncollapseBlueprintModifier(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  unint64_t v7 = (v3 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for TodayBlueprintCollapsedSection(0) - 8) + 80);
  unint64_t v10 = (v7 + v8 + v9) & ~v9;
  sub_1DEA7F6E4(0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v2, v11);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v0 + v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF69D618(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF69D680(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TodayUncollapseBlueprintModifier(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(void *)(type metadata accessor for TodayBlueprintCollapsedSection(0) - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DF69C18C(a1, v1 + v4, v1 + v7, v1 + v10, *(void (**)(char *))(v1 + v11), *(void *)(v1 + v11 + 8));
}

uint64_t sub_1DF69D808()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF69D840(void *a1)
{
  return sub_1DF69C734(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1DF69D848(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEAA74B4(255, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF69D8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF69C858(a1, *(uint64_t (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1DF69D8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v42 = type metadata accessor for TodayModel(0);
  uint64_t v4 = MEMORY[0x1F4188790](v42);
  uint64_t v33 = (void *)((char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)v32 - v6;
  sub_1DEA7F6E4(0);
  uint64_t v8 = v7;
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v43 = (char *)v32 - v12;
  sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  uint64_t v14 = v13;
  uint64_t v15 = sub_1DF69D848(&qword_1EBAA7D78);
  uint64_t v16 = sub_1DFDFE6F0();
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (!v16) {
    return v17;
  }
  uint64_t v18 = v16;
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_1DEA9D1E0(0, v16 & ~(v16 >> 63), 0);
  uint64_t v40 = v15;
  uint64_t result = sub_1DFDFE6A0();
  if ((v18 & 0x8000000000000000) == 0)
  {
    v32[1] = v2;
    uint64_t v20 = (void (**)(char *))(v41 + 16);
    uint64_t v36 = v41 + 32;
    uint64_t v37 = (void (**)(char *, uint64_t))(v41 + 8);
    uint64_t v34 = a1;
    uint64_t v38 = v14;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_1DFDFE760();
      uint64_t v22 = *v20;
      (*v20)(v11);
      v21(v44, 0);
      uint64_t v23 = (uint64_t)v39;
      sub_1DFDF0B50();
      if (swift_getEnumCaseMultiPayload() != 4) {
        break;
      }
      uint64_t v24 = sub_1DFDF06B0();
      uint64_t v26 = v35;
      if (!*(void *)(v35 + 16) || (unint64_t v27 = sub_1DEA6D930(v24, v25), (v28 & 1) == 0))
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      uint64_t v29 = *(void *)(*(void *)(v26 + 56) + 8 * v27);
      swift_retain();
      swift_bridgeObjectRelease();
      *uint64_t v33 = v29;
      swift_storeEnumTagMultiPayload();
      sub_1DEA94C98(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
      swift_retain();
      sub_1DFDF0B40();
      swift_release();
      swift_release();
LABEL_11:
      (*v37)(v11, v8);
      uint64_t v17 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA9D1E0(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v45;
      }
      unint64_t v31 = *(void *)(v17 + 16);
      unint64_t v30 = *(void *)(v17 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1DEA9D1E0(v30 > 1, v31 + 1, 1);
        uint64_t v17 = v45;
      }
      *(void *)(v17 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v17+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v31, v43, v8);
      uint64_t v45 = v17;
      sub_1DFDFE730();
      if (!--v18) {
        return v17;
      }
    }
    sub_1DEA98950(v23, type metadata accessor for TodayModel);
LABEL_10:
    ((void (*)(char *, char *, uint64_t))v22)(v43, v11, v8);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1DF69DD80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DF69DE9C(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *sub_1DF69DF48(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DF69E014(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DEA98950((uint64_t)a1, type metadata accessor for TodayUncollapseBlueprintModifier.Errors);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DF69E10C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1DF69E1E0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEA98950((uint64_t)a1, type metadata accessor for TodayUncollapseBlueprintModifier.Errors);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DEAA74B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1DF69E2D8()
{
  sub_1DEAA74B4(319, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

id sub_1DF69E388()
{
  uint64_t v1 = OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___forceReloadButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___forceReloadButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___forceReloadButton);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_triggerForceReloadFeeds, 64);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1DF69E42C()
{
  uint64_t v1 = OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___setupOfflineModeButton;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___setupOfflineModeButton);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___setupOfflineModeButton);
  }
  else
  {
    id v4 = sub_1DF69E490(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1DF69E490(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, a1, sel_alertForSetUpOfflineMode, 64);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  uint64_t v5 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTitle_forState_, v5, 0, 0x80000001DFF00910);

  return v2;
}

id sub_1DF69E5FC()
{
  uint64_t v1 = v0;
  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    id v3 = result;
    objc_msgSend(result, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_connectionLabel]);

    sub_1DE9A679C();
    sub_1DF69E710();
    sub_1DF69F1FC();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DFE0B250;
    uint64_t v5 = sub_1DFDF6030();
    uint64_t v6 = MEMORY[0x1E4FB0F40];
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v6;
    sub_1DFDFEDC0();
    swift_unknownObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DF69E710()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    id v2 = v1;
    id v3 = self;
    id v4 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v4);

    uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_connectionLabel];
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    uint64_t v6 = self;
    objc_msgSend(v6, sel_systemFontSize);
    id v7 = objc_msgSend(v6, sel_boldSystemFontOfSize_);
    objc_msgSend(v5, sel_setFont_, v7);

    id v8 = objc_msgSend(v3, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v8);

    id v9 = sub_1DF69E388();
    sub_1DF24CE10();

    id v10 = sub_1DF69E42C();
    sub_1DF24CE10();

    unint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel];
    sub_1DF24CF88(v11);
  }
  else
  {
    __break(1u);
  }
}

void sub_1DF69E8C4()
{
  id v1 = v0;
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_viewDidLayoutSubviews);
  id v2 = sub_1DF69EB1C(v0);
  id v3 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_connectionLabel];
  objc_msgSend(v3, sel_sizeToFit);
  id v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v4;
  objc_msgSend(v4, sel_center);
  double v7 = v6;

  objc_msgSend(v3, sel_center);
  objc_msgSend(v3, sel_setCenter_, v7);
  objc_msgSend(v3, sel_frame);
  id v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v9 = v8;
  objc_msgSend(v8, sel_safeAreaInsets);

  sub_1DFDFF280();
  objc_msgSend(v3, sel_setFrame_);
  objc_msgSend(v2, sel_sizeToFit);
  id v10 = objc_msgSend(v1, sel_view);
  if (v10)
  {
    unint64_t v11 = v10;
    objc_msgSend(v10, sel_center);
    double v13 = v12;

    objc_msgSend(v2, sel_center);
    objc_msgSend(v2, sel_setCenter_, v13);
    objc_msgSend(v2, sel_frame);
    objc_msgSend(v3, sel_frame);
    CGRectGetMaxY(v15);
    sub_1DFDFF280();
    objc_msgSend(v3, sel_frame);
    CGRectGetHeight(v16);
    sub_1DFDFF2A0();
    objc_msgSend(v2, sel_setFrame_);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1DF69EB1C(char *a1)
{
  id v2 = sub_1DF69E388();
  id v3 = objc_msgSend(v2, sel_superview);

  id v4 = objc_msgSend(a1, sel_view);
  id v5 = v4;
  if (v3)
  {

    if (v5)
    {

      if (v3 == v5) {
        return sub_1DF69E388();
      }
    }
  }
  else
  {
    if (!v4) {
      return sub_1DF69E388();
    }
  }
  id v6 = sub_1DF69E42C();
  id v7 = objc_msgSend(v6, sel_superview);

  id v8 = objc_msgSend(a1, sel_view);
  id v9 = v8;
  if (v7)
  {

    if (v9)
    {

      if (v7 == v9) {
        return sub_1DF69E42C();
      }
    }
  }
  else
  {
    if (!v8) {
      return sub_1DF69E42C();
    }
  }
  unint64_t v11 = *(void **)&a1[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel];
  return v11;
}

uint64_t sub_1DF69EC90()
{
  if (qword_1EBAD0600 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DFDF01D0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB629F8);
  id v1 = sub_1DFDF01B0();
  os_log_type_t v2 = sub_1DFDFEA60();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)id v3 = 136315138;
    if (qword_1EBAF3868 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1DFDF5160();
    sub_1DEA5CAB8(v5, v6, &v8);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DE913000, v1, v2, "OfflineStatusBannerViewController did press force reload button. Will execute command: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v4, -1, -1);
    MEMORY[0x1E01EFA10](v3, -1, -1);
  }

  swift_getObjectType();
  if (qword_1EBAF3868 != -1) {
    swift_once();
  }
  return sub_1DFDF1BC0();
}

void sub_1DF69EEF0()
{
  sub_1DF69F1A8();
  sub_1DFDF4F90();
  swift_allocObject();
  sub_1DFDF4F10();
  sub_1DFDF4F30();
  swift_release();
  sub_1DFDF4F60();
  swift_release();
  sub_1DFDF4F20();
  swift_release();
  if (qword_1EBAD0600 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DFDF01D0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB629F8);
  oslog = sub_1DFDF01B0();
  os_log_type_t v1 = sub_1DFDFEA60();
  if (os_log_type_enabled(oslog, v1))
  {
    os_log_type_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v2 = 0;
    _os_log_impl(&dword_1DE913000, oslog, v1, "OfflineStatusBannerViewController did press Set Up Offline Mode button.", v2, 2u);
    MEMORY[0x1E01EFA10](v2, -1, -1);
  }
}

unint64_t sub_1DF69F1A8()
{
  unint64_t result = qword_1EAC2F6E8;
  if (!qword_1EAC2F6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F6E8);
  }
  return result;
}

void sub_1DF69F1FC()
{
  if (!qword_1EBAD1CE0)
  {
    sub_1DF04C050();
    unint64_t v0 = sub_1DFDFFEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAD1CE0);
    }
  }
}

void sub_1DF69F254()
{
}

void sub_1DF69F278()
{
  uint64_t v1 = OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_connectionLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController_secondaryLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___forceReloadButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7NewsUI233OfflineStatusBannerViewController____lazy_storage___setupOfflineModeButton] = 0;

  sub_1DFDFFBB0();
  __break(1u);
}

uint64_t sub_1DF69F358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF69F36C);
}

uint64_t sub_1DF69F36C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF9D80();
    id v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF69F41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF69F430);
}

void *sub_1DF69F430(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDF9D80();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for HistoryFeedRefreshRequest()
{
  uint64_t result = qword_1EAC2F6F0;
  if (!qword_1EAC2F6F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FollowingCompositionalLayoutOptionsProvider.__allocating_init(blueprintProvider:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 96), a1);
  return v2;
}

uint64_t FollowingCompositionalLayoutOptionsProvider.init(blueprintProvider:)(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 96), a1);
  return v1;
}

uint64_t sub_1DF69F62C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  id v25 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v29 = swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_1DFDF5AD0();
  uint64_t v23 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v22 - v3;
  uint64_t v5 = sub_1DFDF4F00();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  double v12 = (char *)&v22 - v11;
  MEMORY[0x1F4188790](v10);
  objc_super v14 = (uint64_t *)((char *)&v22 - v13);
  if (objc_msgSend(v25, sel_horizontalSizeClass) != (id)1
    || (sub_1DFDF2690(),
        uint64_t v15 = sub_1DFDF5940(),
        char v17 = v16,
        (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2),
        (v17 & 1) != 0))
  {
    uint64_t v20 = *MEMORY[0x1E4FAD720];
    uint64_t v19 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
    v19(v14, v20, v5);
  }
  else
  {
    sub_1DF69FA0C();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1DFE0B250;
    *(void *)(v18 + 32) = v15;
    uint64_t *v14 = v18;
    uint64_t v19 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
    v19(v14, *MEMORY[0x1E4FAD728], v5);
    uint64_t v20 = *MEMORY[0x1E4FAD720];
  }
  (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))(v12, v14, v5);
  v19((uint64_t *)v9, v20, v5);
  sub_1DFDF47C0();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v14, v5);
}

void sub_1DF69FA0C()
{
  if (!qword_1EBABB760)
  {
    unint64_t v0 = sub_1DFDFFEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABB760);
    }
  }
}

uint64_t FollowingCompositionalLayoutOptionsProvider.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return v0;
}

uint64_t FollowingCompositionalLayoutOptionsProvider.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t sub_1DF69FB80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF69F62C(a1, a2);
}

uint64_t sub_1DF69FBA4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FollowingCompositionalLayoutOptionsProvider()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for FollowingCompositionalLayoutOptionsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FollowingCompositionalLayoutOptionsProvider);
}

uint64_t dispatch thunk of FollowingCompositionalLayoutOptionsProvider.__allocating_init(blueprintProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FollowingCompositionalLayoutOptionsProvider.layoutOptions(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1DF69FCA0(uint64_t a1)
{
  sub_1DEC0CDA8(0, (unint64_t *)&unk_1EBAEAD80, MEMORY[0x1E4FAAC40], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(sub_1DFDED4D0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE0B250;
  uint64_t v6 = (void *)(v5 + v4);
  void *v6 = 0x7972657571;
  v6[1] = 0xE500000000000000;
  (*(void (**)(void))(v3 + 104))();
  sub_1DFA60908(MEMORY[0x1E4FBC860]);
  uint64_t v7 = sub_1DFDED510();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v7;
  *(void *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_1DF69FE00()
{
  uint64_t v1 = v0;
  sub_1DEC0CDA8(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)v23 - v3;
  uint64_t v5 = sub_1DFDED140();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDED180();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  double v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC0CDA8(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  sub_1DFDED420();
  sub_1DFDED160();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v13 = sub_1DFDED150();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1DEAE57FC(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DFE0B250;
  *(void *)&v25[0] = 0;
  *((void *)&v25[0] + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  long long v17 = v25[0];
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 64) = sub_1DEA08668();
  *(_OWORD *)(v16 + 32) = v17;
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB0D0);
  uint64_t v18 = (void *)sub_1DFDFF5F0();
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();

  if (sub_1DEF974DC())
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v13;
    *(void *)(v19 + 24) = v15;
    uint64_t v20 = sub_1DFDEAB40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
    uint64_t v26 = 0;
    memset(v25, 0, sizeof(v25));
    uint64_t v24 = 0;
    memset(v23, 0, sizeof(v23));
    swift_retain();
    sub_1DFBB5128(v19 | 0x7000000000000000, 0, (uint64_t)v4, (uint64_t)v25, 0, 0, 0, 0, (uint64_t)v23);
    swift_release();
    sub_1DE933224((uint64_t)v23, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
    sub_1DE933224((uint64_t)v25, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
    sub_1DEBFF970((uint64_t)v4);
  }
  else
  {
    *(void *)&v25[0] = *(void *)(v1 + 24);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v13;
    *(void *)(v21 + 24) = v15;
    *(void *)&v23[0] = v21 | 0x7000000000000000;
    sub_1DE9A1E44();
    sub_1DF6A05CC((unint64_t *)&qword_1EBAA7CA0, 255, (void (*)(uint64_t))sub_1DE9A1E44);
    swift_retain();
    sub_1DFDF5C20();
  }
  swift_release();
  swift_release();
  return 1;
}

uint64_t type metadata accessor for SearchURLHandler()
{
  return self;
}

uint64_t sub_1DF6A0524()
{
  return sub_1DF69FE00() & 1;
}

uint64_t sub_1DF6A054C(uint64_t a1, uint64_t a2)
{
  return sub_1DF6A05CC((unint64_t *)&unk_1EBAD53D8, a2, (void (*)(uint64_t))type metadata accessor for SearchURLHandler);
}

uint64_t sub_1DF6A0594()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF6A05CC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF6A0614()
{
  sub_1DFDF8730();
  sub_1DFDF8720();
  sub_1DEE568C0();
  sub_1DFDF5A50();
  if (v3)
  {
    sub_1DFDF7310();
    swift_dynamicCast();
  }
  else
  {
    sub_1DE9E4C20((uint64_t)v2);
  }
  type metadata accessor for SharedWithYouFeedServiceConfig();
  sub_1DEAC66C0((unint64_t *)&qword_1EBAC7320, (void (*)(uint64_t))type metadata accessor for SharedWithYouFeedServiceConfig);
  uint64_t v0 = sub_1DFDF8710();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DF6A0724(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDE7600();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1DEA207A8(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(a3 + 28);
    uint64_t v16 = (void *)(v7 + v15);
    long long v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1DF6A08F8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DFDE7600();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6A09CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1DEA207A8(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DF6A0B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DEA207A8(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF6A0D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1DEA207A8(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1DF6A0EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1DFDE7600();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DEA207A8(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF6A1098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF6A10AC);
}

uint64_t sub_1DF6A10AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1DEA207A8(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF6A118C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6A11A0);
}

void *sub_1DF6A11A0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1DEA207A8(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig()
{
  uint64_t result = qword_1EBAC9278;
  if (!qword_1EBAC9278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF6A12C4()
{
  sub_1DEA207A8(319, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1DF6A13A0(void *a1)
{
  int v3 = v1;
  sub_1DF6A1D2C(0, &qword_1EAC2F710, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6A1C18();
  sub_1DFE001A0();
  uint64_t v12 = *v3;
  v11[7] = 0;
  sub_1DEA207A8(0, (unint64_t *)&qword_1EAC263B0, type metadata accessor for LegacyAudioConfigArticle, MEMORY[0x1E4FBB320]);
  sub_1DF336944((unint64_t *)&qword_1EAC263C8, &qword_1EAC263D0);
  sub_1DFDFFE80();
  if (!v2)
  {
    v11[6] = 1;
    sub_1DFDFFE00();
    type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
    v11[5] = 2;
    sub_1DFDE7600();
    sub_1DF336A04(&qword_1EBAA6D78, MEMORY[0x1E4F27928]);
    sub_1DFDFFE30();
    v11[4] = 3;
    sub_1DFDFFE40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF6A1654@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  sub_1DEA207A8(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - v5;
  sub_1DF6A1D2C(0, &qword_1EAC2F700, MEMORY[0x1E4FBBDC0]);
  uint64_t v32 = v7;
  uint64_t v30 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6A1C18();
  sub_1DFE00190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v28 = v10;
  uint64_t v29 = a1;
  uint64_t v27 = v6;
  uint64_t v13 = (uint64_t)v12;
  uint64_t v14 = v30;
  uint64_t v15 = v31;
  sub_1DEA207A8(0, (unint64_t *)&qword_1EAC263B0, type metadata accessor for LegacyAudioConfigArticle, MEMORY[0x1E4FBB320]);
  char v36 = 0;
  sub_1DF336944(&qword_1EAC263B8, &qword_1EBAC4210);
  uint64_t v16 = v32;
  sub_1DFDFFD90();
  *(void *)uint64_t v13 = v37;
  char v35 = 1;
  *(void *)(v13 + 8) = sub_1DFDFFD10();
  *(unsigned char *)(v13 + 16) = v17 & 1;
  sub_1DFDE7600();
  char v34 = 2;
  sub_1DF336A04((unint64_t *)&unk_1EBAA6D90, MEMORY[0x1E4F27928]);
  uint64_t v18 = (uint64_t)v27;
  sub_1DFDFFD40();
  uint64_t v19 = v18;
  uint64_t v20 = v28;
  sub_1DEB80304(v19, v13 + *(int *)(v28 + 24));
  char v33 = 3;
  uint64_t v21 = sub_1DFDFFD50();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  uint64_t v24 = (uint64_t *)(v13 + *(int *)(v20 + 28));
  uint64_t *v24 = v21;
  v24[1] = v23;
  sub_1DF6A1C6C(v13, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_1DF6A1CD0(v13);
}

uint64_t sub_1DF6A1AB0()
{
  uint64_t result = 0x73656C6369747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7107700;
      break;
    case 2:
      uint64_t result = 0x61636F4C72657375;
      break;
    case 3:
      uint64_t result = 0x696669746E656469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF6A1B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF6A1F9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF6A1B70(uint64_t a1)
{
  unint64_t v2 = sub_1DF6A1C18();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF6A1BAC(uint64_t a1)
{
  unint64_t v2 = sub_1DF6A1C18();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF6A1BE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF6A1654(a1, a2);
}

uint64_t sub_1DF6A1C00(void *a1)
{
  return sub_1DF6A13A0(a1);
}

unint64_t sub_1DF6A1C18()
{
  unint64_t result = qword_1EAC2F708;
  if (!qword_1EAC2F708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F708);
  }
  return result;
}

uint64_t sub_1DF6A1C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF6A1CD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DF6A1D2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF6A1C18();
    unint64_t v7 = a3(a1, &type metadata for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF6A1E5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys()
{
  return &type metadata for LegacyAudioDailyBriefingFeedGroupConfig.CodingKeys;
}

unint64_t sub_1DF6A1E98()
{
  unint64_t result = qword_1EAC2F718;
  if (!qword_1EAC2F718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F718);
  }
  return result;
}

unint64_t sub_1DF6A1EF0()
{
  unint64_t result = qword_1EAC2F720;
  if (!qword_1EAC2F720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F720);
  }
  return result;
}

unint64_t sub_1DF6A1F48()
{
  unint64_t result = qword_1EAC2F728;
  if (!qword_1EAC2F728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F728);
  }
  return result;
}

uint64_t sub_1DF6A1F9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C6369747261 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107700 && a2 == 0xE300000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61636F4C72657375 && a2 == 0xEF7972697078456CLL || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DF6A2178()
{
  sub_1DEB1DDEC(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MagazineSectionsEventHandler()
{
  return self;
}

uint64_t sub_1DF6A21EC(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v4 = type metadata accessor for FollowingNotificationsPrewarm();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB008C0(a1, (uint64_t)v6);
  sub_1DE94F204(v2 + 48, (uint64_t)v22);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v10 = *(void **)(v2 + 88);
  uint64_t v9 = *(void *)(v2 + 96);
  uint64_t v11 = *(void *)(v2 + 112);
  uint64_t v20 = *(void *)(v2 + 104);
  uint64_t v12 = *(void *)(v2 + 120);
  long long v21 = *(_OWORD *)(v2 + 16);
  sub_1DE94F204(v2 + 128, (uint64_t)v24);
  sub_1DE94F204(v2 + 208, (uint64_t)v23);
  sub_1DE94F204((uint64_t)v22, (uint64_t)v25);
  v25[5] = v7;
  v25[6] = v8;
  v25[8] = v10;
  v25[9] = v9;
  v25[11] = v11;
  v25[12] = v12;
  long long v26 = v21;
  sub_1DE94F204((uint64_t)v24, (uint64_t)v27);
  v27[5] = v19;
  sub_1DE94F204((uint64_t)v23, (uint64_t)&v28);
  swift_unknownObjectRetain_n();
  id v13 = v10;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  id v14 = v13;
  uint64_t v15 = v20;
  swift_unknownObjectRetain();
  uint64_t v16 = sub_1DEBDAEA0((uint64_t)v6);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  sub_1DEB00924((uint64_t)v6);
  v25[7] = v16;
  v25[10] = v15;
  sub_1DEBE1680((uint64_t)v25, (uint64_t)v22);
  sub_1DF6A2690();
  swift_allocObject();
  sub_1DEBE207C();
  uint64_t v17 = sub_1DFDF19A0();
  sub_1DEBE1BD4((uint64_t)v25);
  return v17;
}

uint64_t sub_1DF6A242C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  return v0;
}

uint64_t sub_1DF6A249C()
{
  sub_1DF6A242C();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF6A24D0(uint64_t a1, uint64_t a2)
{
  return sub_1DF6A21EC(a1, a2);
}

uint64_t sub_1DF6A24F4(uint64_t a1)
{
  long long v4 = *(_OWORD *)(*(void *)v1 + 16);
  sub_1DF29D608(a1, (uint64_t)&v7);
  long long v6 = v4;
  sub_1DF6A2760((uint64_t)&v6, (uint64_t)v5);
  sub_1DF6A2690();
  swift_allocObject();
  sub_1DF29D6BC();
  swift_unknownObjectRetain();
  uint64_t v2 = sub_1DFDF19A0();
  sub_1DF6A27BC((uint64_t)&v6);
  return v2;
}

uint64_t sub_1DF6A2594(uint64_t a1)
{
  sub_1DE94F204(*v1 + 168, (uint64_t)&v7);
  uint64_t v6 = a1;
  sub_1DF6A2634((uint64_t)&v6, (uint64_t)&v5);
  sub_1DF6A2690();
  swift_allocObject();
  sub_1DED98318();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DFDF19A0();
  sub_1DF6A270C((uint64_t)&v6);
  return v3;
}

uint64_t sub_1DF6A2634(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1DF6A2690()
{
  if (!qword_1EAC2F730)
  {
    sub_1DEAC8E6C();
    sub_1DEAD0C64();
    unint64_t v0 = sub_1DFDF19B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F730);
    }
  }
}

uint64_t sub_1DF6A270C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF6A2760(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DF6A27BC(uint64_t a1)
{
  return a1;
}

uint64_t FormatLayoutModel.articles.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDF8FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1DFDFB070();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DF6A29A4(v1, (uint64_t)v8);
  sub_1DF6A2A08();
  uint64_t v10 = (uint64_t *)&v8[*(int *)(v9 + 48)];
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
  uint64_t v13 = sub_1DFDF8F30();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DF6A2C0C(v13, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1DF6A29A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFB070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DF6A2A08()
{
  if (!qword_1EAC2F748)
  {
    sub_1DFDF8FD0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC2F748);
    }
  }
}

uint64_t sub_1DF6A2A74()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDF8FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DF6A29A4(v1, (uint64_t)v8);
  sub_1DF6A2A08();
  uint64_t v10 = (uint64_t *)&v8[*(int *)(v9 + 48)];
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v6, v8, v2);
  uint64_t v13 = sub_1DFDF8F30();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DF6A2C0C(v13, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1DF6A2C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v19 = sub_1DFDE9FD0();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v16 = v3;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1DEDF8BF4(0, v8, 0);
    uint64_t v9 = v22;
    unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v10 = a1 + v18;
    uint64_t v17 = *(void *)(v5 + 72);
    uint64_t v11 = (void (**)(unint64_t, char *, uint64_t))(v5 + 32);
    do
    {
      sub_1DFDE9F60();
      sub_1DFDE9FB0();
      sub_1DFDE9FC0();
      swift_bridgeObjectRetain();
      sub_1DFDE9F50();
      uint64_t v22 = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1DEDF8BF4(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v22;
      }
      *(void *)(v9 + 16) = v13 + 1;
      uint64_t v14 = v17;
      (*v11)(v9 + v18 + v13 * v17, v7, v19);
      v10 += v14;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1DF6A2DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF6A2DFC);
}

uint64_t sub_1DF6A2DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF6A2E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6A2E7C);
}

uint64_t sub_1DF6A2E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1DF6A2EEC(uint64_t a1)
{
  unint64_t v2 = sub_1DEAC4FAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF6A2F28(uint64_t a1)
{
  unint64_t v2 = sub_1DEAC4FAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF6A2F64(void *a1)
{
  sub_1DEABA550(0, &qword_1EBAA6980, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEAC4FAC();
  sub_1DFE001A0();
  sub_1DFDFAA20();
  sub_1DE9CB07C(&qword_1EBABA3B0);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unsigned char *storeEnumTagSinglePayload for MissedStoriesTodayFeedGroupConfigData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF6A3174);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MissedStoriesTodayFeedGroupConfigData.CodingKeys()
{
  return &type metadata for MissedStoriesTodayFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF6A31B0()
{
  unint64_t result = qword_1EAC2F750;
  if (!qword_1EAC2F750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F750);
  }
  return result;
}

uint64_t sub_1DF6A3204(void *a1)
{
  sub_1DF6A480C(0, (unint64_t *)&unk_1EBAD1C80, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6A46F8();
  sub_1DFE001A0();
  v9[15] = 0;
  sub_1DE93703C();
  sub_1DF6A4870((unint64_t *)&unk_1EBAD15D0, (void (*)(uint64_t))sub_1DE93703C);
  sub_1DFDFFE80();
  if (!v1)
  {
    type metadata accessor for MySportsTopicTagFeedGroup();
    v9[14] = 1;
    sub_1DFDF7010();
    sub_1DF6A4870((unint64_t *)&unk_1EBACA140, MEMORY[0x1E4F7F240]);
    sub_1DFDFFE80();
    v9[13] = 2;
    sub_1DFDF95F0();
    sub_1DF6A4870(&qword_1EBAD1668, MEMORY[0x1E4F80180]);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF6A3494@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = sub_1DFDF95F0();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE93703C();
  uint64_t v8 = v7;
  uint64_t v32 = *((void *)v7 - 1);
  MEMORY[0x1F4188790](v7);
  char v36 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6A480C(0, &qword_1EAC2F758, MEMORY[0x1E4FBBDC0]);
  uint64_t v38 = v10;
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6A46F8();
  uint64_t v37 = v12;
  uint64_t v16 = v39;
  sub_1DFE00190();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v17 = v33;
  uint64_t v18 = v34;
  uint64_t v27 = v13;
  uint64_t v39 = v15;
  uint64_t v19 = v35;
  char v42 = 0;
  sub_1DF6A4870(&qword_1EAC2F760, (void (*)(uint64_t))sub_1DE93703C);
  uint64_t v20 = v36;
  sub_1DFDFFD90();
  uint64_t v21 = *(void (**)(char *, char *, char *))(v32 + 32);
  char v36 = v8;
  v21(v39, v20, v8);
  char v41 = 1;
  sub_1DF6A4870(&qword_1EBACA150, MEMORY[0x1E4F7F240]);
  uint64_t v22 = v6;
  sub_1DFDFFD90();
  uint64_t v23 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v39[*(int *)(v27 + 20)], v22, v19);
  char v40 = 2;
  sub_1DF6A4870(&qword_1EAC2F768, MEMORY[0x1E4F80180]);
  uint64_t v24 = v30;
  sub_1DFDFFD90();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v37, v38);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v23 + *(int *)(v27 + 24), v31, v24);
  sub_1DF6A474C(v23, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DF6A47B0(v23);
}

uint64_t sub_1DF6A39FC()
{
  unint64_t v1 = 0x724774616D726F66;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000019;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6769666E6F63;
  }
}

uint64_t sub_1DF6A3A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF6A4AC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF6A3A88(uint64_t a1)
{
  unint64_t v2 = sub_1DF6A46F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF6A3AC4(uint64_t a1)
{
  unint64_t v2 = sub_1DF6A46F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF6A3B00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF6A3494(a1, a2);
}

uint64_t sub_1DF6A3B18(void *a1)
{
  return sub_1DF6A3204(a1);
}

uint64_t sub_1DF6A3B30(uint64_t a1)
{
  uint64_t v2 = sub_1DF6A4870(&qword_1EBAD0F20, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DF6A3B9C()
{
  return 0x74726F705320794DLL;
}

uint64_t sub_1DF6A3BC0()
{
  return sub_1DFDF6F10();
}

uint64_t sub_1DF6A3BE8()
{
  return sub_1DF6A4870(&qword_1EBADBBA0, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
}

uint64_t sub_1DF6A3C30()
{
  return sub_1DF6A4870(&qword_1EBACBA98, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
}

uint64_t sub_1DF6A3C78()
{
  return sub_1DF6A4870(&qword_1EBAD0F28, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
}

uint64_t *sub_1DF6A3CC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE93703C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDF7010();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1DFDF95F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1DF6A3E18(uint64_t a1, uint64_t a2)
{
  sub_1DE93703C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1DFDF95F0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t sub_1DF6A3F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE93703C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DFDF95F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DF6A4010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE93703C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DFDF95F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DF6A4118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE93703C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DFDF95F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DF6A4220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE93703C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DFDF95F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DF6A4328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF6A433C);
}

uint64_t sub_1DF6A433C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE93703C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DFDF7010();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_1DFDF95F0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);
  return v15(v17, a2, v16);
}

uint64_t sub_1DF6A4488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6A449C);
}

uint64_t sub_1DF6A449C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DE93703C();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1DFDF7010();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_1DFDF95F0();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);
  return v17(v19, a2, a2, v18);
}

uint64_t sub_1DF6A45F4(uint64_t a1)
{
  uint64_t result = sub_1DF6A4870((unint64_t *)&unk_1EBAD0F40, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DF6A464C(void *a1)
{
  a1[1] = sub_1DF6A4870(&qword_1EBAD0F20, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
  a1[2] = sub_1DF6A4870(&qword_1EBAD0F38, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
  uint64_t result = sub_1DF6A4870(&qword_1EBAD0F30, (void (*)(uint64_t))type metadata accessor for MySportsTopicTagFeedGroup);
  a1[3] = result;
  return result;
}

unint64_t sub_1DF6A46F8()
{
  unint64_t result = qword_1EBAD0F08;
  if (!qword_1EBAD0F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD0F08);
  }
  return result;
}

uint64_t sub_1DF6A474C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MySportsTopicTagFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF6A47B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MySportsTopicTagFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DF6A480C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF6A46F8();
    unint64_t v7 = a3(a1, &type metadata for MySportsTopicTagFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF6A4870(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MySportsTopicTagFeedGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF6A4984);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MySportsTopicTagFeedGroup.CodingKeys()
{
  return &type metadata for MySportsTopicTagFeedGroup.CodingKeys;
}

unint64_t sub_1DF6A49C0()
{
  unint64_t result = qword_1EAC2F770;
  if (!qword_1EAC2F770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F770);
  }
  return result;
}

unint64_t sub_1DF6A4A18()
{
  unint64_t result = qword_1EBAD0F18;
  if (!qword_1EBAD0F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD0F18);
  }
  return result;
}

unint64_t sub_1DF6A4A70()
{
  unint64_t result = qword_1EBAD0F10;
  if (!qword_1EBAD0F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD0F10);
  }
  return result;
}

uint64_t sub_1DF6A4AC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6769666E6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x724774616D726F66 && a2 == 0xEB0000000070756FLL || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DFEFAB70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t type metadata accessor for FollowingNotificationsDisabledViewRenderer()
{
  return self;
}

void sub_1DF6A4C4C(uint64_t a1, char *a2, uint64_t a3)
{
  char v6 = *(void **)&a2[OBJC_IVAR____TtC7NewsUI234FollowingNotificationsDisabledView_titleLabel];
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  sub_1DEA66C20();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  uint64_t v10 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v11 = self;
  double v12 = *MEMORY[0x1E4FB09D8];
  id v13 = v10;
  id v14 = objc_msgSend(v11, sel_systemFontOfSize_weight_, 27.0, v12, 0x80000001DFEBE300);
  *(void *)(inited + 64) = sub_1DEB69898();
  *(void *)(inited + 40) = v14;
  sub_1DEA65870(inited);
  id v15 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  uint64_t v16 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DEA66BC8();
  uint64_t v17 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);
  swift_bridgeObjectRelease();

  objc_msgSend(v6, sel_setAttributedText_, v18);
  uint64_t v19 = (int *)type metadata accessor for FollowingNotificationsDisabledViewLayoutAttributes();
  objc_msgSend(v6, sel_setFrame_, *(double *)(a3 + v19[6]), *(double *)(a3 + v19[6] + 8), *(double *)(a3 + v19[6] + 16), *(double *)(a3 + v19[6] + 24));
  sub_1DEF9CC54(a1);
  if (v20)
  {
    uint64_t v21 = *(void **)&a2[OBJC_IVAR____TtC7NewsUI234FollowingNotificationsDisabledView_subtitleLabel];
    id v22 = sub_1DFDB6A38();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setAttributedText_, v22);

    objc_msgSend(v21, sel_setFrame_, *(double *)(a3 + v19[7]), *(double *)(a3 + v19[7] + 8), *(double *)(a3 + v19[7] + 16), *(double *)(a3 + v19[7] + 24));
  }
  uint64_t v23 = *(void **)&a2[OBJC_IVAR____TtC7NewsUI234FollowingNotificationsDisabledView_button];
  sub_1DEF9CDCC(a1);
  if (v24)
  {
    id v25 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v25 = 0;
  }
  objc_msgSend(v23, sel_setTitle_forState_, v25, 0);

  objc_msgSend(v23, sel_setFrame_, *(double *)(a3 + v19[8]), *(double *)(a3 + v19[8] + 8), *(double *)(a3 + v19[8] + 16), *(double *)(a3 + v19[8] + 24));
  uint64_t v26 = self;
  id v27 = objc_msgSend(v26, sel_systemBackgroundColor);
  objc_msgSend(a2, sel_setBackgroundColor_, v27);

  objc_msgSend(v6, sel_setTextAlignment_, 1);
  id v28 = objc_msgSend(v26, sel_labelColor);
  objc_msgSend(v6, sel_setTextColor_, v28);

  uint64_t v29 = *(void **)&a2[OBJC_IVAR____TtC7NewsUI234FollowingNotificationsDisabledView_subtitleLabel];
  objc_msgSend(v29, sel_setTextAlignment_, 1);
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.588235294, 0.588235294, 0.588235294, 1.0);
  objc_msgSend(v29, sel_setTextColor_, v30);

  objc_msgSend(v29, sel_setNumberOfLines_, 0);
  sub_1DFDB6C18(v23);
}

uint64_t sub_1DF6A5084@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DF6A53B8();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = sub_1DFDEA000();
  sub_1DFDECCC0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v11 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBAA7DE0);
  uint64_t result = sub_1DFDECCC0();
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBAB0140);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = type metadata accessor for IssueLinkActionHandler();
    uint64_t v14 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14 + OBJC_IVAR____TtC7NewsUI222IssueLinkActionHandler_issue, v6, v7);
    *(void *)(v14 + 16) = v10;
    *(void *)(v14 + OBJC_IVAR____TtC7NewsUI222IssueLinkActionHandler_tracker) = v11;
    sub_1DE942EC4(&v16, v14 + OBJC_IVAR____TtC7NewsUI222IssueLinkActionHandler_urlHandler);
    *(void *)(v14 + OBJC_IVAR____TtC7NewsUI222IssueLinkActionHandler_featureAvailability) = v12;
    a2[3] = v13;
    uint64_t result = sub_1DF6A5410();
    a2[4] = result;
    *a2 = v14;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1DF6A5328(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAB60);
  unint64_t v1 = (void *)sub_1DFDECCB0();
  if (!v1)
  {
    __break(1u);
    goto LABEL_5;
  }
  BOOL v2 = v1;
  id v3 = objc_msgSend(v1, sel_issueAccessChecker);

  if (!v3) {
LABEL_5:
  }
    __break(1u);
}

void sub_1DF6A53B8()
{
  if (!qword_1EBAA3858)
  {
    sub_1DFDEA000();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA3858);
    }
  }
}

unint64_t sub_1DF6A5410()
{
  unint64_t result = qword_1EAC2F778;
  if (!qword_1EAC2F778)
  {
    type metadata accessor for IssueLinkActionHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F778);
  }
  return result;
}

uint64_t *sub_1DF6A5468(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DF6A5730();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEBE3100();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
    *(void *)&v9[*(int *)(v12 + 20)] = *(void *)&v10[*(int *)(v12 + 20)];
    *(void *)&v9[*(int *)(v12 + 24)] = *(void *)&v10[*(int *)(v12 + 24)];
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    long long v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    uint64_t v17 = v16;
    id v18 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    v18(v14, v15, v17);
    uint64_t v19 = a3[7];
    long long v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)a1 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    uint64_t v21 = a3[8];
    long long v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)((char *)a1 + v21 + 24) = v22;
    (**(void (***)(void))(v22 - 8))();
    uint64_t v23 = a3[10];
    *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    uint64_t v24 = (char *)a1 + v23;
    id v25 = (char *)a2 + v23;
    long long v26 = *(_OWORD *)(v25 + 24);
    *(_OWORD *)((char *)a1 + v23 + 24) = v26;
    uint64_t v27 = v26;
    id v28 = **(void (***)(char *, char *, uint64_t))(v26 - 8);
    swift_unknownObjectRetain();
    v28(v24, v25, v27);
  }
  return a1;
}

void sub_1DF6A5730()
{
  if (!qword_1EBAE9490)
  {
    type metadata accessor for SportsOnboardingTagFeedGroupConfigData();
    sub_1DF1FF20C(&qword_1EBAE7CE8, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
    sub_1DF1FF20C(&qword_1EBAE7CE0, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
    unint64_t v0 = sub_1DFDF7430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9490);
    }
  }
}

uint64_t sub_1DF6A57FC(uint64_t a1, int *a2)
{
  sub_1DF6A5730();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[8]);
  swift_unknownObjectRelease();
  uint64_t v7 = a1 + a2[10];
  return __swift_destroy_boxed_opaque_existential_1(v7);
}

uint64_t sub_1DF6A590C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6A5730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  uint64_t v16 = v15;
  uint64_t v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  v17(v13, v14, v16);
  uint64_t v18 = a3[7];
  long long v19 = *(_OWORD *)(a2 + v18 + 24);
  *(_OWORD *)(a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  uint64_t v20 = a3[8];
  long long v21 = *(_OWORD *)(a2 + v20 + 24);
  *(_OWORD *)(a1 + v20 + 24) = v21;
  (**(void (***)(void))(v21 - 8))();
  uint64_t v22 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  long long v25 = *(_OWORD *)(v24 + 24);
  *(_OWORD *)(a1 + v22 + 24) = v25;
  uint64_t v26 = v25;
  uint64_t v27 = **(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
  swift_unknownObjectRetain();
  v27(v23, v24, v26);
  return a1;
}

uint64_t sub_1DF6A5B84(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6A5730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  swift_retain();
  swift_release();
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v13[1] = v15;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[10]), (uint64_t *)(a2 + a3[10]));
  return a1;
}

uint64_t sub_1DF6A5CF8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6A5730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  long long v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(void *)(v26 + 32) = *(void *)(v27 + 32);
  return a1;
}

uint64_t sub_1DF6A5E4C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6A5730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  swift_release();
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  __swift_destroy_boxed_opaque_existential_1(a1 + v20);
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  uint64_t v24 = a3[9];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  swift_unknownObjectRelease();
  v25[1] = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  __swift_destroy_boxed_opaque_existential_1(a1 + v28);
  long long v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  return a1;
}

uint64_t sub_1DF6A5FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF6A6004);
}

uint64_t sub_1DF6A6004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DF6A5730();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DF6A611C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6A6130);
}

uint64_t sub_1DF6A6130(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DF6A5730();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SportsOnboardingTagFeedGroupEmitter()
{
  uint64_t result = qword_1EBAE5D70;
  if (!qword_1EBAE5D70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF6A6290()
{
  sub_1DF6A5730();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1DF6A6370()
{
  uint64_t v0 = type metadata accessor for SportsOnboardingTagFeedGroupConfigData();
  MEMORY[0x1F4188790](v0);
  BOOL v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = 0;
  unint64_t v5 = 0xE000000000000000;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  unint64_t v4 = 0xD000000000000013;
  unint64_t v5 = 0x80000001DFF00B30;
  sub_1DF6A5730();
  sub_1DFDF73B0();
  swift_bridgeObjectRetain();
  sub_1DF6AA750((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return v4;
}

uint64_t sub_1DF6A648C()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DF6A650C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v1;
  uint64_t v28 = a1;
  sub_1DEABD7F4();
  sub_1DFDEE090();
  uint64_t v25 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter;
  sub_1DF6AA9D0(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = (v7 + 16) & ~v7;
  uint64_t v26 = v8 + v5;
  unint64_t v9 = (v8 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = v7 | 7;
  uint64_t v24 = v8;
  uint64_t v10 = swift_allocObject();
  uint64_t v22 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter;
  sub_1DF6AA6E8((uint64_t)v6, v10 + v8, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  *(void *)(v10 + v9) = a1;
  swift_retain();
  uint64_t v11 = (void *)sub_1DFDEDCE0();
  sub_1DFDFA9F0();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v12 = v25;
  sub_1DF6AA9D0(v1, (uint64_t)v6, (uint64_t (*)(void))v25);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v24;
  long long v15 = v22;
  sub_1DF6AA6E8((uint64_t)v6, v13 + v24, (uint64_t (*)(void))v22);
  *(void *)(v13 + v9) = a1;
  swift_retain();
  uint64_t v16 = (void *)sub_1DFDEDCE0();
  sub_1DEC3C648(0);
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  sub_1DF6AA9D0(v1, (uint64_t)v6, (uint64_t (*)(void))v12);
  uint64_t v17 = swift_allocObject();
  sub_1DF6AA6E8((uint64_t)v6, v17 + v14, (uint64_t (*)(void))v15);
  uint64_t v18 = (void *)sub_1DFDEDCE0();
  uint64_t v19 = sub_1DFDEDEE0();
  swift_release();
  swift_release();

  return v19;
}

uint64_t sub_1DF6A6800@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF6A5730();
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocBox();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0x7000000000000000;
  return result;
}

uint64_t sub_1DF6A6878@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  a2[4] = sub_1DF1FF20C(&qword_1EBAE4398, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupKnobs);
  a2[5] = sub_1DF1FF20C((unint64_t *)&unk_1EAC2F780, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DF6AA9D0(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupKnobs);
}

uint64_t sub_1DF6A6944()
{
  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  sub_1DEBE3100();
  uint64_t v0 = sub_1DFDF8030();
  sub_1DF6A8794(0, (unint64_t *)&qword_1EBAEAF50, (uint64_t (*)(uint64_t))sub_1DEC3E5EC, MEMORY[0x1E4FBBE00]);
  sub_1DEC3E5EC(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE0B250;
  uint64_t v6 = (uint64_t *)(v5 + v4);
  sub_1DF6A81A4(0, (unint64_t *)&unk_1EBAE9980, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7FE90]);
  swift_allocObject();
  uint64_t *v6 = sub_1DFDF9140();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4F7F8E8], v2);
  sub_1DF3DD820(v5);
  return v0;
}

uint64_t sub_1DF6A6B64()
{
  sub_1DF6A5730();
  return sub_1DFDF7340();
}

uint64_t sub_1DF6A6B90@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF6A6370();
  sub_1DF6A8794(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DF6A5730();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DF6A8794(0, &qword_1EBAD2778, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
  a1[3] = v5;
  a1[4] = sub_1DF6AAA38();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF6A6CD0()
{
  sub_1DF1FF20C((unint64_t *)&unk_1EBAE5D50, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF6A6D3C()
{
  return sub_1DF1FF20C((unint64_t *)&unk_1EBAE5D60, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
}

uint64_t sub_1DF6A6D84()
{
  return sub_1DF1FF20C(&qword_1EBAE5D48, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
}

uint64_t sub_1DF6A6DCC()
{
  return sub_1DF1FF20C((unint64_t *)&unk_1EBAE5D50, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
}

uint64_t sub_1DF6A6E14()
{
  return sub_1DF1FF20C((unint64_t *)&unk_1EBAF8528, (void (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
}

uint64_t sub_1DF6A6E5C()
{
  return sub_1DF6A6E8C(*(void *)(v0 + 24));
}

uint64_t sub_1DF6A6E8C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  uint64_t v6 = sub_1DFDF00C0();
  MEMORY[0x1F4188790](v6);
  *(&v14 - 2) = v1;
  *(&v14 - 1) = a1;
  sub_1DF6AA4CC();
  sub_1DFDEE090();
  sub_1DF6AA9D0(v1, (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1DF6AA6E8((uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
  *(void *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1DF6AA564;
  *(void *)(v9 + 24) = v8;
  swift_retain();
  uint64_t v10 = (void *)sub_1DFDEDCE0();
  sub_1DEABD7F4();
  sub_1DFDEDE00();
  swift_release();
  swift_release();

  uint64_t v11 = (void *)sub_1DFDEDCE0();
  uint64_t v12 = sub_1DFDEDE50();
  swift_release();

  return v12;
}

uint64_t sub_1DF6A712C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DFDFAA20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SportsOnboardingTagFeedGroupConfigData();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *a1;
  sub_1DF6A5730();
  sub_1DFDF73B0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v12[*(int *)(v10 + 28)], v5);
  sub_1DF6AA750((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
  uint64_t v14 = sub_1DF6A7368(a3, (uint64_t)v8, v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v14;
}

uint64_t sub_1DF6A72D0(unint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SportsOnboardingTagFeedGroupEmitter() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DF6A712C(a1, v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DF6A7368(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v68 = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF6A8794(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v59 - v7;
  sub_1DF6A8794(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v5);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v64 = (char *)&v59 - v10;
  uint64_t v62 = type metadata accessor for SportsOnboardingTagFeedGroupConfigData();
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6A8794(0, (unint64_t *)&qword_1EBAE95E0, (uint64_t (*)(uint64_t))sub_1DEBE3100, v5);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v63 = (char *)&v59 - v13;
  uint64_t v14 = sub_1DFDFB960();
  uint64_t v70 = *(void *)(v14 - 8);
  uint64_t v71 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v69 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6A8794(0, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8], v5);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v60 = (char *)&v59 - v17;
  uint64_t v67 = sub_1DFDFAFE0();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DFDFC900();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (uint64_t *)((char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_1DFDFCAB0();
  uint64_t v75 = *(void *)(v23 - 8);
  uint64_t v76 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v74 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v25 = swift_allocObject();
  long long v59 = xmmword_1DFE0B250;
  *(_OWORD *)(v25 + 16) = xmmword_1DFE0B250;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v27 = MEMORY[0x1E4FBB5C8];
  *(void *)(v25 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v25 + 64) = v27;
  *(void *)(v25 + 32) = v26;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  unint64_t v28 = sub_1DF6AA230(a3);
  unint64_t v29 = v28;
  if (v28 >> 62) {
    uint64_t v30 = sub_1DFDFFBE0();
  }
  else {
    uint64_t v30 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v72 = v8;
  uint64_t v73 = a2;
  if (!v30) {
    goto LABEL_16;
  }
  v83[0] = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEDF697C(0, v30 & ~(v30 >> 63), 0);
  if ((v30 & 0x8000000000000000) == 0)
  {
    uint64_t v80 = v30;
    unint64_t v81 = v29;
    uint64_t v32 = 0;
    uint64_t v33 = v83[0];
    unint64_t v79 = v29 & 0xC000000000000001;
    unsigned int v78 = *MEMORY[0x1E4F815E0];
    uint64_t v34 = v19;
    do
    {
      if (v79) {
        uint64_t v35 = MEMORY[0x1E01EE240](v32, v81);
      }
      else {
        uint64_t v35 = swift_unknownObjectRetain();
      }
      *uint64_t v22 = v35;
      (*(void (**)(uint64_t *, void, uint64_t))(v20 + 104))(v22, v78, v34);
      v83[0] = v33;
      unint64_t v37 = *(void *)(v33 + 16);
      unint64_t v36 = *(void *)(v33 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1DEDF697C(v36 > 1, v37 + 1, 1);
        uint64_t v33 = v83[0];
      }
      ++v32;
      *(void *)(v33 + 16) = v37 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v20 + 32))(v33+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v37, v22, v34);
    }
    while (v80 != v32);
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v38 = v75;
    uint64_t v39 = v76;
    char v40 = v74;
    uint64_t v41 = MEMORY[0x1E4FBC860];
    sub_1DF11BA44(MEMORY[0x1E4FBC860]);
    sub_1DF11BB5C(v41);
    sub_1DF11BC90(v41);
    sub_1DFDFCAA0();
    uint64_t v42 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
    sub_1DE94F204(v77 + *(int *)(v42 + 24), (uint64_t)v83);
    uint64_t v80 = v84;
    unint64_t v81 = v85;
    unint64_t v79 = (unint64_t)__swift_project_boxed_opaque_existential_1(v83, v84);
    sub_1DF6A8794(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], MEMORY[0x1E4FBBE00]);
    unint64_t v43 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = v59;
    (*(void (**)(unint64_t, char *, uint64_t))(v38 + 16))(v44 + v43, v40, v39);
    uint64_t v45 = sub_1DFDF66A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v60, 1, 1, v45);
    sub_1DFC83088(v41);
    sub_1DFC83088(v41);
    sub_1DFC831BC(v41);
    sub_1DFC831D4(v41);
    sub_1DFC83308(v41);
    sub_1DFC83320(v41);
    uint64_t v46 = v65;
    sub_1DFDFAFD0();
    uint64_t v47 = v77 + *(int *)(v42 + 20);
    sub_1DEBE3100();
    uint64_t v49 = v48;
    uint64_t v50 = *(void *)(v48 - 8);
    uint64_t v51 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v63, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
    sub_1DF6A5730();
    swift_retain();
    uint64_t v52 = (uint64_t)v61;
    sub_1DFDF73B0();
    swift_bridgeObjectRetain();
    sub_1DF6AA750(v52, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
    uint64_t v53 = sub_1DFDFC340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v64, 1, 1, v53);
    LOBYTE(v86) = 29;
    sub_1DF6A81A4(0, (unint64_t *)&unk_1EBAE9F30, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F81400]);
    swift_allocObject();
    sub_1DFDFC5C0();
    sub_1DFDF87F0();
    sub_1DEE821D4();
    swift_release();
    sub_1DFDF87F0();
    id v54 = *(id *)(v82 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
    swift_release();
    sub_1DFDFC5F0();
    swift_allocObject();
    sub_1DFDFC5E0();
    uint64_t v55 = sub_1DFDFB640();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v72, 1, 1, v55);
    uint64_t v56 = (void *)qword_1EBB63310;
    (id)*MEMORY[0x1E4F7E018];
    v56;
    uint64_t v57 = v69;
    sub_1DFDFB930();
    uint64_t v58 = sub_1DFDFB120();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v71);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v67);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v76);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    return v58;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF6A7F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEC3C648(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6A8224(a1, a3, (uint64_t)v10);
  sub_1DF6AA9D0((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1DF6A8794(0, (unint64_t *)&qword_1EBAD2B30, (uint64_t (*)(uint64_t))sub_1DEC3C648, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v11 = sub_1DFDEDE90();
  sub_1DF6AA750((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
  return v11;
}

uint64_t sub_1DF6A810C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SportsOnboardingTagFeedGroupEmitter() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DF6A7F74(a1, v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1DF6A81A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1DF6A8224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v33 = a3;
  uint64_t v32 = type metadata accessor for SportsOnboardingTagFeedGroupConfigData() - 8;
  MEMORY[0x1F4188790](v32);
  long long v31 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6A8794(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v28 - v6;
  uint64_t v8 = sub_1DFDF8C20();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  v28[0] = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = sub_1DFDFA9F0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1DFDF7010();
  uint64_t v15 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  sub_1DF6A5730();
  uint64_t v18 = sub_1DFDF7350();
  v28[1] = v19;
  v28[2] = v18;
  sub_1DFDF7360();
  sub_1DFDF7360();
  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  sub_1DEBE3100();
  sub_1DFDF8080();
  sub_1DFDF8050();
  uint64_t v20 = sub_1DFDF7CB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
  sub_1DFDF6F90();
  uint64_t v21 = (uint64_t)v31;
  sub_1DFDF73B0();
  uint64_t v22 = (uint64_t *)(v21 + *(int *)(v32 + 32));
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  swift_bridgeObjectRetain();
  sub_1DF6AA750(v21, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupConfigData);
  uint64_t v25 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v33, v17, v29);
  uint64_t v26 = (void *)(v25 + *(int *)(type metadata accessor for SportsOnboardingTagFeedGroup() + 20));
  *uint64_t v26 = v24;
  v26[1] = v23;
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF6A8650()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  type metadata accessor for TagFeedGroup();
  sub_1DEBFF3E4();
  sub_1DFDF88D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6A8718()
{
  return sub_1DF6A8650();
}

void sub_1DF6A8794(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF6A87F8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  uint64_t v4 = (int *)(v3 - 8);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v20 + 64);
  MEMORY[0x1F4188790](v3);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + v4[9]), *(void *)(a1 + v4[9] + 24));
  uint64_t v21 = sub_1DF39B05C(1);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + v4[10]), *(void *)(a1 + v4[10] + 24));
  sub_1DFDECEC0();
  uint64_t v6 = *(void *)(a1 + v4[11]);
  sub_1DFDF87F0();
  uint64_t v7 = *(void **)(v22 + 64);
  swift_unknownObjectRetain();
  swift_release();
  if (objc_msgSend(v7, sel_respondsToSelector_, sel_editorialFallbackSportsTopicTagIds))
  {
    id v8 = objc_msgSend(v7, sel_editorialFallbackSportsTopicTagIds);
    uint64_t v9 = swift_unknownObjectRelease();
    v19[1] = v1;
    if (v8)
    {
      uint64_t v10 = sub_1DFDFE220();
    }
    else
    {
      uint64_t v10 = MEMORY[0x1E4FBC860];
    }
    MEMORY[0x1F4188790](v9);
    v19[-2] = v6;
    v19[-1] = v10;
    sub_1DF6A8794(0, (unint64_t *)&unk_1EBAA7910, (uint64_t (*)(uint64_t))sub_1DEC809E4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1DFDEDF30();
    uint64_t v11 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v11);
    v19[-2] = a1;
    sub_1DFDFB880();
    sub_1DFDEE090();
    sub_1DF6AA9D0(a1, (uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
    unint64_t v12 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v13 = swift_allocObject();
    sub_1DF6AA6E8((uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroupEmitter);
    uint64_t v14 = (void *)sub_1DFDEDCE0();
    sub_1DEC809E4(0);
    sub_1DFDEDDF0();
    swift_release();
    swift_release();

    uint64_t v15 = (void *)sub_1DFDEDCE0();
    sub_1DEABD7F4();
    sub_1DFDEDDF0();
    swift_release();

    uint64_t v16 = (void *)sub_1DFDEDCE0();
    sub_1DFDEDED0();
    swift_release();

    uint64_t v17 = sub_1DFDEE030();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v17;
  }
  else
  {
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF6A8C1C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v46 = a5;
  unint64_t v47 = a2;
  uint64_t v10 = sub_1DFDEFD50();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDEFCF0();
  unint64_t v15 = MEMORY[0x1E4FBC860];
  unint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v16 = *(void *)(v14 + 16);
  if (v16)
  {
    unint64_t v43 = a4;
    uint64_t v44 = a7;
    uint64_t v45 = a6;
    uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
    uint64_t v17 = v11 + 16;
    uint64_t v48 = v18;
    unint64_t v19 = v14 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v20 = *(void *)(v17 + 56);
    v42[1] = v14;
    swift_bridgeObjectRetain();
    do
    {
      v48(v13, v19, v10);
      id v21 = objc_msgSend((id)sub_1DFDEFD40(), sel_asSports);
      swift_unknownObjectRelease();
      uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v17 - 8))(v13, v10);
      if (v21)
      {
        MEMORY[0x1E01ECA20](v22);
        if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
      }
      v19 += v20;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    unint64_t v23 = v49;
    a7 = v44;
    a4 = v43;
    unint64_t v15 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v23 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  unint64_t v49 = v15;
  unint64_t v24 = v47;
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DFDFFBE0();
    uint64_t v25 = result;
    if (result) {
      goto LABEL_12;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    unint64_t v31 = MEMORY[0x1E4FBC860];
    goto LABEL_25;
  }
  uint64_t v25 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v25) {
    goto LABEL_24;
  }
LABEL_12:
  if (v25 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v25; ++i)
  {
    if ((a4 & 0xC000000000000001) != 0)
    {
      uint64_t v28 = MEMORY[0x1E01EE240](i, a4);
    }
    else
    {
      uint64_t v28 = *(void *)(a4 + 8 * i + 32);
      swift_retain();
    }
    id v29 = objc_msgSend(*(id *)(v28 + 16), sel_asSports);
    uint64_t v30 = swift_release();
    if (v29)
    {
      MEMORY[0x1E01ECA20](v30);
      if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DFDFE320();
      }
      sub_1DFDFE370();
      sub_1DFDFE250();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v31 = v49;
  unint64_t v24 = v47;
LABEL_25:
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1DFE0CC10;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v34 = MEMORY[0x1E4FBB550];
  uint64_t v35 = MEMORY[0x1E4FBB5C8];
  *(void *)(v32 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v32 + 64) = v35;
  *(void *)(v32 + 32) = v33;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v32 + 96) = v34;
  *(void *)(v32 + 104) = v35;
  *(void *)(v32 + 72) = v36;
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v32 + 136) = v34;
  *(void *)(v32 + 144) = v35;
  *(void *)(v32 + 112) = v37;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  unint64_t v49 = v24;
  swift_bridgeObjectRetain();
  sub_1DF3DDFAC(v23);
  sub_1DF3DDFAC(v31);
  unint64_t v38 = swift_bridgeObjectRetain();
  sub_1DF3DDFAC(v38);
  sub_1DEABD7F4();
  sub_1DF1FF20C((unint64_t *)&qword_1EBAEA390, (void (*)(uint64_t))sub_1DEABD7F4);
  uint64_t v39 = sub_1DFDFDFF0();
  swift_bridgeObjectRelease();
  unint64_t v40 = sub_1DF6A91A0(a7, v39);
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_1DF6A9884(a7, v40);
  swift_bridgeObjectRelease();
  return v41;
}

unint64_t sub_1DF6A91A0(uint64_t a1, uint64_t a2)
{
  v48[1] = a2;
  uint64_t v58 = sub_1DFDFA9F0();
  uint64_t v2 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1F4188790](v63);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6A81A4(0, &qword_1EBAE92A8, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F400]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v48 - v12;
  sub_1DFDF87F0();
  id v14 = *(id *)(v66 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_subscriptionController);
  swift_release();
  id v15 = objc_msgSend(v14, sel_mutedTagIDs);

  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v49 = sub_1DFDFE220();
  }
  else
  {
    uint64_t v49 = MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = sub_1DFDF87E0();
  uint64_t v66 = v16;
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
    uint64_t v19 = v11 + 16;
    unint64_t v61 = v17 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
    uint64_t v62 = v20;
    uint64_t v56 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v21 = *(void *)(v19 + 56);
    long long v59 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v60 = v21;
    v48[0] = v17;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v53 = v8;
    id v54 = v5;
    uint64_t v51 = v19;
    uint64_t v52 = v10;
    uint64_t v50 = v13;
    uint64_t v55 = v18;
    while (1)
    {
      v62(v13, v61 + v60 * v22, v10);
      sub_1DFDF72F0();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v64 = v22;
      if (EnumCaseMultiPayload == 28) {
        break;
      }
      sub_1DF6AA750((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
      uint64_t v23 = v16;
LABEL_7:
      uint64_t v22 = v64 + 1;
      (*v59)(v13, v10);
      sub_1DEA8C598(v23);
      if (v22 == v18)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v27 = v66;
        goto LABEL_25;
      }
    }
    sub_1DF6AA6E8((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
    uint64_t v25 = v57;
    sub_1DFDF6FB0();
    unint64_t v26 = sub_1DFDFA960();
    (*v56)(v25, v58);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v27)
      {
LABEL_11:
        uint64_t v65 = MEMORY[0x1E4FBC860];
        unint64_t v28 = (unint64_t)&v65;
        sub_1DEA9B358(0, v27 & ~(v27 >> 63), 0);
        if (v27 < 0)
        {
          __break(1u);
          goto LABEL_30;
        }
        uint64_t v29 = 0;
        uint64_t v23 = v65;
        do
        {
          if ((v26 & 0xC000000000000001) != 0)
          {
            uint64_t v30 = (void *)MEMORY[0x1E01EE240](v29, v26);
          }
          else
          {
            uint64_t v30 = *(void **)(v26 + 8 * v29 + 32);
            swift_unknownObjectRetain();
          }
          id v31 = objc_msgSend(v30, sel_identifier);
          uint64_t v32 = sub_1DFDFDD20();
          uint64_t v34 = v33;
          swift_unknownObjectRelease();

          uint64_t v65 = v23;
          unint64_t v36 = *(void *)(v23 + 16);
          unint64_t v35 = *(void *)(v23 + 24);
          if (v36 >= v35 >> 1)
          {
            sub_1DEA9B358(v35 > 1, v36 + 1, 1);
            uint64_t v23 = v65;
          }
          ++v29;
          *(void *)(v23 + 16) = v36 + 1;
          uint64_t v37 = v23 + 16 * v36;
          *(void *)(v37 + 32) = v32;
          *(void *)(v37 + 40) = v34;
        }
        while (v27 != v29);
        swift_bridgeObjectRelease();
        id v8 = v53;
        uint64_t v5 = v54;
        uint64_t v10 = v52;
        uint64_t v13 = v50;
        uint64_t v16 = MEMORY[0x1E4FBC860];
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t v23 = MEMORY[0x1E4FBC860];
LABEL_22:
    sub_1DF6AA750((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
    uint64_t v18 = v55;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = MEMORY[0x1E4FBC860];
LABEL_25:
  uint64_t v66 = v49;
  swift_bridgeObjectRetain();
  uint64_t v38 = swift_bridgeObjectRetain();
  sub_1DEA8C598(v38);
  uint64_t v39 = sub_1DE9DB9D8(v66);
  swift_bridgeObjectRelease();
  unint64_t v40 = swift_bridgeObjectRetain();
  unint64_t v28 = sub_1DEB1EA8C(v40, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EBAEA6E8 != -1) {
LABEL_30:
  }
    swift_once();
  sub_1DEA086BC();
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1DFE0CC10;
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v43 = MEMORY[0x1E4FBB550];
  uint64_t v44 = MEMORY[0x1E4FBB5C8];
  *(void *)(v41 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v41 + 64) = v44;
  *(void *)(v41 + 32) = v42;
  uint64_t v45 = *(void *)(v49 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v41 + 96) = v43;
  *(void *)(v41 + 104) = v44;
  *(void *)(v41 + 72) = v45;
  uint64_t v46 = *(void *)(v27 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v41 + 136) = v43;
  *(void *)(v41 + 144) = v44;
  *(void *)(v41 + 112) = v46;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1DF6A9884(uint64_t a1, unint64_t a2)
{
  unint64_t v35 = a2;
  uint64_t v4 = sub_1DFDF9D80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + *(int *)(type metadata accessor for SportsOnboardingTagFeedGroupEmitter() + 20);
  type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  v34[1] = v8;
  uint64_t v36 = a1;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  int v10 = v38;
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  v34[0] = v11;
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_1DFE0B250;
  if (v10) {
    uint64_t v14 = 0x636572506D616574;
  }
  else {
    uint64_t v14 = 0x746C7561666564;
  }
  if (v10) {
    unint64_t v15 = 0xEE0065636E656465;
  }
  else {
    unint64_t v15 = 0xE700000000000000;
  }
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 64) = sub_1DEA08668();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v15;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_1DEEE07E4(v35, v10);
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v9(v7, v4);
  uint64_t v17 = v37;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1DEC7FFF4(v17, v16);
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0) {
    goto LABEL_10;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain_n();
  uint64_t v26 = swift_dynamicCastClass();
  if (!v26)
  {
    swift_unknownObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBC860];
  }
  uint64_t v27 = *(void *)(v26 + 16);
  swift_release();
  if (__OFSUB__(v24 >> 1, v22))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v27 != (v24 >> 1) - v22)
  {
LABEL_26:
    swift_unknownObjectRelease();
LABEL_10:
    uint64_t v25 = sub_1DEC7A8F0(v18, v20, v22, v24);
    goto LABEL_17;
  }
  uint64_t v25 = swift_dynamicCastClass();
  if (!v25)
  {
    swift_unknownObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
  }
LABEL_17:
  swift_unknownObjectRelease();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1DFE0B750;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = MEMORY[0x1E4FBB550];
  uint64_t v31 = MEMORY[0x1E4FBB5C8];
  *(void *)(v28 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v28 + 64) = v31;
  *(void *)(v28 + 32) = v29;
  if (v25 < 0 || (v25 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1DFDFFBE0();
    swift_release();
  }
  else
  {
    uint64_t v32 = *(void *)(v25 + 16);
  }
  *(void *)(v28 + 96) = v30;
  *(void *)(v28 + 104) = v31;
  *(void *)(v28 + 72) = v32;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1DF6A9CA8()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1DEA08668();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1DFDF00C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6A9DD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v2 + 40)), *(void *)(a1 + *(int *)(v2 + 40) + 24));
  return sub_1DFDFD030();
}

uint64_t sub_1DF6A9E30()
{
  sub_1DFDFB860();
  sub_1DFDFCA10();
  swift_release();
  type metadata accessor for SportsOnboardingTagFeedGroupEmitter();
  uint64_t v0 = off_1F3A8B6B0;
  type metadata accessor for TagService();
  uint64_t v1 = v0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DF6A9ED4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1DF6A8794(0, (unint64_t *)&qword_1EBAD2BE0, (uint64_t (*)(uint64_t))sub_1DEABD7F4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1DFDEDE90();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DFDFFBE0();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = MEMORY[0x1E01EE240](i, v1);
      }
      else
      {
        uint64_t v5 = *(void *)(v1 + 8 * i + 32);
        swift_retain();
      }
      id v6 = objc_msgSend(*(id *)(v5 + 16), sel_asSports);
      uint64_t v7 = swift_release();
      if (v6)
      {
        MEMORY[0x1E01ECA20](v7);
        if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
      }
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF6AA0A0()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1DEA08668();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DF6A8794(0, (unint64_t *)&qword_1EBAD2BE0, (uint64_t (*)(uint64_t))sub_1DEABD7F4, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DF6AA230(unint64_t a1)
{
  unint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DFDFFBE0();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    return v12;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_28;
  }
LABEL_3:
  if (v2 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      while (1)
      {
        uint64_t v6 = MEMORY[0x1E01EE240](v4, a1);
        if (v4)
        {
          if (v12 >> 62)
          {
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v7 = sub_1DFDFFBE0();
            swift_bridgeObjectRelease();
            if (v7 < 0)
            {
              __break(1u);
              break;
            }
          }
          else
          {
            swift_unknownObjectRetain();
          }
          sub_1DEBF3904(0, 0, v6);
        }
        else
        {
          uint64_t v5 = swift_unknownObjectRetain();
          MEMORY[0x1E01ECA20](v5);
          if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1DFDFE320();
          }
          sub_1DFDFE370();
          sub_1DFDFE250();
        }
        ++v4;
        swift_unknownObjectRelease();
        if (v2 == v4) {
          goto LABEL_28;
        }
      }
    }
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v10 = *(void *)(a1 + 8 * v8 + 32);
      if (v8)
      {
        if (v12 >> 62)
        {
          swift_unknownObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v11 = sub_1DFDFFBE0();
          swift_bridgeObjectRelease();
          if (v11 < 0)
          {
            __break(1u);
            goto LABEL_27;
          }
        }
        else
        {
          swift_unknownObjectRetain_n();
        }
        sub_1DEBF3904(0, 0, v10);
      }
      else
      {
        uint64_t v9 = swift_unknownObjectRetain_n();
        MEMORY[0x1E01ECA20](v9);
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
      }
      ++v8;
      swift_unknownObjectRelease();
      if (v2 == v8) {
        goto LABEL_28;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF6AA4B0()
{
  return sub_1DF6A87F8(*(void *)(v0 + 16));
}

void sub_1DF6AA4CC()
{
  if (!qword_1EBAD4FE0)
  {
    sub_1DFDEFD10();
    sub_1DEC809E4(255);
    sub_1DEABD7F4();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EBAD4FE0);
    }
  }
}

uint64_t sub_1DF6AA564(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for SportsOnboardingTagFeedGroupEmitter() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v5 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DF6A8C1C(a1, a2, a3, a4, a5, v5 + v12, v13);
}

uint64_t sub_1DF6AA630()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF6AA668@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, char *, void, void))(v2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *((void *)a1 + 1);
  sub_1DF6AA4CC();
  uint64_t result = v5(v6, v7, &a1[v8[12]], *(void *)&a1[v8[16]], *(void *)&a1[v8[20]]);
  *a2 = result;
  return result;
}

uint64_t sub_1DF6AA6E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF6AA750(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF6AA7B0()
{
  return sub_1DF750FE0();
}

uint64_t sub_1DF6AA7B8()
{
  return sub_1DF6A9DD4(*(void *)(v0 + 16));
}

uint64_t objectdestroy_6Tm_3()
{
  uint64_t v1 = (int *)(type metadata accessor for SportsOnboardingTagFeedGroupEmitter() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_1DF6A5730();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v2 + v1[7];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for SportsOnboardingTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[8]);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[9]);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[10]);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  return swift_deallocObject();
}

uint64_t sub_1DF6AA964()
{
  return sub_1DF6A9E30();
}

uint64_t sub_1DF6AA9D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DF6AAA38()
{
  unint64_t result = qword_1EBAD2760[0];
  if (!qword_1EBAD2760[0])
  {
    sub_1DF6A8794(255, &qword_1EBAD2778, (uint64_t (*)(uint64_t))type metadata accessor for SportsOnboardingTagFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBAD2760);
  }
  return result;
}

id PaywallViewData.__allocating_init(viewSessionID:viewType:viewAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  return PaywallViewData.init(viewSessionID:viewType:viewAction:)(a1, a2, a3, a4, a5, a6);
}

id PaywallViewData.init(viewSessionID:viewType:viewAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  v25[1] = a3;
  _OWORD v25[2] = a4;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1DF6AC4E0(0, &qword_1EAC2F790, MEMORY[0x1E4F7B2C0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v25 - v8;
  uint64_t v10 = sub_1DFDEA1F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v27 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6AC4E0(0, (unint64_t *)&unk_1EAC2F798, MEMORY[0x1E4F7CF68]);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)v25 - v14;
  uint64_t v16 = sub_1DFDEC470();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1DFDEC450();
  uint64_t v20 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v22 = (char *)v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = v6;
  sub_1DFDEC460();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4F7CF50], v16);
    sub_1DF6AAF4C((uint64_t)v15, (unint64_t *)&unk_1EAC2F798, MEMORY[0x1E4F7CF68]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  }
  sub_1DFDEA1E0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v27, *MEMORY[0x1E4F7B298], v10);
    sub_1DF6AAF4C((uint64_t)v9, &qword_1EAC2F790, MEMORY[0x1E4F7B2C0]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v27, v9, v10);
  }
  sub_1DFDEC440();
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))((uint64_t)v23 + OBJC_IVAR___NUPaywallViewData_viewData, v22, v26);

  v33.receiver = v23;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, sel_init);
}

uint64_t sub_1DF6AAF4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DF6AC4E0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id PaywallViewData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PaywallViewData.init()()
{
}

id PaywallGroupData.__allocating_init(groupType:groupID:groupCount:groupPosition:groupedArticleIDs:groupedIssueIDs:groupedTagIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v17 = objc_allocWithZone(v8);
  return PaywallGroupData.init(groupType:groupID:groupCount:groupPosition:groupedArticleIDs:groupedIssueIDs:groupedTagIDs:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

id PaywallGroupData.init(groupType:groupID:groupCount:groupPosition:groupedArticleIDs:groupedIssueIDs:groupedTagIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v31[2] = a2;
  v31[3] = a8;
  v31[4] = a3;
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  int v32 = a4;
  int v33 = a5;
  v31[0] = swift_getObjectType();
  sub_1DF6AC4E0(0, &qword_1EBAD2260, MEMORY[0x1E4F7B560]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v31 - v10;
  sub_1DF6AC4E0(0, &qword_1EBAA72D8, MEMORY[0x1E4F7C258]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v31 - v13;
  uint64_t v15 = sub_1DFDEC600();
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DFDEA6E0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1DFDEC5F0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E4F7B5F8], v18);
  FCFeedGroupType.groupType()(a1, (uint64_t)v17);
  uint64_t v26 = (objc_class *)v31[0];
  sub_1DF6AB514(a1, (uint64_t)v14);
  uint64_t v27 = sub_1DFDEB650();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v14, 0, 1, v27);
  uint64_t v28 = sub_1DFDEA5F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v11, 1, 1, v28);
  id v29 = (id)v31[1];
  sub_1DFDEC510();
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))((uint64_t)v29 + OBJC_IVAR___NUPaywallGroupData_groupData, v25, v22);

  v36.receiver = v29;
  v36.super_class = v26;
  return objc_msgSendSuper2(&v36, sel_init);
}

uint64_t sub_1DF6AB514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
    case 5:
    case 8:
    case 9:
    case 10:
    case 13:
    case 14:
    case 24:
    case 25:
    case 29:
    case 31:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F7C238];
      break;
    case 2:
    case 18:
    case 19:
    case 20:
    case 28:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F7C240];
      break;
    case 3:
    case 6:
    case 7:
    case 23:
    case 26:
    case 30:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F7C248];
      break;
    case 12:
    case 15:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F7C230];
      break;
    default:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4F7C250];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_1DFDEB650();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a2, v4, v5);
}

void PaywallGroupData.init()()
{
}

uint64_t sub_1DF6AB7D4(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v4 = a1 + *a3;
  uint64_t v5 = a4(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

id PaywallEventData.__allocating_init(paywallViewData:headline:channel:feed:paywallGroupData:referral:qToken:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  id v17 = objc_allocWithZone(v8);
  id v18 = sub_1DF6ABBF8((uint64_t)a1, a2, a3, a4, (uint64_t)a5, a6, a7, a8);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v18;
}

id PaywallEventData.init(paywallViewData:headline:channel:feed:paywallGroupData:referral:qToken:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  id v12 = sub_1DF6ABBF8((uint64_t)a1, a2, a3, a4, (uint64_t)a5, a6, a7, a8);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v12;
}

void PaywallEventData.init()()
{
}

id sub_1DF6ABBF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v50 = a8;
  uint64_t v51 = a6;
  uint64_t v47 = a5;
  uint64_t v48 = a7;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1DF6AC4E0(0, (unint64_t *)&unk_1EBAA7390, MEMORY[0x1E4F7D0F0]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = sub_1DFDEC3F0();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6AC4E0(0, (unint64_t *)&unk_1EBAA7360, MEMORY[0x1E4F7CE00]);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v46 - v21;
  sub_1DF6AC4E0(0, (unint64_t *)&unk_1EBAA7190, MEMORY[0x1E4F7B338]);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v46 - v24;
  uint64_t v26 = a1 + OBJC_IVAR___NUPaywallViewData_viewData;
  uint64_t v27 = &v9[OBJC_IVAR___NUPaywallEventData_viewData];
  uint64_t v28 = sub_1DFDEC450();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v27, v26, v28);
  if (a2)
  {
    swift_getObjectType();
    id v29 = v9;
    sub_1DFDFEF90();
    uint64_t v30 = sub_1DFDEA260();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v25, 0, 1, v30);
  }
  else
  {
    uint64_t v31 = sub_1DFDEA260();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v25, 1, 1, v31);
    int v32 = v9;
  }
  sub_1DF6AC534((uint64_t)v25, (uint64_t)&v9[OBJC_IVAR___NUPaywallEventData_articleData], (unint64_t *)&unk_1EBAA7190, MEMORY[0x1E4F7B338]);
  *(void *)&v9[OBJC_IVAR___NUPaywallEventData_channel] = a3;
  if (a4)
  {
    swift_unknownObjectRetain();
    id v33 = a4;
    FCFeedType.feedType()((uint64_t)objc_msgSend(v33, sel_feedType), (uint64_t)v19);
    id v34 = objc_msgSend(v33, sel_identifier);
    sub_1DFDFDD20();

    sub_1DFDEC3B0();
    uint64_t v35 = sub_1DFDEC3D0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v22, 0, 1, v35);
  }
  else
  {
    uint64_t v36 = sub_1DFDEC3D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v22, 1, 1, v36);
    swift_unknownObjectRetain();
  }
  sub_1DF6AC534((uint64_t)v22, (uint64_t)&v9[OBJC_IVAR___NUPaywallEventData_feedData], (unint64_t *)&unk_1EBAA7360, MEMORY[0x1E4F7CE00]);
  if (v47)
  {
    uint64_t v37 = v47 + OBJC_IVAR___NUPaywallGroupData_groupData;
    uint64_t v38 = sub_1DFDEC5F0();
    uint64_t v39 = *(void *)(v38 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v16, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v16, 0, 1, v38);
  }
  else
  {
    uint64_t v40 = sub_1DFDEC5F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v16, 1, 1, v40);
  }
  sub_1DF6AC534((uint64_t)v16, (uint64_t)&v9[OBJC_IVAR___NUPaywallEventData_groupData], (unint64_t *)&unk_1EBAA7390, MEMORY[0x1E4F7D0F0]);
  uint64_t v41 = v51;
  *(void *)&v9[OBJC_IVAR___NUPaywallEventData_referral] = v51;
  uint64_t v42 = &v9[OBJC_IVAR___NUPaywallEventData_qToken];
  uint64_t v43 = v50;
  *(void *)uint64_t v42 = v48;
  *((void *)v42 + 1) = v43;
  id v44 = v41;

  v52.receiver = v9;
  v52.super_class = ObjectType;
  return objc_msgSendSuper2(&v52, sel_init);
}

uint64_t sub_1DF6AC178()
{
  return type metadata accessor for PaywallViewData(0);
}

uint64_t type metadata accessor for PaywallViewData(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EAC2F7A8);
}

uint64_t sub_1DF6AC1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DF6AC224(a1, a2, a3, MEMORY[0x1E4F7CF00]);
}

uint64_t method lookup function for PaywallViewData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PaywallViewData);
}

uint64_t dispatch thunk of PaywallViewData.__allocating_init(viewSessionID:viewType:viewAction:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1DF6AC1E4()
{
  return type metadata accessor for PaywallGroupData(0);
}

uint64_t type metadata accessor for PaywallGroupData(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EAC2F7C0);
}

uint64_t sub_1DF6AC20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DF6AC224(a1, a2, a3, MEMORY[0x1E4F7D0F0]);
}

uint64_t sub_1DF6AC224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PaywallGroupData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PaywallGroupData);
}

uint64_t dispatch thunk of PaywallGroupData.__allocating_init(groupType:groupID:groupCount:groupPosition:groupedArticleIDs:groupedIssueIDs:groupedTagIDs:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1DF6AC2E4()
{
  return type metadata accessor for PaywallEventData(0);
}

uint64_t type metadata accessor for PaywallEventData(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC2F7D8);
}

void sub_1DF6AC30C()
{
  sub_1DFDEC450();
  if (v0 <= 0x3F)
  {
    sub_1DF6AC4E0(319, (unint64_t *)&unk_1EBAA7190, MEMORY[0x1E4F7B338]);
    if (v1 <= 0x3F)
    {
      sub_1DF6AC4E0(319, (unint64_t *)&unk_1EBAA7360, MEMORY[0x1E4F7CE00]);
      if (v2 <= 0x3F)
      {
        sub_1DF6AC4E0(319, (unint64_t *)&unk_1EBAA7390, MEMORY[0x1E4F7D0F0]);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for PaywallEventData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PaywallEventData);
}

uint64_t dispatch thunk of PaywallEventData.__allocating_init(paywallViewData:headline:channel:feed:paywallGroupData:referral:qToken:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1DF6AC4E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DF6AC534(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DF6AC4E0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

id sub_1DF6AC5A8()
{
  uint64_t v1 = v0;
  uint64_t v117 = sub_1DFDF1FA0();
  uint64_t v2 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117);
  uint64_t v116 = (char *)v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF0A90();
  uint64_t v127 = *(void *)(v4 - 8);
  uint64_t v128 = v4;
  MEMORY[0x1F4188790](v4);
  double v126 = (char *)v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF5E20();
  MEMORY[0x1F4188790](v6 - 8);
  double v125 = (char *)v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  type metadata accessor for MainTabManager();
  uint64_t v9 = sub_1DFDECCB0();
  if (!v9)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_1(v8, *(void *)(v0 + 40));
  type metadata accessor for MainTabBarController();
  uint64_t v11 = (char *)sub_1DFDECCB0();
  if (!v11)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  id v12 = v11;
  objc_msgSend(v11, sel__uip_setPreferredSidebarMode_, 2);
  id v13 = objc_msgSend(v12, sel__uip_sidebar);
  objc_msgSend(v13, sel__setPreferredLayout_, 2);

  id v14 = objc_msgSend(v12, sel_view);
  if (!v14)
  {
LABEL_58:
    __break(1u);
    JUMPOUT(0x1DF6ADF30);
  }
  uint64_t v15 = v14;
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  uint64_t v16 = (void *)sub_1DFDFF4D0();
  objc_msgSend(v15, sel_setBackgroundColor_, v16);

  objc_msgSend(*(id *)(v10 + 72), sel__setDelegate_, v12);
  id v132 = v12;
  id v17 = objc_msgSend(v12, sel__uip_sidebar);
  objc_msgSend(v17, sel__setEditable_, 1);

  uint64_t v18 = sub_1DF6AF494(*(void **)(v1 + 104));
  uint64_t v19 = v18;
  uint64_t v141 = MEMORY[0x1E4FBC860];
  uint64_t v131 = *((void *)v18 + 2);
  if (!v131)
  {
    swift_bridgeObjectRelease();
    id v98 = 0;
    double v97 = 0;
    goto LABEL_45;
  }
  id v120 = 0;
  CGFloat v119 = 0;
  uint64_t v20 = 0;
  unsigned int v115 = *MEMORY[0x1E4FAC430];
  double v114 = (void (**)(char *, void, uint64_t))(v2 + 104);
  v113[1] = &v134;
  long long v122 = xmmword_1DFE0B750;
  uint64_t v124 = v10;
  double v123 = v8;
  uint64_t v129 = v18;
  uint64_t v130 = v1;
  while (2)
  {
    uint64_t v23 = v20 + 1;
    switch(v19[v20 + 32])
    {
      case 1:
        id v34 = (void *)sub_1DF6ADF48(&aBlock, v20);
        __swift_project_boxed_opaque_existential_1(v8, *(void *)(v1 + 40));
        sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
        uint64_t v24 = v34;
        sub_1DFDECCC0();
        uint64_t v35 = v138;
        if (!v138) {
          goto LABEL_50;
        }
        uint64_t v36 = v139;
        id v37 = objc_allocWithZone((Class)type metadata accessor for FloatingTabBarNavigationController());
        uint64_t v38 = sub_1DF962AC8(7, 0, v24, v35, v36);
        uint64_t v39 = *(void **)(v10 + 40);
        objc_msgSend(v38, sel__uip_setTabElement_, v39);
        uint64_t v40 = v135;
        uint64_t v41 = v136;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&aBlock, (uint64_t)v135);
        uint64_t v42 = (void (*)(char *, void *, uint64_t (*)()))*((void *)v41 + 5);
        uint64_t v43 = v38;
        v42(v38, v40, v41);
        id v44 = v43;
        MEMORY[0x1E01ECA20]();
        if (*(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
        sub_1DFDF5DA0();
        uint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABCF0];
        sub_1DE9E241C(0, &qword_1EBAF5A98, MEMORY[0x1E4FABCF0], MEMORY[0x1E4FBBE00]);
        uint64_t v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = v122;
        uint64_t v47 = v132;
        id v48 = v39;
        sub_1DFDF0A50();
        sub_1DFDF0A70();
        uint64_t v138 = v46;
        sub_1DF6AF6E0(&qword_1EBAF36D0, 255, MEMORY[0x1E4FABCF0]);
        sub_1DE9E241C(0, &qword_1EBAF5898, v45, MEMORY[0x1E4FBB320]);
        sub_1DF6AF728();
        sub_1DFDFF830();
        sub_1DFDF0AA0();
        swift_allocObject();
        sub_1DFDF0A00();
        uint64_t v1 = v130;
        sub_1DFDF04F0();
        swift_release();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
        uint64_t v10 = v124;
        uint64_t v8 = v123;
        goto LABEL_8;
      case 2:
        uint64_t v24 = (char *)sub_1DE998964(v20);
        __swift_project_boxed_opaque_existential_1(v8, *(void *)(v1 + 40));
        sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
        sub_1DFDECCC0();
        uint64_t v49 = aBlock;
        if (!(void)aBlock) {
          goto LABEL_51;
        }
        uint64_t v50 = *((void *)&aBlock + 1);
        id v51 = objc_allocWithZone((Class)type metadata accessor for FloatingTabBarNavigationController());
        uint64_t v28 = v24;
        objc_super v52 = sub_1DF962AC8(7, 0, v28, v49, v50);
        uint64_t v53 = *(void **)(v10 + 48);
        objc_msgSend(v52, sel__uip_setTabElement_, v53);
        uint64_t v31 = v52;
        MEMORY[0x1E01ECA20]();
        if (*(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
        sub_1DFDF5D80();
        uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABCF0];
        sub_1DE9E241C(0, &qword_1EBAF5A98, MEMORY[0x1E4FABCF0], MEMORY[0x1E4FBBE00]);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = v122;
        v132;
        v53;
        sub_1DFDF0A50();
        sub_1DFDF0A70();
        *(void *)&long long aBlock = v22;
        sub_1DF6AF6E0(&qword_1EBAF36D0, 255, MEMORY[0x1E4FABCF0]);
        sub_1DE9E241C(0, &qword_1EBAF5898, v21, MEMORY[0x1E4FBB320]);
        sub_1DF6AF728();
        sub_1DFDFF830();
        sub_1DFDF0AA0();
        swift_allocObject();
        goto LABEL_7;
      case 3:
        uint64_t v24 = (char *)sub_1DE997EA4(v20);
        __swift_project_boxed_opaque_existential_1(v8, *(void *)(v1 + 40));
        sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
        sub_1DFDECCC0();
        uint64_t v54 = aBlock;
        if (!(void)aBlock) {
          goto LABEL_52;
        }
        uint64_t v55 = *((void *)&aBlock + 1);
        id v56 = objc_allocWithZone((Class)type metadata accessor for FloatingTabBarNavigationController());
        uint64_t v28 = v24;
        uint64_t v57 = sub_1DF962AC8(7, 0, v28, v54, v55);
        uint64_t v58 = *(void **)(v10 + 56);
        objc_msgSend(v57, sel__uip_setTabElement_, v58);
        uint64_t v31 = v57;
        MEMORY[0x1E01ECA20]();
        if (*(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
        sub_1DFDF5D40();
        long long v59 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABCF0];
        sub_1DE9E241C(0, &qword_1EBAF5A98, MEMORY[0x1E4FABCF0], MEMORY[0x1E4FBBE00]);
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = v122;
        v132;
        v58;
        sub_1DFDF0A50();
        sub_1DFDF0A70();
        *(void *)&long long aBlock = v60;
        sub_1DF6AF6E0(&qword_1EBAF36D0, 255, MEMORY[0x1E4FABCF0]);
        sub_1DE9E241C(0, &qword_1EBAF5898, v59, MEMORY[0x1E4FBB320]);
        sub_1DF6AF728();
        sub_1DFDFF830();
        sub_1DFDF0AA0();
        swift_allocObject();
        goto LABEL_7;
      case 4:
        uint64_t v24 = (char *)sub_1DE99D430(v20);
        __swift_project_boxed_opaque_existential_1(v8, *(void *)(v1 + 40));
        sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
        sub_1DFDECCC0();
        uint64_t v61 = aBlock;
        if (!(void)aBlock) {
          goto LABEL_53;
        }
        uint64_t v121 = v23;
        uint64_t v62 = *((void *)&aBlock + 1);
        id v63 = objc_allocWithZone((Class)type metadata accessor for FloatingTabBarNavigationController());
        uint64_t v64 = v24;
        uint64_t v65 = sub_1DF962AC8(7, 1, v64, v61, v62);
        objc_msgSend(v65, sel__uip_setTabElement_, *(void *)(v10 + 72));
        uint64_t v66 = v65;
        MEMORY[0x1E01ECA20]();
        if (*(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();

        uint64_t v67 = self;
        uint64_t v24 = v66;
        id v68 = objc_msgSend(v67, sel_currentDevice);
        id v69 = objc_msgSend(v68, sel_userInterfaceIdiom);

        if ((unint64_t)v69 + 1 <= 7 && ((1 << (v69 + 1)) & 0xC5) != 0)
        {
          uint64_t v70 = self;
          uint64_t v71 = swift_allocObject();
          swift_weakInit();
          uint64_t v72 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v73 = (void *)swift_allocObject();
          v73[2] = v72;
          v73[3] = v71;
          uint64_t v74 = v132;
          v73[4] = v132;
          v73[5] = v10;
          uint64_t v136 = sub_1DF6AF940;
          CGFloat v137 = v73;
          *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
          *((void *)&aBlock + 1) = 1107296256;
          uint64_t v134 = sub_1DE9744A8;
          id v135 = &block_descriptor_121;
          uint64_t v75 = _Block_copy(&aBlock);
          id v76 = v74;
          swift_retain();
          swift_release();
          objc_msgSend(v70, sel_schedulePostLaunchBlockForMainThread_, v75);
          _Block_release(v75);
          id v77 = v76;
          uint64_t v1 = v130;
          id v78 = v77;
          swift_retain();
          sub_1DFDED5E0();

          swift_release();
          swift_allocObject();
          swift_unknownObjectWeakInit();
          sub_1DFDED580();
          swift_release();
          swift_release();
          __swift_project_boxed_opaque_existential_1(v8, *(void *)(v1 + 40));
          sub_1DEAE933C();
          if (!sub_1DFDECCB0()) {
            goto LABEL_55;
          }
          sub_1DFDECD40();
          swift_allocObject();
          swift_unknownObjectWeakInit();
          sub_1DFDED580();
          swift_release();
          swift_release();
          swift_release();

          CGFloat v119 = v66;
LABEL_37:
          uint64_t v19 = v129;
        }
        else
        {
          sub_1DF6AE330(v132, v10);

          CGFloat v119 = v66;
        }
        uint64_t v20 = v121;
        goto LABEL_9;
      case 5:
        sub_1DE94F204((uint64_t)v8, (uint64_t)&aBlock);
        uint64_t v79 = swift_allocObject();
        sub_1DE942EC4(&aBlock, v79 + 16);
        (*v114)(v116, v115, v117);
        id v80 = objc_allocWithZone((Class)sub_1DFDF1FB0());
        unint64_t v81 = (void *)sub_1DFDF1F90();
        __swift_project_boxed_opaque_existential_1(v8, *(void *)(v1 + 40));
        sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
        sub_1DFDECCC0();
        uint64_t v24 = (char *)aBlock;
        if (!(void)aBlock) {
          goto LABEL_54;
        }
        uint64_t v121 = v23;
        uint64_t v82 = (char *)*((void *)&aBlock + 1);
        uint64_t v83 = (objc_class *)type metadata accessor for FloatingTabBarNavigationController();
        uint64_t v84 = objc_allocWithZone(v83);
        *(void *)&v84[qword_1EBAF4E70] = 0;
        *(void *)&v84[qword_1EBAF4E60] = 2;
        v84[qword_1EBAF4E58] = 0;
        unint64_t v85 = (char **)&v84[qword_1EBAF4E68];
        *unint64_t v85 = v24;
        v85[1] = v82;
        *(void *)&v84[qword_1EBAF4E50] = v81;
        v140.receiver = v84;
        v140.super_class = v83;
        id v86 = v81;
        swift_unknownObjectRetain();
        id v118 = v86;
        unint64_t v87 = (char *)objc_msgSendSuper2(&v140, sel_initWithRootViewController_, v86);
        objc_msgSend(v87, sel__setAllowsInteractivePopWhenNavigationBarHidden_, 1);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_1DFDF4330();
        swift_allocObject();
        swift_retain();
        uint64_t v88 = sub_1DFDF4340();
        swift_release();

        swift_unknownObjectRelease();
        *(void *)&v87[qword_1EBAF4E70] = v88;
        swift_release();
        objc_msgSend(v87, sel__uip_setTabElement_, *(void *)(v10 + 64));
        unint64_t v89 = v87;
        MEMORY[0x1E01ECA20]();
        id v90 = v120;
        if (*(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();

        double v91 = v89;
        sub_1DFDF5D70();
        CGFloat v92 = *(void **)(v10 + 64);
        double v93 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABCF0];
        sub_1DE9E241C(0, &qword_1EBAF5A98, MEMORY[0x1E4FABCF0], MEMORY[0x1E4FBBE00]);
        uint64_t v94 = swift_allocObject();
        *(_OWORD *)(v94 + 16) = v122;
        double v95 = v132;
        id v96 = v92;
        sub_1DFDF0A50();
        uint64_t v10 = v124;
        sub_1DFDF0A60();
        *(void *)&long long aBlock = v94;
        sub_1DF6AF6E0(&qword_1EBAF36D0, 255, MEMORY[0x1E4FABCF0]);
        sub_1DE9E241C(0, &qword_1EBAF5898, v93, MEMORY[0x1E4FBB320]);
        sub_1DF6AF728();
        sub_1DFDFF830();
        sub_1DFDF0AA0();
        swift_allocObject();
        sub_1DFDF0A00();
        uint64_t v1 = v130;
        sub_1DFDF04F0();

        swift_release();
        id v120 = v87;
        uint64_t v8 = v123;
        goto LABEL_37;
      default:
        uint64_t v24 = (char *)sub_1DE998114(v20);
        __swift_project_boxed_opaque_existential_1(v8, *(void *)(v1 + 40));
        sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7F10);
        sub_1DFDECCC0();
        uint64_t v25 = aBlock;
        if (!(void)aBlock)
        {

          __break(1u);
LABEL_50:

          __break(1u);
LABEL_51:

          __break(1u);
LABEL_52:

          __break(1u);
LABEL_53:

          __break(1u);
LABEL_54:

          __break(1u);
LABEL_55:

          __break(1u);
          goto LABEL_56;
        }
        uint64_t v26 = *((void *)&aBlock + 1);
        id v27 = objc_allocWithZone((Class)type metadata accessor for FloatingTabBarNavigationController());
        uint64_t v28 = v24;
        id v29 = sub_1DF962AC8(7, 0, v28, v25, v26);
        uint64_t v30 = *(void **)(v10 + 32);
        objc_msgSend(v29, sel__uip_setTabElement_, v30);
        uint64_t v31 = v29;
        MEMORY[0x1E01ECA20]();
        if (*(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
        sub_1DFDF5DC0();
        int v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABCF0];
        sub_1DE9E241C(0, &qword_1EBAF5A98, MEMORY[0x1E4FABCF0], MEMORY[0x1E4FBBE00]);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = v122;
        v30;
        v132;
        sub_1DFDF0A50();
        sub_1DFDF0A70();
        *(void *)&long long aBlock = v33;
        sub_1DF6AF6E0(&qword_1EBAF36D0, 255, MEMORY[0x1E4FABCF0]);
        sub_1DE9E241C(0, &qword_1EBAF5898, v32, MEMORY[0x1E4FBB320]);
        sub_1DF6AF728();
        sub_1DFDFF830();
        sub_1DFDF0AA0();
        swift_allocObject();
LABEL_7:
        sub_1DFDF0A00();
        uint64_t v1 = v130;
        sub_1DFDF04F0();

        swift_release();
        uint64_t v8 = v123;
        uint64_t v10 = v124;
LABEL_8:
        uint64_t v19 = v129;
        uint64_t v20 = v23;
LABEL_9:
        if (v131 != v20) {
          continue;
        }
        swift_bridgeObjectRelease();
        double v97 = v119;
        if (v119)
        {
          id v98 = v120;
          if (v120)
          {
            uint64_t v99 = (void *)type metadata accessor for MainTabBarLayoutCoordinator();
            char v100 = (void *)swift_allocObject();
            v100[3] = v98;
            v100[4] = 0;
            v100[2] = v97;
            id v135 = v99;
            uint64_t v136 = (uint64_t (*)())&off_1F3A90BB0;
            *(void *)&long long aBlock = v100;
            uint64_t v101 = v132;
            double v102 = &v132[OBJC_IVAR____TtC7NewsUI224FloatingTabBarController_layoutCoordinator];
            swift_beginAccess();
            id v103 = v101;
            double v104 = v97;
            id v105 = v98;
            sub_1DF6AF7B0((uint64_t)&aBlock, (uint64_t)v102);
            swift_endAccess();
          }
        }
        else
        {
          id v98 = v120;
        }
LABEL_45:
        double v106 = v132;
        *(void *)&v132[OBJC_IVAR____TtC7NewsUI224FloatingTabBarController_navigationControllers] = v141;
        id v107 = v106;
        swift_bridgeObjectRelease();
        id v108 = v107;
        unint64_t v109 = swift_bridgeObjectRetain();
        unint64_t v110 = sub_1DF6AF2EC(v109, v108);
        swift_bridgeObjectRelease();

        if (v110 >> 62)
        {
          sub_1DE919914(0, (unint64_t *)&qword_1EBABAC50);
          sub_1DFDFFBD0();
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1DFDFFF80();
          sub_1DE919914(0, (unint64_t *)&qword_1EBABAC50);
        }
        swift_bridgeObjectRelease();
        sub_1DE919914(0, (unint64_t *)&qword_1EBABAC50);
        double v111 = (void *)sub_1DFDFE200();
        swift_bridgeObjectRelease();
        objc_msgSend(v108, sel_setViewControllers_, v111);
        swift_release();

        return v108;
    }
  }
}

uint64_t sub_1DF6ADF48(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1DFDF1FA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  sub_1DE925C98(0, &qword_1EBAB5870);
  uint64_t result = sub_1DFDECCC0();
  if (v24)
  {
    sub_1DE942EC4(&v23, (uint64_t)a1);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE98A5F0();
    sub_1DE94F204((uint64_t)a1, (uint64_t)&v23);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v2;
    sub_1DE942EC4(&v23, v10 + 24);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAC430], v5);
    id v11 = objc_allocWithZone((Class)sub_1DFDF1FB0());
    swift_retain();
    id v12 = (void *)sub_1DFDF1F90();
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v14 = self;
    id v15 = v12;
    id v16 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    if (qword_1EBAC0000 != -1) {
      swift_once();
    }
    id v17 = (void *)qword_1EBB62830;
    id v18 = objc_allocWithZone(MEMORY[0x1E4FB1CF8]);
    id v19 = v17;
    uint64_t v20 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v18, sel_initWithTitle_image_tag_, v20, v19, a2);

    objc_msgSend(v15, sel_setTabBarItem_, v21);
    return (uint64_t)v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF6AE280(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = a1 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1E01EFB70](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = (void *)sub_1DFDF1F80();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DF6AE330(a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF6AE330(void *a1, uint64_t a2)
{
  id v48 = a1;
  uint64_t v51 = a2;
  uint64_t v53 = sub_1DFDF0A90();
  uint64_t v3 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF5E20();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF5DB0();
  uint64_t v9 = *(void **)(a2 + 72);
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABCF0];
  sub_1DE9E241C(0, &qword_1EBAF5A98, MEMORY[0x1E4FABCF0], MEMORY[0x1E4FBBE00]);
  uint64_t v52 = v11;
  id v12 = *(void **)(v3 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v39 = 2 * (void)v12;
  uint64_t v44 = v14 + 2 * (void)v12;
  v36[2] = v13 | 7;
  uint64_t v15 = swift_allocObject();
  long long v42 = xmmword_1DFE0B750;
  *(_OWORD *)(v15 + 16) = xmmword_1DFE0B750;
  id v47 = v9;
  sub_1DFDF0A50();
  sub_1DFDF0A70();
  uint64_t v54 = v15;
  uint64_t v50 = sub_1DF6AF6E0(&qword_1EBAF36D0, 255, MEMORY[0x1E4FABCF0]);
  sub_1DE9E241C(0, &qword_1EBAF5898, v10, MEMORY[0x1E4FBB320]);
  uint64_t v17 = v16;
  id v18 = (void *)sub_1DF6AF728();
  v36[1] = v5;
  sub_1DFDFF830();
  sub_1DFDF0AA0();
  swift_allocObject();
  id v43 = v48;
  uint64_t v37 = 0x80000001DFF00FA0;
  id v19 = v47;
  uint64_t v20 = sub_1DFDF0A00();
  uint64_t v21 = *(void *)(v49 + 120);
  uint64_t v38 = v20;
  sub_1DFDF04F0();
  sub_1DFDF5D90();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v42;
  uint64_t v46 = v14;
  id v23 = v19;
  sub_1DFDF0A50();
  id v47 = v12;
  sub_1DFDF0A70();
  uint64_t v54 = v22;
  id v48 = v18;
  uint64_t v49 = v17;
  sub_1DFDFF830();
  swift_allocObject();
  id v43 = v43;
  uint64_t v45 = v21;
  uint64_t v37 = sub_1DFDF0A00();
  sub_1DFDF04F0();
  uint64_t v24 = sub_1DF6F0B5C(6);
  if (v24)
  {
    uint64_t v25 = v24;
    sub_1DFDF5D90();
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = v42;
    id v27 = v25;
    sub_1DFDF0A50();
    sub_1DFDF0A60();
    uint64_t v54 = v26;
    sub_1DFDFF830();
    swift_allocObject();
    id v28 = v43;
    sub_1DFDF0A00();
    sub_1DFDF04F0();

    swift_release();
  }
  if (qword_1EBAF7F88 != -1) {
    swift_once();
  }
  uint64_t v29 = v41;
  uint64_t v30 = __swift_project_value_buffer(v41, (uint64_t)qword_1EBB634D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v8, v30, v29);
  uint64_t v31 = *(void **)(v51 + 40);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1DFE0CC10;
  id v33 = v31;
  sub_1DFDF0A50();
  sub_1DFDF0A60();
  sub_1DFDF0A80();
  uint64_t v54 = v32;
  sub_1DFDFF830();
  swift_allocObject();
  id v34 = v43;
  sub_1DFDF0A10();
  sub_1DFDF04F0();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1DF6AE964(unsigned char *a1, uint64_t a2)
{
  if (*a1 == 1)
  {
    uint64_t v2 = a2 + 16;
    swift_beginAccess();
    uint64_t v3 = MEMORY[0x1E01EFB70](v2);
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      uint64_t v5 = (void *)sub_1DFDF1F80();
    }
  }
}

uint64_t sub_1DF6AE9CC(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  sub_1DE925C98(0, &qword_1EBAA52C8);
  sub_1DE94F204(a2, (uint64_t)&v9);
  uint64_t v3 = swift_allocObject();
  sub_1DE942EC4(&v9, v3 + 16);
  sub_1DFDECCA0();
  uint64_t result = swift_release();
  if (v8)
  {
    sub_1DE942EC4(&v6, (uint64_t)&v9);
    __swift_project_boxed_opaque_existential_1(&v9, v10);
    long long v6 = 0uLL;
    char v7 = -1;
    uint64_t v5 = sub_1DEE4DF04((uint64_t *)&v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF6AEAF0(void *a1)
{
  return sub_1DFDECAA0();
}

uint64_t sub_1DF6AEB5C(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAAD3C0);
  uint64_t result = sub_1DFDECCC0();
  if (v6)
  {
    sub_1DE942EC4(&v5, (uint64_t)v7);
    uint64_t v2 = v8;
    uint64_t v3 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DF6AEC28(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAAD680);
  id result = (id)sub_1DFDECCC0();
  if (!v9)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1DE942EC4(&v8, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  uint64_t v2 = (void *)sub_1DF85D32C();
  id v3 = objc_msgSend(self, sel_currentDevice);
  id v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

  if ((unint64_t)v4 + 1 > 7 || ((1 << (v4 + 1)) & 0xC5) == 0) {
    goto LABEL_9;
  }
  id result = objc_msgSend(v2, sel_view);
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v6 = result;
  objc_msgSend(result, sel_setNeedsLayout);

  id result = objc_msgSend(v2, sel_view);
  if (result)
  {
    char v7 = result;
    objc_msgSend(result, sel_layoutIfNeeded);

LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return v2;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1DF6AED8C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAD6320);
  uint64_t result = sub_1DFDECCC0();
  if (*((void *)&v14 + 1))
  {
    sub_1DE942EC4(&v13, (uint64_t)v16);
    uint64_t v2 = __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
    uint64_t v4 = *v2;
    uint64_t v6 = *(void *)(*v2 + 56);
    long long v5 = *(void **)(*v2 + 64);
    long long v13 = 0u;
    long long v14 = 0u;
    LOBYTE(v15) = -1;
    id v7 = objc_allocWithZone((Class)type metadata accessor for MySportsViewController());
    swift_retain();
    id v8 = v5;
    sub_1DF01EFAC(3, v3, 0x7374726F7053796DLL, 0xE800000000000000, v6, v8, &v13);
    swift_release();

    __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
    sub_1DE925C98(0, (unint64_t *)&unk_1EBAD1178);
    uint64_t result = sub_1DFDECCC0();
    uint64_t v9 = *((void *)&v14 + 1);
    if (*((void *)&v14 + 1))
    {
      uint64_t v10 = v15;
      __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      id v11 = objc_allocWithZone((Class)sub_1DFDF4220());
      uint64_t v12 = sub_1DFDF4210();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF6AEF80(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAA43C0);
  uint64_t result = sub_1DFDECCC0();
  if (v4)
  {
    sub_1DE942EC4(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v2 = sub_1DEBB2504();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MainModule.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t MainModule.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for MainModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MainModule);
}

uint64_t sub_1DF6AF0E8()
{
  return sub_1DEE9B4B8();
}

uint64_t sub_1DF6AF0F0()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6AF1DC()
{
  return sub_1DED5EB6C();
}

uint64_t sub_1DF6AF1E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF6AFB1C();
  *a1 = result;
  return result;
}

void sub_1DF6AF214(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x7961646F74;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x656E697A6167616DLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x7374726F7073;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6F69647561;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x6E69776F6C6C6F66;
      a1[1] = 0xE900000000000067;
      break;
    case 5:
      *a1 = 0x686372616573;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DF6AF2E0(unsigned __int8 *a1, char *a2)
{
  return sub_1DF2A6FB4(*a1, *a2);
}

uint64_t sub_1DF6AF2EC(unint64_t a1, void *a2)
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        long long v5 = (char *)MEMORY[0x1E01EE240](v4, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_18;
        }
        uint64_t v8 = *(void *)&v5[qword_1EBAF4E60];
        id v9 = objc_msgSend(a2, sel_traitCollection);
        unint64_t v10 = (unint64_t)objc_msgSend(v9, sel_horizontalSizeClass);

        if (v10 > 2)
        {
          if ((v8 & 4) != 0)
          {
LABEL_14:
            sub_1DFDFFA50();
            sub_1DFDFFA90();
            sub_1DFDFFAA0();
            sub_1DFDFFA60();
            goto LABEL_5;
          }
        }
        else if ((v8 & qword_1DFE6F540[v10]) != 0)
        {
          goto LABEL_14;
        }

LABEL_5:
        ++v4;
        if (v7 == v3) {
          return v13;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      uint64_t v3 = sub_1DFDFFBE0();
      if (!v3) {
        return MEMORY[0x1E4FBC860];
      }
    }
    long long v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

char *sub_1DF6AF494(void *a1)
{
  unint64_t v2 = sub_1DEE1B830(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_1DEE1B830((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  unsigned int v5 = objc_msgSend(a1, sel_appleMagazineContent);
  unint64_t v6 = *((void *)v2 + 2);
  if (v5)
  {
    unint64_t v7 = *((void *)v2 + 3);
    unint64_t v8 = v6 + 1;
    if (v6 >= v7 >> 1) {
      unint64_t v2 = sub_1DEE1B830((char *)(v7 > 1), v6 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v8;
    v2[v6 + 32] = 1;
  }
  else
  {
    unint64_t v8 = *((void *)v2 + 2);
  }
  unint64_t v9 = *((void *)v2 + 3);
  if (v8 >= v9 >> 1) {
    unint64_t v2 = sub_1DEE1B830((char *)(v9 > 1), v8 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v8 + 1;
  v2[v8 + 32] = 2;
  unsigned int v10 = objc_msgSend(a1, sel_narrativeAudio);
  unint64_t v11 = *((void *)v2 + 2);
  if (v10)
  {
    unint64_t v12 = *((void *)v2 + 3);
    unint64_t v13 = v11 + 1;
    if (v11 >= v12 >> 1) {
      unint64_t v2 = sub_1DEE1B830((char *)(v12 > 1), v11 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v13;
    v2[v11 + 32] = 3;
  }
  else
  {
    unint64_t v13 = *((void *)v2 + 2);
  }
  unint64_t v14 = *((void *)v2 + 3);
  unint64_t v15 = v13 + 1;
  if (v13 >= v14 >> 1) {
    unint64_t v2 = sub_1DEE1B830((char *)(v14 > 1), v13 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v15;
  v2[v13 + 32] = 4;
  unint64_t v16 = *((void *)v2 + 3);
  int64_t v17 = v13 + 2;
  if (v17 > (uint64_t)(v16 >> 1)) {
    unint64_t v2 = sub_1DEE1B830((char *)(v16 > 1), v17, 1, v2);
  }
  *((void *)v2 + 2) = v17;
  v2[v15 + 32] = 5;
  return v2;
}

uint64_t sub_1DF6AF698()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DF6AF6D0()
{
  return sub_1DF6AEF80((void *)(v0 + 16));
}

id sub_1DF6AF6D8()
{
  return sub_1DF962C38(v0);
}

uint64_t sub_1DF6AF6E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF6AF728()
{
  unint64_t result = qword_1EBAF58A0;
  if (!qword_1EBAF58A0)
  {
    sub_1DE9E241C(255, &qword_1EBAF5898, MEMORY[0x1E4FABCF0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF58A0);
  }
  return result;
}

uint64_t sub_1DF6AF7B0(uint64_t a1, uint64_t a2)
{
  sub_1DF6AF814();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1DF6AF814()
{
  if (!qword_1EBAF4FA0)
  {
    sub_1DE925C98(255, (unint64_t *)&unk_1EBAF4F90);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF4FA0);
    }
  }
}

uint64_t sub_1DF6AF880()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF6AF8B8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF6AF8F0()
{
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF6AF940()
{
  return sub_1DF6AE280(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1DF6AF94C(unsigned char *a1)
{
  sub_1DF6AE964(a1, v1);
}

uint64_t sub_1DF6AF954()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DF6AF994()
{
  return sub_1DF6AE9CC(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1DF6AF9A0(void *a1)
{
  return sub_1DF6AEAF0(a1);
}

uint64_t sub_1DF6AF9A8()
{
  return sub_1DF6AED8C((void *)(v0 + 16));
}

uint64_t sub_1DF6AF9B0()
{
  return sub_1DF6AEB5C(v0);
}

id sub_1DF6AF9B8()
{
  return sub_1DF6AEC28((void *)(v0 + 16));
}

unsigned char *storeEnumTagSinglePayload for MainTabOrdering(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF6AFA8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MainTabOrdering()
{
  return &type metadata for MainTabOrdering;
}

unint64_t sub_1DF6AFAC8()
{
  unint64_t result = qword_1EAC2F7E8;
  if (!qword_1EAC2F7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F7E8);
  }
  return result;
}

uint64_t sub_1DF6AFB1C()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DF6AFB7C()
{
  id v1 = objc_msgSend(*v0, sel_actionIdentifier);
  uint64_t v2 = sub_1DFDFDD20();

  return v2;
}

uint64_t sub_1DF6AFBD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DF6AFBDC(void *a1)
{
  sub_1DEDE0964();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[3] = sub_1DF6AFD34();
  void v10[4] = sub_1DF6AFD74();
  v10[0] = a1;
  id v7 = a1;
  sub_1DFDECF60();
  sub_1DF6AFDCC((uint64_t)v10);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAD260], v3);
  sub_1DEAE9120(0, (unint64_t *)&qword_1EAC23F38, (uint64_t (*)(uint64_t))sub_1DEDE0964, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

unint64_t sub_1DF6AFD34()
{
  unint64_t result = qword_1EBAF6E08;
  if (!qword_1EBAF6E08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAF6E08);
  }
  return result;
}

unint64_t sub_1DF6AFD74()
{
  unint64_t result = qword_1EAC2F7F0;
  if (!qword_1EAC2F7F0)
  {
    sub_1DF6AFD34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F7F0);
  }
  return result;
}

uint64_t sub_1DF6AFDCC(uint64_t a1)
{
  sub_1DEAE7B00(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF6AFE28(uint64_t a1)
{
  sub_1DF6B1A8C();
  uint64_t v105 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  double v104 = &v79[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  CGFloat v92 = &v79[-v6];
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = &v79[-v8];
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  double v91 = &v79[-v11];
  MEMORY[0x1F4188790](v10);
  id v103 = &v79[-v12];
  sub_1DF6B1AF4();
  uint64_t v90 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  double v102 = (uint64_t *)&v79[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v89 = &v79[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v88 = &v79[-v18];
  uint64_t v87 = sub_1DFDEB7C0();
  uint64_t v19 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v21 = &v79[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (!v22) {
    return v23;
  }
  uint64_t v107 = MEMORY[0x1E4FBC860];
  sub_1DEDF8C3C(0, v22, 0);
  uint64_t result = sub_1DEC5AFEC(a1);
  unint64_t v26 = result;
  uint64_t v27 = 0;
  uint64_t v28 = a1 + 64;
  uint64_t v82 = v19 + 32;
  char v29 = *(unsigned char *)(a1 + 32);
  uint64_t v93 = a1 + 80;
  uint64_t v86 = a1;
  uint64_t v101 = v9;
  uint64_t v85 = v19;
  uint64_t v84 = v21;
  int64_t v83 = v22;
  uint64_t v80 = v25;
  uint64_t v81 = a1 + 64;
  while ((v26 & 0x8000000000000000) == 0 && (uint64_t)v26 < 1 << v29)
  {
    if ((*(void *)(v28 + 8 * (v26 >> 6)) & (1 << v26)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(a1 + 36) != v25) {
      goto LABEL_30;
    }
    uint64_t v95 = 1 << v26;
    unint64_t v96 = v26 >> 6;
    uint64_t v94 = v27;
    uint64_t v30 = v90;
    uint64_t v31 = v88;
    uint64_t v32 = &v88[*(int *)(v90 + 48)];
    uint64_t v33 = *(void *)(a1 + 48);
    uint64_t v34 = *(void *)(a1 + 56);
    uint64_t v35 = (uint64_t *)(v33 + 16 * v26);
    uint64_t v37 = *v35;
    uint64_t v36 = v35[1];
    uint64_t v38 = sub_1DFDF82B0();
    uint64_t v100 = *(void *)(v38 - 8);
    uint64_t v39 = *(void *)(v100 + 72);
    unint64_t v98 = v26;
    uint64_t v40 = v34 + v39 * v26;
    uint64_t v41 = *(void (**)(void))(v100 + 16);
    ((void (*)(unsigned char *, uint64_t, uint64_t))v41)(v32, v40, v38);
    *uint64_t v31 = v37;
    v31[1] = v36;
    uint64_t v42 = (uint64_t)v89;
    *unint64_t v89 = v37;
    *(void *)(v42 + 8) = v36;
    uint64_t v43 = v30;
    ((void (*)(uint64_t, unsigned char *, uint64_t))v41)(v42 + *(int *)(v30 + 48), v32, v38);
    uint64_t v44 = v102;
    sub_1DF6B1B60(v42, (uint64_t)v102);
    swift_bridgeObjectRetain_n();
    sub_1DEA2D0B8((uint64_t)v31, (uint64_t (*)(void))sub_1DF6B1AF4);
    uint64_t v45 = *v44;
    uint64_t v46 = v44[1];
    id v47 = (char *)v44 + *(int *)(v43 + 48);
    uint64_t v48 = v105;
    uint64_t v49 = *(int *)(v105 + 48);
    uint64_t v50 = v103;
    uint64_t v51 = (char *)v103 + v49;
    *id v103 = v45;
    v50[1] = v46;
    ((void (*)(char *, char *, uint64_t))v41)((char *)v50 + v49, v47, v38);
    uint64_t v52 = *(int *)(v48 + 48);
    uint64_t v53 = v91;
    uint64_t v54 = (char *)v91 + v52;
    *double v91 = v45;
    v53[1] = v46;
    ((void (*)(char *, char *, uint64_t))v41)((char *)v53 + v52, v51, v38);
    uint64_t v56 = v100;
    uint64_t v55 = v101;
    uint64_t v57 = (char *)v101 + *(int *)(v48 + 48);
    void *v101 = v45;
    v55[1] = v46;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v57, v54, v38);
    uint64_t v58 = *(int *)(v48 + 48);
    long long v59 = v92;
    *CGFloat v92 = v45;
    v59[1] = v46;
    double v97 = (char *)v59 + v58;
    v41();
    uint64_t v60 = *(int *)(v48 + 48);
    uint64_t v61 = v104;
    uint64_t v62 = (char *)v104 + v60;
    uint64_t v106 = v45;
    void *v104 = v45;
    v61[1] = v46;
    uint64_t v99 = v41;
    ((void (*)(char *, char *, uint64_t))v41)((char *)v61 + v60, v57, v38);
    swift_bridgeObjectRetain_n();
    uint64_t v63 = sub_1DFDF8290();
    uint64_t v64 = *(uint64_t (**)(char *, uint64_t))(v56 + 8);
    uint64_t result = v64(v62, v38);
    if (v63 < (uint64_t)0xFFFFFFFF80000000) {
      goto LABEL_31;
    }
    if (v63 > 0x7FFFFFFF) {
      goto LABEL_32;
    }
    uint64_t v65 = v104;
    uint64_t v66 = (char *)v104 + *(int *)(v105 + 48);
    void *v104 = v106;
    v65[1] = v46;
    ((void (*)(char *, char *, uint64_t))v99)(v66, v57, v38);
    swift_bridgeObjectRelease();
    uint64_t v67 = sub_1DFDF82A0();
    uint64_t result = v64(v66, v38);
    if (v67 < (uint64_t)0xFFFFFFFF80000000) {
      goto LABEL_33;
    }
    if (v67 > 0x7FFFFFFF) {
      goto LABEL_34;
    }
    id v68 = v84;
    sub_1DFDEB7B0();
    sub_1DEA2D0B8((uint64_t)v101, (uint64_t (*)(void))sub_1DF6B1A8C);
    v64(v97, v38);
    sub_1DEA2D0B8((uint64_t)v103, (uint64_t (*)(void))sub_1DF6B1A8C);
    sub_1DEA2D0B8((uint64_t)v102, (uint64_t (*)(void))sub_1DF6B1AF4);
    uint64_t v23 = v107;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DEDF8C3C(0, *(void *)(v23 + 16) + 1, 1);
      uint64_t v23 = v107;
    }
    int64_t v69 = v83;
    uint64_t v70 = v98;
    unint64_t v72 = *(void *)(v23 + 16);
    unint64_t v71 = *(void *)(v23 + 24);
    if (v72 >= v71 >> 1)
    {
      sub_1DEDF8C3C(v71 > 1, v72 + 1, 1);
      uint64_t v23 = v107;
    }
    *(void *)(v23 + 16) = v72 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, unsigned char *, uint64_t))(v85 + 32))(v23+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v72, v68, v87);
    uint64_t v107 = v23;
    a1 = v86;
    char v29 = *(unsigned char *)(v86 + 32);
    unint64_t v26 = 1 << v29;
    if (v70 >= 1 << v29) {
      goto LABEL_35;
    }
    uint64_t v28 = v81;
    unint64_t v73 = v96;
    uint64_t v74 = *(void *)(v81 + 8 * v96);
    if ((v74 & v95) == 0) {
      goto LABEL_36;
    }
    LODWORD(v25) = v80;
    if (*(_DWORD *)(v86 + 36) != v80) {
      goto LABEL_37;
    }
    unint64_t v75 = v74 & (-2 << (v70 & 0x3F));
    if (v75)
    {
      unint64_t v26 = __clz(__rbit64(v75)) | v70 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v76 = v96 + 1;
      unint64_t v77 = (v26 + 63) >> 6;
      if (v96 + 1 < v77)
      {
        unint64_t v78 = *(void *)(v81 + 8 * v76);
        if (v78)
        {
LABEL_26:
          unint64_t v26 = __clz(__rbit64(v78)) + (v76 << 6);
        }
        else
        {
          while (v77 - 2 != v73)
          {
            unint64_t v78 = *(void *)(v93 + 8 * v73++);
            if (v78)
            {
              unint64_t v76 = v73 + 1;
              goto LABEL_26;
            }
          }
        }
      }
    }
    uint64_t v27 = v94 + 1;
    if (v94 + 1 == v69) {
      return v23;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

void sub_1DF6B05E8()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    _s11MyHeadlinesCMa();
    sub_1DFDEE090();
    swift_retain();
    unint64_t v0 = (void *)sub_1DFDEDCE0();
    type metadata accessor for TodayFeedPoolTracker();
    sub_1DFDEDE20();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1DF6B06E8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v1;
    swift_retain();
    swift_retain();
    sub_1DFDE88F0();
    swift_release();
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    uint64_t v6 = swift_allocObject();
    swift_weakInit();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    swift_retain();
    sub_1DFDEDBA0();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1DF6B0864()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    unint64_t v0 = (void *)sub_1DFDEDCE0();
    type metadata accessor for TodayFeedPoolTracker();
    sub_1DFDEDE20();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1DF6B0928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DFDF82D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  sub_1DFDE88F0();
  return swift_release();
}

id *sub_1DF6B0A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a3;
  uint64_t v3 = sub_1DFDF82D0();
  uint64_t v43 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v42 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDEB7A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDEC400();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1DFDEB0F0();
  uint64_t v40 = *(id **)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = (id *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v35 = v3;
    uint64_t v36 = v8;
    uint64_t v37 = v6;
    uint64_t v38 = v5;
    unint64_t v39 = (unint64_t)result + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_feedConfigData;
    sub_1DEAB985C(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
    uint64_t v16 = v15;
    uint64_t v17 = sub_1DFDE8410();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
    uint64_t v20 = (v19 + 32) & ~v19;
    uint64_t v21 = v20 + *(void *)(v18 + 72);
    uint64_t v34 = v16;
    uint64_t v47 = v19 | 7;
    uint64_t v48 = v21;
    uint64_t v22 = swift_allocObject();
    long long v44 = xmmword_1DFE0B250;
    *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
    uint64_t v49 = v20;
    uint64_t v23 = *(void (**)(void))(v18 + 104);
    unsigned int v46 = *MEMORY[0x1E4F4AA18];
    uint64_t v45 = (void (*)(uint64_t, void, uint64_t))v23;
    v23(v22 + v20);
    sub_1DFDEA820();
    sub_1DF6B1BC4(&qword_1EBAD2270, MEMORY[0x1E4F7B758]);
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    uint64_t result = (id *)objc_msgSend(v14[3], sel_absoluteTimeInterval);
    if ((~*(void *)&v24 & 0x7FF0000000000000) != 0)
    {
      if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          sub_1DFDFEF10();
          sub_1DFDEB0E0();
          uint64_t v25 = swift_allocObject();
          *(_OWORD *)(v25 + 16) = v44;
          v45(v25 + v49, v46, v17);
          sub_1DF6B1BC4(&qword_1EBAD22F0, MEMORY[0x1E4F7BE38]);
          unint64_t v39 = 0x80000001DFF010A0;
          sub_1DFDE8390();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v40[1])(v12, v10);
          unint64_t v26 = v42;
          uint64_t v27 = v43;
          uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
          uint64_t v40 = v14;
          uint64_t v29 = v35;
          v28(v42, v41, v35);
          uint64_t v30 = sub_1DFDF82C0();
          sub_1DF6AFE28(v30);
          swift_bridgeObjectRelease();
          uint64_t v31 = v36;
          sub_1DFDEB790();
          (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v29);
          uint64_t v32 = swift_allocObject();
          *(_OWORD *)(v32 + 16) = v44;
          v45(v32 + v49, v46, v17);
          sub_1DF6B1BC4(&qword_1EBAD2350, MEMORY[0x1E4F7C3D8]);
          uint64_t v33 = v38;
          sub_1DFDE8390();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v33);
          sub_1DFDEB980();
          sub_1DF6B1BC4((unint64_t *)&unk_1EBAD2360, MEMORY[0x1E4F7C580]);
          memset(v50, 0, sizeof(v50));
          sub_1DFDE83B0();
          swift_release();
          return (id *)sub_1DEA2D0B8((uint64_t)v50, (uint64_t (*)(void))sub_1DE9E4C7C);
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

id sub_1DF6B1170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  sub_1DEAB985C(0, (unint64_t *)&unk_1EBACBE40, MEMORY[0x1E4F7C978], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = (uint64_t)v42 - v6;
  uint64_t v7 = sub_1DFDEBE80();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  MEMORY[0x1F4188790](v7);
  v42[0] = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDEC400();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1DFDEB0F0();
  uint64_t v44 = *(void *)(v10 - 8);
  unint64_t v45 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAB985C(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v14 = v13;
  uint64_t v15 = sub_1DFDE8410();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (v18 + 32) & ~v18;
  uint64_t v53 = v14;
  uint64_t v50 = v19 + v17;
  uint64_t v56 = v18 | 7;
  uint64_t v20 = swift_allocObject();
  long long v57 = xmmword_1DFE0B250;
  *(_OWORD *)(v20 + 16) = xmmword_1DFE0B250;
  uint64_t v52 = v19;
  uint64_t v22 = *(void (**)(void))(v16 + 104);
  uint64_t v21 = v16 + 104;
  unsigned int v55 = *MEMORY[0x1E4F4AA18];
  uint64_t v43 = v15;
  uint64_t v51 = (void (*)(uint64_t, void, uint64_t))v22;
  v22(v20 + v19);
  sub_1DFDEA820();
  sub_1DF6B1BC4(&qword_1EBAD2270, MEMORY[0x1E4F7B758]);
  v42[1] = a1;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  id result = objc_msgSend(*(id *)(a2 + 24), sel_absoluteTimeInterval);
  if ((~*(void *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  sub_1DFDFEF10();
  sub_1DFDEB0E0();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v57;
  uint64_t v26 = v52;
  uint64_t v54 = v21;
  uint64_t v27 = v43;
  uint64_t v28 = v12;
  uint64_t v29 = v51;
  v51(v25 + v52, v55, v43);
  sub_1DF6B1BC4(&qword_1EBAD22F0, MEMORY[0x1E4F7BE38]);
  unint64_t v30 = v45;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, unint64_t))(v44 + 8))(v28, v30);
  uint64_t v31 = v47;
  unint64_t v45 = v47 + OBJC_IVAR____TtCC7NewsUI213TodayFeedPool11MyHeadlines_analyticsData;
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v57;
  uint64_t v33 = v32 + v26;
  uint64_t v34 = v27;
  uint64_t v35 = v55;
  v29(v33, v55, v34);
  sub_1DFDEBF40();
  sub_1DF6B1BC4(&qword_1EBAD23B0, MEMORY[0x1E4F7C9C8]);
  unint64_t v45 = 0x80000001DFF010A0;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  uint64_t v36 = v31 + OBJC_IVAR____TtCC7NewsUI213TodayFeedPool11MyHeadlines_articleScoreSummaryDataList;
  uint64_t v37 = v46;
  sub_1DF083E78(v36, v46);
  uint64_t v39 = v48;
  uint64_t v38 = v49;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v37, 1, v49) == 1)
  {
    sub_1DF083FBC(v37);
  }
  else
  {
    uint64_t v40 = v42[0];
    (*(void (**)(void, uint64_t, uint64_t))(v39 + 32))(v42[0], v37, v38);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = v57;
    v51(v41 + v52, v35, v34);
    sub_1DF6B1BC4(&qword_1EBACB898, MEMORY[0x1E4F7C978]);
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
  }
  sub_1DFDEB980();
  sub_1DF6B1BC4((unint64_t *)&unk_1EBAD2360, MEMORY[0x1E4F7C580]);
  memset(v58, 0, 32);
  sub_1DFDE83B0();
  return (id)sub_1DEA2D0B8((uint64_t)v58, (uint64_t (*)(void))sub_1DE9E4C7C);
}

uint64_t sub_1DF6B18C4(uint64_t *a1)
{
  return sub_1DF6B06E8(a1);
}

id sub_1DF6B18E4(uint64_t a1)
{
  return sub_1DF6B1170(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DF6B18EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1DF6B1928()
{
}

uint64_t sub_1DF6B1930(uint64_t a1, uint64_t a2)
{
  return sub_1DF6B0928(a1, a2, v2);
}

uint64_t sub_1DF6B194C()
{
  uint64_t v1 = sub_1DFDF82D0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

id *sub_1DF6B1A18(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1DFDF82D0() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DF6B0A88(a1, v4, v5);
}

void sub_1DF6B1A8C()
{
  if (!qword_1EBAEA140)
  {
    sub_1DFDF82B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAEA140);
    }
  }
}

void sub_1DF6B1AF4()
{
  if (!qword_1EBAEA120)
  {
    sub_1DFDF82B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAEA120);
    }
  }
}

uint64_t sub_1DF6B1B60(uint64_t a1, uint64_t a2)
{
  sub_1DF6B1AF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF6B1BC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for AudioPlaylistFeedStyler()
{
  return self;
}

unint64_t sub_1DF6B1C34()
{
  return 0xD000000000000019;
}

uint64_t sub_1DF6B1C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF6B248C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DF6B1C7C(uint64_t a1)
{
  unint64_t v2 = sub_1DF6B1E3C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF6B1CB8(uint64_t a1)
{
  unint64_t v2 = sub_1DF6B1E3C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EngagementStoredSettingsEntry.encode(to:)(void *a1)
{
  sub_1DF6B2014(0, &qword_1EAC2F7F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6B1E3C();
  sub_1DFE001A0();
  sub_1DFDFFE50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DF6B1E3C()
{
  unint64_t result = qword_1EAC2F800;
  if (!qword_1EAC2F800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F800);
  }
  return result;
}

uint64_t EngagementStoredSettingsEntry.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DF6B2014(0, &qword_1EAC2F808, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6B1E3C();
  sub_1DFE00190();
  if (!v2)
  {
    char v10 = sub_1DFDFFD60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DF6B2014(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF6B1E3C();
    unint64_t v7 = a3(a1, &type metadata for EngagementStoredSettingsEntry.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF6B2078@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return EngagementStoredSettingsEntry.init(from:)(a1, a2);
}

uint64_t sub_1DF6B2090(void *a1)
{
  sub_1DF6B2014(0, &qword_1EAC2F7F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6B1E3C();
  sub_1DFE001A0();
  sub_1DFDFFE50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t getEnumTagSinglePayload for EngagementStoredSettingsEntry(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for EngagementStoredSettingsEntry()
{
  return &type metadata for EngagementStoredSettingsEntry;
}

unsigned char *storeEnumTagSinglePayload for EngagementStoredSettingsEntry.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF6B234CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementStoredSettingsEntry.CodingKeys()
{
  return &type metadata for EngagementStoredSettingsEntry.CodingKeys;
}

unint64_t sub_1DF6B2388()
{
  unint64_t result = qword_1EAC2F810;
  if (!qword_1EAC2F810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F810);
  }
  return result;
}

unint64_t sub_1DF6B23E0()
{
  unint64_t result = qword_1EAC2F818;
  if (!qword_1EAC2F818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F818);
  }
  return result;
}

unint64_t sub_1DF6B2438()
{
  unint64_t result = qword_1EAC2F820;
  if (!qword_1EAC2F820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F820);
  }
  return result;
}

uint64_t sub_1DF6B248C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001DFEC7400)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t type metadata accessor for MyMagazinesSectionHeaderView()
{
  return self;
}

void sub_1DF6B26E4()
{
  sub_1DF6B2770(&qword_1EAC297A8);
  JUMPOUT(0x1E01E4080);
}

uint64_t sub_1DF6B273C()
{
  return sub_1DF6B2770(&qword_1EAC2F830);
}

uint64_t sub_1DF6B2770(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MyMagazinesSectionHeaderView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF6B27B0(uint64_t a1)
{
  uint64_t v2 = sub_1DFDF71B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  int v8 = (char *)&v21 - v7;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v22 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  uint64_t v25 = v3 + 32;
  uint64_t v26 = v3 + 16;
  int64_t v23 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v24 = v3 + 8;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v23) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v22 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v23) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v22 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v23) {
          goto LABEL_23;
        }
        unint64_t v19 = *(void *)(v22 + 8 * v14);
        if (!v19)
        {
          int64_t v14 = v18 + 3;
          if (v18 + 3 >= v23) {
            goto LABEL_23;
          }
          unint64_t v19 = *(void *)(v22 + 8 * v14);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(void *)(a1 + 48) + *(void *)(v3 + 72) * v16, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    uint64_t v17 = sub_1DFDF71A0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    uint64_t result = sub_1DF3DDB34(v17);
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v23)
  {
LABEL_23:
    swift_release();
    return v27;
  }
  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v23) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v22 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DF6B2A80(void *a1, unint64_t a2)
{
  sub_1DF6B4E64(0, &qword_1EBAE9CB8, MEMORY[0x1E4F80A00], sub_1DF6B4D14, MEMORY[0x1E4F80840]);
  uint64_t v48 = v4;
  uint64_t v50 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)&v44 - v5;
  uint64_t v6 = sub_1DFDFAB80();
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v44 - v10;
  sub_1DF6B4D48();
  uint64_t v46 = v11;
  uint64_t v49 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v45 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  MEMORY[0x1F4188790](matched);
  unint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6B51A8(0, &qword_1EBAEACC0, MEMORY[0x1E4FBBDE0]);
  uint64_t v55 = *(void *)(v16 - 8);
  uint64_t v56 = v16;
  MEMORY[0x1F4188790](v16);
  int64_t v18 = (char *)&v44 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6B4FFC();
  unint64_t v19 = v18;
  sub_1DFE001A0();
  switch(a2 >> 61)
  {
    case 1uLL:
      uint64_t v24 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v57) = 1;
      char v58 = 0;
      sub_1DF6B520C();
      swift_retain();
      uint64_t v25 = v56;
      uint64_t v26 = v54;
      sub_1DFDFFE80();
      if (!v26)
      {
        uint64_t v57 = v24;
        char v58 = 1;
        sub_1DF6B52E8();
        sub_1DFDFFE80();
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v25);
      goto LABEL_13;
    case 2uLL:
      uint64_t v27 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v57) = 2;
      char v58 = 0;
      sub_1DF6B520C();
      swift_bridgeObjectRetain();
      uint64_t v28 = v56;
      uint64_t v29 = v54;
      sub_1DFDFFE80();
      if (v29)
      {
        (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v28);
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v57 = v27;
        sub_1DF6B4E64(0, &qword_1EBAEA418, MEMORY[0x1E4F7F358], sub_1DF6B4500, MEMORY[0x1E4FBB510]);
        sub_1DF6B4F18(&qword_1EBAEA428, (void (*)(void))sub_1DF6B4EE4);
        sub_1DF6B4F18(&qword_1EBAEA420, (void (*)(void))sub_1DF6B4FC8);
        uint64_t v39 = v45;
        sub_1DFDF9B10();
        LOBYTE(v57) = 1;
        sub_1DF6B533C(&qword_1EAC2F858, (void (*)(uint64_t))sub_1DF6B4D48);
        uint64_t v40 = v46;
        sub_1DFDFFE80();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v40);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v19, v28);
      }
      break;
    case 3uLL:
      uint64_t v30 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v57) = 3;
      char v58 = 0;
      sub_1DF6B520C();
      swift_retain();
      uint64_t v31 = v56;
      uint64_t v32 = v54;
      sub_1DFDFFE80();
      if (!v32)
      {
        uint64_t v57 = v30;
        char v58 = 1;
        sub_1DEAD3ADC();
        sub_1DFDFFE80();
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v31);
LABEL_13:
      uint64_t result = swift_release();
      break;
    case 4uLL:
      uint64_t v33 = swift_projectBox();
      uint64_t v34 = v51;
      uint64_t v35 = v52;
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
      uint64_t v37 = v53;
      v36(v51, v33, v53);
      LOBYTE(v57) = 4;
      char v58 = 0;
      sub_1DF6B520C();
      uint64_t v38 = v54;
      sub_1DFDFFE80();
      if (v38)
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v37);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v18, v56);
      }
      else
      {
        v36(v9, (uint64_t)v34, v37);
        sub_1DF6B4D14();
        uint64_t v41 = v47;
        sub_1DFDFA550();
        LOBYTE(v57) = 1;
        sub_1DF6B5260(&qword_1EAC2F850);
        uint64_t v42 = v56;
        uint64_t v43 = v48;
        sub_1DFDFFE80();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v43);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v37);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v19, v42);
      }
      break;
    default:
      uint64_t v20 = swift_projectBox();
      sub_1DF6B4534(v20, (uint64_t)v15);
      LOBYTE(v57) = 0;
      char v58 = 0;
      sub_1DF6B520C();
      uint64_t v21 = v56;
      uint64_t v22 = v54;
      sub_1DFDFFE80();
      if (!v22)
      {
        LOBYTE(v57) = 1;
        sub_1DF6B533C(&qword_1EBAE0730, (void (*)(uint64_t))type metadata accessor for SportsScoreSortingMatchFilter);
        sub_1DFDFFE80();
      }
      sub_1DF6B4598((uint64_t)v15);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v19, v21);
      break;
  }
  return result;
}

uint64_t sub_1DF6B3354(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1DFDFAB80();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  uint64_t v12 = MEMORY[0x1F4188790](matched - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v33 - v15;
  switch(a1 >> 61)
  {
    case 1uLL:
      if (a2 >> 61 != 1) {
        goto LABEL_15;
      }
      uint64_t v20 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      char v22 = sub_1DF6B3354(v20, v21);
      goto LABEL_12;
    case 2uLL:
      if (a2 >> 61 != 2) {
        goto LABEL_15;
      }
      uint64_t v23 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      return sub_1DF8BE5D4(v23, v24);
    case 3uLL:
      if (a2 >> 61 != 3) {
        goto LABEL_15;
      }
      uint64_t v26 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v27 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      char v22 = sub_1DF8490F8(v26, v27);
LABEL_12:
      char v28 = v22;
      swift_release();
      swift_release();
      return v28 & 1;
    case 4uLL:
      if (a2 >> 61 != 4) {
        goto LABEL_15;
      }
      uint64_t v29 = swift_projectBox();
      uint64_t v30 = swift_projectBox();
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v31(v10, v29, v4);
      v31(v8, v30, v4);
      char v19 = sub_1DFDFAB60();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
      v32(v8, v4);
      v32(v10, v4);
      return v19 & 1;
    default:
      if (a2 >> 61)
      {
LABEL_15:
        char v19 = 0;
      }
      else
      {
        uint64_t v17 = swift_projectBox();
        uint64_t v18 = swift_projectBox();
        sub_1DF6B4534(v17, (uint64_t)v16);
        sub_1DF6B4534(v18, (uint64_t)v14);
        char v19 = sub_1DEC42918((uint64_t)v16, (uint64_t)v14);
        sub_1DF6B4598((uint64_t)v14);
        sub_1DF6B4598((uint64_t)v16);
      }
      return v19 & 1;
  }
}

uint64_t sub_1DF6B36B4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF6B3714@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF6B3778()
{
  return sub_1DFDFE1D0();
}

uint64_t sub_1DF6B37D8()
{
  return sub_1DFDFE180();
}

uint64_t sub_1DF6B3828(uint64_t a1)
{
  unint64_t v2 = sub_1DF6B4FFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF6B3864(uint64_t a1)
{
  unint64_t v2 = sub_1DF6B4FFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF6B38A0(unsigned __int8 *a1, char *a2)
{
  return sub_1DF2A1558(*a1, *a2);
}

uint64_t sub_1DF6B38AC()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF6B3998()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6B3A6C()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF6B3B54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF6B5740();
  *a1 = result;
  return result;
}

void sub_1DF6B3B84(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x686374616DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7630702;
      goto LABEL_3;
    case 2:
      *a1 = 0x6557664F73796164;
      a1[1] = 0xEA00000000006B65;
      break;
    case 3:
      *a1 = 0x7265746C6966;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x726F7463656C6573;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DF6B3C34()
{
  return sub_1DFDFE1D0();
}

uint64_t sub_1DF6B3C94()
{
  return sub_1DFDFE180();
}

unint64_t sub_1DF6B3CE4@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1DF6B46B0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DF6B3D10(void *a1)
{
  return sub_1DF6B2A80(a1, *v1);
}

uint64_t sub_1DF6B3D2C(unint64_t *a1, unint64_t *a2)
{
  return sub_1DF6B3354(*a1, *a2);
}

uint64_t sub_1DF6B3D38(unint64_t a1)
{
  uint64_t v2 = sub_1DFDFAB80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  MEMORY[0x1F4188790](matched - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1 >> 61)
  {
    case 1uLL:
      uint64_t v11 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = 678719342;
      unint64_t v16 = 0xE400000000000000;
      swift_retain();
      sub_1DF6B3D38(v11);
      goto LABEL_6;
    case 2uLL:
      uint64_t v15 = 0x6557664F73796164;
      unint64_t v16 = 0xEB00000000286B65;
      sub_1DFDF71B0();
      sub_1DF6B4500();
      sub_1DFDFE5E0();
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      sub_1DFDFDE90();
      goto LABEL_7;
    case 3uLL:
      uint64_t v12 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = 0x287265746C6966;
      unint64_t v16 = 0xE700000000000000;
      swift_retain();
      sub_1DF849F40(v12);
LABEL_6:
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      sub_1DFDFDE90();
      swift_release();
LABEL_7:
      uint64_t v10 = v15;
      break;
    case 4uLL:
      uint64_t v13 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v13, v2);
      uint64_t v15 = 0x726F7463656C6573;
      unint64_t v16 = 0xE900000000000028;
      sub_1DF6B533C(&qword_1EAC2F838, MEMORY[0x1E4F80A00]);
      sub_1DFDFFEE0();
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      sub_1DFDFDE90();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    default:
      uint64_t v9 = swift_projectBox();
      sub_1DF6B4534(v9, (uint64_t)v8);
      uint64_t v15 = 0x28686374616DLL;
      unint64_t v16 = 0xE600000000000000;
      sub_1DEC41664();
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      sub_1DFDFDE90();
      uint64_t v10 = v15;
      sub_1DF6B4598((uint64_t)v8);
      break;
  }
  return v10;
}

uint64_t sub_1DF6B408C()
{
  return sub_1DF6B3D38(*v0);
}

uint64_t sub_1DF6B4094(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  unint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v5 = sub_1DFDFAB80();
  uint64_t v36 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDE7840();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDE7860();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  MEMORY[0x1F4188790](matched - 8);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1 >> 61)
  {
    case 1uLL:
      uint64_t v23 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      char v24 = sub_1DF6B4094(v23, v38, v39, v37);
      swift_release();
      char v22 = v24 ^ 1;
      break;
    case 2uLL:
      uint64_t v25 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1DFDE7800();
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F27C68], v8);
      uint64_t v26 = sub_1DFDE7850();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      uint64_t v27 = sub_1DF6B27B0(v25);
      uint64_t v28 = sub_1DEDFF844(v27);
      swift_bridgeObjectRelease();
      char v22 = sub_1DE977B10(v26, v28);
      swift_bridgeObjectRelease();
      break;
    case 3uLL:
      uint64_t v29 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      unint64_t v30 = sub_1DF847ECC(v38, v39, v29);
      if (v30 >> 62) {
        uint64_t v31 = sub_1DFDFFBE0();
      }
      else {
        uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      swift_release();
      char v22 = v31 != 0;
      break;
    case 4uLL:
      uint64_t v32 = swift_projectBox();
      uint64_t v33 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v7, v32, v5);
      char v22 = sub_1DFDFAB70();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v5);
      break;
    default:
      uint64_t v19 = swift_projectBox();
      sub_1DF6B4534(v19, (uint64_t)v18);
      unint64_t v20 = (unint64_t)sub_1DEC43A58((uint64_t)v18, v38, v39);
      if (v20 >> 62) {
        uint64_t v21 = sub_1DFDFFBE0();
      }
      else {
        uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      char v22 = v21 != 0;
      sub_1DF6B4598((uint64_t)v18);
      break;
  }
  return v22 & 1;
}

uint64_t sub_1DF6B4500()
{
  return sub_1DF6B533C(&qword_1EBAB9ED0, MEMORY[0x1E4F7F358]);
}

uint64_t sub_1DF6B4534(uint64_t a1, uint64_t a2)
{
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(matched - 8) + 16))(a2, a1, matched);
  return a2;
}

uint64_t sub_1DF6B4598(uint64_t a1)
{
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(matched - 8) + 8))(a1, matched);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioHistoryFeedPrewarmResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AudioHistoryFeedPrewarmResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(void *)unint64_t result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsScoreSortingCondition()
{
  return &type metadata for SportsScoreSortingCondition;
}

unint64_t sub_1DF6B46B0(void *a1)
{
  sub_1DF6B4E64(0, &qword_1EBAE9CB8, MEMORY[0x1E4F80A00], sub_1DF6B4D14, MEMORY[0x1E4F80840]);
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v42 = (char *)&v35 - v3;
  sub_1DF6B4D48();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for SportsScoreSortingMatchFilter(0);
  MEMORY[0x1F4188790](matched);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6B51A8(0, &qword_1EBAEAA10, MEMORY[0x1E4FBBDC0]);
  uint64_t v12 = v11;
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v35 - v13;
  unint64_t v15 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6B4FFC();
  uint64_t v16 = (uint64_t)v45;
  sub_1DFE00190();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v36 = v10;
    uint64_t v37 = matched;
    unint64_t v38 = v7;
    uint64_t v17 = v42;
    uint64_t v18 = v43;
    uint64_t v19 = v44;
    uint64_t v20 = v41;
    unint64_t v45 = a1;
    char v47 = 0;
    sub_1DF6B5050();
    sub_1DFDFFD90();
    uint64_t v21 = v12;
    uint64_t v23 = v40;
    switch((char)v46)
    {
      case 1:
        char v47 = 1;
        sub_1DF6B5118();
        sub_1DFDFFD90();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v21);
        uint64_t v26 = v46;
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v26;
        unint64_t v15 = v27 | 0x2000000000000000;
        break;
      case 2:
        LOBYTE(v46) = 1;
        sub_1DF6B533C(&qword_1EAC2F848, (void (*)(uint64_t))sub_1DF6B4D48);
        uint64_t v29 = v38;
        uint64_t v28 = v39;
        sub_1DFDFFD90();
        uint64_t v30 = swift_allocObject();
        sub_1DFDF9B20();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v28);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v21);
        unint64_t v15 = v30 | 0x4000000000000000;
        break;
      case 3:
        char v47 = 1;
        sub_1DEAD3A34();
        sub_1DFDFFD90();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v21);
        uint64_t v31 = v46;
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = v31;
        unint64_t v15 = v32 | 0x6000000000000000;
        break;
      case 4:
        LOBYTE(v46) = 1;
        sub_1DF6B5260(&qword_1EAC2F840);
        sub_1DFDFFD90();
        sub_1DFDFAB80();
        uint64_t v33 = v19;
        uint64_t v34 = swift_allocBox();
        sub_1DFDFA560();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v33);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v21);
        unint64_t v15 = v34 | 0x8000000000000000;
        break;
      default:
        LOBYTE(v46) = 1;
        sub_1DF6B533C(&qword_1EBAE0738, (void (*)(uint64_t))type metadata accessor for SportsScoreSortingMatchFilter);
        uint64_t v24 = (uint64_t)v36;
        sub_1DFDFFD90();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v21);
        unint64_t v15 = swift_allocBox();
        sub_1DF01C01C(v24, v25);
        break;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  }
  return v15;
}

uint64_t sub_1DF6B4D14()
{
  return sub_1DF6B533C(&qword_1EBAF57F8, MEMORY[0x1E4F80A00]);
}

void sub_1DF6B4D48()
{
  if (!qword_1EBAF57E8)
  {
    sub_1DF6B4E64(255, &qword_1EBAEA418, MEMORY[0x1E4F7F358], sub_1DF6B4500, MEMORY[0x1E4FBB510]);
    sub_1DF6B4F18(&qword_1EBAEA428, (void (*)(void))sub_1DF6B4EE4);
    sub_1DF6B4F18(&qword_1EBAEA420, (void (*)(void))sub_1DF6B4FC8);
    unint64_t v0 = sub_1DFDF9B30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF57E8);
    }
  }
}

void sub_1DF6B4E64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1DF6B4EE4()
{
  return sub_1DF6B533C(&qword_1EBAB9ED8, MEMORY[0x1E4F7F358]);
}

uint64_t sub_1DF6B4F18(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DF6B4E64(255, &qword_1EBAEA418, MEMORY[0x1E4F7F358], sub_1DF6B4500, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF6B4FC8()
{
  return sub_1DF6B533C(&qword_1EBAB9EC8, MEMORY[0x1E4F7F358]);
}

unint64_t sub_1DF6B4FFC()
{
  unint64_t result = qword_1EBADDDA8;
  if (!qword_1EBADDDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADDDA8);
  }
  return result;
}

unint64_t sub_1DF6B5050()
{
  unint64_t result = qword_1EBADDDD0;
  if (!qword_1EBADDDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADDDD0);
  }
  return result;
}

uint64_t sub_1DF6B50A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF6B50E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1DF6B5118()
{
  unint64_t result = qword_1EBADDDE0;
  if (!qword_1EBADDDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADDDE0);
  }
  return result;
}

uint64_t sub_1DF6B516C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DF6B51A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF6B4FFC();
    unint64_t v7 = a3(a1, &type metadata for SportsScoreSortingCondition.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DF6B520C()
{
  unint64_t result = qword_1EBADDDC0;
  if (!qword_1EBADDDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADDDC0);
  }
  return result;
}

uint64_t sub_1DF6B5260(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DF6B4E64(255, &qword_1EBAE9CB8, MEMORY[0x1E4F80A00], sub_1DF6B4D14, MEMORY[0x1E4F80840]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF6B52E8()
{
  unint64_t result = qword_1EBADDDD8;
  if (!qword_1EBADDDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADDDD8);
  }
  return result;
}

uint64_t sub_1DF6B533C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsScoreSortingCondition.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF6B5450);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsScoreSortingCondition.CodingType()
{
  return &type metadata for SportsScoreSortingCondition.CodingType;
}

unsigned char *storeEnumTagSinglePayload for SportsScoreSortingCondition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF6B5554);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsScoreSortingCondition.CodingKeys()
{
  return &type metadata for SportsScoreSortingCondition.CodingKeys;
}

unint64_t sub_1DF6B5590()
{
  unint64_t result = qword_1EAC2F860;
  if (!qword_1EAC2F860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F860);
  }
  return result;
}

unint64_t sub_1DF6B55E8()
{
  unint64_t result = qword_1EAC2F868;
  if (!qword_1EAC2F868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F868);
  }
  return result;
}

unint64_t sub_1DF6B5640()
{
  unint64_t result = qword_1EBADDDB8;
  if (!qword_1EBADDDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADDDB8);
  }
  return result;
}

unint64_t sub_1DF6B5698()
{
  unint64_t result = qword_1EBADDDB0;
  if (!qword_1EBADDDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADDDB0);
  }
  return result;
}

unint64_t sub_1DF6B56EC()
{
  unint64_t result = qword_1EBADDDC8;
  if (!qword_1EBADDDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADDDC8);
  }
  return result;
}

uint64_t sub_1DF6B5740()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1DF6B578C()
{
  unint64_t result = qword_1EAC2F870;
  if (!qword_1EAC2F870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F870);
  }
  return result;
}

uint64_t SaveIntentArticleProvider.results()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1DF6B5800, 0, 0);
}

uint64_t sub_1DF6B5800()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  int v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  sub_1DF6B69D4(0, (unint64_t *)&unk_1EAC2F880, MEMORY[0x1E4F7D508], MEMORY[0x1E4FBB320]);
  *int v3 = v0;
  v3[1] = sub_1DF6B5930;
  return MEMORY[0x1F41880D8](v0 + 2, 0, 0, 0x2873746C75736572, 0xE900000000000029, sub_1DF6B5BC8, v2, v4);
}

uint64_t sub_1DF6B5930()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DF6B5A48, 0, 0);
}

uint64_t sub_1DF6B5A48()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1DF6B5A64(uint64_t a1, uint64_t a2)
{
  sub_1DF6B6824();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE94F204(a2, (uint64_t)v13);
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, v8, v5);
  sub_1DF60B71C(0, (uint64_t)sub_1DF6B694C, v10);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1DF6B5BC8(uint64_t a1)
{
  return sub_1DF6B5A64(a1, *(void *)(v1 + 16));
}

void sub_1DF6B5BD0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DF6B69D4(0, &qword_1EBAF3500, MEMORY[0x1E4F7D508], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  unint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v66 - v10;
  uint64_t v12 = sub_1DFDE8C60();
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  unint64_t v71 = (unint64_t)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v70 = (char *)&v66 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  MEMORY[0x1F4188790](v17);
  int64_t v69 = (char *)&v66 - v19;
  if ((a2 & 0x100) == 0)
  {
    if ((_BYTE)a2)
    {
      if (a2 != 1)
      {
        if (qword_1EAC1D508 != -1) {
          swift_once();
        }
        uint64_t v34 = sub_1DFDF01D0();
        __swift_project_value_buffer(v34, (uint64_t)qword_1EACDFED0);
        uint64_t v35 = sub_1DFDF01B0();
        os_log_type_t v36 = sub_1DFDFEA40();
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v37 = 0;
          _os_log_impl(&dword_1DE913000, v35, v36, "ArticleOptionsProvider could not fetch history. No Batch.", v37, 2u);
          MEMORY[0x1E01EFA10](v37, -1, -1);
        }

        unint64_t v73 = MEMORY[0x1E4FBC860];
        sub_1DF6B6824();
        goto LABEL_82;
      }
      uint64_t v66 = a3;
      unint64_t v73 = MEMORY[0x1E4FBC860];
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1DFDFFBE0();
        if (!v20) {
          goto LABEL_42;
        }
      }
      else
      {
        uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v20) {
          goto LABEL_42;
        }
      }
      if (v20 >= 1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          for (uint64_t i = 0; i != v20; ++i)
          {
            if (*(unsigned char *)(MEMORY[0x1E01EE240](i, a1) + OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState))
            {
              swift_unknownObjectRelease();
            }
            else
            {
              sub_1DFDFFA50();
              sub_1DFDFFA90();
              sub_1DFDFFAA0();
              sub_1DFDFFA60();
            }
          }
        }
        else
        {
          unint64_t v38 = (void *)(a1 + 32);
          uint64_t v39 = OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState;
          do
          {
            if ((*(unsigned char *)(*v38 + v39) & 1) == 0)
            {
              swift_retain();
              sub_1DFDFFA50();
              sub_1DFDFFA90();
              sub_1DFDFFAA0();
              sub_1DFDFFA60();
              uint64_t v39 = OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState;
            }
            ++v38;
            --v20;
          }
          while (v20);
        }
LABEL_42:
        sub_1DED93FEC((id)a1, 1, 0);
        unint64_t v42 = v73;
        if ((v73 & 0x8000000000000000) != 0 || (v73 & 0x4000000000000000) != 0)
        {
          swift_retain();
          uint64_t v43 = sub_1DFDFFBE0();
          if (v43)
          {
LABEL_45:
            if (v43 >= 1)
            {
              uint64_t v44 = 0;
              unint64_t v45 = v42 & 0xC000000000000001;
              uint64_t v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
              char v47 = (void (**)(char *, char *, uint64_t))(v72 + 32);
              unint64_t v48 = MEMORY[0x1E4FBC860];
              unint64_t v68 = v42 & 0xC000000000000001;
              int64_t v69 = (char *)v43;
              do
              {
                if (v45) {
                  MEMORY[0x1E01EE240](v44, v42);
                }
                else {
                  swift_retain();
                }
                swift_unknownObjectRetain();
                sub_1DFDE8C50();
                swift_release();
                if ((*v46)(v9, 1, v12) == 1)
                {
                  sub_1DF2EF8BC((uint64_t)v9);
                }
                else
                {
                  uint64_t v49 = *v47;
                  uint64_t v50 = v70;
                  (*v47)(v70, v9, v12);
                  v49((char *)v71, v50, v12);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    unint64_t v48 = sub_1DEE1B2BC(0, *(void *)(v48 + 16) + 1, 1, v48);
                  }
                  unint64_t v52 = *(void *)(v48 + 16);
                  unint64_t v51 = *(void *)(v48 + 24);
                  if (v52 >= v51 >> 1) {
                    unint64_t v48 = sub_1DEE1B2BC(v51 > 1, v52 + 1, 1, v48);
                  }
                  *(void *)(v48 + 16) = v52 + 1;
                  v49((char *)(v48+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v52), (char *)v71, v12);
                  unint64_t v45 = v68;
                  uint64_t v43 = (uint64_t)v69;
                }
                ++v44;
              }
              while (v43 != v44);
              goto LABEL_77;
            }
            goto LABEL_85;
          }
        }
        else
        {
          uint64_t v43 = *(void *)(v73 + 16);
          swift_retain();
          if (v43) {
            goto LABEL_45;
          }
        }
        unint64_t v48 = MEMORY[0x1E4FBC860];
LABEL_77:
        swift_release_n();
        unint64_t v73 = v48;
LABEL_81:
        sub_1DF6B6824();
LABEL_82:
        sub_1DFDFE450();
        return;
      }
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    unint64_t v73 = MEMORY[0x1E4FBC860];
    uint64_t v70 = v18;
    uint64_t v66 = a3;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1DFDFFBE0();
      if (!v32) {
        goto LABEL_59;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v32) {
        goto LABEL_59;
      }
    }
    if (v32 < 1) {
      goto LABEL_84;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v32; ++j)
      {
        if (*(unsigned char *)(MEMORY[0x1E01EE240](j, a1) + OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState))
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1DFDFFA50();
          sub_1DFDFFA90();
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
        }
      }
    }
    else
    {
      uint64_t v40 = (void *)(a1 + 32);
      uint64_t v41 = OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState;
      do
      {
        if ((*(unsigned char *)(*v40 + v41) & 1) == 0)
        {
          swift_retain();
          sub_1DFDFFA50();
          sub_1DFDFFA90();
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
          uint64_t v41 = OBJC_IVAR____TtC7NewsUI213HeadlineModel_savedState;
        }
        ++v40;
        --v32;
      }
      while (v32);
    }
LABEL_59:
    sub_1DED93FEC((id)a1, 0, 0);
    unint64_t v71 = v73;
    if ((v73 & 0x8000000000000000) != 0 || (v71 & 0x4000000000000000) != 0)
    {
      swift_retain();
      uint64_t v53 = sub_1DFDFFBE0();
      uint64_t v54 = v70;
      if (v53) {
        goto LABEL_62;
      }
    }
    else
    {
      uint64_t v53 = *(void *)(v71 + 16);
      swift_retain();
      uint64_t v54 = v70;
      if (v53)
      {
LABEL_62:
        if (v53 < 1)
        {
LABEL_86:
          __break(1u);
          return;
        }
        uint64_t v55 = 0;
        unint64_t v56 = v71 & 0xC000000000000001;
        uint64_t v57 = (unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
        char v58 = (void (**)(char *, char *, uint64_t))(v72 + 32);
        unint64_t v59 = MEMORY[0x1E4FBC860];
        uint64_t v67 = v11;
        unint64_t v68 = v71 & 0xC000000000000001;
        do
        {
          if (v56) {
            MEMORY[0x1E01EE240](v55, v71);
          }
          else {
            swift_retain();
          }
          swift_unknownObjectRetain();
          sub_1DFDE8C50();
          swift_release();
          if ((*v57)(v11, 1, v12) == 1)
          {
            sub_1DF2EF8BC((uint64_t)v11);
          }
          else
          {
            uint64_t v60 = v53;
            uint64_t v61 = *v58;
            uint64_t v62 = v69;
            (*v58)(v69, v11, v12);
            v61(v54, v62, v12);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v59 = sub_1DEE1B2BC(0, *(void *)(v59 + 16) + 1, 1, v59);
            }
            unint64_t v64 = *(void *)(v59 + 16);
            unint64_t v63 = *(void *)(v59 + 24);
            if (v64 >= v63 >> 1) {
              unint64_t v59 = sub_1DEE1B2BC(v63 > 1, v64 + 1, 1, v59);
            }
            *(void *)(v59 + 16) = v64 + 1;
            unint64_t v65 = v59
                + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))
                + *(void *)(v72 + 72) * v64;
            uint64_t v54 = v70;
            v61((char *)v65, v70, v12);
            uint64_t v53 = v60;
            unint64_t v11 = v67;
            unint64_t v56 = v68;
          }
          ++v55;
        }
        while (v53 != v55);
LABEL_80:
        swift_release_n();
        unint64_t v73 = v59;
        goto LABEL_81;
      }
    }
    unint64_t v59 = MEMORY[0x1E4FBC860];
    goto LABEL_80;
  }
  id v22 = (id)a1;
  if (qword_1EAC1D508 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1DFDF01D0();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EACDFED0);
  id v24 = (id)a1;
  id v25 = (id)a1;
  uint64_t v26 = sub_1DFDF01B0();
  os_log_type_t v27 = sub_1DFDFEA40();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 138412290;
    id v30 = (id)a1;
    uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
    unint64_t v73 = v31;
    sub_1DFDFF680();
    *uint64_t v29 = v31;
    sub_1DED93FEC((id)a1, a2, 1);
    sub_1DED93FEC((id)a1, a2, 1);
    _os_log_impl(&dword_1DE913000, v26, v27, "ArticleOptionsProvider could not fetch history. Error: %@", v28, 0xCu);
    sub_1DF6B69D4(0, (unint64_t *)&qword_1EBAEA670, (uint64_t (*)(uint64_t))sub_1DEB20C50, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v29, -1, -1);
    MEMORY[0x1E01EFA10](v28, -1, -1);
  }
  else
  {
    sub_1DED93FEC((id)a1, a2, 1);
    sub_1DED93FEC((id)a1, a2, 1);
  }

  unint64_t v73 = MEMORY[0x1E4FBC860];
  sub_1DF6B6824();
  sub_1DFDFE450();
  sub_1DED93FEC((id)a1, a2, 1);
}

uint64_t sub_1DF6B66C4()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1DF6B66E4, 0, 0);
}

uint64_t sub_1DF6B66E4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  int v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  sub_1DF6B69D4(0, (unint64_t *)&unk_1EAC2F880, MEMORY[0x1E4F7D508], MEMORY[0x1E4FBB320]);
  *int v3 = v0;
  v3[1] = sub_1DF6B5930;
  return MEMORY[0x1F41880D8](v0 + 2, 0, 0, 0x2873746C75736572, 0xE900000000000029, sub_1DF6B6A38, v2, v4);
}

ValueMetadata *type metadata accessor for SaveIntentArticleProvider()
{
  return &type metadata for SaveIntentArticleProvider;
}

void sub_1DF6B6824()
{
  if (!qword_1EAC2F890)
  {
    sub_1DF6B69D4(255, (unint64_t *)&unk_1EAC2F880, MEMORY[0x1E4F7D508], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1DFDFE460();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F890);
    }
  }
}

uint64_t sub_1DF6B68BC()
{
  sub_1DF6B6824();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1DF6B694C(unint64_t a1, __int16 a2)
{
  uint64_t v4 = a2 & 0x1FF;
  sub_1DF6B6824();
  uint64_t v6 = v2
     + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));
  sub_1DF6B5BD0(a1, v4, v6);
}

void sub_1DF6B69D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF6B6A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a2;
  int v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF6B859C(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v51 = (char *)&v42 - v5;
  sub_1DF6B859C(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v3);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v49 = (char *)&v42 - v7;
  sub_1DF6B84CC();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v44 = type metadata accessor for SearchMoreFeedServiceConfig;
  unint64_t v45 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF5C0D9C(0, &qword_1EAC2E968, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedServiceConfig, (uint64_t (*)(void))sub_1DEC16394, MEMORY[0x1E4F7F258]);
  uint64_t v43 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_1DFDFB960();
  uint64_t v55 = *(void *)(v14 - 8);
  uint64_t v56 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v54 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAC10D4(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DFDF8C20();
  uint64_t v52 = *(void *)(v19 - 8);
  uint64_t v53 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  id v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  id v24 = (char *)&v42 - v23;
  uint64_t v25 = type metadata accessor for TagsSearchMoreFeedGroupConfigData();
  MEMORY[0x1F4188790](v25 - 8);
  os_log_type_t v27 = (char *)&v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(a1 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_formatService + 24);
  uint64_t v46 = *(void *)(a1 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_formatService + 32);
  uint64_t v47 = v28;
  unint64_t v48 = __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_formatService), v28);
  sub_1DF6B7DB8();
  sub_1DFDF73B0();
  sub_1DFDF7360();
  sub_1DFDF7360();
  uint64_t v29 = sub_1DFDF7CB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v50, v43);
  id v30 = (uint64_t (*)(uint64_t))v44;
  sub_1DF5C0D9C(0, &qword_1EAC2E960, (uint64_t (*)(uint64_t))v44, (uint64_t (*)(void))sub_1DEC16394, MEMORY[0x1E4F7F760]);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v45, 1, 1, v31);
  uint64_t v32 = sub_1DFDFC340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v49, 1, 1, v32);
  char v57 = 1;
  uint64_t v33 = v51;
  sub_1DF5C0D9C(0, &qword_1EAC2E970, v30, (uint64_t (*)(void))sub_1DEC16394, MEMORY[0x1E4F81400]);
  swift_allocObject();
  sub_1DFDFC5D0();
  uint64_t v34 = sub_1DFDFB640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  uint64_t v35 = qword_1EAC1D430;
  (id)*MEMORY[0x1E4F7DFF8];
  if (v35 != -1) {
    swift_once();
  }
  (id)qword_1EACDFD50;
  uint64_t v36 = (uint64_t)v54;
  sub_1DFDFB930();
  uint64_t v37 = sub_1DF11A6A4((uint64_t)v27, 1936154996, 0xE400000000000000, (uint64_t)v24, (uint64_t)v22, MEMORY[0x1E4FBC860], (uint64_t)v18, v36, v47, v46);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v36, v56);
  sub_1DF5C0E1C((uint64_t)v18, (uint64_t (*)(void))sub_1DEAC10D4);
  uint64_t v38 = v53;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v52 + 8);
  v39(v22, v53);
  v39(v24, v38);
  uint64_t v40 = sub_1DFDFAA20();
  (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v27, v40);
  return v37;
}

uint64_t sub_1DF6B7194(uint64_t a1)
{
  uint64_t v2 = sub_1DFDF7010();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = type metadata accessor for FormatGroupFeedGroupEmitterCursor();
  uint64_t v7 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v7 + OBJC_IVAR____TtC7NewsUI233FormatGroupFeedGroupEmitterCursor_formatGroup, v5, v2);
  _OWORD v9[3] = v6;
  v9[0] = v7;
  sub_1DF6B859C(0, (unint64_t *)&qword_1EBAA79D0, (uint64_t (*)(uint64_t))sub_1DE9E4C7C, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DF6B7308()
{
  type metadata accessor for FormatGroupFeedGroupEmitterCursor();
  sub_1DFDEE090();
  swift_retain();
  uint64_t v1 = (void *)sub_1DFDEDCE0();
  sub_1DF5C09AC();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1DF6B82E4;
  *(void *)(v2 + 24) = v0;
  swift_retain();
  uint64_t v3 = (void *)sub_1DFDEDCE0();
  sub_1DF6B8338();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v4 = (void *)sub_1DFDEDCE0();
  sub_1DF5C0D9C(0, &qword_1EAC2E938, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedGroup, (uint64_t (*)(void))sub_1DEB1E640, MEMORY[0x1E4F7FA98]);
  sub_1DFDEDDF0();
  swift_release();

  uint64_t v5 = (void *)sub_1DFDEDCE0();
  uint64_t v6 = sub_1DFDEDED0();
  swift_release();

  return v6;
}

uint64_t sub_1DF6B7504(uint64_t a1, unint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v45 = a1;
  sub_1DF6B8338();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDE7630();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SearchMoreFeedGroup();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = a2[3];
  unsigned int v17 = *((unsigned __int8 *)a2 + 32);
  if (v17 >> 6)
  {
    if (v17 >> 6 == 1)
    {
      unint64_t v18 = *a2;
      int v43 = v17 & 1;
      uint64_t v19 = v3;
      uint64_t v20 = v16;
      swift_bridgeObjectRetain();
      uint64_t v16 = v20;
      uint64_t v3 = v19;
    }
    else
    {
      unint64_t v18 = MEMORY[0x1E4FBC860];
      uint64_t v16 = 1;
      int v43 = 1;
    }
  }
  else
  {
    int v43 = v17 & 1;
    unint64_t v18 = MEMORY[0x1E4FBC860];
  }
  if (v18 >> 62)
  {
    uint64_t v41 = v8;
    uint64_t v42 = v13;
    uint64_t v34 = v16;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    uint64_t v16 = v34;
    uint64_t v8 = v41;
    uint64_t v13 = v42;
    if (v35) {
      goto LABEL_8;
    }
LABEL_10:
    uint64_t v33 = sub_1DFDF8510();
    sub_1DE9251BC((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v33 - 8) + 104))(v36, *MEMORY[0x1E4F7F980], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v33;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v39 = v16;
  uint64_t v42 = v13;
  sub_1DFDE7620();
  uint64_t v21 = sub_1DFDE7610();
  uint64_t v40 = v6;
  uint64_t v41 = v3;
  uint64_t v22 = v21;
  uint64_t v23 = v45;
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v26 = v23 + OBJC_IVAR____TtC7NewsUI233FormatGroupFeedGroupEmitterCursor_formatGroup;
  uint64_t v27 = type metadata accessor for TagsSearchMoreFeedGroup();
  uint64_t v28 = (char *)v15 + *(int *)(v27 + 20);
  uint64_t v29 = sub_1DFDF7010();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v28, v26, v29);
  *uint64_t v15 = v22;
  v15[1] = v25;
  *(uint64_t *)((char *)v15 + *(int *)(v27 + 24)) = v18;
  sub_1DF6B8444();
  uint64_t v31 = (char *)v15 + *(int *)(v30 + 48);
  *(void *)uint64_t v31 = v39;
  v31[8] = v43;
  swift_storeEnumTagMultiPayload();
  v44[3] = type metadata accessor for FormatGroupFeedGroupEmitterCursor();
  v44[0] = v23;
  uint64_t v32 = (uint64_t)&v8[*(int *)(v40 + 48)];
  sub_1DF5C0B5C((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SearchMoreFeedGroup);
  sub_1DEA6964C((uint64_t)v44, v32);
  sub_1DF6B859C(0, &qword_1EAC2F8F0, (uint64_t (*)(uint64_t))sub_1DF6B8338, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_retain();
  uint64_t v33 = sub_1DFDEDE90();
  sub_1DF5C0E1C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SearchMoreFeedGroup);
  return v33;
}

uint64_t sub_1DF6B7968(uint64_t a1)
{
  sub_1DF5C0D9C(0, &qword_1EAC2E938, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedGroup, (uint64_t (*)(void))sub_1DEB1E640, MEMORY[0x1E4F7FA98]);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v10 - v3;
  sub_1DF6B8338();
  uint64_t v6 = *(int *)(v5 + 48);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (uint64_t)&v4[v6];
  sub_1DF5C0B5C(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SearchMoreFeedGroup);
  sub_1DF5C0B5C(v7, v8, (uint64_t (*)(void))sub_1DE9E4C7C);
  swift_storeEnumTagMultiPayload();
  sub_1DF6B83A8();
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DF6B7AB4(uint64_t a1)
{
  sub_1DF5C0D9C(0, &qword_1EAC2E938, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedGroup, (uint64_t (*)(void))sub_1DEB1E640, MEMORY[0x1E4F7FA98]);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v7 - v3);
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_1DFDFF9B0();
  sub_1DFDFDE90();
  uint64_t v9 = a1;
  sub_1DEA07544();
  sub_1DFDFFB10();
  unint64_t v5 = v8;
  *uint64_t v4 = v7;
  v4[1] = v5;
  swift_storeEnumTagMultiPayload();
  sub_1DF6B83A8();
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DF6B7C1C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_config;
  sub_1DF6B7DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_formatService);
  return swift_deallocClassInstance();
}

uint64_t sub_1DF6B7CCC()
{
  return type metadata accessor for TagsSearchMoreFeedGroupEmitter();
}

uint64_t type metadata accessor for TagsSearchMoreFeedGroupEmitter()
{
  uint64_t result = qword_1EAC2F8A8;
  if (!qword_1EAC2F8A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF6B7D20()
{
  sub_1DF6B7DB8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1DF6B7DB8()
{
  if (!qword_1EAC2F8B8)
  {
    type metadata accessor for TagsSearchMoreFeedGroupConfigData();
    sub_1DE9251BC(&qword_1EAC2F8C0, (void (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupConfigData);
    sub_1DE9251BC(&qword_1EAC2F8C8, (void (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupConfigData);
    unint64_t v0 = sub_1DFDF7430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2F8B8);
    }
  }
}

uint64_t sub_1DF6B7E84()
{
  sub_1DFDF7010();
  sub_1DFDEE090();
  unint64_t v0 = (void *)sub_1DFDEDCE0();
  sub_1DE9E4C7C();
  uint64_t v1 = sub_1DFDEDDF0();
  swift_release();

  return v1;
}

uint64_t sub_1DF6B7F2C()
{
  return sub_1DF6B7308();
}

uint64_t sub_1DF6B7F50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7NewsUI230TagsSearchMoreFeedGroupEmitter_config;
  sub_1DF6B7DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for SearchMoreFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF6B7FE0()
{
  return sub_1DFDF7340();
}

uint64_t sub_1DF6B8018@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF6B859C(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DF6B7DB8();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DF6B8568(0);
  a1[3] = v5;
  a1[4] = sub_1DE9251BC(&qword_1EAC2F900, sub_1DF6B8568);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF6B8158()
{
  sub_1DE9251BC(&qword_1EAC2F8E0, (void (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF6B81C4()
{
  return sub_1DE9251BC(&qword_1EAC2F8D0, (void (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter);
}

uint64_t sub_1DF6B820C()
{
  return sub_1DE9251BC(&qword_1EAC2F8D8, (void (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter);
}

uint64_t sub_1DF6B8254()
{
  return sub_1DE9251BC(&qword_1EAC2F8E0, (void (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter);
}

uint64_t sub_1DF6B829C()
{
  return sub_1DE9251BC(&qword_1EAC2F8E8, (void (*)(uint64_t))type metadata accessor for TagsSearchMoreFeedGroupEmitter);
}

uint64_t sub_1DF6B82E4(uint64_t a1, unint64_t *a2)
{
  return sub_1DF6B7504(a1, a2);
}

uint64_t sub_1DF6B8300()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DF6B8338()
{
  if (!qword_1EAC2E948)
  {
    type metadata accessor for SearchMoreFeedGroup();
    sub_1DE9E4C7C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC2E948);
    }
  }
}

void sub_1DF6B83A8()
{
  if (!qword_1EAC2E940)
  {
    sub_1DF5C0D9C(255, &qword_1EAC2E938, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedGroup, (uint64_t (*)(void))sub_1DEB1E640, MEMORY[0x1E4F7FA98]);
    unint64_t v0 = sub_1DFDEDFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2E940);
    }
  }
}

void sub_1DF6B8444()
{
  if (!qword_1EAC21D50)
  {
    type metadata accessor for TagsSearchMoreFeedGroup();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC21D50);
    }
  }
}

uint64_t sub_1DF6B84B0()
{
  return sub_1DF6B6A3C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1DF6B84CC()
{
  if (!qword_1EAC2E958)
  {
    sub_1DF5C0D9C(255, &qword_1EAC2E960, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedServiceConfig, (uint64_t (*)(void))sub_1DEC16394, MEMORY[0x1E4F7F760]);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC2E958);
    }
  }
}

void sub_1DF6B8568(uint64_t a1)
{
}

void sub_1DF6B859C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF6B8600()
{
  sub_1DFDF6770();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ChannelPickerStyler()
{
  return self;
}

uint64_t sub_1DF6B87CC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  unint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v62 = a1;
  uint64_t v5 = type metadata accessor for MyMagazinesModel();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v61 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v60 = (char *)&v56 - v8;
  uint64_t v9 = sub_1DFDF8A10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v56 - v14;
  uint64_t v16 = sub_1DFDF8FD0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for MyMagazinesLayoutModel();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE01DEC();
  sub_1DFDF2120();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v22, v16);
  uint64_t v63 = v4;
  swift_getObjectType();
  sub_1DFDF8420();
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v10 + 88))(v13, v9) == *MEMORY[0x1E4F7FAD8])
  {
    uint64_t v58 = v17;
    unint64_t v59 = v19;
    unint64_t v64 = v15;
    uint64_t v65 = v16;
    uint64_t v23 = v10;
    uint64_t v24 = *(void (**)(uint64_t *, uint64_t))(v10 + 96);
    uint64_t v57 = v9;
    v24(v13, v9);
    uint64_t v25 = *v13;
    sub_1DEB0D814(0);
    uint64_t v26 = v60;
    sub_1DFDF0B50();
    uint64_t v27 = *(void **)v26;
    uint64_t v28 = (void *)*((void *)v26 + 2);
    sub_1DED4A6B8();
    uint64_t v30 = &v26[*(int *)(v29 + 48)];
    id v31 = objc_msgSend(v27, sel_identifier);
    uint64_t v32 = sub_1DFDFDD20();
    uint64_t v34 = v33;

    uint64_t v35 = sub_1DFDF99F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v30, v35);
    uint64_t v36 = (void *)sub_1DFDF1E50();
    uint64_t v37 = *(void *)(v63 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 32))(v32, v34, ObjectType, v37);
    swift_bridgeObjectRelease();
    sub_1DF6B92C0(&qword_1EBAAA358, (void (*)(uint64_t))type metadata accessor for IssueDownload);
    sub_1DFDFAA90();

    uint64_t v39 = (uint64_t)v61;
    sub_1DFDF0B50();
    uint64_t v40 = sub_1DEFF5934();
    sub_1DF6B91A0(v39);
    uint64_t v41 = v25;
    uint64_t v42 = (void *)sub_1DFDF1E50();
    int v43 = (void *)sub_1DFDFAA80();

    if (v40)
    {
      objc_msgSend(v43, sel_setShowsMenuAsPrimaryAction_, 1);

      uint64_t v44 = (void *)sub_1DFDF1E50();
      uint64_t v45 = (void *)sub_1DFDFAA80();

      sub_1DEB3C948();
      uint64_t v46 = (void *)sub_1DFDFF380();
      objc_msgSend(v45, sel_setMenu_, v46);

      uint64_t v47 = (void *)sub_1DFDF1E50();
      unint64_t v48 = (void *)sub_1DFDFAA80();

      uint64_t v49 = (void *)sub_1DFDFBB10();
      uint64_t v50 = swift_allocObject();
      swift_weakInit();
      uint64_t v51 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v52 = (void *)swift_allocObject();
      v52[2] = v50;
      v52[3] = v51;
      v52[4] = v40;
      swift_retain();
      uint64_t v53 = (void *)sub_1DFDF5050();
      swift_release();

      swift_release();
    }
    else
    {
      objc_msgSend(v43, sel_setHidden_, 1);
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v64, v57);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v65);
  }
  else
  {
    uint64_t v41 = sub_1DFDF8A00();
    uint64_t v54 = *(void (**)(char *, uint64_t))(v10 + 8);
    v54(v15, v9);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v54((char *)v13, v9);
  }
  return v41;
}

void sub_1DF6B8E38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DFDF33E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    swift_beginAccess();
    uint64_t v9 = MEMORY[0x1E01EFB70](a2 + 16);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FACB48], v3);
      uint64_t v11 = *(void *)(v8 + 64);
      v16[4] = sub_1DFDE8900();
      void v16[5] = sub_1DF6B92C0((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
      v16[1] = v11;
      swift_retain();
      uint64_t v12 = (void *)sub_1DFDF1E50();
      sub_1DFDFAA80();

      long long v17 = 0u;
      long long v18 = 0u;
      char v19 = 1;
      sub_1DFDF2D90();
      swift_allocObject();
      sub_1DFDF2D70();
      uint64_t v13 = (void *)sub_1DFDF1E50();
      uint64_t v14 = (void *)sub_1DFDFAA80();

      sub_1DEB3C948();
      swift_unknownObjectRetain();
      sub_1DFDF0520();
      swift_unknownObjectRelease();
      uint64_t v15 = (void *)sub_1DFDFF380();
      objc_msgSend(v14, sel_setMenu_, v15);
      swift_release();

      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t type metadata accessor for MyMagazinesBlueprintViewCellProvider()
{
  return self;
}

uint64_t sub_1DF6B90E0()
{
  return sub_1DF6B92C0(&qword_1EAC243B8, (void (*)(uint64_t))type metadata accessor for MyMagazinesLayoutModel);
}

uint64_t sub_1DF6B9128()
{
  return sub_1DF6B92C0((unint64_t *)&unk_1EAC24690, (void (*)(uint64_t))type metadata accessor for MyMagazinesModel);
}

uint64_t sub_1DF6B9170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char **a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1DF6B87CC(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_1DF6B91A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MyMagazinesModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF6B91FC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF6B9234()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF6B926C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DF6B92B4()
{
  sub_1DF6B8E38(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DF6B92C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF6B9308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF6B9374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF6B93D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF6B943C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF6B94A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF6B9504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF6B9518);
}

uint64_t sub_1DF6B9518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF6B9584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6B9598);
}

uint64_t sub_1DF6B9598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ChannelEngagementLayoutOptions()
{
  uint64_t result = qword_1EAC2F908;
  if (!qword_1EAC2F908) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF6B9654()
{
  uint64_t result = sub_1DFDF2BF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF6B96E0(uint64_t a1)
{
  uint64_t v3 = (int *)type metadata accessor for MyMagazinesBuildBlueprintModifier();
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  sub_1DF3540EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  sub_1DE94F204(v1 + 16, (uint64_t)&v8[v3[5]]);
  *(void *)&v8[v3[6]] = *(void *)(v1 + 56);
  uint64_t v10 = v3[7];
  long long v13 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)&v8[v10] = v13;
  sub_1DF6B9954((uint64_t)v8, (uint64_t)v6);
  sub_1DF6B99B8();
  swift_allocObject();
  sub_1DF6B9A70(qword_1EAC2A650, (void (*)(uint64_t))type metadata accessor for MyMagazinesBuildBlueprintModifier);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v11 = sub_1DFDF19A0();
  sub_1DF6B9AB8((uint64_t)v8);
  return v11;
}

uint64_t sub_1DF6B987C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MyMagazinesBlueprintModifierFactory()
{
  return self;
}

uint64_t sub_1DF6B98E8()
{
  return sub_1DF6B9A70((unint64_t *)&unk_1EAC24690, (void (*)(uint64_t))type metadata accessor for MyMagazinesModel);
}

uint64_t sub_1DF6B9930(uint64_t a1)
{
  return sub_1DF6B96E0(a1);
}

uint64_t sub_1DF6B9954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MyMagazinesBuildBlueprintModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DF6B99B8()
{
  if (!qword_1EAC368B0)
  {
    type metadata accessor for MyMagazinesModel();
    sub_1DED4A488();
    sub_1DF6B9A70((unint64_t *)&unk_1EAC24690, (void (*)(uint64_t))type metadata accessor for MyMagazinesModel);
    unint64_t v0 = sub_1DFDF19B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC368B0);
    }
  }
}

uint64_t sub_1DF6B9A70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF6B9AB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MyMagazinesBuildBlueprintModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF6B9B14()
{
  sub_1DFDECEC0();
  uint64_t v1 = (void *)sub_1DFDEDB60();
  sub_1DE94140C(0, (unint64_t *)&qword_1EBABA9A0, (uint64_t (*)(uint64_t))sub_1DEABCC20, MEMORY[0x1E4FBB320]);
  uint64_t v2 = sub_1DFDEDE00();

  uint64_t v3 = (void *)sub_1DFDEDB60();
  sub_1DFDEDE00();

  id v4 = objc_msgSend(*(id *)(v0 + 32), sel_sortedListenedArticleIDs);
  sub_1DFDFE220();
  swift_release();

  return v2;
}

uint64_t sub_1DF6B9C64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AudioFeedTrack(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t TrackData = type metadata accessor for AudioState.UpNextTrackData(0);
  MEMORY[0x1F4188790](TrackData);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AudioState(0);
  sub_1DF6BA064(a1 + *(int *)(v11 + 24), (uint64_t)v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (EnumCaseMultiPayload)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DEDDB300((uint64_t)v10, (uint64_t)v7);
      sub_1DE94140C(0, (unint64_t *)&unk_1EBABB520, type metadata accessor for AudioFeedTrack, MEMORY[0x1E4FBBE00]);
      unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1DFE0B250;
      sub_1DEDDB300((uint64_t)v7, v14 + v15);
    }
    uint64_t v16 = *(void *)(v14 + 16);
    if (v16) {
      goto LABEL_5;
    }
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
    goto LABEL_10;
  }
  uint64_t v16 = *(void *)(*(void *)v10 + 16);
  if (!v16) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v22 = v13;
  sub_1DFDFFA70();
  unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = *(void *)(v5 + 72);
  do
  {
    swift_unknownObjectRetain();
    sub_1DFDFFA50();
    sub_1DFDFFA90();
    sub_1DFDFFAA0();
    sub_1DFDFFA60();
    v17 += v18;
    --v16;
  }
  while (v16);
  uint64_t v19 = v22;
  uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
  *a2 = v19;
  return result;
}

uint64_t sub_1DF6B9EC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = type metadata accessor for AudioState(0);
  uint64_t v5 = *(void *)(*(void *)(a1 + *(int *)(result + 28)) + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DFDFFA70();
    uint64_t v7 = *(void *)(type metadata accessor for AudioFeedTrack(0) - 8);
    unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = *(void *)(v7 + 72);
    do
    {
      swift_unknownObjectRetain();
      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
      v8 += v9;
      --v5;
    }
    while (v5);
    uint64_t v6 = v10;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1DF6B9FF4()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1DF6BA034@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DF6B9B14();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1DF6BA064(uint64_t a1, uint64_t a2)
{
  uint64_t TrackData = type metadata accessor for AudioState.UpNextTrackData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(TrackData - 8) + 16))(a2, a1, TrackData);
  return a2;
}

uint64_t static ChannelPickerNewsPlusCategoryModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1DFDFFF50();
  }
}

uint64_t ChannelPickerNewsPlusCategoryModel.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelPickerNewsPlusCategoryModel.icon1x.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEC82DDC(v1 + 32, a1);
}

uint64_t ChannelPickerNewsPlusCategoryModel.icon2x.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEC82DDC(v1 + 72, a1);
}

uint64_t ChannelPickerNewsPlusCategoryModel.icon3x.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEC82DDC(v1 + 112, a1);
}

uint64_t ChannelPickerNewsPlusCategoryModel.hashValue.getter()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF6BA19C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DF6BAB04();
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

unint64_t sub_1DF6BA1E8()
{
  unint64_t result = qword_1EAC2F928;
  if (!qword_1EAC2F928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F928);
  }
  return result;
}

uint64_t sub_1DF6BA23C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1DFDFFF50();
  }
}

uint64_t ChannelPickerNewsPlusCategoryModel.description.getter()
{
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_1DFDFF9B0();
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
  sub_1DFDFDE90();
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DEC82DDC(v0 + 32, (uint64_t)v3);
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_1DFDF1070();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    sub_1DEB6F4C0((uint64_t)v3);
  }
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v1 = swift_bridgeObjectRetain();
  MEMORY[0x1E01ECA60](v1, MEMORY[0x1E4FBB1A0]);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return v5;
}

unint64_t sub_1DF6BA454()
{
  unint64_t result = qword_1EAC2F930;
  if (!qword_1EAC2F930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F930);
  }
  return result;
}

unint64_t sub_1DF6BA4AC()
{
  unint64_t result = qword_1EAC2F938;
  if (!qword_1EAC2F938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F938);
  }
  return result;
}

uint64_t destroy for ChannelPickerNewsPlusCategoryModel(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[7]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 4));
  }
  if (a1[12]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 9));
  }
  if (a1[17]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 14));
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChannelPickerNewsPlusCategoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2 + 32;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    long long v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(void *)(a1 + 64) = *(void *)(v6 + 32);
  }
  uint64_t v10 = (_OWORD *)(a1 + 72);
  uint64_t v11 = (_OWORD *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 96);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v12;
    *(void *)(a1 + 104) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 88);
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 88) = v14;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
  }
  unint64_t v15 = (_OWORD *)(a1 + 112);
  uint64_t v16 = (_OWORD *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 136);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = v17;
    *(void *)(a1 + 144) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 128);
    *unint64_t v15 = *v16;
    *(_OWORD *)(a1 + 128) = v19;
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
  }
  uint64_t v20 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v20;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChannelPickerNewsPlusCategoryModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  else if (v4)
  {
    *(void *)(a1 + 56) = v4;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v7)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  }
  else if (v7)
  {
    *(void *)(a1 + 96) = v7;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 72, a2 + 72);
    goto LABEL_15;
  }
  long long v8 = *(_OWORD *)(a2 + 72);
  long long v9 = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 72) = v8;
  *(_OWORD *)(a1 + 88) = v9;
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 136);
  if (!*(void *)(a1 + 136))
  {
    if (v10)
    {
      *(void *)(a1 + 136) = v10;
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 112, a2 + 112);
      goto LABEL_22;
    }
LABEL_21:
    long long v11 = *(_OWORD *)(a2 + 112);
    long long v12 = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 128) = v12;
    goto LABEL_22;
  }
  if (!v10)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 112);
    goto LABEL_21;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
LABEL_22:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for ChannelPickerNewsPlusCategoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  if (*(void *)(a1 + 96)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  }
  long long v7 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v7;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  if (*(void *)(a1 + 136)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 112);
  }
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  uint64_t v9 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelPickerNewsPlusCategoryModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelPickerNewsPlusCategoryModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelPickerNewsPlusCategoryModel()
{
  return &type metadata for ChannelPickerNewsPlusCategoryModel;
}

unint64_t sub_1DF6BAB04()
{
  unint64_t result = qword_1EAC2F940;
  if (!qword_1EAC2F940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F940);
  }
  return result;
}

uint64_t *sub_1DF6BAB58(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DF6BADAC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
    *(void *)&v9[*(int *)(v12 + 20)] = *(void *)&v10[*(int *)(v12 + 20)];
    *(void *)&v9[*(int *)(v12 + 24)] = *(void *)&v10[*(int *)(v12 + 24)];
    uint64_t v13 = a3[6];
    long long v14 = (char *)a1 + v13;
    unint64_t v15 = (char *)a2 + v13;
    long long v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    uint64_t v17 = v16;
    uint64_t v18 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    v18(v14, v15, v17);
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_1DFDE7920();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    uint64_t v23 = a3[8];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1DF6BADAC()
{
  if (!qword_1EBAE9390)
  {
    type metadata accessor for PuzzleArchiveTagFeedGroupConfigData();
    sub_1DF6BAE78(qword_1EBAE58B0, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupConfigData);
    sub_1DF6BAE78((unint64_t *)&unk_1EBAE58A0, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupConfigData);
    unint64_t v0 = sub_1DFDF7430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9390);
    }
  }
}

uint64_t sub_1DF6BAE78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF6BAEC0(uint64_t a1, int *a2)
{
  sub_1DF6BADAC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_1DFDE7920();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6BB034(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6BADAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  uint64_t v16 = v15;
  uint64_t v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  v17(v13, v14, v16);
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_1DFDE7920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DF6BB238(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6BADAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  swift_retain();
  swift_release();
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1DFDE7920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF6BB40C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6BADAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  uint64_t v19 = sub_1DFDE7920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1DF6BB59C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6BADAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  swift_release();
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1DFDE7920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF6BB75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF6BB770);
}

uint64_t sub_1DF6BB770(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6BADAC();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 24);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_1DFDE7920();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_1DF6BB8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6BB908);
}

uint64_t sub_1DF6BB908(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DF6BADAC();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_1DFDE7920();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[7];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for PuzzleArchiveTagFeedGroupEmitter()
{
  uint64_t result = qword_1EBAE35D0;
  if (!qword_1EBAE35D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF6BBAD8()
{
  sub_1DF6BADAC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
    if (v1 <= 0x3F)
    {
      sub_1DFDE7920();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1DF6BBBEC()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DF6BBC6C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDEE090();
  uint64_t v7 = (void *)sub_1DFDEDCE0();
  sub_1DF6BE0D0(0, (unint64_t *)&unk_1EBAEA370, (uint64_t (*)(uint64_t))sub_1DEBB946C, MEMORY[0x1E4FBB320]);
  sub_1DFDEDDF0();
  swift_release();

  uint64_t v22 = type metadata accessor for PuzzleArchiveTagFeedGroupEmitter;
  sub_1DF6BE034(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
  unint64_t v20 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v8 = v20;
  uint64_t v23 = v20 + v5;
  unint64_t v9 = (v20 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  sub_1DF6BCC00((uint64_t)v6, v10 + v8);
  *(void *)(v10 + v9) = a1;
  swift_retain();
  uint64_t v11 = (void *)sub_1DFDEDCE0();
  sub_1DFDFA9F0();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v12 = v21;
  sub_1DF6BE034(v21, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
  uint64_t v13 = swift_allocObject();
  unint64_t v14 = v20;
  sub_1DF6BCC00((uint64_t)v6, v13 + v20);
  *(void *)(v13 + v9) = a1;
  swift_retain();
  uint64_t v15 = (void *)sub_1DFDEDCE0();
  sub_1DEC3C690(0, &qword_1EBAE9740, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, sub_1DEBFF3E4, MEMORY[0x1E4F7FA98]);
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  sub_1DF6BE034(v12, (uint64_t)v6, (uint64_t (*)(void))v22);
  uint64_t v16 = swift_allocObject();
  sub_1DF6BCC00((uint64_t)v6, v16 + v14);
  uint64_t v17 = (void *)sub_1DFDEDCE0();
  uint64_t v18 = sub_1DFDEDEE0();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_1DF6BBFEC@<X0>(unint64_t *a1@<X8>)
{
  sub_1DF6BADAC();
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocBox();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0x8000000000000000;
  return result;
}

uint64_t sub_1DF6BC064@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  a2[4] = sub_1DF6BAE78(&qword_1EBAE15C8, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupKnobs);
  a2[5] = sub_1DF6BAE78(&qword_1EAC2F970, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DF6BE034(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroupKnobs);
}

uint64_t sub_1DF6BC130()
{
  type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  uint64_t v0 = sub_1DFDF8030();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F8F0];
  sub_1DEEE8484(0, (unint64_t *)&qword_1EBAEAF50, (unint64_t *)&unk_1EBAE9690, MEMORY[0x1E4F7F8F0], MEMORY[0x1E4FBBE00]);
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9690, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, v1);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DFE0B250;
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9980, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7FE90]);
  swift_allocObject();
  *(void *)(v6 + v5) = sub_1DFDF9140();
  (*(void (**)(unint64_t, void, uint64_t))(v4 + 104))(v6 + v5, *MEMORY[0x1E4F7F8E8], v3);
  sub_1DF3DD820(v6);
  return v0;
}

uint64_t sub_1DF6BC3AC()
{
  sub_1DF6BADAC();
  return sub_1DFDF7340();
}

uint64_t sub_1DF6BC3D8@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF6BE0D0(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DF6BADAC();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DF6BE09C(0);
  a1[3] = v5;
  a1[4] = sub_1DF6BAE78((unint64_t *)&unk_1EAC2F980, sub_1DF6BE09C);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF6BC530()
{
  sub_1DF6BAE78(&qword_1EAC2F958, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF6BC59C()
{
  return sub_1DF6BAE78(&qword_1EAC2F948, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
}

uint64_t sub_1DF6BC5E4()
{
  return sub_1DF6BAE78(&qword_1EAC2F950, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
}

uint64_t sub_1DF6BC62C()
{
  return sub_1DF6BAE78(&qword_1EAC2F958, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
}

uint64_t sub_1DF6BC674()
{
  return sub_1DF6BAE78((unint64_t *)&unk_1EAC2F960, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroupEmitter);
}

uint64_t sub_1DF6BC6BC()
{
  return swift_retain();
}

unint64_t sub_1DF6BC6D8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1DFDFAFE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF9D80();
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *a1;
  unint64_t v15 = *a1 >> 62;
  if (!v15)
  {
    uint64_t v16 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    unint64_t v26 = sub_1DFDF8510();
    sub_1DF6BAE78((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    uint64_t v29 = v36;
    uint64_t v30 = (unsigned int *)MEMORY[0x1E4F7F980];
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!sub_1DFDFFBE0()) {
    goto LABEL_21;
  }
LABEL_3:
  if ((v14 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1E01EE240](0, v14);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (!v17)
    {
      __break(1u);
      goto LABEL_26;
    }
  }
  uint64_t v39 = v4;
  uint64_t v40 = v9;
  uint64_t v41 = v8;
  uint64_t v42 = type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  uint64_t v43 = a2;
  type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  uint64_t v44 = a3;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v46 + 8);
  v18(v13, v47);
  uint64_t v19 = v48;
  if (!v15)
  {
    uint64_t v20 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20 >= v48) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v20 < v19)
  {
LABEL_10:
    unint64_t v26 = sub_1DFDF8510();
    sub_1DF6BAE78((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    uint64_t v29 = v28;
    *uint64_t v28 = v19;
    v28[1] = v20;
    uint64_t v30 = (unsigned int *)MEMORY[0x1E4F7F9C8];
LABEL_22:
    (*(void (**)(uint64_t *, void, unint64_t))(*(void *)(v26 - 8) + 104))(v29, *v30, v26);
    swift_willThrow();
    return v26;
  }
LABEL_7:
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v18(v13, v47);
  uint64_t v21 = v48;
  unint64_t v22 = sub_1DFB3607C(v43 + *(int *)(v42 + 28), v14);
  a2 = sub_1DEC8001C(v21, v22);
  uint64_t v9 = v23;
  a3 = v24;
  unint64_t v14 = v25;
  swift_bridgeObjectRelease();
  if (v14)
  {
    sub_1DFDFFF90();
    swift_unknownObjectRetain_n();
    uint64_t v31 = swift_dynamicCastClass();
    if (!v31)
    {
      swift_unknownObjectRelease();
      uint64_t v31 = MEMORY[0x1E4FBC860];
    }
    uint64_t v32 = *(void *)(v31 + 16);
    swift_release();
    if (!__OFSUB__(v14 >> 1, a3))
    {
      if (v32 == (v14 >> 1) - a3)
      {
        unint64_t v26 = swift_dynamicCastClass();
        uint64_t v27 = v39;
        if (!v26)
        {
          swift_unknownObjectRelease();
          unint64_t v26 = MEMORY[0x1E4FBC860];
        }
        goto LABEL_17;
      }
      goto LABEL_27;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_unknownObjectRelease();
  }
  unint64_t v26 = sub_1DEC7AAC4(a2, v9, a3, v14);
  uint64_t v27 = v39;
LABEL_17:
  swift_unknownObjectRelease();
  uint64_t v33 = v44;
  uint64_t v34 = v45;
  sub_1DF6BCCFC(v26, v45);
  swift_release();
  uint64_t v35 = sub_1DF6BD184(v33, v34);
  if (!v27) {
    unint64_t v26 = v35;
  }
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v34, v41);
  return v26;
}

uint64_t sub_1DF6BCC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DF6BCC64(unint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PuzzleArchiveTagFeedGroupEmitter() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DF6BC6D8(a1, v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DF6BCCFC@<X0>(unint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1DF6BE0D0(0, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_1DFDFC900();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF6BE0D0(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = *(void *)(sub_1DFDFCAB0() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1DFE0B250;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v13)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
LABEL_14:
    sub_1DF11BA44(v21);
    sub_1DF11BB5C(v21);
    sub_1DF11BC90(v21);
    sub_1DFDFCAA0();
    uint64_t v22 = sub_1DFDF66A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
    sub_1DFC83088(v21);
    sub_1DFC83088(v21);
    sub_1DFC831BC(v21);
    sub_1DFC831D4(v21);
    sub_1DFC83308(v21);
    sub_1DFC83320(v21);
    return sub_1DFDFAFD0();
  }
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEDF697C(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v29 = v13;
    unint64_t v23 = v12;
    uint64_t v24 = v6;
    uint64_t v25 = a2;
    uint64_t v15 = 0;
    uint64_t v16 = v30;
    unint64_t v28 = a1 & 0xC000000000000001;
    unsigned int v27 = *MEMORY[0x1E4F815F8];
    unint64_t v17 = a1;
    do
    {
      if (v28) {
        uint64_t v18 = MEMORY[0x1E01EE240](v15, a1);
      }
      else {
        uint64_t v18 = swift_unknownObjectRetain();
      }
      *uint64_t v10 = v18;
      (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, v27, v7);
      uint64_t v30 = v16;
      unint64_t v20 = *(void *)(v16 + 16);
      unint64_t v19 = *(void *)(v16 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DEDF697C(v19 > 1, v20 + 1, 1);
        uint64_t v16 = v30;
      }
      ++v15;
      *(void *)(v16 + 16) = v20 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v8 + 32))(v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v20, v10, v7);
      a1 = v17;
    }
    while (v29 != v15);
    uint64_t v6 = v24;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF6BD184(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF6BE0D0(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v38 = (char *)&v35 - v5;
  sub_1DF6BE0D0(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v3);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v36 = (char *)&v35 - v7;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F760];
  sub_1DEEE8484(0, (unint64_t *)&qword_1EBAE95E0, (unint64_t *)&qword_1EBACCB70, MEMORY[0x1E4F7F760], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = sub_1DFDFB960();
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v41 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDFAA20();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PuzzleArchiveTagFeedGroupConfigData();
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (void *)(v2 + *(int *)(type metadata accessor for PuzzleArchiveTagFeedGroupEmitter() + 24));
  uint64_t v23 = v22[3];
  uint64_t v39 = v22[4];
  uint64_t v40 = v23;
  uint64_t v37 = __swift_project_boxed_opaque_existential_1(v22, v23);
  sub_1DF6BADAC();
  sub_1DFDF73B0();
  uint64_t v24 = &v21[*(int *)(v19 + 28)];
  uint64_t v42 = v15;
  uint64_t v43 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v24, v14);
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, v8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
  swift_retain();
  sub_1DFDF87F0();
  id v26 = *(id *)(v48 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  uint64_t v27 = sub_1DFDFC340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v36, 1, 1, v27);
  char v47 = 33;
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9F30, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F81400]);
  swift_allocObject();
  unint64_t v28 = v38;
  sub_1DFDFC5C0();
  sub_1DFDF87F0();
  id v29 = *(id *)(v48 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1DFDFC5F0();
  swift_allocObject();
  sub_1DFDFC5E0();
  uint64_t v30 = sub_1DFDFB640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 1, 1, v30);
  uint64_t v31 = qword_1EBAEA6E8;
  (id)*MEMORY[0x1E4F7E018];
  if (v31 != -1) {
    swift_once();
  }
  (id)qword_1EBB63310;
  uint64_t v32 = v41;
  sub_1DFDFB930();
  uint64_t v33 = sub_1DFDFB120();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v45);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v43);
  return v33;
}

uint64_t sub_1DF6BD7A0(uint64_t a1)
{
  sub_1DEC3C690(0, &qword_1EBAE9740, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, sub_1DEBFF3E4, MEMORY[0x1E4F7FA98]);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v10 - v3;
  uint64_t v5 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF6BD9CC(a1, (uint64_t)v7);
  sub_1DF6BE034((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1DEC12448();
  swift_allocObject();
  uint64_t v8 = sub_1DFDEDE90();
  sub_1DEC3C93C((uint64_t)v7);
  return v8;
}

uint64_t sub_1DF6BD934(uint64_t a1)
{
  return sub_1DF6BD7A0(a1);
}

uint64_t sub_1DF6BD9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v13[1] = a2;
  sub_1DF6BE0D0(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v13 - v4;
  uint64_t v6 = sub_1DFDF8C20();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1DFDFA9F0();
  MEMORY[0x1F4188790](v8);
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1DF6BADAC();
  sub_1DFDF7350();
  sub_1DFDF7360();
  sub_1DFDF7360();
  type metadata accessor for PuzzleArchiveTagFeedGroupEmitter();
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  sub_1DFDF8080();
  sub_1DFDF8050();
  sub_1DFDF80A0();
  uint64_t v11 = sub_1DFDF7CB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_1DFDF6F90();
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF6BDD04()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  type metadata accessor for TagFeedGroup();
  sub_1DEBFF3E4();
  return sub_1DFDF88D0();
}

uint64_t sub_1DF6BDDC8()
{
  uint64_t v1 = (int *)(type metadata accessor for PuzzleArchiveTagFeedGroupEmitter() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_1DF6BADAC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v2 + v1[7];
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for PuzzleArchiveTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[8]);
  uint64_t v6 = v2 + v1[9];
  uint64_t v7 = sub_1DFDE7920();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF6BDFB8()
{
  return sub_1DF6BDD04();
}

uint64_t sub_1DF6BE034(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1DF6BE09C(uint64_t a1)
{
}

void sub_1DF6BE0D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t SportsLinksTagFeedLink.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  sub_1DF6BE54C();
  uint64_t v38 = v3;
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v34 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v34 - v10;
  sub_1DF6BE8E0(0, &qword_1EBAEA938, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v37 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v34 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6BE5AC();
  uint64_t v16 = v39;
  sub_1DFE00190();
  if (v16)
  {
    uint64_t v19 = (uint64_t)a1;
  }
  else
  {
    unint64_t v17 = v9;
    uint64_t v39 = a1;
    uint64_t v18 = v38;
    char v43 = 0;
    sub_1DF6BE600();
    sub_1DFDFFD90();
    char v21 = v40;
    if ((_BYTE)v40)
    {
      int v42 = v40;
      if (v40 == 1)
      {
        LOBYTE(v40) = 1;
        sub_1DF6BE654();
        uint64_t v22 = v17;
        uint64_t v23 = v18;
        sub_1DFDFFD90();
        uint64_t v25 = v35;
        uint64_t v24 = v36;
        uint64_t v26 = v37;
        sub_1DFDFA560();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v13);
      }
      else
      {
        LOBYTE(v40) = 1;
        sub_1DF6BE654();
        id v29 = v15;
        uint64_t v30 = v6;
        uint64_t v31 = v18;
        sub_1DFDFFD90();
        uint64_t v25 = v35;
        uint64_t v32 = v36;
        uint64_t v33 = v37;
        sub_1DFDFA560();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v13);
      }
      uint64_t v27 = v40;
      uint64_t v28 = v41;
      char v21 = v42;
    }
    else
    {
      LOBYTE(v40) = 1;
      sub_1DF6BE654();
      sub_1DFDFFD90();
      sub_1DFDFA560();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v18);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v13);
      uint64_t v27 = v40;
      uint64_t v28 = v41;
      uint64_t v25 = v35;
    }
    *(void *)uint64_t v25 = v27;
    *(void *)(v25 + 8) = v28;
    *(unsigned char *)(v25 + 16) = v21;
    uint64_t v19 = (uint64_t)v39;
  }
  return __swift_destroy_boxed_opaque_existential_1(v19);
}

void sub_1DF6BE54C()
{
  if (!qword_1EBAE9CC8)
  {
    unint64_t v0 = sub_1DFDFA570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9CC8);
    }
  }
}

unint64_t sub_1DF6BE5AC()
{
  unint64_t result = qword_1EBAD9A88;
  if (!qword_1EBAD9A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9A88);
  }
  return result;
}

unint64_t sub_1DF6BE600()
{
  unint64_t result = qword_1EBAD9AA8;
  if (!qword_1EBAD9AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9AA8);
  }
  return result;
}

unint64_t sub_1DF6BE654()
{
  unint64_t result = qword_1EBAE9CC0;
  if (!qword_1EBAE9CC0)
  {
    sub_1DF6BE54C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE9CC0);
  }
  return result;
}

uint64_t SportsLinksTagFeedLink.encode(to:)(void *a1)
{
  sub_1DF6BE8E0(0, &qword_1EAC2F990, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v12 - v7;
  uint64_t v9 = *v1;
  v12[1] = v1[1];
  void v12[2] = v9;
  int v10 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF6BE5AC();
  sub_1DFE001A0();
  if (v10)
  {
    if (v10 == 1)
    {
      char v17 = 1;
      char v16 = 0;
      sub_1DF6BE944();
      sub_1DFDFFE80();
      if (!v2)
      {
        char v15 = 1;
LABEL_9:
        sub_1DFDFFE40();
      }
    }
    else
    {
      char v20 = 2;
      char v19 = 0;
      sub_1DF6BE944();
      sub_1DFDFFE80();
      if (!v2)
      {
        char v18 = 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    __int16 v14 = 0;
    sub_1DF6BE944();
    sub_1DFDFFE80();
    if (!v2)
    {
      char v13 = 1;
      goto LABEL_9;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1DF6BE8E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF6BE5AC();
    unint64_t v7 = a3(a1, &type metadata for SportsLinksTagFeedLink.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DF6BE944()
{
  unint64_t result = qword_1EAC2F998;
  if (!qword_1EAC2F998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F998);
  }
  return result;
}

uint64_t sub_1DF6BE998@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF6BE9F8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF6BEA5C(uint64_t a1)
{
  unint64_t v2 = sub_1DF6BE5AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF6BEA98(uint64_t a1)
{
  unint64_t v2 = sub_1DF6BE5AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF6BEAD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF2A41BC(*a1, *a2);
}

uint64_t sub_1DF6BEAE0()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF6BEB84()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6BEC14()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF6BECB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF6BF218();
  *a1 = result;
  return result;
}

void sub_1DF6BECE4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE900000000000073;
  uint64_t v5 = 0x676E69646E617473;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7374656B63617262;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7365726F6373;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DF6BED44()
{
  return sub_1DFDFE1D0();
}

uint64_t sub_1DF6BEDA4()
{
  return sub_1DFDFE180();
}

uint64_t sub_1DF6BEDF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsLinksTagFeedLink.init(from:)(a1, a2);
}

uint64_t sub_1DF6BEE0C(void *a1)
{
  return SportsLinksTagFeedLink.encode(to:)(a1);
}

BOOL static SportsLinksTagFeedLink.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a2 + 16) == *(unsigned __int8 *)(a1 + 16);
}

BOOL sub_1DF6BEE38(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a2 + 16) == *(unsigned __int8 *)(a1 + 16);
}

ValueMetadata *type metadata accessor for SportsLinksTagFeedLink()
{
  return &type metadata for SportsLinksTagFeedLink;
}

unsigned char *storeEnumTagSinglePayload for SportsLinksTagFeedLink.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF6BEF28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsLinksTagFeedLink.CodingType()
{
  return &type metadata for SportsLinksTagFeedLink.CodingType;
}

unsigned char *storeEnumTagSinglePayload for SportsLinksTagFeedLink.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF6BF02CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsLinksTagFeedLink.CodingKeys()
{
  return &type metadata for SportsLinksTagFeedLink.CodingKeys;
}

unint64_t sub_1DF6BF068()
{
  unint64_t result = qword_1EAC2F9A0;
  if (!qword_1EAC2F9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F9A0);
  }
  return result;
}

unint64_t sub_1DF6BF0C0()
{
  unint64_t result = qword_1EAC2F9A8;
  if (!qword_1EAC2F9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F9A8);
  }
  return result;
}

unint64_t sub_1DF6BF118()
{
  unint64_t result = qword_1EBAD9A98;
  if (!qword_1EBAD9A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9A98);
  }
  return result;
}

unint64_t sub_1DF6BF170()
{
  unint64_t result = qword_1EBAD9A90;
  if (!qword_1EBAD9A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9A90);
  }
  return result;
}

unint64_t sub_1DF6BF1C4()
{
  unint64_t result = qword_1EBAD9AA0;
  if (!qword_1EBAD9AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9AA0);
  }
  return result;
}

uint64_t sub_1DF6BF218()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DF6BF264()
{
  type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  uint64_t v0 = sub_1DFDF8030();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F8F0];
  sub_1DEEE8484(0, (unint64_t *)&qword_1EBAEAF50, (unint64_t *)&unk_1EBAE9690, MEMORY[0x1E4F7F8F0], MEMORY[0x1E4FBBE00]);
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9690, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, v1);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B750;
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9980, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7FE90]);
  swift_allocObject();
  *(void *)(v7 + v6) = sub_1DFDF9140();
  uint64_t v8 = *(void (**)(unint64_t, void, uint64_t))(v4 + 104);
  v8(v7 + v6, *MEMORY[0x1E4F7F8E8], v3);
  uint64_t v9 = (uint64_t *)(v7 + v6 + v5);
  sub_1DF6C1818(0, &qword_1EBACBD50, MEMORY[0x1E4F80420], MEMORY[0x1E4FBBE00]);
  uint64_t v10 = sub_1DFDF98F0();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E4F80418], v10);
  uint64_t v14 = sub_1DF3C10DC(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *uint64_t v9 = v14;
  v8((unint64_t)v9, *MEMORY[0x1E4F7F8A8], v3);
  sub_1DF3DD820(v7);
  return v0;
}

uint64_t sub_1DF6BF61C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = v2;
  uint64_t v17 = a1;
  sub_1DFDF7010();
  sub_1DFDEE090();
  sub_1DF6C187C(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroupEmitter);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1DF6C1668((uint64_t)v7, v9 + v8);
  uint64_t v10 = (void *)sub_1DFDEDCE0();
  sub_1DEC3C690(0, &qword_1EBAE9740, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, sub_1DEBFF3E4, MEMORY[0x1E4F7FA98]);
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  sub_1DF6C187C(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroupEmitter);
  uint64_t v11 = swift_allocObject();
  sub_1DF6C1668((uint64_t)v7, v11 + v8);
  unint64_t v12 = (void *)sub_1DFDEDCE0();
  uint64_t v13 = sub_1DFDEDEE0();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1DF6BF86C(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF6C1818(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v61 = (char *)&v53 - v5;
  sub_1DF6C1818(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v3);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F760];
  uint64_t v56 = (char *)&v53 - v7;
  sub_1DEEE8484(0, (unint64_t *)&qword_1EBAE95E0, (unint64_t *)&qword_1EBACCB70, MEMORY[0x1E4F7F760], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v54 = (char *)&v53 - v9;
  uint64_t v10 = sub_1DFDFB960();
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v70 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v68 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAC10D4(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v53 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDF8C20();
  uint64_t v66 = *(void *)(v14 - 8);
  uint64_t v67 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v71 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  char v18 = (char *)&v53 - v17;
  uint64_t v19 = sub_1DFDFAA20();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SportsFavoritesTagFeedGroupConfigData();
  uint64_t v24 = v23 - 8;
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  uint64_t v28 = (void *)(a1 + *(int *)(v27 + 24));
  uint64_t v29 = v28[3];
  uint64_t v58 = v28[4];
  uint64_t v59 = v29;
  uint64_t v60 = __swift_project_boxed_opaque_existential_1(v28, v29);
  sub_1DF6C07B0();
  sub_1DFDF73B0();
  uint64_t v30 = &v26[*(int *)(v24 + 28)];
  uint64_t v62 = v22;
  uint64_t v63 = v20;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v64 = v19;
  v31(v22, v30, v19);
  uint64_t v65 = v18;
  sub_1DFDF7360();
  sub_1DFDF7360();
  uint64_t v32 = sub_1DFDF7CB0();
  uint64_t v33 = (uint64_t)v53;
  (*(void (**)(void))(*(void *)(v32 - 8) + 56))();
  uint64_t v34 = a1 + *(int *)(v27 + 20);
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, v55);
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 - 8);
  uint64_t v38 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v54, v34, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
  swift_retain();
  sub_1DFDF87F0();
  id v39 = *(id *)(v73 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  uint64_t v40 = sub_1DFDFC340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v56, 1, 1, v40);
  LOBYTE(v72) = 12;
  uint64_t v41 = v61;
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9F30, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F81400]);
  swift_allocObject();
  sub_1DFDFC5C0();
  sub_1DFDF87F0();
  sub_1DEE821D4();
  swift_release();
  sub_1DFDF87F0();
  id v42 = *(id *)(v72 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1DFDFC5F0();
  swift_allocObject();
  sub_1DFDFC5E0();
  uint64_t v43 = sub_1DFDFB640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v41, 1, 1, v43);
  uint64_t v44 = qword_1EBAEA6E8;
  (id)*MEMORY[0x1E4F7E018];
  if (v44 != -1) {
    swift_once();
  }
  (id)qword_1EBB63310;
  uint64_t v45 = (uint64_t)v68;
  sub_1DFDFB930();
  uint64_t v46 = (uint64_t)v62;
  uint64_t v47 = (uint64_t)v65;
  uint64_t v48 = v71;
  uint64_t v49 = sub_1DF11A6A4((uint64_t)v62, 1936154996, 0xE400000000000000, (uint64_t)v65, v71, MEMORY[0x1E4FBC860], v33, v45, v59, v58);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v45, v70);
  sub_1DF6C17B8(v33, (uint64_t (*)(void))sub_1DEAC10D4);
  uint64_t v50 = v67;
  uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v51(v48, v67);
  v51(v47, v50);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v46, v64);
  return v49;
}

uint64_t sub_1DF6C00C4(uint64_t a1)
{
  sub_1DEC3C690(0, &qword_1EBAE9740, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, sub_1DEBFF3E4, MEMORY[0x1E4F7FA98]);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v11 - v3;
  uint64_t v5 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF7010();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, a1, v8);
  swift_storeEnumTagMultiPayload();
  sub_1DF6C187C((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1DEC12448();
  swift_allocObject();
  uint64_t v9 = sub_1DFDEDE90();
  sub_1DF6C17B8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
  return v9;
}

uint64_t sub_1DF6C029C()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  type metadata accessor for TagFeedGroup();
  sub_1DEBFF3E4();
  return sub_1DFDF88D0();
}

uint64_t sub_1DF6C0360()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DF6C03E0@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF6C07B0();
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocBox();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0x2000000000000006;
  return result;
}

uint64_t sub_1DF6C0460@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  a2[4] = sub_1DF6C087C(&qword_1EBAE3A20, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupKnobs);
  a2[5] = sub_1DF6C087C(&qword_1EAC2F9B0, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DF6C187C(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroupKnobs);
}

uint64_t sub_1DF6C052C()
{
  sub_1DF6C07B0();
  return sub_1DFDF7340();
}

uint64_t sub_1DF6C0558@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF6C1818(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DF6C07B0();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DF6C08C4(0);
  a1[3] = v5;
  a1[4] = sub_1DF6C087C(&qword_1EBAD2748, sub_1DF6C08C4);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF6C06B0()
{
  sub_1DF6C087C(&qword_1EBAE4ED8, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF6C071C()
{
  return sub_1DF6C087C(&qword_1EBAE4EE0, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter);
}

uint64_t type metadata accessor for SportsFavoritesTagFeedGroupEmitter()
{
  uint64_t result = qword_1EBAE4EE8;
  if (!qword_1EBAE4EE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF6C07B0()
{
  if (!qword_1EBAE9440)
  {
    type metadata accessor for SportsFavoritesTagFeedGroupConfigData();
    sub_1DF6C087C(&qword_1EBAE73A8, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupConfigData);
    sub_1DF6C087C(&qword_1EBAE73A0, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupConfigData);
    unint64_t v0 = sub_1DFDF7430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9440);
    }
  }
}

uint64_t sub_1DF6C087C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF6C08C4(uint64_t a1)
{
}

uint64_t *sub_1DF6C08F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DF6C07B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
    *(void *)&v9[*(int *)(v12 + 20)] = *(void *)&v10[*(int *)(v12 + 20)];
    *(void *)&v9[*(int *)(v12 + 24)] = *(void *)&v10[*(int *)(v12 + 24)];
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    long long v16 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v16;
    uint64_t v17 = v16;
    char v18 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    swift_retain();
    v18(v14, v15, v17);
    uint64_t v19 = a3[7];
    uint64_t v20 = (uint64_t *)((char *)a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DF6C0B04(uint64_t a1, uint64_t a2)
{
  sub_1DF6C07B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF6C0C38(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6C07B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  uint64_t v16 = v15;
  uint64_t v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  swift_retain();
  v17(v13, v14, v16);
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DF6C0DF4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6C07B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  swift_retain();
  swift_release();
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF6C0F80(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6C07B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_1DF6C10C8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DF6C07B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEC3C690(0, (unint64_t *)&qword_1EBACCB70, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  swift_release();
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF6C1240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF6C1254);
}

uint64_t sub_1DF6C1254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DF6C07B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DF6C136C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF6C1380);
}

uint64_t sub_1DF6C1380(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DF6C07B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DF6C1494()
{
  sub_1DF6C07B0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsFavoritesTagFeedGroupKnobs();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DF6C1570()
{
  return sub_1DF6C087C(&qword_1EBAE4ED0, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter);
}

uint64_t sub_1DF6C15B8()
{
  return sub_1DF6C087C(&qword_1EBAE4ED8, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter);
}

uint64_t sub_1DF6C1600()
{
  return sub_1DF6C087C(&qword_1EBAF8490, (void (*)(uint64_t))type metadata accessor for SportsFavoritesTagFeedGroupEmitter);
}

uint64_t sub_1DF6C1648()
{
  return sub_1DF6BF86C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DF6C1668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsFavoritesTagFeedGroupEmitter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF6C16CC(uint64_t a1)
{
  return sub_1DF6C00C4(a1);
}

uint64_t sub_1DF6C173C()
{
  return sub_1DF6C029C();
}

uint64_t sub_1DF6C17B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DF6C1818(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF6C187C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t destroy for ChannelPickerUpdateBlueprintModifier()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChannelPickerUpdateBlueprintModifier(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ChannelPickerUpdateBlueprintModifier(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v5;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ChannelPickerUpdateBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ChannelPickerUpdateBlueprintModifier()
{
  return &type metadata for ChannelPickerUpdateBlueprintModifier;
}

uint64_t sub_1DF6C1A6C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v29 = a3;
  uint64_t v30 = a2;
  v23[1] = a1;
  uint64_t v26 = sub_1DFDF1930();
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEDBEC68(0, &qword_1EAC23C98, MEMORY[0x1E4FACA00]);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - v9;
  sub_1DEDBEB38();
  MEMORY[0x1F4188790](v11 - 8);
  sub_1DEDBEC68(0, (unint64_t *)&qword_1EAC20250, MEMORY[0x1E4FAD830]);
  uint64_t v24 = *(void *)(v12 - 8);
  uint64_t v25 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v23 - v13;
  sub_1DF6C2F64((uint64_t)(v3 + 4), (uint64_t)v31);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1DEBB1F30((uint64_t)v31);
  uint64_t v15 = sub_1DF6C38BC(a1, v3);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1DEBA2BAC((uint64_t)v31);
  uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC180];
  sub_1DEDBEC68(0, (unint64_t *)&qword_1EAC20220, MEMORY[0x1E4FAC180]);
  uint64_t v18 = v17;
  uint64_t v19 = sub_1DEDBEC24(&qword_1EAC23CA8, (unint64_t *)&qword_1EAC20220, v16);
  uint64_t v20 = sub_1DEDBEC24(&qword_1EAC23CB0, (unint64_t *)&qword_1EAC20220, v16);
  MEMORY[0x1E01DBA90](v15, v18, v19, v20);
  type metadata accessor for ChannelPickerElementModel();
  sub_1DEB0C244();
  sub_1DEDBF8D0((unint64_t *)&unk_1EAC20230, (void (*)(uint64_t))type metadata accessor for ChannelPickerElementModel);
  sub_1DFDF5A70();
  uint64_t v21 = v26;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAC298], v26);
  sub_1DFDF3040();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  v30(v10);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v25);
}

uint64_t sub_1DF6C1EB8@<X0>(void (**a1)(char *, char *, uint64_t)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DEDBF804();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1DEDBEC68(0, (unint64_t *)&qword_1EAC20220, MEMORY[0x1E4FAC180]);
  sub_1DFDF14D0();
  sub_1DEB53AB0(&v24, v25);
  sub_1DEB53AB0(v25, v26);
  if (sub_1DEB539B0((uint64_t)v26) == 1)
  {
    uint64_t v7 = (unsigned char *)sub_1DEB539BC((uint64_t)v26);
    switch(v7[33])
    {
      case 1:
        memcpy(v23, v7, 0x151uLL);
        sub_1DF6C2358((unint64_t)a1, (uint64_t)v23, a3);
        break;
      case 3:
        sub_1DFDF14D0();
        sub_1DEB53AB0(v22, v23);
        sub_1DEB53AB0(v23, v21);
        uint64_t v15 = *a2;
        sub_1DF6C2F64((uint64_t)(a2 + 4), (uint64_t)v27);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        sub_1DEBB1F30((uint64_t)v27);
        unint64_t v16 = sub_1DF6C302C(a1, v15);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        sub_1DEBA2BAC((uint64_t)v27);
        sub_1DEC81854();
        uint64_t v18 = v17;
        uint64_t v19 = sub_1DEDBF8D0(&qword_1EAC23CC0, (void (*)(uint64_t))sub_1DEC81854);
        uint64_t v20 = sub_1DEDBF8D0(&qword_1EAC23CC8, (void (*)(uint64_t))sub_1DEC81854);
        MEMORY[0x1E01DBA90](v16, v18, v19, v20);
        type metadata accessor for ChannelPickerElementModel();
        sub_1DEB0C244();
        sub_1DEDBF8D0((unint64_t *)&unk_1EAC20230, (void (*)(uint64_t))type metadata accessor for ChannelPickerElementModel);
        sub_1DFDF14C0();
        break;
      default:
        sub_1DF1A5C7C((uint64_t)v25);
        sub_1DFDF14D0();
        sub_1DEB53AB0(v22, v23);
        sub_1DEB53AB0(v23, v21);
        sub_1DFDF1510();
        goto LABEL_5;
    }
    return sub_1DF1A5C7C((uint64_t)v25);
  }
  else
  {
    sub_1DEB539BC((uint64_t)v26);
    sub_1DF1A5C7C((uint64_t)v25);
    sub_1DFDF14D0();
    sub_1DEB53AB0(v22, v23);
    sub_1DEB53AB0(v23, v21);
    uint64_t v8 = *a2;
    sub_1DF6C2F64((uint64_t)(a2 + 4), (uint64_t)v27);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    sub_1DEBB1F30((uint64_t)v27);
    unint64_t v9 = sub_1DF6C302C(a1, v8);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_1DEBA2BAC((uint64_t)v27);
    sub_1DEC81854();
    uint64_t v11 = v10;
    uint64_t v12 = sub_1DEDBF8D0(&qword_1EAC23CC0, (void (*)(uint64_t))sub_1DEC81854);
    uint64_t v13 = sub_1DEDBF8D0(&qword_1EAC23CC8, (void (*)(uint64_t))sub_1DEC81854);
    MEMORY[0x1E01DBA90](v9, v11, v12, v13);
LABEL_5:
    type metadata accessor for ChannelPickerElementModel();
    sub_1DEB0C244();
    sub_1DEDBF8D0((unint64_t *)&unk_1EAC20230, (void (*)(uint64_t))type metadata accessor for ChannelPickerElementModel);
    return sub_1DFDF14C0();
  }
}

uint64_t sub_1DF6C2358@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DEDBF804();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC81854();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v59 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ChannelPickerElementModel();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v55 = (uint64_t)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (long long *)((char *)v50 - v16);
  MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)v50 - v19;
  uint64_t v21 = *(void *)(a2 + 72);
  if (*(unsigned char *)(a2 + 80)) {
    uint64_t v21 = 0;
  }
  if (!*(unsigned char *)(a2 + 96)) {
    uint64_t v21 = *(void *)(a2 + 88);
  }
  if (*(unsigned char *)(a2 + 112)) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = *(void *)(a2 + 104);
  }
  if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63)
  {
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v51 = v18;
  uint64_t v52 = v9;
  uint64_t v23 = *v3;
  uint64_t v53 = v21 * v22;
  uint64_t v54 = v3;
  uint64_t v24 = v3[4];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  unint64_t v60 = sub_1DF6C302C((void (**)(char *, char *, uint64_t))a1, v23);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v24)
  {
    v50[1] = a3;
    uint64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      unint64_t v58 = a1;
      uint64_t v26 = v24 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
      uint64_t v27 = *(void *)(v51 + 72);
      uint64_t v51 = v56 + 32;
      v50[0] = v24;
      swift_bridgeObjectRetain();
      do
      {
        sub_1DEB402FC(v26, (uint64_t)v20);
        sub_1DEB402FC((uint64_t)v20, (uint64_t)v17);
        uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch((int)EnumCaseMultiPayload)
        {
          case 1:
            sub_1DF6C3C08((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ChannelPickerElementModel);
            long long v37 = v17[7];
            v68[1] = v17[6];
            v68[2] = v37;
            v69[0] = v17[8];
            *(_OWORD *)((char *)v69 + 9) = *(long long *)((char *)v17 + 137);
            long long v38 = v17[3];
            long long v65 = v17[2];
            long long v66 = v38;
            long long v39 = v17[5];
            long long v67 = v17[4];
            v68[0] = v39;
            long long v40 = v17[1];
            long long v63 = *v17;
            long long v64 = v40;
            sub_1DEB40418((uint64_t)&v63);
            break;
          case 2:
          case 3:
            sub_1DF6C3C08((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ChannelPickerElementModel);
            uint64_t v28 = (uint64_t)v17;
            goto LABEL_13;
          default:
            long long v30 = v17[5];
            long long v67 = v17[4];
            v68[0] = v30;
            *(_OWORD *)((char *)v68 + 9) = *(long long *)((char *)v17 + 89);
            long long v31 = v17[1];
            long long v63 = *v17;
            long long v64 = v31;
            long long v32 = v17[3];
            long long v65 = v17[2];
            long long v66 = v32;
            MEMORY[0x1F4188790](EnumCaseMultiPayload);
            v50[-2] = v20;
            if (!sub_1DEB46E94((uint64_t (*)(char *))sub_1DF6C3C68, (uint64_t)&v50[-4]))
            {
              sub_1DF6C2BBC(&v63, (uint64_t)v62);
              sub_1DEDBFA6C((uint64_t)v62, v55);
              swift_storeEnumTagMultiPayload();
              sub_1DEDBF8D0((unint64_t *)&unk_1EAC20230, (void (*)(uint64_t))type metadata accessor for ChannelPickerElementModel);
              sub_1DFDF0B40();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v60 = sub_1DEE1892C(0, *(void *)(v60 + 16) + 1, 1, v60);
              }
              unint64_t v34 = *(void *)(v60 + 16);
              unint64_t v33 = *(void *)(v60 + 24);
              if (v34 >= v33 >> 1) {
                unint64_t v60 = sub_1DEE1892C(v33 > 1, v34 + 1, 1, v60);
              }
              uint64_t v35 = v59;
              unint64_t v36 = v60;
              *(void *)(v60 + 16) = v34 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v36+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v34, v35, v57);
              sub_1DEB40524((uint64_t)v62);
            }
            sub_1DEB40524((uint64_t)&v63);
            uint64_t v28 = (uint64_t)v20;
LABEL_13:
            sub_1DF6C3C08(v28, (uint64_t (*)(void))type metadata accessor for ChannelPickerElementModel);
            break;
        }
        v26 += v27;
        --v25;
      }
      while (v25);
      swift_bridgeObjectRelease();
    }
  }
  sub_1DEDBEC68(0, (unint64_t *)&qword_1EAC20220, MEMORY[0x1E4FAC180]);
  sub_1DFDF14D0();
  sub_1DEB53AB0(v62, &v63);
  sub_1DEB53AB0(&v63, &v61);
  long long v3 = (uint64_t *)sub_1DEC77C94(v53, v60);
  a2 = v41;
  uint64_t v17 = v42;
  a1 = v43;
  if ((v43 & 1) == 0) {
    goto LABEL_26;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain_n();
  uint64_t v45 = swift_dynamicCastClass();
  if (!v45)
  {
    swift_unknownObjectRelease();
    uint64_t v45 = MEMORY[0x1E4FBC860];
  }
  uint64_t v46 = *(void *)(v45 + 16);
  swift_release();
  if (__OFSUB__(a1 >> 1, v17)) {
    goto LABEL_35;
  }
  if (v46 != (a1 >> 1) - (void)v17)
  {
LABEL_36:
    swift_unknownObjectRelease();
LABEL_26:
    uint64_t v44 = sub_1DEC7AAF0((uint64_t)v3, a2, (uint64_t)v17, a1);
    goto LABEL_33;
  }
  uint64_t v44 = swift_dynamicCastClass();
  if (!v44)
  {
    swift_unknownObjectRelease();
    uint64_t v44 = MEMORY[0x1E4FBC860];
  }
LABEL_33:
  swift_unknownObjectRelease();
  uint64_t v47 = sub_1DEDBF8D0(&qword_1EAC23CC0, (void (*)(uint64_t))sub_1DEC81854);
  uint64_t v48 = sub_1DEDBF8D0(&qword_1EAC23CC8, (void (*)(uint64_t))sub_1DEC81854);
  MEMORY[0x1E01DBA90](v44, v57, v47, v48);
  sub_1DEB0C244();
  sub_1DEDBF8D0((unint64_t *)&unk_1EAC20230, (void (*)(uint64_t))type metadata accessor for ChannelPickerElementModel);
  return sub_1DFDF14C0();
}

uint64_t sub_1DF6C2AA8()
{
  uint64_t v0 = type metadata accessor for ChannelPickerElementModel();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC81854();
  sub_1DFDF0B50();
  uint64_t v3 = ChannelPickerElementModel.identifier.getter();
  uint64_t v5 = v4;
  sub_1DF6C3C08((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ChannelPickerElementModel);
  if (v3 == ChannelPickerElementModel.identifier.getter() && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DFDFFF50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DF6C2BBC@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  uint64_t v9 = sub_1DFDECC00();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  uint64_t v12 = sub_1DF08870C(v9, v11, 0);
  swift_bridgeObjectRelease();
  if (v12)
  {
    uint64_t v16 = type metadata accessor for TagModel();
    uint64_t v17 = sub_1DEDBF8D0(&qword_1EAC2BA10, (void (*)(uint64_t))type metadata accessor for TagModel);
    *(void *)&long long v15 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1DE942EC4(&v15, (uint64_t)a1);
  }
  return sub_1DEDBFA6C((uint64_t)a1, a2);
}

uint64_t sub_1DF6C2D58()
{
  sub_1DF6C3C88(0, (unint64_t *)&qword_1EBAF3230, MEMORY[0x1E4FAC8B8], MEMORY[0x1E4FBBE00]);
  uint64_t v0 = sub_1DFDF2C50();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E4FAC8A0], v0);
  uint64_t v4 = sub_1DF3C05E8(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_1DF6C2E94(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  return sub_1DF6C1A6C(a1, a2, a3);
}

uint64_t sub_1DF6C2ED0(uint64_t a1)
{
  unint64_t v2 = sub_1DF6C3CEC();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DF6C2F10()
{
  unint64_t result = qword_1EAC2F9B8;
  if (!qword_1EAC2F9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F9B8);
  }
  return result;
}

uint64_t sub_1DF6C2F64(uint64_t a1, uint64_t a2)
{
  sub_1DF6C3C88(0, &qword_1EAC2F9C0, (uint64_t (*)(uint64_t))sub_1DF6C2FF8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DF6C2FF8(uint64_t a1)
{
}

unint64_t sub_1DF6C302C(void (**a1)(char *, char *, uint64_t), uint64_t a2)
{
  uint64_t v66 = a2;
  double v97 = a1;
  uint64_t v84 = type metadata accessor for ChannelPickerElementModel();
  uint64_t v2 = MEMORY[0x1F4188790](v84);
  uint64_t v65 = (uint64_t)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  unint64_t v77 = (char *)&v64 - v4;
  sub_1DEDBF918(0);
  MEMORY[0x1F4188790](v5 - 8);
  int64_t v83 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC81854();
  uint64_t v8 = v7;
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v80 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  long long v67 = (char *)&v64 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v79 = (char *)&v64 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v81 = (char *)&v64 - v15;
  uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC180];
  sub_1DEDBEC68(0, (unint64_t *)&qword_1EAC20220, MEMORY[0x1E4FAC180]);
  uint64_t v18 = v17;
  unint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v64 - v20;
  sub_1DEB49930(0);
  uint64_t v23 = v22 - 8;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v82 = v19;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  unint64_t v26 = v19 + 16;
  unint64_t v78 = v27;
  v27(v21, (uint64_t)v97, v18);
  sub_1DEDBEC24((unint64_t *)&unk_1EAC20960, (unint64_t *)&qword_1EAC20220, v16);
  sub_1DFDFDFB0();
  uint64_t v28 = v25;
  uint64_t v29 = &v25[*(int *)(v23 + 44)];
  sub_1DEDBEC24(&qword_1EAC20270, (unint64_t *)&qword_1EAC20220, v16);
  uint64_t v30 = *(void *)v29;
  sub_1DFDFE720();
  if (v30 == (void)v89)
  {
    unint64_t v82 = MEMORY[0x1E4FBC860];
    uint64_t v31 = (uint64_t)v28;
  }
  else
  {
    unint64_t v74 = v26;
    unint64_t v76 = v21;
    uint64_t v85 = (void (**)(char *))(v68 + 16);
    uint64_t v72 = (void (**)(char *, uint64_t))(v82 + 8);
    unint64_t v33 = v29;
    uint64_t v31 = (uint64_t)v28;
    double v97 = (void (**)(char *, char *, uint64_t))(v68 + 32);
    uint64_t v70 = (void (**)(char *, uint64_t))(v68 + 8);
    uint64_t v71 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56);
    uint64_t v69 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
    unint64_t v82 = MEMORY[0x1E4FBC860];
    unint64_t v34 = v81;
    uint64_t v75 = (uint64_t)v28;
    uint64_t v73 = v33;
    do
    {
      long long v37 = (void (*)(long long *, void))sub_1DFDFE760();
      long long v38 = *v85;
      (*v85)(v34);
      v37(&v89, 0);
      long long v39 = v76;
      v78(v76, v31, v18);
      sub_1DFDFE730();
      (*v72)(v39, v18);
      long long v40 = v34;
      uint64_t v41 = *v97;
      id v42 = v79;
      (*v97)(v79, v40, v8);
      unint64_t v43 = (long long *)v77;
      sub_1DFDF0B50();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v45 = (uint64_t)v83;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          long long v52 = v43[7];
          *(_OWORD *)&v94[16] = v43[6];
          long long v95 = v52;
          v96[0] = v43[8];
          *(_OWORD *)((char *)v96 + 9) = *(long long *)((char *)v43 + 137);
          long long v53 = v43[3];
          long long v91 = v43[2];
          long long v92 = v53;
          long long v54 = v43[5];
          long long v93 = v43[4];
          *(_OWORD *)uint64_t v94 = v54;
          long long v55 = v43[1];
          long long v89 = *v43;
          long long v90 = v55;
          sub_1DEB40418((uint64_t)&v89);
          goto LABEL_13;
        case 2:
        case 3:
          sub_1DF6C3C08((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for ChannelPickerElementModel);
LABEL_13:
          ((void (*)(uint64_t, char *, uint64_t))v38)(v45, v42, v8);
          break;
        default:
          long long v46 = v43[5];
          long long v93 = v43[4];
          *(_OWORD *)uint64_t v94 = v46;
          *(_OWORD *)&v94[9] = *(long long *)((char *)v43 + 89);
          long long v47 = v43[1];
          long long v89 = *v43;
          long long v90 = v47;
          long long v48 = v43[3];
          long long v91 = v43[2];
          long long v92 = v48;
          uint64_t v49 = sub_1DFDF0B10();
          uint64_t v51 = sub_1DF08870C(v49, v50, 0);
          swift_bridgeObjectRelease();
          if (v51)
          {
            uint64_t v87 = type metadata accessor for TagModel();
            uint64_t v88 = sub_1DEDBF8D0(&qword_1EAC2BA10, (void (*)(uint64_t))type metadata accessor for TagModel);
            *(void *)&long long v86 = v51;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
            sub_1DE942EC4(&v86, (uint64_t)&v89);
          }
          sub_1DEDBFA6C((uint64_t)&v89, (uint64_t)&v86);
          sub_1DEDBFA6C((uint64_t)&v86, v65);
          swift_storeEnumTagMultiPayload();
          sub_1DEDBF8D0((unint64_t *)&unk_1EAC20230, (void (*)(uint64_t))type metadata accessor for ChannelPickerElementModel);
          uint64_t v45 = (uint64_t)v83;
          sub_1DFDF0B40();
          sub_1DEB40524((uint64_t)&v86);
          sub_1DEB40524((uint64_t)&v89);
          break;
      }
      (*v71)(v45, 0, 1, v8);
      (*v70)(v42, v8);
      if ((*v69)(v45, 1, v8) == 1)
      {
        sub_1DF6C3C08(v45, (uint64_t (*)(void))sub_1DEDBF918);
        uint64_t v35 = v73;
      }
      else
      {
        uint64_t v56 = v67;
        v41(v67, (char *)v45, v8);
        v41(v80, v56, v8);
        unint64_t v57 = v82;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v35 = v73;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v57 = sub_1DEE1892C(0, *(void *)(v57 + 16) + 1, 1, v57);
        }
        unint64_t v60 = *(void *)(v57 + 16);
        unint64_t v59 = *(void *)(v57 + 24);
        uint64_t v61 = v68;
        if (v60 >= v59 >> 1)
        {
          uint64_t v63 = sub_1DEE1892C(v59 > 1, v60 + 1, 1, v57);
          uint64_t v61 = v68;
          unint64_t v57 = v63;
        }
        *(void *)(v57 + 16) = v60 + 1;
        unint64_t v62 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
        unint64_t v82 = v57;
        v41((char *)(v57 + v62 + *(void *)(v61 + 72) * v60), v80, v8);
      }
      uint64_t v36 = *(void *)v35;
      uint64_t v31 = v75;
      sub_1DFDFE720();
      unint64_t v34 = v81;
    }
    while (v36 != (void)v89);
  }
  sub_1DF6C3C08(v31, (uint64_t (*)(void))sub_1DEB49930);
  return v82;
}

uint64_t sub_1DF6C38BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  unint64_t v26 = a2;
  sub_1DEDBEC68(0, (unint64_t *)&qword_1EAC20220, MEMORY[0x1E4FAC180]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (void (**)(char *, char *, uint64_t))((char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v27 = (uint64_t)v23 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAD830];
  sub_1DEDBEC68(0, (unint64_t *)&qword_1EAC20250, MEMORY[0x1E4FAD830]);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v28 = sub_1DEDBEC24(&qword_1EAC26990, (unint64_t *)&qword_1EAC20250, v13);
  uint64_t v16 = sub_1DFDFE6F0();
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (!v16) {
    return v17;
  }
  uint64_t v18 = v16;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1DEDF6EAC(0, v16 & ~(v16 >> 63), 0);
  uint64_t result = sub_1DFDFE6A0();
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = (void (**)(void (**)(char *, char *, uint64_t), uint64_t))(v7 + 8);
    uint64_t v25 = (void (**)(void (**)(char *, char *, uint64_t)))(v7 + 16);
    v23[1] = v7 + 32;
    void v23[2] = v15;
    v23[3] = a1;
    while (1)
    {
      uint64_t v20 = (void (*)(unsigned char *, void))sub_1DFDFE760();
      (*v25)(v10);
      v20(v29, 0);
      sub_1DF6C1EB8(v10, v26, v27);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      (*v24)(v10, v6);
      uint64_t v17 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF6EAC(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v30;
      }
      unint64_t v22 = *(void *)(v17 + 16);
      unint64_t v21 = *(void *)(v17 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1DEDF6EAC(v21 > 1, v22 + 1, 1);
        uint64_t v17 = v30;
      }
      *(void *)(v17 + 16) = v22 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v17+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v22, v27, v6);
      uint64_t v30 = v17;
      sub_1DFDFE730();
      if (!--v18) {
        return v17;
      }
    }
    (*v24)(v10, v6);
    swift_release();
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF6C3C08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF6C3C68()
{
  return sub_1DF6C2AA8() & 1;
}

void sub_1DF6C3C88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1DF6C3CEC()
{
  unint64_t result = qword_1EAC2F9C8;
  if (!qword_1EAC2F9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F9C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TagFeedPrewarmResult()
{
  return &type metadata for TagFeedPrewarmResult;
}

uint64_t sub_1DF6C3D50(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1DF6C3F48();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1DFDEE090();
    uint64_t v1 = (void *)sub_1DFDEDCE0();
    type metadata accessor for TagFeedServiceConfig();
    uint64_t v2 = sub_1DFDEDE00();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return v2;
  }
  else
  {
    sub_1DF6C3FAC();
    swift_allocError();
    *uint64_t v4 = 0;
    sub_1DF200A60();
    swift_allocObject();
    return sub_1DFDEDE70();
  }
}

uint64_t sub_1DF6C3EB4()
{
  type metadata accessor for TagFeedServiceConfig();
  sub_1DEAD9D10();
  sub_1DFDF8B10();
  uint64_t v0 = sub_1DFDF7EE0();
  swift_release();
  return v0;
}

uint64_t sub_1DF6C3F28()
{
  return sub_1DF6C3EB4();
}

void sub_1DF6C3F48()
{
  if (!qword_1EBACCB90)
  {
    type metadata accessor for TagFeedServiceConfig();
    sub_1DEAD9D10();
    unint64_t v0 = sub_1DFDF9C50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACCB90);
    }
  }
}

unint64_t sub_1DF6C3FAC()
{
  unint64_t result = qword_1EAC2F9D0;
  if (!qword_1EAC2F9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F9D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TagFeedPrewarmResult.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF6C40CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagFeedPrewarmResult.Errors()
{
  return &type metadata for TagFeedPrewarmResult.Errors;
}

unint64_t sub_1DF6C4108()
{
  unint64_t result = qword_1EAC2F9D8;
  if (!qword_1EAC2F9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F9D8);
  }
  return result;
}

id static FCIssue.stub(identifier:type:title:publicationDate:isPaid:sourceChannel:notificationDescription:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, void *a8, uint64_t a9, uint64_t a10)
{
  int v49 = a7;
  uint64_t v40 = a6;
  uint64_t v44 = a5;
  uint64_t v45 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v50 = a1;
  id v47 = a8;
  uint64_t v48 = a9;
  sub_1DEA83C40();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDE7600();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v46 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v39 = *(void (**)(void))(v14 + 16);
  v39();
  id v16 = objc_allocWithZone(MEMORY[0x1E4F7E268]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v43 = objc_msgSend(v16, sel_init);
  id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E268]), sel_init);
  uint64_t v17 = self;
  id v41 = objc_msgSend(v17, sel_blackColor);
  id v38 = objc_msgSend(v17, sel_whiteColor);
  id v37 = objc_msgSend(v17, sel_blackColor);
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E328]), sel_initWithRed_green_blue_alpha_, 1.0, 0.0, 0.0, 1.0);
  id v19 = objc_msgSend(v17, sel_blackColor);
  sub_1DEAB957C();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1DFE0B250;
  *(void *)(v20 + 32) = sub_1DFDFDD20();
  *(void *)(v20 + 40) = v21;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1DFDEDD70();
  uint64_t v24 = v23;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v12, v40, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  id v25 = objc_allocWithZone(MEMORY[0x1E4F7E4F8]);
  id v26 = v47;
  uint64_t v36 = v25;
  uint64_t v34 = v22;
  uint64_t v35 = v24;
  id v27 = v37;
  id v28 = v38;
  id v29 = v41;
  id v30 = v42;
  id v31 = v43;
  id v32 = sub_1DF6C4514(1.0, 1.0, v50, v45, v51, v52, v44, v46, 0x6964452062757453, 0xEC0000006E6F6974, (uint64_t)v43, (uint64_t)v42, (uint64_t)v41, (uint64_t)v38, (uint64_t)v37, (uint64_t)v18, 32123, 0xE200000000000000, (uint64_t)v19,
          0,
          v49,
          0,
          MEMORY[0x1E4FBC860],
          0,
          0xE000000000000000,
          v20,
          MEMORY[0x1E4FBC860],
          MEMORY[0x1E4FBC860],
          (uint64_t)v26,
          v48,
          a10,
          v34,
          v35,
          (uint64_t)v12,
          v36);

  return v32;
}

id sub_1DF6C4514(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35)
{
  long long v54 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  long long v53 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v57 = a8;
  uint64_t v52 = (void *)sub_1DFDE74D0();
  uint64_t v51 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v48 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v50 = (void *)sub_1DFDFE200();
  swift_bridgeObjectRelease();
  id v47 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  if (a26)
  {
    int v49 = (void *)sub_1DFDFE200();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v49 = 0;
  }
  if (a27)
  {
    id v38 = (void *)sub_1DFDFE200();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v38 = 0;
  }
  long long v39 = (void *)sub_1DFDFE200();
  swift_bridgeObjectRelease();
  uint64_t v40 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v41 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_1DFDE7600();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v58 = v42;
  uint64_t v44 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v43 + 48))(a34, 1) != 1)
  {
    uint64_t v44 = (void *)sub_1DFDE74D0();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(a34, v58);
  }
  BYTE2(v46) = a21 & 1;
  LOWORD(v46) = a20 & 0x101;
  id v56 = objc_msgSend(a35, sel_initWithIdentifier_type_title_publicationDate_coverDate_metadataJSONAssetHandle_coverImageAssetHandle_coverImageAspectRatio_coverImagePrimaryColor_coverImageBackgroundColor_coverImageTextColor_coverImageAccentColor_layeredCoverJSON_layeredCoverAspectRatio_layeredCoverPrimaryColor_isCurrent_isDraft_isPaid_minimumNewsVersion_allArticleIDs_coverArticleID_allowedStorefrontIDs_blockedStorefrontIDs_topicTagIDs_sourceChannel_notificationDescription_issueDescription_sortDate_, v54, a5, v53, v52, v51, a11, a1, a2, a12, a13, a14, a15, a16, v48, a19, v46, a22,
          v50,
          v47,
          v49,
          v38,
          v39,
          a29,
          v40,
          v41,
          v44);

  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v57, v58);
  return v56;
}

uint64_t sub_1DF6C4944@<X0>(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  if (!*a1)
  {
    swift_getObjectType();
    sub_1DFDF55A0();
    sub_1DFDF1BC0();
    if (v3)
    {

      uint64_t result = swift_release();
      char v6 = 1;
LABEL_8:
      *a3 = v6;
      return result;
    }
    uint64_t result = swift_release();
LABEL_7:
    char v6 = 0;
    goto LABEL_8;
  }
  if (*a1 == 1)
  {
    uint64_t v7 = a2[10];
    uint64_t v8 = a2[11];
    __swift_project_boxed_opaque_existential_1(a2 + 7, v7);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(1, v7, v8);
    goto LABEL_7;
  }
  uint64_t result = sub_1DFDFFBB0();
  __break(1u);
  return result;
}

id sub_1DF6C4A78(void *a1, void *a2)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  if (objc_msgSend(a1, sel_isPuzzleHub))
  {
    uint64_t v4 = a2[10];
    uint64_t v5 = a2[11];
    __swift_project_boxed_opaque_existential_1(a2 + 7, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(1, 1, v4, v5);
    id v6 = 0;
    sub_1DFDE87E0();
  }
  else
  {
    uint64_t v7 = (void *)a2[6];
    if (objc_msgSend(v7, sel_hasSubscriptionToTag_, a1))
    {
      v12[0] = 0;
      if (objc_msgSend(v7, sel_setNotificationsEnabled_forTag_error_, 1, a1, v12))
      {
        id v8 = v12[0];
        return 0;
      }
      else
      {
        id v10 = v12[0];
        id v6 = (id)sub_1DFDE6FE0();

        swift_willThrow();
      }
    }
    else
    {
      v12[0] = 0;
      objc_msgSend(v7, sel_addSubscriptionToTag_notificationsEnabled_error_, a1, 1, v12);
      id v6 = v12[0];
      id v9 = v12[0];
    }
  }
  return v6;
}

uint64_t sub_1DF6C4BF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (objc_msgSend(a1, sel_isMySports))
  {
    uint64_t v4 = (unsigned int *)MEMORY[0x1E4F81568];
LABEL_5:
    uint64_t v5 = *v4;
    uint64_t v6 = sub_1DFDFC860();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(a2, v5, v6);
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F81580];
    goto LABEL_7;
  }
  if (objc_msgSend(a1, sel_isPuzzleHub))
  {
    uint64_t v4 = (unsigned int *)MEMORY[0x1E4F81570];
    goto LABEL_5;
  }
  id v8 = objc_msgSend(a1, sel_identifier);
  uint64_t v9 = sub_1DFDFDD20();
  uint64_t v11 = v10;

  *a2 = v9;
  a2[1] = v11;
  uint64_t v7 = (unsigned int *)MEMORY[0x1E4F81578];
LABEL_7:
  uint64_t v12 = *v7;
  uint64_t v13 = sub_1DFDFC870();
  uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  return v14(a2, v12, v13);
}

uint64_t sub_1DF6C4D2C()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  return v0;
}

uint64_t sub_1DF6C4D8C()
{
  sub_1DF6C4D2C();
  return swift_deallocClassInstance();
}

unint64_t sub_1DF6C4DC4()
{
  unint64_t result = qword_1EAC2F9E0;
  if (!qword_1EAC2F9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC2F9E0);
  }
  return result;
}

void sub_1DF6C4E18(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, char *a5)
{
}

uint64_t sub_1DF6C4E44@<X0>(void **a1@<X3>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1DF6C583C(*a1);
  *a2 = result & 1;
  return result;
}

unint64_t sub_1DF6C4E78(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return (unint64_t)sub_1DF6C5980(*a4) & 1;
}

uint64_t sub_1DF6C4EA4()
{
  uint64_t v0 = sub_1DFDEBFE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDEBDB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDEBDA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F7C8F8], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F7CA30], v0);
  sub_1DFDEBD90();
  sub_1DEA98ED4(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v12 = sub_1DFDE8410();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x1E4F4AA18], v12);
  sub_1DF6C5AD4(qword_1EAC2FA00, MEMORY[0x1E4F7C8E0]);
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1DFDEBD80();
  sub_1DF6C5AD4(&qword_1EAC2DC60, MEMORY[0x1E4F7C8D0]);
  memset(v17, 0, sizeof(v17));
  sub_1DFDE83B0();
  return sub_1DE9E4C20((uint64_t)v17);
}

void sub_1DF6C527C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  sub_1DEA98ED4(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v35 - v11;
  uint64_t v13 = sub_1DFDFC870();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    sub_1DF6C4BF8(a3, (void *)((char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0)));
    unint64_t v19 = sub_1DEFE9180();
    v35[0] = v5[2];
    type metadata accessor for FollowingNotificationsPrewarm();
    uint64_t v20 = swift_allocBox();
    uint64_t v22 = v21;
    sub_1DEBCFE94();
    uint64_t v24 = (char *)v22 + *(int *)(v23 + 48);
    *uint64_t v22 = v19;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v24, v16, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v24, 0, 1, v13);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = v5[3];
    uint64_t v26 = sub_1DFDEAB40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 1, 1, v26);
    uint64_t v39 = 0;
    memset(v38, 0, sizeof(v38));
    uint64_t v37 = 0;
    memset(v36, 0, sizeof(v36));
    swift_retain();
    sub_1DFBB5128(v20 | 0x3000000000000004, v25, (uint64_t)v12, (uint64_t)v38, 0, 0, 0, 0, (uint64_t)v36);
    swift_release();
    sub_1DE9330D4((uint64_t)v36, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
    sub_1DE9330D4((uint64_t)v38, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
    sub_1DEBFF970((uint64_t)v12);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else if (objc_msgSend(a3, sel_isMySports))
  {
    type metadata accessor for FCSportsOnboardingState(0);
    sub_1DFDEE090();
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
    uint64_t v17 = (void *)sub_1DFDFEE60();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    *(void *)(v18 + 24) = a2;
    sub_1DE9DB774(0, (unint64_t *)&qword_1EAC2BBA0);
    swift_unknownObjectRetain();
    sub_1DFDEDE20();
    swift_release();
    swift_release();

    swift_release();
  }
  else
  {
    id v27 = sub_1DF6C4A78(a3, v5);
    if (v27)
    {
      id v28 = v27;
      sub_1DEA6A904(0, (unint64_t *)&qword_1EBABB7A0, (unint64_t *)&qword_1EBABB7E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1DFE0B750;
      *(void *)&v38[0] = 0;
      *((void *)&v38[0] + 1) = 0xE000000000000000;
      *(void *)&v36[0] = a3;
      sub_1DEABCEB0();
      sub_1DFDFFB10();
      long long v30 = v38[0];
      uint64_t v31 = MEMORY[0x1E4FBB1A0];
      *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v32 = sub_1DEA08668();
      *(void *)(v29 + 64) = v32;
      *(_OWORD *)(v29 + 32) = v30;
      *(void *)&v38[0] = 0;
      *((void *)&v38[0] + 1) = 0xE000000000000000;
      *(void *)&v36[0] = v28;
      sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
      sub_1DFDFFB10();
      long long v33 = v38[0];
      *(void *)(v29 + 96) = v31;
      *(void *)(v29 + 104) = v32;
      *(_OWORD *)(v29 + 72) = v33;
      sub_1DE919914(0, (unint64_t *)&qword_1EBABB0D0);
      uint64_t v34 = (void *)sub_1DFDFF5F0();
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1DF6C583C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = *(void *)(v1 + 128);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 96), v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    if (*(void *)(v5 + OBJC_IVAR___TSNotificationSettings_authorizationStatus) == 2)
    {
      if (objc_msgSend(a1, sel_isMySports))
      {
        uint64_t v8 = *(void *)(v1 + 80);
        uint64_t v7 = *(void *)(v1 + 88);
        __swift_project_boxed_opaque_existential_1((void *)(v1 + 56), v8);
        unsigned __int8 v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(v8, v7);
      }
      else if (objc_msgSend(a1, sel_isPuzzleHub))
      {
        uint64_t v12 = *(void *)(v1 + 80);
        uint64_t v11 = *(void *)(v1 + 88);
        __swift_project_boxed_opaque_existential_1((void *)(v1 + 56), v12);
        unsigned __int8 v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v12, v11);
      }
      else
      {
        unsigned __int8 v9 = objc_msgSend(*(id *)(v1 + 48), sel_hasNotificationsEnabledForTag_, a1);
      }
      char v10 = v9;
    }
    else
    {
      char v10 = 1;
    }
  }
  else
  {
    char v10 = 1;
  }
  return v10 & 1;
}

id sub_1DF6C5980(void *a1)
{
  if (objc_msgSend(*(id *)(v1 + 136), sel_useOfflineMode))
  {
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 144), *(void *)(v1 + 168));
    if (sub_1DFDF8460()) {
      return 0;
    }
  }
  id v3 = objc_msgSend(a1, sel_asChannel);
  if (!v3) {
    return 0;
  }
  id v4 = objc_msgSend(v3, sel_supportsNotifications);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1DF6C5A24()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  __swift_project_boxed_opaque_existential_1(v0 + 23, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1DF6C5A80()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF6C5AB8@<X0>(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_1DF6C4944(a1, a2, a3);
}

uint64_t sub_1DF6C5AD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF6C5B1C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for OfflineFeedManifest(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v15[1] = v1;
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1DEA55E30(0, v7, 0);
    uint64_t v8 = v16;
    uint64_t v9 = type metadata accessor for OfflineReadinessSection();
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v9 - 8) + 72);
    do
    {
      sub_1DF6CF9B8(v10 + *(int *)(v9 + 20), (uint64_t)v6, type metadata accessor for OfflineFeedManifest);
      uint64_t v16 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1DEA55E30(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v16;
      }
      *(void *)(v8 + 16) = v13 + 1;
      sub_1DF6CFB48((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, type metadata accessor for OfflineFeedManifest);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1DF6C5D14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OfflineReadinessSection();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  long long v30 = (char *)&v26 - v6;
  sub_1DEA54EDC();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA560F8(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1E4FBC860];
  id v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v28 = v9 + 16;
  v27(v11, a1, v8);
  sub_1DF6CF970((unint64_t *)&unk_1EBAD0510, (void (*)(uint64_t))sub_1DEA54EDC);
  uint64_t v29 = v11;
  sub_1DFDFDFB0();
  uint64_t v16 = &v15[*(int *)(v13 + 44)];
  sub_1DF6CF970(&qword_1EBAD0520, (void (*)(uint64_t))sub_1DEA54EDC);
  uint64_t v17 = *(void *)v16;
  sub_1DFDFE720();
  if (v17 != v31[0])
  {
    uint64_t v18 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v19 = (uint64_t)v30;
    do
    {
      uint64_t v20 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      sub_1DF6CF9B8(v21, v19, (uint64_t (*)(void))type metadata accessor for OfflineReadinessSection);
      v20(v31, 0);
      uint64_t v22 = v29;
      v27(v29, (uint64_t)v15, v8);
      sub_1DFDFE730();
      (*v18)(v22, v8);
      sub_1DF6CFB48(v19, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for OfflineReadinessSection);
      unint64_t v23 = sub_1DF6C609C();
      sub_1DF6CFA20((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for OfflineReadinessSection);
      sub_1DEA549FC(v23);
      uint64_t v24 = *(void *)v16;
      sub_1DFDFE720();
    }
    while (v24 != v31[0]);
  }
  sub_1DF6CFA20((uint64_t)v15, (uint64_t (*)(void))sub_1DEA560F8);
  return v32;
}

uint64_t sub_1DF6C609C()
{
  unint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for OfflineReadinessSection() + 24));
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DFDFFBE0();
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_16;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    JUMPOUT(0x1DF6C6234);
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v4 = (id)MEMORY[0x1E01EE240](i, v1);
    }
    else {
      id v4 = *(id *)(v1 + 8 * i + 32);
    }
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_dataProvider);
    swift_unknownObjectRelease();
    if (v6
      || (id v7 = objc_msgSend(v5, sel_downloadError)) != 0
      && (v7, (objc_msgSend(v5, sel_isDownloadFailureRecoverable) & 1) == 0))
    {
    }
    else
    {
      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
    }
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1DF6C6254()
{
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  sub_1DFDEE310();
  return swift_release();
}

uint64_t sub_1DF6C62C0(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v50 = a3;
  id v6 = (void *)(*MEMORY[0x1E4FBC8C8] & *v4);
  id v7 = v6;
  uint64_t v8 = sub_1DFDF4300();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v46 = (void **)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1DFDF6B40();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v43 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDF6BA0();
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v40 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v6[13];
  uint64_t v15 = v6[14];
  uint64_t v16 = (uint64_t (*)(uint64_t))v6[17];
  uint64_t v37 = (void *)v6[19];
  uint64_t v38 = v14;
  uint64_t aBlock = v14;
  uint64_t v53 = v15;
  long long v54 = v16;
  long long v55 = v37;
  uint64_t v17 = sub_1DFDF5AD0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v37 - v20;
  if (qword_1EBACBC90 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_1EBAD1A50;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v23 = (v19 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = *((_OWORD *)v7 + 5);
  uint64_t v25 = v38;
  *(void *)(v24 + 32) = v7[12];
  *(void *)(v24 + 40) = v25;
  *(void *)(v24 + 48) = v15;
  *(void *)(v24 + 56) = v7[15];
  *(void *)(v24 + 64) = v7[16];
  *(void *)(v24 + 72) = v16;
  uint64_t v26 = v37;
  *(void *)(v24 + 80) = v7[18];
  *(void *)(v24 + 88) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v24 + v22, v21, v17);
  *(void *)(v24 + v23) = v4;
  id v56 = sub_1DF6CF84C;
  uint64_t v57 = v24;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v53 = 1107296256;
  long long v54 = sub_1DE9744A8;
  long long v55 = &block_descriptor_22_2;
  id v27 = _Block_copy(&aBlock);
  uint64_t v28 = v4;
  uint64_t v29 = v40;
  sub_1DFDF6B70();
  uint64_t v51 = MEMORY[0x1E4FBC860];
  sub_1DF6CF970((unint64_t *)&qword_1EBAB9EB0, MEMORY[0x1E4FBCB00]);
  long long v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1DEA21208(0, (unint64_t *)&qword_1EBABA850, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1DEA368C8((unint64_t *)&qword_1EBABA860, (unint64_t *)&qword_1EBABA850, v30);
  uint64_t v31 = v43;
  uint64_t v32 = v45;
  sub_1DFDFF830();
  MEMORY[0x1E01ED6B0](0, v29, v31, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v32);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v42);
  swift_release();
  uint64_t v34 = v46;
  uint64_t v33 = v47;
  *uint64_t v46 = nullsub_1;
  v34[1] = 0;
  uint64_t v35 = v48;
  (*(void (**)(void *, void, uint64_t))(v33 + 104))(v34, *MEMORY[0x1E4FAD318], v48);
  v50(v34);
  return (*(uint64_t (**)(void *, uint64_t))(v33 + 8))(v34, v35);
}

uint64_t sub_1DF6C6868(char *a1, char *a2)
{
  long long v55 = (void *)(*MEMORY[0x1E4FBC8C8] & *(void *)a2);
  id v4 = v55;
  uint64_t v5 = sub_1DFDE78B0();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  id v56 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v59 = (uint64_t)&v47 - v8;
  uint64_t v9 = (char *)v4[14];
  uint64_t v10 = (char *)v4[17];
  uint64_t v11 = v4[19];
  uint64_t v54 = v4[13];
  v67[0] = v54;
  v67[1] = v9;
  uint64_t v53 = v9;
  uint64_t v52 = v10;
  v67[2] = v10;
  uint64_t v68 = v11;
  uint64_t v51 = v11;
  uint64_t v12 = sub_1DFDF5AD0();
  uint64_t v60 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v49 = (char *)&v47 - v13;
  uint64_t v14 = sub_1DFDF98F0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = (char *)v4[10];
  unint64_t v22 = (char *)v4[11];
  uint64_t v50 = (char *)v4[15];
  uint64_t v48 = v22;
  swift_getAssociatedConformanceWitness();
  uint64_t v61 = v12;
  unint64_t v62 = a1;
  uint64_t result = sub_1DEA54310();
  if ((~result & 0xF000000000000007) != 0)
  {
    uint64_t v24 = result;
    sub_1DFDF7F10();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E4F80418], v14);
    sub_1DF6CF970((unint64_t *)&unk_1EBAD1670, MEMORY[0x1E4F80420]);
    char v25 = sub_1DFDFDC70();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8);
    v26(v18, v14);
    v26(v20, v14);
    if (v25)
    {
      return sub_1DEA54378(v24);
    }
    else
    {
      uint64_t v47 = &a2[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a2) + 0xF8)];
      id v27 = v47;
      swift_beginAccess();
      uint64_t v28 = v60;
      uint64_t v29 = v49;
      long long v30 = v27;
      uint64_t v31 = v61;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v49, v30, v61);
      uint64_t v32 = v54;
      uint64_t v33 = v53;
      uint64_t v34 = v52;
      uint64_t v35 = (char *)v51;
      sub_1DFDF2410();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v31);
      __swift_project_boxed_opaque_existential_1(v67, v68);
      uint64_t v36 = sub_1DFDF1950();
      MEMORY[0x1F4188790](v36);
      uint64_t v37 = v48;
      *(&v47 - 12) = v21;
      *(&v47 - 11) = v37;
      uint64_t v38 = (uint64_t)v55;
      *(&v47 - 10) = (char *)v55[12];
      *(&v47 - 9) = (char *)v32;
      uint64_t v39 = v50;
      *(&v47 - 8) = v33;
      *(&v47 - 7) = v39;
      *(&v47 - 6) = *(char **)(v38 + 128);
      *(&v47 - 5) = v34;
      *(&v47 - 4) = *(char **)(v38 + 144);
      *(&v47 - 3) = v35;
      *(&v47 - 2) = v62;
      uint64_t v63 = v32;
      uint64_t v64 = v33;
      uint64_t v65 = v34;
      uint64_t v66 = v35;
      uint64_t v54 = sub_1DFDF15F0();
      sub_1DF6CF970(&qword_1EBAD02E8, MEMORY[0x1E4F27D00]);
      uint64_t v41 = v58;
      uint64_t v40 = v59;
      long long v55 = (void *)sub_1DFDFE0E0();
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v42(v40, v41);
      uint64_t v59 = v24;
      __swift_project_boxed_opaque_existential_1(v67, v68);
      uint64_t v43 = v56;
      uint64_t v44 = sub_1DFDF1940();
      MEMORY[0x1F4188790](v44);
      *(&v47 - 2) = a2;
      uint64_t v45 = sub_1DFDFE0E0();
      v42((uint64_t)v43, v41);
      uint64_t v46 = v47;
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v60 + 24))(v46, v62, v61);
      swift_endAccess();
      sub_1DF6C7264((uint64_t)v55, v45);
      sub_1DEA54378(v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    }
  }
  return result;
}

uint64_t sub_1DF6C6F84@<X0>(uint64_t a1@<X8>)
{
  sub_1DFDF5AD0();
  sub_1DFDF5B00();
  uint64_t v2 = sub_1DFDF15F0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1DF6C7054@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = (void *)(*MEMORY[0x1E4FBC8C8] & *a1);
  uint64_t v16 = v3[13];
  uint64_t v4 = v3[14];
  uint64_t v5 = v3[17];
  uint64_t v6 = v3[19];
  uint64_t v18 = v16;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v21 = v6;
  uint64_t v7 = sub_1DFDF5AD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = (char *)a1 + v3[31];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = v17;
  sub_1DFDF5B00();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v18 = v16;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v21 = v6;
  uint64_t v13 = sub_1DFDF15F0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
}

uint64_t sub_1DF6C7264(uint64_t a1, uint64_t a2)
{
  uint64_t v172 = a1;
  uint64_t v4 = (void *)(*MEMORY[0x1E4FBC8C8] & *v2);
  uint64_t v157 = type metadata accessor for OfflineReadinessSection();
  MEMORY[0x1F4188790](v157);
  CGFloat v156 = (uint64_t *)((char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v155 = type metadata accessor for OfflineFeedGroupProcessorResult();
  MEMORY[0x1F4188790](v155);
  uint64_t v154 = (uint64_t)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_1DFDF01D0();
  uint64_t v143 = *(void *)(v171 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v171);
  uint64_t v142 = (uint64_t)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v167 = (uint64_t)&v138 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v141 = (uint64_t)&v138 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v153 = (uint64_t)&v138 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v159 = (uint64_t)&v138 - v15;
  sub_1DEA54EDC();
  uint64_t v179 = v16;
  uint64_t v144 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  CGFloat v158 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  CGFloat v169 = (char *)&v138 - v19;
  uint64_t v20 = v4[14];
  uint64_t v21 = v4[17];
  uint64_t v181 = v2;
  uint64_t v22 = v4[19];
  uint64_t v170 = v23;
  v189[0] = v23;
  v189[1] = v20;
  v189[2] = v21;
  uint64_t v190 = v22;
  uint64_t v24 = sub_1DFDF15F0();
  uint64_t v182 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  CGFloat v174 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  objc_super v140 = (char *)&v138 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  double v152 = (char *)&v138 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char *)&v138 - v32;
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  uint64_t v180 = (char *)&v138 - v35;
  uint64_t v139 = v36;
  MEMORY[0x1F4188790](v34);
  uint64_t v38 = (char *)&v138 - v37;
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = MEMORY[0x1E01ECC20](v39, v24);
  double v176 = v33;
  if (v40)
  {
    uint64_t v41 = 0;
    uint64_t v42 = (void (**)(char *, uint64_t *, uint64_t))(v182 + 16);
    uint64_t v43 = (void (**)(char *, uint64_t))(v182 + 8);
    do
    {
      char v44 = sub_1DFDFE360();
      sub_1DFDFE2E0();
      if (v44)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v182 + 16))(v38, a2+ ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80))+ *(void *)(v182 + 72) * v41, v24);
        uint64_t v33 = (char *)(v41 + 1);
        if (__OFADD__(v41, 1)) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t result = sub_1DFDFFA00();
        if (v139 != 8)
        {
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        v189[0] = result;
        (*v42)(v38, v189, v24);
        swift_unknownObjectRelease();
        uint64_t v33 = (char *)(v41 + 1);
        if (__OFADD__(v41, 1))
        {
LABEL_11:
          __break(1u);
          break;
        }
      }
      sub_1DFDF14E0();
      swift_beginAccess();
      sub_1DFDED2A0();
      swift_endAccess();
      swift_bridgeObjectRelease();
      (*v43)(v38, v24);
      ++v41;
      BOOL v45 = v33 == (char *)MEMORY[0x1E01ECC20](a2, v24);
      uint64_t v33 = v176;
    }
    while (!v45);
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = v172;
  uint64_t v48 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1E01ECC20](v48, v24))
  {
    swift_bridgeObjectRelease();
    uint64_t v107 = v181;
    uint64_t v106 = (uint64_t *)MEMORY[0x1E4FBC8C8];
    goto LABEL_40;
  }
  uint64_t v49 = v181;
  uint64_t v50 = *MEMORY[0x1E4FBC8C8] & *v181;
  uint64_t v51 = (char *)v49 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v49) + 0x100);
  uint64_t v151 = (char *)v49 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v49) + 0xE0);
  uint64_t v148 = *(void *)(v50 + 176);
  uint64_t v147 = *(void *)(v50 + 168);
  double v165 = v51;
  swift_beginAccess();
  uint64_t v52 = 0;
  uint64_t v166 = 0;
  uint64_t v178 = (void (**)(char *, uint64_t *, uint64_t))(v182 + 16);
  double v168 = (void (**)(char *, char *, uint64_t))(v182 + 32);
  CGFloat v150 = (void (**)(char *, char *, uint64_t))(v144 + 16);
  double v149 = (void (**)(char *, uint64_t))(v144 + 8);
  double v173 = (void (**)(char *, uint64_t))(v182 + 8);
  uint64_t v53 = (void (**)(uint64_t, uint64_t))(v143 + 8);
  double v146 = (char *)&v183 + 8;
  *(void *)&long long v54 = 136446210;
  long long v160 = v54;
  uint64_t v145 = MEMORY[0x1E4FBC840] + 8;
  CGFloat v175 = (void (**)(uint64_t, uint64_t))(v143 + 8);
  while (1)
  {
    char v57 = sub_1DFDFE360();
    sub_1DFDFE2E0();
    if (v57)
    {
      uint64_t v58 = *(void (**)(char *, uint64_t *, uint64_t))(v182 + 16);
      v58(v180, (uint64_t *)(v47+ ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80))+ *(void *)(v182 + 72) * v52), v24);
      uint64_t v59 = v52 + 1;
      if (__OFADD__(v52, 1)) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t result = sub_1DFDFFA00();
      if (v139 != 8) {
        goto LABEL_59;
      }
      v189[0] = result;
      uint64_t v58 = *v178;
      (*v178)(v180, v189, v24);
      swift_unknownObjectRelease();
      uint64_t v59 = v52 + 1;
      if (__OFADD__(v52, 1))
      {
LABEL_32:
        __break(1u);
LABEL_33:
        swift_bridgeObjectRelease();
        uint64_t v106 = (uint64_t *)MEMORY[0x1E4FBC8C8];
        goto LABEL_39;
      }
    }
    uint64_t v177 = v59;
    (*v168)(v33, v180, v24);
    sub_1DFDF14D0();
    sub_1DE925CE8(0, &qword_1EBAD1150);
    if (swift_dynamicCast()) {
      break;
    }
    uint64_t v185 = 0;
    long long v183 = 0u;
    long long v184 = 0u;
    sub_1DEA5A6B4((uint64_t)&v183, (uint64_t)&unk_1EAC2FB18, (uint64_t)&qword_1EBAD1150, (uint64_t)&protocol descriptor for FeedGroupOfflineableProviding, (uint64_t (*)(void))sub_1DE9B31FC);
    long long v186 = 0u;
    long long v187 = 0u;
    uint64_t v188 = 0;
LABEL_24:
    sub_1DEA5A6B4((uint64_t)&v186, (uint64_t)&qword_1EBAD0B50, (uint64_t)&qword_1EBAD0B48, (uint64_t)&protocol descriptor for FeedGroupOfflineable, (uint64_t (*)(void))sub_1DE9B31FC);
    uint64_t v78 = v167;
    sub_1DEA57754(v167);
    uint64_t v79 = v174;
    v58(v174, (uint64_t *)v33, v24);
    uint64_t v80 = sub_1DFDF01B0();
    os_log_type_t v81 = sub_1DFDFEA60();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      v189[0] = v83;
      *(_DWORD *)uint64_t v82 = v160;
      uint64_t v84 = sub_1DFDF14E0();
      *(void *)(v82 + 4) = sub_1DEA5CAB8(v84, v85, v189);
      swift_bridgeObjectRelease();
      long long v86 = *v173;
      (*v173)(v174, v24);
      _os_log_impl(&dword_1DE913000, v80, v81, "Offline Readiness will ignore inserted section because it does not support offline mode, id=%{public}s", (uint8_t *)v82, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v83, -1, -1);
      MEMORY[0x1E01EFA10](v82, -1, -1);

      (*v175)(v78, v171);
      v86(v33, v24);
LABEL_28:
      uint64_t v53 = v175;
      goto LABEL_15;
    }

    long long v55 = *v173;
    (*v173)(v79, v24);
    (*v53)(v78, v171);
    v55(v33, v24);
LABEL_15:
    uint64_t v47 = v172;
    uint64_t v56 = MEMORY[0x1E01ECC20](v172, v24);
    ++v52;
    if (v177 == v56) {
      goto LABEL_33;
    }
  }
  uint64_t v60 = *((void *)&v184 + 1);
  uint64_t v61 = v185;
  __swift_project_boxed_opaque_existential_1(&v183, *((uint64_t *)&v184 + 1));
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v61 + 8))(&v186, v60, v61);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v183);
  if (!*((void *)&v187 + 1)) {
    goto LABEL_24;
  }
  sub_1DE942EC4(&v186, (uint64_t)v189);
  unint64_t v62 = v158;
  uint64_t v63 = v179;
  (*v150)(v158, v165, v179);
  sub_1DF6CF970(&qword_1EBAD0520, (void (*)(uint64_t))sub_1DEA54EDC);
  sub_1DFDFE6A0();
  sub_1DFDFE720();
  uint64_t v64 = sub_1DFDFE710();
  (*v149)(v62, v63);
  if (v64 < sub_1DFDF7BC0())
  {
    uint64_t v65 = v159;
    sub_1DEA57754(v159);
    uint64_t v66 = v152;
    v58(v152, (uint64_t *)v33, v24);
    long long v67 = v175;
    uint64_t v68 = sub_1DFDF01B0();
    os_log_type_t v69 = sub_1DFDFEA60();
    BOOL v70 = os_log_type_enabled(v68, v69);
    uint64_t v164 = (unint64_t)v173 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v162 = (unint64_t)v67 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (v70)
    {
      uint64_t v71 = v66;
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      *(void *)&long long v186 = v73;
      *(_DWORD *)uint64_t v72 = v160;
      uint64_t v74 = sub_1DFDF14E0();
      *(void *)&long long v183 = sub_1DEA5CAB8(v74, v75, (uint64_t *)&v186);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      double v163 = *v173;
      v163(v71, v24);
      _os_log_impl(&dword_1DE913000, v68, v69, "Offline Readiness will process inserted section, id=%{public}s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v73, -1, -1);
      MEMORY[0x1E01EFA10](v72, -1, -1);

      unint64_t v76 = *v175;
      uint64_t v77 = v171;
      (*v175)(v159, v171);
    }
    else
    {
      double v163 = *v173;
      v163(v66, v24);

      unint64_t v76 = *v67;
      uint64_t v77 = v171;
      (*v67)(v65, v171);
    }
    uint64_t v87 = v166;
    uint64_t v88 = *(void *)((char *)v181 + v148);
    swift_bridgeObjectRetain();
    uint64_t v89 = v153;
    uint64_t v90 = sub_1DEA57754(v153);
    MEMORY[0x1F4188790](v90);
    *(&v138 - 2) = (uint64_t)v189;
    *(&v138 - 1) = v89;
    uint64_t v91 = sub_1DEB068E4((uint64_t)sub_1DEA55E78, (uint64_t)(&v138 - 4), v88);
    uint64_t v166 = v87;
    uint64_t v92 = v154;
    sub_1DF6FC594(v91, v154);
    v76(v89, v77);
    swift_bridgeObjectRelease();
    long long v93 = *(void **)((char *)v181 + v147);
    id v94 = OfflineFeedManifest.contentManifest.getter();
    id v95 = objc_msgSend(v93, sel_interestTokenForContentManifest_, v94);

    uint64_t v162 = sub_1DFDF14E0();
    uint64_t v161 = v96;
    *(void *)&long long v186 = *(void *)(v92 + *(int *)(v155 + 20));
    swift_bridgeObjectRetain();
    unint64_t v97 = swift_bridgeObjectRetain();
    sub_1DEA549FC(v97);
    uint64_t v98 = v186;
    uint64_t v100 = v190;
    uint64_t v99 = v191;
    __swift_project_boxed_opaque_existential_1(v189, v190);
    uint64_t v101 = *(uint64_t (**)(uint64_t, uint64_t))(v99 + 72);
    id v102 = v95;
    LOBYTE(v94) = v101(v100, v99);
    uint64_t v103 = (uint64_t)v156;
    uint64_t v104 = v161;
    *CGFloat v156 = v162;
    *(void *)(v103 + 8) = v104;
    uint64_t v105 = (int *)v157;
    sub_1DF6CF9B8(v92, v103 + *(int *)(v157 + 20), type metadata accessor for OfflineFeedManifest);
    *(void *)(v103 + v105[6]) = v98;
    uint64_t v33 = v176;
    *(void *)(v103 + v105[7]) = v102;
    *(unsigned char *)(v103 + v105[8]) = v94 & 1;
    swift_beginAccess();
    sub_1DFDED290();
    swift_endAccess();

    sub_1DF6CFA20(v103, (uint64_t (*)(void))type metadata accessor for OfflineReadinessSection);
    sub_1DF6CFA20(v92, (uint64_t (*)(void))type metadata accessor for OfflineFeedGroupProcessorResult);
    v163(v33, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v189);
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  uint64_t v108 = v141;
  sub_1DEA57754(v141);
  unint64_t v109 = v140;
  v58(v140, (uint64_t *)v33, v24);
  unint64_t v110 = sub_1DFDF01B0();
  os_log_type_t v111 = sub_1DFDFEA60();
  if (os_log_type_enabled(v110, v111))
  {
    double v112 = (uint8_t *)swift_slowAlloc();
    uint64_t v113 = swift_slowAlloc();
    *(void *)&long long v186 = v113;
    *(_DWORD *)double v112 = v160;
    uint64_t v114 = sub_1DFDF14E0();
    *(void *)&long long v183 = sub_1DEA5CAB8(v114, v115, (uint64_t *)&v186);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    uint64_t v116 = *v173;
    (*v173)(v109, v24);
    _os_log_impl(&dword_1DE913000, v110, v111, "Offline Readiness will ignore inserted section because the group limit has been reached, id=%{public}s", v112, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v113, -1, -1);
    MEMORY[0x1E01EFA10](v112, -1, -1);

    (*v53)(v141, v171);
    v116(v176, v24);
  }
  else
  {

    uint64_t v117 = *v173;
    (*v173)(v109, v24);
    (*v53)(v108, v171);
    v117(v33, v24);
  }
  uint64_t v106 = (uint64_t *)MEMORY[0x1E4FBC8C8];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v189);
LABEL_39:
  uint64_t v107 = v181;
LABEL_40:
  id v118 = (char *)v107 + *(void *)((*v106 & *v107) + 0x100);
  swift_beginAccess();
  uint64_t v119 = v144;
  id v120 = *(void (**)(char *, char *, uint64_t))(v144 + 16);
  uint64_t v121 = (uint64_t)v158;
  uint64_t v122 = v179;
  v120(v158, v118, v179);
  sub_1DF6CF970(&qword_1EBAD0520, (void (*)(uint64_t))sub_1DEA54EDC);
  sub_1DFDFE6A0();
  sub_1DFDFE720();
  uint64_t v123 = sub_1DFDFE710();
  uint64_t v124 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
  v124(v121, v122);
  v120((char *)v121, v118, v122);
  unint64_t v125 = sub_1DF6C5D14(v121);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v124)(v121, v122);
  if (v125 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v126 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v126 = *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v127 = *v106;
  uint64_t v128 = v181;
  if (v126)
  {
LABEL_48:
    uint64_t v131 = *(void *)((v127 & *v128) + 0xF0);
    swift_retain();
    swift_retain();
    sub_1DFDEDD10();
    id v132 = v181;
    swift_release();
    swift_release();
    if ((v186 & 1) == 0)
    {
      sub_1DEA57754(v142);
      swift_bridgeObjectRetain_n();
      uint64_t v133 = sub_1DFDF01B0();
      os_log_type_t v134 = sub_1DFDFEA60();
      if (os_log_type_enabled(v133, v134))
      {
        uint64_t v135 = swift_slowAlloc();
        *(_DWORD *)uint64_t v135 = 134349312;
        if (v125 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v136 = sub_1DFDFFBE0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v136 = *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        *(void *)&long long v186 = v136;
        sub_1DFDFF680();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 12) = 2050;
        *(void *)&long long v186 = v123;
        sub_1DFDFF680();
        _os_log_impl(&dword_1DE913000, v133, v134, "Offline Readiness processor will prefetch %{public}ld missing asset handles from %{public}ld sections", (uint8_t *)v135, 0x16u);
        MEMORY[0x1E01EFA10](v135, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v142, v171);
      id v132 = v181;
    }
    uint64_t v137 = *(void *)((char *)v132 + v131);
    swift_beginAccess();
    *(void *)(v137 + 72) = v125;
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1DF6CCDF8();
    return swift_release();
  }
  else
  {
    uint64_t v129 = *(void *)((char *)v181 + *(void *)((v127 & *v181) + 0x108));
    if (v129)
    {
      if (*(unsigned char *)(v129 + 48) == 1)
      {
        *(unsigned char *)(v129 + 49) = 1;
      }
      else
      {
        *(_WORD *)(v129 + 48) = 1;
        swift_retain();
        sub_1DFDEE090();
        swift_retain();
        uint64_t v130 = (void *)sub_1DFDEDCE0();
        sub_1DFDEDEA0();
        swift_release();
        swift_release();
        swift_release_n();

        uint64_t v127 = *v106;
      }
      uint64_t v128 = v181;
      goto LABEL_48;
    }
LABEL_60:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF6C8A80(void *a1)
{
  return swift_release();
}

uint64_t sub_1DF6C8B30(void *a1)
{
  uint64_t v42 = sub_1DFDF01D0();
  uint64_t v2 = *(void *)(v42 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v42);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v42 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v21 = (void *)((char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0xD0));
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  unint64_t v22 = *(void *)((char *)a1 + *(void *)((*v20 & *a1) + 0xA0) + 8);
  if (v22 >= 8) {
    char v23 = 2;
  }
  else {
    char v23 = 0x705030401000806uLL >> (8 * v22);
  }
  sub_1DEA5D0B0(v23);
  sub_1DFDECF80();
  swift_release();
  if (v43 == 6)
  {
    uint64_t v24 = *(void **)((char *)a1 + *(void *)((*v20 & *a1) + 0xD8));
    if (objc_msgSend(v24, sel_isNetworkReachable))
    {
      id v25 = objc_msgSend(self, sel_sharedApplication);
      id v26 = objc_msgSend(v25, sel_applicationState);

      if (v26 == (id)2)
      {
        sub_1DEA57754((uint64_t)v11);
        uint64_t v27 = sub_1DFDF01B0();
        os_log_type_t v28 = sub_1DFDFEA60();
        if (!os_log_type_enabled(v27, v28))
        {
          uint64_t v30 = 0;
          uint64_t v19 = v11;
          uint64_t v33 = v42;
          goto LABEL_29;
        }
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1DE913000, v27, v28, "Offline Readiness processor will be disabled due to app background state", v29, 2u);
        uint64_t v30 = 0;
        uint64_t v19 = v11;
      }
      else
      {
        id v34 = objc_msgSend(self, sel_processInfo);
        unsigned __int8 v35 = objc_msgSend(v34, sel_isLowPowerModeEnabled);

        if ((v35 & 1) == 0)
        {
          if (objc_msgSend(v24, sel_isLowDataModeEnabled))
          {
            sub_1DEA57754((uint64_t)v17);
            uint64_t v27 = sub_1DFDF01B0();
            os_log_type_t v37 = sub_1DFDFEA60();
            BOOL v38 = os_log_type_enabled(v27, v37);
            uint64_t v33 = v42;
            if (!v38)
            {
              uint64_t v30 = 0;
              uint64_t v19 = v17;
              goto LABEL_29;
            }
            uint64_t v29 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v29 = 0;
            _os_log_impl(&dword_1DE913000, v27, v37, "Offline Readiness processor will be disabled due to Low Data Mode", v29, 2u);
            uint64_t v30 = 0;
            uint64_t v19 = v17;
          }
          else
          {
            sub_1DEA57754((uint64_t)v19);
            uint64_t v27 = sub_1DFDF01B0();
            os_log_type_t v39 = sub_1DFDFEA60();
            BOOL v40 = os_log_type_enabled(v27, v39);
            uint64_t v33 = v42;
            if (!v40)
            {
              uint64_t v30 = 1;
              goto LABEL_29;
            }
            uint64_t v29 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v29 = 0;
            _os_log_impl(&dword_1DE913000, v27, v39, "Offline Readiness processor will be enabled", v29, 2u);
            uint64_t v30 = 1;
          }
          goto LABEL_14;
        }
        sub_1DEA57754((uint64_t)v14);
        uint64_t v27 = sub_1DFDF01B0();
        os_log_type_t v36 = sub_1DFDFEA60();
        if (!os_log_type_enabled(v27, v36))
        {
          uint64_t v30 = 0;
          uint64_t v19 = v14;
          uint64_t v33 = v42;
          goto LABEL_29;
        }
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1DE913000, v27, v36, "Offline Readiness processor will be disabled due to Low Power Mode", v29, 2u);
        uint64_t v30 = 0;
        uint64_t v19 = v14;
      }
    }
    else
    {
      sub_1DEA57754((uint64_t)v8);
      uint64_t v27 = sub_1DFDF01B0();
      os_log_type_t v32 = sub_1DFDFEA60();
      if (!os_log_type_enabled(v27, v32))
      {
        uint64_t v30 = 0;
        uint64_t v19 = v8;
        uint64_t v33 = v42;
        goto LABEL_29;
      }
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1DE913000, v27, v32, "Offline Readiness processor will be disabled due to network reachability", v29, 2u);
      uint64_t v30 = 0;
      uint64_t v19 = v8;
    }
  }
  else
  {
    sub_1DEA57754((uint64_t)v5);
    uint64_t v27 = sub_1DFDF01B0();
    os_log_type_t v31 = sub_1DFDFEA60();
    if (!os_log_type_enabled(v27, v31))
    {
      uint64_t v30 = 0;
      uint64_t v19 = v5;
      uint64_t v33 = v42;
      goto LABEL_29;
    }
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl(&dword_1DE913000, v27, v31, "Offline Readiness processor will be disabled due to feature enablement", v29, 2u);
    uint64_t v30 = 0;
    uint64_t v19 = v5;
  }
  uint64_t v33 = v42;
LABEL_14:
  MEMORY[0x1E01EFA10](v29, -1, -1);
LABEL_29:

  (*(void (**)(char *, uint64_t))(v2 + 8))(v19, v33);
  return v30;
}

id sub_1DF6C9138(void *a1)
{
  sub_1DF6C6254();
  id result = objc_msgSend(a1, sel_isNetworkReachable);
  if (result)
  {
    swift_retain();
    sub_1DF6CD384((uint64_t)sub_1DF6CE708, (uint64_t)&block_descriptor_41_0);
    return (id)swift_release();
  }
  return result;
}

void sub_1DF6C91E0(void *a1, uint64_t a2, void *a3)
{
  swift_unknownObjectRetain();
  id v5 = a1;
  sub_1DF6C9138(a3);
  swift_unknownObjectRelease();
}

void sub_1DF6C924C()
{
}

uint64_t sub_1DF6C9350(char *a1)
{
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = (void *)(*MEMORY[0x1E4FBC8C8] & *(void *)a1);
  sub_1DEB0AF58(*(void *)&a1[v3[20]], *(void *)&a1[v3[20] + 8]);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *))(*(void *)(v3[12] - 8) + 8))(&a1[*(void *)((*v2 & *(void *)a1) + 0xB8)]);
  (*(void (**)(char *))(*(void *)(v3[11] - 8) + 8))(&a1[*(void *)((*v2 & *(void *)a1) + 0xC0)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(void *)((*v2 & *(void *)a1) + 0xC8)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(void *)((*v2 & *(void *)a1) + 0xD0)]);
  swift_unknownObjectRelease();
  uint64_t v4 = &a1[*(void *)((*v2 & *(void *)a1) + 0xE0)];
  uint64_t v5 = sub_1DFDF7BE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  uint64_t v6 = &a1[*(void *)((*v2 & *(void *)a1) + 0xF8)];
  uint64_t v7 = sub_1DFDF5AD0();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = &a1[*(void *)((*v2 & *(void *)a1) + 0x100)];
  sub_1DEA54EDC();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  uint64_t v10 = MEMORY[0x1E4F27928];
  uint64_t v11 = MEMORY[0x1E4FBB718];
  sub_1DEA5A6B4((uint64_t)&a1[*(void *)((*v2 & *(void *)a1) + 0x110)], (uint64_t)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DEA21208);
  return sub_1DEA5A6B4((uint64_t)&a1[*(void *)((*v2 & *(void *)a1) + 0x118)], (uint64_t)&qword_1EBAA6DB0, v10, v11, (uint64_t (*)(void))sub_1DEA21208);
}

uint64_t type metadata accessor for OfflineReadinessSection()
{
  uint64_t result = qword_1EBAD0D78;
  if (!qword_1EBAD0D78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF6C97D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DFDF01D0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1DF6C98B8(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  return sub_1DF6C62C0(a1, a2, a3, a4);
}

uint64_t sub_1DF6C98E0()
{
  uint64_t v0 = sub_1DFDE7630();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDE7620();
  uint64_t v4 = sub_1DFDE7610();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1DFDF01B0();
  os_log_type_t v8 = sub_1DFDFEA60();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1DEA5CAB8(v4, v6, &v16);
    sub_1DFDFF680();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DE913000, v7, v8, "Offline Readiness will unbox cursor before committing to database, id=%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v10, -1, -1);
    MEMORY[0x1E01EFA10](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_getAssociatedConformanceWitness();
  sub_1DFDF9C50();
  sub_1DFDEE090();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = v6;
  uint64_t v12 = (void *)sub_1DFDEDCE0();
  type metadata accessor for OfflineFeedManifest(0);
  uint64_t v13 = sub_1DFDEDE10();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1DF6C9BEC()
{
  return sub_1DFDF7EE0();
}

id sub_1DF6C9C88(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v110 = a4;
  uint64_t v113 = a3;
  unint64_t v5 = (void *)*a2;
  uint64_t v6 = type metadata accessor for OfflineFeedManifest(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v84 = (uint64_t)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v5[12];
  uint64_t v9 = v5[10];
  uint64_t v10 = a2;
  uint64_t v111 = v5[11];
  uint64_t v112 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  unint64_t v109 = (char *)v83 - v13;
  uint64_t v107 = sub_1DFDF72B0();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v105 = (char *)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DFDF9DE0();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v104 = (char *)v83 - v16;
  uint64_t v17 = sub_1DFDF9D80();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v103 = (char *)v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = AssociatedConformanceWitness;
  uint64_t v100 = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_1DFDFF670();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v114 = (char *)v83 - v20;
  uint64_t v21 = sub_1DFDE7600();
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  id v118 = (char *)v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v117 = (char *)v83 - v24;
  uint64_t v94 = sub_1DFDF7120();
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v94);
  uint64_t v116 = (char *)v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = v9;
  uint64_t v102 = *(void *)(v9 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v101 = (char *)v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  unint64_t v115 = (char *)v83 - v29;
  uint64_t v95 = sub_1DFDE7630();
  uint64_t v30 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  os_log_type_t v32 = (char *)v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = (char *)sub_1DFDF9C00();
  uint64_t v33 = sub_1DFDF7300();
  sub_1DFDFE400();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v34 = sub_1DFDFDFD0();
  swift_bridgeObjectRelease();
  unsigned __int8 v35 = v10;
  uint64_t v119 = (uint64_t)v10;
  uint64_t v36 = v10[3];
  uint64_t v123 = (char *)v36;
  uint64_t v120 = v34;
  uint64_t v121 = v35;
  sub_1DEA21208(0, &qword_1EAC2FB28, (uint64_t (*)(uint64_t))type metadata accessor for OfflineReadinessSection, MEMORY[0x1E4FBB320]);
  sub_1DEA368C8(qword_1EAC2FB30, &qword_1EAC2FB28, (uint64_t (*)(uint64_t))type metadata accessor for OfflineReadinessSection);
  v83[1] = v36;
  swift_bridgeObjectRetain();
  uint64_t v85 = v33;
  os_log_type_t v37 = v108;
  uint64_t v99 = sub_1DFDFE0E0();
  uint64_t v108 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = v87;
  uint64_t v98 = sub_1DFDF9C50();
  sub_1DFDE7620();
  uint64_t v97 = sub_1DFDE7610();
  uint64_t v96 = v39;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v95);
  sub_1DFDF9BE0();
  uint64_t v95 = sub_1DFDF9BC0();
  (*(void (**)(char *, void, uint64_t))(v93 + 104))(v116, *MEMORY[0x1E4F7F2F8], v94);
  sub_1DFDF9BB0();
  sub_1DFDE75F0();
  uint64_t v40 = v38;
  sub_1DFDF7640();
  uint64_t v94 = sub_1DFDFE340();
  sub_1DFDFE400();
  swift_getTupleTypeMetadata2();
  sub_1DFDFE340();
  uint64_t v93 = sub_1DFDFDB50();
  uint64_t v92 = sub_1DFDFE340();
  uint64_t v91 = sub_1DFDFE340();
  sub_1DFDF7A50();
  uint64_t v90 = sub_1DFDFE340();
  unint64_t v89 = sub_1DEA6D7C0(MEMORY[0x1E4FBC860]);
  uint64_t v41 = v100;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DFDF92C0();
  swift_getTupleTypeMetadata2();
  sub_1DFDFE340();
  uint64_t v86 = sub_1DFDFDB50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v114, 1, 1, v41);
  sub_1DFDF9B90();
  sub_1DFDF9BA0();
  (*(void (**)(char *, void, uint64_t))(v106 + 104))(v105, *MEMORY[0x1E4F7F3D8], v107);
  sub_1DFDF7A20();
  uint64_t v42 = v101;
  sub_1DFDF9BE0();
  unint64_t v43 = v110;
  sub_1DFDF85B0();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v42, v40);
  sub_1DFDF79F0();
  uint64_t v44 = sub_1DFDF9B60();
  uint64_t v45 = swift_allocObject();
  swift_retain();
  *(void *)(v45 + 16) = sub_1DFDF7EF0();
  id v118 = (char *)v45;
  CACurrentMediaTime();
  uint64_t v46 = (char *)(v119 + *(void *)(*(void *)v119 + 128));
  swift_retain_n();
  unint64_t v47 = v43;
  swift_bridgeObjectRetain_n();
  uint64_t v48 = sub_1DFDF01B0();
  os_log_type_t v49 = sub_1DFDFEA60();
  int v50 = v49;
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v116 = (char *)swift_slowAlloc();
    uint64_t v123 = v116;
    *(_DWORD *)uint64_t v51 = 136446466;
    LODWORD(v115) = v50;
    uint64_t v117 = v46;
    swift_bridgeObjectRetain();
    uint64_t v125 = sub_1DEA5CAB8(v113, v47, (uint64_t *)&v123);
    sub_1DFDFF680();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v51 + 12) = 2050;
    sub_1DFDF9BD0();
    unint64_t v52 = v47;
    uint64_t v53 = MEMORY[0x1E01ECBB0]();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v125 = v53;
    unint64_t v47 = v52;
    sub_1DFDFF680();
    swift_release();
    _os_log_impl(&dword_1DE913000, v48, (os_log_type_t)v115, "Offline Readiness will commit to database, id=%{public}s, groupCount=%{public}ld", (uint8_t *)v51, 0x16u);
    long long v54 = v116;
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v54, -1, -1);
    MEMORY[0x1E01EFA10](v51, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
  long long v55 = v108;
  sub_1DFDF75F0();
  if (v55)
  {
    swift_bridgeObjectRetain();
    id v56 = v55;
    swift_bridgeObjectRetain();
    id v57 = v55;
    uint64_t v58 = sub_1DFDF01B0();
    os_log_type_t v59 = sub_1DFDFEA60();
    BOOL v60 = os_log_type_enabled(v58, v59);
    uint64_t v61 = v113;
    if (v60)
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v119 = v44;
      uint64_t v63 = v62;
      uint64_t v64 = swift_slowAlloc();
      uint64_t v125 = v64;
      *(_DWORD *)uint64_t v63 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v123 = (char *)sub_1DEA5CAB8(v61, v47, &v125);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v63 + 12) = 2082;
      uint64_t v123 = 0;
      unint64_t v124 = 0xE000000000000000;
      uint64_t v122 = v55;
      sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
      sub_1DFDFFB10();
      uint64_t v123 = (char *)sub_1DEA5CAB8((uint64_t)v123, v124, &v125);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DE913000, v58, v59, "Offline Readiness failed to commit to database, id=%{public}s, error=%{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v64, -1, -1);
      MEMORY[0x1E01EFA10](v63, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    sub_1DEA21208(0, (unint64_t *)&unk_1EAC38A90, type metadata accessor for OfflineFeedManifest, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v80 = sub_1DFDEDE70();
    swift_release();
    swift_release();
    return (id)v80;
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v65 = v44;
  uint64_t v66 = sub_1DFDF01B0();
  int v67 = sub_1DFDFEA60();
  BOOL v68 = os_log_type_enabled(v66, (os_log_type_t)v67);
  uint64_t v69 = v113;
  if (!v68)
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();

    goto LABEL_16;
  }
  LODWORD(v117) = v67;
  uint64_t v70 = swift_slowAlloc();
  uint64_t v116 = (char *)swift_slowAlloc();
  uint64_t v123 = v116;
  *(_DWORD *)uint64_t v70 = 136446978;
  swift_bridgeObjectRetain();
  uint64_t v125 = sub_1DEA5CAB8(v69, v47, (uint64_t *)&v123);
  sub_1DFDFF680();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v70 + 12) = 2082;
  uint64_t v71 = sub_1DFDF9B70();
  uint64_t v125 = sub_1DEA5CAB8(v71, v72, (uint64_t *)&v123);
  sub_1DFDFF680();
  uint64_t v119 = v65;
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v70 + 22) = 2082;
  qos_class_self();
  id result = (id)FCStringFromQoSClass();
  if (result)
  {
    uint64_t v74 = result;
    uint64_t v75 = sub_1DFDFDD20();
    unint64_t v77 = v76;

    uint64_t v125 = sub_1DEA5CAB8(v75, v77, (uint64_t *)&v123);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v70 + 32) = 2050;
    id result = (id)sub_1DFDFE560();
    if ((~*(void *)&v78 & 0x7FF0000000000000) != 0)
    {
      if (v78 > -9.22337204e18)
      {
        if (v78 < 9.22337204e18)
        {
          uint64_t v125 = (uint64_t)v78;
          sub_1DFDFF680();
          _os_log_impl(&dword_1DE913000, v66, (os_log_type_t)v117, "Offline Readiness finished committing to database, id=%{public}s, rootCursorIdentifier%{public}s, qos=%{public}s, time=%{public}lldms", (uint8_t *)v70, 0x2Au);
          uint64_t v79 = v116;
          swift_arrayDestroy();
          MEMORY[0x1E01EFA10](v79, -1, -1);
          MEMORY[0x1E01EFA10](v70, -1, -1);

LABEL_16:
          uint64_t v81 = swift_bridgeObjectRetain();
          uint64_t v82 = sub_1DF6C5B1C(v81);
          swift_bridgeObjectRelease();
          OfflineFeedManifest.init(_:)(v82, v84);
          sub_1DEA21208(0, (unint64_t *)&unk_1EAC38A90, type metadata accessor for OfflineFeedManifest, MEMORY[0x1E4FAB088]);
          swift_allocObject();
          uint64_t v80 = sub_1DFDEDE90();
          swift_release();
          swift_release();
          return (id)v80;
        }
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF6CAF70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v5 = type metadata accessor for OfflineReadinessSection();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (void *)((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = sub_1DFDF7300();
  uint64_t v9 = sub_1DFDFF670();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v25 - v11;
  uint64_t v13 = a1[1];
  v27[0] = *a1;
  v27[1] = v13;
  swift_bridgeObjectRetain();
  MEMORY[0x1E01EC3D0](v27, a2, MEMORY[0x1E4FBB1A0], v8, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1DF6CF9B8((uint64_t)a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for OfflineReadinessSection);
    uint64_t v15 = sub_1DFDF01B0();
    os_log_type_t v16 = sub_1DFDFEA60();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v27[0] = v18;
      *(_DWORD *)uint64_t v17 = 136446210;
      v25[1] = v17 + 4;
      uint64_t v19 = *v7;
      unint64_t v20 = v7[1];
      swift_bridgeObjectRetain();
      v27[3] = sub_1DEA5CAB8(v19, v20, v27);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      sub_1DF6CFA20((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for OfflineReadinessSection);
      _os_log_impl(&dword_1DE913000, v15, v16, "Offline Readiness failed to lookup group for section, id=%{public}s", v17, 0xCu);
      uint64_t v21 = 1;
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v18, -1, -1);
      MEMORY[0x1E01EFA10](v17, -1, -1);
    }
    else
    {

      sub_1DF6CFA20((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for OfflineReadinessSection);
      uint64_t v21 = 1;
    }
    uint64_t v23 = v26;
  }
  else
  {
    uint64_t v22 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v26, v12, v8);
    uint64_t v21 = 0;
    uint64_t v23 = v22;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v23, v21, 1, v8);
}

uint64_t *sub_1DF6CB368()
{
  uint64_t v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 120));
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 128);
  uint64_t v3 = sub_1DFDF01D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_1DF6CB444()
{
  return sub_1DF6CCAE0((uint64_t (*)(void))sub_1DF6CB368);
}

uint64_t type metadata accessor for OfflineReadinessFeedAdopter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DF6CB474()
{
  uint64_t result = type metadata accessor for OfflineReadinessSection();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_1DFDF01D0();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DF6CB5C8()
{
  return sub_1DF6C98E0();
}

uint64_t sub_1DF6CB5EC()
{
  uint64_t v0 = sub_1DFDE7630();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDE7620();
  uint64_t v4 = sub_1DFDE7610();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1DFDF01B0();
  os_log_type_t v8 = sub_1DFDFEA60();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1DEA5CAB8(v4, v6, &v18);
    sub_1DFDFF680();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DE913000, v7, v8, "Offline Readiness will unbox cursor before committing to database, id=%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v10, -1, -1);
    MEMORY[0x1E01EFA10](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_getAssociatedConformanceWitness();
  sub_1DFDF9C50();
  sub_1DFDEE090();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = v6;
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1DFDEDCE0();
  type metadata accessor for OfflineFeedManifest(0);
  sub_1DFDEDE10();
  swift_release();
  swift_release();

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v4;
  *(void *)(v13 + 24) = v6;
  uint64_t v14 = (void *)sub_1DFDEDCE0();
  uint64_t v15 = sub_1DFDEDE60();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_1DF6CB964()
{
  return sub_1DFDF7EE0();
}

uint64_t sub_1DF6CBA00(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v62 = a4;
  uint64_t v57 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(*(void *)a2 + 104);
  uint64_t v7 = *(void *)(*(void *)a2 + 80);
  uint64_t v70 = *(void *)(*(void *)a2 + 88);
  uint64_t v71 = v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v58 = &v50[-v9];
  uint64_t v10 = *(void *)(v5 + 112);
  uint64_t v68 = *(void *)(v5 + 96);
  uint64_t v69 = v10;
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  os_log_type_t v59 = &v50[-v11];
  uint64_t v64 = AssociatedConformanceWitness;
  uint64_t v12 = sub_1DFDF7300();
  uint64_t v61 = sub_1DFDFF670();
  uint64_t v13 = *(void *)(v61 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v61);
  os_log_type_t v16 = &v50[-v15];
  uint64_t v17 = *(void *)(v12 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v14);
  int v67 = &v50[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = &v50[-v20];
  v74[0] = sub_1DFDF9C00();
  sub_1DFDFE400();
  swift_getWitnessTable();
  uint64_t v22 = v17;
  uint64_t v23 = v72;
  sub_1DFDFE0F0();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v72 = v12;
  if (v24(v16, 1, v12) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v16, v61);
    v74[0] = v7;
    v74[1] = v70;
    v74[2] = v68;
    v74[3] = v71;
    v74[4] = v69;
    uint64_t v4 = type metadata accessor for OfflineReadinessFeedMicroAdopter.Errors();
    swift_getWitnessTable();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    uint64_t v61 = v23;
    uint64_t v54 = v7;
    uint64_t v25 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32);
    uint64_t v26 = v72;
    v25(v21, v16, v72);
    CFTimeInterval v27 = CACurrentMediaTime();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v67, v21, v26);
    unint64_t v28 = v62;
    swift_bridgeObjectRetain_n();
    uint64_t v29 = sub_1DFDF01B0();
    os_log_type_t v30 = sub_1DFDFEA60();
    int v31 = v30;
    BOOL v32 = os_log_type_enabled(v29, v30);
    uint64_t v56 = v22;
    long long v55 = v21;
    if (v32)
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      v74[0] = v53;
      *(_DWORD *)uint64_t v33 = 136446466;
      os_log_t v52 = v29;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1DEA5CAB8(v57, v28, v74);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2082;
      int v51 = v31;
      uint64_t v34 = v72;
      unsigned __int8 v35 = v67;
      uint64_t v36 = sub_1DFDF72D0();
      uint64_t v73 = sub_1DEA5CAB8(v36, v37, v74);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      int v67 = *(unsigned char **)(v22 + 8);
      ((void (*)(unsigned char *, uint64_t))v67)(v35, v34);
      os_log_t v38 = v52;
      _os_log_impl(&dword_1DE913000, v52, (os_log_type_t)v51, "Offline Readiness will commit to database, id=%{public}s, group=%{public}s", (uint8_t *)v33, 0x16u);
      uint64_t v39 = v53;
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v39, -1, -1);
      MEMORY[0x1E01EFA10](v33, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v40 = v67;
      int v67 = *(unsigned char **)(v22 + 8);
      ((void (*)(unsigned char *, uint64_t))v67)(v40, v72);
    }
    uint64_t v41 = v59;
    uint64_t v42 = v60;
    unint64_t v43 = v58;
    LOBYTE(v74[0]) = 1;
    (*(void (**)(uint64_t *, uint64_t))(v69 + 24))(v74, v68);
    uint64_t v44 = v55;
    sub_1DFDF72F0();
    sub_1DFDF7EB0();
    uint64_t v45 = v61;
    sub_1DFDF7600();
    if (v45)
    {
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v43, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v43, AssociatedTypeWitness);
      swift_release();
      uint64_t v46 = (CFTimeInterval *)swift_allocObject();
      uint64_t v47 = v57;
      *((void *)v46 + 2) = v4;
      *((void *)v46 + 3) = v47;
      *((void *)v46 + 4) = v28;
      v46[5] = v27;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v48 = (void *)sub_1DFDEDCE0();
      type metadata accessor for OfflineFeedManifest(0);
      uint64_t v4 = sub_1DFDEDDF0();
      swift_release();
      swift_release();
    }
    (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v41, v66);
    ((void (*)(unsigned char *, uint64_t))v67)(v44, v72);
  }
  return v4;
}

uint64_t sub_1DF6CC304(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedConformanceWitness();
  sub_1DFDF7300();
  if (sub_1DFDF72D0() == *(void *)(a2 + qword_1EAC2FA88) && v3 == *(void *)(a2 + qword_1EAC2FA88 + 8)) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1DFDFFF50();
  }
  swift_bridgeObjectRelease();
  return v5 & 1;
}

id sub_1DF6CC3E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for OfflineFeedManifest(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1DFDF01B0();
  os_log_type_t v12 = sub_1DFDFEA60();
  if (!os_log_type_enabled(v11, v12))
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_8;
  }
  uint64_t v25 = v10;
  uint64_t v26 = v4;
  uint64_t v13 = swift_slowAlloc();
  uint64_t v24 = swift_slowAlloc();
  uint64_t v28 = v24;
  *(_DWORD *)uint64_t v13 = 136446722;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1DEA5CAB8(a3, a4, &v28);
  sub_1DFDFF680();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v13 + 12) = 2082;
  qos_class_self();
  id result = (id)FCStringFromQoSClass();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = sub_1DFDFDD20();
    unint64_t v18 = v17;

    uint64_t v27 = sub_1DEA5CAB8(v16, v18, &v28);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 22) = 2050;
    id result = (id)sub_1DFDFE560();
    if ((~*(void *)&v19 & 0x7FF0000000000000) != 0)
    {
      if (v19 > -9.22337204e18)
      {
        if (v19 < 9.22337204e18)
        {
          uint64_t v27 = (uint64_t)v19;
          sub_1DFDFF680();
          _os_log_impl(&dword_1DE913000, v11, v12, "Offline Readiness finished committing to database, id=%{public}s, qos=%{public}s, time=%{public}lldms", (uint8_t *)v13, 0x20u);
          uint64_t v20 = v24;
          swift_arrayDestroy();
          MEMORY[0x1E01EFA10](v20, -1, -1);
          MEMORY[0x1E01EFA10](v13, -1, -1);

          uint64_t v10 = v25;
LABEL_8:
          uint64_t v21 = a2 + qword_1EAC2FA88;
          uint64_t v22 = type metadata accessor for OfflineReadinessSection();
          sub_1DF6CF9B8(v21 + *(int *)(v22 + 20), (uint64_t)v10, type metadata accessor for OfflineFeedManifest);
          sub_1DEA21208(0, (unint64_t *)&unk_1EAC38A90, type metadata accessor for OfflineFeedManifest, MEMORY[0x1E4FAB088]);
          swift_allocObject();
          return (id)sub_1DFDEDE90();
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DF6CC72C(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_bridgeObjectRetain();
  id v7 = a1;
  swift_bridgeObjectRetain();
  id v8 = a1;
  uint64_t v9 = sub_1DFDF01B0();
  os_log_type_t v10 = sub_1DFDFEA60();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v11 = 136446466;
    swift_bridgeObjectRetain();
    sub_1DEA5CAB8(a3, a4, &v13);
    sub_1DFDFF680();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2082;
    sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
    sub_1DFDFFB10();
    sub_1DEA5CAB8(0, 0xE000000000000000, &v13);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DE913000, v9, v10, "Offline Readiness failed to commit to database, id=%{public}s, error=%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v12, -1, -1);
    MEMORY[0x1E01EFA10](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t *sub_1DF6CC97C()
{
  uint64_t v1 = *v0;
  swift_release();
  sub_1DF6CFA20((uint64_t)v0 + qword_1EAC2FA88, (uint64_t (*)(void))type metadata accessor for OfflineReadinessSection);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 96) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 136));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 144));
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 152);
  uint64_t v3 = sub_1DFDF01D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_1DF6CCAC8()
{
  return sub_1DF6CCAE0((uint64_t (*)(void))sub_1DF6CC97C);
}

uint64_t sub_1DF6CCAE0(uint64_t (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OfflineReadinessFeedMicroAdopter()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DF6CCB50()
{
  return sub_1DF6CB5EC();
}

uint64_t sub_1DF6CCB74()
{
  uint64_t v0 = sub_1DFDFEE50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDFEE30();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DFDF6BA0();
  MEMORY[0x1F4188790](v5 - 8);
  v8[0] = sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
  sub_1DFDF6B60();
  v8[1] = MEMORY[0x1E4FBC860];
  sub_1DF6CF970((unint64_t *)&unk_1EBABAC80, MEMORY[0x1E4FBCC10]);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1DEA21208(0, (unint64_t *)&unk_1EBABA980, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1DEA368C8((unint64_t *)&qword_1EBABA990, (unint64_t *)&unk_1EBABA980, v6);
  sub_1DFDFF830();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1DFDFEE90();
  qword_1EBAD1A50 = result;
  return result;
}

void *sub_1DF6CCDF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDF6BF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 48);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v7 = v6;
  unint64_t v8 = sub_1DFDF6C20();
  os_log_type_t v10 = *(void (**)(void *, uint64_t))(v3 + 8);
  uint64_t v9 = v3 + 8;
  v10(v5, v2);
  if ((v8 & 1) == 0) {
    goto LABEL_64;
  }
  uint64_t v11 = *(void **)(v1 + 56);
  if (v11)
  {
    uint64_t v12 = *(void **)(v1 + 64);
    swift_beginAccess();
    unint64_t v13 = *(void *)(v1 + 72);
    sub_1DF6CF280(v11);
    swift_bridgeObjectRetain();
    char v14 = sub_1DF1B5EA8((uint64_t)v11, v13);
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0 && (swift_retain(), sub_1DFDEDD10(), swift_release(), v56 != 1))
    {

      swift_unknownObjectRelease();
    }
    else
    {
      if (v12)
      {
        objc_msgSend(v12, sel_cancel);
        swift_unknownObjectRelease();
      }
    }
  }
  swift_beginAccess();
  unint64_t v8 = *(void *)(v1 + 72);
  uint64_t v9 = v8 >> 62;
  if (v8 >> 62)
  {
LABEL_65:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1DFDFFBE0();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v15 < 0)
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1DFDFFBE0();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v51 < 0)
    {
LABEL_71:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1DFDFFBE0();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v52 < v15)
    {
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v8 & 0xC000000000000001) != 0 && v15)
  {
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAAD0);
    uint64_t v16 = 0;
    do
    {
      uint64_t v17 = v16 + 1;
      sub_1DFDFF9F0();
      uint64_t v16 = v17;
    }
    while (v15 != v17);
  }
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1DFDFFBF0();
    uint64_t v19 = v21;
    uint64_t v20 = v22;
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v15 = v24 >> 1;
  }
  else
  {
    uint64_t v18 = v8 & 0xFFFFFFFFFFFFFF8;
    uint64_t v19 = (v8 & 0xFFFFFFFFFFFFFF8) + 32;
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
  }
  uint64_t result = (void *)swift_endAccess();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v9 = MEMORY[0x1E4FBC860] + 32;
  uint64_t v56 = MEMORY[0x1E4FBC860];
  uint64_t v57 = MEMORY[0x1E4FBC860] + 32;
  long long v58 = xmmword_1DFE14050;
  uint64_t v27 = v15 - v20;
  uint64_t v53 = v18;
  uint64_t v54 = (void *)v1;
  if (v15 != v20)
  {
    if (v15 > v20)
    {
      uint64_t v28 = 0;
      uint64_t v9 = MEMORY[0x1E4FBC860] + 32;
      unint64_t v29 = 1;
      int v31 = &selRef_setMinimumLineHeight_;
      uint64_t v1 = v19 + 8 * v20;
      while (1)
      {
        unint64_t v8 = (unint64_t)*(id *)v1;
        id v32 = objc_msgSend((id)v8, v31[314], v53);
        swift_unknownObjectRelease();
        if (v32 || (objc_msgSend((id)v8, sel_isDownloadFailureRecoverable) & 1) == 0)
        {
        }
        else
        {
          if ((v29 & 1) == 0
            || (char isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull(),
                uint64_t v56 = v26,
                (isUniquelyReferenced_nonNull & 1) == 0))
          {
            if (__OFSUB__(v29 >> 1, v28)) {
              goto LABEL_59;
            }
            sub_1DF6CF1C4((v29 >> 1) - v28);
          }
          unint64_t v29 = *((void *)&v58 + 1);
          uint64_t v9 = *((void *)&v58 + 1) >> 1;
          uint64_t v55 = v58;
          uint64_t v34 = (*((void *)&v58 + 1) >> 1) - v58;
          BOOL v35 = __OFSUB__(*((void *)&v58 + 1) >> 1, (void)v58);
          if (__OFSUB__(*((void *)&v58 + 1) >> 1, (void)v58)) {
            goto LABEL_57;
          }
          uint64_t v36 = (*((void *)&v58 + 1) >> 1) - v58;
          if (BYTE8(v58))
          {
            uint64_t v37 = v57;
            sub_1DFDFFF90();
            swift_unknownObjectRetain();
            uint64_t v38 = swift_dynamicCastClass();
            if (!v38)
            {
              swift_unknownObjectRelease();
              uint64_t v38 = MEMORY[0x1E4FBC860];
            }
            uint64_t v39 = *(void *)(v38 + 16);
            if (v37 + 8 * v55 + 8 * v34 == v38 + 8 * v39 + 32)
            {
              unint64_t v40 = *(void *)(v38 + 24);
              swift_release();
              uint64_t v41 = (v40 >> 1) - v39;
              BOOL v42 = __OFADD__(v34, v41);
              uint64_t v36 = v34 + v41;
              if (v42) {
                goto LABEL_63;
              }
            }
            else
            {
              swift_release();
              uint64_t v36 = v34;
            }
          }
          uint64_t v43 = v34 + 1;
          if (v36 < v34 + 1)
          {
            sub_1DF6CF1C4(v34);
            unint64_t v29 = *((void *)&v58 + 1);
            uint64_t v9 = *((void *)&v58 + 1) >> 1;
            uint64_t v55 = v58;
            uint64_t v44 = (*((void *)&v58 + 1) >> 1) - v58;
            if (__OFSUB__(*((void *)&v58 + 1) >> 1, (void)v58))
            {
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
          }
          else
          {
            uint64_t v44 = v34;
            if (v35) {
              goto LABEL_56;
            }
          }
          uint64_t v45 = v43 - v44;
          if (__OFSUB__(v43, v44)) {
            goto LABEL_58;
          }
          uint64_t v26 = v56;
          if (v45)
          {
            sub_1DFDFFF90();
            swift_unknownObjectRetain();
            uint64_t v46 = swift_dynamicCastClass();
            if (!v46)
            {
              swift_unknownObjectRelease();
              uint64_t v46 = MEMORY[0x1E4FBC860];
            }
            uint64_t v47 = *(void *)(v46 + 16);
            BOOL v42 = __OFADD__(v47, v45);
            uint64_t v48 = v47 + v45;
            if (v42) {
              goto LABEL_60;
            }
            *(void *)(v46 + 16) = v48;
            swift_release();
            uint64_t v49 = v9 + v45;
            if (__OFADD__(v9, v45)) {
              goto LABEL_61;
            }
            if (v49 < 0) {
              goto LABEL_62;
            }
            unint64_t v29 = v29 & 1 | (2 * v49);
            *((void *)&v58 + 1) = v29;
          }
          uint64_t v9 = v57;
          uint64_t v28 = v55;
          *(void *)(v57 + 8 * v55 + 8 * v34) = v8;
          int v31 = &selRef_setMinimumLineHeight_;
        }
        v1 += 8;
        if (!--v27) {
          goto LABEL_20;
        }
      }
    }
    goto LABEL_69;
  }
  uint64_t v28 = 0;
  unint64_t v29 = 1;
LABEL_20:
  swift_unknownObjectRelease();
  os_log_type_t v30 = v54;
  v54[2] = v26;
  v30[3] = v9;
  v30[4] = v28;
  v30[5] = v29;
  swift_unknownObjectRelease();
  return sub_1DF6CD77C();
}

uint64_t sub_1DF6CD364()
{
  return sub_1DF6CD384((uint64_t)sub_1DF6CE708, (uint64_t)&block_descriptor_122);
}

uint64_t sub_1DF6CD384(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1DFDF6B40();
  uint64_t v17 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DFDF6BA0();
  uint64_t v8 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  os_log_type_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v2 + 48);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = a1;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9744A8;
  aBlock[3] = a2;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1DFDF6B70();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1DF6CF970((unint64_t *)&qword_1EBAB9EB0, MEMORY[0x1E4FBCB00]);
  unint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1DEA21208(0, (unint64_t *)&qword_1EBABA850, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1DEA368C8((unint64_t *)&qword_1EBABA860, (unint64_t *)&qword_1EBABA850, v13);
  sub_1DFDFF830();
  MEMORY[0x1E01ED6B0](0, v10, v7, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_1DF6CD66C(uint64_t a1)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = MEMORY[0x1E4FBC860] + 32;
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 24) = v4;
  *(_OWORD *)(v1 + 32) = xmmword_1DFE14050;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 72) = v3;
  sub_1DEA9B634(0, (unint64_t *)&unk_1EBAD2950, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB060]);
  swift_allocObject();
  *(void *)(v1 + 80) = sub_1DFDEDCF0();
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(void *)(v1 + 48) = a1;
  return v1;
}

uint64_t sub_1DF6CD724()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DF6CCDF8();
    return swift_release();
  }
  return result;
}

void *sub_1DF6CD77C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDF6BF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)v1[6];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v7 = v6;
  char v8 = sub_1DFDF6C20();
  uint64_t result = (void *)(*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
  {
    if (!v1[7])
    {
      swift_retain();
      sub_1DFDEDD10();
      uint64_t result = (void *)swift_release();
      if ((aBlock[0] & 1) == 0)
      {
        uint64_t result = sub_1DF6CD9B8();
        if (result)
        {
          os_log_type_t v10 = result;
          uint64_t v11 = swift_allocObject();
          swift_weakInit();
          uint64_t v12 = swift_allocObject();
          *(void *)(v12 + 16) = v11;
          *(void *)(v12 + 24) = v10;
          aBlock[4] = sub_1DF6CF70C;
          aBlock[5] = v12;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1DE9744A8;
          aBlock[3] = &block_descriptor_13_6;
          unint64_t v13 = _Block_copy(aBlock);
          id v14 = v10;
          swift_release();
          id v15 = objc_msgSend(v14, sel_downloadIfNeededWithCompletionQueue_completion_, v7, v13);
          _Block_release(v13);
          uint64_t v16 = (void *)v1[7];
          v1[7] = v10;
          v1[8] = v15;
          return sub_1DF6CF714(v16);
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1DF6CD9B8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3] >> 1;
  if (v1 == v2) {
    return 0;
  }
  if (v1 >= v2)
  {
    __break(1u);
    return result;
  }
  uint64_t v3 = *(void **)(v0[1] + 8 * v1);
  v0[2] = v1 + 1;
  id v4 = v3;
  return v3;
}

uint64_t sub_1DF6CDA0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF6CDA3C(MEMORY[0x1E4F81F78], a1);
}

uint64_t sub_1DF6CDA24@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF6CDA3C(MEMORY[0x1E4F81F80], a1);
}

uint64_t sub_1DF6CDA3C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  uint64_t result = MEMORY[0x1F4188790]();
  char v8 = (char *)&v16 - v7;
  uint64_t v10 = v2[2];
  unint64_t v9 = v2[3];
  if (v10 == v9 >> 1)
  {
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6[7];
    return v11(a2, 1, 1, v4);
  }
  else if (v10 < (uint64_t)(v9 >> 1))
  {
    uint64_t v13 = *v2;
    uint64_t v12 = v2[1];
    uint64_t v14 = v12 + v6[9] * v10;
    id v15 = (void (*)(char *, uint64_t, uint64_t))v6[2];
    uint64_t v17 = v6;
    v15(v8, v14, v4);
    *uint64_t v2 = v13;
    v2[1] = v12;
    v2[2] = v10 + 1;
    v2[3] = v9;
    ((void (*)(uint64_t, char *, uint64_t))v17[4])(a2, v8, v4);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v17[7])(a2, 0, 1, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF6CDBD4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = *(void **)(result + 56);
    v4[7] = 0;
    v4[8] = 0;
    uint64_t v6 = (uint64_t)sub_1DF6CF714(v5);
    uint64_t v7 = (void (*)(uint64_t))v4[11];
    if (v7)
    {
      swift_retain();
      v7(a2);
      uint64_t v6 = sub_1DEABEEF0((uint64_t)v7);
    }
    if (v4[4] == v4[5] >> 1)
    {
      char v8 = (void (*)(uint64_t))v4[13];
      if (v8)
      {
        uint64_t v9 = swift_retain();
        v8(v9);
        uint64_t v6 = sub_1DEABEEF0((uint64_t)v8);
      }
    }
    sub_1DF6CD77C(v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF6CDCB0()
{
  swift_unknownObjectRelease();

  sub_1DF6CF714(*(void **)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEABEEF0(*(void *)(v0 + 88));
  sub_1DEABEEF0(*(void *)(v0 + 104));
  return v0;
}

uint64_t sub_1DF6CDD00()
{
  sub_1DF6CDCB0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetDownloadQueue()
{
  return self;
}

uint64_t sub_1DF6CDD54()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DF6CDDC4()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Throttler()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_1DF6CDE1C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDE7600();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = (int *)type metadata accessor for OfflineFeedManifest(0);
    v12(&v9[v13[5]], &v10[v13[5]], v11);
    *(void *)&v9[v13[6]] = *(void *)&v10[v13[6]];
    *(void *)&v9[v13[7]] = *(void *)&v10[v13[7]];
    *(void *)&v9[v13[8]] = *(void *)&v10[v13[8]];
    *(void *)&v9[v13[9]] = *(void *)&v10[v13[9]];
    *(void *)&v9[v13[10]] = *(void *)&v10[v13[10]];
    *(void *)&v9[v13[11]] = *(void *)&v10[v13[11]];
    *(void *)&v9[v13[12]] = *(void *)&v10[v13[12]];
    uint64_t v14 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    id v15 = *(void **)((char *)a2 + v14);
    *(void *)((char *)v4 + v14) = v15;
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v15;
  }
  return v4;
}

void *sub_1DF6CDFFC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDE7600();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for OfflineFeedManifest(0);
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  *(void *)&v7[v11[6]] = *(void *)&v8[v11[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[7]] = *(void *)&v8[v11[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[8]] = *(void *)&v8[v11[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[9]] = *(void *)&v8[v11[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[10]] = *(void *)&v8[v11[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[11]] = *(void *)&v8[v11[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[12]] = *(void *)&v8[v11[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)((char *)a2 + v12);
  uint64_t v14 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = v13;
  id v15 = v13;

  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_1DF6CE1E0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDE7600();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for OfflineFeedManifest(0);
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  *(void *)&v7[v11[6]] = *(void *)&v8[v11[6]];
  *(void *)&v7[v11[7]] = *(void *)&v8[v11[7]];
  *(void *)&v7[v11[8]] = *(void *)&v8[v11[8]];
  *(void *)&v7[v11[9]] = *(void *)&v8[v11[9]];
  *(void *)&v7[v11[10]] = *(void *)&v8[v11[10]];
  *(void *)&v7[v11[11]] = *(void *)&v8[v11[11]];
  *(void *)&v7[v11[12]] = *(void *)&v8[v11[12]];
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_1DF6CE31C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for OfflineFeedManifest(0);
  v11(&v8[v12[5]], &v9[v12[5]], v10);
  *(void *)&v8[v12[6]] = *(void *)&v9[v12[6]];
  swift_bridgeObjectRelease();
  *(void *)&v8[v12[7]] = *(void *)&v9[v12[7]];
  swift_bridgeObjectRelease();
  *(void *)&v8[v12[8]] = *(void *)&v9[v12[8]];
  swift_bridgeObjectRelease();
  *(void *)&v8[v12[9]] = *(void *)&v9[v12[9]];
  swift_bridgeObjectRelease();
  *(void *)&v8[v12[10]] = *(void *)&v9[v12[10]];
  swift_bridgeObjectRelease();
  *(void *)&v8[v12[11]] = *(void *)&v9[v12[11]];
  swift_bridgeObjectRelease();
  *(void *)&v8[v12[12]] = *(void *)&v9[v12[12]];
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);

  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1DF6CE4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for OfflineFeedManifest(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF6CE55C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for OfflineFeedManifest(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DF6CE604()
{
  uint64_t result = type metadata accessor for OfflineFeedManifest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF6CE6C0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 136);
}

uint64_t sub_1DF6CE6C8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 152);
}

uint64_t sub_1DF6CE6D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF6CE708()
{
  return sub_1DF6CD724();
}

uint64_t sub_1DF6CE724(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  uint64_t v6 = v4[3] >> 1;
  uint64_t v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v15 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v33 = v15 - v14;
  if (__OFSUB__(v15, v14))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  __dst = (char *)(v9 + 32);
  uint64_t v17 = v9 + 32 + 8 * a2;
  int v31 = (char *)(v17 + 8 * a3);
  uint64_t v18 = sub_1DF6CF2C4(v7);
  id v32 = a4;
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v30 = v9;
    uint64_t v20 = v4[2];
    uint64_t v21 = (char *)(v4[1] + 8 * v20);
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAAD0);
    swift_arrayDestroy();
    if (a2 < 0) {
      goto LABEL_43;
    }
    uint64_t v22 = &v21[8 * a2];
    if (__dst != v21 || __dst >= v22) {
      memmove(__dst, v21, 8 * a2);
    }
    swift_arrayDestroy();
    v32(v17, a3);
    if (v14 < 0) {
      goto LABEL_43;
    }
    unint64_t v23 = &v22[8 * v33];
    if (v31 != v23 || v31 >= &v23[8 * v14]) {
      memmove(v31, v23, 8 * v14);
    }
    swift_arrayDestroy();
    *(void *)(v19 + 16) = 0;
    swift_release();
    uint64_t v9 = v30;
LABEL_23:
    swift_retain();
    uint64_t result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v20))
    {
      uint64_t v28 = *(void *)(v9 + 16);
      BOOL v11 = __OFADD__(v20, v28);
      uint64_t v29 = v20 + v28;
      if (!v11)
      {
        if (v29 >= v20)
        {
          if ((v29 & 0x8000000000000000) == 0)
          {
            *unint64_t v4 = v9;
            v4[1] = &__dst[-8 * v20];
            void v4[2] = v20;
            v4[3] = (2 * v29) | 1;
            return result;
          }
          goto LABEL_36;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v20 = v4[2];
  BOOL v11 = __OFADD__(v20, a2);
  uint64_t v24 = v20 + a2;
  if (v11)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v24 < v20)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (__OFSUB__(v24, v20))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAAD0);
  swift_arrayInitWithCopy();
  a4((uint64_t)&__dst[8 * (v24 - v20)], a3);
  uint64_t v25 = v24 + v33;
  if (__OFADD__(v24, v33))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v26 = v4[3] >> 1;
  if (v26 < v25)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!__OFSUB__(v26, v25))
  {
    swift_arrayInitWithCopy();
    goto LABEL_23;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DF6CEA54(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  uint64_t v6 = v4[3] >> 1;
  uint64_t v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v15 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v32 = v15 - v14;
  if (__OFSUB__(v15, v14))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  __dst = (char *)(v9 + 32);
  uint64_t v16 = v9 + 32 + 16 * a2;
  uint64_t v17 = sub_1DF6CF434(v7);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v29 = (char *)(v16 + 16 * a3);
    uint64_t v30 = v9;
    uint64_t v19 = v4[2];
    uint64_t v20 = (char *)(v4[1] + 16 * v19);
    swift_arrayDestroy();
    if (a2 < 0) {
      goto LABEL_43;
    }
    uint64_t v21 = &v20[16 * a2];
    if (__dst != v20 || __dst >= v21) {
      memmove(__dst, v20, 16 * a2);
    }
    swift_arrayDestroy();
    a4(v16, a3);
    if (v14 < 0) {
      goto LABEL_43;
    }
    uint64_t v22 = &v21[16 * v32];
    if (v29 != v22 || v29 >= &v22[16 * v14]) {
      memmove(v29, v22, 16 * v14);
    }
    swift_arrayDestroy();
    *(void *)(v18 + 16) = 0;
    swift_release();
    uint64_t v9 = v30;
LABEL_23:
    swift_retain();
    uint64_t result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v19))
    {
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v11 = __OFADD__(v19, v27);
      uint64_t v28 = v19 + v27;
      if (!v11)
      {
        if (v28 >= v19)
        {
          if ((v28 & 0x8000000000000000) == 0)
          {
            *unint64_t v4 = v9;
            v4[1] = &__dst[-16 * v19];
            void v4[2] = v19;
            v4[3] = (2 * v28) | 1;
            return result;
          }
          goto LABEL_36;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v19 = v4[2];
  uint64_t v23 = v19 + a2;
  if (__OFADD__(v19, a2))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v23 < v19)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (__OFSUB__(v23, v19))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  swift_arrayInitWithCopy();
  a4((uint64_t)&__dst[16 * a2], a3);
  uint64_t v24 = v23 + v32;
  if (__OFADD__(v23, v32))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v25 = v4[3] >> 1;
  if (v25 < v24)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!__OFSUB__(v25, v24))
  {
    swift_arrayInitWithCopy();
    goto LABEL_23;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DF6CED58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_34:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v7 = a2;
  uint64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_34;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = a4 + 8 * a5 + 8 * v8;
  if (v13 == v11 + 8 * v12 + 32)
  {
    unint64_t v15 = *(void *)(v11 + 24);
    uint64_t result = swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  uint64_t v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      uint64_t v17 = MEMORY[0x1E4FBC860];
    }
    uint64_t v18 = *(void *)(v17 + 16);
    if (v13 == v17 + 8 * v18 + 32)
    {
      unint64_t v20 = *(void *)(v17 + 24);
      uint64_t result = swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = *(void *)(v17 + 16);
  if (v13 == v17 + 8 * v19 + 32)
  {
    unint64_t v23 = *(void *)(v17 + 24);
    uint64_t result = swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_39:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= v6) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = v25;
  }
  if (!v26) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1DEA9B634(0, (unint64_t *)&qword_1EBAEB000, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v27 = (void *)swift_allocObject();
  int64_t v28 = _swift_stdlib_malloc_size_1(v27);
  uint64_t v29 = v28 - 32;
  if (v28 < 32) {
    uint64_t v29 = v28 - 25;
  }
  _OWORD v27[2] = v6;
  v27[3] = (2 * (v29 >> 3)) | 1;
  return (uint64_t)v27;
}

uint64_t sub_1DF6CEF84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_34:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v7 = a2;
  uint64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_34;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = a4 + 16 * a5 + 16 * v8;
  if (v13 == v11 + 16 * v12 + 32)
  {
    unint64_t v15 = *(void *)(v11 + 24);
    uint64_t result = swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  uint64_t v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      uint64_t v17 = MEMORY[0x1E4FBC860];
    }
    uint64_t v18 = *(void *)(v17 + 16);
    if (v13 == v17 + 16 * v18 + 32)
    {
      unint64_t v20 = *(void *)(v17 + 24);
      uint64_t result = swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = *(void *)(v17 + 16);
  if (v13 == v17 + 16 * v19 + 32)
  {
    unint64_t v23 = *(void *)(v17 + 24);
    uint64_t result = swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_39:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= v6) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = v25;
  }
  if (!v26) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1DEA9B634(0, (unint64_t *)&qword_1EBABB6F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v27 = (void *)swift_allocObject();
  int64_t v28 = _swift_stdlib_malloc_size_1(v27);
  uint64_t v29 = v28 - 32;
  if (v28 < 32) {
    uint64_t v29 = v28 - 17;
  }
  _OWORD v27[2] = v6;
  v27[3] = 2 * (v29 >> 4);
  return (uint64_t)v27;
}

uint64_t (*sub_1DF6CF1A8())()
{
  return nullsub_1;
}

uint64_t sub_1DF6CF1C4(uint64_t a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  unint64_t v7 = v1[3];
  swift_unknownObjectRetain();
  uint64_t v8 = sub_1DF6CED58(a1, v3, v4, v5, v6, v7);
  swift_unknownObjectRelease();
  uint64_t v11 = v8;
  uint64_t v9 = sub_1DF6CF1A8();
  sub_1DF6CE724(&v11, a1, 0, (void (*)(uint64_t, uint64_t))v9);
  swift_release();
  return swift_release();
}

id sub_1DF6CF280(id result)
{
  if (result)
  {
    id v1 = result;
    swift_unknownObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1DF6CF2C4(uint64_t a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (v8 + 8 * v6 + 8 * v7 != v9 + 8 * v10 + 32)
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = *(void *)(v9 + 24);
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1) {
      return 0;
    }
    sub_1DFDFFF90();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x1E4FBC860];
    }
    uint64_t v16 = v8 + 8 * v6 - a1;
    uint64_t v17 = v16 - 32;
    uint64_t v18 = v16 - 25;
    if (v17 >= 0) {
      uint64_t v18 = v17;
    }
    uint64_t isUniquelyReferenced_nonNull = v7 + (v18 >> 3);
    if (!__OFADD__(v7, v18 >> 3))
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4) {
        return a1;
      }
LABEL_21:
      sub_1DF6CF5A4(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF6CF434(uint64_t a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (v8 + 16 * v6 + 16 * v7 != v9 + 16 * v10 + 32)
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = *(void *)(v9 + 24);
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1) {
      return 0;
    }
    sub_1DFDFFF90();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x1E4FBC860];
    }
    uint64_t v16 = v8 + 16 * v6 - a1;
    uint64_t v17 = v16 - 32;
    uint64_t v18 = v16 - 17;
    if (v17 >= 0) {
      uint64_t v18 = v17;
    }
    uint64_t isUniquelyReferenced_nonNull = v7 + (v18 >> 4);
    if (!__OFADD__(v7, v18 >> 4))
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4) {
        return a1;
      }
LABEL_21:
      sub_1DF6CFCBC(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

char *sub_1DF6CF5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 8 * a1;
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAAD0);
  uint64_t result = (char *)swift_arrayDestroy();
  BOOL v10 = __OFSUB__(a3, v4);
  uint64_t v11 = a3 - v4;
  if (v10)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v11) {
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v10 = __OFSUB__(v12, a2);
  uint64_t v13 = v12 - a2;
  if (v10) {
    goto LABEL_18;
  }
  if (v13 < 0)
  {
LABEL_21:
    uint64_t result = (char *)sub_1DFDFFC60();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v8 + 8 * a3);
  uint64_t v14 = (char *)(v7 + 32 + 8 * a2);
  if (result != v14 || result >= &v14[8 * v13]) {
    uint64_t result = (char *)memmove(result, v14, 8 * v13);
  }
  uint64_t v16 = *(void *)(v7 + 16);
  BOOL v10 = __OFADD__(v16, v11);
  uint64_t v17 = v16 + v11;
  if (v10) {
    goto LABEL_19;
  }
  *(void *)(v7 + 16) = v17;
LABEL_14:
  if (a3 > 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1DF6CF6CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DF6CF70C()
{
  return sub_1DF6CDBD4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void *sub_1DF6CF714(void *result)
{
  if (result)
  {

    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DF6CF754()
{
  return swift_deallocObject();
}

uint64_t sub_1DF6CF78C()
{
  return sub_1DF6C8A80(*(void **)(v0 + 16));
}

uint64_t sub_1DF6CF794()
{
  uint64_t v1 = sub_1DFDF5AD0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1DF6CF84C()
{
  uint64_t v1 = *(void *)(sub_1DFDF5AD0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(char **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DF6C6868((char *)(v0 + v2), v3);
}

uint64_t sub_1DF6CF8F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF6C6F84(a1);
}

uint64_t sub_1DF6CF938@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF6C7054(*(void **)(v1 + 16), a1);
}

uint64_t sub_1DF6CF954()
{
  return sub_1DF0D0D3C(v0);
}

uint64_t sub_1DF6CF970(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF6CF9B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF6CFA20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF6CFA80()
{
  return sub_1DF6C9BEC();
}

uint64_t sub_1DF6CFA9C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1DF6CFAD4(uint64_t a1, void *a2)
{
  return sub_1DF6C9C88(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1DF6CFAF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF6CAF70(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DF6CFB0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF6CFB48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF6CFBB0()
{
  return sub_1DF6CB964();
}

uint64_t sub_1DF6CFBCC(uint64_t a1, uint64_t a2)
{
  return sub_1DF6CBA00(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1DF6CFBE8(void *a1, uint64_t a2)
{
  sub_1DF6CC72C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1DF6CFBF0(uint64_t a1)
{
  return sub_1DF6CC304(a1, v1) & 1;
}

uint64_t type metadata accessor for OfflineReadinessFeedMicroAdopter.Errors()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DF6CFC28()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1DF6CFC68(uint64_t a1)
{
  return sub_1DF6CC3E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1DF6CFC8C()
{
}

char *sub_1DF6CFCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 16 * a1;
  uint64_t result = (char *)swift_arrayDestroy();
  BOOL v10 = __OFSUB__(a3, v4);
  uint64_t v11 = a3 - v4;
  if (v10)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v11) {
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v10 = __OFSUB__(v12, a2);
  uint64_t v13 = v12 - a2;
  if (v10) {
    goto LABEL_18;
  }
  if (v13 < 0)
  {
LABEL_21:
    uint64_t result = (char *)sub_1DFDFFC60();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v8 + 16 * a3);
  uint64_t v14 = (char *)(v7 + 32 + 16 * a2);
  if (result != v14 || result >= &v14[16 * v13]) {
    uint64_t result = (char *)memmove(result, v14, 16 * v13);
  }
  uint64_t v16 = *(void *)(v7 + 16);
  BOOL v10 = __OFADD__(v16, v11);
  uint64_t v17 = v16 + v11;
  if (v10) {
    goto LABEL_19;
  }
  *(void *)(v7 + 16) = v17;
LABEL_14:
  if (a3 > 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1DF6CFDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

unsigned char *sub_1DF6CFDD8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF6CFE74);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF6CFE9C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DF6CFED0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = a1 + 32;
    if (v1 == 1)
    {
      swift_unknownObjectRetain();
      swift_retain();
    }
    else
    {
      sub_1DFDFFF90();
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v6 = swift_dynamicCastClass();
      if (!v6)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = MEMORY[0x1E4FBC860];
      }
      uint64_t v7 = *(void *)(v6 + 16);
      swift_release();
      if (v7 == v1 - 1)
      {
        if (!swift_dynamicCastClass()) {
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1DEC7AB1C(a1, v4, 1, (2 * v1) | 1);
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v3 = sub_1DFDF8510();
    sub_1DF6D0074();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v3 - 8) + 104))(v5, *MEMORY[0x1E4F7F968], v3);
    swift_willThrow();
  }
  return v3;
}

unint64_t sub_1DF6D0074()
{
  unint64_t result = qword_1EBABA180;
  if (!qword_1EBABA180)
  {
    sub_1DFDF8510();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABA180);
  }
  return result;
}

uint64_t destroy for NewFollowTodayFeedGroupEmitterCursor.TagHeadlines()
{
  swift_unknownObjectRelease();
  return swift_release();
}

void *_s7NewsUI236NewFollowTodayFeedGroupEmitterCursorV12TagHeadlinesVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for NewFollowTodayFeedGroupEmitterCursor.TagHeadlines(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for NewFollowTodayFeedGroupEmitterCursor.TagHeadlines(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NewFollowTodayFeedGroupEmitterCursor.TagHeadlines()
{
  return &type metadata for NewFollowTodayFeedGroupEmitterCursor.TagHeadlines;
}

ValueMetadata *type metadata accessor for NewFollowTodayFeedGroupEmitterCursor()
{
  return &type metadata for NewFollowTodayFeedGroupEmitterCursor;
}

uint64_t sub_1DF6D0204@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v43 = a2;
  sub_1DEA2126C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v40 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v42 = sub_1DFDEA520();
  uint64_t v17 = *(void *)(v42 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v18);
  BOOL v22 = (char *)&v40 - v21;
  double v23 = 0.0;
  if (!a1) {
    goto LABEL_11;
  }
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_progressLevel);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v24 = objc_msgSend(a1, sel_lastPlayedDate, result);
  if (v24)
  {
    uint64_t v25 = v24;
    sub_1DFDE7570();

    uint64_t v26 = sub_1DFDE7600();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v14, 0, 1, v26);
  }
  else
  {
    uint64_t v26 = sub_1DFDE7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v14, 1, 1, v26);
  }
  sub_1DEA01E8C((uint64_t)v14, (uint64_t)v16, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
  sub_1DFDE7600();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v16, 1, v26) == 1)
  {
    uint64_t result = sub_1DEA0957C((uint64_t)v16, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
  }
  else
  {
    sub_1DFDE7550();
    double v29 = v28;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v16, v26);
    double v23 = v29 * 1000.0;
  }
LABEL_11:
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  double v30 = 0.0;
  if (a1)
  {
    id v31 = objc_msgSend(a1, sel_completedDate);
    if (v31)
    {
      uint64_t v32 = v31;
      sub_1DFDE7570();

      uint64_t v33 = sub_1DFDE7600();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 0, 1, v33);
    }
    else
    {
      uint64_t v33 = sub_1DFDE7600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 1, 1, v33);
    }
    sub_1DEA01E8C((uint64_t)v8, (uint64_t)v11, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    sub_1DFDE7600();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v11, 1, v33) == 1)
    {
      uint64_t result = sub_1DEA0957C((uint64_t)v11, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    }
    else
    {
      sub_1DFDE7550();
      double v36 = v35;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v11, v33);
      double v30 = v36 * 1000.0;
    }
  }
  if ((~*(void *)&v30 & 0x7FF0000000000000) == 0) {
    goto LABEL_30;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v30 < 9.22337204e18)
  {
    sub_1DFDEA4F0();
    id v37 = objc_msgSend(v3, sel_identifier);
    sub_1DFDFDD20();

    id v38 = objc_msgSend(objc_msgSend(v3, sel_puzzleType), sel_identifier);
    swift_unknownObjectRelease();
    sub_1DFDFDD20();

    uint64_t v39 = v42;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v41, v22, v42);
    objc_msgSend(v3, sel_isPaid);
    objc_msgSend(v3, sel_difficulty);
    sub_1DFDEA140();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v39);
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1DF6D0894(id a1, uint64_t a2)
{
  if (a1)
  {
    id v4 = objc_msgSend(a1, sel_playDuration);
    uint64_t v5 = sub_1DF6D097C(a2);
    char v7 = v6;
    id v8 = objc_msgSend(a1, sel_rankID);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1DFDFDD20();
      uint64_t v12 = v11;

      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = sub_1DF6D097C(a2);
    char v7 = v13;
    id v4 = 0;
  }
  uint64_t v10 = 0;
  uint64_t v12 = 0;
LABEL_6:
  return MEMORY[0x1F4131CE0](v4, a1 == 0, v5, v7 & 1, v10, v12);
}

uint64_t sub_1DF6D097C(uint64_t a1)
{
  uint64_t v47 = (char *)a1;
  sub_1DEA2126C(0, (unint64_t *)&unk_1EAC2FBC0, MEMORY[0x1E4F808C8]);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v44 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v43 = (uint64_t)&v42 - v4;
  uint64_t v5 = sub_1DFDFBA20();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x1E4F80A88];
  sub_1DEA2126C(0, &qword_1EAC30470, MEMORY[0x1E4F80A88]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = sub_1DFDFC1E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  BOOL v22 = (char *)&v42 - v21;
  MEMORY[0x1F4188790](v20);
  id v24 = (char *)&v42 - v23;
  sub_1DF6D1004((uint64_t)v47, (uint64_t)v14, &qword_1EAC30470, v11);
  uint64_t v25 = sub_1DFDFADB0();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v25) == 1)
  {
    sub_1DEA0957C((uint64_t)v14, &qword_1EAC30470, MEMORY[0x1E4F80A88]);
  }
  else
  {
    uint64_t v42 = v8;
    uint64_t v47 = v10;
    uint64_t v27 = v46;
    sub_1DFDFADA0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v24, v22, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v24, v15);
    if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v19, v15) == *MEMORY[0x1E4F812A0])
    {
      (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
      uint64_t v28 = v45;
      uint64_t v29 = (uint64_t)v47;
      uint64_t v30 = v27;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v47, v19, v27);
      uint64_t v31 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v42, v29, v27);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v28 + 88))(v31, v27) == *MEMORY[0x1E4F80F90])
      {
        (*(void (**)(uint64_t, uint64_t))(v28 + 96))(v31, v27);
        uint64_t v32 = (void (*)(uint64_t))MEMORY[0x1E4F808C8];
        uint64_t v33 = v43;
        sub_1DEA01E8C(v31, v43, (unint64_t *)&unk_1EAC2FBC0, MEMORY[0x1E4F808C8]);
        uint64_t v34 = v44;
        sub_1DF6D1004(v33, v44, (unint64_t *)&unk_1EAC2FBC0, v32);
        uint64_t v35 = sub_1DFDFA6F0();
        uint64_t v36 = *(void *)(v35 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) != 1)
        {
          uint64_t v40 = sub_1DFDFA6D0();
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
          sub_1DEA0957C(v33, (unint64_t *)&unk_1EAC2FBC0, MEMORY[0x1E4F808C8]);
          (*(void (**)(char *, uint64_t))(v28 + 8))(v47, v30);
          (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
          return v40;
        }
        id v37 = (void (*)(uint64_t))MEMORY[0x1E4F808C8];
        sub_1DEA0957C(v34, (unint64_t *)&unk_1EAC2FBC0, MEMORY[0x1E4F808C8]);
        sub_1DEA0957C(v33, (unint64_t *)&unk_1EAC2FBC0, v37);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v47, v30);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
      }
      else
      {
        uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
        v39(v29, v27);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
        v39(v31, v27);
      }
    }
    else
    {
      id v38 = *(void (**)(char *, uint64_t))(v16 + 8);
      v38(v24, v15);
      v38(v19, v15);
    }
  }
  return 0;
}

uint64_t sub_1DF6D1004(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DEA2126C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DF6D1070(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v5 = sub_1DFDF6B40();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF6BA0();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF6BE0();
  uint64_t v29 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v25 - v16;
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
  uint64_t v18 = (void *)sub_1DFDFEE60();
  sub_1DFDF6BC0();
  MEMORY[0x1E01E5440](v15, 10.0);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v15, v11);
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = v26;
  uint64_t v21 = v27;
  void v19[2] = a2;
  v19[3] = v20;
  v19[4] = v21;
  aBlock[4] = sub_1DF6D21D0;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9744A8;
  aBlock[3] = &block_descriptor_123;
  BOOL v22 = _Block_copy(aBlock);
  id v23 = a2;
  swift_retain();
  swift_release();
  sub_1DFDF6B70();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DEC2EDB8();
  sub_1DE936500(0, (unint64_t *)&qword_1EBABA850, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1DE99630C();
  sub_1DFDFF830();
  MEMORY[0x1E01ED670](v17, v10, v7, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return ((uint64_t (*)(char *, uint64_t))v28)(v17, v29);
}

void sub_1DF6D1420(void *a1, void (*a2)(id), uint64_t a3)
{
  id v24 = a2;
  uint64_t v5 = sub_1DFDF6BE0();
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDFDA80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (CGFloat *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(a1, sel_objectForKey_, v12);

  if (v13)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
    sub_1DEA6FDEC(&v26, &v27);
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAC50);
    swift_dynamicCast();
    uint64_t v14 = v25;
    sub_1DE919914(0, qword_1EAC2FBE0);
    sub_1DFDFED50();

    id v15 = v28;
    if (v28 && (id v16 = objc_msgSend(v28, sel_scrollView), v15, v16))
    {
      id v17 = v16;
      swift_bridgeObjectRetain();
      uint64_t v18 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      objc_msgSend(a1, sel_setObject_forKey_, v17, v18);

      sub_1DFDFDAA0();
      objc_msgSend(v17, sel_bounds);
      *uint64_t v11 = CGRectGetHeight(v29) * 4.0;
      (*(void (**)(CGFloat *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB4B0], v8);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v24;
      *(void *)(v19 + 24) = a3;
      swift_retain();
      sub_1DFDF6BB0();
      sub_1DFDFDA90();

      swift_release();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
      (*(void (**)(CGFloat *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      id v20 = objc_allocWithZone(MEMORY[0x1E4FAB4B8]);
      uint64_t v21 = (void *)sub_1DFDFDCE0();
      id v22 = objc_msgSend(v20, sel_initWithMessage_, v21);

      v24(v22);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DF6D1814(uint64_t a1, uint64_t a2)
{
  sub_1DFDFDAA0();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_1DFDFDA70();
  return swift_release();
}

void sub_1DF6D192C(void *a1, char **a2)
{
  uint64_t v4 = (void *)sub_1DFDF3D40();
  uint64_t v47 = *(v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v46 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE9720();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE936500(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v12 = sub_1DFDE8B80();
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = a2;
  id v15 = (void (**)(void, void))unk_1EAC39088;
  _Block_copy(a2);
  swift_bridgeObjectRetain();
  id v16 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(a1, sel_objectForKey_, v16);

  if (!v17)
  {
    _Block_release(a2);
    __break(1u);
    goto LABEL_10;
  }
  sub_1DFDFF780();
  swift_unknownObjectRelease();
  sub_1DEA6FDEC(v56, v57);
  swift_dynamicCast();
  LOBYTE(v57[0]) = v54;
  sub_1DEAC389C();
  if (v18)
  {
    uint64_t v43 = v4;
    uint64_t v41 = a2;
    sub_1DEAE4654();
    uint64_t v20 = v19;
    uint64_t v42 = swift_allocBox();
    uint64_t v22 = v21;
    uint64_t v45 = *(int *)(v20 + 48);
    sub_1DE919EB0();
    uint64_t v44 = *(int *)(v23 + 48);
    uint64_t v24 = sub_1DFDE7220();
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
    v25(v11, 1, 1, v24);
    sub_1DFDE8B60();
    v25(v11, 1, 1, v24);
    uint64_t v27 = v50;
    uint64_t v26 = v51;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v8, *MEMORY[0x1E4F7D8E0], v51);
    sub_1DFDE8E60();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v26);
    sub_1DEB4B7AC((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v49);
    uint64_t v28 = MEMORY[0x1E4FBC860];
    *(void *)(v22 + v44) = MEMORY[0x1E4FBC860];
    *(void *)(v22 + v45) = v28;
    id v16 = aNavigator_111;
    swift_bridgeObjectRetain();
    id v15 = (void (**)(void, void))sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    a2 = &selRef_handleCloseActionOnPresenter_;
    uint64_t v4 = objc_msgSend(a1, sel_objectForKey_, v15);

    if (v4)
    {
      sub_1DFDFF780();
      swift_unknownObjectRelease();
      sub_1DEA6FDEC(v56, v57);
      sub_1DE9A1E44();
      uint64_t v4 = v29;
      swift_dynamicCast();
      uint64_t v30 = (void *)swift_allocObject();
      void v30[2] = a1;
      v30[3] = sub_1DEABCF08;
      v30[4] = v52;
      id v31 = a1;
      swift_retain();
      sub_1DFDF1010();
      swift_release();
      swift_release();
      id v15 = (void (**)(void, void))aNavigator_111[1];
      swift_bridgeObjectRetain();
      id v16 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      id v32 = objc_msgSend(v31, sel_objectForKey_, v16);

      if (v32)
      {
        uint64_t v33 = v42;
        sub_1DFDFF780();
        swift_unknownObjectRelease();
        sub_1DEA6FDEC(v56, v57);
        swift_dynamicCast();
        *(void *)&v57[0] = v33 | 2;
        uint64_t v35 = v46;
        uint64_t v34 = v47;
        uint64_t v36 = v43;
        (*(void (**)(char *, void, void *))(v47 + 104))(v46, *MEMORY[0x1E4FAD088], v43);
        sub_1DFDF1030();
        (*(void (**)(char *, void *))(v34 + 8))(v35, v36);
        swift_release();
        swift_release();
        swift_release();
        return;
      }
      goto LABEL_11;
    }
LABEL_10:
    _Block_release(v41);
    __break(1u);
LABEL_11:
    _Block_release(v41);
    __break(1u);
    goto LABEL_12;
  }
  *(void *)&v57[0] = 0;
  *((void *)&v57[0] + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  uint64_t v54 = 0x2074736554;
  unint64_t v55 = 0xE500000000000000;
  swift_bridgeObjectRetain();
  id v15 = (void (**)(void, void))sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v4 = objc_msgSend(a1, sel_objectForKey_, v15);

  if (!v4)
  {
LABEL_12:
    _Block_release(a2);
    __break(1u);
    _Block_release(v41);
    ((void (**)(void *, void *))v15)[1](v16, v4);
    swift_release();
    swift_unexpectedError();
    __break(1u);
    return;
  }
  sub_1DFDFF780();
  swift_unknownObjectRelease();
  sub_1DEA6FDEC(v56, v57);
  swift_dynamicCast();
  LOBYTE(v57[0]) = v53;
  PPT.Test.rawValue.getter();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v37 = objc_allocWithZone(MEMORY[0x1E4FAB4B8]);
  id v38 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v37, sel_initWithMessage_, v38);

  ((void (*)(char **, id))a2[2])(a2, v39);
  swift_release();
}

uint64_t sub_1DF6D2184()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DF6D21C0(uint64_t a1)
{
  return sub_1DF6D1070(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1DF6D21D0()
{
  sub_1DF6D1420(*(void **)(v0 + 16), *(void (**)(id))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1DF6D21DC()
{
  return sub_1DF6D1814(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DF6D21E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF6D2220(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t v6 = sub_1DFDF9D80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  id v9 = objc_msgSend(objc_msgSend(a1, sel_backingTag), sel_asPuzzleType);
  swift_unknownObjectRelease();
  if (v9)
  {
    sub_1DF6D2608(0, (unint64_t *)&qword_1EBAD2BD0, (uint64_t (*)(uint64_t))sub_1DF1E0BA0, MEMORY[0x1E4FAB088]);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v6);
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = (char *)swift_allocObject();
    *((void *)v11 + 2) = v3;
    *((void *)v11 + 3) = v9;
    *((void *)v11 + 4) = a2;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    swift_retain();
    swift_retain();
    return sub_1DFDEDDE0();
  }
  else
  {
    if (qword_1EAC1D4F0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1DFDF01D0();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EACDFE88);
    os_log_type_t v14 = sub_1DFDFEA40();
    id v15 = a1;
    id v16 = sub_1DFDF01B0();
    os_log_type_t v17 = v14;
    if (os_log_type_enabled(v16, v14))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v27 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      id v20 = objc_msgSend(objc_msgSend(v15, (SEL)&selRef_shouldAlwaysScrollToTopOnTap + 2), sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v21 = sub_1DFDFDD20();
      unint64_t v23 = v22;

      uint64_t v26 = sub_1DEA5CAB8(v21, v23, &v27);
      sub_1DFDFF680();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DE913000, v16, v17, "Failed to retrieve backing tag %s as Puzzle Type.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v19, -1, -1);
      MEMORY[0x1E01EFA10](v18, -1, -1);
    }
    else
    {
    }
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1DF6D2608(0, (unint64_t *)&qword_1EBAD2BD0, (uint64_t (*)(uint64_t))sub_1DF1E0BA0, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1DFDEDE90();
  }
}

void sub_1DF6D2608(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF6D266C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *unint64_t v10 = v5;
  v10[1] = sub_1DEF19400;
  v10[8] = a5;
  v10[9] = a2;
  v10[6] = a3;
  v10[7] = a4;
  return MEMORY[0x1F4188298](sub_1DF6D2758, 0, 0);
}

uint64_t sub_1DF6D2734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  return MEMORY[0x1F4188298](sub_1DF6D2758, 0, 0);
}

uint64_t sub_1DF6D2758()
{
  uint64_t v1 = v0 + 24;
  unint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(*(void *)(*(void *)(*(void *)(v0 + 56) + 24) + 24) + 16);
  *(void *)(v0 + 80) = v3;
  type metadata accessor for PuzzleListTagFeedGroupKnobs();
  swift_retain();
  swift_retain();
  sub_1DFDF8BF0();
  swift_release();
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v3 + OBJC_IVAR____TtC7NewsUI217TagFeedGroupKnobs_puzzleArchiveKnobs;
  int64_t v6 = *(void *)(v5 + *(int *)(type metadata accessor for PuzzleArchiveTagFeedGroupKnobs() + 24));
  swift_retain();
  sub_1DFDF8BF0();
  swift_release();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v4, v7);
  uint64_t v9 = v4 + v7;
  if (v8)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v10 = v3 + OBJC_IVAR____TtC7NewsUI217TagFeedGroupKnobs_puzzleFeaturedKnobs;
  int64_t v11 = *(void *)(v10 + *(int *)(type metadata accessor for PuzzleFeaturedTagFeedGroupKnobs() + 24));
  swift_retain();
  int64_t v6 = v11;
  sub_1DFDF8BF0();
  swift_release();
  uint64_t v12 = *(void *)(v0 + 32);
  unint64_t v2 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v13 = v3 + OBJC_IVAR____TtC7NewsUI217TagFeedGroupKnobs_puzzleContinuePlayingKnobs;
  uint64_t v3 = *(void *)(v13 + *(int *)(type metadata accessor for PuzzleContinuePlayingTagFeedGroupKnobs() + 24));
  swift_retain();
  sub_1DFDF8BF0();
  swift_release();
  uint64_t v14 = *(void *)(v0 + 40);
  int64_t v6 = v2 + v14;
  if (__OFADD__(v2, v14))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v15 = objc_msgSend(*(id *)(v0 + 48), sel_latestPuzzleIDs);
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = sub_1DFDFE220();
  }
  else
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  int64_t v6 = sub_1DEC77BBC(v6, v17);
  uint64_t v3 = v18;
  uint64_t v1 = v19;
  unint64_t v2 = v20;
  if ((v20 & 1) == 0) {
    goto LABEL_8;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain_n();
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_unknownObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = *(void *)(v22 + 16);
  swift_release();
  if (__OFSUB__(v2 >> 1, v1)) {
    goto LABEL_21;
  }
  if (v23 != (v2 >> 1) - v1)
  {
LABEL_22:
    swift_unknownObjectRelease();
LABEL_8:
    uint64_t v21 = sub_1DEC79154(v6, v3, v1, v2);
    goto LABEL_15;
  }
  uint64_t v21 = swift_dynamicCastClass();
  if (!v21)
  {
    swift_unknownObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
LABEL_15:
  *(void *)(v0 + 88) = v21;
  uint64_t v24 = *(void **)(v0 + 72);
  swift_unknownObjectRelease();
  uint64_t v25 = v24 + 16;
  uint64_t v26 = v24[19];
  uint64_t v27 = v24[20];
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_1DF6D2A8C;
  return MEMORY[0x1F4136DF8](v21, 1, v26, v27);
}

uint64_t sub_1DF6D2A8C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1DF6D2C24;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_1DF6D2BB4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DF6D2BB4()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 112);
  return v1(v2);
}

uint64_t sub_1DF6D2C24()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DF6D2C90()
{
  uint64_t v1 = sub_1DFDF9D80();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DF6D2D6C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1DFDF9D80() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1DEB7BAE0;
  return sub_1DF6D266C(a1, v5, v6, v7, v8);
}

uint64_t type metadata accessor for EmailSignupDataManager()
{
  return self;
}

uint64_t IssueDownload.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IssueDownload.source.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t IssueDownload.state.getter()
{
  return swift_retain();
}

uint64_t IssueDownload.progress.getter()
{
  return swift_retain();
}

uint64_t IssueDownload.deinit()
{
  sub_1DE9E4C20(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t IssueDownload.__deallocating_deinit()
{
  sub_1DE9E4C20(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF6D2F5C()
{
  return swift_retain();
}

uint64_t sub_1DF6D2F64()
{
  return swift_retain();
}

uint64_t sub_1DF6D2F6C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for IssueDownload()
{
  return self;
}

uint64_t method lookup function for IssueDownload(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IssueDownload);
}

uint64_t type metadata accessor for MyMagazinesViewController()
{
  return self;
}

id sub_1DF6D319C()
{
  uint64_t v1 = v0;
  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI225MyMagazinesViewController_blueprintViewController];
  sub_1DFDF30E0();
  unint64_t v3 = (void *)sub_1DFDF26C0();
  swift_release();
  id v4 = objc_msgSend(v3, sel_collectionViewLayout);

  objc_msgSend(v4, sel_setTs_sortItemsLogicallyForAccessibility_, 1);
  objc_msgSend(v1, sel_addChildViewController_, v2);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = result;
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = result;
  objc_msgSend(v6, sel_addSubview_, result);

  objc_msgSend(v2, sel_didMoveToParentViewController_, v1);
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v8 = result;
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v9 = result;
    objc_msgSend(result, sel_bounds);
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;

    objc_msgSend(v8, sel_setFrame_, v11, v13, v15, v17);
    sub_1DFDF30E0();
    uint64_t v18 = (void *)sub_1DFDF26C0();
    swift_release();
    objc_msgSend(v18, sel_setContentInsetAdjustmentBehavior_, 2);

    id v19 = objc_msgSend(v1, sel_traitCollection);
    sub_1DF6D5424();

    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1DF6D55F8(&qword_1EAC2FC80, v20, (void (*)(uint64_t))type metadata accessor for MyMagazinesViewController);
    sub_1DF6D55F8(&qword_1EAC2FC88, v21, (void (*)(uint64_t))type metadata accessor for MyMagazinesViewController);
    swift_retain();
    sub_1DFDF8120();
    return (id)swift_release_n();
  }
LABEL_9:
  __break(1u);
  return result;
}