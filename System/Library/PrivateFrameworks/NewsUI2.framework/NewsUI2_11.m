uint64_t sub_1DF10C25C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  sub_1DF10AD8C(v1, a1);
  v3 = *MEMORY[0x1E4F80230];
  v4 = sub_1DFDF98C0();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  return v5(a1, v3, v4);
}

uint64_t sub_1DF10C2DC()
{
  return 1;
}

uint64_t sub_1DF10C308(void *a1)
{
  sub_1DFDFCE90();
  id v2 = objc_msgSend(a1, sel_sourceChannel);
  return sub_1DFDFCE80();
}

uint64_t sub_1DF10C350()
{
  return sub_1DFDFCE80();
}

uint64_t sub_1DF10C38C()
{
  return sub_1DF10C350();
}

uint64_t sub_1DF10C394()
{
  return swift_deallocObject();
}

uint64_t sub_1DF10C3D4()
{
  return sub_1DF10C308(*(void **)(v0 + 16));
}

BOOL sub_1DF10C438(uint64_t a1, uint64_t a2)
{
  v4 = (char *)sub_1DFDF9700();
  v5 = (char *)*((void *)v4 - 1);
  v179 = v4;
  v180 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  v171 = (char *)&v165 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v172 = (char *)&v165 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v176 = (char *)&v165 - v11;
  MEMORY[0x1F4188790](v10);
  v175 = (char *)&v165 - v12;
  uint64_t v13 = sub_1DFDF99F0();
  v14 = *(void **)(v13 - 8);
  v181 = (char *)v13;
  v182 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v173 = (void **)((char *)&v165 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v174 = (void **)((char *)&v165 - v18);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v178 = (char *)&v165 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v177 = (char *)&v165 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v25 = (char *)&v165 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  v28 = (char *)&v165 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  v31 = (char *)&v165 - v30;
  MEMORY[0x1F4188790](v29);
  v33 = (char *)&v165 - v32;
  sub_1DF10DA2C(0, &qword_1EAC28828, (void (*)(uint64_t))type metadata accessor for MagazineGridItemModel);
  uint64_t v35 = MEMORY[0x1F4188790](v34 - 8);
  v37 = (char *)&v165 - v36;
  v38 = (char *)&v165 + *(int *)(v35 + 56) - v36;
  sub_1DF10DA8C(a1, (uint64_t)&v165 - v36, (uint64_t (*)(void))type metadata accessor for MagazineGridItemModel);
  sub_1DF10DA8C(a2, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for MagazineGridItemModel);
  type metadata accessor for MagazineGridItemModel();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v40 = *(char **)v37;
      v41 = (void *)*((void *)v37 + 2);
      v42 = (char *)*((void *)v37 + 4);
      v179 = (char *)*((void *)v37 + 5);
      v180 = v40;
      v43 = (char *)*((void *)v37 + 6);
      int v44 = v37[56];
      sub_1DEBAB4A4();
      uint64_t v46 = *(int *)(v45 + 64);
      v176 = &v37[v46];
      uint64_t v47 = *(int *)(v45 + 80);
      long long v48 = *(_OWORD *)&v37[v47 + 16];
      long long v183 = *(_OWORD *)&v37[v47];
      long long v184 = v48;
      long long v185 = *(_OWORD *)&v37[v47 + 32];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v175 = v42;
        LODWORD(v171) = v44;
        v172 = v43;
        v49 = *(char **)v38;
        v165 = (void *)*((void *)v38 + 2);
        id v166 = v41;
        v50 = (void *)*((void *)v38 + 4);
        uint64_t v170 = *((void *)v38 + 5);
        v168 = (void *)*((void *)v38 + 6);
        int v167 = v38[56];
        long long v51 = *(_OWORD *)&v38[v47 + 16];
        long long v186 = *(_OWORD *)&v38[v47];
        long long v187 = v51;
        long long v188 = *(_OWORD *)&v38[v47 + 32];
        uint64_t v52 = (uint64_t)v181;
        v53 = (void (*)(char *, char *, char *))v182[4];
        v53(v177, v176, v181);
        v53(v178, &v38[v46], (char *)v52);
        id v54 = objc_msgSend(v180, sel_identifier);
        uint64_t v55 = sub_1DFDFDD20();
        uint64_t v57 = v56;

        v176 = v49;
        id v58 = objc_msgSend(v49, sel_identifier);
        uint64_t v59 = sub_1DFDFDD20();
        uint64_t v61 = v60;

        v169 = v50;
        if (v55 == v59 && v57 == v61)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v113 = sub_1DFDFFF50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v113 & 1) == 0)
          {
LABEL_47:
            v146 = v182;
            v147 = (void (*)(id *, char *, uint64_t))v182[2];
            uint64_t v148 = (uint64_t)v174;
            v147(v174, v177, v52);
            uint64_t v149 = (uint64_t)v173;
            v147(v173, v178, v52);
            goto LABEL_48;
          }
        }
        if (v175)
        {
          id v114 = objc_msgSend(v175, sel_identifier);
          uint64_t v115 = sub_1DFDFDD20();
          uint64_t v117 = v116;

          if (!v50)
          {
            if (!v117) {
              goto LABEL_49;
            }
            goto LABEL_46;
          }
        }
        else
        {
          if (!v50) {
            goto LABEL_49;
          }
          uint64_t v117 = 0;
          uint64_t v115 = 0;
        }
        id v136 = objc_msgSend(v50, sel_identifier);
        uint64_t v137 = sub_1DFDFDD20();
        uint64_t v139 = v138;

        if (v117)
        {
          if (v139)
          {
            if (v115 != v137 || v117 != v139)
            {
              char v163 = sub_1DFDFFF50();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v146 = v182;
              v164 = (void (*)(id *, char *, uint64_t))v182[2];
              uint64_t v148 = (uint64_t)v174;
              v164(v174, v177, v52);
              uint64_t v149 = (uint64_t)v173;
              v164(v173, v178, v52);
              if (v163)
              {
LABEL_50:
                sub_1DF10D86C((unint64_t *)&unk_1EAC2A640, MEMORY[0x1E4F80458]);
                sub_1DFDFE170();
                sub_1DFDFE170();
                uint64_t v151 = v200[0];
                uint64_t v152 = v199[0];
                v122 = (void (*)(uint64_t, uint64_t))v146[1];
                v122(v149, v52);
                v122(v148, v52);
                if (v151 == v152)
                {
                  BOOL v94 = sub_1DF57B198(&v183, &v186);
                  v174 = (id *)v197;
                  v173 = (id *)v196;
                  v153 = v195;
                  v154 = (id *)v191;
                  v155 = v190;
                  v156 = v189;
LABEL_53:
                  id v157 = v180;
                  v158 = v165;
                  v159 = v176;

                  sub_1DF10D800((uint64_t)&v186, (uint64_t)v156, (unint64_t *)&qword_1EBABA650);
                  sub_1DEB9BF68((uint64_t)v156);
                  sub_1DF10D800((uint64_t)&v187, (uint64_t)v155, (unint64_t *)&qword_1EBABA650);
                  sub_1DEB9BF68((uint64_t)v155);
                  sub_1DF10D800((uint64_t)&v188, (uint64_t)v154, (unint64_t *)&qword_1EAC28830);
                  sub_1DEB9BF94(v154);
                  sub_1DF10D800((uint64_t)&v183, (uint64_t)v153, (unint64_t *)&qword_1EBABA650);
                  sub_1DEB9BF68((uint64_t)v153);
                  uint64_t v160 = (uint64_t)v173;
                  sub_1DF10D800((uint64_t)&v184, (uint64_t)v173, (unint64_t *)&qword_1EBABA650);
                  sub_1DEB9BF68(v160);
                  v161 = v174;
                  sub_1DF10D800((uint64_t)&v185, (uint64_t)v174, (unint64_t *)&qword_1EAC28830);
                  sub_1DEB9BF94(v161);
                  sub_1DEBAB464(v169, v170, v168);
                  sub_1DEBAB464(v175, (uint64_t)v179, v172);
                  v142 = v181;
                  v122((uint64_t)v178, (uint64_t)v181);
                  v143 = v177;
                  goto LABEL_54;
                }
LABEL_52:
                BOOL v94 = 0;
                v174 = (id *)v200;
                v173 = (id *)v199;
                v153 = v198;
                v154 = (id *)v194;
                v155 = v193;
                v156 = v192;
                goto LABEL_53;
              }
LABEL_48:
              v122 = (void (*)(uint64_t, uint64_t))v146[1];
              v122(v149, v52);
              v122(v148, v52);
              goto LABEL_52;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_49:
            v146 = v182;
            v150 = (void (*)(id *, char *, uint64_t))v182[2];
            uint64_t v148 = (uint64_t)v174;
            v150(v174, v177, v52);
            uint64_t v149 = (uint64_t)v173;
            v150(v173, v178, v52);
            goto LABEL_50;
          }
        }
        else if (!v139)
        {
          goto LABEL_49;
        }
LABEL_46:
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }

      sub_1DEBAB464(v42, (uint64_t)v179, v43);
      sub_1DF10D800((uint64_t)&v183, (uint64_t)v199, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v199);
      sub_1DF10D800((uint64_t)&v184, (uint64_t)v200, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v200);
      sub_1DF10D800((uint64_t)&v185, (uint64_t)&v186, (unint64_t *)&qword_1EAC28830);
      sub_1DEB9BF94((id *)&v186);
      v68 = (void (*)(char *, char *))v182[1];
      v69 = v176;
      goto LABEL_14;
    }
    uint64_t v70 = *(void *)v37;
    sub_1DEBAB38C();
    uint64_t v72 = *(int *)(v71 + 48);
    v73 = &v37[v72];
    uint64_t v74 = *(int *)(v71 + 64);
    long long v75 = *(_OWORD *)&v37[v74 + 16];
    long long v183 = *(_OWORD *)&v37[v74];
    long long v184 = v75;
    long long v185 = *(_OWORD *)&v37[v74 + 32];
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      swift_release();
      sub_1DF10D800((uint64_t)&v183, (uint64_t)v199, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v199);
      sub_1DF10D800((uint64_t)&v184, (uint64_t)v200, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v200);
      sub_1DF10D800((uint64_t)&v185, (uint64_t)&v186, (unint64_t *)&qword_1EAC28830);
      sub_1DEB9BF94((id *)&v186);
      v93 = v179;
      v68 = (void (*)(char *, char *))*((void *)v180 + 1);
      v69 = &v37[v72];
      goto LABEL_16;
    }
    uint64_t v76 = *(void *)v38;
    v77 = &v38[v72];
    long long v78 = *(_OWORD *)&v38[v74 + 16];
    long long v186 = *(_OWORD *)&v38[v74];
    long long v187 = v78;
    long long v188 = *(_OWORD *)&v38[v74 + 32];
    v79 = v179;
    v80 = (void (*)(char *, char *, char *))*((void *)v180 + 4);
    v80(v175, v73, v179);
    v80(v176, v77, v79);
    id v81 = objc_msgSend(*(id *)(v70 + 16), sel_identifier);
    uint64_t v82 = sub_1DFDFDD20();
    uint64_t v84 = v83;

    id v85 = objc_msgSend(*(id *)(v76 + 16), sel_identifier);
    uint64_t v86 = sub_1DFDFDD20();
    uint64_t v88 = v87;

    v182 = (void *)v76;
    if (v82 == v86 && v84 == v88)
    {
      swift_bridgeObjectRelease_n();
      v89 = v180;
      v90 = (void (*)(char *, char *, char *))*((void *)v180 + 2);
      v91 = v172;
      v90(v172, v175, v79);
      v92 = v171;
      v90(v171, v176, v79);
    }
    else
    {
      char v118 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v89 = v180;
      v119 = (void (*)(char *, char *, char *))*((void *)v180 + 2);
      v91 = v172;
      v119(v172, v175, v79);
      v92 = v171;
      v119(v171, v176, v79);
      if ((v118 & 1) == 0)
      {
        v122 = (void (*)(uint64_t, uint64_t))v89[1];
        v122((uint64_t)v92, (uint64_t)v79);
        v122((uint64_t)v91, (uint64_t)v79);
        goto LABEL_39;
      }
    }
    sub_1DF10D86C(&qword_1EAC28838, MEMORY[0x1E4F801E0]);
    sub_1DFDFE170();
    sub_1DFDFE170();
    uint64_t v120 = v200[0];
    uint64_t v121 = v199[0];
    v122 = (void (*)(uint64_t, uint64_t))v89[1];
    v122((uint64_t)v92, (uint64_t)v79);
    v122((uint64_t)v91, (uint64_t)v79);
    if (v120 == v121)
    {
      BOOL v94 = sub_1DF57B198(&v183, &v186);
      v181 = v197;
      v178 = v196;
      v123 = v195;
      v124 = (id *)v191;
      v125 = v190;
      v126 = v189;
LABEL_40:
      swift_release();
      swift_release();
      sub_1DF10D800((uint64_t)&v186, (uint64_t)v126, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v126);
      sub_1DF10D800((uint64_t)&v187, (uint64_t)v125, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v125);
      sub_1DF10D800((uint64_t)&v188, (uint64_t)v124, (unint64_t *)&qword_1EAC28830);
      sub_1DEB9BF94(v124);
      sub_1DF10D800((uint64_t)&v183, (uint64_t)v123, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v123);
      uint64_t v140 = (uint64_t)v178;
      sub_1DF10D800((uint64_t)&v184, (uint64_t)v178, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68(v140);
      v141 = (id *)v181;
      sub_1DF10D800((uint64_t)&v185, (uint64_t)v181, (unint64_t *)&qword_1EAC28830);
      sub_1DEB9BF94(v141);
      v142 = v179;
      v122((uint64_t)v176, (uint64_t)v179);
      v143 = v175;
LABEL_54:
      v122((uint64_t)v143, (uint64_t)v142);
      return v94;
    }
LABEL_39:
    BOOL v94 = 0;
    v181 = (char *)v200;
    v178 = (char *)v199;
    v123 = v198;
    v124 = (id *)v194;
    v125 = v193;
    v126 = v192;
    goto LABEL_40;
  }
  v180 = v33;
  v178 = v31;
  v62 = *(char **)v37;
  v63 = (char *)*((void *)v37 + 2);
  sub_1DEBAB60C();
  uint64_t v65 = *(int *)(v64 + 48);
  v179 = &v37[v65];
  uint64_t v66 = *(int *)(v64 + 64);
  long long v67 = *(_OWORD *)&v37[v66 + 16];
  long long v183 = *(_OWORD *)&v37[v66];
  long long v184 = v67;
  long long v185 = *(_OWORD *)&v37[v66 + 32];
  if (!swift_getEnumCaseMultiPayload())
  {
    v95 = *(char **)v38;
    v176 = v63;
    v177 = v95;
    v175 = (char *)*((void *)v38 + 2);
    long long v96 = *(_OWORD *)&v38[v66 + 16];
    long long v186 = *(_OWORD *)&v38[v66];
    long long v187 = v96;
    long long v188 = *(_OWORD *)&v38[v66 + 32];
    v97 = v62;
    uint64_t v98 = (uint64_t)v181;
    v99 = v182;
    v100 = (void (*)(char *, char *, char *))v182[4];
    v100(v180, v179, v181);
    uint64_t v101 = (uint64_t)v178;
    v100(v178, &v38[v65], (char *)v98);
    v179 = v97;
    id v102 = objc_msgSend(v97, sel_identifier);
    uint64_t v103 = sub_1DFDFDD20();
    uint64_t v105 = v104;

    id v106 = objc_msgSend(v177, sel_identifier);
    uint64_t v107 = sub_1DFDFDD20();
    uint64_t v109 = v108;

    if (v103 == v107 && v105 == v109)
    {
      swift_bridgeObjectRelease_n();
      v110 = (void (*)(char *, char *, char *))v99[2];
      uint64_t v111 = v101;
      uint64_t v112 = (uint64_t)v181;
      v110(v28, v180, v181);
      v110(v25, (char *)v111, (char *)v112);
    }
    else
    {
      char v127 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v128 = (void (*)(char *, char *, char *))v99[2];
      uint64_t v129 = v101;
      uint64_t v112 = (uint64_t)v181;
      v128(v28, v180, v181);
      v128(v25, (char *)v129, (char *)v112);
      if ((v127 & 1) == 0)
      {
        v122 = (void (*)(uint64_t, uint64_t))v99[1];
        v122((uint64_t)v25, v112);
        v122((uint64_t)v28, v112);
        goto LABEL_43;
      }
    }
    sub_1DF10D86C((unint64_t *)&unk_1EAC2A640, MEMORY[0x1E4F80458]);
    sub_1DFDFE170();
    sub_1DFDFE170();
    uint64_t v130 = v200[0];
    uint64_t v131 = v199[0];
    v122 = (void (*)(uint64_t, uint64_t))v99[1];
    v122((uint64_t)v25, v112);
    v122((uint64_t)v28, v112);
    if (v130 == v131)
    {
      BOOL v94 = sub_1DF57B198(&v183, &v186);
      v174 = (id *)v197;
      v173 = (id *)v196;
      v132 = v195;
      v133 = (id *)v191;
      v134 = v190;
      v135 = v189;
LABEL_44:
      sub_1DF10D800((uint64_t)&v186, (uint64_t)v135, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v135);
      sub_1DF10D800((uint64_t)&v187, (uint64_t)v134, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v134);
      sub_1DF10D800((uint64_t)&v188, (uint64_t)v133, (unint64_t *)&qword_1EAC28830);
      sub_1DEB9BF94(v133);
      sub_1DF10D800((uint64_t)&v183, (uint64_t)v132, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68((uint64_t)v132);
      uint64_t v144 = (uint64_t)v173;
      sub_1DF10D800((uint64_t)&v184, (uint64_t)v173, (unint64_t *)&qword_1EBABA650);
      sub_1DEB9BF68(v144);
      v145 = v174;
      sub_1DF10D800((uint64_t)&v185, (uint64_t)v174, (unint64_t *)&qword_1EAC28830);
      sub_1DEB9BF94(v145);

      v142 = v181;
      v122((uint64_t)v178, (uint64_t)v181);
      v143 = v180;
      goto LABEL_54;
    }
LABEL_43:
    BOOL v94 = 0;
    v174 = (id *)v200;
    v173 = (id *)v199;
    v132 = v198;
    v133 = (id *)v194;
    v134 = v193;
    v135 = v192;
    goto LABEL_44;
  }

  sub_1DF10D800((uint64_t)&v183, (uint64_t)v199, (unint64_t *)&qword_1EBABA650);
  sub_1DEB9BF68((uint64_t)v199);
  sub_1DF10D800((uint64_t)&v184, (uint64_t)v200, (unint64_t *)&qword_1EBABA650);
  sub_1DEB9BF68((uint64_t)v200);
  sub_1DF10D800((uint64_t)&v185, (uint64_t)&v186, (unint64_t *)&qword_1EAC28830);
  sub_1DEB9BF94((id *)&v186);
  v68 = (void (*)(char *, char *))v182[1];
  v69 = v179;
LABEL_14:
  v93 = v181;
LABEL_16:
  v68(v69, v93);
  sub_1DF10DAF4((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for MagazineGridItemModel);
  return 0;
}

uint64_t sub_1DF10D70C()
{
  sub_1DF109C18();
  sub_1DFDFDDD0();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1DFDFDDA0();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  sub_1DF109C18();
  sub_1DFDFDDD0();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1DFDFDDA0();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (v0 == v3 && v2 == v5) {
    char v6 = 0;
  }
  else {
    char v6 = sub_1DFDFFF50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1DF10D800(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1DE9DB774(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF10D86C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF10D8B4()
{
  if (!qword_1EAC28858)
  {
    sub_1DFDF9A50();
    sub_1DF10DB54(255, &qword_1EAC28840, MEMORY[0x1E4F80490], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC28858);
    }
  }
}

uint64_t sub_1DF10D958(uint64_t a1, uint64_t a2)
{
  sub_1DF10DB54(0, &qword_1EAC28840, MEMORY[0x1E4F80490], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1DF10D9EC(id result, uint64_t a2, void *a3)
{
  if (result)
  {
    id v3 = result;
    return a3;
  }
  return result;
}

void sub_1DF10DA2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1DF10DA8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF10DAF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DF10DB54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF10DBBC(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  unint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  if (!v4) {
    goto LABEL_7;
  }
LABEL_4:
  for (v4 &= v4 - 1; ; uint64_t v4 = (v11 - 1) & v11)
  {
    id v9 = objc_msgSend((id)swift_unknownObjectRetain(), sel_clusterID);
    if (v9)
    {
      uint64_t v13 = v9;
      uint64_t v19 = sub_1DFDFDD20();
      uint64_t v18 = v14;
      swift_unknownObjectRelease();

      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DEA8C6EC(0, v8[2] + 1, 1, v8);
        unint64_t v8 = (void *)result;
      }
      unint64_t v16 = v8[2];
      unint64_t v15 = v8[3];
      if (v16 >= v15 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DEA8C6EC((void *)(v15 > 1), v16 + 1, 1, v8);
        unint64_t v8 = (void *)result;
      }
      v8[2] = v16 + 1;
      uint64_t v17 = &v8[2 * v16];
      v17[4] = v19;
      v17[5] = v18;
      if (v4) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t result = swift_unknownObjectRelease();
      if (v4) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v5) {
      goto LABEL_29;
    }
    uint64_t v11 = *(void *)(v1 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v5) {
        goto LABEL_29;
      }
      uint64_t v11 = *(void *)(v1 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v5) {
          goto LABEL_29;
        }
        uint64_t v11 = *(void *)(v1 + 8 * v7);
        if (!v11)
        {
          int64_t v7 = v10 + 3;
          if (v10 + 3 >= v5) {
            goto LABEL_29;
          }
          uint64_t v11 = *(void *)(v1 + 8 * v7);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v5)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v11 = *(void *)(v1 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_29;
    }
    uint64_t v11 = *(void *)(v1 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void *sub_1DF10DDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v87 = a2;
  uint64_t v3 = sub_1DFDF9D80();
  uint64_t v78 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v76 = v4;
  v77 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDEA820();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v85 = (uint64_t)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDECAF0();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1DEA6BB44(a1);
  if (qword_1EBAD1B10 != -1) {
    swift_once();
  }
  sub_1DEA6ABC4(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DFE0B750;
  sub_1DEACFC98();
  uint64_t v10 = sub_1DFDFE5E0();
  uint64_t v84 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v15 = sub_1DEA08668();
  *(void *)(v9 + 64) = v15;
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  id v81 = (void *)(a1 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_context);
  uint64_t v16 = sub_1DE9E6BD8();
  *(void *)(v9 + 96) = v14;
  *(void *)(v9 + 104) = v15;
  *(void *)(v9 + 72) = v16;
  *(void *)(v9 + 80) = v17;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1DEA6C014((uint64_t)&unk_1F3A67A78);
  swift_retain();
  uint64_t v19 = sub_1DE96BCFC(v18, v8, (uint64_t)sub_1DF10FBF0, a1);
  swift_bridgeObjectRelease();
  swift_release();
  v89[0] = MEMORY[0x1E4FBC860];
  uint64_t v80 = sub_1DEA4B08C((unint64_t *)&qword_1EBAA7440, MEMORY[0x1E4FAA910]);
  sub_1DEA6ABC4(0, (unint64_t *)&unk_1EBABA6E0, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
  uint64_t v71 = v20;
  sub_1DEA6BABC();
  uint64_t v83 = v19;
  swift_retain();
  sub_1DFDFF830();
  sub_1DE965980(0, &qword_1EBAD28B0, &qword_1EBAA78A8, (uint64_t)&_s19FeedItemFetchResultVN);
  swift_allocObject();
  uint64_t v21 = sub_1DFDEDBB0();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1DF10DBBC(v22);
  swift_bridgeObjectRelease();
  uint64_t v70 = sub_1DE9DB9D8(v23);
  swift_bridgeObjectRelease();
  uint64_t v74 = type metadata accessor for TodayFeedPool();
  uint64_t v75 = *(void *)(a1 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v24 = v81;
  v25 = (void *)v81[1];
  swift_unknownObjectRetain();
  id v73 = v25;
  sub_1DEA1F3B4(v85);
  uint64_t v26 = MEMORY[0x1E4FBC860];
  v89[0] = MEMORY[0x1E4FBC860];
  uint64_t v82 = v21;
  swift_retain();
  sub_1DFDFF830();
  sub_1DEA6ABC4(0, &qword_1EBAD28E0, (uint64_t (*)(uint64_t))sub_1DEAE8454, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  uint64_t v71 = sub_1DFDEDBB0();
  uint64_t v27 = swift_bridgeObjectRetain();
  v28 = sub_1DEAB9514(v27);
  swift_bridgeObjectRelease();
  uint64_t v29 = v24[4];
  uint64_t KeyPath = swift_getKeyPath();
  v88[0] = v28;
  v88[1] = v26;
  v88[2] = v29;
  v88[3] = v26;
  v88[4] = KeyPath;
  swift_bridgeObjectRetain();
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_1DEAB9514(v31);
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_getKeyPath();
  v89[0] = v32;
  v89[1] = v26;
  v89[2] = MEMORY[0x1E4FBC870];
  v89[3] = v26;
  v89[4] = v33;
  uint64_t v35 = v78;
  uint64_t v34 = v79;
  uint64_t v36 = *(void **)(v78 + 16);
  uint64_t v80 = v78 + 16;
  id v81 = v36;
  v37 = v77;
  ((void (*)(char *, uint64_t, uint64_t))v36)(v77, v87, v79);
  uint64_t v68 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = (v68 + 24) & ~v68;
  unint64_t v69 = v76 + 7;
  unint64_t v39 = (v76 + 7 + v38) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = v39 + 8;
  v67[1] = v68 | 7;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v83;
  v67[0] = *(void *)(v35 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v67[0])(v40 + v38, v37, v34);
  *(void *)(v40 + v39) = a1;
  uint64_t v41 = sub_1DEA6C014((uint64_t)&unk_1F3A67AA0);
  swift_retain();
  swift_retain();
  uint64_t v78 = sub_1DE9692DC(v41, v84, (uint64_t)sub_1DF10FC28, v40);
  swift_release();
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, uint64_t))v81)(v37, v87, v34);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v82;
  uint64_t v43 = v42 + v38;
  int v44 = (void (*)(uint64_t, char *, uint64_t))v67[0];
  ((void (*)(uint64_t, char *, uint64_t))v67[0])(v43, v37, v34);
  *(void *)(v42 + v39) = a1;
  uint64_t v45 = sub_1DEA6C014((uint64_t)&unk_1F3A67AC8);
  swift_retain();
  swift_retain();
  uint64_t v46 = v84;
  unint64_t v76 = sub_1DEA6A3E0(v45, v84, (uint64_t)sub_1DF10FC58, v42, sub_1DEAE88A8);
  swift_release();
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, uint64_t))v81)(v37, v87, v34);
  uint64_t v47 = (v68 + 32) & ~v68;
  unint64_t v48 = (v69 + v47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v82;
  uint64_t v51 = v70;
  *(void *)(v49 + 16) = v82;
  *(void *)(v49 + 24) = v51;
  v44(v49 + v47, v37, v34);
  *(void *)(v49 + v48) = a1;
  uint64_t v52 = sub_1DEA6C014((uint64_t)&unk_1F3A67AF0);
  swift_retain();
  uint64_t v53 = v50;
  swift_retain();
  uint64_t v54 = v86;
  uint64_t v55 = sub_1DE96B524(v52, v46, (uint64_t)sub_1DF10FE14, v49);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v53;
  *(void *)(v56 + 24) = a1;
  uint64_t v57 = sub_1DEA6C014((uint64_t)&unk_1F3A67B18);
  swift_retain();
  swift_retain();
  uint64_t v58 = v54;
  uint64_t v59 = sub_1DE969D20(v57, v46, (uint64_t)sub_1DF10FEB8, v56);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_1DEA6C014((uint64_t)&unk_1F3A67B40);
  swift_retain();
  uint64_t v61 = sub_1DEA6A3E0(v60, v46, (uint64_t)sub_1DF10FEC0, a1, sub_1DEAE8874);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62 = sub_1DEAE2A10(v75, (uint64_t)v73, 1, v85, v71, (uint64_t)v88, (uint64_t)v89, v78, v76, v55, v59, v61);
  __swift_project_boxed_opaque_existential_1((void *)(v58 + 216), *(void *)(v58 + 240));
  uint64_t v63 = swift_allocObject();
  swift_weakInit();
  uint64_t v64 = swift_allocObject();
  swift_weakInit();
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v63;
  *(void *)(v65 + 24) = v64;
  sub_1DFDEDBA0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v62;
}

uint64_t sub_1DF10E90C(void *a1, uint64_t a2)
{
  uint64_t v5 = (void *)a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = (void *)sub_1DFDEDB60();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = v4;
  v8[4] = v6;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1DFDEE060();

  swift_release();
  uint64_t v9 = (void *)sub_1DFDEDB60();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a1;
  v10[4] = v5;
  v10[5] = v4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1DF110E10;
  *(void *)(v11 + 24) = v10;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  id v12 = v5;
  uint64_t v13 = sub_1DFDEDDF0();
  swift_release();

  swift_release();
  return v13;
}

void sub_1DF10EA84(uint64_t *a1@<X8>)
{
  sub_1DFDEDB90();
  uint64_t v2 = (void *)sub_1DFDEDCE0();
  uint64_t v3 = sub_1DFDEDDF0();
  swift_release();

  *a1 = v3;
}

uint64_t sub_1DF10EB04()
{
  return swift_retain();
}

void sub_1DF10EB20(uint64_t *a1@<X8>)
{
  sub_1DFDEE090();
  uint64_t v2 = (void *)sub_1DFDEDCE0();
  sub_1DEABCF68(0, (unint64_t *)&qword_1EBAA6550, (unint64_t *)&qword_1EBABAAA0, 0x1E4F82A50, MEMORY[0x1E4FBB320]);
  uint64_t v3 = sub_1DFDEDE00();
  swift_release();

  *a1 = v3;
}

uint64_t sub_1DF10EBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1DFDF9D80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  sub_1DFDEDB90();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)(v10 + ((v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  swift_retain();
  uint64_t v11 = (void *)sub_1DFDEDCE0();
  type metadata accessor for TodayFeedPoolService();
  uint64_t v12 = sub_1DFDEDE10();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1DF10ED8C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = a1[3];
  uint64_t v10 = (void *)a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a2 + 32, a2[35]);
  return sub_1DF110610(v6, v7, v8, v9, v10, v11, a3, a4, (void *)*v12);
}

uint64_t sub_1DF10EE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1DFDF9D80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  sub_1DFDEDB90();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)(v10 + ((v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  swift_retain();
  uint64_t v11 = (void *)sub_1DFDEDCE0();
  _s11MyHeadlinesCMa();
  type metadata accessor for TodayFeedPoolService();
  uint64_t v12 = sub_1DFDEDE10();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1DF10EFD4()
{
  return sub_1DFDEDF30();
}

uint64_t sub_1DF10F06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1DFDF9D80();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  sub_1DFDEDB90();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = (void *)sub_1DFDEDCE0();
  type metadata accessor for TodayFeedPoolService();
  uint64_t v14 = sub_1DFDEDE10();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1DF10F224(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *__swift_project_boxed_opaque_existential_1((void *)(a2 + 256), *(void *)(a2 + 280));
  v5[3] = type metadata accessor for LocalNewsChannelService();
  v5[4] = &off_1F3AA8338;
  v5[0] = v2;
  sub_1DF110D0C(0, (unint64_t *)&unk_1EBAD29E0, (uint64_t)&_s13MissedStoriesVN, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_retain();
  uint64_t v3 = sub_1DFDEDF30();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t sub_1DF10F338()
{
  sub_1DFDEDB90();
  swift_retain();
  uint64_t v0 = (void *)sub_1DFDEDCE0();
  type metadata accessor for TodayFeedPoolService();
  uint64_t v1 = sub_1DFDEDE10();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1DF10F3DC()
{
  return sub_1DFDEDF30();
}

uint64_t sub_1DF10F484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagazineFeedServiceContext();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_context;
  uint64_t v12 = a2 + *(int *)(type metadata accessor for TodayFeedServiceContext() + 40) + v11;
  uint64_t v13 = sub_1DFDF7E30();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v12, v13);
  swift_storeEnumTagMultiPayload();
  CFTimeInterval v14 = CACurrentMediaTime();
  if (qword_1EBAC0140 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  sub_1DF10FF60();
  sub_1DFDEE090();
  sub_1DEA6BD78((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MagazineFeedServiceContext);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  *(CFTimeInterval *)(v16 + 16) = v14;
  sub_1DEC93508((uint64_t)v8, v16 + v15);
  uint64_t v17 = (void *)sub_1DFDEDCE0();
  type metadata accessor for MagazineFeedServiceConfig();
  type metadata accessor for MagazineFeedServiceConfigFetcher();
  sub_1DFDEDE20();
  swift_release();
  swift_release();

  sub_1DEA6BCB8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MagazineFeedServiceContext);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  swift_retain();
  swift_retain();
  uint64_t v19 = (void *)sub_1DFDEDCE0();
  uint64_t v20 = sub_1DFDEDE00();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_1DF10F7B0()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  return v0;
}

uint64_t sub_1DF10F820()
{
  sub_1DF10F7B0();
  return swift_deallocClassInstance();
}

void *sub_1DF10F854@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_1DF10DDE8(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF10F884@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10FA6C(sub_1DEAE8534, a1);
}

uint64_t sub_1DF10F89C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10F8B0((unint64_t *)&unk_1EBAD29D0, (uint64_t)&_s11SuggestionsVN, a1);
}

uint64_t sub_1DF10F8B0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1DEBC0D38();
  swift_allocError();
  *uint64_t v6 = 8;
  sub_1DF110D0C(0, a1, a2, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t result = sub_1DFDEDE70();
  *a3 = result;
  return result;
}

uint64_t sub_1DF10F948@<X0>(uint64_t (*a1)(void)@<X1>, unint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v8 = a1();
    uint64_t result = swift_release();
  }
  else
  {
    sub_1DEBC0D38();
    swift_allocError();
    *uint64_t v10 = 6;
    sub_1DF110D0C(0, a2, a3, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t result = sub_1DFDEDE70();
    uint64_t v8 = result;
  }
  *a4 = v8;
  return result;
}

uint64_t sub_1DF10FA40@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10F8B0((unint64_t *)&unk_1EBAD29E0, (uint64_t)&_s13MissedStoriesVN, a1);
}

uint64_t sub_1DF10FA54@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10FA6C(sub_1DEAE8678, a1);
}

uint64_t sub_1DF10FA6C@<X0>(void (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  sub_1DEBC0D38();
  swift_allocError();
  unsigned char *v4 = 8;
  a1(0);
  swift_allocObject();
  uint64_t result = sub_1DFDEDE70();
  *a2 = result;
  return result;
}

uint64_t sub_1DF10FAEC@<X0>(uint64_t (*a1)(void)@<X1>, void (*a2)(void)@<X3>, uint64_t *a3@<X8>)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v6 = a1();
    uint64_t result = swift_release();
  }
  else
  {
    sub_1DEBC0D38();
    swift_allocError();
    *uint64_t v8 = 6;
    a2(0);
    swift_allocObject();
    uint64_t result = sub_1DFDEDE70();
    uint64_t v6 = result;
  }
  *a3 = v6;
  return result;
}

uint64_t sub_1DF10FBC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10F8B0((unint64_t *)&unk_1EBAD29B0, (uint64_t)&_s11ForYouFetchVN, a1);
}

uint64_t sub_1DF10FBDC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10F8B0(&qword_1EBAA78B0, (uint64_t)&_s20FeedItemFetchResultsVN, a1);
}

uint64_t sub_1DF10FBF0(void *a1)
{
  return sub_1DF10E90C(a1, v1);
}

void sub_1DF10FBF8(uint64_t *a1@<X8>)
{
}

void sub_1DF10FC00(uint64_t *a1@<X8>)
{
}

uint64_t sub_1DF10FC10()
{
  return objectdestroyTm_30(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1DF10FC28(uint64_t a1)
{
  return sub_1DF10FC70(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1DF10EBE4);
}

uint64_t sub_1DF10FC40()
{
  return objectdestroyTm_30(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1DF10FC58(uint64_t a1)
{
  return sub_1DF10FC70(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1DF10EE24);
}

uint64_t sub_1DF10FC70(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_1DFDF9D80() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a2(a1, v6, v2 + v5, v7);
}

uint64_t sub_1DF10FD24()
{
  uint64_t v1 = sub_1DFDF9D80();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF10FE14(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1DFDF9D80() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DF10F06C(a1, v5, v6, v1 + v4, v7);
}

uint64_t sub_1DF10FEB8()
{
  return sub_1DF10F338();
}

uint64_t sub_1DF10FEC0(uint64_t a1)
{
  return sub_1DF10F484(a1, v1);
}

uint64_t sub_1DF10FEC8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1DF10FF04()
{
}

uint64_t sub_1DF10FF10@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10FAEC(*(uint64_t (**)(void))(v1 + 24), sub_1DEAE8534, a1);
}

uint64_t sub_1DF10FF44()
{
  return sub_1DF42D6C0(v0);
}

void sub_1DF10FF60()
{
  if (!qword_1EBABAE30)
  {
    sub_1DE9266B8(255, (unint64_t *)&qword_1EBABAE20);
    type metadata accessor for MagazineConfig();
    sub_1DE919914(255, (unint64_t *)&qword_1EBABAF20);
    sub_1DEABCF68(255, (unint64_t *)&qword_1EBABAA50, (unint64_t *)&qword_1EBABAA40, 0x1E4F7E6B8, MEMORY[0x1E4FBB718]);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EBABAE30);
    }
  }
}

uint64_t sub_1DF110040()
{
  uint64_t v1 = *(void *)(type metadata accessor for MagazineFeedServiceContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_1DFDF7E30();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1DF110118@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for MagazineFeedServiceContext() - 8);
  return sub_1DF42D7DC(a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a3);
}

uint64_t sub_1DF1101A4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DEF3D1C4(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1DF1101C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10F948(*(uint64_t (**)(void))(v1 + 24), (unint64_t *)&unk_1EBAD29D0, (uint64_t)&_s11SuggestionsVN, a1);
}

uint64_t sub_1DF1101F4()
{
  return sub_1DF10F3DC();
}

void sub_1DF110210(void (*a1)(unint64_t *), uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1DFC3D7D4(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48));
}

uint64_t sub_1DF110244@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10F948(*(uint64_t (**)(void))(v1 + 24), (unint64_t *)&unk_1EBAD29E0, (uint64_t)&_s13MissedStoriesVN, a1);
}

uint64_t sub_1DF110274()
{
  return objectdestroyTm_30(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1DF11028C(uint64_t a1, uint64_t a2)
{
  return sub_1DF10F224(a1, a2);
}

void sub_1DF110338(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  sub_1DF55C448(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7], v4[8], v4[9]);
}

uint64_t sub_1DF110374@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10FAEC(*(uint64_t (**)(void))(v1 + 24), sub_1DEAE8678, a1);
}

uint64_t sub_1DF1103AC()
{
  return sub_1DF10EFD4();
}

void sub_1DF110454(void (*a1)(long long *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DEBBAF14(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32), *(void **)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80));
}

uint64_t sub_1DF110490@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10F948(*(uint64_t (**)(void))(v1 + 24), (unint64_t *)&unk_1EBAD29B0, (uint64_t)&_s11ForYouFetchVN, a1);
}

uint64_t objectdestroy_56Tm()
{
  uint64_t v1 = sub_1DFDF9D80();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF110568(uint64_t *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1DFDF9D80() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1DF10ED8C(a1, a2, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DF110610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  v38[3] = *a9;
  v38[4] = &off_1F3AA8338;
  v38[0] = a9;
  swift_retain();
  if (sub_1DF7FFBD0(a7, a8))
  {
    uint64_t v17 = sub_1DFDF8510();
    sub_1DEA4B08C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, *MEMORY[0x1E4F7F998], v17);
    sub_1DF110D0C(0, (unint64_t *)&unk_1EBAD29B0, (uint64_t)&_s11ForYouFetchVN, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v19 = sub_1DFDEDE70();
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    return v19;
  }
  CFTimeInterval v20 = CACurrentMediaTime();
  sub_1DF110D0C(0, (unint64_t *)&unk_1EBACBEA0, (uint64_t)&_s4FeedVN, MEMORY[0x1E4FAAE48]);
  swift_allocObject();
  uint64_t v34 = a1;
  uint64_t v21 = sub_1DFDED9F0();
  sub_1DEA6ABC4(0, (unint64_t *)&unk_1EBAF7F28, (uint64_t (*)(uint64_t))sub_1DEC077FC, MEMORY[0x1E4FAAE48]);
  swift_allocObject();
  uint64_t v22 = sub_1DFDED9F0();
  sub_1DE94F204((uint64_t)v38, (uint64_t)&v35);
  uint64_t v23 = (CFTimeInterval *)swift_allocObject();
  *((void *)v23 + 2) = v21;
  *((void *)v23 + 3) = a2;
  *((void *)v23 + 4) = a3;
  *((void *)v23 + 5) = a4;
  *((void *)v23 + 6) = a6;
  *((void *)v23 + 7) = a5;
  v23[8] = v20;
  uint64_t v24 = sub_1DE942EC4(&v35, (uint64_t)(v23 + 9));
  v33[2] = v33;
  *((void *)v23 + 14) = a8;
  *((void *)v23 + 15) = v22;
  MEMORY[0x1F4188790](v24);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_unknownObjectRetain();
  id v25 = a5;
  swift_retain();
  v33[1] = v22;
  swift_retain();
  sub_1DFDEE090();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1DF110BA4;
  *(void *)(v26 + 24) = v23;
  swift_retain();
  uint64_t v27 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE00();
  swift_release();
  swift_release();

  swift_retain();
  v28 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE50();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v34;
  v29[3] = a2;
  v29[4] = a3;
  v29[5] = a4;
  v29[6] = sub_1DF110BA4;
  v29[7] = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v30 = swift_retain();
  uint64_t result = MEMORY[0x1E01DC200](v30);
  if (result)
  {
    uint64_t v32 = result;
    uint64_t result = MEMORY[0x1E01DC200]();
    if (result)
    {
      *(void *)&long long v35 = v32;
      *((void *)&v35 + 1) = result;
      uint64_t v36 = sub_1DF110C98;
      v37 = v29;
      sub_1DF110D0C(0, (unint64_t *)&unk_1EBAD29B0, (uint64_t)&_s11ForYouFetchVN, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      swift_retain();
      uint64_t v19 = sub_1DFDEDE90();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF110B2C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DF110BA4()
{
  sub_1DECC87B8(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0 + 9, v0[14], v0[15]);
}

uint64_t sub_1DF110BE0()
{
  return sub_1DECC9774();
}

uint64_t sub_1DF110C00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF110C38()
{
  return sub_1DECC97BC();
}

uint64_t sub_1DF110C40()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF110C98()
{
  return sub_1DECC97E0(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1DF110CA8()
{
  sub_1DFDEDB90();
  return v1;
}

uint64_t sub_1DF110CDC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF10F948(*(uint64_t (**)(void))(v1 + 24), &qword_1EBAA78B0, (uint64_t)&_s20FeedItemFetchResultsVN, a1);
}

void sub_1DF110D0C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1DF110D58()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF110DA0()
{
  return sub_1DED86348();
}

uint64_t sub_1DF110DC0()
{
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF110E10()
{
  return sub_1DED863D4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

unsigned char *storeEnumTagSinglePayload for TodayFeedPoolServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF110EE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayFeedPoolServiceError()
{
  return &type metadata for TodayFeedPoolServiceError;
}

unint64_t sub_1DF110F24()
{
  unint64_t result = qword_1EAC28868;
  if (!qword_1EAC28868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28868);
  }
  return result;
}

uint64_t sub_1DF110F84()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF110FD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  CFTimeInterval v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF11190C(0, &qword_1EAC28898, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for RecentStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF111854();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_1DF111970(&qword_1EBACA150, MEMORY[0x1E4F7F240]);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_1DF1118A8((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF111280(uint64_t a1)
{
  unint64_t v2 = sub_1DF111854();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF1112BC(uint64_t a1)
{
  unint64_t v2 = sub_1DF111854();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF1112F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF11130C);
}

uint64_t sub_1DF11130C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF111378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF11138C);
}

uint64_t sub_1DF11138C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RecentStoriesTagFeedGroup()
{
  uint64_t result = qword_1EBADBE18;
  if (!qword_1EBADBE18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF111448@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF110FD4(a1, a2);
}

uint64_t sub_1DF111460(void *a1)
{
  sub_1DF11190C(0, &qword_1EAC288A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF111854();
  sub_1DFE001A0();
  sub_1DFDF7010();
  sub_1DF111970((unint64_t *)&unk_1EBACA140, MEMORY[0x1E4F7F240]);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DF1115E8()
{
  return sub_1DF111970(&qword_1EBADBE10, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
}

uint64_t sub_1DF111630()
{
  return sub_1DF111970(&qword_1EAC28870, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
}

uint64_t sub_1DF111678()
{
  return sub_1DF111970(&qword_1EAC28878, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
}

uint64_t sub_1DF1116C0(uint64_t a1)
{
  uint64_t result = sub_1DF111970(&qword_1EAC28880, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DF111718(void *a1)
{
  a1[1] = sub_1DF111970(&qword_1EAC28888, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
  a1[2] = sub_1DF111970(&qword_1EAC28890, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
  uint64_t result = sub_1DF111970(&qword_1EAC30CE0, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
  a1[3] = result;
  return result;
}

uint64_t sub_1DF1117C4(uint64_t a1)
{
  uint64_t v2 = sub_1DF111970(&qword_1EAC28888, (void (*)(uint64_t))type metadata accessor for RecentStoriesTagFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DF111830()
{
  return 0x7453746E65636552;
}

unint64_t sub_1DF111854()
{
  unint64_t result = qword_1EAC288A0;
  if (!qword_1EAC288A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC288A0);
  }
  return result;
}

uint64_t sub_1DF1118A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecentStoriesTagFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DF11190C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF111854();
    unint64_t v7 = a3(a1, &type metadata for RecentStoriesTagFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF111970(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RecentStoriesTagFeedGroup.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF111A54);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecentStoriesTagFeedGroup.CodingKeys()
{
  return &type metadata for RecentStoriesTagFeedGroup.CodingKeys;
}

unint64_t sub_1DF111A90()
{
  unint64_t result = qword_1EAC288B0;
  if (!qword_1EAC288B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC288B0);
  }
  return result;
}

unint64_t sub_1DF111AE8()
{
  unint64_t result = qword_1EAC288B8;
  if (!qword_1EAC288B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC288B8);
  }
  return result;
}

unint64_t sub_1DF111B40()
{
  unint64_t result = qword_1EAC288C0;
  if (!qword_1EAC288C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC288C0);
  }
  return result;
}

id sub_1DF111B94()
{
  id result = objc_msgSend(self, sel_systemPinkColor);
  qword_1EBB62CA0 = (uint64_t)result;
  return result;
}

void sub_1DF111BD0()
{
  id v0 = objc_msgSend(self, sel_systemPinkColor);
  id v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.5);

  qword_1EBB62B08 = (uint64_t)v1;
}

uint64_t sub_1DF111C38(void *a1)
{
  uint64_t v1 = a1[14];
  uint64_t v2 = a1[15];
  __swift_project_boxed_opaque_existential_1(a1 + 11, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

void sub_1DF111C98(uint64_t a1, void *a2)
{
  uint64_t v59 = a1;
  sub_1DF112F44(0, &qword_1EBAD10A0, (void (*)(uint64_t))type metadata accessor for MastheadPaywallConfiguration);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v56 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v54 - v6;
  sub_1DF112F44(0, (unint64_t *)&unk_1EBAA7AD8, MEMORY[0x1E4F826F8]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v54 - v9;
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x1E4F821C0];
  sub_1DF112F44(0, (unint64_t *)&unk_1EBAA7A20, MEMORY[0x1E4F821C0]);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  unint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v54 - v16;
  uint64_t v19 = a2[19];
  uint64_t v18 = a2[20];
  __swift_project_boxed_opaque_existential_1(a2 + 16, v19);
  CFTimeInterval v20 = *(void (**)(uint64_t, uint64_t))(v18 + 16);
  uint64_t v21 = v18;
  uint64_t v22 = a2;
  v20(v19, v21);
  uint64_t v23 = (uint64_t)a2 + OBJC_IVAR____TtC7NewsUI227MastheadPaywallEventHandler_paywallModel;
  swift_beginAccess();
  sub_1DF112888((uint64_t)v17, v23, (unint64_t *)&unk_1EBAA7A20, v11);
  swift_endAccess();
  sub_1DF1128F4(v59, (uint64_t)v7, &qword_1EBAD10A0, ObjectType);
  uint64_t v24 = type metadata accessor for MastheadPaywallConfiguration();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(uint64_t *, uint64_t, void (*)(uint64_t)))(v25 + 48);
  uint64_t v54 = v25 + 48;
  uint64_t v55 = v26;
  unsigned int v27 = v26((uint64_t *)v7, 1, (void (*)(uint64_t))v24);
  uint64_t ObjectType = (void (*)(uint64_t))v24;
  if (v27 == 1)
  {
    sub_1DF112960((uint64_t)v7, &qword_1EBAD10A0, (void (*)(uint64_t))type metadata accessor for MastheadPaywallConfiguration);
    uint64_t v28 = sub_1DFDEF360();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
  }
  else
  {
    uint64_t v29 = &v7[*(int *)(v24 + 20)];
    uint64_t v30 = sub_1DFDEF360();
    uint64_t v31 = *(void *)(v30 - 8);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v10, v29, v30);
    sub_1DF112A04((uint64_t)v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v10, 0, 1, v30);
  }
  uint64_t v32 = (uint64_t)a2 + OBJC_IVAR____TtC7NewsUI227MastheadPaywallEventHandler_subscribeButtonDestination;
  swift_beginAccess();
  sub_1DF112888((uint64_t)v10, v32, (unint64_t *)&unk_1EBAA7AD8, MEMORY[0x1E4F826F8]);
  swift_endAccess();
  uint64_t v33 = (void (*)(uint64_t))MEMORY[0x1E4F821C0];
  sub_1DF1128F4(v23, (uint64_t)v15, (unint64_t *)&unk_1EBAA7A20, MEMORY[0x1E4F821C0]);
  uint64_t v34 = sub_1DFDEEBA0();
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v15, 1, v34);
  sub_1DF112960((uint64_t)v15, (unint64_t *)&unk_1EBAA7A20, v33);
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  unint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v42 = v22;
  uint64_t v43 = 0;
  if (v35 != 1)
  {
    int v44 = v42;
    uint64_t v45 = v56;
    sub_1DF1128F4(v59, (uint64_t)v56, &qword_1EBAD10A0, (void (*)(uint64_t))type metadata accessor for MastheadPaywallConfiguration);
    if (v55(v45, 1, ObjectType) == 1)
    {
      sub_1DF112960((uint64_t)v45, &qword_1EBAD10A0, (void (*)(uint64_t))type metadata accessor for MastheadPaywallConfiguration);
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      unint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v43 = 0;
    }
    else
    {
      uint64_t v36 = *v45;
      uint64_t v37 = v45[1];
      uint64_t v38 = (void *)v45[2];
      unint64_t v39 = (void *)v45[3];
      uint64_t v40 = v45[4];
      uint64_t v41 = v45[5];
      uint64_t v43 = (void *)v45[6];
      id v46 = v43;
      swift_bridgeObjectRetain();
      id v47 = v38;
      id v48 = v39;
      swift_bridgeObjectRetain();
      sub_1DF112A04((uint64_t)v45);
    }
    uint64_t v42 = v44;
  }
  v58[0] = v36;
  v58[1] = v37;
  v58[2] = v38;
  v58[3] = v39;
  v58[4] = v40;
  v58[5] = v41;
  v58[6] = v43;
  uint64_t v49 = MEMORY[0x1E01EFB70](v42 + 2);
  if (v49)
  {
    uint64_t v50 = (void *)v49;
    uint64_t v59 = v36;
    uint64_t v51 = v49 + OBJC_IVAR____TtC7NewsUI219TodayViewController_mastheadViewProviderDelegate;
    if (MEMORY[0x1E01EFB70](v49 + OBJC_IVAR____TtC7NewsUI219TodayViewController_mastheadViewProviderDelegate))
    {
      uint64_t v52 = *(void *)(v51 + 8);
      uint64_t ObjectType = (void (*)(uint64_t))swift_getObjectType();
      uint64_t v53 = sub_1DF1129BC((unint64_t *)&qword_1EBAADC08, (void (*)(uint64_t))type metadata accessor for TodayViewController);
      (*(void (**)(void *, uint64_t, void *, void (*)(uint64_t), uint64_t))(v52 + 8))(v50, v53, v58, ObjectType, v52);

      swift_unknownObjectRelease();
    }
    else
    {
    }
    uint64_t v36 = v59;
  }
  sub_1DEC2A468(v36, v37, v38, v39, v40, v41, v43);
}

uint64_t sub_1DF1122E0()
{
  sub_1DEB1DDEC(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  sub_1DF112960(v0 + OBJC_IVAR____TtC7NewsUI227MastheadPaywallEventHandler_subscribeButtonDestination, (unint64_t *)&unk_1EBAA7AD8, MEMORY[0x1E4F826F8]);
  sub_1DF112960(v0 + OBJC_IVAR____TtC7NewsUI227MastheadPaywallEventHandler_paywallModel, (unint64_t *)&unk_1EBAA7A20, MEMORY[0x1E4F821C0]);
  return swift_deallocClassInstance();
}

uint64_t sub_1DF1123B4()
{
  return type metadata accessor for MastheadPaywallEventHandler();
}

uint64_t type metadata accessor for MastheadPaywallEventHandler()
{
  uint64_t result = qword_1EBAD0FE8;
  if (!qword_1EBAD0FE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF112408()
{
  sub_1DF112F44(319, (unint64_t *)&unk_1EBAA7AD8, MEMORY[0x1E4F826F8]);
  if (v0 <= 0x3F)
  {
    sub_1DF112F44(319, (unint64_t *)&unk_1EBAA7A20, MEMORY[0x1E4F821C0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1DF112530()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DF112568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1DF112A60(a3, a5, a6);
}

void sub_1DF112578()
{
  sub_1DF112F44(0, &qword_1EBAD10A0, (void (*)(uint64_t))type metadata accessor for MastheadPaywallConfiguration);
  sub_1DFDEE090();
  sub_1DEAA29D0();
  id v0 = (id)sub_1DFDFEE60();
  sub_1DFDEDE20();
  swift_release();
  swift_release();
}

void *sub_1DF112680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v6[3] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v12 = (char *)v6 + OBJC_IVAR____TtC7NewsUI227MastheadPaywallEventHandler_subscribeButtonDestination;
  uint64_t v13 = sub_1DFDEF360();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (char *)v6 + OBJC_IVAR____TtC7NewsUI227MastheadPaywallEventHandler_paywallModel;
  uint64_t v15 = sub_1DFDEEBA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v6[4] = a1;
  v6[5] = a2;
  sub_1DE94F204(a3, (uint64_t)(v6 + 6));
  sub_1DE94F204(a4, (uint64_t)(v6 + 11));
  sub_1DE94F204(a5, (uint64_t)(v6 + 16));
  swift_getObjectType();
  sub_1DF1129BC(&qword_1EBAD0FE0, (void (*)(uint64_t))type metadata accessor for MastheadPaywallEventHandler);
  swift_unknownObjectRetain();
  swift_retain();
  sub_1DFDEF150();
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v6;
}

uint64_t sub_1DF11282C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  __swift_project_boxed_opaque_existential_1(v0 + 11, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1DF112888(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DF112F44(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DF1128F4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DF112F44(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DF112960(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DF112F44(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF1129BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF112A04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MastheadPaywallConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF112A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v29[1] = a3;
  v29[0] = a1;
  sub_1DF112F44(0, (unint64_t *)&unk_1EBAA7A20, MEMORY[0x1E4F821C0]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v29 - v5;
  uint64_t v7 = sub_1DFDEEBA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDEEB30();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF112F44(0, &qword_1EAC288C8, MEMORY[0x1E4F821B8]);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  CFTimeInterval v20 = (void *)((char *)v29 - v19);
  switch(a2)
  {
    case 0:
      *CFTimeInterval v20 = 0;
      uint64_t v21 = (unsigned int *)MEMORY[0x1E4F821B0];
      goto LABEL_8;
    case 1:
    case 4:
      uint64_t v21 = (unsigned int *)MEMORY[0x1E4F821A8];
      goto LABEL_8;
    case 2:
    case 3:
      uint64_t v22 = v30 + OBJC_IVAR____TtC7NewsUI227MastheadPaywallEventHandler_paywallModel;
      swift_beginAccess();
      sub_1DF1128F4(v22, (uint64_t)v6, (unint64_t *)&unk_1EBAA7A20, MEMORY[0x1E4F821C0]);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_1DF112960((uint64_t)v6, (unint64_t *)&unk_1EBAA7A20, MEMORY[0x1E4F821C0]);
LABEL_5:
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, 1, 1, v11);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
        uint64_t v23 = sub_1DFDEEB90();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        *CFTimeInterval v20 = v23;
        uint64_t v21 = (unsigned int *)MEMORY[0x1E4F821A0];
LABEL_8:
        (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v20, *v21, v11);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
      }
      sub_1DF1128F4((uint64_t)v20, (uint64_t)v18, &qword_1EAC288C8, MEMORY[0x1E4F821B8]);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) == 1)
      {
        sub_1DF112960((uint64_t)v20, &qword_1EAC288C8, MEMORY[0x1E4F821B8]);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v18, v11);
        uint64_t v24 = v30;
        uint64_t v25 = MEMORY[0x1E01EFB70](v30 + 16);
        if (v25)
        {
          uint64_t v26 = (void *)v25;
          __swift_project_boxed_opaque_existential_1((void *)(v24 + 48), *(void *)(v24 + 72));
          id v27 = v26;
          sub_1DFDEF0A0();
          swift_release();
        }
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        uint64_t v18 = (char *)v20;
      }
      return sub_1DF112960((uint64_t)v18, &qword_1EAC288C8, MEMORY[0x1E4F821B8]);
    default:
      goto LABEL_5;
  }
}

void sub_1DF112F44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for ChannelPickerModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChannelPickerModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    long long v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
  }
  else
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    uint64_t v10 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChannelPickerModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 64);
  uint64_t v5 = (_OWORD *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *(_OWORD *)(a2 + 80);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 80) = v7;
    }
    else
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1DF1132B8(a1 + 64);
    long long v8 = *(_OWORD *)(a2 + 80);
    _OWORD *v4 = *v5;
    *(_OWORD *)(a1 + 80) = v8;
  }
  else
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF1132B8(uint64_t a1)
{
  return a1;
}

void *assignWithTake for ChannelPickerModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  if (a1[9] != 1)
  {
    uint64_t v8 = a2[9];
    if (v8 != 1)
    {
      a1[8] = a2[8];
      a1[9] = v8;
      swift_bridgeObjectRelease();
      uint64_t v10 = a2[11];
      a1[10] = a2[10];
      a1[11] = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DF1132B8((uint64_t)(a1 + 8));
  }
  long long v9 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v9;
LABEL_6:
  a1[12] = a2[12];
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[14];
  a1[13] = a2[13];
  a1[14] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[16];
  a1[15] = a2[15];
  a1[16] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelPickerModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 136)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelPickerModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 136) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelPickerPrewarmResult()
{
  return &type metadata for ChannelPickerPrewarmResult;
}

uint64_t sub_1DF1134DC()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF11353C()
{
  return sub_1DFDFDE20();
}

uint64_t sub_1DF113560()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF1135BC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1DF113610(char *a1@<X8>)
{
  a1[15] = -18;
}

uint64_t sub_1DF113638()
{
  return 0x746C754D6B6E6172;
}

uint64_t sub_1DF11365C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1DF1136B4(uint64_t a1)
{
  unint64_t v2 = sub_1DF113928();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF1136F0(uint64_t a1)
{
  unint64_t v2 = sub_1DF113928();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ChannelSupergroupKnobs.init(from:)@<X0>(void *a1@<X0>, double *a2@<X8>)
{
  sub_1DF113C50(0, &qword_1EAC288D0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF113928();
  sub_1DFE00190();
  if (!v2)
  {
    sub_1DFDFFD70();
    double v11 = v10;
    if (v10 < 0.0)
    {
      if (qword_1EBAC0140 != -1) {
        swift_once();
      }
      sub_1DFDFEA40();
      sub_1DFDF00C0();
      double v11 = 0.0;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1DF113928()
{
  unint64_t result = qword_1EAC288D8;
  if (!qword_1EAC288D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC288D8);
  }
  return result;
}

uint64_t ChannelSupergroupKnobs.encode(to:)(void *a1)
{
  sub_1DF113C50(0, &qword_1EAC288E0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF113928();
  sub_1DFE001A0();
  sub_1DFDFFE60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL static ChannelSupergroupKnobs.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DF113AD8@<X0>(void *a1@<X0>, double *a2@<X8>)
{
  return ChannelSupergroupKnobs.init(from:)(a1, a2);
}

uint64_t sub_1DF113AF0(void *a1)
{
  sub_1DF113C50(0, &qword_1EAC288E0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF113928();
  sub_1DFE001A0();
  sub_1DFDFFE60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DF113C38(uint64_t a1)
{
  return sub_1DF113EB8(a1, (void (*)(void))sub_1DEAB939C);
}

void sub_1DF113C50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF113928();
    unint64_t v7 = a3(a1, &type metadata for ChannelSupergroupKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ChannelSupergroupKnobs()
{
  return &type metadata for ChannelSupergroupKnobs;
}

unsigned char *storeEnumTagSinglePayload for ChannelSupergroupKnobs.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF113D60);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelSupergroupKnobs.CodingKeys()
{
  return &type metadata for ChannelSupergroupKnobs.CodingKeys;
}

unint64_t sub_1DF113D9C()
{
  unint64_t result = qword_1EAC288E8;
  if (!qword_1EAC288E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC288E8);
  }
  return result;
}

unint64_t sub_1DF113DF4()
{
  unint64_t result = qword_1EAC288F0;
  if (!qword_1EAC288F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC288F0);
  }
  return result;
}

unint64_t sub_1DF113E4C()
{
  unint64_t result = qword_1EAC288F8;
  if (!qword_1EAC288F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC288F8);
  }
  return result;
}

uint64_t sub_1DF113EA0(uint64_t a1)
{
  return sub_1DF113EB8(a1, (void (*)(void))sub_1DF113F5C);
}

uint64_t sub_1DF113EB8(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    uint64_t result = sub_1DFDFFBA0();
    __break(1u);
  }
  else if (a1)
  {
    a2(0);
    uint64_t result = sub_1DFDFE350();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

unint64_t sub_1DF113F5C()
{
  unint64_t result = qword_1EBAD1D38;
  if (!qword_1EBAD1D38)
  {
    sub_1DF114120(255, (unint64_t *)&unk_1EBACBCE8);
    sub_1DF114050(255, &qword_1EBAD1B40, (uint64_t (*)(uint64_t))sub_1DF11401C, MEMORY[0x1E4FBB718]);
    sub_1DF1140B4();
    unint64_t result = swift_getFunctionTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAD1D38);
  }
  return result;
}

void sub_1DF11401C(uint64_t a1)
{
}

void sub_1DF114050(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DF1140B4()
{
  if (!qword_1EBAD1B50)
  {
    sub_1DF114120(255, &qword_1EBAD1B48);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAD1B50);
    }
  }
}

void sub_1DF114120(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1DFDFF630();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1DF114168(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DF114F58(0, (unint64_t *)&unk_1EBAEAFD0, (uint64_t (*)(uint64_t))sub_1DEBB9370, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  strcpy((char *)(inited + 32), "puzzleTypeID");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  sub_1DF114F58(0, (unint64_t *)&unk_1EBAEAD90, MEMORY[0x1E4FAAC58], v5);
  uint64_t v7 = sub_1DFDED550();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DFE0B750;
  uint64_t v12 = (void *)(v11 + v10);
  *uint64_t v12 = 90;
  v12[1] = 0xE100000000000000;
  uint64_t v13 = *(void (**)(void))(v8 + 104);
  uint64_t result = ((uint64_t (*)(void *, void, uint64_t))v13)(v12, *MEMORY[0x1E4FAAC48], v7);
  if ((*MEMORY[0x1E4F7DE68] & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)((char *)v12 + v9) = *MEMORY[0x1E4F7DE68];
    v13();
    *(void *)(inited + 48) = v11;
    sub_1DF3496D4(inited);
    uint64_t v15 = sub_1DFDED510();
    swift_bridgeObjectRelease();
    v2[2] = v15;
    v2[3] = a1;
    v2[4] = a2;
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_1DF114378(uint64_t a1)
{
  sub_1DF114F58(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v28[-1] - v3;
  uint64_t v5 = sub_1DFDED140();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDED180();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF114F58(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  sub_1DFDED420();
  sub_1DFDED160();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v13 = sub_1DFDED150();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v15)
  {
    id v16 = objc_msgSend(self, sel_sharedAccount);
    unsigned int v17 = objc_msgSend(v16, sel_isContentStoreFrontSupported);

    if (v17)
    {
      uint64_t v18 = sub_1DF1B283C(a1);
      v28[0] = v13;
      v28[1] = v15;
      v28[2] = (uint64_t)v18;
      v28[3] = MEMORY[0x1E4FBC860];
      char v29 = 1;
      swift_bridgeObjectRetain();
      uint64_t v19 = v18;
      sub_1DF114B50(v13, v15, v19, (uint64_t)v28, (unint64_t *)&v27);
      swift_bridgeObjectRelease();
      uint64_t v20 = v27;
      sub_1DFDED3F0();
      uint64_t v21 = sub_1DFDEAB40();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 0, 1, v21);
      char v22 = sub_1DF114834(&v27, (uint64_t)v4);

      swift_bridgeObjectRelease();
      sub_1DF115150((uint64_t)v4, (uint64_t)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DF114F58);
      unint64_t v23 = v20;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 40) = &type metadata for AlertContentRegionUnavailable;
      *(void *)(v24 + 48) = sub_1DEBB9C58();
      *(unsigned char *)(v24 + 56) = 1;
      v28[0] = v24;
      sub_1DFDED3F0();
      uint64_t v25 = sub_1DFDEAB40();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v4, 0, 1, v25);
      char v22 = sub_1DF114834(v28, (uint64_t)v4);
      sub_1DF115150((uint64_t)v4, (uint64_t)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DF114F58);
      unint64_t v23 = v28[0];
    }
    sub_1DEAF0150(v23);
  }
  else
  {
    char v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_1DF114834(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_retain();
  sub_1DFBB5128(v3, 0, a2, (uint64_t)v7, 0, 0, 0, 0, (uint64_t)v5);
  swift_release();
  sub_1DF115150((uint64_t)v5, (uint64_t)&qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0], (uint64_t (*)(void))sub_1DE9B31FC);
  sub_1DF115150((uint64_t)v7, (uint64_t)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18], (uint64_t (*)(void))sub_1DE9B31FC);
  swift_release();
  return 1;
}

id sub_1DF114B50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t a4@<X4>, unint64_t *a5@<X8>)
{
  uint64_t v28 = a2;
  char v29 = a3;
  uint64_t v27 = a1;
  uint64_t v33 = a5;
  sub_1DF115024(a4, (uint64_t)v38);
  uint64_t v7 = v38[0];
  uint64_t v6 = v38[1];
  uint64_t v31 = v38[3];
  uint64_t v32 = v38[2];
  int v30 = v39;
  uint64_t v8 = sub_1DFDED560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDED180();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF114F58(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  sub_1DFDED420();
  sub_1DFDED170();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v16 = sub_1DFDED4C0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v18
    && (uint64_t v36 = v16,
        uint64_t v37 = v18,
        uint64_t v34 = 0x65766968637261,
        unint64_t v35 = 0xE700000000000000,
        sub_1DEA4DB08(),
        char v19 = sub_1DFDFF750(),
        swift_bridgeObjectRelease(),
        (v19 & 1) != 0))
  {
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v28;
    *(void *)(v20 + 16) = v27;
    *(void *)(v20 + 24) = v21;
    *(void *)(v20 + 32) = v29;
    unint64_t *v33 = v20 | 0xC000000000000004;
    swift_bridgeObjectRetain();
    char v22 = v29;
    return v22;
  }
  else
  {
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v7;
    *(void *)(v24 + 24) = v6;
    uint64_t v25 = (uint64_t *)v33;
    uint64_t v26 = v31;
    *(void *)(v24 + 32) = v32;
    *(void *)(v24 + 40) = v26;
    *(unsigned char *)(v24 + 48) = v30;
    *(void *)(v24 + 56) = 10;
    *(_OWORD *)(v24 + 64) = 0u;
    *(_OWORD *)(v24 + 80) = 0u;
    *(unsigned char *)(v24 + 96) = -1;
    uint64_t *v25 = v24 | 0x2000000000000006;
    return (id)sub_1DF1150D8(a4);
  }
}

uint64_t sub_1DF114E6C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PuzzleTypeURLHandler()
{
  return self;
}

uint64_t sub_1DF114ED8(uint64_t a1)
{
  return sub_1DF114378(a1) & 1;
}

unint64_t sub_1DF114F04()
{
  unint64_t result = qword_1EBAD7E28;
  if (!qword_1EBAD7E28)
  {
    type metadata accessor for PuzzleTypeURLHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD7E28);
  }
  return result;
}

void sub_1DF114F58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF114FBC()
{
  uint64_t v1 = (id *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 56);
  if (v2 == 2)
  {
  }
  else if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  else if (!*(unsigned char *)(v0 + 56))
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DF115024(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DF115080()
{
  sub_1DEB28744(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_1DEB287CC(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1DF1150D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF115110()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DF115150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t *sub_1DF1151B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DEA53288();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEA91D10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
    v9[v12[5]] = v10[v12[5]];
    v9[v12[6]] = v10[v12[6]];
    *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
    v9[v12[8]] = v10[v12[8]];
    v9[v12[9]] = v10[v12[9]];
    uint64_t v13 = v12[10];
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    sub_1DEA82C08(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[6];
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    uint64_t v19 = a3[7];
    long long v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)a1 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    uint64_t v21 = a3[8];
    long long v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)((char *)a1 + v21 + 24) = v22;
    (**(void (***)(void))(v22 - 8))();
    uint64_t v23 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DF1154B4(uint64_t a1, int *a2)
{
  sub_1DEA53288();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DEA91D10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v5 + *(int *)(type metadata accessor for BestOfBundleMagazineFeedGroupKnobs() + 40);
  sub_1DEA82C08(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[8]);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF115630(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA53288();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA91D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  *(unsigned char *)(v8 + v11[5]) = *(unsigned char *)(v9 + v11[5]);
  *(unsigned char *)(v8 + v11[6]) = *(unsigned char *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(unsigned char *)(v8 + v11[8]) = *(unsigned char *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA82C08(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[6];
  long long v17 = *(_OWORD *)(a2 + v16 + 24);
  *(_OWORD *)(a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  uint64_t v18 = a3[7];
  long long v19 = *(_OWORD *)(a2 + v18 + 24);
  *(_OWORD *)(a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  uint64_t v20 = a3[8];
  long long v21 = *(_OWORD *)(a2 + v20 + 24);
  *(_OWORD *)(a1 + v20 + 24) = v21;
  (**(void (***)(void))(v21 - 8))();
  uint64_t v22 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DF1158E4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA53288();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA91D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  *(unsigned char *)(v8 + v11[5]) = *(unsigned char *)(v9 + v11[5]);
  *(unsigned char *)(v8 + v11[6]) = *(unsigned char *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(unsigned char *)(v8 + v11[8]) = *(unsigned char *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA82C08(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v16 = a3[10];
  long long v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *long long v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF115AEC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA53288();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA91D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  *(unsigned char *)(v8 + v11[5]) = *(unsigned char *)(v9 + v11[5]);
  *(unsigned char *)(v8 + v11[6]) = *(unsigned char *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(unsigned char *)(v8 + v11[8]) = *(unsigned char *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA82C08(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  uint64_t v21 = a1 + v17;
  uint64_t v22 = a2 + v17;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  uint64_t v24 = a3[8];
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  long long v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(void *)(v26 + 32) = *(void *)(v27 + 32);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1DF115CE0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA53288();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA91D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  *(unsigned char *)(v8 + v11[5]) = *(unsigned char *)(v9 + v11[5]);
  *(unsigned char *)(v8 + v11[6]) = *(unsigned char *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(unsigned char *)(v8 + v11[8]) = *(unsigned char *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA82C08(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[6];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  __swift_destroy_boxed_opaque_existential_1(a1 + v20);
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  __swift_destroy_boxed_opaque_existential_1(a1 + v24);
  long long v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(void *)(v25 + 32) = *(void *)(v26 + 32);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_unknownObjectRelease();
  uint64_t v28 = a3[10];
  char v29 = (void *)(a1 + v28);
  int v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *char v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF115F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF115F20);
}

uint64_t sub_1DF115F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA53288();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DF116038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF11604C);
}

uint64_t sub_1DF11604C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA53288();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for BestOfBundleMagazineFeedGroupEmitter()
{
  uint64_t result = qword_1EBAB8568;
  if (!qword_1EBAB8568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF1161AC()
{
  sub_1DEA53288();
  if (v0 <= 0x3F)
  {
    type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DF116294()
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1DFDFAA20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BestOfBundleMagazineFeedGroupConfigData();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BestOfBundleMagazineFeedGroupEmitter();
  LOBYTE(v20) = 11;
  sub_1DEA91D10();
  uint64_t v19 = sub_1DFDF8030();
  sub_1DEA4E848(0, (unint64_t *)&qword_1EBAEAF60, (uint64_t (*)(uint64_t))sub_1DEE205B0, MEMORY[0x1E4FBBE00]);
  sub_1DEE205B0();
  uint64_t v18 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DFE0B250;
  uint64_t v12 = (uint64_t *)(v11 + v10);
  sub_1DEA53288();
  sub_1DFDF73B0();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, &v7[*(int *)(v5 + 44)], v0);
  sub_1DF118B10((uint64_t)v7);
  uint64_t v13 = sub_1DFDFA880();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v15;
  sub_1DEA82C08(0, (unint64_t *)&unk_1EBAE9990, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7FE90]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *uint64_t v12 = sub_1DFDF9140();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E4F7F8E8], v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = v19;
  sub_1DF3DDEC8(v11);
  return v20;
}

uint64_t sub_1DF116624(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v2 = type metadata accessor for BestOfBundleMagazineFeedGroupEmitter();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDEE090();
  uint64_t v25 = type metadata accessor for BestOfBundleMagazineFeedGroupEmitter;
  sub_1DF11A298(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter);
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 16) & ~v6;
  uint64_t v8 = v7 + v4;
  uint64_t v24 = v6 | 7;
  uint64_t v29 = v7 + v4;
  uint64_t v9 = swift_allocObject();
  sub_1DF1186E8((uint64_t)v5, v9 + v7);
  unint64_t v10 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v28 = v1;
  sub_1DF11A298(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter);
  unint64_t v11 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  sub_1DF1186E8((uint64_t)v5, v12 + v7);
  uint64_t v13 = v27;
  *(void *)(v12 + v11) = v27;
  swift_retain();
  uint64_t v14 = (void *)sub_1DFDEDCE0();
  sub_1DF11887C();
  uint64_t v26 = sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v15 = v25;
  sub_1DF11A298(v1, (uint64_t)v5, (uint64_t (*)(void))v25);
  uint64_t v16 = swift_allocObject();
  sub_1DF1186E8((uint64_t)v5, v16 + v7);
  *(void *)(v16 + v11) = v13;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1DF1188E8;
  *(void *)(v17 + 24) = v16;
  swift_retain();
  uint64_t v18 = (void *)sub_1DFDEDCE0();
  type metadata accessor for MagazineFeedGroup();
  sub_1DFDEDE00();
  swift_release();
  swift_release();

  uint64_t v19 = (void *)sub_1DFDEDCE0();
  sub_1DEA82C08(0, &qword_1EBABA1C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedGroup, sub_1DEE28750, MEMORY[0x1E4F7FA98]);
  sub_1DFDEDE00();
  swift_release();

  sub_1DF11A298(v28, (uint64_t)v5, (uint64_t (*)(void))v15);
  uint64_t v20 = swift_allocObject();
  sub_1DF1186E8((uint64_t)v5, v20 + v7);
  uint64_t v21 = (void *)sub_1DFDEDCE0();
  uint64_t v22 = sub_1DFDEDEE0();
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_1DF116A24(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BestOfBundleMagazineFeedGroupEmitter();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v21 = a1;
  uint64_t v22 = v1;
  sub_1DEA4E848(0, (unint64_t *)&qword_1EBAA6550, (uint64_t (*)(uint64_t))sub_1DEC078AC, MEMORY[0x1E4FBB320]);
  sub_1DFDEE090();
  sub_1DF11A298(v1, (uint64_t)&v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v8 + 64) = v9;
  uint64_t v10 = *(void *)(a1 + 64);
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v11;
  *(void *)(v8 + 80) = v10;
  *(void *)(v8 + 88) = v6;
  sub_1DF1186E8((uint64_t)&v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v8 + v7);
  sub_1DEE297C0(a1);
  swift_retain();
  uint64_t v12 = (void *)sub_1DFDEDCE0();
  sub_1DEBFF55C();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v13 = (void *)sub_1DFDEDCE0();
  sub_1DFDF7DC0();
  sub_1DEA53B50((unint64_t *)&qword_1EBABA9B0, (void (*)(uint64_t))sub_1DEBFF55C);
  sub_1DFDEDF50();
  swift_release();

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v6;
  long long v15 = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(a1 + 16);
  long long v16 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v14 + 72) = v16;
  *(void *)(v14 + 88) = *(void *)(a1 + 64);
  *(_OWORD *)(v14 + 24) = v15;
  sub_1DEE297C0(a1);
  swift_retain();
  uint64_t v17 = (void *)sub_1DFDEDCE0();
  uint64_t v18 = sub_1DFDEDE00();
  swift_release();
  swift_release();
  swift_release();

  return v18;
}

void (*sub_1DF116D4C(uint64_t *a1, uint64_t a2, uint64_t a3))(char *, uint64_t)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t result = sub_1DF118D8C(a3, *a1);
  if (!v3)
  {
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v5;
    v8[3] = v4;
    v8[4] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v9 = (void *)sub_1DFDEDCE0();
    sub_1DF11887C();
    uint64_t v10 = sub_1DFDEDE00();
    swift_release();
    swift_release();

    return (void (*)(char *, uint64_t))v10;
  }
  return result;
}

uint64_t sub_1DF116E28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = *a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DF116E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v58 = a1;
  uint64_t v62 = a5;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA4E848(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v59 = (char *)&v48 - v8;
  uint64_t v54 = type metadata accessor for BestOfBundleMagazineFeedGroupConfigData();
  MEMORY[0x1F4188790](v54);
  uint64_t v53 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF8C20();
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v57 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v56 = (char *)&v48 - v13;
  sub_1DEA4E848(0, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8], v6);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v50 = (char *)&v48 - v15;
  sub_1DEA4E848(0, &qword_1EBAE99A0, MEMORY[0x1E4F7FFD0], v6);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v48 - v17;
  sub_1DEA4E848(0, (unint64_t *)&unk_1EBAE9D20, MEMORY[0x1E4F80A10], v6);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v48 - v20;
  sub_1DEA4E848(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], v6);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v48 - v23;
  uint64_t v25 = sub_1DFDFA9F0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v48 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v32 = (char *)&v48 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)&v48 - v33;
  sub_1DFDFB600();
  uint64_t v35 = sub_1DFDE7600();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v24, 1, 1, v35);
  uint64_t v55 = a2;
  sub_1DFDFB600();
  unint64_t v36 = sub_1DFDFA9C0();
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v26 + 8);
  uint64_t result = v37(v29, v25);
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v49 = (void (*)(char *, uint64_t))v37;
    if (!v47) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v39 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v49 = (void (*)(char *, uint64_t))v37;
    if (!v39)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v40 = sub_1DFDFABA0();
      uint64_t v41 = (uint64_t)v21;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v21, 1, 1, v40);
      uint64_t v42 = sub_1DFDF91A0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v18, 1, 1, v42);
      uint64_t v43 = sub_1DFDF66A0();
      uint64_t v44 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v50, 1, 1, v43);
      sub_1DFDFA950();
      swift_unknownObjectRelease();
      sub_1DF118AA0(v44, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8]);
      sub_1DF118AA0((uint64_t)v18, &qword_1EBAE99A0, MEMORY[0x1E4F7FFD0]);
      sub_1DF118AA0(v41, (unint64_t *)&unk_1EBAE9D20, MEMORY[0x1E4F80A10]);
      sub_1DF118AA0((uint64_t)v24, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
      uint64_t v45 = v49;
      v49(v32, v25);
      uint64_t v55 = sub_1DFDFB610();
      v45(v34, v25);
      sub_1DEA53288();
      uint64_t v50 = (char *)sub_1DFDF7350();
      sub_1DFDF7360();
      uint64_t v46 = (uint64_t)v53;
      sub_1DFDF73B0();
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v57, v46 + *(int *)(v54 + 28), v52);
      sub_1DF118B10(v46);
      type metadata accessor for BestOfBundleMagazineFeedGroupEmitter();
      sub_1DEA91D10();
      sub_1DFDF8080();
      sub_1DFDF8050();
      sub_1DFDF80A0();
      type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
      sub_1DEA82C08(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
      sub_1DFDF83A0();
      sub_1DFDF8ED0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DFDF8EB0();
      sub_1DFDF6F70();
      type metadata accessor for MagazineFeedGroup();
      return swift_storeEnumTagMultiPayload();
    }
  }
  if ((v36 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1E01EE240](0, v36);
    goto LABEL_6;
  }
  if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF11775C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF1177FC()
{
  if (qword_1EBAC0140 != -1) {
    swift_once();
  }
  type metadata accessor for MagazineFeedGroup();
  sub_1DEE28750();
  return sub_1DFDF88D0();
}

uint64_t sub_1DF1178C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + *(int *)(type metadata accessor for BestOfBundleMagazineFeedGroupEmitter() + 20);
  uint64_t v3 = type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  return sub_1DFD6FB9C(*(unsigned char *)(v2 + *(int *)(v3 + 20)), *(unsigned char *)(v2 + *(int *)(v3 + 24)));
}

uint64_t sub_1DF11792C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA4E848(0, &qword_1EBAE9A20, MEMORY[0x1E4F801B0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v59 = (char *)&v47 - v11;
  sub_1DEA4E848(0, &qword_1EBAE99B0, MEMORY[0x1E4F80020], v9);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v57 = (char *)&v47 - v13;
  uint64_t v60 = sub_1DFDF9620();
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v56 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1DFDF7DD0();
  uint64_t v65 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  uint64_t v55 = (uint64_t *)(a3 + 16);
  uint64_t v64 = v17;
  sub_1DEA4E848(0, (unint64_t *)&qword_1EBAA6550, (uint64_t (*)(uint64_t))sub_1DEC078AC, MEMORY[0x1E4FBB320]);
  sub_1DE9DB774(0, (unint64_t *)&qword_1EBABA650);
  sub_1DECC9D8C();
  sub_1DECC9DE4();
  unint64_t v18 = sub_1DFDFDFF0();
  sub_1DEE297C0(a2);
  unint64_t v19 = (unint64_t)sub_1DF118B6C(v18, a2);
  uint64_t v47 = v4;
  sub_1DEE2985C(a2);
  swift_bridgeObjectRelease();
  uint64_t v62 = (int *)type metadata accessor for BestOfBundleMagazineFeedGroupEmitter();
  uint64_t v20 = (void *)(a4 + v62[7]);
  uint64_t v21 = v20[3];
  uint64_t v53 = v20[4];
  uint64_t v54 = (void (*)(char *, uint64_t))v21;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v61 = a4;
  if (v19 >> 62)
  {
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
    sub_1DFDFFBD0();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1DFDFFF80();
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
  }
  swift_bridgeObjectRelease();
  unsigned int v50 = *MEMORY[0x1E4F7FF40];
  uint64_t v22 = v50;
  uint64_t v23 = sub_1DFDF9170();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 104);
  uint64_t v51 = v24 + 104;
  v49(v16, v22, v23);
  unsigned int v48 = *MEMORY[0x1E4F7F6A8];
  uint64_t v25 = v65;
  uint64_t v26 = *(void (**)(char *))(v65 + 104);
  uint64_t v27 = v63;
  v26(v16);
  uint64_t v28 = sub_1DFDF9420();
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v65 = v25 + 8;
  uint64_t v54 = v29;
  v29(v16, v27);
  uint64_t v30 = v55;
  swift_beginAccess();
  *uint64_t v30 = v28;
  swift_bridgeObjectRelease();
  uint64_t v31 = v20[3];
  uint64_t v53 = v20[4];
  uint64_t v52 = __swift_project_boxed_opaque_existential_1(v20, v31);
  swift_beginAccess();
  v49(v16, v50, v23);
  ((void (*)(char *, void, uint64_t))v26)(v16, v48, v27);
  uint64_t v32 = v61;
  uint64_t v33 = (uint64_t *)(v61 + v62[5]);
  uint64_t v34 = type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  uint64_t v55 = v33;
  uint64_t v35 = sub_1DFDF9290();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v57, 1, 1, v35);
  uint64_t v36 = sub_1DFDF9640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v59, 1, 1, v36);
  swift_bridgeObjectRetain();
  uint64_t v37 = v56;
  sub_1DFDF9600();
  uint64_t v38 = sub_1DFDF93F0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v60);
  v54(v16, v63);
  if (v38)
  {
    uint64_t v39 = *(void *)(v38 + 16);
    uint64_t v40 = *(int *)(v34 + 28);
    uint64_t v41 = v55;
    if (v39 >= *(uint64_t *)((char *)v55 + v40))
    {
      __swift_project_boxed_opaque_existential_1((void *)(v32 + v62[8]), *(void *)(v32 + v62[8] + 24));
      uint64_t v42 = sub_1DFDFB6C0();
      swift_bridgeObjectRelease();
      return v42;
    }
    uint64_t v42 = sub_1DFDF8510();
    sub_1DEA53B50((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    *uint64_t v44 = *(uint64_t *)((char *)v41 + v40);
    v44[1] = v39;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, *MEMORY[0x1E4F7F9C8], v42);
  }
  else
  {
    uint64_t v42 = sub_1DFDF8510();
    sub_1DEA53B50((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v42 - 8) + 104))(v45, *MEMORY[0x1E4F7F950], v42);
  }
  swift_willThrow();
  return v42;
}

uint64_t sub_1DF118158()
{
  id v0 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
  return sub_1DFDF7DA0();
}

uint64_t sub_1DF1181B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_beginAccess();
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a3 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t result = sub_1DF7538B8(v10, v9);
  *a4 = v7;
  a4[1] = v8;
  a4[2] = result;
  return result;
}

uint64_t sub_1DF118254(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DF11828C@<X0>(unint64_t *a1@<X8>)
{
  sub_1DEA53288();
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocBox();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0xB000000000000000;
  return result;
}

uint64_t sub_1DF118308@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for BestOfBundleMagazineFeedGroupKnobs();
  a2[4] = sub_1DEA53B50(&qword_1EBAB75D8, (void (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupKnobs);
  a2[5] = sub_1DEA53B50(&qword_1EBAA5D10, (void (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DF11A298(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for BestOfBundleMagazineFeedGroupKnobs);
}

uint64_t sub_1DF1183D4()
{
  sub_1DEA53288();
  return sub_1DFDF7340();
}

uint64_t sub_1DF118400@<X0>(uint64_t *a1@<X8>)
{
  sub_1DEA4E848(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DEA53288();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DEA4E848(0, &qword_1EBAA7708, (uint64_t (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
  a1[3] = v5;
  a1[4] = sub_1DF11A300();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF118558()
{
  sub_1DEA53B50((unint64_t *)&unk_1EBAB8548, (void (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF1185C4()
{
  return sub_1DEA53B50((unint64_t *)&unk_1EBAB8558, (void (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter);
}

uint64_t sub_1DF11860C()
{
  return sub_1DEA53B50(&qword_1EBAB8540, (void (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter);
}

uint64_t sub_1DF118654()
{
  return sub_1DEA53B50((unint64_t *)&unk_1EBAB8548, (void (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter);
}

uint64_t sub_1DF11869C()
{
  return sub_1DEA53B50((unint64_t *)&unk_1EBAF8560, (void (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter);
}

uint64_t sub_1DF1186E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BestOfBundleMagazineFeedGroupEmitter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF11874C(uint64_t a1)
{
  type metadata accessor for BestOfBundleMagazineFeedGroupEmitter();
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  uint64_t v6 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  return sub_1DF116A24((uint64_t)v5);
}

void (*sub_1DF1187E4(uint64_t *a1))(char *, uint64_t)
{
  uint64_t v3 = *(void *)(type metadata accessor for BestOfBundleMagazineFeedGroupEmitter() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DF116D4C(a1, v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1DF11887C()
{
  if (!qword_1EBAE9E08)
  {
    sub_1DFDFB620();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAE9E08);
    }
  }
}

uint64_t sub_1DF1188E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(type metadata accessor for BestOfBundleMagazineFeedGroupEmitter() - 8);
  return sub_1DF116E80(*(void *)(v4+ ((*(void *)(v9 + 64)+ ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), a1, a2, a3, a4);
}

uint64_t sub_1DF1189AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF1189E4(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DF118A24()
{
  return sub_1DF1177FC();
}

uint64_t sub_1DF118AA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DEA4E848(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF118B10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BestOfBundleMagazineFeedGroupConfigData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1DF118B6C(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_22:
    uint64_t v3 = sub_1DFDFFBE0();
    if (v3) {
      goto LABEL_3;
    }
    return (id)MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    return (id)MEMORY[0x1E4FBC860];
  }
LABEL_3:
  unint64_t v4 = 0;
  unint64_t v5 = v2 & 0xC000000000000001;
  uint64_t v6 = v2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v7 = &selRef_setMinimumLineHeight_;
  uint64_t v23 = v2 & 0xFFFFFFFFFFFFFF8;
  unint64_t v24 = v2;
  while (1)
  {
    if (v5)
    {
      id v8 = (id)MEMORY[0x1E01EE240](v4, v2);
    }
    else
    {
      if (v4 >= *(void *)(v6 + 16))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      id v8 = *(id *)(v2 + 8 * v4 + 32);
    }
    uint64_t v9 = v8;
    unint64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_21;
    }
    if (![v8 v7[171]])
    {

      goto LABEL_5;
    }
    uint64_t v11 = v3;
    id result = objc_msgSend(v9, sel_articleID);
    if (!result) {
      break;
    }
    uint64_t v13 = result;
    uint64_t v14 = *(void *)(a2 + 8);
    uint64_t v15 = sub_1DFDFDD20();
    uint64_t v17 = v16;

    LOBYTE(v13) = sub_1DEAAB55C(v15, v17, v14);
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_15;
    }
    id result = objc_msgSend(v9, sel_articleID);
    if (!result) {
      goto LABEL_25;
    }
    unint64_t v18 = result;
    uint64_t v19 = *(void *)(a2 + 16);
    uint64_t v20 = sub_1DFDFDD20();
    uint64_t v22 = v21;

    LOBYTE(v19) = sub_1DEAAB55C(v20, v22, v19);
    swift_bridgeObjectRelease();
    if (v19)
    {
LABEL_15:
    }
    else
    {
      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
    }
    uint64_t v3 = v11;
    uint64_t v6 = v23;
    unint64_t v2 = v24;
    uint64_t v7 = &selRef_setMinimumLineHeight_;
LABEL_5:
    ++v4;
    if (v10 == v3) {
      return (id)v26;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void (*sub_1DF118D8C(uint64_t a1, uint64_t a2))(char *, uint64_t)
{
  uint64_t v117 = a1;
  unint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA4E848(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v98 - v6;
  sub_1DEA4E848(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v4);
  MEMORY[0x1F4188790](v8 - 8);
  id v114 = (char *)&v98 - v9;
  sub_1DEA4E848(0, &qword_1EBAE9620, (uint64_t (*)(uint64_t))sub_1DEA91D10, v4);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v112 = (char *)&v98 - v11;
  uint64_t v12 = sub_1DFDFB960();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v118 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA4E848(0, &qword_1EBABA570, (uint64_t (*)(uint64_t))sub_1DEBFF44C, v4);
  MEMORY[0x1F4188790](v15 - 8);
  v110 = (char *)&v98 - v16;
  uint64_t v107 = type metadata accessor for BestOfBundleMagazineFeedGroupConfigData();
  MEMORY[0x1F4188790](v107);
  id v106 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1DFDFAA20();
  uint64_t v116 = *(void *)(v124 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v124);
  uint64_t v109 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v115 = (char *)&v98 - v20;
  sub_1DEA4E848(0, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8], v4);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v108 = (char *)&v98 - v22;
  uint64_t v23 = sub_1DFDFAFE0();
  uint64_t v113 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  v123 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1DFDF7DC0();
  uint64_t v126 = *(void *)(v132 - 8);
  MEMORY[0x1F4188790](v132);
  uint64_t v131 = (uint64_t *)((char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_1DFDFC900();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (uint64_t *)((char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = sub_1DFDFCAB0();
  uint64_t v121 = *(void *)(v30 - 8);
  uint64_t v122 = v30;
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  uint64_t v120 = (char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v35 = *(void *)(a2 + 16);
  if (v35)
  {
    uint64_t v101 = v13;
    uint64_t v100 = v23;
    uint64_t v102 = v12;
    uint64_t v103 = v7;
    uint64_t v104 = v2;
    unint64_t v99 = (*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
    uint64_t v105 = v34;
    uint64_t v36 = (char *)&v98 - v33;
    sub_1DEA4E848(0, (unint64_t *)&unk_1EBAEAFB0, MEMORY[0x1E4F81610], MEMORY[0x1E4FBBE00]);
    unint64_t v37 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v130 = *(void *)(v27 + 72);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1DFE0B250;
    uint64_t v129 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v37;
    uint64_t v39 = (uint64_t *)(v38 + v37);
    *uint64_t v39 = sub_1DFDF7DB0();
    uint64_t v40 = *(void (**)(void))(v27 + 104);
    unsigned int v137 = *MEMORY[0x1E4F81600];
    uint64_t v133 = v26;
    char v127 = (void (*)(uint64_t *, void, uint64_t))v40;
    uint64_t v128 = v27 + 104;
    v40(v39);
    uint64_t v41 = MEMORY[0x1E4FBC860];
    sub_1DF11BA44(MEMORY[0x1E4FBC860]);
    sub_1DF11BB5C(v41);
    sub_1DF11BC90(v41);
    v119 = v36;
    sub_1DFDFCAA0();
    uint64_t v42 = v35 - 1;
    if (v35 == 1)
    {
      uint64_t v58 = v41;
    }
    else
    {
      uint64_t v134 = v41;
      uint64_t v43 = v105;
      swift_bridgeObjectRetain();
      sub_1DEDF697C(0, v35 - 1, 0);
      uint64_t v45 = *(void *)(v126 + 16);
      uint64_t v44 = v126 + 16;
      uint64_t v46 = (void (**)(void *, uint64_t))(v126 + 8);
      uint64_t v47 = (void (**)(char *, uint64_t *, uint64_t))(v27 + 32);
      uint64_t v125 = *(void *)(v126 + 72);
      uint64_t v126 = v45;
      unint64_t v48 = v43 + v125 + v99;
      uint64_t v49 = v44;
      uint64_t v50 = v133;
      do
      {
        uint64_t v52 = v131;
        uint64_t v51 = v132;
        uint64_t v53 = v49;
        ((void (*)(void *, unint64_t, uint64_t))v126)(v131, v48, v132);
        *uint64_t v29 = sub_1DFDF7DB0();
        v127(v29, v137, v50);
        (*v46)(v52, v51);
        uint64_t v54 = v134;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DEDF697C(0, *(void *)(v54 + 16) + 1, 1);
          uint64_t v54 = v134;
        }
        unint64_t v56 = *(void *)(v54 + 16);
        unint64_t v55 = *(void *)(v54 + 24);
        if (v56 >= v55 >> 1)
        {
          sub_1DEDF697C(v55 > 1, v56 + 1, 1);
          uint64_t v54 = v134;
        }
        *(void *)(v54 + 16) = v56 + 1;
        uint64_t v57 = (char *)v129 + v54 + v56 * v130;
        uint64_t v50 = v133;
        (*v47)(v57, v29, v133);
        uint64_t v134 = v54;
        v48 += v125;
        --v42;
        uint64_t v49 = v53;
      }
      while (v42);
      swift_bridgeObjectRelease();
      uint64_t v58 = MEMORY[0x1E4FBC860];
    }
    sub_1DF11BA44(v58);
    sub_1DF11BB5C(v58);
    sub_1DF11BC90(v58);
    uint64_t v61 = v120;
    sub_1DFDFCAA0();
    sub_1DEA4E848(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], MEMORY[0x1E4FBBE00]);
    uint64_t v62 = v121;
    uint64_t v63 = *(void *)(v121 + 72);
    unint64_t v64 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_1DFE0B750;
    unint64_t v66 = v65 + v64;
    long long v67 = *(void (**)(unint64_t, char *, uint64_t))(v62 + 16);
    uint64_t v68 = v122;
    v67(v66, v119, v122);
    v67(v66 + v63, v61, v68);
    uint64_t v69 = sub_1DFDF66A0();
    uint64_t v70 = *(void *)(v69 - 8);
    uint64_t v129 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56);
    uint64_t v130 = v70 + 56;
    uint64_t v71 = (uint64_t)v108;
    v129(v108, 1, 1, v69);
    sub_1DFC83088(v58);
    sub_1DFC83088(v58);
    sub_1DFC831BC(v58);
    sub_1DFC831D4(v58);
    sub_1DFC83308(v58);
    sub_1DFC83320(v58);
    sub_1DFDFAFD0();
    uint64_t v72 = type metadata accessor for BestOfBundleMagazineFeedGroupEmitter();
    uint64_t v73 = v111;
    sub_1DE94F204(v111 + *(int *)(v72 + 24), (uint64_t)&v134);
    uint64_t v132 = v136;
    uint64_t v133 = v135;
    uint64_t v131 = __swift_project_boxed_opaque_existential_1(&v134, v135);
    sub_1DEA53288();
    uint64_t v74 = (uint64_t)v106;
    sub_1DFDF73B0();
    uint64_t v75 = v116;
    unint64_t v76 = v109;
    uint64_t v77 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v109, v74 + *(int *)(v107 + 36), v124);
    sub_1DF118B10(v74);
    v129((char *)v71, 1, 1, v69);
    sub_1DEBFF44C(0);
    uint64_t v79 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v110, 1, 1, v78);
    uint64_t v80 = v115;
    sub_1DFDFA860();
    sub_1DF118AA0(v79, &qword_1EBABA570, (uint64_t (*)(uint64_t))sub_1DEBFF44C);
    sub_1DF118AA0(v71, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8]);
    id v81 = *(void (**)(char *, uint64_t))(v75 + 8);
    v81(v76, v77);
    uint64_t v82 = v73 + *(int *)(v72 + 20);
    sub_1DEA91D10();
    uint64_t v84 = v83;
    uint64_t v85 = *(void *)(v83 - 8);
    uint64_t v86 = v112;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v112, v82, v83);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v86, 0, 1, v84);
    uint64_t v87 = sub_1DFDFC340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v114, 1, 1, v87);
    char v138 = 11;
    sub_1DEA82C08(0, (unint64_t *)&unk_1EBAE9F50, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F81400]);
    swift_allocObject();
    swift_retain();
    sub_1DFDFC5C0();
    uint64_t v88 = sub_1DFDFB640();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v103, 1, 1, v88);
    uint64_t v89 = qword_1EBAC0140;
    (id)*MEMORY[0x1E4F7DFE0];
    if (v89 != -1) {
      swift_once();
    }
    (id)qword_1EBB62888;
    v90 = v118;
    sub_1DFDFB930();
    v91 = v123;
    uint64_t v92 = v104;
    uint64_t v93 = sub_1DFDFB110();
    if (v92)
    {
      (*(void (**)(char *, uint64_t))(v101 + 8))(v90, v102);
      v81(v80, v124);
      (*(void (**)(char *, uint64_t))(v113 + 8))(v91, v100);
      uint64_t v59 = *(void (**)(char *, uint64_t))(v121 + 8);
      uint64_t v94 = v122;
      v59(v120, v122);
      v59(v119, v94);
    }
    else
    {
      uint64_t v59 = (void (*)(char *, uint64_t))v93;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v90, v102);
      v81(v80, v124);
      (*(void (**)(char *, uint64_t))(v113 + 8))(v91, v100);
      v95 = *(void (**)(char *, uint64_t))(v121 + 8);
      uint64_t v96 = v122;
      v95(v120, v122);
      v95(v119, v96);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v134);
  }
  else
  {
    uint64_t v59 = (void (*)(char *, uint64_t))sub_1DFDF8510();
    sub_1DEA53B50((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    *uint64_t v60 = xmmword_1DFE14320;
    (*(void (**)(_OWORD *, void, void (*)(char *, uint64_t)))(*((void *)v59 - 1) + 104))(v60, *MEMORY[0x1E4F7F9C8], v59);
    swift_willThrow();
  }
  return v59;
}

uint64_t sub_1DF119E50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF119E98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DF116E28(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1DF119EB8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF119EF0()
{
  return sub_1DF1178C0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DF119F0C()
{
  uint64_t v1 = (int *)(type metadata accessor for BestOfBundleMagazineFeedGroupEmitter() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + v2;
  sub_1DEA53288();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v3 + v1[7];
  sub_1DEA91D10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v5 + *(int *)(type metadata accessor for BestOfBundleMagazineFeedGroupKnobs() + 40);
  sub_1DEA82C08(0, (unint64_t *)&qword_1EBAE96C0, (uint64_t (*)(uint64_t))type metadata accessor for MagazineFeedServiceConfig, sub_1DEA95ABC, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[8]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[9]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[10]);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF11A14C(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for BestOfBundleMagazineFeedGroupEmitter() - 8);
  return sub_1DF11792C(a1, v1 + 16, *(void *)(v1 + 88), v1 + ((*(unsigned __int8 *)(v3 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1DF11A1C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF11A240@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DF1181B8(a1, *(void *)(v2 + 16), v2 + 24, a2);
}

uint64_t sub_1DF11A260()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF11A298(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DF11A300()
{
  unint64_t result = qword_1EBAA76F0[0];
  if (!qword_1EBAA76F0[0])
  {
    sub_1DEA4E848(255, &qword_1EBAA7708, (uint64_t (*)(uint64_t))type metadata accessor for BestOfBundleMagazineFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBAA76F0);
  }
  return result;
}

uint64_t destroy for BestOfBundleMagazineFeedGroupBatch()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for BestOfBundleMagazineFeedGroupBatch()
{
  return &type metadata for BestOfBundleMagazineFeedGroupBatch;
}

id Assembly.__allocating_init(appConfigurationManager:)()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone(v0);
  objc_allocWithZone((Class)type metadata accessor for FeatureAvailabilityProvider());
  uint64_t v3 = (char *)v2;
  uint64_t v4 = (void *)swift_unknownObjectRetain();
  *(void *)&v3[OBJC_IVAR___TSFrameworkAssembly_featureAvailabilityProvider] = FeatureAvailabilityProvider.init(appConfigurationManager:)(v4);

  v7.receiver = v3;
  v7.super_class = v1;
  id v5 = objc_msgSendSuper2(&v7, sel_init);
  swift_unknownObjectRelease();
  return v5;
}

id Assembly.init(appConfigurationManager:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  objc_allocWithZone((Class)type metadata accessor for FeatureAvailabilityProvider());
  id v2 = v0;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  *(void *)&v2[OBJC_IVAR___TSFrameworkAssembly_featureAvailabilityProvider] = FeatureAvailabilityProvider.init(appConfigurationManager:)(v3);

  v6.receiver = v2;
  v6.super_class = ObjectType;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  swift_unknownObjectRelease();
  return v4;
}

unint64_t sub_1DF11A520()
{
  unint64_t result = qword_1EBAD2450;
  if (!qword_1EBAD2450)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAD2450);
  }
  return result;
}

id Assembly.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void Assembly.init()()
{
}

id Assembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Assembly()
{
  return self;
}

uint64_t method lookup function for Assembly(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Assembly);
}

uint64_t dispatch thunk of Assembly.__allocating_init(appConfigurationManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1DF11A6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v63 = a8;
  uint64_t v70 = a7;
  uint64_t v53 = a6;
  uint64_t v68 = a5;
  uint64_t v66 = a4;
  uint64_t v60 = a1;
  uint64_t v59 = a10;
  uint64_t v58 = a9;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v64 = *(void *)(v65 + 64);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v61 = (uint64_t)&v50 - v12;
  uint64_t v56 = sub_1DFDF8C20();
  uint64_t v52 = *(void *)(v56 - 8);
  uint64_t v57 = *(void *)(v52 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v56);
  unint64_t v55 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v54 = (char *)&v50 - v15;
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8], v10);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v51 = (char *)&v50 - v17;
  uint64_t v69 = sub_1DFDFAFE0();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v73 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1DFDFCAB0();
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v71 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBAEAFB0, MEMORY[0x1E4F81610], MEMORY[0x1E4FBBE00]);
  uint64_t v21 = sub_1DFDFC900();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  long long v50 = xmmword_1DFE0B250;
  *(_OWORD *)(v24 + 16) = xmmword_1DFE0B250;
  unint64_t v25 = v24 + v23;
  swift_bridgeObjectRetain_n();
  sub_1DFDFB0D0();
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v25, *MEMORY[0x1E4F815D0], v21);
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1DF11BA44(MEMORY[0x1E4FBC860]);
  sub_1DF11BB5C(v26);
  sub_1DF11BC90(v26);
  uint64_t v27 = v71;
  sub_1DFDFCAA0();
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], v20);
  uint64_t v28 = v72;
  unint64_t v29 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v50;
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 16))(v30 + v29, v27, v74);
  uint64_t v81 = v30;
  uint64_t v31 = swift_bridgeObjectRetain();
  sub_1DF3DD84C(v31);
  uint64_t v32 = sub_1DFDF66A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v51, 1, 1, v32);
  sub_1DFC83088(v26);
  sub_1DFC83088(v26);
  sub_1DFC831BC(v26);
  sub_1DFC831D4(v26);
  sub_1DFC83308(v26);
  sub_1DFC83320(v26);
  uint64_t v33 = v73;
  sub_1DFDFAFD0();
  uint64_t v75 = v58;
  uint64_t v76 = v59;
  uint64_t v77 = v62;
  uint64_t v78 = v60;
  uint64_t v79 = v33;
  uint64_t v80 = v63;
  sub_1DFDFB620();
  sub_1DFDEE090();
  uint64_t v34 = v52;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
  uint64_t v36 = v54;
  uint64_t v37 = v56;
  v35(v54, v66, v56);
  uint64_t v38 = v55;
  v35(v55, v68, v37);
  uint64_t v39 = v61;
  sub_1DEEA96FC(v70, v61);
  uint64_t v40 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v41 = (v40 + 16) & ~v40;
  uint64_t v42 = (v57 + v40 + v41) & ~v40;
  unint64_t v43 = (v57 + *(unsigned __int8 *)(v65 + 80) + v42) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v44 + v41;
  uint64_t v46 = *(void (**)(uint64_t, char *, uint64_t))(v34 + 32);
  v46(v45, v36, v37);
  v46(v44 + v42, v38, v37);
  sub_1DF11C0BC(v39, v44 + v43);
  uint64_t v47 = (void *)sub_1DFDEDCE0();
  sub_1DFDF7010();
  uint64_t v48 = sub_1DFDEDE00();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v74);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v73, v69);
  return v48;
}

uint64_t sub_1DF11AEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 96) = v17;
  *(void *)(v9 + 104) = v8;
  *(_OWORD *)(v9 + 80) = v16;
  *(void *)(v9 + 64) = a7;
  *(void *)(v9 + 72) = a8;
  *(void *)(v9 + 48) = a5;
  *(void *)(v9 + 56) = a6;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  *(void *)(v9 + 112) = swift_task_alloc();
  uint64_t v11 = sub_1DFDF8C20();
  *(void *)(v9 + 120) = v11;
  *(void *)(v9 + 128) = *(void *)(v11 - 8);
  *(void *)(v9 + 136) = swift_task_alloc();
  *(void *)(v9 + 144) = swift_task_alloc();
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8], v10);
  *(void *)(v9 + 152) = swift_task_alloc();
  uint64_t v12 = sub_1DFDFAFE0();
  *(void *)(v9 + 160) = v12;
  *(void *)(v9 + 168) = *(void *)(v12 - 8);
  *(void *)(v9 + 176) = swift_task_alloc();
  uint64_t v13 = sub_1DFDFCAB0();
  *(void *)(v9 + 184) = v13;
  *(void *)(v9 + 192) = *(void *)(v13 - 8);
  *(void *)(v9 + 200) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF11B100, 0, 0);
}

uint64_t sub_1DF11B100()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v21 = v0[23];
  uint64_t v22 = v0[19];
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBAEAFB0, MEMORY[0x1E4F81610], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = sub_1DFDFC900();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DFE0B250;
  unint64_t v7 = v6 + v5;
  swift_bridgeObjectRetain_n();
  sub_1DFDFB0D0();
  (*(void (**)(unint64_t, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4F815D0], v3);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  sub_1DF11BA44(MEMORY[0x1E4FBC860]);
  sub_1DF11BB5C(v8);
  sub_1DF11BC90(v8);
  sub_1DFDFCAA0();
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], v20);
  unint64_t v9 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 16))(v10 + v9, v2, v21);
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_1DF3DD84C(v11);
  uint64_t v12 = sub_1DFDF66A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v22, 1, 1, v12);
  sub_1DFC83088(v8);
  sub_1DFC83088(v8);
  sub_1DFC831BC(v8);
  sub_1DFC831D4(v8);
  sub_1DFC83308(v8);
  sub_1DFC83320(v8);
  sub_1DFDFAFD0();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[26] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1DF11B488;
  uint64_t v14 = v0[22];
  uint64_t v15 = v0[12];
  uint64_t v16 = v0[10];
  uint64_t v17 = v0[11];
  uint64_t v18 = v0[3];
  return MEMORY[0x1F4136D58](v18, v14, v16, v17, v15);
}

uint64_t sub_1DF11B488(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v5 = sub_1DF11B758;
  }
  else
  {
    *(void *)(v4 + 224) = a1;
    unint64_t v5 = sub_1DF11B5B0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DF11B5B0()
{
  uint64_t v1 = v0[24];
  uint64_t v13 = v0[23];
  uint64_t v14 = v0[25];
  uint64_t v2 = v0[21];
  uint64_t v11 = v0[20];
  uint64_t v12 = v0[22];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[7];
  uint64_t v8 = *(void (**)(void))(v0[16] + 16);
  v8();
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v3, v7, v5);
  sub_1DEEA96FC(v6, v4);
  sub_1DFDF6F80();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1DF11B758()
{
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[23];
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1DF11B840@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v17[0] = a3;
  v17[1] = a4;
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = sub_1DFDF8C20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14((char *)v17 - v15, a1, v9);
  v14(v13, a2, v9);
  sub_1DEEA96FC(v17[0], (uint64_t)v8);
  swift_retain();
  return sub_1DFDF6F80();
}

unint64_t sub_1DF11BA44(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1DF11C3A0();
  uint64_t v2 = (void *)sub_1DFDFFC40();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DFA60748(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DF11BB5C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1DF11C33C(0, &qword_1EBABB190, (void (*)(uint64_t))sub_1DEA36B08);
  uint64_t v2 = (void *)sub_1DFDFFC40();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DFA60748(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DF11BC90(uint64_t a1)
{
  sub_1DF11C270();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1DF11C33C(0, &qword_1EAC28910, MEMORY[0x1E4F81800]);
  uint64_t v7 = sub_1DFDFFC40();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1DF11C2D8(v13, (uint64_t)v6);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1DFA60748(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_1DFDFCF20();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DF11BE9C()
{
  return sub_1DFDFB110();
}

uint64_t sub_1DF11BECC()
{
  uint64_t v1 = sub_1DFDF8C20();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v5 + v3 + v4) & ~v3;
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  unint64_t v8 = (v6 + v5 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v6, v1);
  uint64_t v11 = sub_1DFDF7CB0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11)) {
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  return swift_deallocObject();
}

uint64_t sub_1DF11C0BC(uint64_t a1, uint64_t a2)
{
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF11C150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1DFDF8C20() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = (v6 + v4 + v5) & ~v4;
  sub_1DEA4E8AC(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  return sub_1DF11B840(v1 + v5, v1 + v7, v1+ ((v7 + v6 + *(unsigned __int8 *)(*(void *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80)), a1);
}

void sub_1DF11C270()
{
  if (!qword_1EBAEA148)
  {
    sub_1DFDFCF20();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAEA148);
    }
  }
}

uint64_t sub_1DF11C2D8(uint64_t a1, uint64_t a2)
{
  sub_1DF11C270();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DF11C33C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFFC50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1DF11C3A0()
{
  if (!qword_1EBAEA890)
  {
    sub_1DEA4E8AC(255, (unint64_t *)&unk_1EBAEA2F0, MEMORY[0x1E4F808A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA890);
    }
  }
}

uint64_t sub_1DF11C438(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD00000000000002ELL, 0x80000001DFEE27B0, &qword_1EAC28920);
}

uint64_t static Settings.Modules.MagazineFeed.isParallaxEnabled.getter()
{
  return sub_1DEB702E0(qword_1EAC1CE20);
}

uint64_t sub_1DF11C484()
{
  uint64_t v0 = sub_1DFDE8010();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8000();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDE7600();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1DFDE7480();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  sub_1DE922D00();
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EBAA6E88 = result;
  return result;
}

uint64_t static Settings.Modules.MagazineFeed.configurationDate.getter()
{
  return sub_1DEB702E0(&qword_1EBABE3D8);
}

uint64_t sub_1DF11C6AC()
{
  uint64_t v0 = sub_1DFDE8010();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8000();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB400]);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  v8[0] = 0xD000000000000038;
  v8[1] = 0x80000001DFEE2730;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28928 = result;
  return result;
}

uint64_t static Settings.Modules.MagazineFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE30);
}

uint64_t sub_1DF11C8BC(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.MagazineFeed.ConfigOverrides, 0xD000000000000034, 0x80000001DFEE26B0, &qword_1EBAA6E80);
}

uint64_t static Settings.Modules.MagazineFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EBABD948);
}

uint64_t sub_1DF11C918()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9834AC(0, (unint64_t *)&unk_1EBAA7008);
  _OWORD v5[2] = 0;
  v5[3] = 3;
  v5[1] = 0x7FFFFFFFFFFFFFFFLL;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  uint64_t result = sub_1DFDE80A0();
  qword_1EBAA6E90 = result;
  return result;
}

uint64_t static Settings.Modules.MagazineFeed.Sauce.groupDistance.getter()
{
  return sub_1DEB702E0(qword_1EBABD950);
}

uint64_t sub_1DF11CA78(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD00000000000002BLL, 0x80000001DFEE2650, &qword_1EBAC0CF8);
}

uint64_t static Settings.Modules.MagazineFeed.forceMaxGroups.getter()
{
  return sub_1DEB702E0(&qword_1EBAC0D08);
}

uint64_t sub_1DF11CAC4(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD00000000000002DLL, 0x80000001DFEE2620, &qword_1EAC28930);
}

uint64_t static Settings.Modules.MagazineFeed.forceForYouFeed.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE40);
}

uint64_t sub_1DF11CB10(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD000000000000034, 0x80000001DFEE25E0, &qword_1EBAD02F8);
}

uint64_t static Settings.Modules.MagazineFeed.usePillViewSectionBar.getter()
{
  return sub_1DEB702E0(&qword_1EBAD0308);
}

uint64_t sub_1DF11CB5C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DFDFDD20();
  uint64_t v8 = sub_1DFDFDD20();
  uint64_t v10 = v9;
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v13[0] = v8;
  v13[1] = v10;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28938 = result;
  return result;
}

uint64_t static Settings.Modules.TodayFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE50);
}

uint64_t sub_1DF11CD9C()
{
  uint64_t v0 = sub_1DFDE8010();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1DFDE8000();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Settings.Modules.TodayFeed.ConfigOverrides(0);
  sub_1DFDFDD20();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  *uint64_t v3 = sub_1DFDFDD20();
  v3[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB408], v0);
  uint64_t result = sub_1DFDE7EE0();
  qword_1EBAA6F18 = result;
  return result;
}

uint64_t static Settings.Modules.TodayFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EBABE3E8);
}

uint64_t static Settings.Modules.TodayFeed.autoRefreshStrategy.getter()
{
  return sub_1DEB702E0(&qword_1EBABD990);
}

uint64_t sub_1DF11CFB8(uint64_t a1)
{
  return sub_1DE959EEC(a1, 0xD000000000000029, 0x80000001DFEE2580, &qword_1EBAA6F20);
}

uint64_t static Settings.Modules.TodayFeed.lastRefreshDate.getter()
{
  return sub_1DEB702E0(&qword_1EBABD978);
}

uint64_t static Settings.Modules.TodayFeed.lastOfflineRefreshDate.getter()
{
  return sub_1DEB702E0(&qword_1EBAD0350);
}

uint64_t sub_1DF11D024()
{
  uint64_t v0 = sub_1DFDE8010();
  uint64_t v19 = *(void *)(v0 - 8);
  uint64_t v20 = v0;
  MEMORY[0x1F4188790](v0);
  char v18 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1DFDE8000();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = v5;
  uint64_t v6 = sub_1DFDF9070();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v17 - v11;
  sub_1DF125068();
  uint64_t v17[2] = v13;
  uint64_t v14 = *MEMORY[0x1E4F7FE58];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v15(v12, v14, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB400], v2);
  sub_1DE95CC64(0, (unint64_t *)&unk_1EBABB3A0, (uint64_t (*)(uint64_t))sub_1DF1250FC, MEMORY[0x1E4FBBE00]);
  sub_1DF1250FC(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0FB10;
  v15(v10, v14, v6);
  sub_1DFDE8020();
  v15(v10, *MEMORY[0x1E4F7FE50], v6);
  sub_1DFDE8020();
  v15(v10, *MEMORY[0x1E4F7FE40], v6);
  sub_1DFDE8020();
  v15(v10, *MEMORY[0x1E4F7FE60], v6);
  sub_1DFDE8020();
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v18, *MEMORY[0x1E4FAB410], v20);
  sub_1DE922650(&qword_1EBABA250, MEMORY[0x1E4F7FE68]);
  uint64_t result = sub_1DFDE8080();
  qword_1EBAA6F28 = result;
  return result;
}

uint64_t static Settings.Modules.TodayFeed.refreshStrategy.getter()
{
  return sub_1DEB702E0(&qword_1EBABD988);
}

uint64_t sub_1DF11D4F0(uint64_t a1)
{
  return sub_1DF121D88(a1, 0xD000000000000030, 0x80000001DFEE24D0, &qword_1EBAA6F38);
}

uint64_t static Settings.Modules.TodayFeed.minimumRefreshDuration.getter()
{
  return sub_1DEB702E0(&qword_1EBABD9A0);
}

uint64_t static Settings.Modules.TodayFeed.alwaysLoadFromNetwork.getter()
{
  return sub_1DEB702E0(&qword_1EBABE3F8);
}

uint64_t sub_1DF11D55C(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD000000000000035, 0x80000001DFEE2450, &qword_1EBAD2010);
}

uint64_t static Settings.Modules.TodayFeed.replaceTrendingWithForYou.getter()
{
  return sub_1DEB702E0(&qword_1EBAD2020);
}

uint64_t sub_1DF11D5A8(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD000000000000032, 0x80000001DFEE2410, &qword_1EBAD1FF8);
}

uint64_t static Settings.Modules.TodayFeed.omitGlobalESLFromToday.getter()
{
  return sub_1DEB702E0(&qword_1EBAD2008);
}

uint64_t sub_1DF11D5F4(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD00000000000002FLL, 0x80000001DFEE23E0, &qword_1EBAD1FE0);
}

uint64_t static Settings.Modules.TodayFeed.omitTagESLFromToday.getter()
{
  return sub_1DEB702E0(&qword_1EBAD1FF0);
}

uint64_t sub_1DF11D640()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000015;
  v10[1] = 0x80000001DFEE23C0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28940 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.host.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE58);
}

uint64_t sub_1DF11D860()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000023;
  v10[1] = 0x80000001DFEE2360;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28948 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.defaultPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE60);
}

uint64_t sub_1DF11DA80()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000002ELL;
  v10[1] = 0x80000001DFEE2300;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28950 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.localNewsPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE68);
}

uint64_t sub_1DF11DCA0()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000036;
  v10[1] = 0x80000001DFEE2280;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28958 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.localNewsSectionPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE70);
}

uint64_t sub_1DF11DEC4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000002DLL;
  v10[1] = 0x80000001DFEE2210;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28960 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.newspaperPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE78);
}

uint64_t sub_1DF11E0E4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000035;
  v10[1] = 0x80000001DFEE2190;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28968 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.newspaperSectionPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE80);
}

uint64_t sub_1DF11E304()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000002DLL;
  v10[1] = 0x80000001DFEE2120;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28970 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.mySportsPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE88);
}

uint64_t sub_1DF11E524()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000036;
  v10[1] = 0x80000001DFEE20A0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28978 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.mySportsSchedulePath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE90);
}

uint64_t sub_1DF11E748()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000034;
  v10[1] = 0x80000001DFEE2020;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28980 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.mySportsScoresPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CE98);
}

uint64_t sub_1DF11E96C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000038;
  v10[1] = 0x80000001DFEE1FA0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28988 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.mySportsHighlightsPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEA0);
}

uint64_t sub_1DF11EB8C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000029;
  v10[1] = 0x80000001DFEE1F20;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28990 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEA8);
}

uint64_t sub_1DF11EDAC()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000032;
  v10[1] = 0x80000001DFEE1EA0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28998 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportSchedulePath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEB0);
}

uint64_t sub_1DF11EFD0()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000030;
  v10[1] = 0x80000001DFEE1E20;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289A0 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportScoresPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEB8);
}

uint64_t sub_1DF11F1F4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000034;
  v10[1] = 0x80000001DFEE1DA0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289A8 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportHighlightsPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEC0);
}

uint64_t sub_1DF11F418()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000002FLL;
  v10[1] = 0x80000001DFEE1D30;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289B0 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportEventPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEC8);
}

uint64_t sub_1DF11F638()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000003ALL;
  v10[1] = 0x80000001DFEE1CB0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289B8 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportEventHighlightsPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CED0);
}

uint64_t sub_1DF11F858()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000030;
  v10[1] = 0x80000001DFEE1C20;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289C0 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportLeaguePath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CED8);
}

uint64_t sub_1DF11FA7C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000039;
  v10[1] = 0x80000001DFEE1BA0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289C8 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportLeagueSchedulePath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEE0);
}

uint64_t sub_1DF11FC9C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000037;
  v10[1] = 0x80000001DFEE1B10;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289D0 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportLeagueScoresPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEE8);
}

uint64_t sub_1DF11FEBC()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000003BLL;
  v10[1] = 0x80000001DFEE1A80;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289D8 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportLeagueHighlightsPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEF0);
}

uint64_t sub_1DF1200DC()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000003ALL;
  v10[1] = 0x80000001DFEE19F0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289E0 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportsStandingsPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CEF8);
}

uint64_t sub_1DF1202FC()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000031;
  v10[1] = 0x80000001DFEE1960;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289E8 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportsBracketPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF00);
}

uint64_t sub_1DF12051C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000002ELL;
  v10[1] = 0x80000001DFEE18F0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289F0 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportTeamPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF08);
}

uint64_t sub_1DF12073C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000037;
  v10[1] = 0x80000001DFEE1870;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC289F8 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportTeamSchedulePath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF10);
}

uint64_t sub_1DF12095C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000035;
  v10[1] = 0x80000001DFEE17E0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A00 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportTeamScoresPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF18);
}

uint64_t sub_1DF120B7C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000039;
  v10[1] = 0x80000001DFEE1760;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A08 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.sportTeamHighlightsPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF20);
}

uint64_t sub_1DF120D9C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000033;
  v10[1] = 0x80000001DFEE16D0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A10 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.puzzleHubPath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF28);
}

uint64_t sub_1DF120FBC()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000034;
  v10[1] = 0x80000001DFEE1650;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A18 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.puzzleTypePath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF30);
}

uint64_t sub_1DF1211DC()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000003CLL;
  v10[1] = 0x80000001DFEE15D0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A20 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.ConfigOverrides.puzzleFullArchivePath.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF38);
}

uint64_t sub_1DF121404(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.TagFeed.ConfigOverrides, 0xD00000000000002FLL, 0x80000001DFEE1550, &qword_1EBAD1F50);
}

uint64_t static Settings.Modules.TagFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EBAD1F60);
}

uint64_t sub_1DF121464()
{
  uint64_t v0 = sub_1DFDE8010();
  uint64_t v19 = *(void *)(v0 - 8);
  uint64_t v20 = v0;
  MEMORY[0x1F4188790](v0);
  char v18 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1DFDE8000();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = v5;
  uint64_t v6 = sub_1DFDF8B50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v17 - v11;
  sub_1DE92B7C4();
  uint64_t v17[2] = v13;
  uint64_t v14 = *MEMORY[0x1E4F7FB78];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v15(v12, v14, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB400], v2);
  sub_1DE95CC64(0, &qword_1EBABB398, (uint64_t (*)(uint64_t))sub_1DEAE9D74, MEMORY[0x1E4FBBE00]);
  sub_1DEAE9D74(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0CC10;
  v15(v10, v14, v6);
  sub_1DFDE8020();
  v15(v10, *MEMORY[0x1E4F7FB80], v6);
  sub_1DFDE8020();
  v15(v10, *MEMORY[0x1E4F7FB70], v6);
  sub_1DFDE8020();
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v18, *MEMORY[0x1E4FAB410], v20);
  sub_1DE922650(&qword_1EBABA1E8, MEMORY[0x1E4F7FB88]);
  uint64_t result = sub_1DFDE8080();
  qword_1EBAD1F80 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.autoRefreshStrategy.getter()
{
  return sub_1DEB702E0(&qword_1EBACBD98);
}

uint64_t sub_1DF1218E0()
{
  uint64_t v0 = sub_1DFDE8010();
  uint64_t v19 = *(void *)(v0 - 8);
  uint64_t v20 = v0;
  MEMORY[0x1F4188790](v0);
  char v18 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1DFDE8000();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = v5;
  uint64_t v6 = sub_1DFDF9070();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v17 - v11;
  sub_1DF125068();
  uint64_t v17[2] = v13;
  uint64_t v14 = *MEMORY[0x1E4F7FE58];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v15(v12, v14, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB400], v2);
  sub_1DE95CC64(0, (unint64_t *)&unk_1EBABB3A0, (uint64_t (*)(uint64_t))sub_1DF1250FC, MEMORY[0x1E4FBBE00]);
  sub_1DF1250FC(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0CC10;
  v15(v10, v14, v6);
  sub_1DFDE8020();
  v15(v10, *MEMORY[0x1E4F7FE50], v6);
  sub_1DFDE8020();
  v15(v10, *MEMORY[0x1E4F7FE48], v6);
  sub_1DFDE8020();
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v18, *MEMORY[0x1E4FAB410], v20);
  sub_1DE922650(&qword_1EBABA250, MEMORY[0x1E4F7FE68]);
  uint64_t result = sub_1DFDE8080();
  qword_1EBAD0310 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.refreshStrategy.getter()
{
  return sub_1DEB702E0(&qword_1EBAD0320);
}

uint64_t sub_1DF121D64(uint64_t a1)
{
  return sub_1DF121D88(a1, 0xD00000000000002ELL, 0x80000001DFEE1490, &qword_1EBAD0328);
}

uint64_t sub_1DF121D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1DFDE8010();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDE8000();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, void))(v11 + 104))((char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB400]);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB410], v5);
  v13[1] = 0x3FF0000000000000;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA7000);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  *a4 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.minimumRefreshDuration.getter()
{
  return sub_1DEB702E0(&qword_1EBAD0338);
}

uint64_t sub_1DF121F80()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410]);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EBAA6E98 = result;
  return result;
}

uint64_t static Settings.Modules.TagFeed.mostRecentFeedIdentifier.getter()
{
  return sub_1DEB702E0(&qword_1EBABD960);
}

uint64_t sub_1DF12216C(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD000000000000038, 0x80000001DFEE1410, &qword_1EAC28A28);
}

uint64_t static Settings.Modules.TagFeed.ignorePromotedArticleExpiration.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF48);
}

uint64_t sub_1DF1221B8(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD00000000000002ALL, 0x80000001DFEE13E0, &qword_1EBAD1F88);
}

uint64_t static Settings.Modules.TagFeed.useDateRangeInfiniteScroll.getter()
{
  return sub_1DEB702E0(&qword_1EBAD1F90);
}

uint64_t sub_1DF122204(uint64_t a1)
{
  return sub_1DE941AD8(a1, 1, 0xD000000000000028, 0x80000001DFEE13B0, &qword_1EBAD1F68);
}

uint64_t static Settings.Modules.TagFeed.enablePrefetching.getter()
{
  return sub_1DEB702E0(&qword_1EBAD1F78);
}

uint64_t sub_1DF122250()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000003BLL;
  v10[1] = 0x80000001DFEE1370;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A30 = result;
  return result;
}

uint64_t static Settings.Modules.SharedWithYouFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF50);
}

uint64_t sub_1DF122480(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.SharedWithYouFeed.ConfigOverrides, 0xD000000000000032, 0x80000001DFEE12F0, &qword_1EAC28A38);
}

uint64_t static Settings.Modules.SharedWithYouFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF58);
}

uint64_t sub_1DF1224DC()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000003ALL;
  v10[1] = 0x80000001DFEE12B0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A40 = result;
  return result;
}

uint64_t static Settings.Modules.SavedFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF60);
}

uint64_t sub_1DF12270C(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.SavedFeed.ConfigOverrides, 0xD000000000000031, 0x80000001DFEE1240, &qword_1EBACBDA0);
}

uint64_t static Settings.Modules.SavedFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EBAD1FD8);
}

uint64_t sub_1DF122768()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000003CLL;
  v10[1] = 0x80000001DFEE1200;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A48 = result;
  return result;
}

uint64_t static Settings.Modules.HistoryFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF70);
}

uint64_t sub_1DF122998(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.HistoryFeed.ConfigOverrides, 0xD000000000000033, 0x80000001DFEE1190, &qword_1EBAEB9B8);
}

uint64_t static Settings.Modules.HistoryFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EBAEB9C8);
}

uint64_t sub_1DF1229F4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000036;
  v10[1] = 0x80000001DFEE1150;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A50 = result;
  return result;
}

uint64_t static Settings.Modules.SearchFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF80);
}

uint64_t Settings.Modules.SearchFeed.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C7NewsUI2E7ModulesV10SearchFeedV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF122C58(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.SearchFeed.ConfigOverrides, 0xD000000000000032, 0x80000001DFEE10E0, &qword_1EBAEB968);
}

uint64_t static Settings.Modules.SearchFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EBAEB978);
}

uint64_t sub_1DF122CB4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000040;
  v10[1] = 0x80000001DFEE1090;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A58 = result;
  return result;
}

uint64_t static Settings.Modules.SearchMoreFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF90);
}

uint64_t sub_1DF122EE4(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.SearchMoreFeed.ConfigOverrides, 0xD000000000000037, 0x80000001DFEE1010, &qword_1EAC28A60);
}

uint64_t static Settings.Modules.SearchMoreFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CF98);
}

uint64_t sub_1DF122F40()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000003ALL;
  v10[1] = 0x80000001DFEE0FD0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A68 = result;
  return result;
}

uint64_t static Settings.Modules.AudioFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CFA0);
}

uint64_t static Settings.Modules.AudioFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EBABD968);
}

uint64_t sub_1DF123190(uint64_t a1)
{
  return sub_1DF123208(a1, 2, 0xD00000000000002CLL, 0x80000001DFEE0900, &qword_1EACDF930);
}

uint64_t sub_1DF1231B8(uint64_t a1)
{
  return sub_1DF123208(a1, 3, 0xD000000000000032, 0x80000001DFEE0930, &qword_1EACDF938);
}

uint64_t sub_1DF1231E0(uint64_t a1)
{
  return sub_1DF123208(a1, 1, 0xD000000000000028, 0x80000001DFEE08D0, &qword_1EACDF940);
}

uint64_t sub_1DF123208(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1DFDE8000();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1DFDE8010();
  MEMORY[0x1F4188790](v11);
  (*(void (**)(unsigned char *, void))(v13 + 104))(&v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410]);
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB3F8], v7);
  v15[15] = a2;
  sub_1DF124FB8();
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  *a5 = result;
  return result;
}

uint64_t sub_1DF1233C4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000042;
  v10[1] = 0x80000001DFEE0F10;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A70 = result;
  return result;
}

uint64_t static Settings.Modules.AudioHistoryFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CFC8);
}

uint64_t sub_1DF1235F4(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.AudioHistoryFeed.ConfigOverrides, 0xD000000000000039, 0x80000001DFEE0E90, &qword_1EBAD1EC0);
}

uint64_t static Settings.Modules.AudioHistoryFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EBAD1ED0);
}

uint64_t sub_1DF123650()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000043;
  v10[1] = 0x80000001DFEE0E40;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28A78 = result;
  return result;
}

uint64_t static Settings.Modules.AudioPlaylistFeed.ConfigOverrides.url.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CFD8);
}

uint64_t sub_1DF123880(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.AudioPlaylistFeed.ConfigOverrides, 0xD00000000000003ALL, 0x80000001DFEE0DC0, &qword_1EBAD1F10);
}

uint64_t static Settings.Modules.AudioPlaylistFeed.configOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EBACBD90);
}

uint64_t sub_1DF1238DC(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD000000000000037, 0x80000001DFEE0D80, &qword_1EAC28A80);
}

uint64_t static Settings.Modules.EmailNewsletterSignup.StatusOverrides.currentlySubscribed.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CFE8);
}

uint64_t sub_1DF123928(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD000000000000032, 0x80000001DFEE0D40, &qword_1EAC28A88);
}

uint64_t static Settings.Modules.EmailNewsletterSignup.StatusOverrides.currentlyHasIssues.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CFF0);
}

uint64_t sub_1DF123974(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD00000000000003CLL, 0x80000001DFEE0D00, &qword_1EAC28A90);
}

uint64_t static Settings.Modules.EmailNewsletterSignup.StatusOverrides.currentlyHasPersonalization.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CFF8);
}

uint64_t sub_1DF1239C0(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD000000000000039, 0x80000001DFEE0CC0, &qword_1EAC28A98);
}

uint64_t static Settings.Modules.EmailNewsletterSignup.StatusOverrides.newsletterAvailable.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D000);
}

uint64_t sub_1DF123A0C(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD000000000000034, 0x80000001DFEE0C80, &qword_1EAC28AA0);
}

uint64_t static Settings.Modules.EmailNewsletterSignup.StatusOverrides.issuesAvailable.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D008);
}

uint64_t sub_1DF123A58(uint64_t a1)
{
  return sub_1DE941AD8(a1, 0, 0xD00000000000003ELL, 0x80000001DFEE0C40, &qword_1EAC28AA8);
}

uint64_t static Settings.Modules.EmailNewsletterSignup.StatusOverrides.personalizationAvailable.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D010);
}

uint64_t sub_1DF123AAC()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - v5;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))((char *)&v9 - v5, *MEMORY[0x1E4FAB400], v0);
  type metadata accessor for Settings.Modules.EmailNewsletterSignup.StatusOverrides(0);
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v7 = sub_1DFDE7EF0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  qword_1EBAC0D48 = v7;
  return result;
}

uint64_t static Settings.Modules.EmailNewsletterSignup.overrides.getter()
{
  return sub_1DEB702E0(&qword_1EBAC0D58);
}

uint64_t sub_1DF123C44()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000018;
  v10[1] = 0x80000001DFEE0BE0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28AB0 = result;
  return result;
}

uint64_t static Settings.Modules.OfflineStatusBanner.OfflineModeUnavailableMessageOverrides.offlineModeUnavailableMessage.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D020);
}

uint64_t sub_1DF123E6C()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000002BLL;
  v10[1] = 0x80000001DFEE0B60;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28AB8 = result;
  return result;
}

uint64_t static Settings.Modules.OfflineStatusBanner.UpsellMessageOverrides.upsellMessage.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D028);
}

uint64_t sub_1DF124094()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000028;
  v10[1] = 0x80000001DFEE0AF0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28AC0 = result;
  return result;
}

uint64_t static Settings.Modules.OfflineStatusBanner.OfflineModeButtonTitleOverrides.enterOfflineModeButtonTitle.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D030);
}

uint64_t sub_1DF1242B4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000015;
  v10[1] = 0x80000001DFEC81C0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF0);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC28AC8 = result;
  return result;
}

uint64_t static Settings.Modules.OfflineStatusBanner.OfflineModeButtonTitleOverrides.exitOfflineModeButtonTitle.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D038);
}

uint64_t _s11TeaSettings0B0C7NewsUI2E7ModulesV12MagazineFeedV15ConfigOverridesC3key12defaultValue6accessAJSSSg_SbAA6AccessOtcfc_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1DFDE8000();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5);
  uint64_t v8 = sub_1DFDE7EF0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v8;
}

uint64_t sub_1DF1245F0(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.OfflineStatusBanner.OfflineModeUnavailableMessageOverrides, 0xD00000000000004DLL, 0x80000001DFEE0A00, &qword_1EAC28AD0);
}

uint64_t static Settings.Modules.OfflineStatusBanner.offlineModeUnavailableMessageOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D040);
}

uint64_t sub_1DF12464C(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.OfflineStatusBanner.UpsellMessageOverrides, 0xD00000000000003BLL, 0x80000001DFEE09C0, &qword_1EAC28AD8);
}

uint64_t static Settings.Modules.OfflineStatusBanner.upsellMessageOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D048);
}

uint64_t sub_1DF1246A8(uint64_t a1)
{
  return sub_1DE9478A4(a1, (void (*)(void))type metadata accessor for Settings.Modules.OfflineStatusBanner.OfflineModeButtonTitleOverrides, 0xD000000000000046, 0x80000001DFEE0970, &qword_1EAC28AE0);
}

uint64_t static Settings.Modules.OfflineStatusBanner.offlineModeButtonTitleOverrides.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D050);
}

uint64_t _s11TeaSettings0B0C7NewsUI2E7ModulesV7TagFeedV15lastRefreshDate14feedDescriptorAA7SettingCy10Foundation0J0VGSo06FCFeedL0C_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1DFDE8000();
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v38 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v39 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE7600();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1DEA6A0F8(0, (unint64_t *)&qword_1EBABB6F0, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B750;
  id v8 = objc_msgSend(objc_msgSend(a1, sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1DFDFDD20();
  uint64_t v11 = v10;

  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = v11;
  id v41 = objc_msgSend(a1, sel_feedConfiguration);
  unint64_t v12 = sub_1DEE58B40();
  *(void *)(v7 + 48) = sub_1DFDFF770();
  *(void *)(v7 + 56) = v13;
  id v14 = objc_msgSend(a1, sel_alternativeFeedDescriptor);
  if (!v14) {
    goto LABEL_9;
  }
  uint64_t v15 = v14;
  id v16 = objc_msgSend(objc_msgSend(v14, sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v17 = sub_1DFDFDD20();
  uint64_t v19 = v18;

  id v41 = objc_msgSend(v15, sel_feedConfiguration);
  uint64_t v20 = &v41;
  uint64_t v21 = sub_1DFDFF770();
  int64_t v23 = *(void *)(v7 + 16);
  int64_t v24 = v23 + 2;
  if (__OFADD__(v23, 2))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v12 = v21;
  uint64_t v20 = v22;
  if (v24 > *(void *)(v7 + 24) >> 1)
  {
LABEL_11:
    if (v23 <= v24) {
      int64_t v32 = v23 + 2;
    }
    else {
      int64_t v32 = v23;
    }
    uint64_t v7 = (uint64_t)sub_1DEA8C6EC((void *)1, v32, 1, (void *)v7);
  }
  unint64_t v25 = *(void *)(v7 + 16);
  unint64_t v26 = *(void *)(v7 + 24);
  unint64_t v27 = v25 + 1;
  swift_bridgeObjectRetain();
  if (v25 >= v26 >> 1) {
    uint64_t v7 = (uint64_t)sub_1DEA8C6EC((void *)(v26 > 1), v25 + 1, 1, (void *)v7);
  }
  *(void *)(v7 + 16) = v27;
  uint64_t v28 = v7 + 16 * v25;
  *(void *)(v28 + 32) = v17;
  *(void *)(v28 + 40) = v19;
  unint64_t v29 = *(void *)(v7 + 24);
  swift_bridgeObjectRetain();
  if (v27 >= v29 >> 1) {
    uint64_t v7 = (uint64_t)sub_1DEA8C6EC((void *)(v29 > 1), v25 + 2, 1, (void *)v7);
  }
  *(void *)(v7 + 16) = v25 + 2;
  uint64_t v30 = v7 + 16 * v27;
  *(void *)(v30 + 32) = v12;
  *(void *)(v30 + 40) = v20;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  id v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  id v41 = (id)0xD000000000000028;
  unint64_t v42 = 0x80000001DFEE1520;
  uint64_t v40 = v7;
  sub_1DEA6A0F8(0, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB320]);
  sub_1DEBA4E98();
  sub_1DFDFDC10();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDE7480();
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v36, *MEMORY[0x1E4FAB410], v35);
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v39, *MEMORY[0x1E4FAB3F8], v38);
  sub_1DE922D00();
  swift_allocObject();
  return sub_1DFDE80C0();
}

ValueMetadata *type metadata accessor for Settings.Modules()
{
  return &type metadata for Settings.Modules;
}

ValueMetadata *type metadata accessor for Settings.Modules.MagazineFeed()
{
  return &type metadata for Settings.Modules.MagazineFeed;
}

uint64_t type metadata accessor for Settings.Modules.MagazineFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAA6E48);
}

uint64_t sub_1DF124C28()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124C34()
{
  return type metadata accessor for Settings.Modules.MagazineFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.MagazineFeed.Sauce()
{
  return &type metadata for Settings.Modules.MagazineFeed.Sauce;
}

ValueMetadata *type metadata accessor for Settings.Modules.TodayFeed()
{
  return &type metadata for Settings.Modules.TodayFeed;
}

uint64_t type metadata accessor for Settings.Modules.TodayFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAA6EE0);
}

uint64_t sub_1DF124C7C()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124C88()
{
  return type metadata accessor for Settings.Modules.TodayFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.TagFeed()
{
  return &type metadata for Settings.Modules.TagFeed;
}

uint64_t type metadata accessor for Settings.Modules.TagFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAD1F18);
}

uint64_t sub_1DF124CC0()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124CCC()
{
  return type metadata accessor for Settings.Modules.TagFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.SharedWithYouFeed()
{
  return &type metadata for Settings.Modules.SharedWithYouFeed;
}

uint64_t type metadata accessor for Settings.Modules.SharedWithYouFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC28AE8);
}

uint64_t sub_1DF124D04()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124D10()
{
  return type metadata accessor for Settings.Modules.SharedWithYouFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.SavedFeed()
{
  return &type metadata for Settings.Modules.SavedFeed;
}

uint64_t type metadata accessor for Settings.Modules.SavedFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAD1F98);
}

uint64_t sub_1DF124D48()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124D54()
{
  return type metadata accessor for Settings.Modules.SavedFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.HistoryFeed()
{
  return &type metadata for Settings.Modules.HistoryFeed;
}

uint64_t type metadata accessor for Settings.Modules.HistoryFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAEB980);
}

uint64_t sub_1DF124D8C()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124D98()
{
  return type metadata accessor for Settings.Modules.HistoryFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.SearchFeed()
{
  return &type metadata for Settings.Modules.SearchFeed;
}

uint64_t type metadata accessor for Settings.Modules.SearchFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAEB930);
}

uint64_t sub_1DF124DD0()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124DDC()
{
  return type metadata accessor for Settings.Modules.SearchFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.SearchMoreFeed()
{
  return &type metadata for Settings.Modules.SearchMoreFeed;
}

uint64_t type metadata accessor for Settings.Modules.SearchMoreFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC28AF8);
}

uint64_t sub_1DF124E14()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124E20()
{
  return type metadata accessor for Settings.Modules.SearchMoreFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.AudioFeed()
{
  return &type metadata for Settings.Modules.AudioFeed;
}

uint64_t sub_1DF124E38()
{
  return type metadata accessor for Settings.Modules.AudioFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.AudioHistoryFeed()
{
  return &type metadata for Settings.Modules.AudioHistoryFeed;
}

uint64_t type metadata accessor for Settings.Modules.AudioHistoryFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAD1E88);
}

uint64_t sub_1DF124E70()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124E7C()
{
  return type metadata accessor for Settings.Modules.AudioHistoryFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.AudioPlaylistFeed()
{
  return &type metadata for Settings.Modules.AudioPlaylistFeed;
}

uint64_t type metadata accessor for Settings.Modules.AudioPlaylistFeed.ConfigOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAD1ED8);
}

uint64_t sub_1DF124EB4()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124EC0()
{
  return type metadata accessor for Settings.Modules.AudioPlaylistFeed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.EmailNewsletterSignup()
{
  return &type metadata for Settings.Modules.EmailNewsletterSignup;
}

uint64_t type metadata accessor for Settings.Modules.EmailNewsletterSignup.StatusOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAC0D10);
}

uint64_t sub_1DF124EF8()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124F04()
{
  return type metadata accessor for Settings.Modules.EmailNewsletterSignup.StatusOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Modules.OfflineStatusBanner()
{
  return &type metadata for Settings.Modules.OfflineStatusBanner;
}

uint64_t type metadata accessor for Settings.Modules.OfflineStatusBanner.OfflineModeUnavailableMessageOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC28B08);
}

uint64_t sub_1DF124F3C()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124F48()
{
  return type metadata accessor for Settings.Modules.OfflineStatusBanner.OfflineModeUnavailableMessageOverrides(0);
}

uint64_t type metadata accessor for Settings.Modules.OfflineStatusBanner.UpsellMessageOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC28B18);
}

uint64_t sub_1DF124F70()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124F7C()
{
  return type metadata accessor for Settings.Modules.OfflineStatusBanner.UpsellMessageOverrides(0);
}

uint64_t type metadata accessor for Settings.Modules.OfflineStatusBanner.OfflineModeButtonTitleOverrides(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EAC28B28);
}

uint64_t sub_1DF124FA4()
{
  return sub_1DEAEA530();
}

uint64_t sub_1DF124FB0()
{
  return type metadata accessor for Settings.Modules.OfflineStatusBanner.OfflineModeButtonTitleOverrides(0);
}

void sub_1DF124FB8()
{
  if (!qword_1EAC28B38)
  {
    sub_1DF125014();
    unint64_t v0 = sub_1DFDE80B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC28B38);
    }
  }
}

unint64_t sub_1DF125014()
{
  unint64_t result = qword_1EAC28B40;
  if (!qword_1EAC28B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28B40);
  }
  return result;
}

void sub_1DF125068()
{
  if (!qword_1EBAA6FE0)
  {
    sub_1DFDF9070();
    sub_1DE922650(&qword_1EBABA258, MEMORY[0x1E4F7FE68]);
    unint64_t v0 = sub_1DFDE80B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA6FE0);
    }
  }
}

void sub_1DF1250FC(uint64_t a1)
{
}

uint64_t sub_1DF1251A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF1251B4);
}

uint64_t sub_1DF1251B4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 217)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x27) {
      return v4 - 38;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1DFDFAA20();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF12525C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF125270);
}

unsigned char *sub_1DF125270(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 217)
  {
    *unint64_t result = a2 + 38;
  }
  else
  {
    uint64_t v7 = sub_1DFDFAA20();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PuzzleListTagFeedGroupConfigData()
{
  uint64_t result = qword_1EBAE3680;
  if (!qword_1EBAE3680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF125360()
{
  uint64_t result = sub_1DFDFAA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF1253F8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12592C(0, &qword_1EAC28B48, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF1258D8();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v12 = v16;
    uint64_t v11 = v17;
    char v19 = 1;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *uint64_t v11 = 32;
    uint64_t v13 = type metadata accessor for PuzzleListTagFeedGroupConfigData();
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v11[*(int *)(v13 + 20)], v18, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF125660(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF12592C(0, &qword_1EAC28B58, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF1258D8();
  sub_1DFE001A0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1DEAF3AE0();
  sub_1DFDFFE80();
  if (!v2)
  {
    type metadata accessor for PuzzleListTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1DFDFAA20();
    sub_1DE9CB07C(&qword_1EBABA3B0);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF125830(uint64_t a1)
{
  unint64_t v2 = sub_1DF1258D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF12586C(uint64_t a1)
{
  unint64_t v2 = sub_1DF1258D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF1258A8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DF1253F8(a1, a2);
}

uint64_t sub_1DF1258C0(void *a1)
{
  return sub_1DF125660(a1);
}

unint64_t sub_1DF1258D8()
{
  unint64_t result = qword_1EAC28B50;
  if (!qword_1EAC28B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28B50);
  }
  return result;
}

void sub_1DF12592C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF1258D8();
    unint64_t v7 = a3(a1, &type metadata for PuzzleListTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PuzzleListTagFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF125A5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleListTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for PuzzleListTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF125A98()
{
  unint64_t result = qword_1EAC28B60;
  if (!qword_1EAC28B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28B60);
  }
  return result;
}

unint64_t sub_1DF125AF0()
{
  unint64_t result = qword_1EAC28B68;
  if (!qword_1EAC28B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28B68);
  }
  return result;
}

unint64_t sub_1DF125B48()
{
  unint64_t result = qword_1EAC28B70;
  if (!qword_1EAC28B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28B70);
  }
  return result;
}

unint64_t sub_1DF125B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v189 = a1;
  uint64_t v184 = a2;
  uint64_t v4 = type metadata accessor for CustomItemRouteModel();
  MEMORY[0x1F4188790](v4 - 8);
  v180 = &v150[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v171 = type metadata accessor for PuzzleModel();
  MEMORY[0x1F4188790](v171);
  v179 = &v150[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DE9361BC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  v177 = &v150[-v9];
  uint64_t v178 = sub_1DFDE9720();
  uint64_t v176 = *(void *)(v178 - 8);
  MEMORY[0x1F4188790](v178);
  v175 = &v150[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v174 = sub_1DFDE9FD0();
  uint64_t v173 = *(void *)(v174 - 8);
  MEMORY[0x1F4188790](v174);
  v172 = &v150[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v164 = sub_1DFDFA4B0();
  uint64_t v162 = *(void *)(v164 - 8);
  MEMORY[0x1F4188790](v164);
  id v166 = &v150[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v160 = sub_1DFDFAD30();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x1F4188790](v160);
  v161 = &v150[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v155 = sub_1DFDFB8B0();
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x1F4188790](v155);
  v158 = &v150[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DE9361BC(0, (unint64_t *)&unk_1EBAC06F0, (uint64_t (*)(uint64_t))sub_1DEABCC20, MEMORY[0x1E4F80D98]);
  uint64_t v170 = v15;
  uint64_t v169 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v183 = &v150[-v16];
  uint64_t v17 = type metadata accessor for WebEmbedRouteModel();
  MEMORY[0x1F4188790](v17 - 8);
  char v163 = &v150[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DE9361BC(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], v7);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  id v157 = &v150[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v156 = &v150[-v23];
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  long long v185 = &v150[-v25];
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = &v150[-v27];
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  v165 = &v150[-v30];
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  v182 = &v150[-v32];
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  v153 = &v150[-v34];
  MEMORY[0x1F4188790](v33);
  uint64_t v152 = &v150[-v35];
  uint64_t v36 = sub_1DFDF3610();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v39 = &v150[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v168 = sub_1DFDF3D40();
  uint64_t v167 = *(void *)(v168 - 8);
  uint64_t v40 = MEMORY[0x1F4188790](v168);
  unint64_t v42 = &v150[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v40);
  v181 = &v150[-v43];
  uint64_t v44 = sub_1DFDE8F10();
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v46 = &v150[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v47 = type metadata accessor for TodayRouteModel();
  uint64_t v48 = MEMORY[0x1F4188790](v47);
  long long v50 = &v150[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v48);
  uint64_t v52 = &v150[-v51];
  uint64_t v53 = *(void *)(a3 + 8);
  *(void *)&long long v186 = *(void *)a3;
  *((void *)&v186 + 1) = v53;
  uint64_t v54 = *(void *)(a3 + 24);
  *(void *)&long long v187 = *(void *)(a3 + 16);
  *((void *)&v187 + 1) = v54;
  int v55 = *(unsigned __int8 *)(a3 + 32);
  sub_1DF128908(v189, (uint64_t)&v150[-v51], (uint64_t (*)(void))type metadata accessor for TodayRouteModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v79 = v163;
      sub_1DF1288A0((uint64_t)v52, (uint64_t)v163, (uint64_t (*)(void))type metadata accessor for WebEmbedRouteModel);
      uint64_t v80 = sub_1DFDE7220();
      uint64_t v81 = swift_allocBox();
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v80 - 8) + 16))(v82, v79, v80);
      uint64_t v83 = sub_1DFDEAB40();
      uint64_t v84 = (uint64_t)v153;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v153, 1, 1, v83);
      uint64_t v195 = 0;
      long long v193 = 0u;
      long long v194 = 0u;
      uint64_t v192 = 0;
      long long v190 = 0u;
      long long v191 = 0u;
      swift_retain();
      sub_1DFBB5128(v81 | 0x5000000000000004, 0, v84, (uint64_t)&v193, 0, 0, 0, 0, (uint64_t)&v190);
      swift_release();
      sub_1DE933144((uint64_t)&v190, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v193, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC(v84, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
      swift_release();
      swift_release();
      v146 = type metadata accessor for WebEmbedRouteModel;
      goto LABEL_16;
    case 2u:
      uint64_t v85 = *(unsigned char **)v52;
      uint64_t v86 = *((void *)v52 + 1);
      uint64_t v87 = (void *)*((void *)v52 + 2);
      uint64_t v88 = *((void *)v52 + 3);
      uint64_t v89 = *((void *)v52 + 4);
      uint64_t v90 = v52[40];
      uint64_t v91 = v188;
      uint64_t v92 = swift_allocObject();
      *(void *)(v92 + 16) = v85;
      *(void *)(v92 + 24) = v86;
      *(void *)(v92 + 32) = v87;
      *(void *)(v92 + 40) = v88;
      *(void *)(v92 + 48) = v89;
      *(void *)(v92 + 56) = v90;
      uint64_t v93 = MEMORY[0x1E4FBC860];
      uint64_t v189 = v92 | 0x4000000000000004;
      *(void *)(v92 + 72) = 0;
      *(void *)(v92 + 80) = 0;
      *(void *)(v92 + 64) = v93;
      *((void *)&v187 + 1) = *(void *)(v91 + 64);
      uint64_t v94 = sub_1DFDEAB40();
      v95 = v182;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v182, 1, 1, v94);
      sub_1DE94F204(v91 + 72, (uint64_t)&v193);
      uint64_t v192 = 0;
      long long v190 = 0u;
      long long v191 = 0u;
      swift_retain();
      sub_1DEB28AA8((uint64_t)v85, v86, v87, v88, v89, v90);
      sub_1DFBB5128(v189, *((uint64_t *)&v187 + 1), (uint64_t)v95, (uint64_t)&v193, 0, 0, 0, 0, (uint64_t)&v190);
      sub_1DEB28A50((uint64_t)v85, v86, v87, v88, v89, v90);
      swift_release();
      sub_1DE933144((uint64_t)&v190, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v193, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC((uint64_t)v182, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
      swift_release();
      return swift_release();
    case 3u:
      *(void *)&long long v190 = *(void *)v52;
      uint64_t v189 = v190;
      (*(void (**)(unsigned char *, void, uint64_t))(v154 + 104))(v158, *MEMORY[0x1E4F80F00], v155);
      (*(void (**)(unsigned char *, void, uint64_t))(v159 + 104))(v161, *MEMORY[0x1E4F80A58], v160);
      (*(void (**)(unsigned char *, void, uint64_t))(v162 + 104))(v166, *MEMORY[0x1E4F80768], v164);
      long long v193 = 0u;
      long long v194 = 0u;
      sub_1DEABCC20();
      swift_unknownObjectRetain();
      uint64_t v96 = v183;
      sub_1DFDFB460();
      swift_unknownObjectRetain();
      v97 = v172;
      sub_1DFDE9FA0();
      uint64_t v98 = v169;
      unint64_t v99 = v175;
      uint64_t v100 = v96;
      uint64_t v101 = v170;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v169 + 16))(v175, v100, v170);
      uint64_t v102 = v176;
      uint64_t v103 = v178;
      (*(void (**)(unsigned char *, void, uint64_t))(v176 + 104))(v99, *MEMORY[0x1E4F7D8D8], v178);
      uint64_t v104 = sub_1DFDE7220();
      uint64_t v105 = (uint64_t)v177;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v177, 1, 1, v104);
      sub_1DFDE8ED0();
      sub_1DF1287DC(v105, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      (*(void (**)(unsigned char *, uint64_t))(v102 + 8))(v99, v103);
      (*(void (**)(unsigned char *, uint64_t))(v173 + 8))(v97, v174);
      swift_storeEnumTagMultiPayload();
      long long v193 = v186;
      long long v194 = v187;
      LOBYTE(v195) = v55;
      sub_1DF125B9C(v50, v184, &v193);
      swift_unknownObjectRelease();
      sub_1DF128970((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for TodayRouteModel);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v98 + 8))(v183, v101);
    case 4u:
      id v106 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
      uint64_t v107 = v188;
      uint64_t v189 = *(void *)(v188 + 112);
      uint64_t v108 = swift_allocObject();
      swift_retain();
      id v109 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v110 = sub_1DFDFDD20();
      uint64_t v112 = v111;

      *(void *)(v108 + 16) = v110;
      *(void *)(v108 + 24) = v112;
      *(void *)(v108 + 32) = v106;
      *(void *)(v108 + 40) = 0;
      *(unsigned char *)(v108 + 48) = 1;
      long long v113 = v186;
      *(void *)(v108 + 56) = 0;
      *(void *)(v108 + 64) = v113;
      long long v114 = v187;
      *(void *)(v108 + 72) = *((void *)&v113 + 1);
      *(_OWORD *)(v108 + 80) = v114;
      *(unsigned char *)(v108 + 96) = v55;
      long long v185 = v106;
      sub_1DED2369C(v113, *((uint64_t *)&v113 + 1), v114, *((uint64_t *)&v114 + 1), v55);
      swift_unknownObjectRelease();
      uint64_t v115 = *(void *)(v107 + 64);
      uint64_t v116 = sub_1DFDEAB40();
      uint64_t v117 = (uint64_t)v165;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v165, 1, 1, v116);
      uint64_t v195 = 0;
      long long v193 = 0u;
      long long v194 = 0u;
      uint64_t v192 = 0;
      long long v190 = 0u;
      long long v191 = 0u;
      sub_1DFBB5128(v108 | 0x2000000000000006, v115, v117, (uint64_t)&v193, 0, 0, 0, 0, (uint64_t)&v190);
      swift_release();
      swift_unknownObjectRelease();

      sub_1DE933144((uint64_t)&v190, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v193, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC(v117, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
      goto LABEL_15;
    case 5u:
      v119 = (void *)*((void *)v52 + 1);
      long long v183 = *(unsigned char **)v52;
      char v118 = v183;
      uint64_t v120 = *((void *)v52 + 2);
      id v121 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
      uint64_t v122 = v188;
      uint64_t v123 = *(void *)(v188 + 112);
      uint64_t v124 = swift_allocObject();
      *(void *)(v124 + 16) = v118;
      *(void *)(v124 + 24) = v119;
      uint64_t v125 = MEMORY[0x1E4FBC860];
      *(void *)(v124 + 32) = v121;
      *(void *)(v124 + 40) = v125;
      *(unsigned char *)(v124 + 48) = 1;
      long long v126 = v186;
      *(void *)(v124 + 56) = v120;
      *(void *)(v124 + 64) = v126;
      long long v127 = v187;
      *(void *)(v124 + 72) = *((void *)&v126 + 1);
      *(_OWORD *)(v124 + 80) = v127;
      *(unsigned char *)(v124 + 96) = v55;
      uint64_t v189 = v124 | 0x2000000000000006;
      uint64_t v184 = *(void *)(v122 + 64);
      uint64_t v128 = sub_1DFDEAB40();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v185, 1, 1, v128);
      sub_1DE94F204(v122 + 72, (uint64_t)&v193);
      uint64_t v192 = 0;
      long long v190 = 0u;
      long long v191 = 0u;
      int v151 = v55;
      sub_1DED2369C(v126, *((uint64_t *)&v126 + 1), v127, *((uint64_t *)&v127 + 1), v55);
      swift_retain();
      uint64_t v129 = v183;
      sub_1DED23604((uint64_t)v183, v119, v121, MEMORY[0x1E4FBC860], 1);
      sub_1DED2369C(v126, *((uint64_t *)&v126 + 1), v127, *((uint64_t *)&v127 + 1), v55);
      uint64_t v130 = v189;
      uint64_t v189 = v123;
      sub_1DFBB5128(v130, v184, (uint64_t)v185, (uint64_t)&v193, 0, 0, 0, 0, (uint64_t)&v190);
      sub_1DEB28744((uint64_t)v129, v119, v121, MEMORY[0x1E4FBC860], 1);
      sub_1DED236B0(v126, *((uint64_t *)&v126 + 1), v127, *((uint64_t *)&v127 + 1), v151);
      swift_release();
      sub_1DE933144((uint64_t)&v190, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v193, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC((uint64_t)v185, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
LABEL_15:
      swift_release();
      return swift_release();
    case 6u:
      uint64_t v131 = v179;
      sub_1DF1288A0((uint64_t)v52, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for PuzzleModel);
      uint64_t v132 = v188;
      uint64_t v133 = swift_allocBox();
      sub_1DF128908((uint64_t)v131, v134, (uint64_t (*)(void))type metadata accessor for PuzzleModel);
      uint64_t v135 = *(void *)(v132 + 64);
      uint64_t v136 = sub_1DFDEAB40();
      uint64_t v137 = (uint64_t)v156;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v156, 1, 1, v136);
      sub_1DE94F204(v132 + 72, (uint64_t)&v193);
      uint64_t v192 = 0;
      long long v190 = 0u;
      long long v191 = 0u;
      swift_retain();
      sub_1DFBB5128(v133 | 0xC000000000000006, v135, v137, (uint64_t)&v193, 0, 0, 0, 0, (uint64_t)&v190);
      swift_release();
      sub_1DE933144((uint64_t)&v190, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v193, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC(v137, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
      swift_release();
      swift_release();
      uint64_t v148 = type metadata accessor for PuzzleModel;
      uint64_t v149 = (uint64_t)v131;
      return sub_1DF128970(v149, (uint64_t (*)(void))v148);
    case 7u:
      uint64_t v79 = v180;
      sub_1DF1288A0((uint64_t)v52, (uint64_t)v180, (uint64_t (*)(void))type metadata accessor for CustomItemRouteModel);
      uint64_t v138 = sub_1DFDE7220();
      uint64_t v139 = swift_allocBox();
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v138 - 8) + 16))(v140, v79, v138);
      uint64_t v141 = sub_1DFDEAB40();
      uint64_t v142 = (uint64_t)v157;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56))(v157, 1, 1, v141);
      uint64_t v195 = 0;
      long long v193 = 0u;
      long long v194 = 0u;
      uint64_t v192 = 0;
      long long v190 = 0u;
      long long v191 = 0u;
      swift_retain();
      sub_1DFBB5128(v139 | 0x5000000000000004, 0, v142, (uint64_t)&v193, 0, 0, 0, 0, (uint64_t)&v190);
      swift_release();
      sub_1DE933144((uint64_t)&v190, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v193, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC(v142, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
      swift_release();
      swift_release();
      v146 = type metadata accessor for CustomItemRouteModel;
LABEL_16:
      uint64_t v148 = v146;
      uint64_t v149 = (uint64_t)v79;
      return sub_1DF128970(v149, (uint64_t (*)(void))v148);
    case 8u:
      uint64_t v143 = v188;
      uint64_t v144 = *(void *)(v188 + 64);
      uint64_t v145 = sub_1DFDEAB40();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v28, 1, 1, v145);
      sub_1DE94F204(v143 + 72, (uint64_t)&v193);
      uint64_t v192 = 0;
      long long v190 = 0u;
      long long v191 = 0u;
      swift_retain();
      sub_1DFBB5128(0xD000000000000030, v144, (uint64_t)v28, (uint64_t)&v193, 0, 0, 0, 0, (uint64_t)&v190);
      swift_release();
      sub_1DE933144((uint64_t)&v190, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
      sub_1DE933144((uint64_t)&v193, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC((uint64_t)v28, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
      return swift_release();
    default:
      sub_1DF1288A0((uint64_t)v52, (uint64_t)v46, MEMORY[0x1E4F7D5D0]);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v37 + 16))(v39, v184, v36);
      uint64_t v56 = v181;
      sub_1DFDF3D50();
      uint64_t v57 = v167;
      uint64_t v58 = v168;
      (*(void (**)(unsigned char *, void, uint64_t))(v167 + 104))(v42, *MEMORY[0x1E4FAD088], v168);
      sub_1DF0407DC();
      char v59 = sub_1DFDFDC70();
      uint64_t v60 = *(void (**)(unsigned char *, uint64_t))(v57 + 8);
      uint64_t v61 = v42;
      uint64_t v62 = (uint64_t)v46;
      v60(v61, v58);
      if (v59) {
        goto LABEL_6;
      }
      uint64_t v63 = sub_1DFDF35F0();
      if (!v63) {
        goto LABEL_6;
      }
      uint64_t v64 = (void *)v63;
      sub_1DEDE0CE4((uint64_t *)&v193);
      unint64_t v65 = v193;
      if ((~(void)v193 & 0xF000000000000007) != 0)
      {
        sub_1DFDF1030();

        v60(v56, v58);
        sub_1DF128970(v62, MEMORY[0x1E4F7D5D0]);
        return sub_1DEB28D0C(v65);
      }
      else
      {

LABEL_6:
        uint64_t v66 = v188;
        sub_1DEAE4654();
        uint64_t v68 = v67;
        uint64_t v69 = swift_allocBox();
        uint64_t v71 = v70;
        uint64_t v72 = *(int *)(v68 + 48);
        sub_1DE919EB0();
        uint64_t v74 = *(int *)(v73 + 48);
        sub_1DF128908(v62, v71, MEMORY[0x1E4F7D5D0]);
        uint64_t v75 = MEMORY[0x1E4FBC860];
        *(void *)(v71 + v74) = MEMORY[0x1E4FBC860];
        *(void *)(v71 + v72) = v75;
        uint64_t v76 = *(void *)(v66 + 64);
        uint64_t v77 = sub_1DFDEAB40();
        uint64_t v78 = (uint64_t)v152;
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v152, 1, 1, v77);
        sub_1DE94F204(v66 + 72, (uint64_t)&v193);
        uint64_t v192 = 0;
        long long v190 = 0u;
        long long v191 = 0u;
        swift_retain();
        sub_1DFBB5128(v69 | 2, v76, v78, (uint64_t)&v193, 0, 0, 0, 0, (uint64_t)&v190);
        swift_release();
        sub_1DE933144((uint64_t)&v190, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
        sub_1DE933144((uint64_t)&v193, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
        sub_1DF1287DC(v78, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
        swift_release();
        swift_release();
        v60(v181, v58);
        uint64_t v148 = (uint64_t (*)())MEMORY[0x1E4F7D5D0];
        uint64_t v149 = v62;
        return sub_1DF128970(v149, (uint64_t (*)(void))v148);
      }
  }
}

uint64_t sub_1DF1276F4(uint64_t a1)
{
  uint64_t v113 = a1;
  uint64_t v114 = 0;
  uint64_t v107 = type metadata accessor for PuzzleModel();
  MEMORY[0x1F4188790](v107);
  uint64_t v111 = (uint64_t)&v104 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1DFDE9720();
  uint64_t v108 = *(void *)(v2 - 8);
  uint64_t v109 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DE9361BC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v104 - v7;
  uint64_t v9 = sub_1DFDE9FD0();
  uint64_t v105 = *(void *)(v9 - 8);
  uint64_t v106 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9361BC(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], v5);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v104 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v104 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v110 = (char *)&v104 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v104 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v104 - v23;
  uint64_t v25 = sub_1DFDE8F10();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TodayRouteModel();
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char *)&v104 - v32;
  sub_1DF128908(v113, (uint64_t)&v104 - v32, (uint64_t (*)(void))type metadata accessor for TodayRouteModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 7u:
      sub_1DF128970((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for TodayRouteModel);
      return 0;
    case 2u:
      uint64_t v34 = *(void *)v33;
      uint64_t v35 = *((void *)v33 + 1);
      uint64_t v36 = (void *)*((void *)v33 + 2);
      uint64_t v37 = *((void *)v33 + 3);
      uint64_t v38 = *((void *)v33 + 4);
      uint64_t v39 = v33[40];
      uint64_t v40 = v112;
      uint64_t v41 = *(void *)(v112 + 112);
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v34;
      *(void *)(v42 + 24) = v35;
      *(void *)(v42 + 32) = v36;
      *(void *)(v42 + 40) = v37;
      *(void *)(v42 + 48) = v38;
      *(void *)(v42 + 56) = v39;
      uint64_t v43 = MEMORY[0x1E4FBC860];
      uint64_t v113 = v42 | 0x4000000000000004;
      *(void *)(v42 + 72) = 0;
      *(void *)(v42 + 80) = 0;
      *(void *)(v42 + 64) = v43;
      uint64_t v111 = *(void *)(v40 + 64);
      uint64_t v44 = sub_1DFDEAB40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v22, 1, 1, v44);
      sub_1DE94F204(v40 + 72, (uint64_t)v115);
      swift_retain();
      sub_1DEB28AA8(v34, v35, v36, v37, v38, v39);
      unint64_t v45 = v113;
      uint64_t v46 = (void *)v114;
      uint64_t v113 = v41;
      uint64_t v47 = sub_1DF6E9090(v45, v111, (uint64_t)v22, (uint64_t)v115, 0, 0, 0, 0);
      sub_1DEB28A50(v34, v35, v36, v37, v38, v39);
      if (v46)
      {

        uint64_t v114 = 0;
      }
      else
      {
        uint64_t v114 = (uint64_t)v47;
      }
      sub_1DE933144((uint64_t)v115, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC((uint64_t)v22, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
      goto LABEL_20;
    case 3u:
      swift_unknownObjectRetain();
      sub_1DFDE9FA0();
      uint64_t v64 = sub_1DFDE7220();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v8, 1, 1, v64);
      uint64_t v66 = v108;
      uint64_t v65 = v109;
      (*(void (**)(char *, void, uint64_t))(v108 + 104))(v4, *MEMORY[0x1E4F7D8E0], v109);
      sub_1DFDE8ED0();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v4, v65);
      sub_1DF1287DC((uint64_t)v8, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v11, v106);
      swift_storeEnumTagMultiPayload();
      uint64_t v114 = sub_1DF1276F4(v31);
      swift_unknownObjectRelease();
      uint64_t v67 = type metadata accessor for TodayRouteModel;
      uint64_t v68 = (uint64_t)v31;
      goto LABEL_23;
    case 4u:
      id v69 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
      uint64_t v70 = v112;
      uint64_t v71 = swift_allocObject();
      swift_retain();
      id v72 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v73 = sub_1DFDFDD20();
      uint64_t v75 = v74;

      *(void *)(v71 + 16) = v73;
      *(void *)(v71 + 24) = v75;
      *(void *)(v71 + 32) = v69;
      *(void *)(v71 + 40) = 0;
      *(unsigned char *)(v71 + 48) = 1;
      *(_OWORD *)(v71 + 56) = 0u;
      *(_OWORD *)(v71 + 72) = 0u;
      *(void *)(v71 + 88) = 0;
      *(unsigned char *)(v71 + 96) = -1;
      id v76 = v69;
      swift_unknownObjectRelease();
      uint64_t v77 = *(void *)(v70 + 64);
      uint64_t v78 = sub_1DFDEAB40();
      uint64_t v79 = (uint64_t)v110;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v110, 1, 1, v78);
      uint64_t v116 = 0;
      memset(v115, 0, sizeof(v115));
      uint64_t v80 = v77;
      uint64_t v81 = (void *)v114;
      uint64_t v82 = sub_1DF6E9090(v71 | 0x2000000000000006, v80, v79, (uint64_t)v115, 0, 0, 0, 0);
      swift_unknownObjectRelease();

      if (v81)
      {

        uint64_t v114 = 0;
      }
      else
      {
        uint64_t v114 = (uint64_t)v82;
      }
      sub_1DE933144((uint64_t)v115, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC(v79, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
LABEL_20:
      swift_release();
      swift_release();
      return v114;
    case 5u:
      uint64_t v62 = *((void *)v33 + 2);
      uint64_t v63 = (void *)*((void *)v33 + 1);
      switch(v62)
      {
        case 0:
        case 8:
          uint64_t v92 = *(void *)v33;
          id v93 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
          uint64_t v94 = v112;
          uint64_t v95 = swift_allocObject();
          *(void *)(v95 + 16) = v92;
          *(void *)(v95 + 24) = v63;
          uint64_t v96 = MEMORY[0x1E4FBC860];
          *(void *)(v95 + 32) = v93;
          *(void *)(v95 + 40) = v96;
          *(unsigned char *)(v95 + 48) = 1;
          *(void *)(v95 + 56) = v62;
          *(_OWORD *)(v95 + 64) = 0u;
          *(_OWORD *)(v95 + 80) = 0u;
          *(unsigned char *)(v95 + 96) = -1;
          uint64_t v97 = v95 | 0x2000000000000006;
          uint64_t v98 = *(void *)(v94 + 64);
          uint64_t v99 = sub_1DFDEAB40();
          uint64_t v100 = (uint64_t)v104;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v104, 1, 1, v99);
          sub_1DE94F204(v94 + 72, (uint64_t)v115);
          swift_retain();
          sub_1DED23604(v92, v63, v93, v96, 1);
          sub_1DED2369C(0, 0, 0, 0, 0xFFu);
          unint64_t v101 = v97;
          uint64_t v102 = (void *)v114;
          uint64_t v103 = sub_1DF6E9090(v101, v98, v100, (uint64_t)v115, 0, 0, 0, 0);
          sub_1DEB28744(v92, v63, v93, v96, 1);
          sub_1DED236B0(0, 0, 0, 0, 0xFFu);
          if (v102)
          {

            uint64_t v114 = 0;
          }
          else
          {
            uint64_t v114 = (uint64_t)v103;
          }
          sub_1DE933144((uint64_t)v115, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
          sub_1DF1287DC(v100, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
          swift_release();
          swift_release();
          break;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 9:
        case 10:
        case 11:
          swift_bridgeObjectRelease();
          uint64_t v114 = 0;
          break;
        default:
          sub_1DFDFFBB0();
          __break(1u);
          JUMPOUT(0x1DF1284C0);
      }
      return v114;
    case 6u:
      uint64_t v83 = v111;
      sub_1DF1288A0((uint64_t)v33, v111, (uint64_t (*)(void))type metadata accessor for PuzzleModel);
      uint64_t v84 = v112;
      uint64_t v85 = swift_allocBox();
      sub_1DF128908(v83, v86, (uint64_t (*)(void))type metadata accessor for PuzzleModel);
      uint64_t v87 = *(void *)(v84 + 64);
      uint64_t v88 = sub_1DFDEAB40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v17, 1, 1, v88);
      sub_1DE94F204(v84 + 72, (uint64_t)v115);
      swift_retain();
      uint64_t v89 = (void *)v114;
      uint64_t v90 = sub_1DF6E9090(v85 | 0xC000000000000006, v87, (uint64_t)v17, (uint64_t)v115, 0, 0, 0, 0);
      if (v89)
      {

        uint64_t v114 = 0;
      }
      else
      {
        uint64_t v114 = (uint64_t)v90;
      }
      sub_1DE933144((uint64_t)v115, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC((uint64_t)v17, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
      swift_release();
      swift_release();
      uint64_t v67 = type metadata accessor for PuzzleModel;
      uint64_t v68 = v83;
      goto LABEL_23;
    case 8u:
      return v114;
    default:
      sub_1DF1288A0((uint64_t)v33, (uint64_t)v27, MEMORY[0x1E4F7D5D0]);
      uint64_t v48 = v112;
      sub_1DEAE4654();
      uint64_t v50 = v49;
      uint64_t v51 = swift_allocBox();
      uint64_t v53 = v52;
      uint64_t v54 = *(int *)(v50 + 48);
      sub_1DE919EB0();
      uint64_t v56 = *(int *)(v55 + 48);
      sub_1DF128908((uint64_t)v27, v53, MEMORY[0x1E4F7D5D0]);
      uint64_t v57 = MEMORY[0x1E4FBC860];
      *(void *)(v53 + v56) = MEMORY[0x1E4FBC860];
      *(void *)(v53 + v54) = v57;
      uint64_t v58 = *(void *)(v48 + 64);
      uint64_t v59 = sub_1DFDEAB40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v24, 1, 1, v59);
      sub_1DE94F204(v48 + 72, (uint64_t)v115);
      swift_retain();
      uint64_t v60 = (void *)v114;
      uint64_t v61 = sub_1DF6E9090(v51 | 2, v58, (uint64_t)v24, (uint64_t)v115, 0, 0, 0, 0);
      if (v60)
      {

        uint64_t v114 = 0;
      }
      else
      {
        uint64_t v114 = (uint64_t)v61;
      }
      sub_1DE933144((uint64_t)v115, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
      sub_1DF1287DC((uint64_t)v24, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
      swift_release();
      swift_release();
      uint64_t v67 = (uint64_t (*)())MEMORY[0x1E4F7D5D0];
      uint64_t v68 = (uint64_t)v27;
LABEL_23:
      sub_1DF128970(v68, (uint64_t (*)(void))v67);
      return v114;
  }
}

uint64_t sub_1DF128514(uint64_t a1)
{
  sub_1DE9361BC(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v12 - v4;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(_OWORD *)(v6 + 24) = xmmword_1DFE412D0;
  unint64_t v7 = v6 | 0xB000000000000000;
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = sub_1DFDEAB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  sub_1DE94F204(v1 + 72, (uint64_t)v14);
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  swift_retain();
  sub_1DFBB5128(v7, v8, (uint64_t)v5, (uint64_t)v14, 0, 0, 0, 0, (uint64_t)v12);
  swift_release();
  sub_1DE933144((uint64_t)v12, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
  sub_1DE933144((uint64_t)v14, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
  sub_1DF1287DC((uint64_t)v5, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
  swift_release();
  return swift_release();
}

uint64_t sub_1DF128724()
{
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF128784()
{
  sub_1DEB28744(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_1DEB287CC(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1DF1287DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DE9361BC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF12884C()
{
  sub_1DEB289AC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_1DF1288A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF128908(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF128970(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF1289D0()
{
  sub_1DEFF25DC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
  return swift_deallocObject();
}

id sub_1DF128A0C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  uint64_t v2 = self;
  uint64_t v3 = &selRef_tertiarySystemBackgroundColor;
  if (v1 != (id)2) {
    uint64_t v3 = &selRef_systemBackgroundColor;
  }
  id v4 = [v2 *v3];
  return v4;
}

id sub_1DF128A78(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DFDFAFB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF8590();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (double *)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  int v14 = (*(uint64_t (**)(double *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x1E4F7FA10])
  {
    (*(void (**)(double *, uint64_t))(v11 + 96))(v13, v10);
    double v15 = *v13;
    sub_1DFDFBE00();
    if (v15 > 0.0 && v15 < a2)
    {
      sub_1DFDFBDF0();
      sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
      uint64_t v34 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
      uint64_t v35 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40))
                     + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                     + 56);
      uint64_t v36 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
      *(void *)(inited + 40) = v35;
      uint64_t v37 = (void *)*MEMORY[0x1E4FB06F8];
      *(void *)(inited + 64) = v36;
      *(void *)(inited + 72) = v37;
      id v38 = v34;
      id v39 = v35;
      id v40 = v37;
      uint64_t v41 = sub_1DFDFB300();
      *(void *)(inited + 104) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
      *(void *)(inited + 80) = v41;
      sub_1DEA65870(inited);
      id v42 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v43 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1DF12B784((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
      uint64_t v44 = (void *)sub_1DFDFDAE0();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v42, sel_initWithString_attributes_, v43, v44);
    }
    else
    {
      sub_1DFDF8580();
      sub_1DFDFBDF0();
      sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
      uint64_t v17 = swift_initStackObject();
      uint64_t v18 = (void **)MEMORY[0x1E4FB06F8];
      *(_OWORD *)(v17 + 16) = xmmword_1DFE0B750;
      uint64_t v19 = *v18;
      *(void *)(v17 + 32) = v19;
      id v20 = v19;
      uint64_t v21 = sub_1DFDFB310();
      uint64_t v22 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
      *(void *)(v17 + 40) = v21;
      uint64_t v23 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(v17 + 64) = v22;
      *(void *)(v17 + 72) = v23;
      __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
      id v24 = v23;
      sub_1DFDFBAA0();
      uint64_t v25 = sub_1DFDFAFA0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *(void *)(v17 + 104) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
      *(void *)(v17 + 80) = v25;
      sub_1DEA65870(v17);
      id v26 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v27 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1DF12B784((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
      uint64_t v28 = (void *)sub_1DFDFDAE0();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);
    }
  }
  else if (v14 == *MEMORY[0x1E4F7FA18])
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v31 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    sub_1DF129124();
    id v29 = v32;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v45 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v46 = (void *)sub_1DFDFDCE0();
    id v29 = objc_msgSend(v45, sel_initWithString_, v46);

    (*(void (**)(double *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v29;
}

void sub_1DF129124()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDFAFB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 5, 1, 10.0);
  uint64_t v7 = (void *)sub_1DFDFDCE0();
  id v8 = objc_msgSend(self, sel_systemImageNamed_, v7);

  if (v8)
  {
    uint64_t v25 = v2;
    id v26 = v6;
    id v9 = objc_msgSend(v8, sel_imageByApplyingSymbolConfiguration_, v6);

    if (v9)
    {
      id v10 = objc_msgSend(self, sel_textAttachmentWithImage_, v9);

      sub_1DE919914(0, &qword_1EAC28188);
      id v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v10);
      id v12 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v12, sel_initWithString_, v13);

      objc_msgSend(v14, sel_insertAttributedString_atIndex_, v11, 0);
      sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      uint64_t v16 = (void **)MEMORY[0x1E4FB06F8];
      *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
      uint64_t v17 = *v16;
      *(void *)(inited + 32) = v17;
      id v18 = v17;
      uint64_t v19 = sub_1DFDFB310();
      uint64_t v20 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
      *(void *)(inited + 40) = v19;
      uint64_t v21 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(inited + 64) = v20;
      *(void *)(inited + 72) = v21;
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      id v22 = v21;
      sub_1DFDFBAA0();
      uint64_t v23 = sub_1DFDFAFA0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
      *(void *)(inited + 104) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
      *(void *)(inited + 80) = v23;
      sub_1DEA65870(inited);
      type metadata accessor for Key(0);
      sub_1DF12B784((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
      id v24 = (void *)sub_1DFDFDAE0();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_addAttributes_range_, v24, 0, objc_msgSend(v14, sel_length));

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1DF129534()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDFAFB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DFDFBFD0();
  sub_1DFDFBFC0();
  sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  uint64_t v7 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  id v8 = *v7;
  *(void *)(inited + 32) = v8;
  id v9 = v8;
  uint64_t v10 = sub_1DFDFB300();
  uint64_t v11 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  *(void *)(inited + 40) = v10;
  id v12 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = v12;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  id v13 = v12;
  sub_1DFDFBAA0();
  uint64_t v14 = sub_1DFDFAFA0();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(inited + 104) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  *(void *)(inited + 80) = v14;
  sub_1DEA65870(inited);
  id v15 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v16 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DF12B784((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
  uint64_t v17 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

  return v18;
}

id sub_1DF1297F4(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = sub_1DFDFE3E0();
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DFE0B250;
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1DEA08668();
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v5;
  sub_1DFDFDD60();
  swift_bridgeObjectRelease();
  sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, v8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  uint64_t v11 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
  id v12 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40))
                 + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                 + 56);
  uint64_t v13 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  *(void *)(inited + 40) = v12;
  uint64_t v14 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 72) = v14;
  uint64_t v15 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  swift_bridgeObjectRetain();
  id v16 = v11;
  id v17 = v12;
  id v18 = v14;
  uint64_t v19 = sub_1DFDFF360();
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 80) = v19;
  sub_1DEA65870(inited);
  id v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v21 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DF12B784((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
  id v22 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22, 0x80000001DFEE2A10);
  swift_bridgeObjectRelease();

  return v23;
}

id sub_1DF129B54(void *a1)
{
  id v3 = objc_msgSend(a1, sel_narrators);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  sub_1DFDFE220();

  uint64_t v6 = sub_1DFDFE3E0();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (!v8) {
    return 0;
  }
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_role) & 1) != 0
    && objc_msgSend(a1, sel_role) == (id)8)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    unint64_t v33 = 0x80000001DFEE2AA0;
  }
  else
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    unint64_t v33 = 0x80000001DFEE2A40;
  }
  uint64_t v12 = sub_1DFDE6ED0();
  uint64_t v14 = v13;

  type metadata accessor for Localized();
  id v15 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata, v33);
  sub_1DFDE6ED0();

  id v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DFE0B750;
  *(void *)(v17 + 56) = v5;
  unint64_t v18 = sub_1DEA08668();
  *(void *)(v17 + 32) = v12;
  *(void *)(v17 + 40) = v14;
  *(void *)(v17 + 96) = v5;
  *(void *)(v17 + 104) = v18;
  *(void *)(v17 + 64) = v18;
  *(void *)(v17 + 72) = v6;
  *(void *)(v17 + 80) = v8;
  sub_1DFDFDD60();
  swift_bridgeObjectRelease();
  sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, v16);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  id v20 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
  uint64_t v21 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40))
                 + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                 + 56);
  uint64_t v22 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  *(void *)(inited + 40) = v21;
  id v23 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = v22;
  *(void *)(inited + 72) = v23;
  uint64_t v24 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  swift_bridgeObjectRetain();
  id v25 = v20;
  id v26 = v21;
  id v27 = v23;
  uint64_t v28 = sub_1DFDFF360();
  *(void *)(inited + 104) = v24;
  *(void *)(inited + 80) = v28;
  sub_1DEA65870(inited);
  id v29 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v30 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DF12B784((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
  id v31 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v29, sel_initWithString_attributes_, v30, v31, 0x80000001DFEE2A70);
  swift_bridgeObjectRelease();

  return v11;
}

id sub_1DF12A014(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6590C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v36 - v11;
  sub_1DEA1F784(a1, (uint64_t)v36 - v11);
  id v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    if (a2) {
      uint64_t v14 = sub_1DFDE7340();
    }
    else {
      uint64_t v14 = sub_1DFDE7350();
    }
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v19 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    id v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1DFE0B250;
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 64) = sub_1DEA08668();
    *(void *)(v21 + 32) = v16;
    *(void *)(v21 + 40) = v17;
    v36[1] = sub_1DFDFDD60();
    swift_bridgeObjectRelease();
    sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, v20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
    id v23 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
    uint64_t v24 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40))
                   + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                   + 56);
    uint64_t v25 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
    *(void *)(inited + 40) = v24;
    id v26 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = v25;
    *(void *)(inited + 72) = v26;
    uint64_t v27 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    swift_bridgeObjectRetain();
    id v28 = v23;
    id v29 = v24;
    id v30 = v26;
    uint64_t v31 = sub_1DFDFF360();
    *(void *)(inited + 104) = v27;
    *(void *)(inited + 80) = v31;
    sub_1DEA65870(inited);
    id v32 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    unint64_t v33 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DF12B784((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    uint64_t v34 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v32, sel_initWithString_attributes_, v33, v34);
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v13;
}

void sub_1DF12A4E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = self;
  id v12 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v6 + 16), *(void *)(v6 + 40))
                          + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                          + 8));
  id v13 = objc_msgSend(v11, sel_secondarySystemFillColor);
  id v14 = objc_msgSend(v11, sel_ts_dynamicColor_withDarkStyleVariant_, v12, v13);

  objc_msgSend(a1, sel_setBackgroundColor_, v14);
  id v15 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v15, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  id v16 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v16, sel_setCornerRadius_, 10.0);

  objc_msgSend(a1, sel_setTitleEdgeInsets_, 0.0, 10.0, 0.0, 0.0);
  sub_1DF12A96C(a3, a4, a5);
  sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  unint64_t v18 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v19 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  id v20 = v18;
  *(void *)(inited + 40) = sub_1DFDFF360();
  uint64_t v21 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v19;
  *(void *)(inited + 72) = v21;
  uint64_t v22 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(v6 + 16), *(void *)(v6 + 40))
                 + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                 + 40);
  *(void *)(inited + 104) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  *(void *)(inited + 80) = v22;
  id v23 = v21;
  id v24 = v22;
  sub_1DEA65870(inited);
  id v25 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v26 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DF12B784((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
  uint64_t v27 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v25, sel_initWithString_attributes_, v26, v27);

  objc_msgSend(a1, sel_setAttributedTitle_forState_, v28, 0);
  id v29 = objc_msgSend(self, sel_defaultMetrics);
  objc_msgSend(v29, sel_scaledValueForValue_, 10.0);
  double v31 = v30;

  id v32 = objc_msgSend(self, sel_configurationWithPointSize_, v31);
  sub_1DF12AD74(a3, a4, a5);
  id v33 = v32;
  uint64_t v34 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v34, v33);

  objc_msgSend(a1, sel_setImage_forState_, v35, 0);
}

uint64_t sub_1DF12A96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AudioFeedTrack(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (id *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEAE9BCC();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEF36AF0(a1, (uint64_t)v11, (uint64_t (*)(void))sub_1DEAE9BCC);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1DEC2A2F0();
    uint64_t v17 = &v11[*(int *)(v16 + 64)];
    sub_1DEF36AF0((uint64_t)v11, (uint64_t)v8, type metadata accessor for AudioFeedTrack);
    id v18 = objc_msgSend(*v8, sel_identifier);
    uint64_t v19 = sub_1DFDFDD20();
    uint64_t v21 = v20;

    if (v19 == a2 && v21 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        sub_1DEDFF518((uint64_t)v8);
        uint64_t v24 = sub_1DFDE8F90();
        (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v17, v24);
        goto LABEL_10;
      }
    }
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v29 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v27 = sub_1DFDE6ED0();

    sub_1DEDFF518((uint64_t)v8);
    uint64_t v30 = sub_1DFDE8F90();
    (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v17, v30);
    sub_1DEDFF518((uint64_t)v11);
    return v27;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DEC2A274();
    id v14 = &v11[*(int *)(v13 + 64)];
    uint64_t v15 = sub_1DFDE8F90();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
LABEL_10:
    sub_1DEDFF518((uint64_t)v11);
  }
  type metadata accessor for Localized();
  uint64_t v25 = swift_getObjCClassFromMetadata();
  id v26 = objc_msgSend(self, sel_bundleForClass_, v25);
  uint64_t v27 = sub_1DFDE6ED0();

  return v27;
}

uint64_t sub_1DF12AD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0x6C69662E79616C70;
  uint64_t v7 = type metadata accessor for AudioFeedTrack(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (id *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEAE9BCC();
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEF36AF0(a1, (uint64_t)v12, (uint64_t (*)(void))sub_1DEAE9BCC);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1DEC2A2F0();
    id v18 = &v12[*(int *)(v17 + 64)];
    sub_1DEF36AF0((uint64_t)v12, (uint64_t)v9, type metadata accessor for AudioFeedTrack);
    id v19 = objc_msgSend(*v9, sel_identifier);
    uint64_t v20 = sub_1DFDFDD20();
    uint64_t v22 = v21;

    if (v20 == a2 && v22 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v24 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        sub_1DEDFF518((uint64_t)v9);
        uint64_t v25 = sub_1DFDE8F90();
        (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v18, v25);
        goto LABEL_13;
      }
    }
    sub_1DEDFF518((uint64_t)v9);
    uint64_t v26 = sub_1DFDE8F90();
    (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v18, v26);
    uint64_t v6 = 0x69662E6573756170;
LABEL_13:
    sub_1DEDFF518((uint64_t)v12);
    return v6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DEC2A274();
    uint64_t v15 = &v12[*(int *)(v14 + 64)];
    uint64_t v16 = sub_1DFDE8F90();
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    goto LABEL_13;
  }
  return v6;
}

void sub_1DF12B024(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = self;
  id v5 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40))
                         + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                         + 8));
  id v6 = objc_msgSend(v4, sel_secondarySystemFillColor);
  id v7 = objc_msgSend(v4, sel_ts_dynamicColor_withDarkStyleVariant_, v5, v6);

  objc_msgSend(a1, sel_setBackgroundColor_, v7);
  id v8 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v8, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  id v9 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v9, sel_setCornerRadius_, 10.0);

  objc_msgSend(a1, sel_setTitleEdgeInsets_, 0.0, 10.0, 0.0, 0.0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  sub_1DEA6590C(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  uint64_t v13 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v14 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  id v15 = v13;
  *(void *)(inited + 40) = sub_1DFDFF360();
  uint64_t v16 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v16;
  uint64_t v17 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40))
                 + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                 + 40);
  *(void *)(inited + 104) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  *(void *)(inited + 80) = v17;
  id v18 = v16;
  id v19 = v17;
  sub_1DEA65870(inited);
  id v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v21 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DF12B784((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
  uint64_t v22 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22, 0x80000001DFEE29A0);

  objc_msgSend(a1, sel_setAttributedTitle_forState_, v23, 0);
  id v24 = objc_msgSend(self, sel_defaultMetrics);
  objc_msgSend(v24, sel_scaledValueForValue_, 12.0);
  double v26 = v25;

  id v27 = objc_msgSend(self, sel_configurationWithPointSize_, v26);
  uint64_t v28 = (void *)sub_1DFDFDCE0();
  id v29 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v28, v27);

  objc_msgSend(a1, sel_setImage_forState_, v29, 0);
}

uint64_t sub_1DF12B4F4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI223AudioTrackDetailsStyler_audioTrackFontBook;
  uint64_t v2 = sub_1DFDFB340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DF12B5A4()
{
  return type metadata accessor for AudioTrackDetailsStyler();
}

uint64_t type metadata accessor for AudioTrackDetailsStyler()
{
  uint64_t result = qword_1EAC28B80;
  if (!qword_1EAC28B80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF12B5F8()
{
  uint64_t result = sub_1DFDFB340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DF12B694@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2) {
    uint64_t v3 = (unsigned int *)MEMORY[0x1E4F80D28];
  }
  else {
    uint64_t v3 = (unsigned int *)MEMORY[0x1E4F80D30];
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_1DFDFB3A0();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a2, v4, v5);
}

uint64_t sub_1DF12B72C(uint64_t a1)
{
  uint64_t result = sub_1DF12B784(&qword_1EAC28B90, (void (*)(uint64_t))type metadata accessor for AudioTrackDetailsStyler);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DF12B784(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF12B7CC(void *a1)
{
  id v2 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v2, sel_setBorderWidth_, 0.5);

  id v3 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v3, sel_setCornerRadius_, 4.0);

  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_blackColor);
  id v6 = objc_msgSend(v5, sel_colorWithAlphaComponent_, 0.1);

  id v7 = objc_msgSend(v4, sel_whiteColor);
  id v8 = objc_msgSend(v7, sel_colorWithAlphaComponent_, 0.1);

  id v9 = objc_msgSend(v4, sel_ts_dynamicColor_withDarkStyleVariant_, v6, v8);
  objc_msgSend(a1, sel_setBackgroundColor_, v9);
}

uint64_t sub_1DF12B940(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  sub_1DF12BAA4();
  uint64_t result = sub_1DFDECCC0();
  if (v11)
  {
    sub_1DE942EC4(&v10, (uint64_t)v12);
    uint64_t v5 = v13;
    uint64_t v6 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    id v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, v5, v6);
    id v8 = (void *)MEMORY[0x1E01EFB70](v2 + 16);
    if (v8)
    {
      id v9 = v8;
      objc_msgSend(v8, sel_showViewController_sender_, v7, v2);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF12BA30()
{
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ChannelPickerRouter()
{
  return self;
}

unint64_t sub_1DF12BAA4()
{
  unint64_t result = qword_1EBADF778;
  if (!qword_1EBADF778)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBADF778);
  }
  return result;
}

uint64_t sub_1DF12BAFC()
{
  sub_1DEABEEF0(*(void *)(v0 + 16));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MainTabBarEngagementViewContentConfiguration()
{
  return self;
}

char *sub_1DF12BB60()
{
  uint64_t v1 = *v0;
  id v2 = objc_allocWithZone((Class)type metadata accessor for MainTabBarEngagementView());
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_1DEDE8DB8(v3);
  uint64_t v5 = v4;
  uint64_t v6 = *(void (**)(char *, void))(v1 + 16);
  if (v6) {
    v6(v4, *(void *)(v1 + 32));
  }
  sub_1DF12BBCC();
  return v5;
}

unint64_t sub_1DF12BBCC()
{
  unint64_t result = qword_1EAC28B98;
  if (!qword_1EAC28B98)
  {
    type metadata accessor for MainTabBarEngagementView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28B98);
  }
  return result;
}

uint64_t sub_1DF12BC24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = (void *)a2[1];
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(int *)(a3 + 32);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(unsigned char *)(a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v11 = *(int *)(type metadata accessor for DateRangeTagFeedGroupCursor() + 20);
    uint64_t v12 = v9 + v11;
    uint64_t v13 = v10 + v11;
    uint64_t v14 = sub_1DFDE7600();
    id v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    id v16 = v6;
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
  }
  return v5;
}

uint64_t sub_1DF12BD50(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for DateRangeTagFeedGroupCursor() + 20);
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_1DF12BDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = *(int *)(type metadata accessor for DateRangeTagFeedGroupCursor() + 20);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = v8 + v9;
  uint64_t v12 = sub_1DFDE7600();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  id v14 = v4;
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  return a1;
}

uint64_t sub_1DF12BEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  id v8 = v6;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (unsigned char *)(a2 + v9);
  *(unsigned char *)(a1 + v9) = *v11;
  uint64_t v12 = *(int *)(type metadata accessor for DateRangeTagFeedGroupCursor() + 20);
  uint64_t v13 = v10 + v12;
  id v14 = &v11[v12];
  uint64_t v15 = sub_1DFDE7600();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t sub_1DF12BFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = *(int *)(type metadata accessor for DateRangeTagFeedGroupCursor() + 20);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = v7 + v8;
  uint64_t v11 = sub_1DFDE7600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_1DF12C054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (unsigned char *)(a2 + v8);
  *(unsigned char *)(a1 + v8) = *v10;
  uint64_t v11 = *(int *)(type metadata accessor for DateRangeTagFeedGroupCursor() + 20);
  uint64_t v12 = v9 + v11;
  uint64_t v13 = &v10[v11];
  uint64_t v14 = sub_1DFDE7600();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DF12C124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF12C138);
}

uint64_t sub_1DF12C138(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DateRangeTagFeedGroupCursor();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF12C1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF12C1FC);
}

void *sub_1DF12C1FC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DateRangeTagFeedGroupCursor();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DateRangeTagFeedGroupEmitterBatch()
{
  uint64_t result = qword_1EAC28BA8;
  if (!qword_1EAC28BA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF12C2F0()
{
  uint64_t result = type metadata accessor for DateRangeTagFeedGroupCursor();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DateRangeTagFeedGroupEmitterBatch.BatchOutput(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF12C478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateRangeTagFeedGroupEmitterBatch.BatchOutput()
{
  return &type metadata for DateRangeTagFeedGroupEmitterBatch.BatchOutput;
}

uint64_t sub_1DF12C4B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF2A04E8(*a1, *a2);
}

uint64_t sub_1DF12C4BC()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF12C568()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF12C600()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF12C6A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF12C798();
  *a1 = result;
  return result;
}

void sub_1DF12C6D8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000068;
  int v3 = *v1;
  uint64_t v4 = 0x637461427478656ELL;
  unint64_t v5 = 0xEB00000000686374;
  if (v3 == 1) {
    unint64_t v5 = 0xE900000000000068;
  }
  else {
    uint64_t v4 = 0x6142646E61707865;
  }
  BOOL v6 = v3 == 0;
  if (*v1) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 0x637461427473616CLL;
  }
  if (!v6) {
    unint64_t v2 = v5;
  }
  *a1 = v7;
  a1[1] = v2;
}

unint64_t sub_1DF12C744()
{
  unint64_t result = qword_1EAC28BC0;
  if (!qword_1EAC28BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28BC0);
  }
  return result;
}

uint64_t sub_1DF12C798()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t *sub_1DF12C7E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1DEF1F5FC();
        uint64_t v18 = v17;
        uint64_t v19 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v17))
        {
          uint64_t v20 = type metadata accessor for TagFeedGapLocation(0);
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v19 + 16))(a1, a2, v18);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
        }
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
        uint64_t v38 = *(int *)(v37 + 48);
        id v39 = (char *)a1 + v38;
        id v40 = (char *)a2 + v38;
        uint64_t v41 = sub_1DFDFA6C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        break;
      case 2u:
        sub_1DF12CF30();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        break;
      case 3u:
        sub_1DF12D018();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        break;
      case 4u:
        sub_1DEFF8980();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        break;
      case 5u:
        *a1 = *a2;
        swift_retain();
        break;
      case 6u:
        uint64_t v24 = sub_1DFDF9F30();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        break;
      case 7u:
        sub_1DEA8F16C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
        uint64_t v27 = *(int *)(v26 + 48);
        uint64_t v28 = (char *)a1 + v27;
        id v29 = (char *)a2 + v27;
        sub_1DF12CF30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        break;
      case 8u:
        uint64_t v31 = a2[1];
        *a1 = *a2;
        a1[1] = v31;
        swift_bridgeObjectRetain();
        break;
      case 9u:
        sub_1DF12D188();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
        break;
      case 0xAu:
        sub_1DF12D270();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        break;
      case 0xBu:
        sub_1DF12D358();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
        break;
      case 0xCu:
        sub_1DF12D440();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
        break;
      case 0xDu:
        sub_1DF12D528();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        sub_1DEBCA220();
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        sub_1DEF1F5FC();
        uint64_t v12 = v11;
        uint64_t v13 = *(void *)(v11 - 8);
        uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
        swift_bridgeObjectRetain();
        if (v14(v10, 1, v12))
        {
          uint64_t v15 = type metadata accessor for TagFeedGapLocation(0);
          memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for TagFeedGapLocation(uint64_t a1)
{
  return sub_1DE918584(a1, (uint64_t *)&unk_1EBAD6658);
}

void sub_1DF12CF30()
{
  if (!qword_1EBAE9B50)
  {
    sub_1DFDFA100();
    sub_1DEBC9E14();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F80560];
    sub_1DEAD9728((unint64_t *)&unk_1EBAE9C20, MEMORY[0x1E4F80560]);
    sub_1DEAD9728((unint64_t *)&unk_1EBAE9C10, v0);
    unint64_t v1 = sub_1DFDF9B00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAE9B50);
    }
  }
}

void sub_1DF12D018()
{
  if (!qword_1EBAE9AD0)
  {
    sub_1DFDF9760();
    sub_1DEBC9E14();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F80210];
    sub_1DEAD9728(&qword_1EBAE9A60, MEMORY[0x1E4F80210]);
    sub_1DEAD9728((unint64_t *)&unk_1EBAE9A50, v0);
    unint64_t v1 = sub_1DFDF9B00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAE9AD0);
    }
  }
}

void sub_1DF12D100(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1DF12D188()
{
  if (!qword_1EBAE9A98)
  {
    sub_1DFDF7190();
    sub_1DEBC9E14();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F7F338];
    sub_1DEAD9728(&qword_1EBAE9260, MEMORY[0x1E4F7F338]);
    sub_1DEAD9728((unint64_t *)&unk_1EBAE9250, v0);
    unint64_t v1 = sub_1DFDF9B00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAE9A98);
    }
  }
}

void sub_1DF12D270()
{
  if (!qword_1EBAE9B00)
  {
    sub_1DFDF9A50();
    sub_1DEBC9E14();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F80490];
    sub_1DEAD9728(&qword_1EBAE9A90, MEMORY[0x1E4F80490]);
    sub_1DEAD9728((unint64_t *)&unk_1EBAE9A80, v0);
    unint64_t v1 = sub_1DFDF9B00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAE9B00);
    }
  }
}

void sub_1DF12D358()
{
  if (!qword_1EBAE9B20)
  {
    sub_1DFDF9D20();
    sub_1DEBC9E14();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F804D0];
    sub_1DEAD9728(&qword_1EBAE9BC0, MEMORY[0x1E4F804D0]);
    sub_1DEAD9728((unint64_t *)&unk_1EBAE9BB0, v0);
    unint64_t v1 = sub_1DFDF9B00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAE9B20);
    }
  }
}

void sub_1DF12D440()
{
  if (!qword_1EBAE9AB0)
  {
    sub_1DFDF7240();
    sub_1DEBC9E14();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F7F3B8];
    sub_1DEAD9728((unint64_t *)&unk_1EBAE9290, MEMORY[0x1E4F7F3B8]);
    sub_1DEAD9728((unint64_t *)&unk_1EBAE9280, v0);
    unint64_t v1 = sub_1DFDF9B00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAE9AB0);
    }
  }
}

void sub_1DF12D528()
{
  if (!qword_1EBAD1688)
  {
    sub_1DFDF81A0();
    sub_1DEBC9E14();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F7F838];
    sub_1DEAD9728((unint64_t *)&unk_1EBAD1630, MEMORY[0x1E4F7F838]);
    sub_1DEAD9728(&qword_1EBAD1628, v0);
    unint64_t v1 = sub_1DFDF9B00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAD1688);
    }
  }
}

uint64_t sub_1DF12D610(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v4 = a1 + *(int *)(v3 + 48);
      sub_1DEF1F5FC();
      uint64_t v6 = v5;
      uint64_t v17 = *(void *)(v5 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v4, 1, v5);
      if (!result)
      {
        uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
        uint64_t v16 = v4;
        uint64_t v15 = v6;
        goto LABEL_24;
      }
      return result;
    case 1:
      sub_1DEF1F5FC();
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
      }
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      a1 += *(int *)(v10 + 48);
      uint64_t v11 = sub_1DFDFA6C0();
      goto LABEL_23;
    case 2:
      goto LABEL_14;
    case 3:
      sub_1DF12D018();
      goto LABEL_23;
    case 4:
      sub_1DEFF8980();
      goto LABEL_23;
    case 5:
      return swift_release();
    case 6:
      uint64_t v11 = sub_1DFDF9F30();
      goto LABEL_23;
    case 7:
      sub_1DEA8F16C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      a1 += *(int *)(v13 + 48);
LABEL_14:
      sub_1DF12CF30();
      goto LABEL_23;
    case 8:
      return swift_bridgeObjectRelease();
    case 9:
      sub_1DF12D188();
      goto LABEL_23;
    case 10:
      sub_1DF12D270();
      goto LABEL_23;
    case 11:
      sub_1DF12D358();
      goto LABEL_23;
    case 12:
      sub_1DF12D440();
      goto LABEL_23;
    case 13:
      sub_1DF12D528();
LABEL_23:
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      uint64_t v15 = v11;
      uint64_t v16 = a1;
LABEL_24:
      uint64_t result = v14(v16, v15);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1DF12D994(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEF1F5FC();
      uint64_t v15 = v14;
      uint64_t v16 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v14))
      {
        uint64_t v17 = type metadata accessor for TagFeedGapLocation(0);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v35 = *(int *)(v34 + 48);
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      uint64_t v38 = sub_1DFDFA6C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      break;
    case 2u:
      sub_1DF12CF30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      break;
    case 3u:
      sub_1DF12D018();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      break;
    case 4u:
      sub_1DEFF8980();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      break;
    case 5u:
      *a1 = *a2;
      swift_retain();
      break;
    case 6u:
      uint64_t v21 = sub_1DFDF9F30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      break;
    case 7u:
      sub_1DEA8F16C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v24 = *(int *)(v23 + 48);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      sub_1DF12CF30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      break;
    case 8u:
      uint64_t v28 = a2[1];
      *a1 = *a2;
      a1[1] = v28;
      swift_bridgeObjectRetain();
      break;
    case 9u:
      sub_1DF12D188();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
      break;
    case 0xAu:
      sub_1DF12D270();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      break;
    case 0xBu:
      sub_1DF12D358();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
      break;
    case 0xCu:
      sub_1DF12D440();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
      break;
    case 0xDu:
      sub_1DF12D528();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      sub_1DEBCA220();
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      sub_1DEF1F5FC();
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)(v9 - 8);
      uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v8, 1, v10))
      {
        uint64_t v13 = type metadata accessor for TagFeedGapLocation(0);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DF12E070(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DF13C038((uint64_t)a1, type metadata accessor for TagFeedModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1DEF1F5FC();
        uint64_t v14 = v13;
        uint64_t v15 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v13))
        {
          uint64_t v16 = type metadata accessor for TagFeedGapLocation(0);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 16))(a1, a2, v14);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
        uint64_t v33 = *(int *)(v32 + 48);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_1DFDFA6C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        break;
      case 2u:
        sub_1DF12CF30();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        break;
      case 3u:
        sub_1DF12D018();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        break;
      case 4u:
        sub_1DEFF8980();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        break;
      case 5u:
        *a1 = *a2;
        swift_retain();
        break;
      case 6u:
        uint64_t v20 = sub_1DFDF9F30();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        break;
      case 7u:
        sub_1DEA8F16C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
        uint64_t v23 = *(int *)(v22 + 48);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        sub_1DF12CF30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        break;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 9u:
        sub_1DF12D188();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        break;
      case 0xAu:
        sub_1DF12D270();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        break;
      case 0xBu:
        sub_1DF12D358();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        break;
      case 0xCu:
        sub_1DF12D440();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        break;
      case 0xDu:
        sub_1DF12D528();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        sub_1DEBCA220();
        uint64_t v5 = *(int *)(v4 + 48);
        uint64_t v6 = (char *)a1 + v5;
        uint64_t v7 = (char *)a2 + v5;
        sub_1DEF1F5FC();
        uint64_t v9 = v8;
        uint64_t v10 = *(void *)(v8 - 8);
        uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
        swift_bridgeObjectRetain();
        if (v11(v7, 1, v9))
        {
          uint64_t v12 = type metadata accessor for TagFeedGapLocation(0);
          memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for TagFeedModel(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAD3F68);
}

_OWORD *sub_1DF12E7A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      sub_1DEBCA220();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      sub_1DEF1F5FC();
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10))
      {
        uint64_t v13 = type metadata accessor for TagFeedGapLocation(0);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      goto LABEL_21;
    case 1u:
      sub_1DEF1F5FC();
      uint64_t v15 = v14;
      uint64_t v16 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v14))
      {
        uint64_t v17 = type metadata accessor for TagFeedGapLocation(0);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v16 + 32))(a1, a2, v15);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v34 = *(int *)(v33 + 48);
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = sub_1DFDFA6C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      goto LABEL_21;
    case 2u:
      sub_1DF12CF30();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      goto LABEL_21;
    case 3u:
      sub_1DF12D018();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      goto LABEL_21;
    case 4u:
      sub_1DEFF8980();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      goto LABEL_21;
    case 6u:
      uint64_t v21 = sub_1DFDF9F30();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      goto LABEL_21;
    case 7u:
      sub_1DEA8F16C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v24 = *(int *)(v23 + 48);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      sub_1DF12CF30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      goto LABEL_21;
    case 9u:
      sub_1DF12D188();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
      goto LABEL_21;
    case 0xAu:
      sub_1DF12D270();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
      goto LABEL_21;
    case 0xBu:
      sub_1DF12D358();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
      goto LABEL_21;
    case 0xCu:
      sub_1DF12D440();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v31 - 8) + 32))(a1, a2, v31);
      goto LABEL_21;
    case 0xDu:
      sub_1DF12D528();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1DF12EE58(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DF13C038((uint64_t)a1, type metadata accessor for TagFeedModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        sub_1DEBCA220();
        uint64_t v7 = *(int *)(v6 + 48);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        sub_1DEF1F5FC();
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10))
        {
          uint64_t v13 = type metadata accessor for TagFeedGapLocation(0);
          memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
        }
        goto LABEL_22;
      case 1u:
        sub_1DEF1F5FC();
        uint64_t v15 = v14;
        uint64_t v16 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v14))
        {
          uint64_t v17 = type metadata accessor for TagFeedGapLocation(0);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
        uint64_t v34 = *(int *)(v33 + 48);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_1DFDFA6C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        goto LABEL_22;
      case 2u:
        sub_1DF12CF30();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        goto LABEL_22;
      case 3u:
        sub_1DF12D018();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        goto LABEL_22;
      case 4u:
        sub_1DEFF8980();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        goto LABEL_22;
      case 6u:
        uint64_t v21 = sub_1DFDF9F30();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        goto LABEL_22;
      case 7u:
        sub_1DEA8F16C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
        uint64_t v24 = *(int *)(v23 + 48);
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        sub_1DF12CF30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        goto LABEL_22;
      case 9u:
        sub_1DF12D188();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
        goto LABEL_22;
      case 0xAu:
        sub_1DF12D270();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
        goto LABEL_22;
      case 0xBu:
        sub_1DF12D358();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
        goto LABEL_22;
      case 0xCu:
        sub_1DF12D440();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v31 - 8) + 32))(a1, a2, v31);
        goto LABEL_22;
      case 0xDu:
        sub_1DF12D528();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1DF12F534()
{
  type metadata accessor for TagFeedGapLocation(319);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v24 = &v23;
    sub_1DFDFA6C0();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v25 = &v22;
      sub_1DF12CF30();
      if (v3 <= 0x3F)
      {
        uint64_t v26 = *(void *)(v2 - 8) + 64;
        sub_1DF12D018();
        if (v5 <= 0x3F)
        {
          uint64_t v27 = *(void *)(v4 - 8) + 64;
          sub_1DEFF8980();
          if (v7 <= 0x3F)
          {
            uint64_t v28 = *(void *)(v6 - 8) + 64;
            uint64_t v29 = MEMORY[0x1E4FBADB0] + 64;
            uint64_t v8 = sub_1DFDF9F30();
            if (v9 <= 0x3F)
            {
              uint64_t v30 = *(void *)(v8 - 8) + 64;
              sub_1DEA8F16C();
              if (v10 <= 0x3F)
              {
                swift_getTupleTypeLayout2();
                uint64_t v31 = &v21;
                uint64_t v32 = &unk_1DFE415F8;
                sub_1DF12D188();
                if (v12 <= 0x3F)
                {
                  uint64_t v33 = *(void *)(v11 - 8) + 64;
                  sub_1DF12D270();
                  if (v14 <= 0x3F)
                  {
                    uint64_t v34 = *(void *)(v13 - 8) + 64;
                    sub_1DF12D358();
                    if (v16 <= 0x3F)
                    {
                      uint64_t v35 = *(void *)(v15 - 8) + 64;
                      sub_1DF12D440();
                      if (v18 <= 0x3F)
                      {
                        uint64_t v36 = *(void *)(v17 - 8) + 64;
                        sub_1DF12D528();
                        if (v20 <= 0x3F)
                        {
                          uint64_t v37 = *(void *)(v19 - 8) + 64;
                          swift_initEnumMetadataMultiPayload();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_1DF12F8A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_1DEF1F5FC();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t sub_1DF12F9F4(uint64_t a1)
{
  sub_1DEF1F5FC();
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v2);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1DF12FAC4(void *a1, const void *a2, uint64_t a3)
{
  sub_1DEF1F5FC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_1DF12FBD4(void *a1, void *a2, uint64_t a3)
{
  sub_1DEF1F5FC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(a1, a2, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(a1, a2, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

void *sub_1DF12FD48(void *a1, const void *a2, uint64_t a3)
{
  sub_1DEF1F5FC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_1DF12FE58(void *a1, void *a2, uint64_t a3)
{
  sub_1DEF1F5FC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(a1, a2, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(a1, a2, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_1DF12FFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF12FFE0);
}

uint64_t sub_1DF12FFE0(uint64_t a1, uint64_t a2)
{
  sub_1DEF1F5FC();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DF13004C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF130060);
}

uint64_t sub_1DF130060(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1DEF1F5FC();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1DF1300E0(uint64_t a1)
{
  sub_1DEF1F5FC();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1DF130148(uint64_t a1, uint64_t a2)
{
  sub_1DEF1F5FC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

void sub_1DF1301B8()
{
  sub_1DEF1F5FC();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t sub_1DF130234()
{
  sub_1DF12D528();
  uint64_t v71 = *(void *)(v0 - 8);
  uint64_t v72 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v70 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D440();
  uint64_t v68 = *(void *)(v2 - 8);
  uint64_t v69 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v67 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D358();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v64 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D270();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v61 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D188();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v56 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA8F16C();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v55 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1DFDF9F30();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v52 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF8980();
  uint64_t v14 = v13;
  uint64_t v51 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D018();
  uint64_t v18 = v17;
  uint64_t v50 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12CF30();
  uint64_t v22 = v21;
  uint64_t v73 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1DFDFA6C0();
  uint64_t v49 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v74, (uint64_t)v30, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v34 = v49;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v27, &v30[*(int *)(v33 + 48)], v25);
      uint64_t v31 = sub_1DFDFA660();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v25);
      sub_1DF13C038((uint64_t)v30, type metadata accessor for TagFeedGapLocation);
      return v31;
    case 2u:
      uint64_t v35 = v73;
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v24, v30, v22);
      uint64_t v31 = sub_1DFDF9A60();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v22);
      return v31;
    case 3u:
      uint64_t v36 = v50;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v20, v30, v18);
      uint64_t v31 = sub_1DFDF9A60();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v18);
      return v31;
    case 4u:
      uint64_t v37 = v51;
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v16, v30, v14);
      uint64_t v31 = sub_1DFDF9A60();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v14);
      return v31;
    case 5u:
      uint64_t v31 = sub_1DFDF06B0();
      swift_release();
      return v31;
    case 6u:
      uint64_t v38 = v53;
      id v39 = v52;
      uint64_t v40 = v54;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v52, v30, v54);
      uint64_t v41 = sub_1DFDF9F00();
      goto LABEL_17;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v43 = &v30[*(int *)(v42 + 48)];
      uint64_t v45 = v57;
      uint64_t v44 = v58;
      uint64_t v46 = v55;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v55, v30, v58);
      uint64_t v31 = sub_1DFDF9A60();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v43, v22);
      return v31;
    case 8u:
      return *(void *)v30;
    case 9u:
      uint64_t v38 = v59;
      uint64_t v40 = v60;
      id v39 = v56;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v30, v60);
      goto LABEL_16;
    case 0xAu:
      id v39 = v61;
      uint64_t v38 = v62;
      uint64_t v40 = v63;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v30, v63);
      goto LABEL_16;
    case 0xBu:
      id v39 = v64;
      uint64_t v38 = v65;
      uint64_t v40 = v66;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v64, v30, v66);
      goto LABEL_16;
    case 0xCu:
      id v39 = v67;
      uint64_t v38 = v68;
      uint64_t v40 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v30, v69);
      goto LABEL_16;
    case 0xDu:
      id v39 = v70;
      uint64_t v38 = v71;
      uint64_t v40 = v72;
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v30, v72);
LABEL_16:
      uint64_t v41 = sub_1DFDF9A60();
LABEL_17:
      uint64_t v31 = v41;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
      break;
    default:
      uint64_t v31 = *(void *)v30;
      sub_1DEBCA220();
      sub_1DF13C038((uint64_t)&v30[*(int *)(v32 + 48)], type metadata accessor for TagFeedGapLocation);
      break;
  }
  return v31;
}

uint64_t sub_1DF130C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DEAD9728(&qword_1EBAD3F30, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1DF130CC4()
{
  return sub_1DEAD9728(&qword_1EBAD3F60, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
}

uint64_t sub_1DF130D0C()
{
  return sub_1DEAD9728(&qword_1EBAD3F58, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
}

uint64_t sub_1DF130D54()
{
  return sub_1DEAD9728(&qword_1EBAD3F28, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
}

uint64_t sub_1DF130D9C()
{
  return sub_1DEAD9728(&qword_1EBAD3F30, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
}

uint64_t sub_1DF130DE4()
{
  return sub_1DEAD9728(&qword_1EBAD3F38, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
}

uint64_t sub_1DF130E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v144 = a1;
  uint64_t v2 = sub_1DFDF7190();
  uint64_t v140 = *(void *)(v2 - 8);
  uint64_t v141 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v138 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D188();
  uint64_t v139 = v4;
  uint64_t v137 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v136 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1DFDF6870();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v91 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1DFDF6630();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v94 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1DFDF6AC0();
  uint64_t v110 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v111 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA8F16C();
  uint64_t v114 = v9;
  uint64_t v113 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v109 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1DFDF81A0();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v105 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D528();
  uint64_t v106 = v12;
  uint64_t v104 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v103 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDF7240();
  uint64_t v134 = *(void *)(v14 - 8);
  uint64_t v135 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v132 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D440();
  uint64_t v133 = v16;
  uint64_t v131 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v130 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DFDF9D20();
  uint64_t v128 = *(void *)(v18 - 8);
  uint64_t v129 = v18;
  MEMORY[0x1F4188790](v18);
  long long v126 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D358();
  uint64_t v127 = v20;
  uint64_t v125 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v124 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1DFDF9A50();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v99 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D270();
  uint64_t v100 = v23;
  uint64_t v98 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v97 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_1DFDFA250();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v120 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF8980();
  uint64_t v121 = v26;
  uint64_t v119 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  char v118 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1DFDF9760();
  uint64_t v117 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D018();
  uint64_t v32 = v31;
  uint64_t v116 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1DFDFA100();
  uint64_t v115 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v90 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12CF30();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v142 = v38;
  uint64_t v143 = v39;
  MEMORY[0x1F4188790](v38);
  uint64_t v41 = (char *)&v90 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (char *)&v90 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1DF132140())
  {
    uint64_t v45 = sub_1DFDF5740();
    uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
    uint64_t v47 = v45;
    uint64_t v48 = v144;
    return v46(v48, 1, 1, v47);
  }
  else
  {
    sub_1DF13C0FC(v1, (uint64_t)v44, type metadata accessor for TagFeedModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
        uint64_t v65 = &v44[*(int *)(v64 + 48)];
        uint64_t v66 = sub_1DFDFA6C0();
        (*(void (**)(char *, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
        uint64_t v67 = type metadata accessor for TagFeedGapLocation;
        goto LABEL_17;
      case 2u:
        uint64_t v51 = v142;
        uint64_t v52 = v143;
        (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v41, v44, v142);
        sub_1DFDF9A80();
        sub_1DFDFA0C0();
        (*(void (**)(char *, uint64_t))(v115 + 8))(v37, v35);
        return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v41, v51);
      case 3u:
        uint64_t v53 = v116;
        (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v34, v44, v32);
        sub_1DFDF9A80();
        sub_1DFDF9710();
        (*(void (**)(char *, uint64_t))(v117 + 8))(v30, v28);
        return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v34, v32);
      case 4u:
        uint64_t v54 = v119;
        uint64_t v55 = v118;
        uint64_t v56 = v121;
        (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v44, v121);
        uint64_t v57 = v120;
        sub_1DFDF9A80();
        sub_1DFDFA220();
        uint64_t v58 = *(void (**)(char *, void))(v122 + 8);
        uint64_t v59 = v57;
        uint64_t v60 = &v145;
        goto LABEL_24;
      case 5u:
        swift_release();
        goto LABEL_21;
      case 6u:
        uint64_t v67 = type metadata accessor for TagFeedModel;
LABEL_17:
        sub_1DF13C038((uint64_t)v44, v67);
        goto LABEL_21;
      case 7u:
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
        uint64_t v69 = &v44[*(int *)(v68 + 48)];
        uint64_t v70 = v113;
        uint64_t v71 = v109;
        uint64_t v72 = v114;
        (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v109, v44, v114);
        uint64_t v73 = v111;
        sub_1DFDF9A80();
        uint64_t v74 = v110;
        uint64_t v75 = v112;
        int v76 = (*(uint64_t (**)(char *, uint64_t))(v110 + 88))(v73, v112);
        if (v76 == *MEMORY[0x1E4F7B0B0])
        {
          (*(void (**)(char *, uint64_t))(v74 + 96))(v73, v75);
          uint64_t v77 = v95;
          uint64_t v78 = v94;
          uint64_t v79 = v96;
          (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v73, v96);
          sub_1DFDF6600();
          (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
          (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
          return (*(uint64_t (**)(char *, uint64_t))(v143 + 8))(v69, v142);
        }
        else
        {
          uint64_t v84 = v144;
          uint64_t v85 = v142;
          if (v76 == *MEMORY[0x1E4F7B0A8])
          {
            (*(void (**)(char *, uint64_t))(v74 + 96))(v73, v75);
            uint64_t v86 = v92;
            uint64_t v87 = v91;
            uint64_t v88 = v93;
            (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v73, v93);
            sub_1DFDF6860();
            (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
            (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
            uint64_t v89 = sub_1DFDF5740();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v84, 1, 1, v89);
            (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
          }
          return (*(uint64_t (**)(char *, uint64_t))(v143 + 8))(v69, v85);
        }
      case 8u:
        swift_bridgeObjectRelease();
        goto LABEL_21;
      case 9u:
        uint64_t v55 = v136;
        uint64_t v54 = v137;
        uint64_t v56 = v139;
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v136, v44, v139);
        uint64_t v61 = v138;
        sub_1DFDF9A80();
        sub_1DFDF7130();
        uint64_t v63 = v140;
        uint64_t v62 = v141;
        goto LABEL_13;
      case 0xAu:
        uint64_t v54 = v98;
        uint64_t v55 = v97;
        uint64_t v56 = v100;
        (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v44, v100);
        uint64_t v82 = v99;
        sub_1DFDF9A80();
        sub_1DFDF9A00();
        uint64_t v58 = *(void (**)(char *, void))(v101 + 8);
        uint64_t v59 = v82;
        uint64_t v60 = &v134;
        goto LABEL_24;
      case 0xBu:
        uint64_t v55 = v124;
        uint64_t v54 = v125;
        uint64_t v56 = v127;
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v124, v44, v127);
        uint64_t v61 = v126;
        sub_1DFDF9A80();
        sub_1DFDF9D10();
        uint64_t v63 = v128;
        uint64_t v62 = v129;
        goto LABEL_13;
      case 0xCu:
        uint64_t v55 = v130;
        uint64_t v54 = v131;
        uint64_t v56 = v133;
        (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v130, v44, v133);
        uint64_t v61 = v132;
        sub_1DFDF9A80();
        sub_1DFDF7230();
        uint64_t v63 = v134;
        uint64_t v62 = v135;
LABEL_13:
        (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v62);
        goto LABEL_25;
      case 0xDu:
        uint64_t v54 = v104;
        uint64_t v55 = v103;
        uint64_t v56 = v106;
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v44, v106);
        uint64_t v83 = v105;
        sub_1DFDF9A80();
        sub_1DFDF8190();
        uint64_t v58 = *(void (**)(char *, void))(v107 + 8);
        uint64_t v59 = v83;
        uint64_t v60 = &v140;
LABEL_24:
        v58(v59, *(v60 - 32));
LABEL_25:
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v55, v56);
        break;
      default:
        swift_bridgeObjectRelease();
        sub_1DEBCA220();
        sub_1DF13C038((uint64_t)&v44[*(int *)(v50 + 48)], type metadata accessor for TagFeedGapLocation);
LABEL_21:
        uint64_t v80 = v144;
        uint64_t v81 = sub_1DFDF5740();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 1, 1, v81);
        break;
    }
  }
  return result;
}

uint64_t sub_1DF132140()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DFDF7CF0();
  uint64_t v96 = *(void *)(v2 - 8);
  uint64_t v97 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v98 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF98C0();
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v92 = (char **)((char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF12CF30();
  uint64_t v89 = *(void *)(v6 - 8);
  uint64_t v90 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v88 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TagFeedModel(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v91 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v88 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v88 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v88 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v88 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v88 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v88 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)&v88 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  uint64_t v34 = (char *)&v88 - v33;
  MEMORY[0x1F4188790](v32);
  uint64_t v95 = v1;
  uint64_t v35 = v1;
  uint64_t v37 = (char *)&v88 - v36;
  sub_1DF13C0FC(v35, (uint64_t)&v88 - v36, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v40 = v91;
      sub_1DF13C0FC((uint64_t)v37, v91, type metadata accessor for TagFeedModel);
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v42 = v40 + *(int *)(v41 + 48);
      uint64_t v43 = sub_1DFDFA6C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
      sub_1DF13C038(v40, type metadata accessor for TagFeedGapLocation);
      goto LABEL_18;
    case 2u:
      sub_1DF13C0FC((uint64_t)v37, (uint64_t)v34, type metadata accessor for TagFeedModel);
      uint64_t v45 = v88;
      uint64_t v44 = v89;
      uint64_t v46 = v90;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v34, v90);
      sub_1DFDF9AA0();
      id v47 = v99;
      uint64_t v48 = (void *)sub_1DFDFEBA0();

      LODWORD(v47) = objc_msgSend(v48, sel_isMySports);
      swift_unknownObjectRelease();
      if (v47)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
      }
      else
      {
        sub_1DFDF9AA0();
        id v86 = v99;
        id v87 = objc_msgSend(v99, sel_feedType);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
        if (v87 != (id)11)
        {
LABEL_15:
          sub_1DF13C038((uint64_t)v37, type metadata accessor for TagFeedModel);
          goto LABEL_24;
        }
      }
LABEL_18:
      sub_1DF13C038((uint64_t)v37, type metadata accessor for TagFeedModel);
      int v76 = v92;
      sub_1DF134C2C(v92);
      uint64_t v77 = v98;
      sub_1DFDF9790();
      (*(void (**)(void *, uint64_t))(v93 + 8))(v76, v94);
      uint64_t v79 = v96;
      uint64_t v78 = v97;
      if ((*(unsigned int (**)(char *, uint64_t))(v96 + 88))(v77, v97) != *MEMORY[0x1E4F7F608])
      {
        (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v78);
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v79 + 96))(v77, v78);
      uint64_t v80 = sub_1DFDF83D0();
      uint64_t v81 = *(void *)(v80 - 8);
      int v82 = (*(uint64_t (**)(char *, uint64_t))(v81 + 88))(v77, v80);
      int v83 = *MEMORY[0x1E4F7F910];
      (*(void (**)(char *, uint64_t))(v81 + 8))(v77, v80);
      if (v82 != v83)
      {
LABEL_24:
        char v84 = 0;
        return v84 & 1;
      }
      sub_1DFDE7FA0();
      sub_1DFDE7F80();
      if (qword_1EBAC0DE0 != -1) {
        swift_once();
      }
      char v84 = sub_1DFDE7F90();
      swift_release();
      return v84 & 1;
    case 3u:
      sub_1DF13C0FC((uint64_t)v37, (uint64_t)v31, type metadata accessor for TagFeedModel);
      sub_1DF12D018();
      uint64_t v50 = v49;
      sub_1DFDF9AA0();
      id v51 = v99;
      uint64_t v52 = v37;
      id v53 = objc_msgSend(v99, sel_feedType);

      (*(void (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8))(v31, v50);
      goto LABEL_14;
    case 4u:
      sub_1DF13C0FC((uint64_t)v37, (uint64_t)v28, type metadata accessor for TagFeedModel);
      sub_1DEFF8980();
      uint64_t v55 = v54;
      sub_1DFDF9AA0();
      id v56 = v99;
      id v57 = objc_msgSend(v99, sel_feedType);

      (*(void (**)(char *, uint64_t))(*(void *)(v55 - 8) + 8))(v28, v55);
      goto LABEL_17;
    case 5u:
      sub_1DF13C0FC((uint64_t)v37, v91, type metadata accessor for TagFeedModel);
      swift_release();
      goto LABEL_18;
    case 6u:
    case 9u:
      goto LABEL_18;
    case 7u:
      sub_1DF13C0FC((uint64_t)v37, (uint64_t)v25, type metadata accessor for TagFeedModel);
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v59 = &v25[*(int *)(v58 + 48)];
      uint64_t v60 = v90;
      sub_1DFDF9AA0();
      id v61 = v99;
      id v57 = objc_msgSend(v99, sel_feedType);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v59, v60);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v62 - 8) + 8))(v25, v62);
      goto LABEL_17;
    case 8u:
      sub_1DF13C0FC((uint64_t)v37, v91, type metadata accessor for TagFeedModel);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 0xAu:
      sub_1DF13C0FC((uint64_t)v37, (uint64_t)v22, type metadata accessor for TagFeedModel);
      sub_1DF12D270();
      uint64_t v64 = v63;
      sub_1DFDF9AA0();
      id v65 = v99;
      id v57 = objc_msgSend(v99, sel_feedType);

      (*(void (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v22, v64);
      goto LABEL_17;
    case 0xBu:
      sub_1DF13C0FC((uint64_t)v37, (uint64_t)v19, type metadata accessor for TagFeedModel);
      sub_1DF12D358();
      uint64_t v67 = v66;
      sub_1DFDF9AA0();
      id v68 = v99;
      id v57 = objc_msgSend(v99, sel_feedType);

      (*(void (**)(char *, uint64_t))(*(void *)(v67 - 8) + 8))(v19, v67);
      goto LABEL_17;
    case 0xCu:
      sub_1DF13C0FC((uint64_t)v37, (uint64_t)v16, type metadata accessor for TagFeedModel);
      sub_1DF12D440();
      uint64_t v70 = v69;
      sub_1DFDF9AA0();
      id v71 = v99;
      uint64_t v52 = v37;
      id v53 = objc_msgSend(v99, sel_feedType);

      (*(void (**)(char *, uint64_t))(*(void *)(v70 - 8) + 8))(v16, v70);
LABEL_14:
      BOOL v72 = v53 == (id)11;
      uint64_t v37 = v52;
      if (!v72) {
        goto LABEL_15;
      }
      goto LABEL_18;
    case 0xDu:
      sub_1DF13C0FC((uint64_t)v37, (uint64_t)v13, type metadata accessor for TagFeedModel);
      sub_1DF12D528();
      uint64_t v74 = v73;
      sub_1DFDF9AA0();
      id v75 = v99;
      id v57 = objc_msgSend(v99, sel_feedType);

      (*(void (**)(char *, uint64_t))(*(void *)(v74 - 8) + 8))(v13, v74);
LABEL_17:
      if (v57 == (id)11) {
        goto LABEL_18;
      }
      goto LABEL_15;
    default:
      uint64_t v38 = v91;
      sub_1DF13C0FC((uint64_t)v37, v91, type metadata accessor for TagFeedModel);
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      sub_1DF13C038(v38 + *(int *)(v39 + 48), type metadata accessor for TagFeedGapLocation);
      goto LABEL_18;
  }
}

uint64_t sub_1DF132D0C()
{
  uint64_t v1 = sub_1DFDF7190();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D188();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v0, (uint64_t)v12, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v19 = &v12[*(int *)(v18 + 48)];
      uint64_t v20 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      uint64_t v14 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_6;
    case 2u:
    case 3u:
    case 4u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
      sub_1DF13C038((uint64_t)v12, type metadata accessor for TagFeedModel);
      char v13 = 1;
      return v13 & 1;
    case 5u:
      char v13 = sub_1DFDF06D0();
      swift_release();
      return v13 & 1;
    case 6u:
    case 8u:
    case 0xDu:
      uint64_t v14 = type metadata accessor for TagFeedModel;
LABEL_6:
      uint64_t v17 = v14;
      uint64_t v16 = (uint64_t)v12;
      goto LABEL_7;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v23 = &v12[*(int *)(v22 + 48)];
      sub_1DF12CF30();
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v12, v25);
      char v13 = 1;
      return v13 & 1;
    case 9u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
      sub_1DFDF9A80();
      char v13 = sub_1DFDF7160();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v13 & 1;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v16 = (uint64_t)&v12[*(int *)(v15 + 48)];
      uint64_t v17 = type metadata accessor for TagFeedGapLocation;
LABEL_7:
      sub_1DF13C038(v16, v17);
      char v13 = 0;
      return v13 & 1;
  }
}

unint64_t sub_1DF133164()
{
  uint64_t v1 = sub_1DFDF6AC0();
  uint64_t v54 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA8F16C();
  unint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v59 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF0E1C30(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1DFDF0F20();
  uint64_t v64 = *(void *)(v56 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v56);
  id v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v58 = (char *)&v53 - v10;
  uint64_t v11 = sub_1DFDFBA00();
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDFA100();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12CF30();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v65 = v18;
  uint64_t v66 = v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1DF132140() & 1) == 0)
  {
    sub_1DF13C0FC(v0, (uint64_t)v24, type metadata accessor for TagFeedModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v26 = v66;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
        uint64_t v34 = &v24[*(int *)(v33 + 48)];
        uint64_t v35 = sub_1DFDFA6C0();
        (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
        uint64_t v27 = type metadata accessor for TagFeedGapLocation;
        goto LABEL_4;
      case 2:
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v21, v24, v65);
        uint64_t v53 = v0;
        sub_1DFDF9A80();
        uint64_t v36 = sub_1DFDFA0D0();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        sub_1DF13C098(0, (unint64_t *)&unk_1EBABB430, MEMORY[0x1E4FABF58], MEMORY[0x1E4FBBE00]);
        uint64_t v37 = *(void *)(v64 + 72);
        unint64_t v38 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
        uint64_t v61 = 2 * v37;
        unint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1DFE0CC10;
        unint64_t v60 = v38;
        swift_unknownObjectRetain();
        sub_1DF130234();
        sub_1DFDFB9E0();
        sub_1DFDF0ED0();
        uint64_t v39 = v63;
        uint64_t v40 = *(void (**)(char *, uint64_t))(v62 + 8);
        v40(v13, v63);
        uint64_t v62 = v37;
        swift_unknownObjectRetain();
        sub_1DF130234();
        sub_1DFDFB9E0();
        sub_1DFDF0F10();
        v40(v13, v39);
        uint64_t v41 = v64;
        sub_1DFDF0EE0();
        uint64_t v42 = (uint64_t)v55;
        sub_1DFDF0EC0();
        uint64_t v43 = v56;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v56) == 1)
        {
          (*(void (**)(char *, uint64_t))(v66 + 8))(v21, v65);
          swift_unknownObjectRelease();
          sub_1DF13C038(v42, (uint64_t (*)(void))sub_1DF0E1C30);
        }
        else
        {
          uint64_t v63 = v36;
          id v47 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
          uint64_t v48 = v58;
          v47(v58, v42, v43);
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v57, v48, v43);
          unint64_t v50 = *(void *)(v30 + 16);
          unint64_t v49 = *(void *)(v30 + 24);
          if (v50 >= v49 >> 1) {
            unint64_t v30 = sub_1DEE1A22C(v49 > 1, v50 + 1, 1, v30);
          }
          uint64_t v51 = v65;
          uint64_t v52 = v66;
          *(void *)(v30 + 16) = v50 + 1;
          v47((char *)(v30 + v60 + v50 * v62), (uint64_t)v57, v43);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v58, v43);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v21, v51);
        }
        return v30;
      case 3:
      case 4:
      case 6:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
        uint64_t v27 = type metadata accessor for TagFeedModel;
LABEL_4:
        uint64_t v28 = v27;
        uint64_t v29 = (uint64_t)v24;
        goto LABEL_5;
      case 5:
        swift_release();
        return MEMORY[0x1E4FBC860];
      case 7:
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
        uint64_t v58 = &v24[*(int *)(v44 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v59, v24, v61);
        uint64_t v53 = v0;
        sub_1DFDF9A80();
        sub_1DFDF6AB0();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v3, v1);
        sub_1DF13C098(0, (unint64_t *)&unk_1EBABB430, MEMORY[0x1E4FABF58], MEMORY[0x1E4FBBE00]);
        uint64_t v64 = 2 * *(void *)(v64 + 72);
        unint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1DFE0CC10;
        swift_unknownObjectRetain();
        sub_1DF130234();
        sub_1DFDFB9E0();
        sub_1DFDF0ED0();
        uint64_t v45 = v63;
        uint64_t v46 = *(void (**)(char *, uint64_t))(v62 + 8);
        v46(v13, v63);
        swift_unknownObjectRetain();
        sub_1DF130234();
        sub_1DFDFB9E0();
        sub_1DFDF0F10();
        v46(v13, v45);
        sub_1DFDF0EE0();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v58, v65);
        return v30;
      case 8:
        swift_bridgeObjectRelease();
        return MEMORY[0x1E4FBC860];
      default:
        swift_bridgeObjectRelease();
        sub_1DEBCA220();
        uint64_t v29 = (uint64_t)&v24[*(int *)(v32 + 48)];
        uint64_t v28 = type metadata accessor for TagFeedGapLocation;
LABEL_5:
        sub_1DF13C038(v29, v28);
        break;
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DF133BD8()
{
  uint64_t v1 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v0, (uint64_t)v3, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v9 = &v3[*(int *)(v8 + 48)];
      uint64_t v10 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      uint64_t v11 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_10;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v4 = type metadata accessor for TagFeedModel;
      uint64_t v5 = (uint64_t)v3;
      goto LABEL_3;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      char v13 = &v3[*(int *)(v12 + 48)];
      sub_1DF12CF30();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v3, v15);
      return 1;
    case 8u:
      uint64_t v11 = type metadata accessor for TagFeedModel;
LABEL_10:
      sub_1DF13C038((uint64_t)v3, v11);
      return 0;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v5 = (uint64_t)&v3[*(int *)(v7 + 48)];
      uint64_t v4 = type metadata accessor for TagFeedGapLocation;
LABEL_3:
      sub_1DF13C038(v5, v4);
      return 1;
  }
}

uint64_t sub_1DF133E98()
{
  uint64_t v1 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v0, (uint64_t)v3, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v11 = &v3[*(int *)(v10 + 48)];
      uint64_t v12 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      uint64_t v4 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_3;
    case 2u:
    case 3u:
    case 4u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v4 = type metadata accessor for TagFeedModel;
LABEL_3:
      uint64_t v5 = v4;
      uint64_t v6 = (uint64_t)v3;
      goto LABEL_4;
    case 5u:
      swift_release();
      return MEMORY[0x1E4FBC860];
    case 6u:
      sub_1DF13C098(0, &qword_1EBABB450, MEMORY[0x1E4FAC1E0], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = sub_1DFDF17E0();
      uint64_t v14 = *(void *)(v13 - 8);
      unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1DFE0B250;
      (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v7 + v15, *MEMORY[0x1E4FAC1D8], v13);
      sub_1DF13C038((uint64_t)v3, type metadata accessor for TagFeedModel);
      return v7;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v17 = &v3[*(int *)(v16 + 48)];
      sub_1DF12CF30();
      (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v3, v19);
      return MEMORY[0x1E4FBC860];
    case 8u:
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v6 = (uint64_t)&v3[*(int *)(v9 + 48)];
      uint64_t v5 = type metadata accessor for TagFeedGapLocation;
LABEL_4:
      sub_1DF13C038(v6, v5);
      return MEMORY[0x1E4FBC860];
  }
}

uint64_t sub_1DF134260@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF1342B0(MEMORY[0x1E4FABF78], MEMORY[0x1E4FABF88], MEMORY[0x1E4FABF80], MEMORY[0x1E4F7F330], a1);
}

uint64_t sub_1DF1342B0@<X0>(unsigned int *a1@<X0>, uint64_t (*a2)(void)@<X1>, unsigned int *a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v70 = a4;
  int v76 = a3;
  uint64_t v77 = a2;
  id v75 = a1;
  uint64_t v6 = v5;
  uint64_t v78 = a5;
  sub_1DED22C78(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v67 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v74 = (char *)&v66 - v10;
  uint64_t v11 = sub_1DFDFA250();
  uint64_t v69 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF8980();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  uint64_t v73 = v15;
  MEMORY[0x1F4188790](v14);
  id v71 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DFDF7190();
  uint64_t v68 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D188();
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v6, (uint64_t)v27, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v36 = &v27[*(int *)(v35 + 48)];
      uint64_t v37 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
      uint64_t v31 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_7;
    case 2u:
    case 3u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
      sub_1DF13C038((uint64_t)v27, type metadata accessor for TagFeedModel);
      goto LABEL_3;
    case 4u:
      uint64_t v39 = v72;
      uint64_t v38 = v73;
      uint64_t v40 = v71;
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v71, v27, v72);
      sub_1DFDF9A80();
      uint64_t v41 = (uint64_t)v74;
      sub_1DFDFA1F0();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v13, v11);
      uint64_t v42 = sub_1DFDFC200();
      uint64_t v43 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1) {
        goto LABEL_10;
      }
      uint64_t v57 = v67;
      sub_1DF13C0FC(v41, v67, (uint64_t (*)(void))sub_1DED22C78);
      int v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 88))(v57, v42);
      if (v58 == *MEMORY[0x1E4F812C8])
      {
        (*(void (**)(uint64_t, uint64_t))(v43 + 96))(v57, v42);
        swift_release();
        sub_1DFDF9AA0();
        id v59 = v79;
        id v60 = objc_msgSend(v79, sel_alternativeFeedDescriptor);

        if (v60)
        {
          id v61 = objc_msgSend(v60, sel_feedConfiguration);

          (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v39);
          BOOL v62 = v61 == (id)4;
          goto LABEL_27;
        }
        goto LABEL_10;
      }
      if (v58 != *MEMORY[0x1E4F812B8])
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v39);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v57, v42);
        goto LABEL_11;
      }
      (*(void (**)(uint64_t, uint64_t))(v43 + 96))(v57, v42);
      swift_release();
      sub_1DFDF9AA0();
      id v63 = v79;
      id v64 = objc_msgSend(v79, sel_alternativeFeedDescriptor);

      if (!v64)
      {
LABEL_10:
        (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v39);
LABEL_11:
        uint64_t v44 = v77;
        uint64_t v45 = v78;
LABEL_12:
        uint64_t v46 = v76;
        goto LABEL_13;
      }
      id v65 = objc_msgSend(v64, sel_feedConfiguration);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v39);
      BOOL v62 = v65 == (id)7;
LABEL_27:
      uint64_t v44 = v77;
      uint64_t v45 = v78;
      if (!v62) {
        goto LABEL_12;
      }
      uint64_t v46 = v75;
LABEL_13:
      uint64_t v47 = *v46;
      uint64_t v48 = v44(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v45, v47, v48);
      return sub_1DF13C038(v41, (uint64_t (*)(void))sub_1DED22C78);
    case 5u:
      swift_release();
      goto LABEL_17;
    case 6u:
    case 0xDu:
      uint64_t v31 = type metadata accessor for TagFeedModel;
LABEL_7:
      uint64_t v34 = v31;
      uint64_t v33 = (uint64_t)v27;
      goto LABEL_8;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v51 = &v27[*(int *)(v50 + 48)];
      sub_1DF12CF30();
      (*(void (**)(char *, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v53 - 8) + 8))(v27, v53);
LABEL_3:
      uint64_t v28 = v77;
      uint64_t v29 = v78;
      unint64_t v30 = v76;
      goto LABEL_18;
    case 8u:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 9u:
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v27, v21);
      uint64_t v56 = sub_1DFDF9A80();
      v70(v56);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v19, v17);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v33 = (uint64_t)&v27[*(int *)(v32 + 48)];
      uint64_t v34 = type metadata accessor for TagFeedGapLocation;
LABEL_8:
      sub_1DF13C038(v33, v34);
LABEL_17:
      uint64_t v28 = v77;
      uint64_t v29 = v78;
      unint64_t v30 = v75;
LABEL_18:
      uint64_t v54 = *v30;
      uint64_t v55 = v28(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 104))(v29, v54, v55);
  }
}

uint64_t sub_1DF134BDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF1342B0(MEMORY[0x1E4FABF18], MEMORY[0x1E4FABF28], MEMORY[0x1E4FABF20], MEMORY[0x1E4F7F328], a1);
}

uint64_t sub_1DF134C2C@<X0>(void *a1@<X8>)
{
  uint64_t v141 = a1;
  sub_1DF12D528();
  uint64_t v137 = *(void *)(v1 - 8);
  uint64_t v138 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v135 = (char *)&v106 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D440();
  uint64_t v133 = *(void *)(v3 - 8);
  uint64_t v134 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v130 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D358();
  uint64_t v127 = *(void *)(v5 - 8);
  uint64_t v128 = v5;
  MEMORY[0x1F4188790](v5);
  long long v126 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D270();
  uint64_t v125 = v7;
  uint64_t v123 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v121 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D188();
  uint64_t v120 = v9;
  uint64_t v119 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v118 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDFA0A0();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v136 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1DFDF9820();
  uint64_t v129 = *(void *)(v132 - 8);
  MEMORY[0x1F4188790](v132);
  uint64_t v131 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF13C098(0, &qword_1EBAE9270, MEMORY[0x1E4F7F398], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v124 = (char *)&v106 - v16;
  sub_1DF13C098(0, &qword_1EBAE9540, MEMORY[0x1E4F7F5C0], v14);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v122 = (char *)&v106 - v18;
  sub_1DF13C098(0, &qword_1EBAA8660, MEMORY[0x1E4F7A860], v14);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v117 = (char *)&v106 - v20;
  uint64_t v113 = sub_1DFDF6AC0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v113);
  uint64_t v111 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v110 = (char *)&v106 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v107 = (char *)&v106 - v25;
  sub_1DEA8F16C();
  uint64_t v116 = v26;
  uint64_t v115 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v114 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEFF8980();
  uint64_t v29 = v28;
  uint64_t v109 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D018();
  uint64_t v33 = v32;
  uint64_t v108 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v35 = (char *)&v106 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12CF30();
  uint64_t v139 = *(void *)(v36 - 8);
  uint64_t v140 = v36;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v106 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1DFDFA6C0();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v42 = (char *)&v106 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v106 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC((uint64_t)v142, (uint64_t)v45, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v42, &v45[*(int *)(v47 + 48)], v39);
      sub_1DFDFA660();
      sub_1DFDFA690();
      sub_1DFDFA670();
      uint64_t v48 = v141;
      sub_1DFDF71C0();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
      uint64_t v49 = *MEMORY[0x1E4F80248];
      uint64_t v50 = sub_1DFDF98C0();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v48, v49, v50);
      return sub_1DF13C038((uint64_t)v45, type metadata accessor for TagFeedGapLocation);
    case 2u:
      uint64_t v52 = v139;
      uint64_t v53 = v45;
      uint64_t v54 = v140;
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v38, v53, v140);
      uint64_t v55 = v141;
      sub_1DFDF9A80();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v54);
      uint64_t v56 = (unsigned int *)MEMORY[0x1E4F80328];
      goto LABEL_17;
    case 3u:
      uint64_t v57 = v108;
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v35, v45, v33);
      uint64_t v55 = v141;
      sub_1DFDF9A80();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v33);
      uint64_t v56 = (unsigned int *)MEMORY[0x1E4F802E0];
      goto LABEL_17;
    case 4u:
      uint64_t v58 = v109;
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v31, v45, v29);
      uint64_t v55 = v141;
      sub_1DFDF9A80();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v31, v29);
      uint64_t v56 = (unsigned int *)MEMORY[0x1E4F80330];
      goto LABEL_17;
    case 5u:
      id v59 = v141;
      void *v141 = *(void *)v45;
      id v60 = (unsigned int *)MEMORY[0x1E4F80300];
      goto LABEL_9;
    case 6u:
      uint64_t v61 = sub_1DFDF9F30();
      id v59 = v141;
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v141, v45, v61);
      id v60 = (unsigned int *)MEMORY[0x1E4F80318];
LABEL_9:
      uint64_t v62 = *v60;
      uint64_t v63 = sub_1DFDF98C0();
      return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 104))(v59, v62, v63);
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v142 = &v45[*(int *)(v64 + 48)];
      uint64_t v65 = v115;
      uint64_t v66 = v114;
      uint64_t v67 = v116;
      (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v114, v45, v116);
      uint64_t v68 = v107;
      uint64_t v69 = sub_1DFDF9A80();
      uint64_t v70 = MEMORY[0x1E01E52C0](v69);
      uint64_t v137 = v71;
      uint64_t v138 = v70;
      uint64_t v72 = *(void (**)(char *, uint64_t))(v112 + 8);
      uint64_t v73 = v113;
      v72(v68, v113);
      uint64_t v74 = v110;
      sub_1DFDF9A80();
      sub_1DFDF6AB0();
      v72(v74, v73);
      id v75 = v111;
      sub_1DFDF9A80();
      sub_1DFDF6AA0();
      v72(v75, v73);
      uint64_t v76 = sub_1DFDF7AA0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v122, 1, 1, v76);
      uint64_t v77 = sub_1DFDF71F0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v124, 1, 1, v77);
      (*(void (**)(char *, void, uint64_t))(v129 + 104))(v131, *MEMORY[0x1E4F802A8], v132);
      sub_1DFDFA090();
      uint64_t v78 = v141;
      sub_1DFDF9FF0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
      uint64_t v79 = *MEMORY[0x1E4F80328];
      uint64_t v80 = sub_1DFDF98C0();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 104))(v78, v79, v80);
      return (*(uint64_t (**)(char *, uint64_t))(v139 + 8))(v142, v140);
    case 8u:
      goto LABEL_11;
    case 9u:
      uint64_t v84 = v119;
      uint64_t v85 = v118;
      id v86 = v45;
      uint64_t v87 = v120;
      (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v86, v120);
      uint64_t v55 = v141;
      sub_1DFDF9A80();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v87);
      uint64_t v56 = (unsigned int *)MEMORY[0x1E4F80228];
      goto LABEL_17;
    case 0xAu:
      uint64_t v88 = v123;
      uint64_t v89 = v121;
      uint64_t v90 = v45;
      uint64_t v91 = v125;
      (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v121, v90, v125);
      uint64_t v55 = v141;
      sub_1DFDF9A80();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v91);
      uint64_t v56 = (unsigned int *)MEMORY[0x1E4F802F8];
      goto LABEL_17;
    case 0xBu:
      uint64_t v92 = v126;
      uint64_t v93 = v127;
      uint64_t v94 = v45;
      uint64_t v95 = v128;
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v126, v94, v128);
      uint64_t v55 = v141;
      sub_1DFDF9A80();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v92, v95);
      uint64_t v56 = (unsigned int *)MEMORY[0x1E4F80308];
      goto LABEL_17;
    case 0xCu:
      uint64_t v96 = v133;
      uint64_t v97 = v130;
      uint64_t v98 = v45;
      uint64_t v99 = v134;
      (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v130, v98, v134);
      uint64_t v55 = v141;
      sub_1DFDF9A80();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v99);
      uint64_t v56 = (unsigned int *)MEMORY[0x1E4F80250];
      goto LABEL_17;
    case 0xDu:
      uint64_t v100 = v137;
      uint64_t v101 = v135;
      uint64_t v102 = v45;
      uint64_t v103 = v138;
      (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v135, v102, v138);
      uint64_t v55 = v141;
      sub_1DFDF9A80();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v103);
      uint64_t v56 = (unsigned int *)MEMORY[0x1E4F802C8];
LABEL_17:
      uint64_t v104 = *v56;
      uint64_t v105 = sub_1DFDF98C0();
      uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v105 - 8) + 104))(v55, v104, v105);
      break;
    default:
      sub_1DEBCA220();
      sub_1DF13C038((uint64_t)&v45[*(int *)(v46 + 48)], type metadata accessor for TagFeedGapLocation);
LABEL_11:
      uint64_t v81 = v141;
      sub_1DFDF9690();
      uint64_t v82 = *MEMORY[0x1E4F802D8];
      uint64_t v83 = sub_1DFDF98C0();
      uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 104))(v81, v82, v83);
      break;
  }
  return result;
}

uint64_t sub_1DF135D3C()
{
  uint64_t v1 = sub_1DFDF9F30();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDF98C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v0, (uint64_t)v11, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v17 = &v11[*(int *)(v16 + 48)];
      uint64_t v18 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      uint64_t v19 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_9;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      sub_1DF13C038((uint64_t)v11, type metadata accessor for TagFeedModel);
      goto LABEL_3;
    case 6u:
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v11, v1);
      uint64_t v12 = sub_1DFDF9F10();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v12;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v21 = &v11[*(int *)(v20 + 48)];
      sub_1DF12CF30();
      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v11, v23);
LABEL_3:
      sub_1DF134C2C(v8);
      uint64_t v12 = sub_1DFDF9860();
      (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
      return v12;
    case 8u:
      uint64_t v19 = type metadata accessor for TagFeedModel;
LABEL_9:
      uint64_t v15 = v19;
      uint64_t v14 = (uint64_t)v11;
      goto LABEL_10;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v14 = (uint64_t)&v11[*(int *)(v13 + 48)];
      uint64_t v15 = type metadata accessor for TagFeedGapLocation;
LABEL_10:
      sub_1DF13C038(v14, v15);
      return 0;
  }
}

uint64_t sub_1DF136190(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v176 = a6;
  uint64_t v177 = a7;
  uint64_t v164 = a1;
  sub_1DF12D440();
  uint64_t v172 = *(void *)(v15 - 8);
  uint64_t v173 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v159 = (uint64_t)&v145 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v174 = (char *)&v145 - v18;
  sub_1DF12D358();
  uint64_t v170 = *(void *)(v19 - 8);
  uint64_t v171 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v168 = (char *)&v145 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v169 = (char *)&v145 - v22;
  sub_1DF12D270();
  uint64_t v166 = *(void *)(v23 - 8);
  uint64_t v167 = v23;
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  v153 = (char *)&v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  v165 = (char *)&v145 - v26;
  sub_1DEA8F16C();
  uint64_t v155 = v27;
  uint64_t v154 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  int v151 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v152 = (char *)&v145 - v30;
  sub_1DF12CF30();
  uint64_t v160 = v31;
  uint64_t v158 = *(void *)(v31 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v31);
  uint64_t v157 = (uint64_t)&v145 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  v175 = (char *)&v145 - v34;
  sub_1DEFF8980();
  uint64_t v162 = v35;
  uint64_t v163 = *(void *)(v35 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v35);
  v156 = (char *)&v145 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  v161 = (char *)&v145 - v38;
  id v178 = a2;
  uint64_t v179 = a3;
  uint64_t v180 = a4;
  uint64_t v181 = a5;
  uint64_t v182 = v176;
  uint64_t v183 = v177;
  uint64_t v184 = a8;
  uint64_t v185 = a9;
  uint64_t v39 = sub_1DFDF0370();
  uint64_t v176 = *(void *)(v39 - 8);
  uint64_t v40 = MEMORY[0x1F4188790](v39);
  uint64_t v42 = (char *)&v145 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v44 = (char *)&v145 - v43;
  sub_1DF12D018();
  uint64_t v46 = v45;
  uint64_t v177 = *(void *)(v45 - 8);
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  uint64_t v49 = (char *)&v145 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v47);
  uint64_t v51 = (char *)&v145 - v50;
  uint64_t v52 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = (char *)&v145 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v9;
  uint64_t v56 = 0;
  if ((sub_1DF132140() & 1) == 0)
  {
    uint64_t v145 = v49;
    uint64_t v149 = v51;
    uint64_t v150 = v46;
    uint64_t v57 = v161;
    uint64_t v58 = v162;
    id v59 = v175;
    v146 = v42;
    uint64_t v60 = v173;
    uint64_t v61 = v164;
    v147 = v44;
    uint64_t v148 = v39;
    sub_1DF13C0FC(v55, (uint64_t)v54, type metadata accessor for TagFeedModel);
    uint64_t v62 = v54;
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v64 = v61;
    uint64_t v65 = v172;
    uint64_t v66 = v168;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
        uint64_t v114 = &v62[*(int *)(v113 + 48)];
        uint64_t v115 = sub_1DFDFA6C0();
        (*(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8))(v114, v115);
        uint64_t v67 = type metadata accessor for TagFeedGapLocation;
        goto LABEL_13;
      case 2:
        uint64_t v68 = v158;
        uint64_t v69 = v59;
        uint64_t v70 = v59;
        uint64_t v71 = v160;
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v70, v62, v160);
        sub_1DFDF9AA0();
        id v72 = v178;
        id v73 = objc_msgSend(v178, sel_feedType);

        uint64_t v74 = v68;
        uint64_t v75 = v157;
        (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v157, v69, v71);
        uint64_t v76 = v176;
        uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 16);
        uint64_t v78 = (uint64_t)v147;
        uint64_t v79 = v148;
        v77(v147, v64, v148);
        if (v73 == (id)11)
        {
          uint64_t WitnessTable = swift_getWitnessTable();
          uint64_t v56 = sub_1DFA43510(v75, v78, MEMORY[0x1E4FBC870], v79, WitnessTable);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v175, v71);
        }
        else
        {
          sub_1DF13C098(0, (unint64_t *)&unk_1EBAF6EB0, MEMORY[0x1E4F7EFC0], MEMORY[0x1E4FBBE00]);
          uint64_t v135 = v74;
          uint64_t v136 = sub_1DFDF0590();
          uint64_t v137 = v76;
          uint64_t v138 = *(void *)(v136 - 8);
          unint64_t v139 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
          uint64_t v140 = swift_allocObject();
          *(_OWORD *)(v140 + 16) = xmmword_1DFE0B250;
          (*(void (**)(unint64_t, void, uint64_t))(v138 + 104))(v140 + v139, *MEMORY[0x1E4F7EF38], v136);
          uint64_t v141 = sub_1DF3C0924(v140);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          uint64_t v142 = (uint64_t)v146;
          v77(v146, v78, v79);
          uint64_t v143 = swift_getWitnessTable();
          uint64_t v56 = sub_1DFA43510(v157, v142, v141, v79, v143);
          (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v78, v79);
          (*(void (**)(char *, uint64_t))(v135 + 8))(v175, v160);
        }
        return v56;
      case 3:
        uint64_t v116 = v177;
        uint64_t v117 = v149;
        uint64_t v118 = v150;
        (*(void (**)(void))(v177 + 32))();
        uint64_t v119 = (uint64_t)v145;
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v145, v117, v118);
        uint64_t v120 = (uint64_t)v147;
        uint64_t v121 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v147, v64, v148);
        uint64_t v122 = swift_getWitnessTable();
        uint64_t v56 = sub_1DFA434A8(v119, v120, v121, v122);
        (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v118);
        return v56;
      case 4:
        uint64_t v81 = v163;
        (*(void (**)(char *, char *, uint64_t))(v163 + 32))(v57, v62, v58);
        uint64_t v82 = (uint64_t)v156;
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v156, v57, v58);
        uint64_t v83 = (uint64_t)v147;
        uint64_t v84 = v61;
        uint64_t v85 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v147, v84, v148);
        uint64_t v86 = swift_getWitnessTable();
        uint64_t v56 = sub_1DFA434DC(v82, v83, v85, v86);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v57, v58);
        return v56;
      case 5:
        swift_release();
        return 0;
      case 6:
      case 9:
      case 13:
        uint64_t v67 = type metadata accessor for TagFeedModel;
LABEL_13:
        uint64_t v112 = v67;
        uint64_t v111 = (uint64_t)v62;
        goto LABEL_14;
      case 7:
        sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
        uint64_t v88 = v62;
        uint64_t v89 = &v62[*(int *)(v87 + 48)];
        uint64_t v90 = v154;
        uint64_t v91 = v152;
        uint64_t v92 = v155;
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v152, v88, v155);
        uint64_t v93 = sub_1DFDF05A0();
        uint64_t v94 = (uint64_t)v151;
        (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v151, v91, v92);
        uint64_t v95 = (uint64_t)v147;
        uint64_t v96 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v147, v64, v148);
        uint64_t v97 = swift_getWitnessTable();
        uint64_t v56 = sub_1DFA43088(v94, v95, v93, v96, v97);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v92);
        (*(void (**)(char *, uint64_t))(v158 + 8))(v89, v160);
        return v56;
      case 8:
        swift_bridgeObjectRelease();
        return 0;
      case 10:
        uint64_t v98 = v166;
        uint64_t v99 = v165;
        uint64_t v100 = v167;
        (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v165, v62, v167);
        uint64_t v101 = (uint64_t)v153;
        (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v153, v99, v100);
        uint64_t v102 = (uint64_t)v147;
        uint64_t v103 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v147, v64, v148);
        uint64_t v104 = swift_getWitnessTable();
        uint64_t v105 = sub_1DFA43544(v101, v102, v103, v104);
        goto LABEL_10;
      case 11:
        uint64_t v98 = v170;
        uint64_t v99 = v169;
        uint64_t v100 = v171;
        (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v169, v62, v171);
        (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v66, v99, v100);
        uint64_t v106 = (uint64_t)v147;
        uint64_t v107 = (uint64_t)v66;
        uint64_t v108 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v147, v64, v148);
        uint64_t v109 = swift_getWitnessTable();
        uint64_t v105 = sub_1DFA43578(v107, v106, v108, v109);
LABEL_10:
        uint64_t v56 = v105;
        (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v100);
        break;
      case 12:
        uint64_t v123 = v174;
        (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v174, v62, v60);
        (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v159, v123, v60);
        uint64_t v124 = v176;
        uint64_t v125 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 16);
        long long v126 = v147;
        uint64_t v127 = v148;
        v125(v147, v61, v148);
        sub_1DF13C098(0, (unint64_t *)&unk_1EBAF6EB0, MEMORY[0x1E4F7EFC0], MEMORY[0x1E4FBBE00]);
        uint64_t v128 = sub_1DFDF0590();
        uint64_t v129 = *(void *)(v128 - 8);
        unint64_t v130 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
        uint64_t v131 = swift_allocObject();
        *(_OWORD *)(v131 + 16) = xmmword_1DFE0B250;
        (*(void (**)(unint64_t, void, uint64_t))(v129 + 104))(v131 + v130, *MEMORY[0x1E4F7EFB0], v128);
        uint64_t v132 = sub_1DF3C0924(v131);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v133 = (uint64_t)v146;
        v125(v146, (uint64_t)v126, v127);
        uint64_t v134 = swift_getWitnessTable();
        uint64_t v56 = sub_1DFA435AC(v159, v133, v132, v127, v134);
        (*(void (**)(char *, uint64_t))(v124 + 8))(v126, v127);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v174, v173);
        break;
      default:
        swift_bridgeObjectRelease();
        sub_1DEBCA220();
        uint64_t v111 = (uint64_t)&v62[*(int *)(v110 + 48)];
        uint64_t v112 = type metadata accessor for TagFeedGapLocation;
LABEL_14:
        sub_1DF13C038(v111, v112);
        uint64_t v56 = 0;
        break;
    }
  }
  return v56;
}

uint64_t sub_1DF1372F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v122 = a5;
  uint64_t v123 = a1;
  uint64_t v117 = a9;
  uint64_t v118 = (uint64_t (*)())a8;
  uint64_t v111 = sub_1DFDF6400();
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  uint64_t v108 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DFDF6AC0();
  uint64_t v113 = *(void *)(v16 - 8);
  uint64_t v114 = v16;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v106 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v112 = (char *)&v101 - v19;
  uint64_t v115 = sub_1DFDF6630();
  uint64_t v109 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v107 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA8F16C();
  uint64_t v22 = v21;
  uint64_t v116 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = a2;
  uint64_t v125 = a3;
  uint64_t v126 = a6;
  uint64_t v127 = a7;
  uint64_t v25 = sub_1DFDF5AD0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v120 = v25;
  uint64_t v121 = v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v119 = (char *)&v101 - v27;
  uint64_t v28 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v101 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v9, (uint64_t)v30, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v68 = &v30[*(int *)(v67 + 48)];
      uint64_t v69 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v69 - 8) + 8))(v68, v69);
      uint64_t v70 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_25;
    case 2u:
    case 3u:
    case 4u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      sub_1DF13C038((uint64_t)v30, type metadata accessor for TagFeedModel);
      sub_1DF13C098(0, (unint64_t *)&qword_1EAC24070, (uint64_t (*)(uint64_t))sub_1DEB30900, MEMORY[0x1E4FBBE00]);
      uint64_t v116 = swift_allocObject();
      *(_OWORD *)(v116 + 16) = xmmword_1DFE0B250;
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1DFE12420;
      uint64_t v32 = sub_1DFDF1230();
      uint64_t v33 = v117;
      uint64_t v34 = v118;
      uint64_t v35 = sub_1DFDF1200();
      if (v35)
      {
        uint64_t v36 = MEMORY[0x1E4FAC030];
        uint64_t v37 = v32;
      }
      else
      {
        uint64_t v37 = 0;
        uint64_t v36 = 0;
        *(void *)(v31 + 40) = 0;
        *(void *)(v31 + 48) = 0;
      }
      *(void *)(v31 + 32) = v35;
      *(void *)(v31 + 56) = v37;
      *(void *)(v31 + 64) = v36;
      uint64_t v38 = sub_1DFDF11E0();
      if (v38)
      {
        uint64_t v39 = MEMORY[0x1E4FAC030];
        uint64_t v40 = v32;
      }
      else
      {
        uint64_t v40 = 0;
        uint64_t v39 = 0;
        *(void *)(v31 + 80) = 0;
        *(void *)(v31 + 88) = 0;
      }
      *(void *)(v31 + 72) = v38;
      *(void *)(v31 + 96) = v40;
      *(void *)(v31 + 104) = v39;
      uint64_t v41 = sub_1DFDF11C0();
      if (v41)
      {
        uint64_t v42 = MEMORY[0x1E4FAC030];
        uint64_t v43 = v32;
      }
      else
      {
        uint64_t v43 = 0;
        uint64_t v42 = 0;
        *(void *)(v31 + 120) = 0;
        *(void *)(v31 + 128) = 0;
      }
      *(void *)(v31 + 112) = v41;
      *(void *)(v31 + 136) = v43;
      *(void *)(v31 + 144) = v42;
      uint64_t v44 = sub_1DFDF1210();
      uint64_t v115 = v32;
      if (v44)
      {
        uint64_t v45 = MEMORY[0x1E4FAC030];
        uint64_t v46 = v32;
      }
      else
      {
        uint64_t v46 = 0;
        uint64_t v45 = 0;
        *(void *)(v31 + 160) = 0;
        *(void *)(v31 + 168) = 0;
      }
      uint64_t v114 = v116 + 32;
      *(void *)(v31 + 152) = v44;
      *(void *)(v31 + 176) = v46;
      *(void *)(v31 + 184) = v45;
      uint64_t v124 = a2;
      uint64_t v125 = a3;
      uint64_t v126 = a4;
      uint64_t v127 = v122;
      uint64_t v128 = a6;
      uint64_t v129 = a7;
      unint64_t v130 = v34;
      uint64_t v131 = v33;
      sub_1DFDF0370();
      uint64_t v47 = v119;
      sub_1DFDF0360();
      uint64_t v48 = type metadata accessor for TagFeedServiceConfig();
      sub_1DEAD9728(&qword_1EBAD8430, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
      uint64_t v49 = v120;
      uint64_t v50 = sub_1DFDF5A20();
      uint64_t v51 = *(void (**)(char *, uint64_t))(v121 + 8);
      v121 += 8;
      v51(v47, v49);
      sub_1DFDF0350();
      uint64_t v122 = v48;
      uint64_t v52 = v115;
      uint64_t v53 = sub_1DFDF11D0();
      swift_bridgeObjectRelease();
      sub_1DEA54378(v50);
      if (v53)
      {
        uint64_t v54 = v52;
        uint64_t v55 = MEMORY[0x1E4FAC030];
      }
      else
      {
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        *(void *)(v31 + 200) = 0;
        *(void *)(v31 + 208) = 0;
      }
      *(void *)(v31 + 192) = v53;
      *(void *)(v31 + 216) = v54;
      *(void *)(v31 + 224) = v55;
      uint64_t v56 = v119;
      sub_1DFDF0360();
      uint64_t v57 = v120;
      uint64_t v58 = sub_1DFDF5A20();
      v51(v56, v57);
      sub_1DEAD9728((unint64_t *)&unk_1EBACBA50, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
      sub_1DEAD9728(&qword_1EBAD0C10, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
      sub_1DEAD9728(&qword_1EBAD0850, (void (*)(uint64_t))type metadata accessor for TagFeedGroup);
      sub_1DEAD9728((unint64_t *)&unk_1EBAD0840, (void (*)(uint64_t))type metadata accessor for TagFeedGroup);
      uint64_t v59 = v115;
      uint64_t v60 = sub_1DFDF11B0();
      sub_1DEA54378(v58);
      if (v60)
      {
        uint64_t v61 = v59;
        uint64_t v62 = MEMORY[0x1E4FAC030];
      }
      else
      {
        uint64_t v61 = 0;
        uint64_t v62 = 0;
        *(void *)(v31 + 240) = 0;
        *(void *)(v31 + 248) = 0;
      }
      *(void *)(v31 + 232) = v60;
      *(void *)(v31 + 256) = v61;
      *(void *)(v31 + 264) = v62;
      sub_1DFDF05A0();
      sub_1DFDF1700();
      sub_1DFDF16D0();
      swift_bridgeObjectRelease();
      return sub_1DFDF0560();
    case 5u:
      swift_release();
      return 0;
    case 6u:
      uint64_t v70 = type metadata accessor for TagFeedModel;
LABEL_25:
      uint64_t v66 = v70;
      uint64_t v65 = (uint64_t)v30;
      goto LABEL_26;
    case 7u:
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
      uint64_t v102 = v24;
      v71(v24, v30, v22);
      sub_1DF13C098(0, &qword_1EBAF73B8, (uint64_t (*)(uint64_t))sub_1DF13C164, MEMORY[0x1E4FBBE00]);
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_1DFE12420;
      uint64_t v105 = sub_1DFDF1230();
      uint64_t v103 = a4;
      uint64_t v73 = sub_1DFDF1200();
      uint64_t v104 = v72;
      *(void *)(v72 + 32) = v73;
      *(void *)(v72 + 40) = sub_1DFDF11E0();
      uint64_t v74 = sub_1DFDF11C0();
      uint64_t v75 = v104;
      *(void *)(v104 + 48) = v74;
      uint64_t v76 = v103;
      uint64_t v77 = v118;
      *(void *)(v75 + 56) = sub_1DFDF1210();
      uint64_t v124 = a2;
      uint64_t v125 = a3;
      uint64_t v126 = v76;
      uint64_t v127 = v122;
      uint64_t v128 = a6;
      uint64_t v129 = a7;
      unint64_t v130 = v77;
      uint64_t v131 = v117;
      sub_1DFDF0370();
      uint64_t v78 = v119;
      sub_1DFDF0360();
      type metadata accessor for TagFeedServiceConfig();
      uint64_t v118 = type metadata accessor for TagFeedServiceConfig;
      sub_1DEAD9728(&qword_1EBAD8430, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
      uint64_t v122 = v22;
      uint64_t v79 = v120;
      uint64_t v80 = sub_1DFDF5A20();
      uint64_t v121 = *(void *)(v121 + 8);
      ((void (*)(char *, uint64_t))v121)(v78, v79);
      sub_1DFDF0350();
      uint64_t v81 = sub_1DFDF11D0();
      swift_bridgeObjectRelease();
      sub_1DEA54378(v80);
      uint64_t v82 = v104;
      *(void *)(v104 + 64) = v81;
      sub_1DFDF0360();
      uint64_t v83 = sub_1DFDF5A20();
      ((void (*)(char *, uint64_t))v121)(v78, v79);
      uint64_t v84 = (void (*)(uint64_t))v118;
      sub_1DEAD9728((unint64_t *)&unk_1EBACBA50, (void (*)(uint64_t))v118);
      sub_1DEAD9728(&qword_1EBAD0C10, v84);
      sub_1DEAD9728(&qword_1EBAD0850, (void (*)(uint64_t))type metadata accessor for TagFeedGroup);
      sub_1DEAD9728((unint64_t *)&unk_1EBAD0840, (void (*)(uint64_t))type metadata accessor for TagFeedGroup);
      uint64_t v85 = sub_1DFDF11B0();
      sub_1DEA54378(v83);
      uint64_t v86 = v82;
      uint64_t v87 = v102;
      *(void *)(v86 + 72) = v85;
      uint64_t v124 = v86;
      sub_1DFDFE250();
      uint64_t v88 = v112;
      sub_1DFDF9A80();
      uint64_t v90 = v113;
      uint64_t v89 = v114;
      if ((*(unsigned int (**)(char *, uint64_t))(v113 + 88))(v88, v114) == *MEMORY[0x1E4F7B0B0])
      {
        (*(void (**)(char *, uint64_t))(v90 + 96))(v88, v89);
        uint64_t v91 = v109;
        uint64_t v92 = v107;
        (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v107, v88, v115);
        sub_1DFDF6620();
        uint64_t v93 = v106;
        uint64_t v94 = sub_1DFDF9A80();
        MEMORY[0x1E01E52C0](v94);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v93, v89);
        uint64_t v95 = v108;
        sub_1DFDF69B0();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1DFDF1180();
        uint64_t v96 = (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v95, v111);
        MEMORY[0x1E01ECA20](v96);
        if (*(void *)(v124 + 16) >= *(void *)(v124 + 24) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
        (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v115);
        uint64_t v87 = v102;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v90 + 8))(v88, v89);
      }
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v98 = &v30[*(int *)(v97 + 48)];
      sub_1DFDF05A0();
      sub_1DF13C098(0, (unint64_t *)&qword_1EAC24070, (uint64_t (*)(uint64_t))sub_1DEB30900, MEMORY[0x1E4FBBE00]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0B250;
      sub_1DFDF1700();
      sub_1DEC9E5A4(v124);
      swift_bridgeObjectRelease();
      sub_1DFDF16D0();
      swift_bridgeObjectRelease();
      uint64_t v63 = sub_1DFDF0560();
      (*(void (**)(char *, uint64_t))(v116 + 8))(v87, v122);
      sub_1DF12CF30();
      (*(void (**)(char *, uint64_t))(*(void *)(v99 - 8) + 8))(v98, v99);
      return v63;
    case 8u:
      swift_bridgeObjectRelease();
      return 0;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v65 = (uint64_t)&v30[*(int *)(v64 + 48)];
      uint64_t v66 = type metadata accessor for TagFeedGapLocation;
LABEL_26:
      sub_1DF13C038(v65, v66);
      return 0;
  }
}

uint64_t sub_1DF1383D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1DF136190(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1DF1383E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), uint64_t a9)
{
  return sub_1DF1372F4(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1DF1383F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v81 = a1;
  uint64_t v72 = (void *)sub_1DFDF6AC0();
  uint64_t v69 = *(v72 - 1);
  MEMORY[0x1F4188790](v72);
  uint64_t v68 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA8F16C();
  uint64_t v73 = *((void *)v3 - 1);
  uint64_t v74 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v77 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1DFDFA100();
  uint64_t v67 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v66 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1DFDFBA00();
  uint64_t v76 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v75 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12CF30();
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v70 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDF7CF0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DFDF98C0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (uint64_t *)((char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = v1;
  sub_1DF134C2C(v19);
  sub_1DFDF9790();
  (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v15, v12) == *MEMORY[0x1E4F7F608])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    uint64_t v21 = sub_1DFDF83D0();
    uint64_t v22 = *(void *)(v21 - 8);
    int v23 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v15, v21);
    int v24 = *MEMORY[0x1E4F7F910];
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v21);
    if (v23 == v24)
    {
      uint64_t v25 = sub_1DFDF1430();
      uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      uint64_t v27 = v81;
      return v26(v27, 1, 1, v25);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_1DF13C0FC(v20, (uint64_t)v11, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v35 = &v11[*(int *)(v34 + 48)];
      uint64_t v36 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
      uint64_t v28 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_7;
    case 2u:
      (*(void (**)(void))(v78 + 32))();
      sub_1DF13C098(0, &qword_1EBABB400, (uint64_t (*)(uint64_t))sub_1DEE01B74, MEMORY[0x1E4FBBE00]);
      sub_1DEE01B74(0);
      uint64_t v38 = *(void *)(*(void *)(v37 - 8) + 72);
      unint64_t v39 = (*(unsigned __int8 *)(*(void *)(v37 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v37 - 8) + 80);
      uint64_t v40 = swift_allocObject();
      uint64_t v77 = (char *)v40;
      *(_OWORD *)(v40 + 16) = xmmword_1DFE0B750;
      unint64_t v41 = v40 + v39;
      uint64_t v42 = v66;
      sub_1DFDF9A80();
      sub_1DFDFA0D0();
      uint64_t v74 = *(void (**)(char *, uint64_t))(v67 + 8);
      v74(v42, v71);
      uint64_t v65 = v20;
      sub_1DF130234();
      uint64_t v43 = v75;
      sub_1DFDFB9E0();
      sub_1DFDF07B0();
      uint64_t v76 = *(void *)(v76 + 8);
      ((void (*)(char *, uint64_t))v76)(v43, v80);
      uint64_t v44 = sub_1DFDF07C0();
      uint64_t v45 = *(void *)(v44 - 8);
      uint64_t v72 = *(void **)(v45 + 56);
      uint64_t v73 = v45 + 56;
      ((void (*)(unint64_t, void, uint64_t, uint64_t))v72)(v41, 0, 1, v44);
      uint64_t v46 = v41 + v38;
      uint64_t v47 = v79;
      uint64_t v48 = v70;
      sub_1DFDF9A80();
      sub_1DFDFA0D0();
      v74(v42, v71);
      sub_1DF130234();
      sub_1DFDFB9E0();
      sub_1DFDF0780();
      ((void (*)(char *, uint64_t))v76)(v43, v80);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v72)(v46, 0, 1, v44);
      uint64_t v49 = v81;
      sub_1DFDF1440();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v47);
      uint64_t v50 = sub_1DFDF1430();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
    case 3u:
    case 4u:
    case 6u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v28 = type metadata accessor for TagFeedModel;
LABEL_7:
      uint64_t v29 = v28;
      uint64_t v30 = (uint64_t)v11;
      goto LABEL_8;
    case 5u:
      swift_release();
      goto LABEL_9;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v71 = (uint64_t)&v11[*(int *)(v51 + 48)];
      (*(void (**)(void))(v73 + 32))();
      sub_1DF13C098(0, &qword_1EBABB400, (uint64_t (*)(uint64_t))sub_1DEE01B74, MEMORY[0x1E4FBBE00]);
      sub_1DEE01B74(0);
      uint64_t v53 = *(void *)(v52 - 8);
      uint64_t v67 = *(void *)(v53 + 72);
      unint64_t v54 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      uint64_t v55 = swift_allocObject();
      uint64_t v70 = (char *)v55;
      *(_OWORD *)(v55 + 16) = xmmword_1DFE0B750;
      unint64_t v56 = v55 + v54;
      uint64_t v57 = v68;
      sub_1DFDF9A80();
      sub_1DFDF6AB0();
      uint64_t v69 = *(void *)(v69 + 8);
      ((void (*)(char *, void *))v69)(v57, v72);
      uint64_t v65 = v20;
      sub_1DF130234();
      uint64_t v58 = v75;
      sub_1DFDFB9E0();
      sub_1DFDF07B0();
      uint64_t v76 = *(void *)(v76 + 8);
      ((void (*)(char *, uint64_t))v76)(v58, v80);
      uint64_t v59 = sub_1DFDF07C0();
      uint64_t v66 = *(char **)(*(void *)(v59 - 8) + 56);
      ((void (*)(unint64_t, void, uint64_t, uint64_t))v66)(v56, 0, 1, v59);
      uint64_t v60 = v56 + v67;
      uint64_t v61 = v74;
      sub_1DFDF9A80();
      sub_1DFDF6AB0();
      ((void (*)(char *, void *))v69)(v57, v72);
      sub_1DF130234();
      sub_1DFDFB9E0();
      sub_1DFDF0780();
      ((void (*)(char *, uint64_t))v76)(v58, v80);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v66)(v60, 0, 1, v59);
      uint64_t v62 = v81;
      sub_1DFDF1440();
      (*(void (**)(char *, void))(v73 + 8))(v77, v61);
      uint64_t v63 = sub_1DFDF1430();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 8))(v71, v79);
    case 8u:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v30 = (uint64_t)&v11[*(int *)(v33 + 48)];
      uint64_t v29 = type metadata accessor for TagFeedGapLocation;
LABEL_8:
      sub_1DF13C038(v30, v29);
LABEL_9:
      uint64_t v31 = v81;
      uint64_t v25 = sub_1DFDF1430();
      uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      uint64_t v27 = v31;
      break;
  }
  return v26(v27, 1, 1, v25);
}

uint64_t sub_1DF1390D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v84 = a1;
  uint64_t v2 = sub_1DFDF6AC0();
  uint64_t v78 = *(void *)(v2 - 8);
  uint64_t v79 = (void (*)(char *, char *))v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v76 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA8F16C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  uint64_t v81 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v77 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDFA100();
  uint64_t v74 = *(void *)(v7 - 8);
  uint64_t v75 = (char *)v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v72 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12CF30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  uint64_t v83 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DFDF7CF0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DFDF98C0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (uint64_t *)((char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = v1;
  sub_1DF134C2C(v22);
  sub_1DFDF9790();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v18, v15) == *MEMORY[0x1E4F7F608])
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v24 = sub_1DFDF83D0();
    uint64_t v25 = *(void *)(v24 - 8);
    int v26 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v18, v24);
    int v27 = *MEMORY[0x1E4F7F910];
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v24);
    if (v26 == v27)
    {
      uint64_t v28 = sub_1DFDF1430();
      uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
      uint64_t v30 = v84;
      return v29(v30, 1, 1, v28);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  sub_1DF13C0FC(v23, (uint64_t)v14, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v38 = &v14[*(int *)(v37 + 48)];
      uint64_t v39 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
      uint64_t v31 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_7;
    case 2u:
      uint64_t v40 = v73;
      unint64_t v41 = v14;
      uint64_t v42 = v82;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v73, v41, v82);
      sub_1DF13C098(0, &qword_1EBABB400, (uint64_t (*)(uint64_t))sub_1DEE01B74, MEMORY[0x1E4FBBE00]);
      sub_1DEE01B74(0);
      uint64_t v44 = *(void *)(v43 - 8);
      uint64_t v80 = *(void *)(v44 + 72);
      unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      uint64_t v46 = swift_allocObject();
      uint64_t v81 = v46;
      *(_OWORD *)(v46 + 16) = xmmword_1DFE0B750;
      unint64_t v47 = v46 + v45;
      uint64_t v48 = v72;
      sub_1DFDF9A80();
      sub_1DFDFA0D0();
      uint64_t v49 = v75;
      uint64_t v79 = *(void (**)(char *, char *))(v74 + 8);
      v79(v48, v75);
      sub_1DF130234();
      sub_1DFDF07A0();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v50 = sub_1DFDF07C0();
      uint64_t v51 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
      v51(v47, 0, 1, v50);
      unint64_t v52 = v47 + v80;
      sub_1DFDF9A80();
      sub_1DFDFA0D0();
      v79(v48, v49);
      sub_1DFDF0790();
      swift_unknownObjectRelease();
      v51(v52, 0, 1, v50);
      uint64_t v53 = v84;
      sub_1DFDF1440();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v40, v42);
      uint64_t v54 = sub_1DFDF1430();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
    case 3u:
    case 4u:
    case 6u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v31 = type metadata accessor for TagFeedModel;
LABEL_7:
      uint64_t v32 = v31;
      uint64_t v33 = (uint64_t)v14;
      goto LABEL_8;
    case 5u:
      swift_release();
      goto LABEL_9;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v75 = &v14[*(int *)(v55 + 48)];
      unint64_t v56 = v77;
      uint64_t v57 = v14;
      uint64_t v58 = v80;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v77, v57, v80);
      sub_1DF13C098(0, &qword_1EBABB400, (uint64_t (*)(uint64_t))sub_1DEE01B74, MEMORY[0x1E4FBBE00]);
      sub_1DEE01B74(0);
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v73 = *(char **)(v60 + 72);
      unint64_t v61 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      uint64_t v62 = swift_allocObject();
      uint64_t v74 = v62;
      *(_OWORD *)(v62 + 16) = xmmword_1DFE0B750;
      unint64_t v63 = v62 + v61;
      uint64_t v64 = v76;
      sub_1DFDF9A80();
      sub_1DFDF6AB0();
      uint64_t v65 = v79;
      uint64_t v78 = *(void *)(v78 + 8);
      ((void (*)(char *, void))v78)(v64, v79);
      sub_1DF130234();
      sub_1DFDF07A0();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_1DFDF07C0();
      uint64_t v67 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56);
      v67(v63, 0, 1, v66);
      uint64_t v68 = &v73[v63];
      sub_1DFDF9A80();
      sub_1DFDF6AB0();
      ((void (*)(char *, void))v78)(v64, v65);
      sub_1DFDF0790();
      swift_unknownObjectRelease();
      v67((unint64_t)v68, 0, 1, v66);
      uint64_t v69 = v84;
      sub_1DFDF1440();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v56, v58);
      uint64_t v70 = sub_1DFDF1430();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 0, 1, v70);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v75, v82);
    case 8u:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v33 = (uint64_t)&v14[*(int *)(v36 + 48)];
      uint64_t v32 = type metadata accessor for TagFeedGapLocation;
LABEL_8:
      sub_1DF13C038(v33, v32);
LABEL_9:
      uint64_t v34 = v84;
      uint64_t v28 = sub_1DFDF1430();
      uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
      uint64_t v30 = v34;
      break;
  }
  return v29(v30, 1, 1, v28);
}

uint64_t sub_1DF139C84()
{
  uint64_t v1 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v0, (uint64_t)v3, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v10 = &v3[*(int *)(v9 + 48)];
      uint64_t v11 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      uint64_t v4 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_3;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v4 = type metadata accessor for TagFeedModel;
LABEL_3:
      sub_1DF13C038((uint64_t)v3, v4);
      return 0;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v13 = &v3[*(int *)(v12 + 48)];
      sub_1DF12CF30();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v3, v15);
      return 0;
    case 8u:
      uint64_t v8 = type metadata accessor for TagFeedModel;
      uint64_t v7 = (uint64_t)v3;
      goto LABEL_10;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v7 = (uint64_t)&v3[*(int *)(v6 + 48)];
      uint64_t v8 = type metadata accessor for TagFeedGapLocation;
LABEL_10:
      sub_1DF13C038(v7, v8);
      return 1;
  }
}

uint64_t sub_1DF139F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v2, (uint64_t)v6, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v14 = &v6[*(int *)(v13 + 48)];
      uint64_t v15 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      uint64_t v7 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_3;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v7 = type metadata accessor for TagFeedModel;
LABEL_3:
      uint64_t v8 = v7;
      uint64_t v9 = (uint64_t)v6;
      goto LABEL_4;
    case 6u:
      uint64_t v16 = sub_1DFDF9F30();
      uint64_t v17 = *(void *)(v16 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v6, v16);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v19 = &v6[*(int *)(v18 + 48)];
      sub_1DF12CF30();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v6, v21);
      goto LABEL_5;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v9 = (uint64_t)&v6[*(int *)(v12 + 48)];
      uint64_t v8 = type metadata accessor for TagFeedGapLocation;
LABEL_4:
      sub_1DF13C038(v9, v8);
LABEL_5:
      uint64_t v10 = sub_1DFDF9F30();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t sub_1DF13A2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DFDF9F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF13A344()
{
  uint64_t v1 = sub_1DFDFA100();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12CF30();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v0, (uint64_t)v12, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v20 = &v12[*(int *)(v19 + 48)];
      uint64_t v21 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      uint64_t v13 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_3;
    case 2u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
      sub_1DFDF9A80();
      uint64_t v22 = (void *)sub_1DFDFA0D0();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      id v23 = objc_msgSend(v22, sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v16 = sub_1DFDFDD20();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v16;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v13 = type metadata accessor for TagFeedModel;
LABEL_3:
      uint64_t v14 = v13;
      uint64_t v15 = (uint64_t)v12;
      goto LABEL_4;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      (*(void (**)(char *, uint64_t))(v7 + 8))(&v12[*(int *)(v24 + 48)], v6);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v12, v25);
      return 0;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v15 = (uint64_t)&v12[*(int *)(v18 + 48)];
      uint64_t v14 = type metadata accessor for TagFeedGapLocation;
LABEL_4:
      sub_1DF13C038(v15, v14);
      return 0;
  }
}

uint64_t sub_1DF13A778@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v53 = a3;
  unint64_t v51 = a2;
  uint64_t v54 = a4;
  uint64_t v4 = sub_1DFDF6480();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF6490();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDF6460();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDF9D80();
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  MEMORY[0x1F4188790](v12);
  unint64_t v45 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v50);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12CF30();
  uint64_t v49 = v16;
  uint64_t v44 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v48 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DFDF6AC0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v25 = sub_1DFDF6AD0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v52, v25);
  int v29 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v28, v25);
  if (v29 != *MEMORY[0x1E4F7B0C8])
  {
    uint64_t v34 = v53;
    if (v29 == *MEMORY[0x1E4F7B0D0])
    {
      (*(void (**)(char *, uint64_t))(v26 + 96))(v28, v25);
      uint64_t v36 = v40;
      uint64_t v35 = v41;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v11, v28, v41);
      sub_1DFDF6450();
    }
    else
    {
      if (v29 != *MEMORY[0x1E4F7B0D8])
      {
        sub_1DF13C0FC((uint64_t)v53, v54, type metadata accessor for TagFeedModel);
        return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
      }
      (*(void (**)(char *, uint64_t))(v26 + 96))(v28, v25);
      uint64_t v11 = v37;
      uint64_t v36 = v38;
      uint64_t v35 = v39;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v28, v39);
      sub_1DFDF6470();
    }
    sub_1DF13AF44(v34, (uint64_t)v8, v51, v54);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v47);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v11, v35);
  }
  (*(void (**)(char *, uint64_t))(v26 + 96))(v28, v25);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v28, v18);
  uint64_t v30 = v53;
  sub_1DF13C0FC((uint64_t)v53, (uint64_t)v15, type metadata accessor for TagFeedModel);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v53 = *(void (**)(char *, uint64_t))(v44 + 32);
    ((void (*)(char *, char *, uint64_t))v53)(v48, v15, v49);
    sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
    uint64_t v52 = v54 + *(int *)(v31 + 48);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v24, v18);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v45, v51, v43);
    uint64_t v32 = (void (*)(uint64_t))MEMORY[0x1E4F7B0B8];
    sub_1DEAD9728(&qword_1EBAA3BD0, MEMORY[0x1E4F7B0B8]);
    sub_1DEAD9728((unint64_t *)&unk_1EBAA3BC0, v32);
    sub_1DFDF9AF0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
    ((void (*)(uint64_t, char *, uint64_t))v53)(v52, v48, v49);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1DF13C038((uint64_t)v15, type metadata accessor for TagFeedModel);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
    return sub_1DF13C0FC((uint64_t)v30, v54, type metadata accessor for TagFeedModel);
  }
}

uint64_t sub_1DF13AF44@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v37 = a3;
  uint64_t v35 = a2;
  uint64_t v40 = a4;
  uint64_t v5 = sub_1DFDF9D80();
  uint64_t v36 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDFA100();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v33 - v11;
  sub_1DF12CF30();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  sub_1DF13C0FC((uint64_t)a1, (uint64_t)v20, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v27 = &v20[*(int *)(v26 + 48)];
      uint64_t v28 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      uint64_t v21 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_3;
    case 2u:
      uint64_t v33 = v15;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
      sub_1DFDF9A80();
      sub_1DFDFA030();
      uint64_t v29 = v34;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
      v39(v10, v7);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v10, v12, v7);
      (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v38, v37, v5);
      sub_1DFDF9AA0();
      uint64_t v41 = v42;
      unint64_t v37 = sub_1DEBC9E14();
      uint64_t v30 = (void (*)(uint64_t))MEMORY[0x1E4F80560];
      sub_1DEAD9728((unint64_t *)&unk_1EBAE9C20, MEMORY[0x1E4F80560]);
      sub_1DEAD9728((unint64_t *)&unk_1EBAE9C10, v30);
      sub_1DEAD9728(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
      sub_1DFDF9AD0();
      v39(v12, v7);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v14);
      return swift_storeEnumTagMultiPayload();
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v21 = type metadata accessor for TagFeedModel;
LABEL_3:
      uint64_t v22 = v21;
      uint64_t v23 = (uint64_t)v20;
      goto LABEL_4;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      (*(void (**)(char *, uint64_t))(v15 + 8))(&v20[*(int *)(v31 + 48)], v14);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v20, v32);
      return sub_1DF13C0FC((uint64_t)v39, v40, type metadata accessor for TagFeedModel);
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v23 = (uint64_t)&v20[*(int *)(v25 + 48)];
      uint64_t v22 = type metadata accessor for TagFeedGapLocation;
LABEL_4:
      sub_1DF13C038(v23, v22);
      return sub_1DF13C0FC((uint64_t)v39, v40, type metadata accessor for TagFeedModel);
  }
}

uint64_t sub_1DF13B568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(a1, (uint64_t)v6, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v13 = &v6[*(int *)(v12 + 48)];
      uint64_t v14 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      uint64_t v7 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_3;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v7 = type metadata accessor for TagFeedModel;
LABEL_3:
      uint64_t v8 = v7;
      uint64_t v9 = (uint64_t)v6;
      goto LABEL_4;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v16 = &v6[*(int *)(v15 + 48)];
      sub_1DF12CF30();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a2, v16, v17);
      swift_storeEnumTagMultiPayload();
      sub_1DEA8F16C();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v9 = (uint64_t)&v6[*(int *)(v11 + 48)];
      uint64_t v8 = type metadata accessor for TagFeedGapLocation;
LABEL_4:
      sub_1DF13C038(v9, v8);
      return sub_1DF13C0FC(a1, a2, type metadata accessor for TagFeedModel);
  }
}

uint64_t sub_1DF13B848@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v56 = a1;
  uint64_t v2 = sub_1DFDF9760();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC8DD2C(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v55 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D018();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v50 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDFA100();
  uint64_t v49 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC8DD60(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12CF30();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13C0FC(v1, (uint64_t)v22, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v36 = &v22[*(int *)(v35 + 48)];
      uint64_t v37 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
      uint64_t v23 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_3;
    case 2u:
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v22, v16);
      sub_1DFDF9A80();
      sub_1DFDFA0D0();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v9);
      sub_1DFDE8C50();
      uint64_t v28 = sub_1DFDE8C60();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v14, 1, v28) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        uint64_t v30 = sub_1DEC8DD60;
        uint64_t v31 = (uint64_t)v14;
        goto LABEL_14;
      }
      unint64_t v45 = v56;
      v56[3] = v28;
      v45[4] = sub_1DEAD9728((unint64_t *)&unk_1EBAF34F0, MEMORY[0x1E4F7D508]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
      (*(void (**)(uint64_t *, char *, uint64_t))(v29 + 32))(boxed_opaque_existential_1, v14, v28);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      break;
    case 3u:
      uint64_t v39 = v53;
      uint64_t v38 = v54;
      uint64_t v40 = v50;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v22, v54);
      sub_1DFDF9A80();
      uint64_t v41 = (void *)sub_1DFDF96D0();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v4, v52);
      uint64_t v42 = v55;
      sub_1DFAF9A80(v41, v55);
      uint64_t v43 = type metadata accessor for FeedEntity();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v42, 1, v43) == 1)
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
        uint64_t v30 = sub_1DEC8DD2C;
        uint64_t v31 = v42;
LABEL_14:
        uint64_t result = sub_1DF13C038(v31, (uint64_t (*)(void))v30);
        uint64_t v44 = v56;
        *(_OWORD *)unint64_t v56 = 0u;
        *((_OWORD *)v44 + 1) = 0u;
        v44[4] = 0;
      }
      else
      {
        uint64_t v47 = v56;
        v56[3] = v43;
        v47[4] = sub_1DEAD9728((unint64_t *)&qword_1EBAD07D0, (void (*)(uint64_t))type metadata accessor for FeedEntity);
        uint64_t v48 = __swift_allocate_boxed_opaque_existential_1(v47);
        sub_1DED93CF0(v42, (uint64_t)v48);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v38);
      }
      break;
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v23 = type metadata accessor for TagFeedModel;
LABEL_3:
      uint64_t v24 = v23;
      uint64_t v25 = (uint64_t)v22;
      goto LABEL_4;
    case 7u:
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      (*(void (**)(char *, uint64_t))(v17 + 8))(&v22[*(int *)(v32 + 48)], v16);
      sub_1DEA8F16C();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v22, v33);
      goto LABEL_5;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v25 = (uint64_t)&v22[*(int *)(v34 + 48)];
      uint64_t v24 = type metadata accessor for TagFeedGapLocation;
LABEL_4:
      uint64_t result = sub_1DF13C038(v25, v24);
LABEL_5:
      uint64_t v27 = v56;
      v56[4] = 0;
      *(_OWORD *)uint64_t v27 = 0u;
      *((_OWORD *)v27 + 1) = 0u;
      return result;
  }
  return result;
}

uint64_t sub_1DF13C038(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DF13C098(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF13C0FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1DF13C164(uint64_t a1)
{
}

uint64_t sub_1DF13C198(uint64_t a1, uint64_t a2)
{
  uint64_t v260 = a2;
  uint64_t v262 = a1;
  sub_1DF12D528();
  uint64_t v249 = *(void *)(v2 - 8);
  uint64_t v250 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  v224 = (char *)&v202 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  v223 = (char *)&v202 - v5;
  sub_1DF12D440();
  uint64_t v247 = *(void *)(v6 - 8);
  uint64_t v248 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  v222 = (char *)&v202 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v221 = (char *)&v202 - v9;
  sub_1DF12D358();
  uint64_t v245 = *(void *)(v10 - 8);
  uint64_t v246 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  v219 = (char *)&v202 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  v218 = (char *)&v202 - v13;
  sub_1DF12D270();
  uint64_t v243 = *(void *)(v14 - 8);
  uint64_t v244 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  v217 = (char *)&v202 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  v216 = (char *)&v202 - v17;
  sub_1DF12D188();
  uint64_t v242 = v18;
  uint64_t v241 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  v215 = (char *)&v202 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v214 = (char *)&v202 - v21;
  sub_1DEA8F16C();
  uint64_t v255 = *(void *)(v22 - 8);
  uint64_t v256 = v22;
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  v220 = (char *)&v202 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  v226 = (char *)&v202 - v25;
  uint64_t v237 = sub_1DFDF9F30();
  uint64_t v236 = *(void *)(v237 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v237);
  v210 = (char *)&v202 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  v209 = (char *)&v202 - v28;
  sub_1DEFF8980();
  uint64_t v240 = v29;
  uint64_t v238 = *(void *)(v29 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v29);
  v212 = (char *)&v202 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  v211 = (char *)&v202 - v32;
  sub_1DF12D018();
  uint64_t v235 = v33;
  uint64_t v234 = *(void *)(v33 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v33);
  v208 = (char *)&v202 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  v207 = (char *)&v202 - v36;
  sub_1DF12CF30();
  uint64_t v257 = *(void *)(v37 - 8);
  uint64_t v258 = v37;
  uint64_t v38 = MEMORY[0x1F4188790](v37);
  v213 = (char *)&v202 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v225 = (char *)&v202 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  v252 = (char *)&v202 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  v239 = (char *)&v202 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  v206 = (char *)&v202 - v47;
  MEMORY[0x1F4188790](v46);
  v205 = (char *)&v202 - v48;
  uint64_t v49 = sub_1DFDFA6C0();
  uint64_t v253 = *(void *)(v49 - 8);
  uint64_t v254 = v49;
  uint64_t v50 = MEMORY[0x1F4188790](v49);
  v204 = (char *)&v202 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v50);
  v203 = (char *)&v202 - v52;
  uint64_t v53 = type metadata accessor for TagFeedModel(0);
  uint64_t v54 = MEMORY[0x1F4188790](v53);
  v259 = (char *)&v202 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  uint64_t v233 = (uint64_t)&v202 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  uint64_t v232 = (uint64_t)&v202 - v59;
  uint64_t v60 = MEMORY[0x1F4188790](v58);
  uint64_t v231 = (uint64_t)&v202 - v61;
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  uint64_t v229 = (uint64_t)&v202 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  uint64_t v228 = (uint64_t)&v202 - v65;
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  uint64_t v68 = (uint64_t *)((char *)&v202 - v67);
  uint64_t v69 = MEMORY[0x1F4188790](v66);
  uint64_t v230 = (uint64_t)&v202 - v70;
  uint64_t v71 = MEMORY[0x1F4188790](v69);
  uint64_t v227 = (uint64_t)&v202 - v72;
  uint64_t v73 = MEMORY[0x1F4188790](v71);
  uint64_t v75 = (char *)&v202 - v74;
  uint64_t v76 = MEMORY[0x1F4188790](v73);
  uint64_t v78 = (char *)&v202 - v77;
  uint64_t v79 = MEMORY[0x1F4188790](v76);
  uint64_t v81 = (char *)&v202 - v80;
  uint64_t v82 = MEMORY[0x1F4188790](v79);
  uint64_t v84 = (char *)&v202 - v83;
  uint64_t v85 = MEMORY[0x1F4188790](v82);
  uint64_t v251 = (uint64_t)&v202 - v86;
  MEMORY[0x1F4188790](v85);
  uint64_t v88 = (uint64_t *)((char *)&v202 - v87);
  sub_1DF13E020();
  uint64_t v90 = MEMORY[0x1F4188790](v89 - 8);
  uint64_t v92 = (char *)&v202 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = (uint64_t)&v92[*(int *)(v90 + 56)];
  sub_1DF13C0FC(v262, (uint64_t)v92, type metadata accessor for TagFeedModel);
  v261 = (uint64_t *)v93;
  sub_1DF13C0FC(v260, v93, type metadata accessor for TagFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v102 = v251;
      sub_1DF13C0FC((uint64_t)v92, v251, type metadata accessor for TagFeedModel);
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v104 = *(int *)(v103 + 48);
      uint64_t v105 = v102 + v104;
      uint64_t v106 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v107 = v106 + v104;
        uint64_t v109 = v253;
        uint64_t v108 = v254;
        uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v253 + 32);
        uint64_t v111 = v203;
        v110(v203, v105, v254);
        uint64_t v112 = v204;
        v110(v204, v107, v108);
        char v113 = MEMORY[0x1E01E8EB0](v111, v112);
        uint64_t v114 = *(void (**)(char *, uint64_t))(v109 + 8);
        v114(v112, v108);
        v114(v111, v108);
        sub_1DF13C038((uint64_t)v261, type metadata accessor for TagFeedGapLocation);
        uint64_t v115 = v251;
        goto LABEL_69;
      }
      (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v102 + v104, v254);
      sub_1DF13C038(v102, type metadata accessor for TagFeedGapLocation);
      goto LABEL_50;
    case 2u:
      sub_1DF13C0FC((uint64_t)v92, (uint64_t)v84, type metadata accessor for TagFeedModel);
      uint64_t v116 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v118 = v257;
        uint64_t v117 = v258;
        uint64_t v119 = *(void (**)(void))(v257 + 32);
        uint64_t v120 = v205;
        v119();
        uint64_t v121 = v206;
        ((void (*)(char *, uint64_t, uint64_t))v119)(v206, v116, v117);
        sub_1DFDFA100();
        sub_1DEBC9E14();
        uint64_t v122 = (void (*)(uint64_t))MEMORY[0x1E4F80560];
        sub_1DEAD9728((unint64_t *)&unk_1EBAE9C20, MEMORY[0x1E4F80560]);
        sub_1DEAD9728((unint64_t *)&unk_1EBAE9C10, v122);
        uint64_t v123 = v120;
        char v113 = sub_1DFDF9A70();
        uint64_t v124 = *(void (**)(char *, uint64_t))(v118 + 8);
        v124(v121, v117);
        v124(v123, v117);
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v257 + 8))(v84, v258);
      goto LABEL_50;
    case 3u:
      sub_1DF13C0FC((uint64_t)v92, (uint64_t)v81, type metadata accessor for TagFeedModel);
      uint64_t v125 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v126 = v234;
        uint64_t v127 = *(void (**)(char *, char *, uint64_t))(v234 + 32);
        uint64_t v128 = v207;
        uint64_t v129 = v235;
        v127(v207, v81, v235);
        unint64_t v130 = v208;
        v127(v208, (char *)v125, v129);
        sub_1DFDF9760();
        sub_1DEBC9E14();
        uint64_t v131 = (void (*)(uint64_t))MEMORY[0x1E4F80210];
        sub_1DEAD9728(&qword_1EBAE9A60, MEMORY[0x1E4F80210]);
        uint64_t v132 = (unint64_t *)&unk_1EBAE9A50;
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t))(v234 + 8))(v81, v235);
      goto LABEL_50;
    case 4u:
      sub_1DF13C0FC((uint64_t)v92, (uint64_t)v78, type metadata accessor for TagFeedModel);
      uint64_t v133 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v126 = v238;
        uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v238 + 32);
        uint64_t v128 = v211;
        uint64_t v135 = v78;
        uint64_t v129 = v240;
        v134(v211, v135, v240);
        unint64_t v130 = v212;
        v134(v212, (char *)v133, v129);
        sub_1DFDFA250();
        sub_1DEBC9E14();
        uint64_t v131 = (void (*)(uint64_t))MEMORY[0x1E4F805F8];
        sub_1DEAD9728(&qword_1EBAE9C70, MEMORY[0x1E4F805F8]);
        uint64_t v132 = (unint64_t *)&unk_1EBAE9C60;
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t))(v238 + 8))(v78, v240);
      goto LABEL_50;
    case 5u:
      sub_1DF13C0FC((uint64_t)v92, (uint64_t)v75, type metadata accessor for TagFeedModel);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        sub_1DFDF0720();
        char v113 = sub_1DFDF06F0();
        swift_release();
        swift_release();
        goto LABEL_35;
      }
      swift_release();
      goto LABEL_50;
    case 6u:
      uint64_t v136 = v227;
      sub_1DF13C0FC((uint64_t)v92, v227, type metadata accessor for TagFeedModel);
      uint64_t v137 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v138 = v236;
        unint64_t v139 = *(void (**)(char *, uint64_t, uint64_t))(v236 + 32);
        uint64_t v140 = v209;
        uint64_t v141 = v237;
        v139(v209, v136, v237);
        uint64_t v142 = v210;
        v139(v210, v137, v141);
        char v113 = MEMORY[0x1E01E8750](v140, v142);
        uint64_t v143 = *(void (**)(char *, uint64_t))(v138 + 8);
        v143(v142, v141);
        v143(v140, v141);
        goto LABEL_35;
      }
      (*(void (**)(uint64_t, uint64_t))(v236 + 8))(v136, v237);
      goto LABEL_50;
    case 7u:
      uint64_t v144 = v230;
      sub_1DF13C0FC((uint64_t)v92, v230, type metadata accessor for TagFeedModel);
      sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
      uint64_t v146 = *(int *)(v145 + 48);
      uint64_t v147 = v144 + v146;
      uint64_t v148 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v144 + v146, v258);
        (*(void (**)(uint64_t, uint64_t))(v255 + 8))(v144, v256);
        goto LABEL_50;
      }
      uint64_t v149 = v148 + v146;
      uint64_t v150 = *(void (**)(char *, uint64_t, uint64_t))(v255 + 32);
      uint64_t v151 = v144;
      uint64_t v152 = v256;
      v150(v226, v151, v256);
      v153 = v220;
      v150(v220, v148, v152);
      uint64_t v155 = v257;
      uint64_t v154 = v258;
      v156 = *(void (**)(char *, uint64_t, uint64_t))(v257 + 32);
      uint64_t v157 = v239;
      v156(v239, v147, v258);
      v156(v252, v149, v154);
      sub_1DFDF6AC0();
      uint64_t v158 = (void (*)(uint64_t))MEMORY[0x1E4F7B0B8];
      sub_1DEAD9728(&qword_1EBAA3BD0, MEMORY[0x1E4F7B0B8]);
      sub_1DEAD9728((unint64_t *)&unk_1EBAA3BC0, v158);
      uint64_t v159 = v153;
      char v160 = sub_1DFDF9A70();
      v161 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
      uint64_t v162 = v225;
      v161(v225, v157, v154);
      uint64_t v163 = v213;
      v161(v213, v252, v154);
      if (v160)
      {
        sub_1DFDFA100();
        sub_1DEBC9E14();
        uint64_t v164 = (void (*)(uint64_t))MEMORY[0x1E4F80560];
        sub_1DEAD9728((unint64_t *)&unk_1EBAE9C20, MEMORY[0x1E4F80560]);
        sub_1DEAD9728((unint64_t *)&unk_1EBAE9C10, v164);
        uint64_t v162 = v225;
        char v113 = sub_1DFDF9A70();
      }
      else
      {
        char v113 = 0;
      }
      v197 = v226;
      uint64_t v198 = v258;
      v199 = *(void (**)(char *, uint64_t))(v257 + 8);
      v199(v163, v258);
      v199(v162, v198);
      v199(v252, v198);
      v199(v239, v198);
      uint64_t v200 = v256;
      v201 = *(void (**)(char *, uint64_t))(v255 + 8);
      v201(v159, v256);
      v201(v197, v200);
      goto LABEL_35;
    case 8u:
      sub_1DF13C0FC((uint64_t)v92, (uint64_t)v68, type metadata accessor for TagFeedModel);
      uint64_t v166 = *v68;
      uint64_t v165 = v68[1];
      uint64_t v167 = v261;
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        swift_bridgeObjectRelease();
        uint64_t v100 = v262;
        uint64_t v101 = (uint64_t)v259;
        goto LABEL_51;
      }
      uint64_t v168 = *v167;
      uint64_t v169 = v167[1];
      if (v166 == v168 && v165 == v169) {
        char v113 = 1;
      }
      else {
        char v113 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    case 9u:
      uint64_t v170 = v228;
      sub_1DF13C0FC((uint64_t)v92, v228, type metadata accessor for TagFeedModel);
      uint64_t v171 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v126 = v241;
        uint64_t v172 = *(void (**)(char *, uint64_t, uint64_t))(v241 + 32);
        uint64_t v128 = v214;
        uint64_t v173 = v170;
        uint64_t v129 = v242;
        v172(v214, v173, v242);
        unint64_t v130 = v215;
        v172(v215, v171, v129);
        sub_1DFDF7190();
        sub_1DEBC9E14();
        uint64_t v131 = (void (*)(uint64_t))MEMORY[0x1E4F7F338];
        sub_1DEAD9728(&qword_1EBAE9260, MEMORY[0x1E4F7F338]);
        uint64_t v132 = (unint64_t *)&unk_1EBAE9250;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v241 + 8))(v170, v242);
      goto LABEL_50;
    case 0xAu:
      uint64_t v174 = v229;
      sub_1DF13C0FC((uint64_t)v92, v229, type metadata accessor for TagFeedModel);
      uint64_t v175 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 10)
      {
        uint64_t v126 = v243;
        uint64_t v176 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 32);
        uint64_t v128 = v216;
        uint64_t v177 = v174;
        uint64_t v129 = v244;
        v176(v216, v177, v244);
        unint64_t v130 = v217;
        v176(v217, v175, v129);
        sub_1DFDF9A50();
        sub_1DEBC9E14();
        uint64_t v131 = (void (*)(uint64_t))MEMORY[0x1E4F80490];
        sub_1DEAD9728(&qword_1EBAE9A90, MEMORY[0x1E4F80490]);
        uint64_t v132 = (unint64_t *)&unk_1EBAE9A80;
        goto LABEL_33;
      }
      uint64_t v189 = v243;
      uint64_t v188 = v244;
      goto LABEL_49;
    case 0xBu:
      uint64_t v174 = v231;
      sub_1DF13C0FC((uint64_t)v92, v231, type metadata accessor for TagFeedModel);
      uint64_t v178 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 11)
      {
        uint64_t v126 = v245;
        uint64_t v179 = *(void (**)(char *, uint64_t, uint64_t))(v245 + 32);
        uint64_t v128 = v218;
        uint64_t v180 = v174;
        uint64_t v129 = v246;
        v179(v218, v180, v246);
        unint64_t v130 = v219;
        v179(v219, v178, v129);
        sub_1DFDF9D20();
        sub_1DEBC9E14();
        uint64_t v131 = (void (*)(uint64_t))MEMORY[0x1E4F804D0];
        sub_1DEAD9728(&qword_1EBAE9BC0, MEMORY[0x1E4F804D0]);
        uint64_t v132 = (unint64_t *)&unk_1EBAE9BB0;
        goto LABEL_33;
      }
      uint64_t v189 = v245;
      uint64_t v188 = v246;
      goto LABEL_49;
    case 0xCu:
      uint64_t v174 = v232;
      sub_1DF13C0FC((uint64_t)v92, v232, type metadata accessor for TagFeedModel);
      uint64_t v181 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 12)
      {
        uint64_t v126 = v247;
        uint64_t v182 = *(void (**)(char *, uint64_t, uint64_t))(v247 + 32);
        uint64_t v128 = v221;
        uint64_t v183 = v174;
        uint64_t v129 = v248;
        v182(v221, v183, v248);
        unint64_t v130 = v222;
        v182(v222, v181, v129);
        sub_1DFDF7240();
        sub_1DEBC9E14();
        uint64_t v131 = (void (*)(uint64_t))MEMORY[0x1E4F7F3B8];
        sub_1DEAD9728((unint64_t *)&unk_1EBAE9290, MEMORY[0x1E4F7F3B8]);
        uint64_t v132 = (unint64_t *)&unk_1EBAE9280;
        goto LABEL_33;
      }
      uint64_t v189 = v247;
      uint64_t v188 = v248;
      goto LABEL_49;
    case 0xDu:
      uint64_t v174 = v233;
      sub_1DF13C0FC((uint64_t)v92, v233, type metadata accessor for TagFeedModel);
      uint64_t v184 = (uint64_t)v261;
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        uint64_t v126 = v249;
        uint64_t v185 = *(void (**)(char *, uint64_t, uint64_t))(v249 + 32);
        uint64_t v128 = v223;
        uint64_t v186 = v174;
        uint64_t v129 = v250;
        v185(v223, v186, v250);
        unint64_t v130 = v224;
        v185(v224, v184, v129);
        sub_1DFDF81A0();
        sub_1DEBC9E14();
        uint64_t v131 = (void (*)(uint64_t))MEMORY[0x1E4F7F838];
        sub_1DEAD9728((unint64_t *)&unk_1EBAD1630, MEMORY[0x1E4F7F838]);
        uint64_t v132 = &qword_1EBAD1628;
LABEL_33:
        sub_1DEAD9728(v132, v131);
        char v113 = sub_1DFDF9A70();
        long long v187 = *(void (**)(char *, uint64_t))(v126 + 8);
        v187(v130, v129);
        v187(v128, v129);
        goto LABEL_35;
      }
      uint64_t v189 = v249;
      uint64_t v188 = v250;
LABEL_49:
      (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v174, v188);
LABEL_50:
      uint64_t v100 = v262;
      uint64_t v101 = (uint64_t)v259;
      goto LABEL_51;
    default:
      sub_1DF13C0FC((uint64_t)v92, (uint64_t)v88, type metadata accessor for TagFeedModel);
      uint64_t v95 = *v88;
      uint64_t v94 = v88[1];
      sub_1DEBCA220();
      uint64_t v97 = v96;
      uint64_t v98 = (uint64_t)v88 + *(int *)(v96 + 48);
      uint64_t v99 = v261;
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1DF13C038(v98, type metadata accessor for TagFeedGapLocation);
        swift_bridgeObjectRelease();
        uint64_t v100 = v262;
        uint64_t v101 = (uint64_t)v259;
LABEL_51:
        sub_1DF13C038((uint64_t)v92, (uint64_t (*)(void))sub_1DF13E020);
        sub_1DF13C0FC(v100, v101, type metadata accessor for TagFeedModel);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1DF12D100(0, (unint64_t *)&qword_1EAC21500, (void (*)(uint64_t))type metadata accessor for TagFeedGapLocation, MEMORY[0x1E4F808C0]);
            (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v101 + *(int *)(v195 + 48), v254);
            long long v190 = type metadata accessor for TagFeedGapLocation;
            goto LABEL_53;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 8u:
          case 9u:
          case 0xAu:
          case 0xBu:
          case 0xCu:
          case 0xDu:
            long long v190 = type metadata accessor for TagFeedModel;
LABEL_53:
            long long v191 = v190;
            uint64_t v192 = v101;
            goto LABEL_54;
          case 7u:
            sub_1DF12D100(0, (unint64_t *)&qword_1EAC22F50, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DF12CF30);
            (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v101 + *(int *)(v196 + 48), v258);
            (*(void (**)(uint64_t, uint64_t))(v255 + 8))(v101, v256);
            goto LABEL_55;
          default:
            swift_bridgeObjectRelease();
            sub_1DEBCA220();
            uint64_t v192 = v101 + *(int *)(v194 + 48);
            long long v191 = type metadata accessor for TagFeedGapLocation;
LABEL_54:
            sub_1DF13C038(v192, v191);
LABEL_55:
            char v113 = 0;
            break;
        }
      }
      else
      {
        if (v95 == *v99 && v94 == v99[1]) {
          char v113 = 1;
        }
        else {
          char v113 = sub_1DFDFFF50();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DF13C038((uint64_t)v99 + *(int *)(v97 + 48), type metadata accessor for TagFeedGapLocation);
        uint64_t v115 = v98;
LABEL_69:
        sub_1DF13C038(v115, type metadata accessor for TagFeedGapLocation);
LABEL_35:
        sub_1DF13C038((uint64_t)v92, type metadata accessor for TagFeedModel);
      }
      return v113 & 1;
  }
}

void sub_1DF13E020()
{
  if (!qword_1EBAD4018)
  {
    type metadata accessor for TagFeedModel(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAD4018);
    }
  }
}

uint64_t sub_1DF13E0F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF13E140()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF13E178()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF13E1B8(void *a1, uint64_t a2, uint64_t a3)
{
  *(void *)&long long v89 = a3;
  uint64_t v5 = sub_1DFDF3F70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v81 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1DFDF2BF0();
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v76 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1DFDF3F80();
  uint64_t v77 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v73 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1DFDF4540();
  uint64_t v78 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v75 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF2EA0();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v66 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1DFDF2E80();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v64 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF13F94C(0, (unint64_t *)&unk_1EBAA80D0, MEMORY[0x1E4FAC950], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v61 - v15;
  uint64_t v70 = sub_1DFDF2EB0();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v65 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
  uint64_t v71 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader(0);
  uint64_t v67 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v88 = (uint64_t)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, a1[4], a1[5]);
  uint64_t v23 = type metadata accessor for MyMagazinesMagazineFeedGroup();
  uint64_t v24 = *(void *)((char *)a1 + *(int *)(v23 + 56));
  uint64_t v82 = v6;
  uint64_t v83 = v5;
  if (v24 && *((unsigned char *)a1 + *(int *)(v23 + 60)) == 1)
  {
    swift_unknownObjectRetain();
    id v25 = v22;
    uint64_t v26 = sub_1DF96CB90(v24);
    uint64_t v85 = v27;
    uint64_t v86 = v26;
    uint64_t v84 = v28;
  }
  else
  {
    uint64_t v85 = 0;
    uint64_t v86 = 0;
    uint64_t v84 = 0;
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v30 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  if (a2 < 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  else
  {
    sub_1DF13F94C(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v31 + 16) = xmmword_1DFE0B250;
    uint64_t v33 = MEMORY[0x1E4FBB5C8];
    *(void *)(v31 + 56) = v32;
    *(void *)(v31 + 64) = v33;
    *(void *)(v31 + 32) = a2;
    uint64_t v34 = sub_1DFDFDD60();
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = a1[3];
  v90[0] = a1[2];
  v90[1] = v37;
  v90[2] = 0x403D000000000000;
  v90[3] = v22;
  v90[4] = v34;
  v90[5] = v36;
  uint64_t v39 = v85;
  uint64_t v38 = v86;
  v90[6] = v86;
  v90[7] = v85;
  v90[8] = v84;
  id v40 = v22;
  swift_bridgeObjectRetain();
  sub_1DF13F848(v38, v39);
  sub_1DF13ED88((uint64_t)v90, v89, 1, v88);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DF13F890(v38, v39);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v16, 1, 1, v63);
  if (qword_1EAC1CC00 != -1) {
    swift_once();
  }
  uint64_t v41 = qword_1EAC1CC08;
  id v42 = v40;
  swift_bridgeObjectRetain();
  if (v41 != -1) {
    swift_once();
  }
  sub_1DFDF2E70();
  sub_1DEB69898();
  sub_1DFDFF360();
  id v43 = objc_msgSend((id)qword_1EACDF780, sel_imageWithTintColor_renderingMode_, v42, 1);
  id v44 = v42;
  sub_1DFDF2E90();
  uint64_t v45 = v87;
  id v46 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v87 + 16), *(void *)(v87 + 40))
                          + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                          + 72));
  uint64_t v47 = v65;
  sub_1DFDF2E60();
  __swift_project_boxed_opaque_existential_1((void *)(v45 + 96), *(void *)(v45 + 120));
  (*(void (**)(char *, void, uint64_t))(v72 + 16))(v76, v89, v74);
  (*(void (**)(char *, void, uint64_t))(v82 + 104))(v81, *MEMORY[0x1E4FAD218], v83);
  uint64_t v48 = v73;
  sub_1DFDF3F60();
  uint64_t v49 = v75;
  sub_1DFDF4D60();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v48, v79);
  sub_1DF13F8D8();
  uint64_t v51 = &v19[*(int *)(v50 + 48)];
  uint64_t v52 = v69;
  uint64_t v53 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v19, v47, v70);
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v51, v49, v80);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v53);
  uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DF13F94C(0, &qword_1EBAEAF30, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader, MEMORY[0x1E4FBBE00]);
  unint64_t v55 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  uint64_t v56 = swift_allocObject();
  long long v89 = xmmword_1DFE0B250;
  *(_OWORD *)(v56 + 16) = xmmword_1DFE0B250;
  uint64_t v57 = v88;
  sub_1DEAC4300(v88, v56 + v55, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  sub_1DF13F94C(0, &qword_1EBAEAF28, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter, v54);
  unint64_t v58 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v89;
  sub_1DEAC4300((uint64_t)v19, v59 + v58, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  sub_1DF13F890(v86, v85);

  sub_1DF13F9B0((uint64_t)v19, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  sub_1DF13F9B0(v57, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  return v56;
}

void *sub_1DF13ED88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v29 = a3 & 1;
  uint64_t v8 = type metadata accessor for MagazineFeedGroupTitleViewLayoutOptions();
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 56), *(void *)(v4 + 80));
  uint64_t v15 = sub_1DFDF2BF0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v11, a2, v15);
  uint64_t v16 = type metadata accessor for MagazineFeedEmbeddedSupplementaryOptions();
  uint64_t v17 = a2 + *(int *)(v16 + 20);
  uint64_t v18 = &v11[v9[9]];
  uint64_t v19 = sub_1DFDE8160();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v17, v19);
  uint64_t v20 = a2 + *(int *)(v16 + 24);
  uint64_t v21 = &v11[v9[12]];
  uint64_t v22 = sub_1DFDE81B0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, v20, v22);
  *(void *)&v11[v9[7]] = 0x4042800000000000;
  *(void *)&v11[v9[8]] = 0;
  v11[v9[10]] = v29;
  v11[v9[11]] = 0;
  sub_1DF451444(a1, (uint64_t)v11, (uint64_t)v14);
  sub_1DF13F9B0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupTitleViewLayoutOptions);
  sub_1DF13FA10();
  uint64_t v24 = a4 + *(int *)(v23 + 48);
  long long v25 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 48) = v25;
  *(void *)(a4 + 64) = *(void *)(a1 + 64);
  long long v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v26;
  sub_1DF13FAE4((uint64_t)v14, v24, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes);
  return sub_1DF13FA7C((void *)a1);
}

uint64_t sub_1DF13F004(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = sub_1DFDF4140();
  uint64_t v4 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v27 = type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v24 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader(0);
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = self;
  swift_bridgeObjectRetain();
  id v14 = objc_msgSend(v13, sel_labelColor);
  v30[0] = v11;
  v30[1] = v12;
  v30[2] = 0x403D000000000000;
  v30[3] = v14;
  long long v31 = 0u;
  long long v32 = 0u;
  uint64_t v33 = 0;
  sub_1DF13ED88((uint64_t)v30, a2, 0, (uint64_t)v10);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1DF13F890(0, 0);
  sub_1DFDF2BE0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAD2A8], v25);
  sub_1DFDFD820();
  swift_allocObject();
  uint64_t v15 = sub_1DFDFD800();
  uint64_t v16 = (uint64_t)v24;
  *uint64_t v24 = v15;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DF13F94C(0, &qword_1EBAEAF30, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader, MEMORY[0x1E4FBBE00]);
  unint64_t v18 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v19 = swift_allocObject();
  long long v27 = xmmword_1DFE0B250;
  *(_OWORD *)(v19 + 16) = xmmword_1DFE0B250;
  sub_1DEAC4300((uint64_t)v10, v19 + v18, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  sub_1DF13F94C(0, &qword_1EBAEAF28, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter, v17);
  unint64_t v20 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v27;
  sub_1DF13FAE4(v16, v21 + v20, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  sub_1DF13F9B0((uint64_t)v10, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  return v19;
}

uint64_t sub_1DF13F41C(void *a1, uint64_t a2)
{
  uint64_t v27 = sub_1DFDF4140();
  uint64_t v4 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v29 = type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v26 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader(0);
  uint64_t v28 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v12 = self;
  swift_bridgeObjectRetain();
  id v13 = objc_msgSend(v12, sel_labelColor);
  uint64_t v14 = a1[6];
  uint64_t v15 = a1[7];
  v32[0] = v11;
  v32[1] = v10;
  v32[2] = 0x403D000000000000;
  v32[3] = v13;
  v32[4] = v14;
  v32[5] = v15;
  memset(&v32[6], 0, 24);
  swift_bridgeObjectRetain();
  sub_1DF13ED88((uint64_t)v32, a2, 0, (uint64_t)v9);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1DF13F890(0, 0);
  sub_1DFDF2BE0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v25, *MEMORY[0x1E4FAD2A8], v27);
  sub_1DFDFD820();
  swift_allocObject();
  uint64_t v16 = sub_1DFDFD800();
  uint64_t v17 = (uint64_t)v26;
  *uint64_t v26 = v16;
  swift_storeEnumTagMultiPayload();
  unint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DF13F94C(0, &qword_1EBAEAF30, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader, MEMORY[0x1E4FBBE00]);
  unint64_t v19 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v20 = swift_allocObject();
  long long v29 = xmmword_1DFE0B250;
  *(_OWORD *)(v20 + 16) = xmmword_1DFE0B250;
  sub_1DEAC4300((uint64_t)v9, v20 + v19, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  sub_1DF13F94C(0, &qword_1EBAEAF28, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter, v18);
  unint64_t v21 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v29;
  sub_1DF13FAE4(v17, v22 + v21, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  sub_1DF13F9B0((uint64_t)v9, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  return v20;
}

uint64_t sub_1DF13F848(uint64_t result, void *a2)
{
  if (result)
  {
    swift_unknownObjectRetain();
    id v3 = a2;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1DF13F890(uint64_t result, void *a2)
{
  if (result)
  {
    swift_unknownObjectRelease();

    return swift_release();
  }
  return result;
}

void sub_1DF13F8D8()
{
  if (!qword_1EAC28BD0)
  {
    sub_1DFDF2EB0();
    sub_1DFDF4540();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC28BD0);
    }
  }
}

void sub_1DF13F94C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF13F9B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DF13FA10()
{
  if (!qword_1EBAE26F0)
  {
    type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAE26F0);
    }
  }
}

void *sub_1DF13FA7C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  uint64_t v3 = a1[6];
  uint64_t v4 = (void *)a1[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v2;
  sub_1DF13F848(v3, v4);
  return a1;
}

uint64_t sub_1DF13FAE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF13FB4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *__swift_project_boxed_opaque_existential_1((void *)(a2 + 56), *(void *)(a2 + 80));
  swift_retain();
  uint64_t v5 = sub_1DF14005C(v3, v4);
  uint64_t v28 = v2;
  uint64_t result = swift_release();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8)
  {
    unint64_t v9 = 0;
    uint64_t v10 = v5 + 32;
    while (v9 < *(void *)(v5 + 16))
    {
      sub_1DEB288A8(v10, (uint64_t)v25);
      BOOL v11 = *(void *)&v25[0] == 0x657061707377656ELL && *((void *)&v25[0] + 1) == 0xEA00000000007372;
      if (v11 || (sub_1DFDFFF50() & 1) != 0)
      {
        uint64_t result = sub_1DEDD5CF4((uint64_t)v25);
      }
      else
      {
        long long v23 = v25[8];
        *(_OWORD *)uint64_t v24 = v26[0];
        *(_OWORD *)&v24[9] = *(_OWORD *)((char *)v26 + 9);
        long long v19 = v25[4];
        long long v20 = v25[5];
        long long v21 = v25[6];
        long long v22 = v25[7];
        long long v15 = v25[0];
        long long v16 = v25[1];
        long long v17 = v25[2];
        long long v18 = v25[3];
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          uint64_t result = sub_1DEDF6F3C(0, *(void *)(v7 + 16) + 1, 1);
        }
        uint64_t v7 = v27;
        unint64_t v13 = *(void *)(v27 + 16);
        unint64_t v12 = *(void *)(v27 + 24);
        if (v13 >= v12 >> 1)
        {
          uint64_t result = sub_1DEDF6F3C(v12 > 1, v13 + 1, 1);
          uint64_t v7 = v27;
        }
        *(void *)(v7 + 16) = v13 + 1;
        uint64_t v14 = (_OWORD *)(v7 + 176 * v13);
        v14[10] = v23;
        v14[11] = *(_OWORD *)v24;
        *(_OWORD *)((char *)v14 + 185) = *(_OWORD *)&v24[9];
        v14[6] = v19;
        v14[7] = v20;
        v14[8] = v21;
        v14[9] = v22;
        v14[2] = v15;
        v14[3] = v16;
        v14[4] = v17;
        v14[5] = v18;
      }
      ++v9;
      v10 += 176;
      if (v8 == v9) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    *(void *)&v25[0] = v7;
    sub_1DF1401F8();
    swift_allocObject();
    return sub_1DFDEDE90();
  }
  return result;
}

void sub_1DF13FD78()
{
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1DEA08668();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1DE9B646C();
  uint64_t v1 = (void *)sub_1DFDFF5F0();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for MagazineCategoriesPickerDataManager()
{
  return self;
}

uint64_t sub_1DF13FEA0()
{
  sub_1DF140004();
  sub_1DFDEE090();
  uint64_t v0 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE10();
  swift_release();

  uint64_t v1 = (void *)sub_1DFDEDCE0();
  uint64_t v2 = sub_1DFDEDE50();
  swift_release();

  return v2;
}

uint64_t sub_1DF13FF98()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = off_1F3AA8890;
  type metadata accessor for MagazineCategoryConfigService();
  return v1();
}

void sub_1DF140004()
{
  if (!qword_1EBABA810)
  {
    type metadata accessor for MagazineCategoryConfig(255);
    unint64_t v0 = sub_1DFDFE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABA810);
    }
  }
}

uint64_t sub_1DF14005C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1DEDF6F3C(0, v4, 0);
    uint64_t v5 = v25;
    uint64_t v8 = *(void *)(type metadata accessor for MagazineCategoryConfig(0) - 8);
    unint64_t v9 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
    uint64_t v10 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DF421BF4(v9, a2, (uint64_t)v23);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      uint64_t v25 = v5;
      unint64_t v12 = *(void *)(v5 + 16);
      unint64_t v11 = *(void *)(v5 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1DEDF6F3C(v11 > 1, v12 + 1, 1);
        uint64_t v5 = v25;
      }
      *(void *)(v5 + 16) = v12 + 1;
      unint64_t v13 = (_OWORD *)(v5 + 176 * v12);
      long long v14 = v23[0];
      long long v15 = v23[2];
      v13[3] = v23[1];
      v13[4] = v15;
      void v13[2] = v14;
      long long v16 = v23[3];
      long long v17 = v23[4];
      long long v18 = v23[6];
      v13[7] = v23[5];
      v13[8] = v18;
      v13[5] = v16;
      v13[6] = v17;
      long long v19 = v23[7];
      long long v20 = v23[8];
      long long v21 = v24[0];
      *(_OWORD *)((char *)v13 + 185) = *(_OWORD *)((char *)v24 + 9);
      v13[10] = v20;
      v13[11] = v21;
      v13[9] = v19;
      unint64_t v9 = (uint64_t *)((char *)v9 + v10);
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
  }
  return v5;
}

void sub_1DF1401F8()
{
  if (!qword_1EAC28BD8)
  {
    unint64_t v0 = sub_1DFDEDFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC28BD8);
    }
  }
}

uint64_t sub_1DF140250(void *a1)
{
  __swift_project_boxed_opaque_existential_1(v1 + 11, v1[14]);
  sub_1DEE85B3C(a1);
  __swift_project_boxed_opaque_existential_1(v1 + 16, v1[19]);
  id v3 = objc_msgSend(a1, sel_identifier);
  uint64_t v4 = sub_1DFDFDD20();
  uint64_t v6 = v5;

  uint64_t v7 = *(void *)(*__swift_project_boxed_opaque_existential_1(v1 + 11, v1[14]) + 16);
  swift_retain();
  sub_1DFBB28FC(v4, v6, 1, (uint64_t)(v1 + 21), v7);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DECD22C4(objc_msgSend(a1, sel_backingTag));
  swift_unknownObjectRelease();
  return sub_1DECD30C8();
}

uint64_t sub_1DF140360()
{
  sub_1DEB1DDEC(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagFeedViewerEventHandler()
{
  return self;
}

uint64_t type metadata accessor for MagazineSectionBarBlueprintViewSupplementaryViewProvider()
{
  return self;
}

void sub_1DF1404B4()
{
}

void *sub_1DF140510(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEA9219C((uint64_t)a1, type metadata accessor for TodayLayoutSectionDescriptor);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1DFDF7010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1DEA8CCD4();
      *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
      *(void *)((char *)a1 + v8[8]) = *(void *)((char *)a2 + v8[8]);
      *(void *)((char *)a1 + v8[9]) = *(void *)((char *)a2 + v8[9]);
      uint64_t v9 = v8[10];
      uint64_t v10 = (char *)a1 + v9;
      unint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1DFDF76C0();
      unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *sub_1DF140700(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1DFDF7010();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_1DEA8CCD4();
    *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
    *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    uint64_t v8 = v7[10];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1DFDF76C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1DF140828(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEA9219C((uint64_t)a1, type metadata accessor for TodayLayoutSectionDescriptor);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1DFDF7010();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      sub_1DEA8CCD4();
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      uint64_t v8 = v7[10];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_1DFDF76C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t *sub_1DF140974(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1DFDF76C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  unsigned int v11 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v10 + ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10)
     + *(void *)(*(void *)(v8 - 8) + 64) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    long long v16 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v17 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *long long v16 = *v17;
    long long v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    *long long v18 = *v19;
    long long v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    *long long v20 = *v21;
    uint64_t v22 = ((unint64_t)v20 + v10 + 8) & ~v10;
    uint64_t v23 = ((unint64_t)v21 + v10 + 8) & ~v10;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v22, v23, v15);
  }
  return a1;
}

uint64_t sub_1DF140B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  unsigned int v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v11 = *v12;
  uint64_t v13 = sub_1DFDF76C0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = ((unint64_t)v11 + v16 + 8) & ~v16;
  uint64_t v18 = ((unint64_t)v12 + v16 + 8) & ~v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v17, v18, v13);
  return a1;
}

uint64_t sub_1DF140C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v7 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v10 = *(void *)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v11 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v11 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1DFDF76C0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 24))(((unint64_t)v11 + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), ((unint64_t)v12 + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), v13);
  return a1;
}

uint64_t sub_1DF140DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  unint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  unsigned int v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v11 = *v12;
  uint64_t v13 = sub_1DFDF76C0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 32))(((unint64_t)v11 + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), ((unint64_t)v12 + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), v13);
  return a1;
}

uint64_t sub_1DF140E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  swift_bridgeObjectRelease();
  unsigned int v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v11 = *v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1DFDF76C0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 40))(((unint64_t)v11 + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), ((unint64_t)v12 + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), v13);
  return a1;
}

uint64_t sub_1DF140F94(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_1DFDF76C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v11 + 8;
  if (a2 <= v13) {
    goto LABEL_28;
  }
  unint64_t v15 = ((v14 + ((((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)
      + *(void *)(*(void *)(v8 - 8) + 64);
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v19 = ((a2 - v13 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 < 2)
    {
LABEL_28:
      if (v7 == v13)
      {
        uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v23(a1, v7, v5);
      }
      else
      {
        uint64_t v24 = (unint64_t *)(((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((v12 & 0x80000000) != 0)
        {
          uint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v26((v14 + (((((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11);
        }
        else
        {
          unint64_t v25 = *v24;
          if (v25 >= 0xFFFFFFFF) {
            LODWORD(v25) = -1;
          }
          return (v25 + 1);
        }
      }
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_28;
  }
LABEL_18:
  int v20 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v20 = 0;
  }
  if (v15)
  {
    if (v15 <= 3) {
      int v21 = v15;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v13 + (v22 | v20) + 1;
}

void sub_1DF141270(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v27 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_1DFDF76C0() - 8);
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v9 <= *(_DWORD *)(v10 + 84)) {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v13 = v9;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = v12 + 8;
  size_t v16 = ((v12 + 8 + ((((((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
      + *(void *)(v10 + 64);
  if (a3 <= v14)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v21 = ((a3 - v14 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v21))
    {
      int v17 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v21 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v18 = ~v14 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v22 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_49;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  uint64_t v20 = ~v12;
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1DF1415D0);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if (v9 == v14)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v24 = (void *)((unint64_t)&a1[v11 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((v13 & 0x80000000) != 0)
          {
            uint64_t v26 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
            v26((v15 + (((((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v20, a2);
          }
          else
          {
            if ((a2 & 0x80000000) != 0) {
              uint64_t v25 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v25 = (a2 - 1);
            }
            *uint64_t v24 = v25;
          }
        }
      }
      return;
  }
}

uint64_t sub_1DF141610(uint64_t a1)
{
  uint64_t v2 = sub_1DEA93E64(&qword_1EAC28C10, (void (*)(uint64_t))type metadata accessor for TodayLayoutSectionDescriptor);
  return MEMORY[0x1F4162DE8](a1, v2);
}

uint64_t sub_1DF14167C(uint64_t a1)
{
  uint64_t v2 = sub_1DEA93E64(&qword_1EBAB4028, (void (*)(uint64_t))type metadata accessor for TodayLayoutSectionDescriptor);
  return MEMORY[0x1F4162968](a1, v2);
}

ValueMetadata *type metadata accessor for TodayLayoutSectionDescriptor.AdData()
{
  return &type metadata for TodayLayoutSectionDescriptor.AdData;
}

uint64_t *sub_1DF141710(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1DFDF7FE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_1DF1417C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF141824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DF141888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7FE0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF1418F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDF7FE0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t *sub_1DF141970(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        swift_retain();
      }
      else
      {
        uint64_t v8 = sub_1DFDF2EB0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        sub_1DF13F8D8();
        uint64_t v10 = *(int *)(v9 + 48);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_1DFDF4540();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v7 = sub_1DFDF94D0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DF141B44(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DEA9219C((uint64_t)a1, type metadata accessor for TodayLayoutSectionDescriptor.Footer);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        swift_retain();
      }
      else
      {
        uint64_t v5 = sub_1DFDF2EB0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        sub_1DF13F8D8();
        uint64_t v7 = *(int *)(v6 + 48);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_1DFDF4540();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v4 = sub_1DFDF94D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1DF141CF0(char *a1, char *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1DFDF2EB0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      sub_1DF13F8D8();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_1DFDF4540();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    uint64_t v5 = sub_1DFDF94D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_1DF141E70(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1DEA9219C((uint64_t)a1, type metadata accessor for TodayLayoutSectionDescriptor.Footer);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      }
      else
      {
        uint64_t v6 = sub_1DFDF2EB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        sub_1DF13F8D8();
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_1DFDF4540();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      uint64_t v5 = sub_1DFDF94D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DF142014(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = (void *)a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      uint64_t v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      uint64_t v9 = a2[6];
      swift_bridgeObjectRetain();
      id v10 = v7;
      swift_bridgeObjectRetain();
      if (v9)
      {
        uint64_t v12 = (void *)a2[7];
        uint64_t v11 = a2[8];
        a1[6] = v9;
        a1[7] = v12;
        a1[8] = v11;
        swift_unknownObjectRetain();
        id v13 = v12;
        swift_retain();
      }
      else
      {
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        a1[8] = a2[8];
      }
      sub_1DF13FA10();
      uint64_t v17 = *(int *)(v16 + 48);
      unsigned int v18 = (char *)a1 + v17;
      int v19 = (char *)a2 + v17;
      long long v20 = *(_OWORD *)((char *)a2 + v17 + 16);
      *(_OWORD *)unsigned int v18 = *(_OWORD *)((char *)a2 + v17);
      *((_OWORD *)v18 + 1) = v20;
      long long v21 = *(_OWORD *)((char *)a2 + v17 + 48);
      *((_OWORD *)v18 + 2) = *(_OWORD *)((char *)a2 + v17 + 32);
      *((_OWORD *)v18 + 3) = v21;
      long long v22 = *(_OWORD *)((char *)a2 + v17 + 80);
      *((_OWORD *)v18 + 4) = *(_OWORD *)((char *)a2 + v17 + 64);
      *((_OWORD *)v18 + 5) = v22;
      v18[96] = *((unsigned char *)a2 + v17 + 96);
      uint64_t v23 = *(void **)((char *)a2 + v17 + 104);
      uint64_t v24 = *(void **)((char *)a2 + v17 + 112);
      *((void *)v18 + 13) = v23;
      *((void *)v18 + 14) = v24;
      *(_OWORD *)(v18 + 120) = *(_OWORD *)((char *)a2 + v17 + 120);
      *(_OWORD *)(v18 + 136) = *(_OWORD *)((char *)a2 + v17 + 136);
      *(_OWORD *)(v18 + 145) = *(_OWORD *)((char *)a2 + v17 + 145);
      v18[161] = *((unsigned char *)a2 + v17 + 161);
      uint64_t v25 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
      uint64_t v26 = &v18[v25];
      uint64_t v27 = &v19[v25];
      uint64_t v28 = sub_1DFDE81B0();
      long long v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      id v30 = v23;
      id v31 = v24;
      v29(v26, v27, v28);
    }
    else
    {
      uint64_t v15 = sub_1DFDF94D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DF142244(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DEA9219C((uint64_t)a1, type metadata accessor for TodayLayoutSectionDescriptor.Header);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v4 = (void *)a2[3];
      a1[3] = v4;
      a1[4] = a2[4];
      a1[5] = a2[5];
      uint64_t v5 = a2[6];
      swift_bridgeObjectRetain();
      id v6 = v4;
      swift_bridgeObjectRetain();
      if (v5)
      {
        a1[6] = v5;
        uint64_t v7 = (void *)a2[7];
        a1[7] = v7;
        a1[8] = a2[8];
        swift_unknownObjectRetain();
        id v8 = v7;
        swift_retain();
      }
      else
      {
        long long v10 = *((_OWORD *)a2 + 3);
        a1[8] = a2[8];
        *((_OWORD *)a1 + 3) = v10;
      }
      sub_1DF13FA10();
      uint64_t v12 = *(int *)(v11 + 48);
      id v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      long long v15 = *(_OWORD *)((char *)a2 + v12 + 16);
      *(_OWORD *)id v13 = *(_OWORD *)((char *)a2 + v12);
      *((_OWORD *)v13 + 1) = v15;
      long long v16 = *(_OWORD *)((char *)a2 + v12 + 48);
      *((_OWORD *)v13 + 2) = *(_OWORD *)((char *)a2 + v12 + 32);
      *((_OWORD *)v13 + 3) = v16;
      long long v17 = *(_OWORD *)((char *)a2 + v12 + 80);
      *((_OWORD *)v13 + 4) = *(_OWORD *)((char *)a2 + v12 + 64);
      *((_OWORD *)v13 + 5) = v17;
      v13[96] = *((unsigned char *)a2 + v12 + 96);
      unsigned int v18 = *(void **)((char *)a2 + v12 + 104);
      *((void *)v13 + 13) = v18;
      int v19 = *(void **)((char *)a2 + v12 + 112);
      *((void *)v13 + 14) = v19;
      long long v20 = *(_OWORD *)((char *)a2 + v12 + 136);
      long long v21 = *(_OWORD *)((char *)a2 + v12 + 120);
      *(_OWORD *)(v13 + 145) = *(_OWORD *)((char *)a2 + v12 + 145);
      *(_OWORD *)(v13 + 120) = v21;
      *(_OWORD *)(v13 + 136) = v20;
      v13[161] = *((unsigned char *)a2 + v12 + 161);
      uint64_t v22 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
      uint64_t v23 = &v13[v22];
      uint64_t v24 = &v14[v22];
      uint64_t v25 = sub_1DFDE81B0();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      id v27 = v18;
      id v28 = v19;
      v26(v23, v24, v25);
    }
    else
    {
      uint64_t v9 = sub_1DFDF94D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DF142470(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v4;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    sub_1DF13FA10();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    long long v10 = *(_OWORD *)(a2 + v7 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
    *(_OWORD *)(v8 + 16) = v10;
    long long v11 = *(_OWORD *)(a2 + v7 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + v7 + 32);
    *(_OWORD *)(v8 + 48) = v11;
    long long v12 = *(_OWORD *)(a2 + v7 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(a2 + v7 + 64);
    *(_OWORD *)(v8 + 80) = v12;
    *(unsigned char *)(v8 + 96) = *(unsigned char *)(a2 + v7 + 96);
    *(_OWORD *)(v8 + 104) = *(_OWORD *)(a2 + v7 + 104);
    *(_OWORD *)(v8 + 120) = *(_OWORD *)(a2 + v7 + 120);
    *(_OWORD *)(v8 + 136) = *(_OWORD *)(a2 + v7 + 136);
    *(_OWORD *)(v8 + 145) = *(_OWORD *)(a2 + v7 + 145);
    *(unsigned char *)(v8 + 161) = *(unsigned char *)(a2 + v7 + 161);
    uint64_t v13 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
    uint64_t v14 = v8 + v13;
    uint64_t v15 = v9 + v13;
    uint64_t v16 = sub_1DFDE81B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  }
  else
  {
    uint64_t v17 = sub_1DFDF94D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DF1425D8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DEA9219C(a1, type metadata accessor for TodayLayoutSectionDescriptor.Header);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v4 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v4;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      sub_1DF13FA10();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      long long v10 = *(_OWORD *)(a2 + v7 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
      *(_OWORD *)(v8 + 16) = v10;
      long long v11 = *(_OWORD *)(a2 + v7 + 48);
      *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + v7 + 32);
      *(_OWORD *)(v8 + 48) = v11;
      long long v12 = *(_OWORD *)(a2 + v7 + 80);
      *(_OWORD *)(v8 + 64) = *(_OWORD *)(a2 + v7 + 64);
      *(_OWORD *)(v8 + 80) = v12;
      *(unsigned char *)(v8 + 96) = *(unsigned char *)(a2 + v7 + 96);
      *(_OWORD *)(v8 + 104) = *(_OWORD *)(a2 + v7 + 104);
      *(_OWORD *)(v8 + 120) = *(_OWORD *)(a2 + v7 + 120);
      *(_OWORD *)(v8 + 136) = *(_OWORD *)(a2 + v7 + 136);
      *(_OWORD *)(v8 + 145) = *(_OWORD *)(a2 + v7 + 145);
      *(unsigned char *)(v8 + 161) = *(unsigned char *)(a2 + v7 + 161);
      uint64_t v13 = *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
      uint64_t v14 = v8 + v13;
      uint64_t v15 = v9 + v13;
      uint64_t v16 = sub_1DFDE81B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    }
    else
    {
      uint64_t v17 = sub_1DFDF94D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t ChannelPickerMainModule.createViewController(pickerType:useAlternateTitle:)(uint64_t *a1, char a2)
{
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  sub_1DFDE88B0();
  if (v4 >= 3)
  {
    sub_1DFDFDE90();
  }
  else
  {
    sub_1DED53AA8(v5, v4);
    sub_1DFDFDD90();
  }
  uint64_t v6 = sub_1DFDE88B0();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  type metadata accessor for ChannelPickerViewController();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  *(void *)(v7 + 32) = v4;
  *(unsigned char *)(v7 + 40) = a2 & 1;
  sub_1DED53AA8(v5, v4);
  swift_retain();
  uint64_t v8 = sub_1DFDECC90();
  uint64_t result = swift_release();
  if (v8)
  {
    swift_release();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF142914(void *a1)
{
  return sub_1DFDECAA0();
}

uint64_t sub_1DF142A00()
{
  swift_release();
  if (*(void *)(v0 + 32) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1DF142A48(void *a1)
{
  return sub_1DF142914(a1);
}

uint64_t ChannelPickerMainModule.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t ChannelPickerMainModule.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF142AC0(uint64_t *a1, char a2)
{
  return ChannelPickerMainModule.createViewController(pickerType:useAlternateTitle:)(a1, a2);
}

uint64_t dispatch thunk of ChannelPickerMainModuleType.createViewController(pickerType:useAlternateTitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t getEnumTagSinglePayload for MagazineGridModel.Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MagazineGridModel.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelPickerEntryPointType()
{
  return &type metadata for ChannelPickerEntryPointType;
}

uint64_t type metadata accessor for ChannelPickerMainModule()
{
  return self;
}

uint64_t method lookup function for ChannelPickerMainModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChannelPickerMainModule);
}

ValueMetadata *type metadata accessor for CenteredLogoMastheadModel()
{
  return &type metadata for CenteredLogoMastheadModel;
}

id sub_1DF142C00()
{
  id v0 = objc_msgSend((id)sub_1DFDFEBA0(), sel_theme);
  swift_unknownObjectRelease();
  if (v0)
  {
    id v1 = objc_msgSend(v0, sel_navigationChromeSeparatorColor);
    swift_unknownObjectRelease();
    if (v1)
    {
      id v2 = objc_msgSend((id)sub_1DFDFEBA0(), sel_theme);
      swift_unknownObjectRelease();
      if (!v2
        || (id v3 = objc_msgSend(v2, sel_darkStyleNavigationChromeSeparatorColor),
            swift_unknownObjectRelease(),
            !v3))
      {
        id v3 = v1;
      }
      unsigned int v4 = self;
      id v5 = objc_msgSend(v1, sel_ne_color);
      id v6 = objc_msgSend(v3, sel_ne_color);
      id v0 = objc_msgSend(v4, sel_ts_dynamicColor_withDarkStyleVariant_, v5, v6);
    }
    else
    {
      return 0;
    }
  }
  return v0;
}

void sub_1DF142D60(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1DF142D74(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1DF142D88(void *a1@<X0>, SEL *a2@<X1>, SEL *a3@<X2>, uint64_t a4@<X8>)
{
  if (objc_msgSend(a1, sel_feedConfiguration) == (id)3) {
    goto LABEL_2;
  }
  id v7 = [(id)sub_1DFDFEBA0() *a2];
  swift_unknownObjectRelease();
  if (v7)
  {
    unint64_t v12 = sub_1DEA549AC();
    unint64_t v13 = sub_1DEBAD4A8();
    *(void *)&long long v11 = v7;
    sub_1DE942EC4(&v11, a4);
  }
  else
  {
    id v8 = objc_msgSend((id)sub_1DFDFEBA0(), sel_theme);
    swift_unknownObjectRelease();
    if (!v8
      || (id v9 = [v8 *a3], swift_unknownObjectRelease(), !v9)
      || (id v10 = objc_msgSend(v9, sel_assetHandle), v9, !v10))
    {
LABEL_2:
      *(void *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return;
    }
    *(void *)(a4 + 24) = sub_1DEA549AC();
    *(void *)(a4 + 32) = sub_1DEBAD4A8();
    *(void *)a4 = v10;
  }
}

uint64_t sub_1DF142ECC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        id v10 = (void *)a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v10;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        swift_bridgeObjectRetain();
        id v11 = v10;
        break;
      case 2u:
        uint64_t v12 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v12;
        uint64_t v13 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v13;
        uint64_t v14 = (void *)a2[4];
        *(void *)(a1 + 32) = v14;
        uint64_t v15 = type metadata accessor for FollowingAudioModel();
        uint64_t v16 = *(int *)(v15 + 28);
        __dst = (void *)(a1 + v16);
        uint64_t v63 = (int *)v15;
        uint64_t v59 = (char *)a2 + v16;
        uint64_t v17 = sub_1DFDE7220();
        uint64_t v18 = *(void *)(v17 - 8);
        int v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v20 = v14;
        long long v21 = v59;
        if (!v19(v59, 1, v17)) {
          goto LABEL_16;
        }
        goto LABEL_7;
      case 3u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xCu:
      case 0xDu:
      case 0xFu:
        *(void *)a1 = *a2;
        swift_retain();
        break;
      case 5u:
        uint64_t v23 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v23;
        uint64_t v24 = (void *)a2[2];
        *(void *)(a1 + 16) = v24;
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        swift_bridgeObjectRetain();
        id v25 = v24;
        break;
      case 0xBu:
        *(void *)a1 = *a2;
        sub_1DEB8E140();
        uint64_t v27 = *(int *)(v26 + 48);
        uint64_t v28 = a1 + v27;
        uint64_t v29 = (uint64_t)a2 + v27;
        sub_1DE9371E8();
        uint64_t v31 = v30;
        long long v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
        swift_retain();
        v32(v28, v29, v31);
        break;
      case 0xEu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v33 = (void *)a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v33;
        *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
        swift_bridgeObjectRetain();
        id v34 = v33;
        break;
      case 0x10u:
        uint64_t v35 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v35;
        uint64_t v36 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v36;
        uint64_t v37 = (void *)a2[4];
        *(void *)(a1 + 32) = v37;
        uint64_t v38 = type metadata accessor for FollowingMySportsModel();
        uint64_t v39 = *(int *)(v38 + 28);
        __dst = (void *)(a1 + v39);
        uint64_t v63 = (int *)v38;
        uint64_t v59 = (char *)a2 + v39;
        uint64_t v17 = sub_1DFDE7220();
        uint64_t v18 = *(void *)(v17 - 8);
        id v40 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v41 = v37;
        long long v21 = v59;
        if (v40(v59, 1, v17))
        {
LABEL_7:
          sub_1DEA3C638();
          memcpy(__dst, v21, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
LABEL_16:
          (*(void (**)(void *, char *, uint64_t))(v18 + 16))(__dst, v59, v17);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
        }
        *(unsigned char *)(a1 + v63[8]) = *((unsigned char *)a2 + v63[8]);
        uint64_t v52 = v63[9];
        uint64_t v53 = a1 + v52;
        uint64_t v54 = (uint64_t)a2 + v52;
        *(_WORD *)uint64_t v53 = *(_WORD *)v54;
        *(unsigned char *)(v53 + 2) = *(unsigned char *)(v54 + 2);
        uint64_t v55 = v63[10];
        uint64_t v56 = a1 + v55;
        uint64_t v57 = (uint64_t)a2 + v55;
        *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
        *(_WORD *)(v56 + 16) = *(_WORD *)(v57 + 16);
        break;
      case 0x11u:
        uint64_t v42 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v42;
        uint64_t v43 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v43;
        id v44 = (void *)a2[4];
        *(void *)(a1 + 32) = v44;
        uint64_t v45 = type metadata accessor for FollowingPuzzleHubModel();
        uint64_t v46 = *(int *)(v45 + 28);
        __dsta = (void *)(a1 + v46);
        uint64_t v64 = (int *)v45;
        uint64_t v60 = (char *)a2 + v46;
        uint64_t v47 = sub_1DFDE7220();
        uint64_t v48 = *(void *)(v47 - 8);
        uint64_t v49 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v50 = v44;
        if (v49(v60, 1, v47))
        {
          sub_1DEA3C638();
          memcpy(__dsta, v60, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 16))(__dsta, v60, v47);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(__dsta, 0, 1, v47);
        }
        *(unsigned char *)(a1 + v64[8]) = *((unsigned char *)a2 + v64[8]);
        *(void *)(a1 + v64[9]) = *(uint64_t *)((char *)a2 + v64[9]);
        *(void *)(a1 + v64[10]) = *(uint64_t *)((char *)a2 + v64[10]);
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        id v7 = (void *)a2[2];
        *(void *)(a1 + 16) = v7;
        swift_bridgeObjectRetain();
        id v8 = v7;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1DF143670(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
      swift_bridgeObjectRelease();
      id v2 = *(void **)(a1 + 16);
      goto LABEL_7;
    case 1u:
    case 4u:
    case 0xEu:
      swift_bridgeObjectRelease();
      id v2 = *(void **)(a1 + 24);
LABEL_7:

      return;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v3 = type metadata accessor for FollowingAudioModel();
      goto LABEL_14;
    case 3u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
      swift_release();
      return;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v5 = a1 + *(int *)(v4 + 48);
      sub_1DE9371E8();
      id v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t v8 = v6;
      uint64_t v9 = v5;
      goto LABEL_16;
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v3 = type metadata accessor for FollowingMySportsModel();
      goto LABEL_14;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v3 = type metadata accessor for FollowingPuzzleHubModel();
LABEL_14:
      uint64_t v10 = a1 + *(int *)(v3 + 28);
      uint64_t v11 = sub_1DFDE7220();
      uint64_t v12 = *(void *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        id v7 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
        uint64_t v9 = v10;
        uint64_t v8 = v11;
LABEL_16:
        v7(v9, v8);
      }
      break;
    default:
      return;
  }
}

uint64_t sub_1DF1438BC(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      id v7 = *(void **)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      swift_bridgeObjectRetain();
      id v8 = v7;
      break;
    case 2u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = *(void **)(a2 + 32);
      *(void *)(a1 + 32) = v11;
      uint64_t v12 = type metadata accessor for FollowingAudioModel();
      uint64_t v13 = *(int *)(v12 + 28);
      __dst = (void *)(a1 + v13);
      uint64_t v60 = (int *)v12;
      uint64_t v56 = (const void *)(a2 + v13);
      uint64_t v14 = sub_1DFDE7220();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v17 = v11;
      uint64_t v18 = v56;
      if (!v16(v56, 1, v14)) {
        goto LABEL_14;
      }
      goto LABEL_5;
    case 3u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      break;
    case 5u:
      uint64_t v20 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v20;
      long long v21 = *(void **)(a2 + 16);
      *(void *)(a1 + 16) = v21;
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      swift_bridgeObjectRetain();
      id v22 = v21;
      break;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      sub_1DEB8E140();
      uint64_t v24 = *(int *)(v23 + 48);
      uint64_t v25 = a1 + v24;
      uint64_t v26 = a2 + v24;
      sub_1DE9371E8();
      uint64_t v28 = v27;
      uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_retain();
      v29(v25, v26, v28);
      break;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v30 = *(void **)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v30;
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      id v31 = v30;
      break;
    case 0x10u:
      uint64_t v32 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v32;
      uint64_t v33 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v33;
      id v34 = *(void **)(a2 + 32);
      *(void *)(a1 + 32) = v34;
      uint64_t v35 = type metadata accessor for FollowingMySportsModel();
      uint64_t v36 = *(int *)(v35 + 28);
      __dst = (void *)(a1 + v36);
      uint64_t v60 = (int *)v35;
      uint64_t v56 = (const void *)(a2 + v36);
      uint64_t v14 = sub_1DFDE7220();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v38 = v34;
      uint64_t v18 = v56;
      if (v37(v56, 1, v14))
      {
LABEL_5:
        sub_1DEA3C638();
        memcpy(__dst, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
LABEL_14:
        (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v56, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      *(unsigned char *)(a1 + v60[8]) = *(unsigned char *)(a2 + v60[8]);
      uint64_t v49 = v60[9];
      uint64_t v50 = a1 + v49;
      uint64_t v51 = a2 + v49;
      *(_WORD *)uint64_t v50 = *(_WORD *)v51;
      *(unsigned char *)(v50 + 2) = *(unsigned char *)(v51 + 2);
      uint64_t v52 = v60[10];
      uint64_t v53 = a1 + v52;
      uint64_t v54 = a2 + v52;
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      *(_WORD *)(v53 + 16) = *(_WORD *)(v54 + 16);
      break;
    case 0x11u:
      uint64_t v39 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v39;
      uint64_t v40 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v40;
      id v41 = *(void **)(a2 + 32);
      *(void *)(a1 + 32) = v41;
      uint64_t v42 = type metadata accessor for FollowingPuzzleHubModel();
      uint64_t v43 = *(int *)(v42 + 28);
      __dsta = (void *)(a1 + v43);
      uint64_t v61 = (int *)v42;
      uint64_t v57 = (const void *)(a2 + v43);
      uint64_t v44 = sub_1DFDE7220();
      uint64_t v45 = *(void *)(v44 - 8);
      uint64_t v46 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v47 = v41;
      if (v46(v57, 1, v44))
      {
        sub_1DEA3C638();
        memcpy(__dsta, v57, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v45 + 16))(__dsta, v57, v44);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(__dsta, 0, 1, v44);
      }
      *(unsigned char *)(a1 + v61[8]) = *(unsigned char *)(a2 + v61[8]);
      *(void *)(a1 + v61[9]) = *(void *)(a2 + v61[9]);
      *(void *)(a1 + v61[10]) = *(void *)(a2 + v61[10]);
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void **)(a2 + 16);
      *(void *)(a1 + 16) = v5;
      swift_bridgeObjectRetain();
      id v6 = v5;
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DF144010(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DF148E7C(a1, (uint64_t (*)(void))type metadata accessor for FollowingModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        id v6 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v6;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        swift_bridgeObjectRetain();
        id v7 = v6;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        id v8 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v8;
        uint64_t v9 = type metadata accessor for FollowingAudioModel();
        uint64_t v10 = *(int *)(v9 + 28);
        __dst = (void *)(a1 + v10);
        uint64_t v55 = (int *)v9;
        uint64_t v51 = (const void *)(a2 + v10);
        uint64_t v11 = sub_1DFDE7220();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v14 = v8;
        uint64_t v15 = v51;
        if (!v13(v51, 1, v11)) {
          goto LABEL_15;
        }
        goto LABEL_6;
      case 3u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xCu:
      case 0xDu:
      case 0xFu:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        id v17 = *(void **)(a2 + 16);
        *(void *)(a1 + 16) = v17;
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        swift_bridgeObjectRetain();
        id v18 = v17;
        break;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        sub_1DEB8E140();
        uint64_t v20 = *(int *)(v19 + 48);
        uint64_t v21 = a1 + v20;
        uint64_t v22 = a2 + v20;
        sub_1DE9371E8();
        uint64_t v24 = v23;
        uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_retain();
        v25(v21, v22, v24);
        break;
      case 0xEu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v26 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v26;
        __int16 v27 = *(_WORD *)(a2 + 32);
        *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
        *(_WORD *)(a1 + 32) = v27;
        *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
        swift_bridgeObjectRetain();
        id v28 = v26;
        break;
      case 0x10u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v29 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v29;
        uint64_t v30 = type metadata accessor for FollowingMySportsModel();
        uint64_t v31 = *(int *)(v30 + 28);
        __dst = (void *)(a1 + v31);
        uint64_t v55 = (int *)v30;
        uint64_t v51 = (const void *)(a2 + v31);
        uint64_t v11 = sub_1DFDE7220();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v33 = v29;
        uint64_t v15 = v51;
        if (v32(v51, 1, v11))
        {
LABEL_6:
          sub_1DEA3C638();
          memcpy(__dst, v15, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
LABEL_15:
          (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v51, v11);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
        }
        *(unsigned char *)(a1 + v55[8]) = *(unsigned char *)(a2 + v55[8]);
        uint64_t v42 = v55[9];
        uint64_t v43 = a1 + v42;
        uint64_t v44 = (__int16 *)(a2 + v42);
        __int16 v45 = *v44;
        *(unsigned char *)(v43 + 2) = *((unsigned char *)v44 + 2);
        *(_WORD *)uint64_t v43 = v45;
        uint64_t v46 = v55[10];
        uint64_t v47 = a1 + v46;
        uint64_t v48 = (long long *)(a2 + v46);
        long long v49 = *v48;
        *(_WORD *)(v47 + 16) = *((_WORD *)v48 + 8);
        *(_OWORD *)uint64_t v47 = v49;
        break;
      case 0x11u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        id v34 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v34;
        uint64_t v35 = type metadata accessor for FollowingPuzzleHubModel();
        uint64_t v36 = *(int *)(v35 + 28);
        __dsta = (void *)(a1 + v36);
        uint64_t v56 = (int *)v35;
        uint64_t v52 = (const void *)(a2 + v36);
        uint64_t v37 = sub_1DFDE7220();
        uint64_t v38 = *(void *)(v37 - 8);
        uint64_t v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v40 = v34;
        if (v39(v52, 1, v37))
        {
          sub_1DEA3C638();
          memcpy(__dsta, v52, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(__dsta, v52, v37);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(__dsta, 0, 1, v37);
        }
        *(unsigned char *)(a1 + v56[8]) = *(unsigned char *)(a2 + v56[8]);
        *(void *)(a1 + v56[9]) = *(void *)(a2 + v56[9]);
        *(void *)(a1 + v56[10]) = *(void *)(a2 + v56[10]);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v4 = *(void **)(a2 + 16);
        *(void *)(a1 + 16) = v4;
        swift_bridgeObjectRetain();
        id v5 = v4;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1DF144808(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      id v7 = (int *)type metadata accessor for FollowingAudioModel();
      uint64_t v8 = v7[7];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1DFDE7220();
      uint64_t v12 = *(void *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
        goto LABEL_10;
      }
      goto LABEL_3;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      sub_1DEB8E140();
      uint64_t v15 = *(int *)(v14 + 48);
      uint64_t v16 = (char *)a1 + v15;
      id v17 = (char *)a2 + v15;
      sub_1DE9371E8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      goto LABEL_15;
    case 0x10u:
      long long v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      id v7 = (int *)type metadata accessor for FollowingMySportsModel();
      uint64_t v20 = v7[7];
      uint64_t v9 = (char *)a1 + v20;
      uint64_t v10 = (char *)a2 + v20;
      uint64_t v11 = sub_1DFDE7220();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
LABEL_3:
        sub_1DEA3C638();
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
LABEL_10:
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      uint64_t v29 = v7[9];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      *(_WORD *)uint64_t v30 = *(_WORD *)v31;
      v30[2] = v31[2];
      uint64_t v32 = v7[10];
      id v33 = (char *)a1 + v32;
      id v34 = (char *)a2 + v32;
      *(_OWORD *)id v33 = *(_OWORD *)v34;
      *((_WORD *)v33 + 8) = *((_WORD *)v34 + 8);
      goto LABEL_15;
    case 0x11u:
      long long v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v22 = (int *)type metadata accessor for FollowingPuzzleHubModel();
      uint64_t v23 = v22[7];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_1DFDE7220();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_1DEA3C638();
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      *((unsigned char *)a1 + v22[8]) = *((unsigned char *)a2 + v22[8]);
      *(void *)((char *)a1 + v22[9]) = *(void *)((char *)a2 + v22[9]);
      *(void *)((char *)a1 + v22[10]) = *(void *)((char *)a2 + v22[10]);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1DF144CFC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DF148E7C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FollowingModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        long long v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        id v7 = (int *)type metadata accessor for FollowingAudioModel();
        uint64_t v8 = v7[7];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1DFDE7220();
        uint64_t v12 = *(void *)(v11 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
          goto LABEL_11;
        }
        goto LABEL_4;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        sub_1DEB8E140();
        uint64_t v15 = *(int *)(v14 + 48);
        uint64_t v16 = (char *)a1 + v15;
        id v17 = (char *)a2 + v15;
        sub_1DE9371E8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        goto LABEL_16;
      case 0x10u:
        long long v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        id v7 = (int *)type metadata accessor for FollowingMySportsModel();
        uint64_t v20 = v7[7];
        uint64_t v9 = (char *)a1 + v20;
        uint64_t v10 = (char *)a2 + v20;
        uint64_t v11 = sub_1DFDE7220();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
LABEL_4:
          sub_1DEA3C638();
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
LABEL_11:
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
        uint64_t v29 = v7[9];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        *(_WORD *)uint64_t v30 = *(_WORD *)v31;
        v30[2] = v31[2];
        uint64_t v32 = v7[10];
        id v33 = (char *)a1 + v32;
        id v34 = (char *)a2 + v32;
        *(_OWORD *)id v33 = *(_OWORD *)v34;
        *((_WORD *)v33 + 8) = *((_WORD *)v34 + 8);
        goto LABEL_16;
      case 0x11u:
        long long v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        uint64_t v22 = (int *)type metadata accessor for FollowingPuzzleHubModel();
        uint64_t v23 = v22[7];
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_1DFDE7220();
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          sub_1DEA3C638();
          memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        *((unsigned char *)a1 + v22[8]) = *((unsigned char *)a2 + v22[8]);
        *(void *)((char *)a1 + v22[9]) = *(void *)((char *)a2 + v22[9]);
        *(void *)((char *)a1 + v22[10]) = *(void *)((char *)a2 + v22[10]);
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1DF145214()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = type metadata accessor for FollowingAudioModel;
      goto LABEL_3;
    case 6u:
    case 7u:
      return *(void *)v3;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      id v7 = &v3[*(int *)(v6 + 48)];
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      return 0;
    case 0x10u:
      uint64_t v4 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_3;
    case 0x11u:
      uint64_t v4 = type metadata accessor for FollowingPuzzleHubModel;
      goto LABEL_3;
    default:
      uint64_t v4 = type metadata accessor for FollowingModel;
LABEL_3:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))v4);
      return 0;
  }
}

uint64_t sub_1DF1453D8()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = (void *)v3[3];
      swift_bridgeObjectRelease();

      return 0xD000000000000010;
    case 2u:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
      uint64_t v7 = 0x466F69647541;
      return v7 & 0xFFFFFFFFFFFFLL | 0x6565000000000000;
    case 3u:
      uint64_t v4 = *(void *)(*(void *)(*v3 + 16) + 16);
      goto LABEL_3;
    case 4u:
      uint64_t v8 = (void *)v3[3];
      swift_bridgeObjectRelease();

      uint64_t v7 = 0x466465766153;
      return v7 & 0xFFFFFFFFFFFFLL | 0x6565000000000000;
    case 5u:
      uint64_t v9 = (void *)v3[2];
      swift_bridgeObjectRelease();

      return 0x4679726F74736948;
    case 6u:
    case 7u:
      uint64_t v10 = *v3;
      char v11 = *(unsigned char *)(v10 + 16);
      uint64_t v12 = *(void *)(v10 + 24);
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      v20[15] = v11;
      sub_1DFDFFB10();
      sub_1DFDFDE90();
      id v13 = objc_msgSend(*(id *)(v12 + 16), sel_identifier);
      sub_1DFDFDD20();

      sub_1DFDFDE90();
      swift_release();
      swift_bridgeObjectRelease();
      return v21;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
      uint64_t v4 = *(void *)(*v3 + 16);
LABEL_3:
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 0xBu:
      uint64_t v14 = *v3;
      sub_1DEB8E140();
      uint64_t v16 = (char *)v3 + *(int *)(v15 + 48);
      uint64_t v4 = *(void *)(v14 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      return v4;
    case 0xEu:
      uint64_t v18 = (void *)v3[3];
      swift_bridgeObjectRelease();

      return 0x6957646572616853;
    case 0xFu:
      uint64_t v4 = sub_1DFC7E8FC();
LABEL_4:
      swift_release();
      break;
    case 0x10u:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
      uint64_t v4 = 0x7374726F7053796DLL;
      break;
    case 0x11u:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
      uint64_t v4 = 0x7548656C7A7A7570;
      break;
    default:
      id v5 = (void *)v3[2];
      swift_bridgeObjectRelease();

      uint64_t v4 = 0x6546756F59726F46;
      break;
  }
  return v4;
}

uint64_t sub_1DF145808()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (uint64_t *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
    case 0xEu:
      uint64_t v6 = (void *)v3[3];
      goto LABEL_6;
    case 2u:
      uint64_t v7 = type metadata accessor for FollowingAudioModel;
      goto LABEL_13;
    case 3u:
      uint64_t v5 = *(unsigned __int8 *)(*v3 + 24);
      swift_release();
      return v5;
    case 6u:
    case 7u:
      uint64_t v5 = *(unsigned __int8 *)(*v3 + 32);
      swift_release();
      return v5;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
      uint64_t v4 = *v3;
      goto LABEL_3;
    case 0xBu:
      uint64_t v4 = *v3;
      sub_1DEB8E140();
      uint64_t v9 = (char *)v3 + *(int *)(v8 + 48);
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
LABEL_3:
      uint64_t v5 = *(unsigned __int8 *)(v4 + 48);
      swift_release();
      return v5;
    case 0xFu:
      uint64_t v5 = *(unsigned __int8 *)(*v3 + OBJC_IVAR____TtC7NewsUI224FollowingEngagementModel_allowsUserInteraction);
      swift_release();
      return v5;
    case 0x10u:
      uint64_t v7 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_13;
    case 0x11u:
      uint64_t v7 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_13:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))v7);
      break;
    default:
      uint64_t v6 = (void *)v3[2];
LABEL_6:
      swift_bridgeObjectRelease();

      break;
  }
  return 1;
}

uint64_t sub_1DF145A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE93BF0C(&qword_1EBAAAA80, (void (*)(uint64_t))type metadata accessor for FollowingModel);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1DF145A9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      long long v26 = *(_OWORD *)v6;
      uint64_t v11 = *((void *)v6 + 2);
      uint64_t v12 = *((void *)v6 + 3);
      char v13 = v6[32];
      *(void *)(a1 + 24) = &type metadata for FollowingMagazineModel;
      *(void *)(a1 + 32) = &off_1F3AB8458;
      goto LABEL_11;
    case 2:
      *(void *)(a1 + 24) = type metadata accessor for FollowingAudioModel();
      *(void *)(a1 + 32) = &off_1F3A80F28;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v15 = type metadata accessor for FollowingAudioModel;
      goto LABEL_16;
    case 3:
      uint64_t v8 = *(void *)v6;
      uint64_t result = type metadata accessor for FollowingEditorialModel();
      uint64_t v9 = &off_1F3A915C8;
      goto LABEL_9;
    case 4:
      long long v26 = *(_OWORD *)v6;
      uint64_t v11 = *((void *)v6 + 2);
      uint64_t v12 = *((void *)v6 + 3);
      char v13 = v6[32];
      *(void *)(a1 + 24) = &type metadata for FollowingSavedModel;
      *(void *)(a1 + 32) = &off_1F3ACA130;
LABEL_11:
      uint64_t result = swift_allocObject();
      *(void *)a1 = result;
      *(_OWORD *)(result + 16) = v26;
      *(void *)(result + 32) = v11;
      *(void *)(result + 40) = v12;
      *(unsigned char *)(result + 48) = v13;
      return result;
    case 5:
      long long v26 = *(_OWORD *)v6;
      uint64_t v16 = *((void *)v6 + 2);
      char v17 = v6[24];
      *(void *)(a1 + 24) = &type metadata for FollowingHistoryModel;
      *(void *)(a1 + 32) = &off_1F3A9ADC8;
      uint64_t result = swift_allocObject();
      *(void *)a1 = result;
      *(_OWORD *)(result + 16) = v26;
      *(void *)(result + 32) = v16;
      *(unsigned char *)(result + 40) = v17;
      return result;
    case 6:
    case 7:
      uint64_t v8 = *(void *)v6;
      uint64_t result = type metadata accessor for FollowingTagModel();
      uint64_t v9 = &off_1F3A7AE90;
LABEL_9:
      *(void *)(a1 + 24) = result;
      *(void *)(a1 + 32) = v9;
      *(void *)a1 = v8;
      return result;
    case 8:
    case 9:
    case 10:
    case 12:
    case 13:
    case 15:
      uint64_t result = sub_1DF148E7C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      goto LABEL_3;
    case 11:
      swift_release();
      sub_1DEB8E140();
      uint64_t v24 = &v6[*(int *)(v23 + 48)];
      sub_1DE9371E8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
LABEL_3:
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      return result;
    case 14:
      long long v26 = *(_OWORD *)v6;
      uint64_t v18 = *((void *)v6 + 2);
      uint64_t v19 = *((void *)v6 + 3);
      __int16 v20 = *((_WORD *)v6 + 16);
      char v21 = v6[34];
      char v22 = v6[35];
      *(void *)(a1 + 24) = &type metadata for FollowingSharedWithYouModel;
      *(void *)(a1 + 32) = &off_1F3AC4F30;
      uint64_t result = swift_allocObject();
      *(void *)a1 = result;
      *(_OWORD *)(result + 16) = v26;
      *(void *)(result + 32) = v18;
      *(void *)(result + 40) = v19;
      *(unsigned char *)(result + 50) = v21;
      *(_WORD *)(result + 48) = v20;
      *(unsigned char *)(result + 51) = v22;
      return result;
    case 16:
      *(void *)(a1 + 24) = type metadata accessor for FollowingMySportsModel();
      *(void *)(a1 + 32) = &off_1F3A91098;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v15 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_16;
    case 17:
      *(void *)(a1 + 24) = type metadata accessor for FollowingPuzzleHubModel();
      *(void *)(a1 + 32) = &off_1F3AA8FA0;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v15 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_16:
      uint64_t result = sub_1DF14A264((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v15);
      break;
    default:
      uint64_t v10 = *((void *)v6 + 2);
      *(void *)(a1 + 24) = &type metadata for FollowingForYouModel;
      *(void *)(a1 + 32) = &off_1F3ABB2E0;
      *(_OWORD *)a1 = *(_OWORD *)v6;
      *(void *)(a1 + 16) = v10;
      break;
  }
  return result;
}

uint64_t sub_1DF145E70()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = type metadata accessor for FollowingAudioModel;
      goto LABEL_3;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      return 0;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v7 = &v3[*(int *)(v6 + 48)];
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      return 0;
    case 0x10u:
      uint64_t v4 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_3;
    case 0x11u:
      uint64_t v4 = type metadata accessor for FollowingPuzzleHubModel;
      goto LABEL_3;
    default:
      uint64_t v4 = type metadata accessor for FollowingModel;
LABEL_3:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))v4);
      return 1;
  }
}

BOOL sub_1DF146058(uint64_t a1, uint64_t a2)
{
  return !sub_1DF149DF4(a2, a1);
}

BOOL sub_1DF146084(uint64_t a1, uint64_t a2)
{
  return !sub_1DF149DF4(a1, a2);
}

BOOL sub_1DF1460A4(uint64_t a1, uint64_t a2)
{
  return sub_1DF149DF4(a2, a1);
}

uint64_t sub_1DF1460B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF14A0E8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
    case 0xEu:
      uint64_t v7 = (void *)v6[3];
      goto LABEL_5;
    case 2u:
      uint64_t v12 = type metadata accessor for FollowingAudioModel;
      goto LABEL_18;
    case 3u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
      swift_release();
      break;
    case 6u:
    case 7u:
      if (*(unsigned char *)(*v6 + 32) == 1
        && ((int v8 = *(unsigned __int8 *)(*v6 + 16), v8 != 3) ? (v9 = v8 == 0) : (v9 = 1), v9))
      {
        swift_retain();
        TagModel.dragItem.getter(a1);
        swift_release();
        return swift_release();
      }
      else
      {
        uint64_t v11 = sub_1DFDF5740();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
        return swift_release();
      }
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v14 = (char *)v6 + *(int *)(v13 + 48);
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      break;
    case 0x10u:
      uint64_t v12 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_18;
    case 0x11u:
      uint64_t v12 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_18:
      sub_1DF148E7C((uint64_t)v6, (uint64_t (*)(void))v12);
      break;
    default:
      uint64_t v7 = (void *)v6[2];
LABEL_5:
      swift_bridgeObjectRelease();

      break;
  }
  uint64_t v16 = sub_1DFDF5740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
}

BOOL sub_1DF14635C()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (uint64_t *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
    case 0xEu:
      uint64_t v4 = (void *)v3[3];
      goto LABEL_12;
    case 2u:
      int v8 = type metadata accessor for FollowingAudioModel;
      goto LABEL_17;
    case 3u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
      goto LABEL_2;
    case 6u:
    case 7u:
      if (*(unsigned char *)(*v3 + 32) == 1)
      {
        int v5 = *(unsigned __int8 *)(*v3 + 16);
        swift_release();
        return !v5 || v5 == 3;
      }
      else
      {
LABEL_2:
        swift_release();
        return 0;
      }
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v10 = (char *)v3 + *(int *)(v9 + 48);
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      return 0;
    case 0x10u:
      int v8 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_17;
    case 0x11u:
      int v8 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_17:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))v8);
      return 0;
    default:
      uint64_t v4 = (void *)v3[2];
LABEL_12:
      swift_bridgeObjectRelease();

      return 0;
  }
}

uint64_t sub_1DF146554()
{
  sub_1DEC8D9C8(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v52 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1DFDF0580();
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v50 = (uint64_t *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1DFDF0590();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v49 - v8;
  sub_1DF14A0AC(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA3C638();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FollowingModel();
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  char v21 = (uint64_t *)((char *)&v49 - v20);
  uint64_t v22 = 0;
  if (sub_1DF145808())
  {
    sub_1DF14A0E8(v0, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FollowingModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 4u:
      case 0xEu:
        uint64_t v23 = (void *)v21[3];
        goto LABEL_8;
      case 2u:
        uint64_t v28 = type metadata accessor for FollowingAudioModel;
        goto LABEL_17;
      case 3u:
        uint64_t v29 = *v21;
        sub_1DE936220(0, (unint64_t *)&qword_1EAC24070, (uint64_t (*)(uint64_t))sub_1DEB30900, MEMORY[0x1E4FBBE00]);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1DFE0B250;
        sub_1DF14A0E8(*(void *)(v29 + 16) + OBJC_IVAR____TtC7NewsUI214EditorialModel_route, (uint64_t)v12, (uint64_t (*)(void))sub_1DF14A0AC);
        uint64_t v31 = type metadata accessor for EditorialModelRoute(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v12, 1, v31) == 1)
        {
          sub_1DF148E7C((uint64_t)v12, (uint64_t (*)(void))sub_1DF14A0AC);
          uint64_t v32 = sub_1DFDE7220();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v15, 1, 1, v32);
        }
        else
        {
          sub_1DEFB4960((uint64_t)v15);
          sub_1DF148E7C((uint64_t)v12, type metadata accessor for EditorialModelRoute);
        }
        uint64_t v34 = sub_1DFDF1230();
        uint64_t v35 = sub_1DFDF1170();
        sub_1DF148E7C((uint64_t)v15, (uint64_t (*)(void))sub_1DEA3C638);
        if (v35)
        {
          uint64_t v36 = MEMORY[0x1E4FAC030];
        }
        else
        {
          uint64_t v34 = 0;
          uint64_t v36 = 0;
          *(void *)(v30 + 40) = 0;
          *(void *)(v30 + 48) = 0;
        }
        *(void *)(v30 + 32) = v35;
        *(void *)(v30 + 56) = v34;
        *(void *)(v30 + 64) = v36;
        sub_1DFDF05A0();
        uint64_t v22 = sub_1DFDF0560();
        swift_release();
        return v22;
      case 6u:
      case 7u:
        uint64_t v24 = *v21;
        uint64_t v54 = MEMORY[0x1E4FBC870];
        sub_1DF14A0E8(v0, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FollowingModel);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          swift_release();
LABEL_26:
          uint64_t v38 = v49;
          uint64_t v39 = *(void (**)(char *, void, uint64_t))(v49 + 104);
          v39(v7, *MEMORY[0x1E4F7EF70], v4);
          sub_1DED6F810((uint64_t)v9, v7);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v4);
          v39(v7, *MEMORY[0x1E4F7EF30], v4);
        }
        else
        {
          sub_1DF148E7C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FollowingModel);
          switch(*(unsigned char *)(v24 + 16))
          {
            case 1:
              swift_bridgeObjectRelease();
              goto LABEL_26;
            default:
              char v37 = sub_1DFDFFF50();
              swift_bridgeObjectRelease();
              if (v37) {
                goto LABEL_26;
              }
              uint64_t v38 = v49;
              uint64_t v39 = *(void (**)(char *, void, uint64_t))(v49 + 104);
              v39(v7, *MEMORY[0x1E4F7EF30], v4);
              break;
          }
        }
        sub_1DED6F810((uint64_t)v9, v7);
        id v40 = *(void (**)(char *, uint64_t))(v38 + 8);
        v40(v9, v4);
        switch(*(unsigned char *)(v24 + 16))
        {
          case 3:
            swift_bridgeObjectRelease();
            uint64_t v42 = (unsigned int *)MEMORY[0x1E4F7EFB0];
            goto LABEL_31;
          default:
            char v41 = sub_1DFDFFF50();
            swift_bridgeObjectRelease();
            uint64_t v42 = (unsigned int *)MEMORY[0x1E4F7EFB0];
            if (v41)
            {
LABEL_31:
              v39(v7, *MEMORY[0x1E4F7EF28], v4);
              sub_1DED6F810((uint64_t)v9, v7);
              v40(v9, v4);
              v39(v7, *v42, v4);
              sub_1DED6F810((uint64_t)v9, v7);
              v40(v9, v4);
            }
            if (objc_msgSend(*(id *)(*(void *)(v24 + 24) + 16), sel_isPuzzleType))
            {
              v39(v7, *v42, v4);
              sub_1DED6F810((uint64_t)v9, v7);
              v40(v9, v4);
            }
            sub_1DFDF05A0();
            uint64_t v44 = v50;
            uint64_t v43 = v51;
            void *v50 = *(void *)(*(void *)(v24 + 24) + 16);
            v44[1] = 0;
            uint64_t v45 = v53;
            (*(void (**)(void *, void, uint64_t))(v43 + 104))(v44, *MEMORY[0x1E4F7EEC8], v53);
            uint64_t v46 = v54;
            uint64_t v47 = sub_1DFDFD0B0();
            uint64_t v48 = (uint64_t)v52;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v52, 1, 1, v47);
            swift_unknownObjectRetain();
            MEMORY[0x1E01DEDA0](v44, v46, v48);
            swift_bridgeObjectRelease();
            sub_1DF148E7C(v48, (uint64_t (*)(void))sub_1DEC8D9C8);
            (*(void (**)(void *, uint64_t))(v43 + 8))(v44, v45);
            swift_allocObject();
            uint64_t v22 = sub_1DFDF0540();
            break;
        }
        return v22;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xCu:
      case 0xDu:
      case 0xFu:
        swift_release();
        return 0;
      case 0xBu:
        swift_release();
        sub_1DEB8E140();
        long long v26 = (char *)v21 + *(int *)(v25 + 48);
        sub_1DE9371E8();
        (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
        return 0;
      case 0x10u:
        uint64_t v28 = type metadata accessor for FollowingMySportsModel;
        goto LABEL_17;
      case 0x11u:
        uint64_t v28 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_17:
        sub_1DF148E7C((uint64_t)v21, (uint64_t (*)(void))v28);
        break;
      default:
        uint64_t v23 = (void *)v21[2];
LABEL_8:
        swift_bridgeObjectRelease();

        break;
    }
    return 0;
  }
  return v22;
}

uint64_t sub_1DF146F90()
{
  return sub_1DFDFCE80();
}

uint64_t sub_1DF146FD0()
{
  uint64_t v1 = type metadata accessor for FollowingPuzzleHubModel();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for FollowingMySportsModel();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FollowingAudioModel();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF14A0E8(v0, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = (void *)v12[3];
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v18 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      goto LABEL_14;
    case 2u:
      sub_1DF14A264((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
      uint64_t v14 = *v9;
      swift_bridgeObjectRetain();
      uint64_t v20 = type metadata accessor for FollowingAudioModel;
      uint64_t v21 = (uint64_t)v9;
      goto LABEL_21;
    case 3u:
      uint64_t v14 = *(void *)(*(void *)(*v12 + 16) + 32);
      goto LABEL_4;
    case 4u:
      uint64_t v16 = (void *)v12[3];
      type metadata accessor for Localized();
      uint64_t v22 = swift_getObjCClassFromMetadata();
      id v18 = objc_msgSend(self, sel_bundleForClass_, v22);
      goto LABEL_14;
    case 5u:
      uint64_t v16 = (void *)v12[2];
      type metadata accessor for Localized();
      uint64_t v23 = swift_getObjCClassFromMetadata();
      id v18 = objc_msgSend(self, sel_bundleForClass_, v23);
      goto LABEL_14;
    case 6u:
    case 7u:
      id v15 = objc_msgSend(*(id *)(*(void *)(*v12 + 24) + 16), sel_name);
      uint64_t v14 = sub_1DFDFDD20();
      swift_release();

      return v14;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
      uint64_t v13 = *v12;
      goto LABEL_3;
    case 0xBu:
      uint64_t v13 = *v12;
      sub_1DEB8E140();
      long long v26 = (char *)v12 + *(int *)(v25 + 48);
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
LABEL_3:
      uint64_t v14 = *(void *)(v13 + 16);
      goto LABEL_4;
    case 0xEu:
      uint64_t v16 = (void *)v12[3];
      sub_1DFDFB2C0();
      id v18 = (id)sub_1DFDFB290();
      uint64_t v24 = MEMORY[0x1E01E9AD0]();
      goto LABEL_17;
    case 0xFu:
      uint64_t v14 = *(void *)(*v12 + OBJC_IVAR____TtC7NewsUI224FollowingEngagementModel_title);
LABEL_4:
      swift_bridgeObjectRetain();
      swift_release();
      return v14;
    case 0x10u:
      sub_1DF14A264((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
      uint64_t v14 = *v6;
      swift_bridgeObjectRetain();
      uint64_t v20 = type metadata accessor for FollowingMySportsModel;
      uint64_t v21 = (uint64_t)v6;
      goto LABEL_21;
    case 0x11u:
      sub_1DF14A264((uint64_t)v12, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
      uint64_t v14 = *v3;
      swift_bridgeObjectRetain();
      uint64_t v20 = type metadata accessor for FollowingPuzzleHubModel;
      uint64_t v21 = (uint64_t)v3;
LABEL_21:
      sub_1DF148E7C(v21, (uint64_t (*)(void))v20);
      break;
    default:
      uint64_t v16 = (void *)v12[2];
      type metadata accessor for Localized();
      uint64_t v17 = swift_getObjCClassFromMetadata();
      id v18 = objc_msgSend(self, sel_bundleForClass_, v17);
LABEL_14:
      uint64_t v24 = sub_1DFDE6ED0();
LABEL_17:
      uint64_t v14 = v24;

      swift_bridgeObjectRelease();
      break;
  }
  return v14;
}

uint64_t sub_1DF14758C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v7 = type metadata accessor for FollowingAudioModel;
      goto LABEL_3;
    case 6u:
    case 7u:
      int v15 = *(unsigned __int8 *)(*(void *)v6 + 32);
      swift_release();
      uint64_t v10 = sub_1DFDF0E30();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);
      if (v15 == 1) {
        uint64_t v16 = (unsigned int *)MEMORY[0x1E4FABF20];
      }
      else {
        uint64_t v16 = (unsigned int *)MEMORY[0x1E4FABF18];
      }
      uint64_t v13 = *v16;
      uint64_t v12 = a1;
      return v11(v12, v13, v10);
    case 8u:
    case 9u:
    case 0xFu:
      sub_1DF148E7C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t v8 = (unsigned int *)MEMORY[0x1E4FABF18];
      goto LABEL_5;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      id v18 = &v6[*(int *)(v17 + 48)];
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      goto LABEL_4;
    case 0x10u:
      uint64_t v7 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_3;
    case 0x11u:
      uint64_t v7 = type metadata accessor for FollowingPuzzleHubModel;
      goto LABEL_3;
    default:
      uint64_t v7 = type metadata accessor for FollowingModel;
LABEL_3:
      sub_1DF148E7C((uint64_t)v6, (uint64_t (*)(void))v7);
LABEL_4:
      uint64_t v8 = (unsigned int *)MEMORY[0x1E4FABF20];
LABEL_5:
      uint64_t v9 = *v8;
      uint64_t v10 = sub_1DFDF0E30();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);
      uint64_t v12 = a1;
      uint64_t v13 = v9;
      return v11(v12, v13, v10);
  }
}

uint64_t sub_1DF14781C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for FollowingModel;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v10 = type metadata accessor for FollowingAudioModel;
      goto LABEL_8;
    case 8:
    case 9:
    case 10:
    case 12:
    case 13:
    case 15:
      sub_1DF148E7C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      goto LABEL_3;
    case 11:
      swift_release();
      sub_1DEB8E140();
      uint64_t v12 = &v6[*(int *)(v11 + 48)];
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
LABEL_3:
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4FABF78];
      goto LABEL_10;
    case 16:
      uint64_t v10 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_8;
    case 17:
      uint64_t v10 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_8:
      uint64_t v8 = v10;
      break;
    default:
      break;
  }
  sub_1DF148E7C((uint64_t)v6, (uint64_t (*)(void))v8);
  uint64_t v9 = (unsigned int *)MEMORY[0x1E4FABF80];
LABEL_10:
  uint64_t v14 = *v9;
  uint64_t v15 = sub_1DFDF0F90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(a1, v14, v15);
}

uint64_t sub_1DF147A50()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = 0;
  if (sub_1DF145808())
  {
    sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 4u:
      case 0xEu:
        uint64_t v5 = (void *)*((void *)v3 + 3);
        goto LABEL_7;
      case 2u:
        uint64_t v23 = type metadata accessor for FollowingAudioModel;
        goto LABEL_12;
      case 3u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xCu:
      case 0xDu:
      case 0xFu:
        swift_release();
        return 0;
      case 6u:
      case 7u:
        uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1DE936220(0, &qword_1EAC28C18, MEMORY[0x1E4FAC538], MEMORY[0x1E4FBBE00]);
        uint64_t v7 = sub_1DFDF21B0();
        uint64_t v8 = *(void *)(v7 - 8);
        unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        uint64_t v4 = swift_allocObject();
        long long v28 = xmmword_1DFE0B250;
        *(_OWORD *)(v4 + 16) = xmmword_1DFE0B250;
        uint64_t v10 = (uint64_t *)(v4 + v9);
        sub_1DF14A150();
        uint64_t v12 = (char *)v10 + *(int *)(v11 + 48);
        uint64_t v13 = *(int *)(v11 + 64);
        uint64_t v14 = sub_1DF147E7C();
        uint64_t v16 = v15;
        swift_release();
        *uint64_t v10 = v14;
        v10[1] = v16;
        uint64_t v17 = *MEMORY[0x1E4FAC4E8];
        uint64_t v18 = sub_1DFDF2170();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v12, v17, v18);
        sub_1DE936220(0, &qword_1EAC28C30, MEMORY[0x1E4FAC530], v6);
        uint64_t v19 = sub_1DFDF21A0();
        uint64_t v20 = *(void *)(v19 - 8);
        unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = v28;
        (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x1E4FAC528], v19);
        *(uint64_t *)((char *)v10 + v13) = v22;
        (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAC4F8], v7);
        return v4;
      case 0xBu:
        swift_release();
        sub_1DEB8E140();
        uint64_t v25 = &v3[*(int *)(v24 + 48)];
        sub_1DE9371E8();
        (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
        return 0;
      case 0x10u:
        uint64_t v23 = type metadata accessor for FollowingMySportsModel;
        goto LABEL_12;
      case 0x11u:
        uint64_t v23 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_12:
        sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))v23);
        break;
      default:
        uint64_t v5 = (void *)*((void *)v3 + 2);
LABEL_7:
        swift_bridgeObjectRelease();

        break;
    }
    return 0;
  }
  return v4;
}

uint64_t sub_1DF147E7C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t sub_1DF14806C()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = type metadata accessor for FollowingAudioModel;
      goto LABEL_3;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      return 0;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v7 = &v3[*(int *)(v6 + 48)];
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      return 0;
    case 0x10u:
      uint64_t v4 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_3;
    case 0x11u:
      uint64_t v4 = type metadata accessor for FollowingPuzzleHubModel;
      goto LABEL_3;
    default:
      uint64_t v4 = type metadata accessor for FollowingModel;
LABEL_3:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))v4);
      return 1;
  }
}

uint64_t sub_1DF14824C()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = type metadata accessor for FollowingAudioModel;
      goto LABEL_3;
    case 6u:
    case 7u:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      return 1;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v7 = &v3[*(int *)(v6 + 48)];
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      return 0;
    case 0x10u:
      uint64_t v4 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_3;
    case 0x11u:
      uint64_t v4 = type metadata accessor for FollowingPuzzleHubModel;
      goto LABEL_3;
    default:
      uint64_t v4 = type metadata accessor for FollowingModel;
LABEL_3:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))v4);
      return 0;
  }
}

unint64_t sub_1DF14842C()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (uint64_t *)((char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
    case 0xEu:
      uint64_t v4 = (void *)v3[3];
      goto LABEL_5;
    case 2u:
      uint64_t v5 = type metadata accessor for FollowingAudioModel;
      goto LABEL_12;
    case 3u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
      goto LABEL_2;
    case 6u:
    case 7u:
      if (*(unsigned char *)(*v3 + 16) == 1)
      {
        sub_1DE936220(0, &qword_1EAC28C38, (uint64_t (*)(uint64_t))sub_1DF14A1FC, MEMORY[0x1E4FBBE00]);
        sub_1DF14A1FC();
        uint64_t v12 = v11 - 8;
        unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1DFE0B250;
        unint64_t v15 = v14 + v13;
        uint64_t v16 = (uint64_t *)(v15 + *(int *)(v12 + 56));
        uint64_t v17 = *MEMORY[0x1E4FABAF8];
        uint64_t v18 = sub_1DFDF03F0();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v15, v17, v18);
        type metadata accessor for Localized();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v20 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        uint64_t v21 = sub_1DFDE6ED0();
        uint64_t v23 = v22;

        *uint64_t v16 = v21;
        v16[1] = v23;
        unint64_t v9 = sub_1DF34C078(v14);
        swift_release();
      }
      else
      {
LABEL_2:
        swift_release();
        return 0;
      }
      return v9;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v7 = (char *)v3 + *(int *)(v6 + 48);
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      return 0;
    case 0x10u:
      uint64_t v5 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_12;
    case 0x11u:
      uint64_t v5 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_12:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))v5);
      return 0;
    default:
      uint64_t v4 = (void *)v3[2];
LABEL_5:
      swift_bridgeObjectRelease();

      return 0;
  }
}

uint64_t sub_1DF1487F4()
{
  uint64_t v1 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
    case 0xEu:
      uint64_t v4 = (void *)*((void *)v3 + 3);
      goto LABEL_5;
    case 2u:
      uint64_t v5 = type metadata accessor for FollowingAudioModel;
      goto LABEL_10;
    case 3u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0xFu:
      swift_release();
      return MEMORY[0x1E4FBC860];
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v7 = &v3[*(int *)(v6 + 48)];
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      return MEMORY[0x1E4FBC860];
    case 0x10u:
      uint64_t v5 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_10;
    case 0x11u:
      uint64_t v5 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_10:
      sub_1DF148E7C((uint64_t)v3, (uint64_t (*)(void))v5);
      break;
    default:
      uint64_t v4 = (void *)*((void *)v3 + 2);
LABEL_5:
      swift_bridgeObjectRelease();

      break;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DF1489D0()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DF1489F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1DEC8DD2C(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(v2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      unint64_t v13 = type metadata accessor for FollowingAudioModel;
      goto LABEL_3;
    case 6u:
      unint64_t v15 = (void *)swift_unknownObjectRetain();
      sub_1DFAF9A80(v15, (uint64_t)v9);
      uint64_t v16 = type metadata accessor for FeedEntity();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v9, 1, v16) == 1)
      {
        swift_release();
        uint64_t v17 = (uint64_t)v9;
        goto LABEL_11;
      }
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = sub_1DE93BF0C((unint64_t *)&qword_1EBAD07D0, (void (*)(uint64_t))type metadata accessor for FeedEntity);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      sub_1DF14A264((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FeedEntity);
      uint64_t result = swift_release();
      break;
    case 7u:
      uint64_t v18 = (void *)swift_unknownObjectRetain();
      sub_1DFAF9A80(v18, (uint64_t)v7);
      uint64_t v19 = type metadata accessor for FeedEntity();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v7, 1, v19) == 1)
      {
        swift_release();
        uint64_t v17 = (uint64_t)v7;
LABEL_11:
        uint64_t result = sub_1DF148E7C(v17, (uint64_t (*)(void))sub_1DEC8DD2C);
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        *(void *)(a1 + 32) = 0;
      }
      else
      {
        *(void *)(a1 + 24) = v19;
        *(void *)(a1 + 32) = sub_1DE93BF0C((unint64_t *)&qword_1EBAD07D0, (void (*)(uint64_t))type metadata accessor for FeedEntity);
        uint64_t v24 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
        sub_1DF14A264((uint64_t)v7, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedEntity);
        uint64_t result = swift_release();
      }
      break;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v21 = &v12[*(int *)(v20 + 48)];
      sub_1DE9371E8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      goto LABEL_4;
    case 0x10u:
      unint64_t v13 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_3;
    case 0x11u:
      unint64_t v13 = type metadata accessor for FollowingPuzzleHubModel;
      goto LABEL_3;
    default:
      unint64_t v13 = type metadata accessor for FollowingModel;
LABEL_3:
      uint64_t result = sub_1DF148E7C((uint64_t)v12, (uint64_t (*)(void))v13);
LABEL_4:
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      return result;
  }
  return result;
}

uint64_t sub_1DF148E24()
{
  return objectdestroyTm_4();
}

uint64_t sub_1DF148E2C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DF148E6C()
{
  return objectdestroyTm_4();
}

uint64_t sub_1DF148E74()
{
  return objectdestroyTm_4();
}

uint64_t sub_1DF148E7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF148EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = type metadata accessor for FollowingPuzzleHubModel();
  uint64_t v4 = MEMORY[0x1F4188790](v67);
  uint64_t v66 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v65 - v6;
  uint64_t v8 = type metadata accessor for FollowingMySportsModel();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v65 - v12;
  sub_1DE9371E8();
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v69 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v65 - v18;
  sub_1DF14A048();
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v23 = (uint64_t *)((char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = (uint64_t *)((char *)v23 + *(int *)(v21 + 56));
  sub_1DF14A0E8(a1, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  uint64_t v25 = v24;
  sub_1DF14A0E8(a2, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  type metadata accessor for FollowingModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = (void *)v23[3];
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_11;
      }
      goto LABEL_5;
    case 2u:
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1DF148E7C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
        sub_1DF148E7C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
        char v29 = 1;
        return v29 & 1;
      }
      uint64_t v62 = type metadata accessor for FollowingAudioModel;
      goto LABEL_51;
    case 3u:
      uint64_t v35 = *v23;
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_44;
      }
      char v29 = sub_1DEFB6BAC(*(void *)(v35 + 16), *(void *)(*v24 + 16));
      swift_release();
      swift_release();
      return v29 & 1;
    case 4u:
      uint64_t v30 = (void *)v23[3];
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_11;
      }
      goto LABEL_5;
    case 5u:
      uint64_t v36 = (void *)v23[2];
      uint64_t v27 = v25;
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        char v37 = (void *)v25[2];
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        char v29 = 1;
        return v29 & 1;
      }
      swift_bridgeObjectRelease();

      goto LABEL_52;
    case 6u:
      uint64_t v38 = *v23;
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() == 6) {
        goto LABEL_17;
      }
      goto LABEL_44;
    case 7u:
      uint64_t v38 = *v23;
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_44;
      }
LABEL_17:
      uint64_t v39 = *v24;
      char v40 = *(unsigned char *)(v38 + 16);
      uint64_t v41 = *(void *)(v38 + 24);
      uint64_t v71 = 0;
      unint64_t v72 = 0xE000000000000000;
      char v70 = v40;
      sub_1DFDFFB10();
      sub_1DFDFDE90();
      uint64_t v69 = v41;
      id v42 = objc_msgSend(*(id *)(v41 + 16), sel_identifier);
      sub_1DFDFDD20();

      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      uint64_t v44 = v71;
      unint64_t v43 = v72;
      char v45 = *(unsigned char *)(v39 + 16);
      uint64_t v46 = *(void *)(v39 + 24);
      uint64_t v71 = 0;
      unint64_t v72 = 0xE000000000000000;
      char v70 = v45;
      sub_1DFDFFB10();
      sub_1DFDFDE90();
      id v47 = objc_msgSend(*(id *)(v46 + 16), sel_identifier);
      sub_1DFDFDD20();

      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      if (v44 == v71 && v43 == v72)
      {
        swift_bridgeObjectRelease_n();
LABEL_56:
        char v29 = _s7NewsUI28TagModelC2eeoiySbAC_ACtFZ_0(v69, v46);
        swift_release();
        swift_release();
        return v29 & 1;
      }
      char v64 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v64) {
        goto LABEL_56;
      }
      swift_release();
      swift_release();
LABEL_53:
      char v29 = 0;
      return v29 & 1;
    case 8u:
      swift_release();
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_52;
      }
      goto LABEL_31;
    case 9u:
      swift_release();
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_52;
      }
      goto LABEL_31;
    case 0xAu:
      swift_release();
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_52;
      }
      goto LABEL_31;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v49 = v48;
      uint64_t v50 = (char *)v23 + *(int *)(v48 + 48);
      uint64_t v27 = v25;
      if (swift_getEnumCaseMultiPayload() == 11)
      {
        swift_release();
        uint64_t v51 = (char *)v25 + *(int *)(v49 + 48);
        uint64_t v53 = v68;
        uint64_t v52 = v69;
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
        v54(v19, v50, v69);
        v54(v17, v51, v52);
        type metadata accessor for FollowingTagModel();
        sub_1DE93BF0C(&qword_1EBAAC0B0, (void (*)(uint64_t))type metadata accessor for FollowingTagModel);
        sub_1DE93BF0C((unint64_t *)&unk_1EBAAC0A0, (void (*)(uint64_t))type metadata accessor for FollowingTagModel);
        char v29 = sub_1DFDED250();
        uint64_t v55 = *(void (**)(char *, uint64_t))(v53 + 8);
        v55(v17, v52);
        v55(v19, v52);
        return v29 & 1;
      }
      (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v69);
      goto LABEL_52;
    case 0xCu:
      swift_release();
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_52;
      }
      goto LABEL_31;
    case 0xDu:
      swift_release();
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_52;
      }
LABEL_31:
      swift_release();
      char v29 = 1;
      return v29 & 1;
    case 0xEu:
      uint64_t v30 = (void *)v23[3];
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() == 14)
      {
LABEL_5:
        uint64_t v31 = *v23;
        uint64_t v32 = v27;
        uint64_t v33 = *v27;
        uint64_t v34 = (void *)v32[3];
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        char v29 = v31 == v33;
        return v29 & 1;
      }
LABEL_11:
      swift_bridgeObjectRelease();

      goto LABEL_52;
    case 0xFu:
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() != 15)
      {
LABEL_44:
        swift_release();
        goto LABEL_52;
      }
      uint64_t v56 = sub_1DFC7E8FC();
      uint64_t v58 = v57;
      if (v56 == sub_1DFC7E8FC() && v58 == v59) {
        char v29 = 1;
      }
      else {
        char v29 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return v29 & 1;
    case 0x10u:
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() == 16)
      {
        sub_1DF14A264((uint64_t)v23, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
        sub_1DF14A264((uint64_t)v24, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
        char v29 = _s7NewsUI222FollowingMySportsModelV2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v11);
        sub_1DF148E7C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
        sub_1DF148E7C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
        return v29 & 1;
      }
      uint64_t v62 = type metadata accessor for FollowingMySportsModel;
      goto LABEL_51;
    case 0x11u:
      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload() == 17)
      {
        sub_1DF14A264((uint64_t)v23, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
        uint64_t v61 = v66;
        sub_1DF14A264((uint64_t)v24, v66, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
        char v29 = *(void *)&v7[*(int *)(v67 + 40)] == *(void *)(v61 + *(int *)(v67 + 40));
        sub_1DF148E7C(v61, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
        sub_1DF148E7C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
        return v29 & 1;
      }
      uint64_t v62 = type metadata accessor for FollowingPuzzleHubModel;
LABEL_51:
      sub_1DF148E7C((uint64_t)v23, (uint64_t (*)(void))v62);
LABEL_52:
      sub_1DF148E7C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      goto LABEL_53;
    default:
      uint64_t v26 = (void *)v23[2];
      swift_bridgeObjectRelease();

      uint64_t v27 = v24;
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_52;
      }
      long long v28 = (void *)v24[2];
      swift_bridgeObjectRelease();

      char v29 = 1;
      return v29 & 1;
  }
}

uint64_t sub_1DF149A50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14A0E8(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 1;
      break;
    case 2u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
      uint64_t result = 2;
      break;
    case 3u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 6;
      break;
    case 4u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 7;
      break;
    case 5u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 8;
      break;
    case 6u:
    case 7u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 15;
      break;
    case 8u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 14;
      break;
    case 9u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 16;
      break;
    case 0xAu:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 10;
      break;
    case 0xBu:
      swift_release();
      sub_1DEB8E140();
      uint64_t v7 = &v4[*(int *)(v6 + 48)];
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      uint64_t result = 11;
      break;
    case 0xCu:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 12;
      break;
    case 0xDu:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 13;
      break;
    case 0xEu:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 9;
      break;
    case 0xFu:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 5;
      break;
    case 0x10u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
      uint64_t result = 3;
      break;
    case 0x11u:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
      uint64_t result = 4;
      break;
    default:
      sub_1DF148E7C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      uint64_t result = 0;
      break;
  }
  return result;
}

BOOL sub_1DF149DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FollowingModel();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (uint64_t *)((char *)&v22 - v8);
  sub_1DF14A048();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  unint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_1DF14A0E8(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  sub_1DF14A0E8(a2, v14, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    sub_1DF14A0E8((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FollowingModel);
    uint64_t v16 = *v7;
    int v18 = swift_getEnumCaseMultiPayload();
    if (v18 != 6 && v18 != 7) {
      goto LABEL_9;
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 6)
    {
LABEL_10:
      uint64_t v20 = sub_1DF149A50(a1);
      BOOL v19 = v20 < sub_1DF149A50(a2);
      sub_1DF148E7C(v14, (uint64_t (*)(void))type metadata accessor for FollowingModel);
      goto LABEL_11;
    }
    sub_1DF14A0E8((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FollowingModel);
    uint64_t v16 = *v9;
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 != 7 && v17 != 6)
    {
LABEL_9:
      swift_release();
      goto LABEL_10;
    }
  }
  BOOL v19 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(*(void *)(v16 + 24), *(void *)(*(void *)v14 + 24));
  swift_release();
  swift_release();
LABEL_11:
  sub_1DF148E7C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  return v19;
}

void sub_1DF14A048()
{
  if (!qword_1EBAECC48)
  {
    type metadata accessor for FollowingModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAECC48);
    }
  }
}

void sub_1DF14A0AC(uint64_t a1)
{
}

uint64_t sub_1DF14A0E0()
{
  return sub_1DF146F90();
}

uint64_t sub_1DF14A0E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1DF14A150()
{
  if (!qword_1EAC28C20)
  {
    sub_1DFDF2170();
    sub_1DE936220(255, &qword_1EAC28C28, MEMORY[0x1E4FAC530], MEMORY[0x1E4FBB320]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAC28C20);
    }
  }
}

void sub_1DF14A1FC()
{
  if (!qword_1EAC2B830)
  {
    sub_1DFDF03F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC2B830);
    }
  }
}

uint64_t sub_1DF14A264(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF14A2CC()
{
  uint64_t v25 = sub_1DFDEC470();
  uint64_t v0 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v24 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1DFDEC450();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDF4480();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDEA1F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v23 - v14;
  sub_1DFDF4260();
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v16 == *MEMORY[0x1E4FAD388])
  {
    int v17 = (unsigned int *)MEMORY[0x1E4F7B2B0];
LABEL_9:
    uint64_t v19 = *v17;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
    goto LABEL_10;
  }
  if (v16 == *MEMORY[0x1E4FAD398] || v16 == *MEMORY[0x1E4FAD3A0])
  {
    int v17 = (unsigned int *)MEMORY[0x1E4F7B298];
    goto LABEL_9;
  }
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  if (v16 != *MEMORY[0x1E4FAD390])
  {
    v20(v15, *MEMORY[0x1E4F7B298], v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_11;
  }
  uint64_t v19 = *MEMORY[0x1E4F7B260];
LABEL_10:
  v20(v15, v19, v9);
LABEL_11:
  sub_1DFDF4250();
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v24, *MEMORY[0x1E4F7CF38], v25);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  sub_1DFDEC440();
  sub_1DF14E620((unint64_t *)&qword_1EBAA7370, MEMORY[0x1E4F7CF00]);
  uint64_t v21 = v27;
  sub_1DFDE8880();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v21);
  sub_1DFDE87C0();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_1DF14A728(uint64_t a1)
{
  sub_1DEB23648();
  uint64_t v39 = v2;
  uint64_t v34 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v37 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14D950(0, (unint64_t *)&unk_1EAC28C60, MEMORY[0x1E4FAC4C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v40 = (char *)&v33 - v7;
  sub_1DEB23728();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SearchMoreModel(0);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE0229C();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  sub_1DFDF20A0();
  sub_1DFDF0B50();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = v34;
      (*(void (**)(void))(v34 + 32))();
      sub_1DFDF9A80();
      uint64_t v21 = *(void *)(v41 + 16);
      swift_unknownObjectRetain();
      swift_release();
      uint64_t v22 = swift_allocObject();
      swift_weakInit();
      uint64_t v23 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v40, v38, v5);
      unint64_t v24 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v22;
      *(void *)(v25 + 24) = v21;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v25 + v24, v23, v5);
      swift_unknownObjectRetain();
      swift_retain();
      sub_1DFDE87E0();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v37, v39);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v10, v13, v36);
      sub_1DFDF9A80();
      uint64_t v28 = *(void *)(v41 + 16);
      swift_unknownObjectRetain();
      swift_release();
      uint64_t v29 = swift_allocObject();
      swift_weakInit();
      uint64_t v30 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v40, v38, v5);
      unint64_t v31 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v29;
      *(void *)(v32 + 24) = v28;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v32 + v31, v30, v5);
      swift_unknownObjectRetain();
      swift_retain();
      sub_1DFDE87E0();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v10, v36);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DF14D504();
    return sub_1DF14D6EC((uint64_t)&v13[*(int *)(v27 + 48)], type metadata accessor for SearchMoreFeedGapLocation);
  }
}

uint64_t sub_1DF14ACC0()
{
  sub_1DEB23648();
  uint64_t v65 = *(void **)(v0 - 8);
  uint64_t v66 = v0;
  uint64_t v1 = (char *)v65[8];
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  char v64 = (char *)&v59 - ((unint64_t)(v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v75 = (char *)&v59 - v3;
  uint64_t v4 = sub_1DFDEB830();
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v62 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v61 = (char *)&v59 - v7;
  uint64_t v8 = sub_1DFDEA1B0();
  uint64_t v73 = *(void *)(v8 - 8);
  uint64_t v74 = v8;
  uint64_t v9 = *(char **)(v73 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v68 = (char *)&v59 - ((unint64_t)(v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  unint64_t v72 = (char *)&v59 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v67 = (char *)&v59 - v13;
  uint64_t v14 = sub_1DFDE8730();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char **)((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEB23728();
  uint64_t v63 = v18;
  uint64_t v60 = *((void *)v18 - 1);
  uint64_t v19 = *(void *)(v60 + 64);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v59 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v59 - v21;
  uint64_t v23 = type metadata accessor for SearchMoreModel(0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE0229C();
  sub_1DFDF0B50();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    sub_1DF14D504();
    return sub_1DF14D6EC((uint64_t)&v25[*(int *)(v43 + 48)], type metadata accessor for SearchMoreFeedGapLocation);
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v67 = v1;
    uint64_t v27 = v66;
    uint64_t v28 = v65;
    uint64_t v29 = (char *)v65[4];
    uint64_t v63 = (char *)(v65 + 4);
    uint64_t v61 = v29;
    ((void (*)(char *, char *, uint64_t))v29)(v75, v25, v66);
    uint64_t v30 = v71;
    uint64_t v31 = *(void *)(v71 + 16);
    *uint64_t v17 = 6775156;
    v17[1] = 0xE300000000000000;
    (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4F4AB18], v14);
    uint64_t v60 = v31;
    sub_1DFDE8890();
    (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
    unint64_t v32 = *(void *)(v30 + 56);
    if (v32 < 8)
    {
      (*(void (**)(char *, void, uint64_t))(v69 + 104))(v62, **((unsigned int **)&unk_1E6D34320 + v32), v70);
      swift_bridgeObjectRetain();
      uint64_t v33 = v68;
      sub_1DFDEA1A0();
      uint64_t v34 = v64;
      ((void (*)(char *, char *, uint64_t))v28[2])(v64, v75, v27);
      uint64_t v36 = v73;
      uint64_t v35 = v74;
      uint64_t v37 = v27;
      uint64_t v38 = v72;
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v72, v33, v74);
      unint64_t v39 = (*((unsigned __int8 *)v28 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v28 + 80);
      unint64_t v40 = (unint64_t)&v67[*(unsigned __int8 *)(v36 + 80) + v39] & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v41 = swift_allocObject();
      ((void (*)(unint64_t, char *, uint64_t))v61)(v41 + v39, v34, v37);
      (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v40, v38, v35);
      sub_1DFDE87E0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v68, v35);
      return ((uint64_t (*)(char *, uint64_t))v28[1])(v75, v37);
    }
    goto LABEL_9;
  }
  uint64_t v68 = v9;
  uint64_t v44 = v60;
  char v45 = *(void **)(v60 + 32);
  uint64_t v75 = v22;
  uint64_t v46 = v63;
  uint64_t v65 = v45;
  uint64_t v66 = v60 + 32;
  ((void (*)(char *, char *, char *))v45)(v22, v25, v63);
  uint64_t v47 = v71;
  uint64_t v48 = *(char **)(v71 + 16);
  *uint64_t v17 = 0x656E696C64616568;
  v17[1] = 0xE800000000000000;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4F4AB18], v14);
  char v64 = v48;
  sub_1DFDE8890();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  unint64_t v32 = *(void *)(v47 + 56);
  if (v32 >= 8)
  {
LABEL_9:
    unint64_t v76 = v32;
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_1DFDFFFD0();
    __break(1u);
    return result;
  }
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v61, **((unsigned int **)&unk_1E6D34320 + v32), v70);
  swift_bridgeObjectRetain();
  uint64_t v49 = v67;
  sub_1DFDEA1A0();
  uint64_t v50 = v59;
  (*(void (**)(char *, char *, char *))(v44 + 16))(v59, v75, v46);
  uint64_t v51 = v73;
  uint64_t v52 = v46;
  uint64_t v53 = v72;
  uint64_t v54 = v49;
  uint64_t v55 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v72, v54, v74);
  unint64_t v56 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v57 = (v19 + *(unsigned __int8 *)(v51 + 80) + v56) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v58 = swift_allocObject();
  ((void (*)(unint64_t, char *, char *))v65)(v58 + v56, v50, v52);
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v58 + v57, v53, v55);
  sub_1DFDE87E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v67, v55);
  return (*(uint64_t (**)(char *, char *))(v44 + 8))(v75, v52);
}

uint64_t sub_1DF14B544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a1;
  uint64_t v18 = a3;
  uint64_t v3 = sub_1DFDEB350();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDEB510();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB23728();
  sub_1DFDF9A80();
  id v11 = objc_msgSend(*(id *)(*(void *)&v19[0] + 16), sel_identifier, v17, v18);
  sub_1DFDFDD20();
  swift_release();

  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F7BFE8], v3);
  sub_1DFDEB500();
  sub_1DF14E620(&qword_1EAC28C50, MEMORY[0x1E4F7C150]);
  sub_1DFDE8390();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1DEAB97F8(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v12 = sub_1DFDE8410();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x1E4F4AA18], v12);
  sub_1DFDEA1B0();
  sub_1DF14E620(&qword_1EBABDA20, MEMORY[0x1E4F7B228]);
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  sub_1DFDEBA60();
  sub_1DF14E620(&qword_1EAC28C58, MEMORY[0x1E4F7C658]);
  memset(v19, 0, sizeof(v19));
  sub_1DFDE83B0();
  return sub_1DF14D6EC((uint64_t)v19, (uint64_t (*)(void))sub_1DE9E4C7C);
}

uint64_t sub_1DF14B954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18[1] = a3;
  uint64_t v3 = sub_1DFDEB350();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDEB510();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB23648();
  sub_1DFDF9A80();
  id v11 = *(void **)(*(void *)&v19[0] + 16);
  swift_unknownObjectRetain();
  swift_release();
  id v12 = objc_msgSend(v11, sel_identifier);
  swift_unknownObjectRelease();
  sub_1DFDFDD20();

  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F7BFE0], v3);
  sub_1DFDEB500();
  sub_1DF14E620(&qword_1EAC28C50, MEMORY[0x1E4F7C150]);
  sub_1DFDE8390();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1DEAB97F8(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v13 = sub_1DFDE8410();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E4F4AA18], v13);
  sub_1DFDEA1B0();
  sub_1DF14E620(&qword_1EBABDA20, MEMORY[0x1E4F7B228]);
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  sub_1DFDEBA60();
  sub_1DF14E620(&qword_1EAC28C58, MEMORY[0x1E4F7C658]);
  memset(v19, 0, sizeof(v19));
  sub_1DFDE83B0();
  return sub_1DF14D6EC((uint64_t)v19, (uint64_t (*)(void))sub_1DE9E4C7C);
}

uint64_t sub_1DF14BD88(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DF14BE04(a1, a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF14BE04(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v119 = a3;
  uint64_t v132 = a1;
  uint64_t v4 = sub_1DFDE7600();
  uint64_t v108 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v107 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1DFDEA9D0();
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v104 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAB97F8(0, &qword_1EBAC03F0, MEMORY[0x1E4F7C2D8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v101 = (char *)&v81 - v8;
  uint64_t v103 = sub_1DFDEB700();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v92 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1DFDEB9A0();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v98 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1DFDEA280();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v95 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE0229C();
  uint64_t v13 = v12;
  uint64_t v94 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v115 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14D950(0, (unint64_t *)&qword_1EAC32430, MEMORY[0x1E4FAD830]);
  unint64_t v118 = v15;
  uint64_t v93 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v117 = (char *)&v81 - v16;
  uint64_t v17 = sub_1DFDEADA0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1DFDEC690();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v82 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1DFDF9170();
  uint64_t v111 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  uint64_t v110 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1DFDEA320();
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v112 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1DFDEA260();
  uint64_t v109 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (uint64_t)objc_msgSend(a2, sel_sourceChannel);
  uint64_t v124 = result;
  if (!result) {
    return result;
  }
  uint64_t v85 = v20;
  uint64_t v86 = v13;
  uint64_t v87 = v18;
  uint64_t v88 = v17;
  uint64_t v90 = v4;
  uint64_t v89 = ObjectType;
  id v130 = a2;
  sub_1DFDFEF90();
  sub_1DEAB97F8(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v127 = v29;
  uint64_t v30 = sub_1DFDE8410();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = (v32 + 32) & ~v32;
  uint64_t v122 = v33 + *(void *)(v31 + 72);
  uint64_t v128 = v32 | 7;
  uint64_t v34 = swift_allocObject();
  long long v131 = xmmword_1DFE0B250;
  *(_OWORD *)(v34 + 16) = xmmword_1DFE0B250;
  uint64_t v35 = *MEMORY[0x1E4F4AA18];
  uint64_t v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 104);
  v123(v34 + v33, v35, v30);
  sub_1DF14E620((unint64_t *)&unk_1EBAA7180, MEMORY[0x1E4F7B338]);
  unint64_t v116 = (unint64_t)"archMoreTracker";
  unint64_t v91 = 0x80000001DFEE3170;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v26, v24);
  uint64_t v36 = v126;
  uint64_t v37 = v111;
  uint64_t v38 = v110;
  (*(void (**)(char *, void, uint64_t))(v111 + 104))(v110, *MEMORY[0x1E4F7FFA8], v126);
  unint64_t v39 = v112;
  sub_1DFDEB310();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v131;
  uint64_t v120 = v33;
  uint64_t v121 = v30;
  uint64_t v41 = v40 + v33;
  LODWORD(v126) = v35;
  id v42 = v123;
  uint64_t v129 = v31 + 104;
  v123(v41, v35, v30);
  sub_1DF14E620((unint64_t *)&unk_1EBAA71C0, MEMORY[0x1E4F7B400]);
  uint64_t v43 = v114;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v39, v43);
  id v44 = objc_msgSend(v130, sel_scoreProfile);
  uint64_t v45 = v125;
  if (v44)
  {
    uint64_t v46 = v44;
    if (objc_msgSend(v44, sel_hasShadowScores))
    {
      objc_msgSend(v46, sel_shadowTabiScore);
      objc_msgSend(v46, sel_shadowAgedPersonalizationScore);
      uint64_t v47 = v82;
      sub_1DFDEC680();
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = v131;
      v42(v48 + v120, v126, v121);
      sub_1DF14E620((unint64_t *)&unk_1EBACB8B0, MEMORY[0x1E4F7D400]);
      uint64_t v49 = v84;
      sub_1DFDE8390();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v47, v49);
    }
    else
    {
    }
  }
  sub_1DF14D950(0, (unint64_t *)&unk_1EAC28C60, MEMORY[0x1E4FAC4C0]);
  uint64_t v51 = v50;
  sub_1DFDF20D0();
  uint64_t v52 = v115;
  uint64_t v114 = v51;
  sub_1DFDF20A0();
  sub_1DF14E620((unint64_t *)&unk_1EAC28C70, (void (*)(uint64_t))type metadata accessor for SearchMoreModel);
  uint64_t result = sub_1DFDF5AA0();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v53 = v85;
  sub_1DFDEAD90();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v52, v86);
  (*(void (**)(char *, unint64_t))(v93 + 8))(v117, v118);
  uint64_t v54 = v120;
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = v131;
  uint64_t v56 = v121;
  v42(v55 + v54, v126, v121);
  sub_1DF14E620((unint64_t *)&unk_1EBAA7270, MEMORY[0x1E4F7BAF0]);
  unint64_t v57 = v116 | 0x8000000000000000;
  uint64_t v58 = v88;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v53, v58);
  unint64_t v118 = *(void *)(v45 + 32);
  uint64_t v59 = v56;
  uint64_t v60 = v95;
  sub_1DFDEB250();
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = v131;
  v42(v61 + v54, v126, v56);
  sub_1DF14E620((unint64_t *)&unk_1EBAA71A0, MEMORY[0x1E4F7B368]);
  uint64_t v62 = v54;
  uint64_t v63 = v97;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v60, v63);
  char v64 = v98;
  sub_1DFDEB240();
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = v131;
  v123(v65 + v62, v126, v59);
  sub_1DF14E620((unint64_t *)&unk_1EBAA7300, MEMORY[0x1E4F7C5A0]);
  unint64_t v118 = v57;
  uint64_t v66 = v100;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v64, v66);
  uint64_t v67 = (uint64_t)v101;
  sub_1DFDFEFB0();
  uint64_t v68 = v102;
  uint64_t v69 = v103;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v67, 1, v103) == 1)
  {
    sub_1DF14DA44(v67);
    uint64_t v70 = v126;
  }
  else
  {
    uint64_t v71 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v92, v67, v69);
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = v131;
    uint64_t v73 = v126;
    v123(v72 + v120, v126, v121);
    sub_1DF14E620(&qword_1EAC22960, MEMORY[0x1E4F7C2D8]);
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v71, v69);
    uint64_t v70 = v73;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v125 + 80), *(void *)(v125 + 104));
  id v74 = objc_msgSend(v130, sel_identifier);
  sub_1DFDFDD20();

  sub_1DFDFD280();
  swift_bridgeObjectRelease();
  uint64_t v75 = v104;
  sub_1DFDEA9C0();
  uint64_t v76 = swift_allocObject();
  *(_OWORD *)(v76 + 16) = v131;
  v123(v76 + v120, v70, v121);
  sub_1DF14E620(&qword_1EBACB870, MEMORY[0x1E4F7B8D8]);
  uint64_t v77 = v106;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v75, v77);
  sub_1DFDEB7F0();
  uint64_t v78 = v107;
  sub_1DFDF20E0();
  sub_1DF14E620((unint64_t *)&unk_1EBAA72F0, MEMORY[0x1E4F7C418]);
  sub_1DFDE8330();
  uint64_t v79 = *(void (**)(char *, uint64_t))(v108 + 8);
  uint64_t v80 = v90;
  v79(v78, v90);
  sub_1DFDF20B0();
  v133[3] = sub_1DFDEA630();
  __swift_allocate_boxed_opaque_existential_1(v133);
  swift_unknownObjectRetain();
  sub_1DFDEA620();
  sub_1DFDE8350();
  swift_unknownObjectRelease();
  v79(v78, v80);
  return sub_1DF14D6EC((uint64_t)v133, (uint64_t (*)(void))sub_1DE9E4C7C);
}

uint64_t sub_1DF14D1B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DF14DAD0(a1, a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF14D228()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchMoreTracker()
{
  return self;
}

uint64_t sub_1DF14D2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v24 = a5;
  uint64_t v11 = sub_1DFDEC3F0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1DFDEC3D0();
  uint64_t v15 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a4;
  uint64_t v19 = a4[1];
  char v20 = *((unsigned char *)a4 + 32);
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = v18;
  *(void *)(v6 + 48) = v19;
  *(_OWORD *)(v6 + 56) = *((_OWORD *)a4 + 1);
  *(unsigned char *)(v6 + 72) = v20;
  uint64_t v21 = v24;
  sub_1DE94F204(v24, v6 + 80);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4F7CE88], v11);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DFDEC3B0();
  sub_1DF14E620((unint64_t *)&qword_1EBAA7350, MEMORY[0x1E4F7CE00]);
  uint64_t v22 = v25;
  sub_1DFDE8880();
  __swift_destroy_boxed_opaque_existential_1(v21);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v22);
  return v6;
}

void sub_1DF14D504()
{
  if (!qword_1EAC34F10)
  {
    type metadata accessor for SearchMoreFeedGapLocation(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAC34F10);
    }
  }
}

uint64_t sub_1DF14D578()
{
  return objectdestroyTm_32((uint64_t (*)(void))sub_1DEB23648);
}

uint64_t sub_1DF14D590(uint64_t a1)
{
  return sub_1DF14D600(a1, (uint64_t (*)(void))sub_1DEB23648, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1DF14B954);
}

uint64_t sub_1DF14D5BC()
{
  return objectdestroyTm_32((uint64_t (*)(void))sub_1DEB23728);
}

uint64_t sub_1DF14D5D4(uint64_t a1)
{
  return sub_1DF14D600(a1, (uint64_t (*)(void))sub_1DEB23728, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1DF14B544);
}

uint64_t sub_1DF14D600(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1DFDEA1B0() - 8);
  uint64_t v9 = v3 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a3(a1, v3 + v6, v9);
}

uint64_t sub_1DF14D6EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF14D74C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF14D788(uint64_t a1)
{
  return sub_1DF14D8AC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DF14D1B0);
}

uint64_t objectdestroy_14Tm_1()
{
  sub_1DF14D950(0, (unint64_t *)&unk_1EAC28C60, MEMORY[0x1E4FAC4C0]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DF14D894(uint64_t a1)
{
  return sub_1DF14D8AC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DF14BD88);
}

uint64_t sub_1DF14D8AC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1DF14D950(0, (unint64_t *)&unk_1EAC28C60, MEMORY[0x1E4FAC4C0]);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = v2
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  return a2(a1, v5, v6, v7);
}

void sub_1DF14D950(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for SearchMoreSectionDescriptor();
    v8[1] = type metadata accessor for SearchMoreModel(255);
    void v8[2] = sub_1DF14E620(&qword_1EAC24D20, (void (*)(uint64_t))type metadata accessor for SearchMoreSectionDescriptor);
    v8[3] = sub_1DF14E620((unint64_t *)&unk_1EAC28C40, (void (*)(uint64_t))type metadata accessor for SearchMoreModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DF14DA44(uint64_t a1)
{
  sub_1DEAB97F8(0, &qword_1EBAC03F0, MEMORY[0x1E4F7C2D8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF14DAD0(uint64_t a1, void *a2, uint64_t a3)
{
  id v86 = a2;
  uint64_t v93 = a1;
  uint64_t v4 = sub_1DFDE7600();
  uint64_t v84 = *(void *)(v4 - 8);
  uint64_t v85 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v83 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1DFDEA360();
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v82 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v80 = &v63[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1DFDEADA0();
  uint64_t v78 = *(void *)(v8 - 8);
  uint64_t v79 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v77 = &v63[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1DFDEC370();
  uint64_t v88 = *(void *)(v10 - 8);
  unint64_t v89 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v87 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DEE0229C();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v63[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DF14D950(0, (unint64_t *)&qword_1EAC32430, MEMORY[0x1E4FAD830]);
  uint64_t v18 = v17;
  uint64_t v92 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  char v20 = &v63[-v19];
  sub_1DF14E5AC();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = &v63[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DF14D950(0, (unint64_t *)&qword_1EAC24D18, MEMORY[0x1E4FAC180]);
  uint64_t v25 = v24;
  uint64_t v26 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v94 = &v63[-v27];
  sub_1DF14D950(0, (unint64_t *)&unk_1EAC28C60, MEMORY[0x1E4FAC4C0]);
  uint64_t v29 = v28;
  sub_1DFDF20D0();
  uint64_t v90 = v29;
  uint64_t v91 = a3;
  sub_1DFDF20A0();
  sub_1DFDF0B10();
  uint64_t v75 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
  uint64_t v76 = v13;
  uint64_t v30 = v14 + 8;
  uint64_t v31 = v18;
  uint64_t v32 = v92;
  uint64_t v74 = v30;
  v75(v16, v13);
  sub_1DFDF59E0();
  uint64_t v33 = v26;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
  v34(v20, v31);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(v23, 1, v25) == 1) {
    return sub_1DF14D6EC((uint64_t)v23, (uint64_t (*)(void))sub_1DF14E5AC);
  }
  uint64_t v70 = v34;
  uint64_t v71 = v33;
  uint64_t v36 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v33 + 32);
  uint64_t v92 = v25;
  v36(v94, v23, v25);
  id v37 = objc_msgSend(v86, sel_identifier);
  sub_1DFDFDD20();

  uint64_t v38 = v87;
  sub_1DFDEC350();
  sub_1DEAB97F8(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v40 = v39;
  uint64_t v41 = sub_1DFDE8410();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(unsigned __int8 *)(v42 + 80);
  uint64_t v44 = (v43 + 32) & ~v43;
  uint64_t v45 = (void *)(v44 + *(void *)(v42 + 72));
  uint64_t v68 = v40;
  id v86 = v45;
  uint64_t v73 = v43 | 7;
  uint64_t v46 = swift_allocObject();
  long long v72 = xmmword_1DFE0B250;
  *(_OWORD *)(v46 + 16) = xmmword_1DFE0B250;
  uint64_t v67 = v44;
  uint64_t v47 = v46 + v44;
  uint64_t v48 = *MEMORY[0x1E4F4AA18];
  uint64_t v49 = *(void (**)(uint64_t, void, uint64_t))(v42 + 104);
  uint64_t v69 = v41;
  uint64_t v66 = v42 + 104;
  uint64_t v65 = v49;
  v49(v47, v48, v41);
  sub_1DF14E620((unint64_t *)&unk_1EBAA7340, MEMORY[0x1E4F7CDE0]);
  unint64_t v50 = v89;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, unint64_t))(v88 + 8))(v38, v50);
  sub_1DFDF20D0();
  sub_1DFDF20A0();
  sub_1DF14E620((unint64_t *)&unk_1EAC28C70, (void (*)(uint64_t))type metadata accessor for SearchMoreModel);
  uint64_t result = sub_1DFDF5AA0();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v51 = v77;
  sub_1DFDEAD90();
  v75(v16, v76);
  v70(v20, v31);
  unsigned int v64 = v48;
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = v72;
  uint64_t v53 = v67;
  uint64_t v54 = v69;
  uint64_t v55 = v65;
  v65(v52 + v67, v48, v69);
  sub_1DF14E620((unint64_t *)&unk_1EBAA7270, MEMORY[0x1E4F7BAF0]);
  unint64_t v89 = 0x80000001DFEE3170;
  uint64_t v56 = v79;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v51, v56);
  sub_1DFDF14E0();
  unint64_t v57 = v80;
  sub_1DFDEA340();
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v72;
  v55(v58 + v53, v64, v54);
  sub_1DF14E620((unint64_t *)&qword_1EBAA71D0, MEMORY[0x1E4F7B420]);
  uint64_t v59 = v82;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v57, v59);
  sub_1DFDEAF50();
  uint64_t v60 = v83;
  sub_1DFDF20E0();
  sub_1DF14E620((unint64_t *)&unk_1EBAD22C0, MEMORY[0x1E4F7BCF8]);
  sub_1DFDE8330();
  uint64_t v61 = v85;
  uint64_t v62 = *(void (**)(unsigned char *, uint64_t))(v84 + 8);
  v62(v60, v85);
  sub_1DFDF20B0();
  sub_1DFDE8340();
  v62(v60, v61);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v71 + 8))(v94, v92);
}

void sub_1DF14E5AC()
{
  if (!qword_1EAC28C80)
  {
    sub_1DF14D950(255, (unint64_t *)&qword_1EAC24D18, MEMORY[0x1E4FAC180]);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC28C80);
    }
  }
}

uint64_t sub_1DF14E620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF14E668@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF14EF98(0, &qword_1EAC28CB8, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for SportsEventTopicTagFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF14EEE0();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_1DF14EFFC(&qword_1EBACA150, MEMORY[0x1E4F7F240]);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_1DF14EF34((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF14E914(uint64_t a1)
{
  unint64_t v2 = sub_1DF14EEE0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF14E950(uint64_t a1)
{
  unint64_t v2 = sub_1DF14EEE0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF14E98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF14E9A0);
}

uint64_t sub_1DF14E9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF14EA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF14EA20);
}

uint64_t sub_1DF14EA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SportsEventTopicTagFeedGroup()
{
  uint64_t result = qword_1EBADEE08;
  if (!qword_1EBADEE08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF14EADC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF14E668(a1, a2);
}

uint64_t sub_1DF14EAF4(void *a1)
{
  sub_1DF14EF98(0, &qword_1EAC28CC8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF14EEE0();
  sub_1DFE001A0();
  sub_1DFDF7010();
  sub_1DF14EFFC((unint64_t *)&unk_1EBACA140, MEMORY[0x1E4F7F240]);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DF14EC7C()
{
  return sub_1DF14EFFC(&qword_1EAC28C88, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
}

uint64_t sub_1DF14ECC4()
{
  return sub_1DF14EFFC(&qword_1EAC28C90, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
}

uint64_t sub_1DF14ED0C()
{
  return sub_1DF14EFFC(&qword_1EAC28C98, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
}

uint64_t sub_1DF14ED54(uint64_t a1)
{
  uint64_t result = sub_1DF14EFFC(&qword_1EAC28CA0, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DF14EDAC(void *a1)
{
  a1[1] = sub_1DF14EFFC(&qword_1EAC28CA8, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
  a1[2] = sub_1DF14EFFC(&qword_1EAC28CB0, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
  uint64_t result = sub_1DF14EFFC(&qword_1EAC30CD0, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
  a1[3] = result;
  return result;
}

uint64_t sub_1DF14EE58(uint64_t a1)
{
  uint64_t v2 = sub_1DF14EFFC(&qword_1EAC28CA8, (void (*)(uint64_t))type metadata accessor for SportsEventTopicTagFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

unint64_t sub_1DF14EEC4()
{
  return 0xD000000000000010;
}

unint64_t sub_1DF14EEE0()
{
  unint64_t result = qword_1EAC28CC0;
  if (!qword_1EAC28CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28CC0);
  }
  return result;
}

uint64_t sub_1DF14EF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsEventTopicTagFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DF14EF98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF14EEE0();
    unint64_t v7 = a3(a1, &type metadata for SportsEventTopicTagFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF14EFFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsEventTopicTagFeedGroup.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF14F0E0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEventTopicTagFeedGroup.CodingKeys()
{
  return &type metadata for SportsEventTopicTagFeedGroup.CodingKeys;
}

unint64_t sub_1DF14F11C()
{
  unint64_t result = qword_1EAC28CD0;
  if (!qword_1EAC28CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28CD0);
  }
  return result;
}

unint64_t sub_1DF14F174()
{
  unint64_t result = qword_1EAC28CD8;
  if (!qword_1EAC28CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28CD8);
  }
  return result;
}

unint64_t sub_1DF14F1CC()
{
  unint64_t result = qword_1EAC28CE0;
  if (!qword_1EAC28CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28CE0);
  }
  return result;
}

uint64_t sub_1DF14F220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for TagFeedLayoutSectionDescriptor.Header(0);
  uint64_t v81 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1DFDF94D0();
  uint64_t v9 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v11 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TagFeedLayoutSectionDescriptor.Footer(0);
  uint64_t v82 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v78 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1DFDF7FE0();
  uint64_t v68 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v84 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TagFeedLayoutSectionDescriptor.Decoration(0);
  uint64_t v83 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15 - 8);
  id v86 = (char *)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DFDF4140();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  char v20 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DFDF7010();
  uint64_t v73 = *(void *)(v21 - 8);
  uint64_t v74 = v21;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v73 + 16);
  uint64_t v75 = a1;
  v22(a3, a1);
  uint64_t v23 = *MEMORY[0x1E4FAD2B0];
  uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
  uint64_t v71 = v18 + 104;
  v70(v20, v23, v17);
  uint64_t v24 = sub_1DFDF76F0();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v25 = v18 + 8;
  long long v72 = v20;
  uint64_t v69 = v26;
  v26(v20, v17);
  int64_t v27 = *(void *)(v24 + 16);
  uint64_t v76 = a2;
  uint64_t v77 = a3;
  uint64_t v67 = v9;
  if (v27)
  {
    v65[1] = v25;
    uint64_t v66 = v17;
    uint64_t v88 = MEMORY[0x1E4FBC860];
    sub_1DEDF78A4(0, v27, 0);
    uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v28 = v9 + 16;
    uint64_t v29 = v30;
    unint64_t v31 = (*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64);
    v65[0] = v24;
    unint64_t v32 = v24 + v31;
    uint64_t v79 = *(void *)(v28 + 56);
    uint64_t v80 = v8;
    do
    {
      uint64_t v33 = v87;
      v29(v11, v32, v87);
      v29(v8, (unint64_t)v11, v33);
      (*(void (**)(char *, uint64_t))(v28 - 8))(v11, v33);
      uint64_t v34 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF78A4(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v88;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1DEDF78A4(v35 > 1, v36 + 1, 1);
        uint64_t v34 = v88;
      }
      *(void *)(v34 + 16) = v36 + 1;
      uint64_t v8 = v80;
      sub_1DF157B14((uint64_t)v80, v34+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v36, type metadata accessor for TagFeedLayoutSectionDescriptor.Header);
      v32 += v79;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    a2 = v76;
    a3 = v77;
    uint64_t v17 = v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  sub_1DED3C96C();
  uint64_t v38 = v37;
  *(void *)(a3 + *(int *)(v37 + 28)) = v34;
  uint64_t v39 = v72;
  v70(v72, *MEMORY[0x1E4FAD2A8], v17);
  uint64_t v40 = sub_1DFDF76F0();
  v69(v39, v17);
  int64_t v41 = *(void *)(v40 + 16);
  uint64_t v80 = (char *)v38;
  if (v41)
  {
    uint64_t v88 = MEMORY[0x1E4FBC860];
    sub_1DEDF785C(0, v41, 0);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v43 = *(unsigned __int8 *)(v67 + 80);
    uint64_t v79 = v40;
    uint64_t v44 = v40 + ((v43 + 32) & ~v43);
    uint64_t v81 = *(void *)(v67 + 72);
    uint64_t v45 = (void (**)(char *, uint64_t))(v67 + 8);
    uint64_t v46 = (uint64_t)v78;
    do
    {
      uint64_t v47 = v87;
      v42(v11, v44, v87);
      v42((char *)v46, (uint64_t)v11, v47);
      (*v45)(v11, v47);
      uint64_t v48 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF785C(0, *(void *)(v48 + 16) + 1, 1);
        uint64_t v46 = (uint64_t)v78;
        uint64_t v48 = v88;
      }
      unint64_t v50 = *(void *)(v48 + 16);
      unint64_t v49 = *(void *)(v48 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1DEDF785C(v49 > 1, v50 + 1, 1);
        uint64_t v46 = (uint64_t)v78;
        uint64_t v48 = v88;
      }
      *(void *)(v48 + 16) = v50 + 1;
      sub_1DF157B14(v46, v48+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v50, type metadata accessor for TagFeedLayoutSectionDescriptor.Footer);
      v44 += v81;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
    a2 = v76;
    a3 = v77;
    uint64_t v38 = (uint64_t)v80;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x1E4FBC860];
  }
  *(void *)(a3 + *(int *)(v38 + 32)) = v48;
  uint64_t v51 = sub_1DFDF76E0();
  int64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = MEMORY[0x1E4FBC860];
  if (v52)
  {
    uint64_t v88 = MEMORY[0x1E4FBC860];
    sub_1DEDF7814(0, v52, 0);
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    uint64_t v55 = *(unsigned __int8 *)(v68 + 80);
    uint64_t v82 = v51;
    uint64_t v56 = v51 + ((v55 + 32) & ~v55);
    uint64_t v87 = *(void *)(v68 + 72);
    unint64_t v57 = (void (**)(char *, uint64_t))(v68 + 8);
    uint64_t v58 = (uint64_t)v86;
    do
    {
      uint64_t v60 = v84;
      uint64_t v59 = v85;
      v54(v84, v56, v85);
      v54((char *)v58, (uint64_t)v60, v59);
      (*v57)(v60, v59);
      uint64_t v53 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF7814(0, *(void *)(v53 + 16) + 1, 1);
        uint64_t v53 = v88;
      }
      unint64_t v62 = *(void *)(v53 + 16);
      unint64_t v61 = *(void *)(v53 + 24);
      uint64_t v58 = (uint64_t)v86;
      if (v62 >= v61 >> 1)
      {
        sub_1DEDF7814(v61 > 1, v62 + 1, 1);
        uint64_t v58 = (uint64_t)v86;
        uint64_t v53 = v88;
      }
      *(void *)(v53 + 16) = v62 + 1;
      sub_1DF157B14(v58, v53+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v83 + 72) * v62, type metadata accessor for TagFeedLayoutSectionDescriptor.Decoration);
      v56 += v87;
      --v52;
    }
    while (v52);
    a2 = v76;
    a3 = v77;
    uint64_t v38 = (uint64_t)v80;
  }
  uint64_t v63 = sub_1DFDF7710();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(a2, v63);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v75, v74);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + *(int *)(v38 + 36)) = v53;
  return result;
}

uint64_t sub_1DF14FB34()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagFeedBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_1DF14FBA8()
{
  return sub_1DF14FC38(&qword_1EBAE1F30, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
}

uint64_t sub_1DF14FBF0()
{
  return sub_1DF14FC38((unint64_t *)&unk_1EBAD6830, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
}

uint64_t sub_1DF14FC38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF14FC80()
{
  return sub_1DF14FC38(&qword_1EBAD3F50, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
}

uint64_t sub_1DF14FCC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v120 = a3;
  uint64_t v117 = sub_1DFDF3330();
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117);
  uint64_t v119 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB4F6EC();
  uint64_t v153 = v8;
  uint64_t v171 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v166 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
  uint64_t v175 = v10;
  uint64_t v170 = *(void (***)(char *, uint64_t))(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v177 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v165 = (char *)&v116 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v164 = (char *)&v116 - v15;
  sub_1DF156140(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v168 = (uint64_t *)((char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v167 = (char *)&v116 - v19;
  sub_1DF156174(0, (unint64_t *)&qword_1EBAD34B0, MEMORY[0x1E4FAD830]);
  uint64_t v21 = v20;
  uint64_t v172 = *(unsigned int (***)(void, void, void))(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v169 = (char *)&v116 - v22;
  sub_1DF156278(0, &qword_1EBAF5A40, &qword_1EBAD0710, MEMORY[0x1E4FAD838], MEMORY[0x1E4FBBCF8]);
  MEMORY[0x1F4188790](v23 - 8);
  char v160 = (void (**)(char *))((char *)&v116 - v24);
  sub_1DEB4F774(0);
  uint64_t v161 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v176 = (uint64_t)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1DFDF8D40();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v163 = (char *)&v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = (void (*)(char *, uint64_t, uint64_t))sub_1DFDF8C60();
  uint64_t v159 = (void (**)(char *, uint64_t))*((void *)v162 - 1);
  MEMORY[0x1F4188790](v162);
  uint64_t v158 = (char *)&v116 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDF8C80();
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v152 = (char *)&v116 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1DFDF8CE0();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v151 = (char *)&v116 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1DFDF8D00();
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v150 = (char *)&v116 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_1DFDF8D10();
  uint64_t v147 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  uint64_t v149 = (char *)&v116 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_1DFDF2BF0();
  uint64_t v157 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154);
  uint64_t v155 = (char *)&v116 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF157B7C(0, (unint64_t *)&unk_1EBAF57C8, MEMORY[0x1E4F7FC48], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v146 = (char *)&v116 - v39;
  uint64_t v40 = sub_1DFDF8CA0();
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v140 = (char *)&v116 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1DFDF8D50();
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  uint64_t v143 = (char *)&v116 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1DFDE81B0();
  MEMORY[0x1F4188790](v43 - 8);
  uint64_t v142 = sub_1DFDE81A0();
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  uint64_t v133 = (char *)&v116 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1DFDE8170();
  uint64_t v46 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v48 = (char *)&v116 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA7A758();
  MEMORY[0x1F4188790](v49 - 8);
  uint64_t v173 = (char *)&v116 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_1DFDF98E0();
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  int64_t v52 = (char *)&v116 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = *(void *)(v4 + 16);
  uint64_t v174 = v21;
  uint64_t v134 = sub_1DFDF5960();
  uint64_t v135 = v53;
  uint64_t v137 = v52;
  sub_1DFDFEBC0();
  uint64_t v156 = a1;
  uint64_t v54 = sub_1DF934814();
  uint64_t v118 = v4;
  if ((~v54 & 0xF000000000000007) != 0)
  {
    uint64_t v56 = v54;
    type metadata accessor for TagFeedServiceConfig();
    sub_1DF14FC38(&qword_1EBAD8430, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
    unint64_t v57 = v173;
    sub_1DFDF7E80();
    sub_1DEA54378(v56);
    uint64_t v58 = sub_1DFDF9D80();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
  }
  else
  {
    uint64_t v55 = sub_1DFDF9D80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v173, 1, 1, v55);
  }
  uint64_t v59 = *MEMORY[0x1E4FAB6D8];
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
  long long v131 = v48;
  uint64_t v132 = v45;
  v60(v48, v59, v45);
  sub_1DFDF2AC0();
  sub_1DFDFF2F0();
  uint64_t v130 = v61;
  uint64_t v129 = v62;
  sub_1DFDF2AC0();
  uint64_t v128 = v63;
  uint64_t v127 = v64;
  sub_1DFDF2B00();
  uint64_t v126 = v65;
  uint64_t v125 = v66;
  sub_1DFDF2A90();
  uint64_t v124 = v67;
  uint64_t v123 = v68;
  sub_1DFDF2B10();
  uint64_t v122 = v69;
  uint64_t v121 = v70;
  sub_1DFDF2AF0();
  sub_1DFDF2AB0();
  sub_1DFDF2AE0();
  sub_1DFDF2B30();
  sub_1DFDF2AD0();
  sub_1DFDF7D50();
  sub_1DFDF7D40();
  sub_1DFDF7D30();
  swift_release();
  uint64_t v71 = v133;
  sub_1DFDE8180();
  sub_1DFDF8C90();
  long long v72 = *(void (**)(char *, uint64_t, uint64_t))(v157 + 16);
  uint64_t v130 = a2;
  v157 += 16;
  uint64_t v129 = v72;
  v72(v155, a2, v154);
  uint64_t v73 = v146;
  sub_1DFDF8CB0();
  uint64_t v74 = sub_1DFDF8CC0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 0, 1, v74);
  (*(void (**)(char *, void, uint64_t))(v147 + 104))(v149, *MEMORY[0x1E4F7FC50], v148);
  sub_1DFDF8CF0();
  sub_1DFDF8C90();
  ((void (*)(char *, void, void *))v159[13])(v158, *MEMORY[0x1E4F7FC38], v162);
  sub_1DFDF8C70();
  sub_1DFDF8D30();
  uint64_t v75 = v143;
  sub_1DFDF8D20();
  uint64_t v76 = v137;
  uint64_t v77 = (uint64_t)v173;
  uint64_t v78 = v131;
  uint64_t v152 = (char *)sub_1DFDF7770();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v75, v145);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v71, v142);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v78, v132);
  sub_1DEA9417C(v77, (uint64_t (*)(void))sub_1DEA7A758);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v76, v139);
  char v179 = 0;
  uint64_t v79 = v172;
  uint64_t v80 = (void (*)(char *, uint64_t, uint64_t))v172[2];
  uint64_t v81 = v160;
  uint64_t v82 = v174;
  uint64_t v163 = (char *)(v172 + 2);
  uint64_t v162 = v80;
  v80((char *)v160, v156, v174);
  ((unsigned int (**)(char *, void (**)(char *), uint64_t))v79)[4](v169, v81, v82);
  uint64_t v83 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAD830];
  sub_1DF156234(&qword_1EBAD0710, (unint64_t *)&qword_1EBAD34B0, MEMORY[0x1E4FAD830]);
  uint64_t v84 = v176;
  sub_1DFDFDFB0();
  uint64_t v85 = *(int *)(v161 + 36);
  *(void *)(v84 + v85) = 0;
  sub_1DF156278(0, (unint64_t *)&qword_1EBAEA7B0, (unint64_t *)&unk_1EBAD34A0, MEMORY[0x1E4FAD840], MEMORY[0x1E4FBBC18]);
  uint64_t v87 = (char *)(v84 + *(int *)(v86 + 36));
  sub_1DF156234((unint64_t *)&unk_1EBAD34A0, (unint64_t *)&qword_1EBAD34B0, v83);
  LODWORD(v151) = 0;
  char v160 = (void (**)(char *))(v170 + 2);
  uint64_t v159 = (void (**)(char *, uint64_t))(v79 + 1);
  uint64_t v88 = (char *)(v170 + 4);
  uint64_t v172 = (unsigned int (**)(void, void, void))(v171 + 7);
  v171 += 6;
  ++v170;
  uint64_t v89 = v153;
  uint64_t v90 = (uint64_t)v168;
  uint64_t v91 = v167;
  uint64_t v161 = v85;
  uint64_t v173 = v88;
  uint64_t v158 = v87;
  while (1)
  {
    uint64_t v92 = *(void *)v87;
    uint64_t v93 = v176;
    sub_1DFDFE720();
    if (v92 != v178) {
      break;
    }
    uint64_t v94 = 1;
    uint64_t v95 = v175;
    uint64_t v96 = v173;
LABEL_9:
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v172)(v90, v94, 1, v89);
    sub_1DF157B14(v90, (uint64_t)v91, (uint64_t (*)(void))sub_1DF156140);
    if ((*v171)(v91, 1, v89) == 1)
    {
      sub_1DEA9417C(v176, (uint64_t (*)(void))sub_1DEB4F774);
      v129(v155, v130, v154);
      (*(void (**)(char *, void, uint64_t))(v116 + 104))(v119, *MEMORY[0x1E4FACB00], v117);
      uint64_t v114 = v118;
      swift_retain();
      uint64_t v115 = (uint64_t)v152;
      swift_retain();
      sub_1DF1573E4(v156, v114, v115, &v179);
      swift_release();
      swift_release();
      type metadata accessor for TagFeedLayoutSectionDescriptor(0);
      type metadata accessor for TagFeedLayoutModel();
      sub_1DF14FC38(&qword_1EBAE1F38, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
      sub_1DF14FC38((unint64_t *)&unk_1EBAD6840, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
      sub_1DFDF1110();
      return swift_release();
    }
    uint64_t v109 = *(void *)v91;
    (*(void (**)(char *, char *, uint64_t))v96)(v177, &v91[*(int *)(v89 + 48)], v95);
    if (v179 == 1)
    {
      (*v170)(v177, v95);
      uint64_t v82 = v174;
    }
    else
    {
      sub_1DFDF14D0();
      int v110 = (v178 >> 58) & 0x3C | (v178 >> 1) & 3;
      if (v110 == 8)
      {
        (*v170)(v177, v175);
        swift_release();
        uint64_t v82 = v174;
      }
      else
      {
        uint64_t v82 = v174;
        if (v110)
        {
          (*v170)(v177, v175);
          swift_release();
          if (v151)
          {
            LODWORD(v151) = 1;
            char v179 = 1;
          }
          else
          {
            LODWORD(v151) = 0;
          }
        }
        else
        {
          type metadata accessor for TagFeedSectionGapDescriptor(0);
          uint64_t v111 = swift_projectBox();
          uint64_t v112 = type metadata accessor for TagFeedBlueprintCollapsedSection(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 48))(v111, 1, v112) == 1)
          {
            (*v170)(v177, v175);
            swift_release();
          }
          else
          {
            sub_1DFDFE6A0();
            sub_1DFDFE720();
            uint64_t v113 = sub_1DFDFE710();
            (*v170)(v177, v175);
            uint64_t result = swift_release();
            if (__OFSUB__(v113, 1)) {
              goto LABEL_25;
            }
            LODWORD(v151) = 1;
            if (v109 == v113 - 1) {
              char v179 = 1;
            }
          }
        }
      }
    }
  }
  uint64_t v97 = (void (*)(unint64_t *, void))sub_1DFDFE760();
  uint64_t v98 = v165;
  uint64_t v99 = v82;
  uint64_t v95 = v175;
  (*v160)(v165);
  v97(&v178, 0);
  uint64_t v100 = v169;
  v162(v169, v93, v99);
  sub_1DFDFE730();
  (*v159)(v100, v99);
  uint64_t v96 = v173;
  uint64_t v101 = *(uint64_t (**)(char *, char *, uint64_t))v173;
  uint64_t v102 = v164;
  (*(void (**)(char *, char *, uint64_t))v173)(v164, v98, v95);
  uint64_t v103 = &v166[*(int *)(v89 + 48)];
  uint64_t v104 = v89;
  uint64_t v105 = v161;
  uint64_t v106 = *(void *)(v93 + v161);
  uint64_t result = v101(v103, v102, v95);
  if (!__OFADD__(v106, 1))
  {
    *(void *)(v93 + v105) = v106 + 1;
    uint64_t v90 = (uint64_t)v168;
    uint64_t v108 = (char *)v168 + *(int *)(v104 + 48);
    void *v168 = v106;
    v101(v108, v103, v95);
    uint64_t v94 = 0;
    uint64_t v89 = v104;
    uint64_t v91 = v167;
    uint64_t v87 = v158;
    goto LABEL_9;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DF1514A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v349 = a5;
  v334 = a4;
  uint64_t v351 = a3;
  uint64_t v352 = a6;
  uint64_t v353 = a2;
  uint64_t v354 = a1;
  uint64_t v6 = type metadata accessor for SponsoredBannerTagFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v333 = (uint64_t)v281 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AffinityTagFeedGroup();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v332 = (uint64_t)v281 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v331 = (uint64_t)v281 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v330 = (uint64_t)v281 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v329 = (uint64_t)v281 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v328 = (uint64_t)v281 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v327 = (uint64_t)v281 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PuzzleListTagFeedGroup();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v326 = (uint64_t)v281 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SportsEventTopicTagFeedGroup();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v325 = (uint64_t)v281 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for SportsMastheadTagFeedGroup();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v324 = (uint64_t)v281 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v323 = (uint64_t)v281 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v321 = type metadata accessor for DateRangeTagFeedGroup();
  MEMORY[0x1F4188790](v321);
  uint64_t v322 = (uint64_t)v281 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for RecentStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v320 = (uint64_t)v281 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v318 = type metadata accessor for ForYouTagFeedGroup();
  MEMORY[0x1F4188790](v318);
  uint64_t v319 = (uint64_t)v281 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for HighlightsTagFeedGroup();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v317 = (uint64_t)v281 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v316 = (uint64_t)v281 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v315 = (uint64_t)v281 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v314 = (uint64_t)v281 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for SportsEventInfoTagFeedGroup();
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v313 = (uint64_t)v281 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v312 = (uint64_t)v281 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for SportsBracketTagFeedGroup();
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v311 = (uint64_t)v281 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for SportsStandingsTagFeedGroup();
  MEMORY[0x1F4188790](v46 - 8);
  uint64_t v310 = (uint64_t)v281 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v308 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1F4188790](v308);
  uint64_t v309 = (uint64_t)v281 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for SportsLinksTagFeedGroup();
  MEMORY[0x1F4188790](v49 - 8);
  uint64_t v307 = (uint64_t)v281 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v305 = type metadata accessor for SportsScoresTagFeedGroup();
  MEMORY[0x1F4188790](v305);
  uint64_t v306 = (uint64_t)v281 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for SportsFavoritesTagFeedGroup();
  MEMORY[0x1F4188790](v52 - 8);
  uint64_t v304 = (uint64_t)v281 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v302 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v302);
  uint64_t v303 = (uint64_t)v281 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for SportsScheduleTagFeedGroup();
  MEMORY[0x1F4188790](v55 - 8);
  uint64_t v301 = (uint64_t)v281 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v298 = type metadata accessor for SportsNavigationTagFeedGroup();
  MEMORY[0x1F4188790](v298);
  uint64_t v300 = (uint64_t)v281 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for SportsRecordTagFeedGroup();
  MEMORY[0x1F4188790](v58 - 8);
  uint64_t v297 = (uint64_t)v281 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for CuratedTagFeedGroup();
  MEMORY[0x1F4188790](v60 - 8);
  uint64_t v292 = (uint64_t)v281 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA947F4(0);
  MEMORY[0x1F4188790](v62 - 8);
  v296 = (char *)v281 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF157838();
  uint64_t v295 = v64;
  uint64_t v294 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  v293 = (char *)v281 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v291 = type metadata accessor for WeatherTagFeedGroup();
  MEMORY[0x1F4188790](v291);
  uint64_t v299 = (uint64_t)v281 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  MEMORY[0x1F4188790](v67 - 8);
  uint64_t v290 = (uint64_t)v281 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for ChannelSectionTagFeedGroup();
  MEMORY[0x1F4188790](v69 - 8);
  uint64_t v289 = (uint64_t)v281 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for PromotedArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v71 - 8);
  uint64_t v288 = (uint64_t)v281 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for ArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v73 - 8);
  uint64_t v287 = (uint64_t)v281 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB4F994();
  uint64_t v344 = v75;
  v281[0] = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  v343 = (char *)v281 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v361 = type metadata accessor for TagFeedLayoutModel();
  MEMORY[0x1F4188790](v361);
  v359 = (void *)((char *)v281 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v358 = sub_1DFDF8FD0();
  uint64_t v356 = *(void *)(v358 - 8);
  MEMORY[0x1F4188790](v358);
  v355 = (void (**)(char *))((char *)v281 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEDFF330();
  uint64_t v357 = v79;
  uint64_t v360 = *(void *)(v79 - 8);
  uint64_t v80 = MEMORY[0x1F4188790](v79);
  uint64_t v82 = (char *)v281 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = MEMORY[0x1F4188790](v80);
  uint64_t v85 = (char *)v281 - v84;
  uint64_t v86 = MEMORY[0x1F4188790](v83);
  uint64_t v88 = (char *)v281 - v87;
  uint64_t v89 = MEMORY[0x1F4188790](v86);
  v345 = (char *)v281 - v90;
  uint64_t v91 = MEMORY[0x1F4188790](v89);
  v346 = (char *)v281 - v92;
  MEMORY[0x1F4188790](v91);
  v348 = (char *)v281 - v93;
  uint64_t v341 = sub_1DFDF7710();
  uint64_t v340 = *(void *)(v341 - 8);
  uint64_t v94 = MEMORY[0x1F4188790](v341);
  uint64_t v96 = (char *)v281 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = MEMORY[0x1F4188790](v94);
  uint64_t v99 = (char *)v281 - v98;
  uint64_t v100 = MEMORY[0x1F4188790](v97);
  uint64_t v102 = (char *)v281 - v101;
  uint64_t v103 = MEMORY[0x1F4188790](v100);
  uint64_t v105 = (char *)v281 - v104;
  MEMORY[0x1F4188790](v103);
  uint64_t v107 = (char *)v281 - v106;
  uint64_t v108 = sub_1DFDF4820();
  uint64_t v342 = *(void *)(v108 - 8);
  uint64_t v109 = MEMORY[0x1F4188790](v108);
  v339 = (char *)v281 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = MEMORY[0x1F4188790](v109);
  v338 = (char *)v281 - v112;
  uint64_t v113 = MEMORY[0x1F4188790](v111);
  v337 = (char *)v281 - v114;
  uint64_t v115 = MEMORY[0x1F4188790](v113);
  v282 = (char *)v281 - v116;
  uint64_t v117 = MEMORY[0x1F4188790](v115);
  v284 = (char *)v281 - v118;
  MEMORY[0x1F4188790](v117);
  v286 = (char *)v281 - v119;
  uint64_t v347 = type metadata accessor for TagFeedLayoutSectionDescriptor(0);
  uint64_t v120 = MEMORY[0x1F4188790](v347);
  v336 = (void *)((char *)v281 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = MEMORY[0x1F4188790](v120);
  v335 = (char *)v281 - v123;
  uint64_t v124 = MEMORY[0x1F4188790](v122);
  uint64_t v126 = (void *)((char *)v281 - v125);
  uint64_t v127 = MEMORY[0x1F4188790](v124);
  v281[1] = (char *)v281 - v128;
  uint64_t v129 = MEMORY[0x1F4188790](v127);
  v283 = (char *)v281 - v130;
  MEMORY[0x1F4188790](v129);
  v285 = (char *)v281 - v131;
  uint64_t v132 = type metadata accessor for TagFeedSectionGapDescriptor(0);
  uint64_t v133 = MEMORY[0x1F4188790](v132 - 8);
  MEMORY[0x1F4188790](v133);
  switch((v136 >> 58) & 0x3C | (v136 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v153 = swift_projectBox();
      uint64_t v154 = v287;
      sub_1DF157AAC(v153, v287, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for ArticleListTagFeedGroup;
      goto LABEL_75;
    case 2uLL:
      uint64_t v156 = swift_projectBox();
      uint64_t v154 = v288;
      sub_1DF157AAC(v156, v288, (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for PromotedArticleListTagFeedGroup;
      goto LABEL_75;
    case 3uLL:
      uint64_t v157 = swift_projectBox();
      uint64_t v158 = v299;
      sub_1DF157AAC(v157, v299, (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
      uint64_t v159 = v158 + *(int *)(v291 + 20);
      sub_1DF157B7C(0, (unint64_t *)&unk_1EBABE120, MEMORY[0x1E4F80640], MEMORY[0x1E4FBBE00]);
      uint64_t v160 = sub_1DFDFA290();
      uint64_t v161 = *(void *)(v160 - 8);
      unint64_t v162 = (*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
      uint64_t v163 = swift_allocObject();
      *(_OWORD *)(v163 + 16) = xmmword_1DFE0B250;
      unint64_t v164 = v163 + v162;
      uint64_t v165 = sub_1DFDF9EE0();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v165 - 8) + 16))(v164, v158, v165);
      (*(void (**)(unint64_t, void, uint64_t))(v161 + 104))(v164, *MEMORY[0x1E4F80638], v160);
      uint64_t v166 = sub_1DF3BFC6C(v163);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_1DF154D64(v351, v159, v166, v349, v352);
      swift_bridgeObjectRelease();
      uint64_t v167 = (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup;
      uint64_t v168 = v158;
      return sub_1DEA9417C(v168, v167);
    case 4uLL:
      uint64_t v169 = MEMORY[0x1E4FBC860];
      void *v126 = MEMORY[0x1E4FBC860];
      v126[1] = v169;
      v126[2] = v169;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t))(v342 + 104))(v337, *MEMORY[0x1E4FAD568], v108);
      sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
      sub_1DF157894();
      long long v363 = 0u;
      long long v364 = 0u;
      uint64_t v365 = 0;
      sub_1DFDF7750();
      sub_1DEA9417C((uint64_t)&v363, (uint64_t (*)(void))sub_1DEA94828);
      uint64_t v170 = sub_1DFDF76A0();
      (*(void (**)(char *, uint64_t))(v340 + 8))(v102, v341);
      int64_t v171 = *(void *)(v170 + 16);
      if (v171)
      {
        *(void *)&long long v363 = v169;
        sub_1DEDF6C8C(0, v171, 0);
        uint64_t v172 = v355;
        uint64_t v173 = *(void (**)(void (**)(char *), unint64_t, uint64_t))(v356 + 16);
        unint64_t v174 = (*(unsigned __int8 *)(v356 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v356 + 80);
        uint64_t v351 = v170;
        unint64_t v175 = v170 + v174;
        uint64_t v176 = *(void *)(v356 + 72);
        v356 += 16;
        uint64_t v177 = (void (**)(void (**)(char *), uint64_t))(v356 - 8);
        uint64_t v353 = v360 + 32;
        uint64_t v354 = v176;
        do
        {
          uint64_t v178 = v358;
          v173(v172, v175, v358);
          v173((void (**)(char *))v359, (unint64_t)v172, v178);
          sub_1DF14FC38((unint64_t *)&unk_1EBAD6830, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
          sub_1DFDF2110();
          (*v177)(v172, v178);
          uint64_t v179 = v363;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DEDF6C8C(0, *(void *)(v179 + 16) + 1, 1);
            uint64_t v179 = v363;
          }
          unint64_t v181 = *(void *)(v179 + 16);
          unint64_t v180 = *(void *)(v179 + 24);
          if (v181 >= v180 >> 1)
          {
            sub_1DEDF6C8C(v180 > 1, v181 + 1, 1);
            uint64_t v179 = v363;
          }
          *(void *)(v179 + 16) = v181 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v360 + 32))(v179+ ((*(unsigned __int8 *)(v360 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80))+ *(void *)(v360 + 72) * v181, v88, v357);
          *(void *)&long long v363 = v179;
          v175 += v354;
          --v171;
        }
        while (v171);
      }
      goto LABEL_91;
    case 5uLL:
      uint64_t v182 = swift_projectBox();
      uint64_t v154 = v289;
      sub_1DF157AAC(v182, v289, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for ChannelSectionTagFeedGroup;
      goto LABEL_75;
    case 6uLL:
      uint64_t v183 = swift_projectBox();
      uint64_t v154 = v290;
      sub_1DF157AAC(v183, v290, (uint64_t (*)(void))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup;
      goto LABEL_75;
    case 7uLL:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t))(v342 + 104))(v338, *MEMORY[0x1E4FAD568], v108);
      sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
      sub_1DF157894();
      long long v363 = 0u;
      long long v364 = 0u;
      uint64_t v365 = 0;
      sub_1DFDF7750();
      sub_1DEA9417C((uint64_t)&v363, (uint64_t (*)(void))sub_1DEA94828);
      uint64_t v184 = sub_1DFDF76A0();
      (*(void (**)(char *, uint64_t))(v340 + 8))(v99, v341);
      int64_t v185 = *(void *)(v184 + 16);
      if (v185)
      {
        *(void *)&long long v363 = MEMORY[0x1E4FBC860];
        sub_1DEDF6C8C(0, v185, 0);
        uint64_t v186 = v355;
        long long v187 = *(void (**)(void (**)(char *), unint64_t, uint64_t))(v356 + 16);
        unint64_t v188 = v184 + ((*(unsigned __int8 *)(v356 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v356 + 80));
        uint64_t v189 = *(void *)(v356 + 72);
        uint64_t v353 = v184;
        uint64_t v354 = v189;
        v356 += 16;
        long long v190 = (void (**)(void (**)(char *), uint64_t))(v356 - 8);
        do
        {
          uint64_t v191 = v358;
          v187(v186, v188, v358);
          v187((void (**)(char *))v359, (unint64_t)v186, v191);
          sub_1DF14FC38((unint64_t *)&unk_1EBAD6830, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
          sub_1DFDF2110();
          (*v190)(v186, v191);
          uint64_t v192 = v363;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DEDF6C8C(0, *(void *)(v192 + 16) + 1, 1);
            uint64_t v192 = v363;
          }
          unint64_t v194 = *(void *)(v192 + 16);
          unint64_t v193 = *(void *)(v192 + 24);
          if (v194 >= v193 >> 1)
          {
            sub_1DEDF6C8C(v193 > 1, v194 + 1, 1);
            uint64_t v192 = v363;
          }
          *(void *)(v192 + 16) = v194 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v360 + 32))(v192+ ((*(unsigned __int8 *)(v360 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80))+ *(void *)(v360 + 72) * v194, v85, v357);
          *(void *)&long long v363 = v192;
          v188 += v354;
          --v185;
        }
        while (v185);
      }
      goto LABEL_91;
    case 8uLL:
      uint64_t v195 = MEMORY[0x1E4FBC860];
      uint64_t v196 = v336;
      void *v336 = MEMORY[0x1E4FBC860];
      v196[1] = v195;
      v196[2] = v195;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t))(v342 + 104))(v339, *MEMORY[0x1E4FAD568], v108);
      sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
      sub_1DF157894();
      long long v363 = 0u;
      long long v364 = 0u;
      uint64_t v365 = 0;
      sub_1DFDF7750();
      sub_1DEA9417C((uint64_t)&v363, (uint64_t (*)(void))sub_1DEA94828);
      uint64_t v197 = sub_1DFDF76A0();
      (*(void (**)(char *, uint64_t))(v340 + 8))(v96, v341);
      int64_t v198 = *(void *)(v197 + 16);
      if (v198)
      {
        *(void *)&long long v363 = v195;
        sub_1DEDF6C8C(0, v198, 0);
        v199 = v355;
        uint64_t v200 = *(void (**)(void (**)(char *), unint64_t, uint64_t))(v356 + 16);
        unint64_t v201 = v197 + ((*(unsigned __int8 *)(v356 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v356 + 80));
        uint64_t v202 = *(void *)(v356 + 72);
        uint64_t v353 = v197;
        uint64_t v354 = v202;
        v356 += 16;
        v203 = (void (**)(void (**)(char *), uint64_t))(v356 - 8);
        do
        {
          uint64_t v204 = v358;
          v200(v199, v201, v358);
          v200((void (**)(char *))v359, (unint64_t)v199, v204);
          sub_1DF14FC38((unint64_t *)&unk_1EBAD6830, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
          sub_1DFDF2110();
          (*v203)(v199, v204);
          uint64_t v205 = v363;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DEDF6C8C(0, *(void *)(v205 + 16) + 1, 1);
            uint64_t v205 = v363;
          }
          unint64_t v207 = *(void *)(v205 + 16);
          unint64_t v206 = *(void *)(v205 + 24);
          if (v207 >= v206 >> 1)
          {
            sub_1DEDF6C8C(v206 > 1, v207 + 1, 1);
            uint64_t v205 = v363;
          }
          *(void *)(v205 + 16) = v207 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v360 + 32))(v205+ ((*(unsigned __int8 *)(v360 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80))+ *(void *)(v360 + 72) * v207, v82, v357);
          *(void *)&long long v363 = v205;
          v201 += v354;
          --v198;
        }
        while (v198);
      }
LABEL_91:
      swift_bridgeObjectRelease();
      sub_1DF14FC38(&qword_1EBAE1F38, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
      sub_1DF14FC38((unint64_t *)&unk_1EBAD6840, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
      return sub_1DFDF2C30();
    case 9uLL:
      uint64_t v208 = swift_projectBox();
      uint64_t v209 = v294;
      v210 = v293;
      uint64_t v211 = v295;
      (*(void (**)(char *, uint64_t, uint64_t))(v294 + 16))(v293, v208, v295);
      sub_1DFDF7B10();
      uint64_t v212 = v363;
      uint64_t v213 = (uint64_t)v296;
      sub_1DFDF7B20();
      uint64_t v214 = sub_1DFDF8130();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v214 - 8) + 56))(v213, 0, 1, v214);
      sub_1DF1514A0(v354, v212, v351, v334, v213);
      swift_release();
      sub_1DEA9417C(v213, (uint64_t (*)(void))sub_1DEA947F4);
      return (*(uint64_t (**)(char *, uint64_t))(v209 + 8))(v210, v211);
    case 0xAuLL:
      uint64_t v216 = swift_projectBox();
      uint64_t v154 = v292;
      sub_1DF157AAC(v216, v292, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for CuratedTagFeedGroup;
      goto LABEL_75;
    case 0xBuLL:
      uint64_t v217 = swift_projectBox();
      uint64_t v154 = v297;
      sub_1DF157AAC(v217, v297, (uint64_t (*)(void))type metadata accessor for SportsRecordTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsRecordTagFeedGroup;
      goto LABEL_75;
    case 0xCuLL:
      uint64_t v218 = swift_projectBox();
      uint64_t v154 = v300;
      sub_1DF157AAC(v218, v300, (uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
      sub_1DF154D64(v351, v154 + *(int *)(v298 + 20), MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsNavigationTagFeedGroup;
      goto LABEL_75;
    case 0xDuLL:
      uint64_t v219 = swift_projectBox();
      uint64_t v154 = v301;
      sub_1DF157AAC(v219, v301, (uint64_t (*)(void))type metadata accessor for SportsScheduleTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsScheduleTagFeedGroup;
      goto LABEL_75;
    case 0xEuLL:
      uint64_t v220 = swift_projectBox();
      uint64_t v154 = v303;
      sub_1DF157AAC(v220, v303, (uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
      sub_1DF154D64(v351, v154 + *(int *)(v302 + 20), MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsTopStoriesTagFeedGroup;
      goto LABEL_75;
    case 0xFuLL:
      uint64_t v221 = swift_projectBox();
      uint64_t v154 = v304;
      sub_1DF157AAC(v221, v304, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsFavoritesTagFeedGroup;
      goto LABEL_75;
    case 0x10uLL:
      uint64_t v222 = swift_projectBox();
      uint64_t v154 = v306;
      sub_1DF157AAC(v222, v306, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
      sub_1DF154D64(v351, v154 + *(int *)(v305 + 20), MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsScoresTagFeedGroup;
      goto LABEL_75;
    case 0x11uLL:
      uint64_t v223 = swift_projectBox();
      uint64_t v154 = v307;
      sub_1DF157AAC(v223, v307, (uint64_t (*)(void))type metadata accessor for SportsLinksTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsLinksTagFeedGroup;
      goto LABEL_75;
    case 0x12uLL:
      uint64_t v224 = swift_projectBox();
      uint64_t v154 = v309;
      sub_1DF157AAC(v224, v309, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      sub_1DF154D64(v351, v154 + *(int *)(v308 + 20), MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for MySportsTopicTagFeedGroup;
      goto LABEL_75;
    case 0x13uLL:
      uint64_t v225 = swift_projectBox();
      uint64_t v154 = v310;
      sub_1DF157AAC(v225, v310, (uint64_t (*)(void))type metadata accessor for SportsStandingsTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsStandingsTagFeedGroup;
      goto LABEL_75;
    case 0x14uLL:
      uint64_t v226 = swift_projectBox();
      uint64_t v154 = v311;
      sub_1DF157AAC(v226, v311, (uint64_t (*)(void))type metadata accessor for SportsBracketTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsBracketTagFeedGroup;
      goto LABEL_75;
    case 0x15uLL:
      uint64_t v227 = swift_projectBox();
      uint64_t v154 = v312;
      sub_1DF157AAC(v227, v312, (uint64_t (*)(void))type metadata accessor for SportsBoxScoresTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsBoxScoresTagFeedGroup;
      goto LABEL_75;
    case 0x16uLL:
      uint64_t v228 = swift_projectBox();
      uint64_t v154 = v313;
      sub_1DF157AAC(v228, v313, (uint64_t (*)(void))type metadata accessor for SportsEventInfoTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsEventInfoTagFeedGroup;
      goto LABEL_75;
    case 0x17uLL:
      uint64_t v229 = swift_projectBox();
      uint64_t v154 = v314;
      sub_1DF157AAC(v229, v314, (uint64_t (*)(void))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsInjuryReportsTagFeedGroup;
      goto LABEL_75;
    case 0x18uLL:
      uint64_t v230 = swift_projectBox();
      uint64_t v154 = v315;
      sub_1DF157AAC(v230, v315, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsKeyPlayersTagFeedGroup;
      goto LABEL_75;
    case 0x19uLL:
      uint64_t v231 = swift_projectBox();
      uint64_t v154 = v316;
      sub_1DF157AAC(v231, v316, (uint64_t (*)(void))type metadata accessor for SportsEventArticlesTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsEventArticlesTagFeedGroup;
      goto LABEL_75;
    case 0x1AuLL:
      uint64_t v232 = swift_projectBox();
      uint64_t v154 = v317;
      sub_1DF157AAC(v232, v317, (uint64_t (*)(void))type metadata accessor for HighlightsTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for HighlightsTagFeedGroup;
      goto LABEL_75;
    case 0x1BuLL:
      uint64_t v233 = swift_projectBox();
      uint64_t v154 = v319;
      sub_1DF157AAC(v233, v319, (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
      sub_1DF154D64(v351, v154 + *(int *)(v318 + 20), MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for ForYouTagFeedGroup;
      goto LABEL_75;
    case 0x1CuLL:
      uint64_t v234 = swift_projectBox();
      uint64_t v154 = v320;
      sub_1DF157AAC(v234, v320, (uint64_t (*)(void))type metadata accessor for RecentStoriesTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for RecentStoriesTagFeedGroup;
      goto LABEL_75;
    case 0x1DuLL:
      uint64_t v235 = swift_projectBox();
      uint64_t v154 = v322;
      sub_1DF157AAC(v235, v322, (uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
      sub_1DF154D64(v351, v154 + *(int *)(v321 + 20), MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for DateRangeTagFeedGroup;
      goto LABEL_75;
    case 0x1EuLL:
      uint64_t v236 = swift_projectBox();
      uint64_t v154 = v323;
      sub_1DF157AAC(v236, v323, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsOnboardingTagFeedGroup;
      goto LABEL_75;
    case 0x1FuLL:
      uint64_t v237 = swift_projectBox();
      uint64_t v154 = v324;
      sub_1DF157AAC(v237, v324, (uint64_t (*)(void))type metadata accessor for SportsMastheadTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsMastheadTagFeedGroup;
      goto LABEL_75;
    case 0x20uLL:
      uint64_t v238 = swift_projectBox();
      uint64_t v154 = v325;
      sub_1DF157AAC(v238, v325, (uint64_t (*)(void))type metadata accessor for SportsEventTopicTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SportsEventTopicTagFeedGroup;
      goto LABEL_75;
    case 0x21uLL:
      uint64_t v239 = swift_projectBox();
      uint64_t v154 = v326;
      sub_1DF157AAC(v239, v326, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for PuzzleListTagFeedGroup;
      goto LABEL_75;
    case 0x22uLL:
      uint64_t v240 = swift_projectBox();
      uint64_t v154 = v327;
      sub_1DF157AAC(v240, v327, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for PuzzleArchiveTagFeedGroup;
      goto LABEL_75;
    case 0x23uLL:
      uint64_t v241 = swift_projectBox();
      uint64_t v242 = v328;
      sub_1DF157AAC(v241, v328, (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      uint64_t v243 = v354;
      if (sub_1DF156330()) {
        sub_1DF1554C4(v243, v352);
      }
      else {
        sub_1DF154D64(v351, v242, MEMORY[0x1E4FBC870], v349, v352);
      }
      uint64_t v244 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup;
      goto LABEL_90;
    case 0x24uLL:
      uint64_t v245 = swift_projectBox();
      uint64_t v154 = v329;
      sub_1DF157AAC(v245, v329, (uint64_t (*)(void))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for PuzzleFeaturedTagFeedGroup;
      goto LABEL_75;
    case 0x25uLL:
      uint64_t v246 = swift_projectBox();
      uint64_t v154 = v330;
      sub_1DF157AAC(v246, v330, (uint64_t (*)(void))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for PuzzleFullArchiveTagFeedGroup;
      goto LABEL_75;
    case 0x26uLL:
      uint64_t v247 = swift_projectBox();
      uint64_t v242 = v331;
      sub_1DF157AAC(v247, v331, (uint64_t (*)(void))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      uint64_t v248 = v354;
      if (sub_1DF1564FC()) {
        sub_1DF154D64(v351, v242, MEMORY[0x1E4FBC870], v349, v352);
      }
      else {
        sub_1DF1554C4(v248, v352);
      }
      uint64_t v244 = type metadata accessor for PuzzleScoreboardTagFeedGroup;
LABEL_90:
      uint64_t v167 = (uint64_t (*)(void))v244;
      uint64_t v168 = v242;
      return sub_1DEA9417C(v168, v167);
    case 0x27uLL:
      uint64_t v249 = swift_projectBox();
      uint64_t v154 = v332;
      sub_1DF157AAC(v249, v332, (uint64_t (*)(void))type metadata accessor for AffinityTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for AffinityTagFeedGroup;
      goto LABEL_75;
    case 0x28uLL:
      uint64_t v250 = swift_projectBox();
      uint64_t v154 = v333;
      sub_1DF157AAC(v250, v333, (uint64_t (*)(void))type metadata accessor for SponsoredBannerTagFeedGroup);
      sub_1DF154D64(v351, v154, MEMORY[0x1E4FBC870], v349, v352);
      uint64_t v155 = type metadata accessor for SponsoredBannerTagFeedGroup;
LABEL_75:
      uint64_t v167 = (uint64_t (*)(void))v155;
      uint64_t v168 = v154;
      break;
    default:
      uint64_t v137 = (char *)v281 - v134;
      uint64_t v138 = v135;
      uint64_t v139 = swift_projectBox();
      sub_1DF157AAC(v139, (uint64_t)v137, type metadata accessor for TagFeedSectionGapDescriptor);
      v350 = v137;
      sub_1DF157AAC((uint64_t)v137, v138, type metadata accessor for TagFeedSectionGapDescriptor);
      uint64_t v140 = type metadata accessor for TagFeedBlueprintCollapsedSection(0);
      uint64_t v141 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 48);
      uint64_t v349 = v138;
      if (v141(v138, 1, v140) == 1)
      {
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t))(v342 + 104))(v286, *MEMORY[0x1E4FAD568], v108);
        sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
        sub_1DF157894();
        long long v363 = 0u;
        long long v364 = 0u;
        uint64_t v365 = 0;
        sub_1DFDF7750();
        sub_1DEA9417C((uint64_t)&v363, (uint64_t (*)(void))sub_1DEA94828);
        uint64_t v142 = sub_1DFDF76A0();
        (*(void (**)(char *, uint64_t))(v340 + 8))(v107, v341);
        int64_t v143 = *(void *)(v142 + 16);
        if (v143)
        {
          *(void *)&long long v363 = MEMORY[0x1E4FBC860];
          sub_1DEDF6C8C(0, v143, 0);
          uint64_t v144 = v355;
          uint64_t v145 = *(void (**)(void (**)(char *), unint64_t, uint64_t))(v356 + 16);
          unint64_t v146 = v142 + ((*(unsigned __int8 *)(v356 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v356 + 80));
          uint64_t v147 = *(void *)(v356 + 72);
          uint64_t v353 = v142;
          uint64_t v354 = v147;
          v356 += 16;
          uint64_t v148 = (void (**)(void (**)(char *), uint64_t))(v356 - 8);
          do
          {
            uint64_t v149 = v358;
            v145(v144, v146, v358);
            v145((void (**)(char *))v359, (unint64_t)v144, v149);
            sub_1DF14FC38((unint64_t *)&unk_1EBAD6830, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
            sub_1DFDF2110();
            (*v148)(v144, v149);
            uint64_t v150 = v363;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1DEDF6C8C(0, *(void *)(v150 + 16) + 1, 1);
              uint64_t v150 = v363;
            }
            unint64_t v152 = *(void *)(v150 + 16);
            unint64_t v151 = *(void *)(v150 + 24);
            if (v152 >= v151 >> 1)
            {
              sub_1DEDF6C8C(v151 > 1, v152 + 1, 1);
              uint64_t v150 = v363;
            }
            *(void *)(v150 + 16) = v152 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v360 + 32))(v150+ ((*(unsigned __int8 *)(v360 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80))+ *(void *)(v360 + 72) * v152, v348, v357);
            *(void *)&long long v363 = v150;
            v146 += v354;
            --v143;
          }
          while (v143);
        }
        swift_bridgeObjectRelease();
        sub_1DF14FC38(&qword_1EBAE1F38, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
        sub_1DF14FC38((unint64_t *)&unk_1EBAD6840, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
        sub_1DFDF2C30();
        uint64_t v167 = type metadata accessor for TagFeedSectionGapDescriptor;
        uint64_t v168 = (uint64_t)v350;
      }
      else
      {
        if (*v334 == 1)
        {
          unsigned char *v334 = 0;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t))(v342 + 104))(v284, *MEMORY[0x1E4FAD568], v108);
          sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
          sub_1DF157894();
          long long v363 = 0u;
          long long v364 = 0u;
          uint64_t v365 = 0;
          sub_1DFDF7750();
          sub_1DEA9417C((uint64_t)&v363, (uint64_t (*)(void))sub_1DEA94828);
          uint64_t v251 = sub_1DFDF76A0();
          (*(void (**)(char *, uint64_t))(v340 + 8))(v105, v341);
          int64_t v252 = *(void *)(v251 + 16);
          if (v252)
          {
            *(void *)&long long v363 = MEMORY[0x1E4FBC860];
            sub_1DEDF6C8C(0, v252, 0);
            uint64_t v253 = v355;
            uint64_t v254 = *(void (**)(void (**)(char *), unint64_t, uint64_t))(v356 + 16);
            unint64_t v255 = v251
                 + ((*(unsigned __int8 *)(v356 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v356 + 80));
            uint64_t v256 = *(void *)(v356 + 72);
            uint64_t v353 = v251;
            uint64_t v354 = v256;
            v356 += 16;
            uint64_t v257 = (void (**)(void (**)(char *), uint64_t))(v356 - 8);
            do
            {
              uint64_t v258 = v358;
              v254(v253, v255, v358);
              v254((void (**)(char *))v359, (unint64_t)v253, v258);
              sub_1DF14FC38((unint64_t *)&unk_1EBAD6830, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
              sub_1DFDF2110();
              (*v257)(v253, v258);
              uint64_t v259 = v363;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1DEDF6C8C(0, *(void *)(v259 + 16) + 1, 1);
                uint64_t v259 = v363;
              }
              unint64_t v261 = *(void *)(v259 + 16);
              unint64_t v260 = *(void *)(v259 + 24);
              if (v261 >= v260 >> 1)
              {
                sub_1DEDF6C8C(v260 > 1, v261 + 1, 1);
                uint64_t v259 = v363;
              }
              *(void *)(v259 + 16) = v261 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v360 + 32))(v259+ ((*(unsigned __int8 *)(v360 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80))+ *(void *)(v360 + 72) * v261, v346, v357);
              *(void *)&long long v363 = v259;
              v255 += v354;
              --v252;
            }
            while (v252);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t))(v342 + 104))(v282, *MEMORY[0x1E4FAD568], v108);
          uint64_t v262 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC180];
          sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
          uint64_t v264 = v263;
          sub_1DF156234((unint64_t *)&unk_1EBAD2F50, (unint64_t *)&qword_1EBAD2F60, v262);
          uint64_t v265 = sub_1DFDFE6F0();
          if (v265)
          {
            uint64_t v266 = v265;
            uint64_t v362 = MEMORY[0x1E4FBC860];
            sub_1DEDF6C8C(0, v265 & ~(v265 >> 63), 0);
            sub_1DFDFE6A0();
            if (v266 < 0)
            {
              __break(1u);
              JUMPOUT(0x1DF154CC0);
            }
            v355 = (void (**)(char *))(v281[0] + 16);
            LODWORD(v353) = *MEMORY[0x1E4F7FDF8];
            v267 = (void (**)(uint64_t *, void, uint64_t))(v356 + 104);
            v268 = (void (**)(char *, uint64_t))(v281[0] + 8);
            uint64_t v356 = v360 + 32;
            do
            {
              uint64_t v269 = v264;
              v270 = (void (*)(long long *, void))sub_1DFDFE760();
              v271 = v343;
              uint64_t v272 = v344;
              (*v355)(v343);
              v270(&v363, 0);
              uint64_t v273 = swift_allocObject();
              *(void *)(v273 + 16) = sub_1DFDF0B10();
              *(void *)(v273 + 24) = v274;
              uint64_t v275 = v358;
              v276 = v359;
              uint64_t *v359 = v273;
              (*v267)(v276, v353, v275);
              sub_1DF14FC38((unint64_t *)&unk_1EBAD6830, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
              sub_1DFDF2110();
              (*v268)(v271, v272);
              uint64_t v277 = v362;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1DEDF6C8C(0, *(void *)(v277 + 16) + 1, 1);
                uint64_t v277 = v362;
              }
              unint64_t v279 = *(void *)(v277 + 16);
              unint64_t v278 = *(void *)(v277 + 24);
              v280 = v345;
              if (v279 >= v278 >> 1)
              {
                sub_1DEDF6C8C(v278 > 1, v279 + 1, 1);
                v280 = v345;
                uint64_t v277 = v362;
              }
              *(void *)(v277 + 16) = v279 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v360 + 32))(v277+ ((*(unsigned __int8 *)(v360 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80))+ *(void *)(v360 + 72) * v279, v280, v357);
              uint64_t v362 = v277;
              uint64_t v264 = v269;
              sub_1DFDFE730();
              --v266;
            }
            while (v266);
          }
        }
        sub_1DF14FC38(&qword_1EBAE1F38, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
        sub_1DF14FC38((unint64_t *)&unk_1EBAD6840, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
        sub_1DFDF2C30();
        sub_1DEA9417C((uint64_t)v350, type metadata accessor for TagFeedSectionGapDescriptor);
        uint64_t v168 = v349;
        uint64_t v167 = type metadata accessor for TagFeedSectionGapDescriptor;
      }
      break;
  }
  return sub_1DEA9417C(v168, v167);
}

uint64_t sub_1DF154D64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v47 = a1;
  uint64_t v48 = (char *)a3;
  uint64_t v49 = a5;
  uint64_t v58 = type metadata accessor for TagFeedLayoutModel();
  MEMORY[0x1F4188790](v58);
  uint64_t v56 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDF8FD0();
  uint64_t v59 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEDFF330();
  uint64_t v55 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDF4820();
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v45 = (char *)v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v52 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for TagFeedLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v51);
  uint64_t v50 = (uint64_t)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1DFDF7010();
  uint64_t v43 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v42 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DED3C96C();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DFDF7710();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v42 - v25;
  sub_1DF155AFC(v47, a2, (uint64_t)v48, v53, (uint64_t)&v42 - v25);
  uint64_t v27 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, a2, v46);
  uint64_t v46 = v21;
  uint64_t v47 = v20;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v26, v20);
  sub_1DF14F220(v27, (uint64_t)v24, (uint64_t)v19);
  uint64_t v48 = v19;
  sub_1DF157AAC((uint64_t)v19, v50, (uint64_t (*)(void))sub_1DED3C96C);
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = *MEMORY[0x1E4FAD538];
  uint64_t v29 = sub_1DFDF4800();
  uint64_t v30 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v52, v28, v29);
  (*(void (**)(char *, void, char *))(v44 + 104))(v30, *MEMORY[0x1E4FAD540], v45);
  uint64_t v45 = v26;
  uint64_t v31 = sub_1DFDF76A0();
  int64_t v32 = *(void *)(v31 + 16);
  if (v32)
  {
    uint64_t v60 = MEMORY[0x1E4FBC860];
    sub_1DEDF6C8C(0, v32, 0);
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
    unint64_t v34 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    uint64_t v44 = v31;
    unint64_t v35 = v31 + v34;
    uint64_t v36 = *(void *)(v59 + 72);
    v59 += 16;
    uint64_t v37 = (void (**)(char *, uint64_t))(v59 - 8);
    uint64_t v53 = v11 + 32;
    uint64_t v54 = v36;
    do
    {
      v33(v9, v35, v7);
      v33(v56, (unint64_t)v9, v7);
      sub_1DF14FC38((unint64_t *)&unk_1EBAD6830, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
      sub_1DFDF2110();
      (*v37)(v9, v7);
      uint64_t v38 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF6C8C(0, *(void *)(v38 + 16) + 1, 1);
        uint64_t v38 = v60;
      }
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v39 = *(void *)(v38 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1DEDF6C8C(v39 > 1, v40 + 1, 1);
        uint64_t v38 = v60;
      }
      *(void *)(v38 + 16) = v40 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v38+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v40, v57, v55);
      uint64_t v60 = v38;
      v35 += v54;
      --v32;
    }
    while (v32);
  }
  swift_bridgeObjectRelease();
  sub_1DF14FC38(&qword_1EBAE1F38, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
  sub_1DF14FC38((unint64_t *)&unk_1EBAD6840, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
  sub_1DFDF2C30();
  sub_1DEA9417C((uint64_t)v48, (uint64_t (*)(void))sub_1DED3C96C);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v45, v47);
}

uint64_t sub_1DF1554C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = type metadata accessor for TagFeedLayoutModel();
  MEMORY[0x1F4188790](v51);
  uint64_t v48 = (void *)((char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEB4F994();
  uint64_t v47 = v5;
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEDFF330();
  uint64_t v46 = v7;
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF4820();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TagFeedLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v14);
  v41[2] = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[3] = v16;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = *MEMORY[0x1E4FAD538];
  uint64_t v18 = sub_1DFDF4800();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v13, v17, v18);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FAD540], v10);
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC180];
  sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1DF156234((unint64_t *)&unk_1EBAD2F50, (unint64_t *)&qword_1EBAD2F60, v19);
  uint64_t v23 = sub_1DFDFE6F0();
  if (!v23)
  {
LABEL_9:
    sub_1DF14FC38(&qword_1EBAE1F38, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutSectionDescriptor);
    sub_1DF14FC38((unint64_t *)&unk_1EBAD6840, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
    return sub_1DFDF2C30();
  }
  uint64_t v24 = v23;
  uint64_t v25 = a2;
  uint64_t v53 = MEMORY[0x1E4FBC860];
  sub_1DEDF6C8C(0, v23 & ~(v23 >> 63), 0);
  uint64_t v49 = v22;
  uint64_t result = sub_1DFDFE6A0();
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = v21;
    v41[0] = v13;
    v41[1] = v25;
    uint64_t v28 = (void (**)(char *))(v44 + 16);
    unsigned int v42 = *MEMORY[0x1E4F7FDF8];
    uint64_t v29 = (void (**)(char *, uint64_t))(v44 + 8);
    v41[4] = v50 + 32;
    uint64_t v43 = v9;
    uint64_t v44 = a1;
    do
    {
      uint64_t v30 = v27;
      uint64_t v31 = (void (*)(char *, void))sub_1DFDFE760();
      int64_t v32 = v45;
      uint64_t v33 = v47;
      (*v28)(v45);
      v31(v52, 0);
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = sub_1DFDF0B10();
      *(void *)(v34 + 24) = v35;
      uint64_t v36 = v48;
      *uint64_t v48 = v34;
      uint64_t v37 = sub_1DFDF8FD0();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v36, v42, v37);
      sub_1DF14FC38((unint64_t *)&unk_1EBAD6830, (void (*)(uint64_t))type metadata accessor for TagFeedLayoutModel);
      sub_1DFDF2110();
      (*v29)(v32, v33);
      uint64_t v38 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF6C8C(0, *(void *)(v38 + 16) + 1, 1);
        uint64_t v38 = v53;
      }
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v39 = *(void *)(v38 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1DEDF6C8C(v39 > 1, v40 + 1, 1);
        uint64_t v38 = v53;
      }
      *(void *)(v38 + 16) = v40 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v38+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v40, v43, v46);
      uint64_t v53 = v38;
      uint64_t v27 = v30;
      sub_1DFDFE730();
      --v24;
    }
    while (v24);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF155AFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v39 = a4;
  uint64_t v40 = a3;
  uint64_t v45 = a5;
  uint64_t v46 = a1;
  sub_1DF157B7C(0, (unint64_t *)&unk_1EBAD2098, MEMORY[0x1E4FAB878], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v44 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v43 = (char *)&v37 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unsigned int v42 = (char *)&v37 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v41 = (char *)&v37 - v15;
  uint64_t v16 = sub_1DFDF7010();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA9485C(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA94890(0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1DFDFA9F0();
  uint64_t v26 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v28 = (char *)&v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF6FB0();
  uint64_t v29 = sub_1DFDF7210();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v25, 1, 1, v29);
  uint64_t v37 = *(void *)(v6 + 72);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, v16);
  sub_1DFDF8BB0();
  uint64_t v30 = sub_1DFDF8BC0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v22, 0, 1, v30);
  sub_1DFDF6FD0();
  sub_1DF276B54();
  sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
  sub_1DF157958();
  sub_1DF14FC38(&qword_1EBAD3F10, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
  sub_1DFDF1590();
  swift_bridgeObjectRelease();
  sub_1DEA9417C((uint64_t)v22, (uint64_t (*)(void))sub_1DEA9485C);
  sub_1DEA9417C((uint64_t)v25, (uint64_t (*)(void))sub_1DEA94890);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v32 = v38;
  v31(v28, v38);
  sub_1DFDF6FB0();
  uint64_t v33 = sub_1DFDFD080();
  v31(v28, v32);
  v47[3] = sub_1DFDFC300();
  v47[4] = MEMORY[0x1E4F81368];
  v47[0] = v33;
  uint64_t v34 = sub_1DFDE81E0();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
  v35(v41, 1, 1, v34);
  v35(v42, 1, 1, v34);
  v35(v43, 1, 1, v34);
  v35(v44, 1, 1, v34);
  sub_1DFDE81D0();
  swift_allocObject();
  swift_retain();
  sub_1DFDE81C0();
  sub_1DFDF7760();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1DEA9417C((uint64_t)v47, (uint64_t (*)(void))sub_1DEA94828);
}

uint64_t sub_1DF15611C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DF14FCC8(a1, a2, a3);
}

void sub_1DF156140(uint64_t a1)
{
}

void sub_1DF156174(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for TagFeedSectionDescriptor;
    v8[1] = type metadata accessor for TagFeedModel(255);
    void v8[2] = sub_1DEB0E09C();
    v8[3] = sub_1DF14FC38(&qword_1EBAD3F50, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DF156234(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DF156174(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF156278(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAD830];
    sub_1DF156174(255, (unint64_t *)&qword_1EBAD34B0, MEMORY[0x1E4FAD830]);
    uint64_t v11 = v10;
    uint64_t v12 = sub_1DF156234(a3, (unint64_t *)&qword_1EBAD34B0, v9);
    unint64_t v13 = a5(a1, v11, v12);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

BOOL sub_1DF156330()
{
  sub_1DEBCABEC(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE53764((uint64_t)v2);
  sub_1DEB4F994();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v6) == 1)
  {
    uint64_t v9 = (uint64_t (*)(void))sub_1DEBCABEC;
    uint64_t v10 = (uint64_t)v2;
  }
  else
  {
    sub_1DFDF0B50();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v2, v7);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_1DFDF0700();
      double v12 = v11;
      swift_release();
      return v12 == 0.0;
    }
    uint64_t v9 = type metadata accessor for TagFeedModel;
    uint64_t v10 = (uint64_t)v5;
  }
  sub_1DEA9417C(v10, v9);
  return 0;
}

uint64_t sub_1DF1564FC()
{
  uint64_t v132 = sub_1DFDFB7E0();
  uint64_t v95 = *(void *)(v132 - 8);
  uint64_t v0 = MEMORY[0x1F4188790](v132);
  uint64_t v131 = (char *)&v91 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v0);
  uint64_t v130 = (char *)&v91 - v2;
  uint64_t v129 = sub_1DFDFC1E0();
  uint64_t v94 = *(void *)(v129 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v129);
  uint64_t v102 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v122 = (char *)&v91 - v5;
  uint64_t v128 = sub_1DFDFADB0();
  uint64_t v93 = *(void *)(v128 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v128);
  uint64_t v101 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v121 = (char *)&v91 - v8;
  uint64_t v119 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v119);
  uint64_t v118 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF12D528();
  uint64_t v100 = v10;
  unint64_t v124 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v99 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF1579E4(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v117 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDF81A0();
  uint64_t v125 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v123 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v120 = (void (*)(char *, uint64_t, uint64_t))((char *)&v91 - v18);
  MEMORY[0x1F4188790](v17);
  uint64_t v116 = (void (**)(char *, uint64_t))((char *)&v91 - v19);
  sub_1DEB4F994();
  uint64_t v115 = v20;
  uint64_t v105 = *(void (***)(char *, uint64_t))(v20 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v92 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v91 = (char *)&v91 - v23;
  sub_1DF157A18();
  uint64_t v25 = v24 - 8;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB4F8C8();
  uint64_t v29 = v28;
  uint64_t v30 = (uint64_t)*(v28 - 1);
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v33 = (uint64_t (**)(char *, uint64_t))((char *)&v91 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)&v91 - v34;
  sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
  sub_1DFDF1510();
  uint64_t v36 = v30;
  uint64_t v39 = *(void (**)(uint64_t (**)(char *, uint64_t), char *, void (**)(char *, uint64_t)))(v30 + 16);
  uint64_t v38 = v30 + 16;
  uint64_t v37 = v39;
  uint64_t v96 = v35;
  v39(v33, v35, v29);
  sub_1DF14FC38(&qword_1EBAD2790, (void (*)(uint64_t))sub_1DEB4F8C8);
  uint64_t v126 = v33;
  sub_1DFDFDFB0();
  uint64_t v40 = &v27[*(int *)(v25 + 44)];
  uint64_t v41 = sub_1DF14FC38(&qword_1EBAD2798, (void (*)(uint64_t))sub_1DEB4F8C8);
  uint64_t v42 = *(void *)v40;
  uint64_t v127 = v29;
  sub_1DFDFE720();
  uint64_t v133 = v14;
  if (v42 == v136[0])
  {
    unint64_t v124 = MEMORY[0x1E4FBC860];
    uint64_t v43 = v127;
  }
  else
  {
    uint64_t v112 = v37;
    uint64_t v113 = v38;
    uint64_t v109 = (void (**)(char *))(v105 + 2);
    uint64_t v108 = (void (**)(uint64_t (**)(char *, uint64_t), void))(v36 + 8);
    uint64_t v107 = (void (**)(char *, char *, uint64_t))(v105 + 4);
    uint64_t v106 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56);
    uint64_t v98 = (void (**)(char *, uint64_t, uint64_t))(v124 + 32);
    uint64_t v97 = (void (**)(char *, uint64_t))(v124 + 8);
    ++v105;
    uint64_t v104 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
    uint64_t v103 = (void (**)(char *, char *, uint64_t))(v125 + 32);
    unint64_t v124 = MEMORY[0x1E4FBC860];
    uint64_t v65 = v92;
    uint64_t v66 = v91;
    uint64_t v67 = v40;
    uint64_t v68 = v126;
    uint64_t v43 = v127;
    uint64_t v114 = v36;
    uint64_t v111 = v67;
    uint64_t v110 = v41;
    do
    {
      uint64_t v70 = (void (*)(void *, void))sub_1DFDFE760();
      uint64_t v71 = v115;
      (*v109)(v66);
      v70(v136, 0);
      uint64_t v72 = v68;
      uint64_t v73 = v68;
      uint64_t v74 = v27;
      v112(v72, v27, v43);
      sub_1DFDFE730();
      (*v108)(v73, v43);
      uint64_t v75 = v66;
      (*v107)(v65, v66, v71);
      uint64_t v76 = (uint64_t)v118;
      uint64_t v77 = v71;
      uint64_t v78 = v65;
      sub_1DFDF0B50();
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        uint64_t v79 = v99;
        uint64_t v80 = v76;
        uint64_t v81 = v100;
        (*v98)(v99, v80, v100);
        uint64_t v82 = v117;
        sub_1DFDF9A80();
        (*v97)(v79, v81);
        uint64_t v83 = 0;
      }
      else
      {
        sub_1DEA9417C(v76, type metadata accessor for TagFeedModel);
        uint64_t v83 = 1;
        uint64_t v82 = v117;
      }
      uint64_t v84 = (char *)v116;
      uint64_t v85 = v133;
      (*v106)(v82, v83, 1, v133);
      (*v105)(v78, v77);
      if ((*v104)(v82, 1, v85) == 1)
      {
        sub_1DEA9417C(v82, (uint64_t (*)(void))sub_1DF1579E4);
        uint64_t v65 = v78;
        uint64_t v66 = v75;
        uint64_t v27 = v74;
      }
      else
      {
        uint64_t v86 = *v103;
        (*v103)(v84, (char *)v82, v85);
        v86((char *)v120, v84, v85);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v87 = v124;
        }
        else {
          unint64_t v87 = sub_1DEE1A274(0, *(void *)(v124 + 16) + 1, 1, v124);
        }
        uint64_t v65 = v78;
        unint64_t v89 = *(void *)(v87 + 16);
        unint64_t v88 = *(void *)(v87 + 24);
        uint64_t v66 = v75;
        if (v89 >= v88 >> 1) {
          unint64_t v87 = sub_1DEE1A274(v88 > 1, v89 + 1, 1, v87);
        }
        uint64_t v27 = v74;
        *(void *)(v87 + 16) = v89 + 1;
        unint64_t v90 = (*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
        unint64_t v124 = v87;
        ((void (*)(unint64_t))v86)(v87 + v90 + *(void *)(v125 + 72) * v89);
      }
      uint64_t v36 = v114;
      uint64_t v68 = v126;
      uint64_t v43 = v127;
      uint64_t v69 = *(void *)v111;
      sub_1DFDFE720();
    }
    while (v69 != v136[0]);
  }
  sub_1DEA9417C((uint64_t)v27, (uint64_t (*)(void))sub_1DF157A18);
  (*(void (**)(char *, void))(v36 + 8))(v96, v43);
  uint64_t v44 = *(void *)(v124 + 16);
  if (!v44)
  {
    swift_bridgeObjectRelease();
    uint64_t v64 = 0;
    return v64 > 0;
  }
  uint64_t v45 = v125 + 16;
  uint64_t v120 = *(void (**)(char *, uint64_t, uint64_t))(v125 + 16);
  uint64_t v46 = v124 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
  uint64_t v117 = *(void *)(v125 + 72);
  uint64_t v127 = (void (**)(char *, uint64_t))(v93 + 8);
  uint64_t v126 = (uint64_t (**)(char *, uint64_t))(v94 + 8);
  LODWORD(v119) = *MEMORY[0x1E4F80EB8];
  uint64_t v118 = (char *)(v95 + 104);
  uint64_t v47 = (void (**)(char *, uint64_t))(v95 + 8);
  uint64_t v116 = (void (**)(char *, uint64_t))(v125 + 8);
  swift_bridgeObjectRetain();
  uint64_t v115 = 0;
  uint64_t v48 = v123;
  uint64_t v49 = v133;
  uint64_t v125 = v45;
  while (1)
  {
    v120(v48, v46, v49);
    uint64_t v50 = v121;
    sub_1DFDF8180();
    uint64_t v51 = v122;
    sub_1DFDFADA0();
    uint64_t v52 = *v127;
    (*v127)(v50, v128);
    sub_1DFDFC1C0();
    uint64_t v53 = *v126;
    (*v126)(v51, v129);
    (*(void (**)(char *, void, uint64_t))v118)(v131, v119, v132);
    sub_1DF14FC38(&qword_1EAC21508, MEMORY[0x1E4F80EC0]);
    sub_1DFDFE170();
    sub_1DFDFE170();
    if (v136[0] != v134) {
      goto LABEL_10;
    }
    if (v136[1] == v135)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v54 = *v47;
      uint64_t v55 = v132;
      (*v47)(v131, v132);
      v54(v130, v55);
      uint64_t v48 = v123;
    }
    else
    {
LABEL_10:
      char v56 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v57 = *v47;
      uint64_t v58 = v132;
      (*v47)(v131, v132);
      v57(v130, v58);
      uint64_t v48 = v123;
      if ((v56 & 1) == 0) {
        goto LABEL_6;
      }
    }
    uint64_t v59 = v101;
    sub_1DFDF8180();
    uint64_t v60 = v102;
    sub_1DFDFADA0();
    v52(v59, v128);
    sub_1DFDFC1B0();
    double v62 = v61;
    uint64_t result = v53(v60, v129);
    if ((~*(void *)&v62 & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v62 <= -9.22337204e18) {
      goto LABEL_32;
    }
    if (v62 >= 9.22337204e18)
    {
      __break(1u);
LABEL_15:
      swift_bridgeObjectRelease_n();
      uint64_t v64 = v115;
      return v64 > 0;
    }
    uint64_t v115 = (uint64_t)v62;
LABEL_6:
    uint64_t v49 = v133;
    (*v116)(v48, v133);
    v46 += v117;
    if (!--v44) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1DF1573E4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v35 = a2;
  sub_1DEA947F4(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v34 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF156174(0, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
  uint64_t v8 = v7;
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v30 - v9;
  sub_1DED20B60();
  uint64_t v33 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v40 = (uint64_t)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAD830];
  sub_1DF156174(0, (unint64_t *)&qword_1EBAD34B0, MEMORY[0x1E4FAD830]);
  uint64_t v16 = v15;
  uint64_t v17 = a1;
  uint64_t v18 = sub_1DF156234((unint64_t *)&unk_1EBAD34A0, (unint64_t *)&qword_1EBAD34B0, v14);
  uint64_t v19 = sub_1DFDFE6F0();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (!v19) {
    return v20;
  }
  uint64_t v21 = v19;
  uint64_t v42 = MEMORY[0x1E4FBC860];
  sub_1DEDF7E64(0, v19 & ~(v19 >> 63), 0);
  uint64_t v38 = v16;
  uint64_t result = sub_1DFDFE6A0();
  if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v39 = v18;
    uint64_t v23 = (void (**)(char *, uint64_t))(v32 + 8);
    v30[2] = v12 + 32;
    uint64_t v31 = (void (**)(char *))(v32 + 16);
    uint64_t v32 = v17;
    do
    {
      uint64_t v24 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      (*v31)(v10);
      v24(v41, 0);
      sub_1DFDF14D0();
      uint64_t v25 = v41[0];
      uint64_t v26 = sub_1DFDF8130();
      uint64_t v27 = (uint64_t)v34;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v34, 1, 1, v26);
      sub_1DF1514A0((uint64_t)v10, v25, v36, v37, v27, v40);
      swift_release();
      sub_1DEA9417C(v27, (uint64_t (*)(void))sub_1DEA947F4);
      (*v23)(v10, v8);
      uint64_t v20 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF7E64(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v42;
      }
      unint64_t v29 = *(void *)(v20 + 16);
      unint64_t v28 = *(void *)(v20 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1DEDF7E64(v28 > 1, v29 + 1, 1);
        uint64_t v20 = v42;
      }
      *(void *)(v20 + 16) = v29 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v20+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v29, v40, v33);
      uint64_t v42 = v20;
      sub_1DFDFE730();
      --v21;
    }
    while (v21);
    return v20;
  }
  __break(1u);
  return result;
}

void sub_1DF157838()
{
  if (!qword_1EBAE9548)
  {
    sub_1DEF39FEC();
    unint64_t v0 = sub_1DFDF7B30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9548);
    }
  }
}

unint64_t sub_1DF157894()
{
  unint64_t result = qword_1EBAD2F28;
  if (!qword_1EBAD2F28)
  {
    sub_1DF156174(255, (unint64_t *)&qword_1EBAD2F60, MEMORY[0x1E4FAC180]);
    sub_1DF157958();
    sub_1DF14FC38(&qword_1EBAD3F10, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD2F28);
  }
  return result;
}

unint64_t sub_1DF157958()
{
  unint64_t result = qword_1EBADB230;
  if (!qword_1EBADB230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADB230);
  }
  return result;
}

uint64_t sub_1DF1579AC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DF1579E4(uint64_t a1)
{
}

void sub_1DF157A18()
{
  if (!qword_1EBAEA790)
  {
    sub_1DEB4F8C8();
    sub_1DF14FC38(&qword_1EBAD2798, (void (*)(uint64_t))sub_1DEB4F8C8);
    unint64_t v0 = sub_1DFDFFB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA790);
    }
  }
}

uint64_t sub_1DF157AAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF157B14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1DF157B7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF157BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v90 = a1;
  uint64_t v3 = type metadata accessor for SportsSyncSetting();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  v87[0] = (uint64_t)v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1DFDE7600();
  uint64_t v98 = *(void *)(v111 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v111);
  uint64_t v94 = (char *)v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v93 = (char *)v87 - v8;
  sub_1DE9E8E54();
  uint64_t v104 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v107 = (uint64_t)v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v103 = (uint64_t)v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v108 = (uint64_t)v87 - v15;
  uint64_t v16 = v11;
  uint64_t v17 = v4;
  sub_1DEA20928(0, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting, v16);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v102 = (uint64_t)v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v101 = (uint64_t)v87 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v109 = (uint64_t)v87 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)v87 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)v87 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v110 = (uint64_t)v87 - v31;
  sub_1DEA20928(0, &qword_1EBAEAE88, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting, MEMORY[0x1E4FBBE00]);
  uint64_t v32 = *(void *)(v4 + 72);
  unint64_t v33 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v34 = 2 * v32;
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1DFE0CC10;
  uint64_t v36 = v35 + v33;
  sub_1DEB80218(v2, v35 + v33);
  uint64_t v99 = v32;
  uint64_t v37 = v35 + v33 + v32;
  uint64_t v38 = type metadata accessor for SportsSyncManagerSetting();
  sub_1DEB80218(v2 + *(int *)(v38 + 20), v37);
  sub_1DEB80218(v2 + *(int *)(v38 + 24), v36 + v34);
  if (qword_1EBAF36B0 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_1DFDF01D0();
  uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1EBB63458);
  swift_bridgeObjectRetain_n();
  uint64_t v89 = v40;
  uint64_t v41 = sub_1DFDF01B0();
  os_log_type_t v42 = sub_1DFDFEA60();
  int v43 = v42;
  BOOL v44 = os_log_type_enabled(v41, v42);
  uint64_t v96 = v27;
  uint64_t v100 = v30;
  if (v44)
  {
    LODWORD(v106) = v43;
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    v114[0] = v46;
    *(_DWORD *)uint64_t v45 = 136446210;
    uint64_t v105 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 4);
    uint64_t v47 = MEMORY[0x1E01ECA60](v35, v3);
    uint64_t v112 = sub_1DEA5CAB8(v47, v48, v114);
    sub_1DFDFF680();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DE913000, v41, (os_log_type_t)v106, "Sports sync manager determining most recent between %{public}s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v46, -1, -1);
    uint64_t v49 = v45;
    uint64_t v27 = v96;
    MEMORY[0x1E01EFA10](v49, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v50 = v90;
  uint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v106 = v17 + 56;
  v105(v110, 1, 1, v3);
  uint64_t v51 = *(void *)(v35 + 16);
  uint64_t v88 = v17;
  if (v51)
  {
    v87[1] = v35;
    uint64_t v52 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    uint64_t v97 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
    uint64_t v53 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48);
    uint64_t v92 = (void (**)(char *, uint64_t, uint64_t))(v98 + 32);
    uint64_t v95 = (void (**)(uint64_t, uint64_t))(v98 + 8);
    uint64_t v98 = v3;
    uint64_t v54 = (uint64_t)v27;
    uint64_t v55 = v109;
    uint64_t v91 = v52;
    do
    {
      sub_1DEA6CEE0(v110, v54, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
      sub_1DEB80218(v36, v55);
      v105(v55, 0, 1, v3);
      uint64_t v57 = v101;
      sub_1DEA6CEE0(v54, v101, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
      uint64_t v58 = *v52;
      if ((*v52)(v57, 1, v3) == 1)
      {
        sub_1DF158A18(v57, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
        (*v97)(v108, 1, 1, v111);
      }
      else
      {
        sub_1DEA6CEE0(v57 + *(int *)(v3 + 24), v108, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
        sub_1DF1589BC(v57);
      }
      uint64_t v59 = v102;
      sub_1DEA6CEE0(v109, v102, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
      if (v58(v59, 1, v3) == 1)
      {
        sub_1DF158A18(v59, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
        uint64_t v60 = v103;
        (*v97)(v103, 1, 1, v111);
      }
      else
      {
        uint64_t v61 = v59 + *(int *)(v3 + 24);
        uint64_t v60 = v103;
        sub_1DEA6CEE0(v61, v103, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
        sub_1DF1589BC(v59);
      }
      uint64_t v62 = v107;
      uint64_t v63 = v107 + *(int *)(v104 + 48);
      sub_1DEB80304(v108, v107);
      sub_1DEB80304(v60, v63);
      uint64_t v64 = *v53;
      uint64_t v65 = v111;
      LODWORD(v62) = (*v53)(v62, 1, v111);
      int v66 = v64(v63, 1, v65);
      if (v62 == 1)
      {
        if (v66 == 1)
        {
          uint64_t v56 = (uint64_t)v100;
          uint64_t v3 = v98;
          v105((uint64_t)v100, 1, 1, v98);
          uint64_t v55 = v109;
        }
        else
        {
          uint64_t v55 = v109;
          uint64_t v56 = (uint64_t)v100;
          sub_1DEA6CEE0(v109, (uint64_t)v100, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
          sub_1DF158A18(v63, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
          uint64_t v3 = v98;
        }
        uint64_t v54 = (uint64_t)v96;
      }
      else if (v66 == 1)
      {
        uint64_t v56 = (uint64_t)v100;
        sub_1DEA6CEE0(v54, (uint64_t)v100, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
        (*v95)(v107, v111);
        uint64_t v3 = v98;
        uint64_t v55 = v109;
      }
      else
      {
        uint64_t v67 = *v92;
        uint64_t v68 = v111;
        uint64_t v69 = v93;
        (*v92)(v93, v107, v111);
        uint64_t v70 = v94;
        v67(v94, v63, v68);
        sub_1DF053168();
        char v71 = sub_1DFDFDC20();
        uint64_t v72 = *v95;
        (*v95)((uint64_t)v70, v68);
        v72((uint64_t)v69, v68);
        if (v71)
        {
          uint64_t v55 = v109;
          uint64_t v56 = (uint64_t)v100;
          sub_1DEA6CEE0(v109, (uint64_t)v100, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
          uint64_t v3 = v98;
          uint64_t v54 = (uint64_t)v96;
        }
        else
        {
          uint64_t v54 = (uint64_t)v96;
          uint64_t v56 = (uint64_t)v100;
          sub_1DEA6CEE0((uint64_t)v96, (uint64_t)v100, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
          uint64_t v3 = v98;
          uint64_t v55 = v109;
        }
        uint64_t v52 = v91;
      }
      sub_1DF158A18(v55, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
      sub_1DF158A18(v54, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
      sub_1DF158928(v56, v110);
      v36 += v99;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
    uint64_t v50 = v90;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v73 = sub_1DFDF01B0();
  os_log_type_t v74 = sub_1DFDFEA60();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    uint64_t v113 = v76;
    *(_DWORD *)uint64_t v75 = 136446210;
    uint64_t v77 = v110;
    swift_beginAccess();
    int v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v77, 1, v3);
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    if (!v78)
    {
      uint64_t v81 = v87[0];
      sub_1DEB80218(v110, v87[0]);
      uint64_t v79 = sub_1DF94625C();
      uint64_t v80 = v82;
      sub_1DF1589BC(v81);
    }
    v114[0] = v79;
    v114[1] = v80;
    sub_1DEBB2068();
    uint64_t v83 = sub_1DFDFDD90();
    v114[0] = sub_1DEA5CAB8(v83, v84, &v113);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DE913000, v73, v74, "Sports sync manager determined most recent=%{public}s", v75, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v76, -1, -1);
    MEMORY[0x1E01EFA10](v75, -1, -1);
  }

  uint64_t v85 = v110;
  swift_beginAccess();
  sub_1DEA6CEE0(v85, v50, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
  return sub_1DF158A18(v85, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
}

uint64_t type metadata accessor for SportsSyncManagerSetting()
{
  uint64_t result = qword_1EBADB198;
  if (!qword_1EBADB198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF158928(uint64_t a1, uint64_t a2)
{
  sub_1DEA20928(0, qword_1EBAD59C8, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF1589BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsSyncSetting();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF158A18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DEA20928(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void *sub_1DF158A88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = type metadata accessor for SportsSyncSetting();
    uint64_t v8 = *(int *)(v7 + 24);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDE7600();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = *(unsigned char *)(v18 + 8);
    uint64_t v19 = *(int *)(v7 + 24);
    uint64_t v20 = &v17[v19];
    uint64_t v21 = (const void *)(v18 + v19);
    if (v13((char *)(v18 + v19), 1, v11))
    {
      sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v20, v21, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
    }
    uint64_t v23 = *(int *)(a3 + 24);
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (uint64_t)a2 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = *(int *)(v7 + 24);
    uint64_t v27 = &v24[v26];
    uint64_t v28 = (const void *)(v25 + v26);
    if (v13((char *)(v25 + v26), 1, v11))
    {
      sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v27, v28, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_1DF158E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsSyncSetting();
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v12 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v7(a1 + v5, 1, v6))
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1 + v5, v6);
    uint64_t v5 = *(int *)(v4 + 24);
  }
  uint64_t v8 = a1 + v5 + *(int *)(a2 + 20);
  if (!v7(v8, 1, v6))
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v6);
    uint64_t v5 = *(int *)(v4 + 24);
  }
  uint64_t v9 = a1 + v5 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v6);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v9, v6);
  }
  return result;
}

uint64_t sub_1DF158F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = type metadata accessor for SportsSyncSetting();
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = *(int *)(v6 + 24);
  uint64_t v18 = (void *)(v15 + v17);
  uint64_t v19 = (const void *)(v16 + v17);
  if (v12((const void *)(v16 + v17), 1, v10))
  {
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v18, v19, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
  }
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = *(int *)(v6 + 24);
  uint64_t v25 = (void *)(v22 + v24);
  uint64_t v26 = (const void *)(v23 + v24);
  if (v12((const void *)(v23 + v24), 1, v10))
  {
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v25, v26, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1DF1592C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = type metadata accessor for SportsSyncSetting();
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v35 = a1;
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = v35 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = *(int *)(v6 + 24);
  uint64_t v20 = (void *)(v17 + v19);
  uint64_t v21 = (void *)(v18 + v19);
  int v22 = v12((void *)(v17 + v19), 1, v10);
  int v23 = v12(v21, 1, v10);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v20, v21, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v20, v10);
LABEL_12:
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v20, v21, v10);
LABEL_13:
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = v35 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = *(int *)(v6 + 24);
  uint64_t v29 = (void *)(v26 + v28);
  uint64_t v30 = (void *)(v27 + v28);
  int v31 = v12((void *)(v26 + v28), 1, v10);
  int v32 = v12(v30, 1, v10);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v29, v30, v10);
      return v35;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v29, v10);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    return v35;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v29, v30, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0, 1, v10);
  return v35;
}

uint64_t sub_1DF15972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = type metadata accessor for SportsSyncSetting();
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = *(int *)(v6 + 24);
  uint64_t v18 = (void *)(v15 + v17);
  uint64_t v19 = (const void *)(v16 + v17);
  if (v12((const void *)(v16 + v17), 1, v10))
  {
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v18, v19, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
  }
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = *(int *)(v6 + 24);
  uint64_t v25 = (void *)(v22 + v24);
  uint64_t v26 = (const void *)(v23 + v24);
  if (v12((const void *)(v23 + v24), 1, v10))
  {
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v25, v26, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1DF159A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = type metadata accessor for SportsSyncSetting();
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v35 = a1;
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = v35 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = *(int *)(v6 + 24);
  uint64_t v20 = (void *)(v17 + v19);
  uint64_t v21 = (void *)(v18 + v19);
  int v22 = v12((void *)(v17 + v19), 1, v10);
  int v23 = v12(v21, 1, v10);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v20, v21, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v20, v10);
LABEL_12:
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v20, v21, v10);
LABEL_13:
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = v35 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = *(int *)(v6 + 24);
  uint64_t v29 = (void *)(v26 + v28);
  uint64_t v30 = (void *)(v27 + v28);
  int v31 = v12((void *)(v26 + v28), 1, v10);
  int v32 = v12(v30, 1, v10);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v29, v30, v10);
      return v35;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v29, v10);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    sub_1DEA20928(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    return v35;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v29, v30, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0, 1, v10);
  return v35;
}

uint64_t sub_1DF159EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF159ED8);
}

uint64_t sub_1DF159ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsSyncSetting();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF159F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF159F58);
}

uint64_t sub_1DF159F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsSyncSetting();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1DF159FC8()
{
  uint64_t result = type metadata accessor for SportsSyncSetting();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_1DF15A058(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC7NewsUI216RecentSearchView_titleLabel;
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  int v13 = v4;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC7NewsUI216RecentSearchView_imageView;
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC7NewsUI216RecentSearchView_chevron;
  *(void *)&v13[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v16 = OBJC_IVAR____TtC7NewsUI216RecentSearchView_separatorView;
  *(void *)&v13[v16] = objc_msgSend(objc_allocWithZone((Class)sub_1DFDF0CF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v21.receiver = v13;
  v21.super_class = ObjectType;
  uint64_t v17 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC7NewsUI216RecentSearchView_imageView];
  uint64_t v19 = v17;
  objc_msgSend(v19, sel_addSubview_, v18);
  objc_msgSend(v19, sel_addSubview_, *(void *)&v19[OBJC_IVAR____TtC7NewsUI216RecentSearchView_titleLabel]);
  objc_msgSend(v19, sel_addSubview_, *(void *)&v19[OBJC_IVAR____TtC7NewsUI216RecentSearchView_chevron]);
  objc_msgSend(v19, sel_addSubview_, *(void *)&v19[OBJC_IVAR____TtC7NewsUI216RecentSearchView_separatorView]);

  return v19;
}

uint64_t type metadata accessor for RecentSearchView()
{
  return self;
}

void sub_1DF15A2F8()
{
  sub_1DF15A384((unint64_t *)&qword_1EBAED6B8);
  JUMPOUT(0x1E01E4080);
}

uint64_t sub_1DF15A350()
{
  return sub_1DF15A384(&qword_1EBAED6B0);
}

uint64_t sub_1DF15A384(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RecentSearchView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF15A3C4()
{
  uint64_t v1 = OBJC_IVAR____TtC7NewsUI216RecentSearchView_titleLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC7NewsUI216RecentSearchView_imageView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC7NewsUI216RecentSearchView_chevron;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC7NewsUI216RecentSearchView_separatorView;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)sub_1DFDF0CF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DFDFFBB0();
  __break(1u);
}

uint64_t sub_1DF15A4EC()
{
  uint64_t v1 = type metadata accessor for ArticleListAudioPlaylistFeedGroup();
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF15AB58(v0, (uint64_t)v6);
  sub_1DEC28F6C((uint64_t)v6, (uint64_t)v4);
  uint64_t v7 = sub_1DF221A48();
  sub_1DEEE3760((uint64_t)v4);
  return v7;
}

uint64_t sub_1DF15A5C8(uint64_t a1)
{
  uint64_t v2 = sub_1DF15ABBC((unint64_t *)&qword_1EAC2BA00);
  return MEMORY[0x1F4136510](a1, v2);
}

uint64_t sub_1DF15A630()
{
  sub_1DF15ABBC(&qword_1EAC28D30);
  return sub_1DFDFA330();
}

uint64_t sub_1DF15A6A0()
{
  uint64_t v1 = type metadata accessor for ArticleListAudioPlaylistFeedGroup();
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF15AB58(v0, (uint64_t)v6);
  sub_1DEC28F6C((uint64_t)v6, (uint64_t)v4);
  uint64_t v7 = *v4;
  swift_bridgeObjectRetain();
  sub_1DEEE3760((uint64_t)v4);
  return v7;
}

uint64_t sub_1DF15A780(uint64_t a1)
{
  uint64_t v2 = sub_1DF15ABBC(&qword_1EAC28D30);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DF15A7D8()
{
  uint64_t v1 = type metadata accessor for ArticleListAudioPlaylistFeedGroup();
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF15AB58(v0, (uint64_t)v6);
  sub_1DEC28F6C((uint64_t)v6, (uint64_t)v4);
  uint64_t v7 = sub_1DFDF6EB0();
  sub_1DEEE3760((uint64_t)v4);
  return v7;
}

uint64_t sub_1DF15A8C4()
{
  sub_1DF15ABBC(&qword_1EAC28D38);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF15A91C()
{
  return sub_1DF15ABBC(&qword_1EAC28D10);
}

uint64_t type metadata accessor for AudioPlaylistFeedGroup()
{
  uint64_t result = qword_1EAC28D40;
  if (!qword_1EAC28D40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF15A99C()
{
  return sub_1DF15ABBC(&qword_1EAC28D18);
}

uint64_t sub_1DF15A9D0()
{
  return sub_1DF15ABBC(&qword_1EAC28D20);
}

uint64_t sub_1DF15AA04()
{
  return sub_1DF15ABBC(&qword_1EAC28D28);
}

uint64_t sub_1DF15AA38()
{
  return sub_1DF15ABBC(&qword_1EAC28D30);
}

uint64_t sub_1DF15AA6C()
{
  return sub_1DF15ABBC(&qword_1EAC28D38);
}

unint64_t sub_1DF15AAA4()
{
  unint64_t result = qword_1EBAF6350;
  if (!qword_1EBAF6350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6350);
  }
  return result;
}

unint64_t sub_1DF15AB00()
{
  unint64_t result = qword_1EBAF6340;
  if (!qword_1EBAF6340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6340);
  }
  return result;
}

uint64_t sub_1DF15AB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioPlaylistFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF15ABBC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AudioPlaylistFeedGroup();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF15AC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleListAudioPlaylistFeedGroup();
  return MEMORY[0x1F4186578](a1, a2, v4, sub_1DF15AC58);
}

uint64_t sub_1DF15AC58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF7010();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF15AD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ArticleListAudioPlaylistFeedGroup();
  return MEMORY[0x1F41867C0](a1, a2, a3, v6, sub_1DF15AD70);
}

uint64_t sub_1DF15AD70(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDF7010();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DF15AE18(uint64_t a1)
{
  return sub_1DEB87DB4(a1, (uint64_t)sub_1DF15AE38, &qword_1EAC28D50);
}

uint64_t sub_1DF15AE38(void *a1)
{
  uint64_t v2 = sub_1DFDF8B50();
  uint64_t v18 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v17 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DFDF33F0();
  uint64_t v4 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDF70A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CB0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F7F2B8], v7);
  sub_1DF15D058(&qword_1EAC21078, MEMORY[0x1E4F7F2C0]);
  sub_1DFDE7FF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1D6F0 != -1) {
    swift_once();
  }
  unint64_t v20 = 0x746E696F70646E65;
  unint64_t v21 = 0xEF656372756F735FLL;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1D6D0 != -1) {
    swift_once();
  }
  LOBYTE(v20) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1D6E0 != -1) {
    swift_once();
  }
  unint64_t v20 = 909586483;
  unint64_t v21 = 0xE400000000000000;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCF0 != -1) {
    swift_once();
  }
  unint64_t v20 = 4;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CA0();
  LOBYTE(v20) = 0;
  sub_1DFDE7FF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CF0();
  LOBYTE(v20) = 1;
  sub_1DFDE7FF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CD0();
  LOBYTE(v20) = 0;
  sub_1DFDE7FF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7A70();
  uint64_t v11 = v16;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FACB98], v16);
  sub_1DF15D058(&qword_1EAC28D80, MEMORY[0x1E4FACBB0]);
  sub_1DFDE7FF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EBABD938 != -1) {
    swift_once();
  }
  LOBYTE(v20) = 0;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCC0 != -1) {
    swift_once();
  }
  LOBYTE(v20) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC90 != -1) {
    swift_once();
  }
  unint64_t v20 = 0xD000000000000047;
  unint64_t v21 = 0x80000001DFEE3310;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC98 != -1) {
    swift_once();
  }
  unint64_t v20 = 0xD00000000000002FLL;
  unint64_t v21 = 0x80000001DFEE3360;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EBABD990 != -1) {
    swift_once();
  }
  int v13 = v17;
  uint64_t v12 = v18;
  uint64_t v14 = v19;
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F7FB80], v19);
  sub_1DF15D058((unint64_t *)&unk_1EBABA1F0, MEMORY[0x1E4F7FB88]);
  sub_1DFDE7FF0();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v13, v14);
}

uint64_t static Presets.Demo.stagingDemo.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D058);
}

uint64_t sub_1DF15B714(uint64_t a1)
{
  return sub_1DEB87DB4(a1, (uint64_t)sub_1DF15B734, &qword_1EAC28D58);
}

uint64_t sub_1DF15B734(void *a1)
{
  uint64_t v12 = sub_1DFDF33F0();
  uint64_t v2 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDE7ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1D6F0 != -1) {
    swift_once();
  }
  unint64_t v13 = 0x74696B64756F6C63;
  unint64_t v14 = 0xEF656372756F735FLL;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EBABD9D0 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB280], v5);
  sub_1DF15D058((unint64_t *)&qword_1EBAA6FA8, MEMORY[0x1E4FAB298]);
  sub_1DFDE7FF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CF0();
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CD0();
  LOBYTE(v13) = 0;
  sub_1DFDE7FF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7A60();
  LOBYTE(v13) = 0;
  sub_1DFDE7FF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7A70();
  uint64_t v9 = v12;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FACB98], v12);
  sub_1DF15D058(&qword_1EAC28D80, MEMORY[0x1E4FACBB0]);
  sub_1DFDE7FF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC80 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CA0();
  LOBYTE(v13) = 0;
  sub_1DFDE7FF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC68 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC70 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCA8 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCB0 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EBABD938 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 0;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCC0 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC90 != -1) {
    swift_once();
  }
  unint64_t v13 = 0xD000000000000047;
  unint64_t v14 = 0x80000001DFEE3310;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC98 != -1) {
    swift_once();
  }
  unint64_t v13 = 0xD00000000000002FLL;
  unint64_t v14 = 0x80000001DFEE3360;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCA0 != -1) {
    swift_once();
  }
  unint64_t v13 = 0xD000000000000017;
  unint64_t v14 = 0x80000001DFEE3390;
  return sub_1DFDE7FF0();
}

uint64_t static Presets.Demo.stageDemo.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D060);
}

uint64_t sub_1DF15C07C(uint64_t a1)
{
  return sub_1DF15C0EC(a1, (uint64_t)sub_1DF15C09C, &qword_1EAC28D60);
}

uint64_t sub_1DF15C09C(void *a1)
{
  return sub_1DF15C1DC(a1, MEMORY[0x1E4F7F298]);
}

uint64_t static Presets.Demo.stageDemo1.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D068);
}

uint64_t sub_1DF15C0CC(uint64_t a1)
{
  return sub_1DF15C0EC(a1, (uint64_t)sub_1DF15C1D0, &qword_1EAC28D68);
}

uint64_t sub_1DF15C0EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1DEA74FD4();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DFE13CF0;
  if (qword_1EAC1D060 != -1) {
    swift_once();
  }
  *(void *)(v4 + 32) = qword_1EAC28D58;
  sub_1DFDFE250();
  sub_1DFDE8050();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1DFDE8040();
  *a3 = result;
  return result;
}

uint64_t sub_1DF15C1D0(void *a1)
{
  return sub_1DF15C1DC(a1, MEMORY[0x1E4F7F2A0]);
}

uint64_t sub_1DF15C1DC(void *a1, unsigned int *a2)
{
  uint64_t v4 = sub_1DFDF70A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CB0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *a2, v4);
  sub_1DF15D058(&qword_1EAC21078, MEMORY[0x1E4F7F2C0]);
  sub_1DFDE7FF0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t static Presets.Demo.stageDemo2.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D070);
}

uint64_t sub_1DF15C368(uint64_t a1)
{
  return sub_1DEB87DB4(a1, (uint64_t)sub_1DF15C388, &qword_1EAC28D70);
}

uint64_t sub_1DF15C388(void *a1)
{
  uint64_t v12 = sub_1DFDF70A0();
  uint64_t v2 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDE7ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EBABD9D0 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB280], v5);
  sub_1DF15D058((unint64_t *)&qword_1EBAA6FA8, MEMORY[0x1E4FAB298]);
  sub_1DFDE7FF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC68 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EBABD938 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 0;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CB0();
  uint64_t v9 = v12;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F7F288], v12);
  sub_1DF15D058(&qword_1EAC21078, MEMORY[0x1E4F7F2C0]);
  sub_1DFDE7FF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCC8 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCD8 != -1) {
    swift_once();
  }
  unint64_t v13 = 0xD000000000000010;
  unint64_t v14 = 0x80000001DFEE32F0;
  return sub_1DFDE7FF0();
}

uint64_t static Presets.Demo.supergroupsDemo1.getter()
{
  return sub_1DEB702E0(&qword_1EAC1D078);
}

uint64_t sub_1DF15C858(uint64_t a1)
{
  return sub_1DEB87DB4(a1, (uint64_t)sub_1DF15C878, &qword_1EAC28D78);
}

uint64_t sub_1DF15C878(void *a1)
{
  uint64_t v12 = sub_1DFDF70A0();
  uint64_t v2 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDE7ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EBABD9D0 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB280], v5);
  sub_1DF15D058((unint64_t *)&qword_1EBAA6FA8, MEMORY[0x1E4FAB298]);
  sub_1DFDE7FF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC68 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EBABD938 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 0;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CB0();
  uint64_t v9 = v12;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F7F288], v12);
  sub_1DF15D058(&qword_1EAC21078, MEMORY[0x1E4F7F2C0]);
  sub_1DFDE7FF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCC8 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCD8 != -1) {
    swift_once();
  }
  unint64_t v13 = 0xD000000000000010;
  unint64_t v14 = 0x80000001DFEE32B0;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCD0 != -1) {
    swift_once();
  }
  unint64_t v13 = 0xD00000000000001ELL;
  unint64_t v14 = 0x80000001DFEE32D0;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CCE8 != -1) {
    swift_once();
  }
  unint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7BD0();
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1D6F0 != -1) {
    swift_once();
  }
  unint64_t v13 = 0x74696B64756F6C63;
  unint64_t v14 = 0xEF656372756F735FLL;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CF0();
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1D100 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC78 != -1) {
    swift_once();
  }
  LOBYTE(v13) = 1;
  return sub_1DFDE7FF0();
}

uint64_t static Presets.Demo.supergroupsDemo2.getter()
{
  return sub_1DEB702E0(qword_1EAC1D080);
}

ValueMetadata *type metadata accessor for Presets.Demo()
{
  return &type metadata for Presets.Demo;
}

uint64_t sub_1DF15D058(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SportsFavoritesStyler()
{
  return self;
}

void *sub_1DF15D0C4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DF15D230(uint64_t a1, uint64_t a2)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF15D324(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DF15D440(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF15D56C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1DF15D684(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF15D7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF15D7B8);
}

uint64_t sub_1DF15D7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DF15D904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF15D918);
}

void sub_1DF15D918(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LegacyLocalNewsTodayFeedGroupKnobs()
{
  uint64_t result = qword_1EBAF7FC0;
  if (!qword_1EBAF7FC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF15DAAC()
{
  sub_1DEA81684(319, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  if (v0 <= 0x3F)
  {
    sub_1DEA81684(319, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DF15DBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v42 = a6;
  int v40 = a4;
  int v41 = a5;
  double v37 = a3;
  sub_1DEA0F94C(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v38 = (char *)&v36 - v16;
  sub_1DEA0F974(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v36 - v23;
  sub_1DEA0F744(a1, (uint64_t)v19, (uint64_t (*)(void))sub_1DEA0F974);
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21);
  uint64_t v39 = v14;
  if (v25 == 1)
  {
    if (qword_1EBAF7338 != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v21, (uint64_t)qword_1EBB63518);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v26, v21);
    sub_1DEB75F40((uint64_t)v19, (uint64_t (*)(void))sub_1DEA0F974);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(a7, v24, v21);
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    uint64_t v36 = v15;
    v27(v24, v19, v21);
    uint64_t v15 = v36;
    v27(a7, v24, v21);
  }
  sub_1DEA0F744(a2, (uint64_t)v12, (uint64_t (*)(void))sub_1DEA0F94C);
  uint64_t v28 = v39;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v39) == 1)
  {
    type metadata accessor for TodayFeedServiceConfig();
    sub_1DEA2BBE8();
    uint64_t v29 = v38;
    sub_1DFDF8390();
    sub_1DEB75F40((uint64_t)v12, (uint64_t (*)(void))sub_1DEA0F94C);
  }
  else
  {
    uint64_t v29 = v38;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v38, v12, v28);
  }
  uint64_t v30 = v42;
  int v31 = (int *)type metadata accessor for LegacyLocalNewsTodayFeedGroupKnobs();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&a7[v31[5]], v29, v28);
  if (v40)
  {
    sub_1DFDFE580();
    double v32 = v33 * 12.0;
  }
  else
  {
    double v32 = v37;
  }
  *(double *)&a7[v31[6]] = v32;
  a7[v31[7]] = (v41 == 2) | v41 & 1;
  if (!v30)
  {
    sub_1DED4EC70(0, (unint64_t *)&unk_1EBABB590, MEMORY[0x1E4FBBE00]);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1DFE0B750;
    if (qword_1EBADFD90 != -1) {
      swift_once();
    }
    char v34 = byte_1EBB63238 | 0x80;
    *(void *)(v30 + 32) = qword_1EBB63230;
    *(unsigned char *)(v30 + 40) = v34;
    *(void *)(v30 + 48) = 5;
    *(unsigned char *)(v30 + 56) = 0;
  }
  sub_1DEB75F40(a2, (uint64_t (*)(void))sub_1DEA0F94C);
  uint64_t result = sub_1DEB75F40(a1, (uint64_t (*)(void))sub_1DEA0F974);
  *(void *)&a7[v31[8]] = v30;
  return result;
}

uint64_t sub_1DF15E114@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1DEA0F94C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA0F974(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF15E990(0, &qword_1EBAF87D0, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v21 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF15E93C();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F7F760];
    sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
    char v30 = 0;
    sub_1DEA0F284(&qword_1EBABA118, (unint64_t *)&unk_1EBABA120, v14);
    sub_1DFDFFCD0();
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F7F8F8];
    sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    char v29 = 1;
    sub_1DEA0F284(&qword_1EBABA158, &qword_1EBABA160, v15);
    sub_1DFDFFCD0();
    char v28 = 2;
    sub_1DFDFFCD0();
    double v20 = v23;
    int v16 = v24;
    char v26 = 3;
    sub_1DFDFFCD0();
    LODWORD(v15) = v27;
    char v25 = 4;
    sub_1DEAD8814();
    uint64_t v17 = sub_1DFDFFCE0();
    sub_1DF15DBD0((uint64_t)v9, (uint64_t)v6, v20, v16, (int)v15, v17, v22);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF15E494(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF15E990(0, &qword_1EAC28D88, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF15E93C();
  sub_1DFE001A0();
  char v20 = 0;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F7F760];
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  sub_1DEA0F284(&qword_1EBAA6348, (unint64_t *)&unk_1EBABA120, v10);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v11 = type metadata accessor for LegacyLocalNewsTodayFeedGroupKnobs();
    v15[0] = v3;
    char v19 = 1;
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F7F8F8];
    sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    sub_1DEA0F284((unint64_t *)&unk_1EBAA6368, &qword_1EBABA160, v12);
    sub_1DFDFFE80();
    uint64_t v13 = v15[0];
    char v18 = 2;
    sub_1DFDFFE60();
    char v17 = 3;
    sub_1DFDFFE50();
    v15[1] = *(void *)(v13 + *(int *)(v11 + 32));
    char v16 = 4;
    sub_1DED4EC70(0, &qword_1EBAA64F8, MEMORY[0x1E4FBB320]);
    sub_1DED4ECC0();
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DF15E7AC()
{
  unint64_t result = 0x73656C7572;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C6F6F706572;
      break;
    case 2:
      unint64_t result = 0x6E69576863746566;
      break;
    case 3:
      unint64_t result = 0x456F54706D616C63;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF15E868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF15ECE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF15E890(uint64_t a1)
{
  unint64_t v2 = sub_1DF15E93C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF15E8CC(uint64_t a1)
{
  unint64_t v2 = sub_1DF15E93C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF15E908@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1DF15E114(a1, a2);
}

uint64_t sub_1DF15E920(void *a1)
{
  return sub_1DF15E494(a1);
}

unint64_t sub_1DF15E93C()
{
  unint64_t result = qword_1EBAF7FA0;
  if (!qword_1EBAF7FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF7FA0);
  }
  return result;
}

void sub_1DF15E990(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF15E93C();
    unint64_t v7 = a3(a1, &type metadata for LegacyLocalNewsTodayFeedGroupKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF15E9F4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TodayFeedServiceConfig();
  sub_1DEA2BBE8();
  if ((sub_1DFDF80C0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for LegacyLocalNewsTodayFeedGroupKnobs();
  if ((sub_1DFDF8380() & 1) == 0
    || *(double *)(a1 + v4[6]) != *(double *)(a2 + v4[6])
    || *(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7]))
  {
    return 0;
  }
  uint64_t v6 = v4[8];
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);
  return sub_1DF64E7F4(v7, v8);
}

unsigned char *storeEnumTagSinglePayload for LegacyLocalNewsTodayFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF15EBA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyLocalNewsTodayFeedGroupKnobs.CodingKeys()
{
  return &type metadata for LegacyLocalNewsTodayFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DF15EBE0()
{
  unint64_t result = qword_1EAC28D90;
  if (!qword_1EAC28D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28D90);
  }
  return result;
}

unint64_t sub_1DF15EC38()
{
  unint64_t result = qword_1EBAF7FB0;
  if (!qword_1EBAF7FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF7FB0);
  }
  return result;
}

unint64_t sub_1DF15EC90()
{
  unint64_t result = qword_1EBAF7FA8;
  if (!qword_1EBAF7FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF7FA8);
  }
  return result;
}

uint64_t sub_1DF15ECE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F6F706572 && a2 == 0xE600000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E69576863746566 && a2 == 0xEB00000000776F64 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x456F54706D616C63 && a2 == 0xEE006E6F69746964 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DFECAA00)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t destroy for WelcomeModel(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WelcomeModel(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  uint64_t v7 = *(void **)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v7;
  uint64_t v9 = *(void **)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  a1[8] = v9;
  a1[9] = v8;
  uint64_t v10 = *(void *)(a2 + 88);
  a1[10] = *(void *)(a2 + 80);
  a1[11] = v10;
  uint64_t v11 = *(void *)(a2 + 104);
  a1[12] = *(void *)(a2 + 96);
  a1[13] = v11;
  uint64_t v12 = *(void *)(a2 + 120);
  a1[14] = *(void *)(a2 + 112);
  a1[15] = v12;
  a1[16] = *(void *)(a2 + 128);
  id v13 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = v7;
  id v15 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WelcomeModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a2 + 56);
  uint64_t v8 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 64);
  uint64_t v11 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v10;
  id v12 = v10;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WelcomeModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  uint64_t v8 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeModel()
{
  return &type metadata for WelcomeModel;
}

uint64_t sub_1DF15F344()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

void sub_1DF15F444(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v41 = objc_msgSend(self, sel_welcomeToNewsIcon);
  if (v41)
  {
    uint64_t v6 = sub_1DF15F344();
    uint64_t v39 = v7;
    uint64_t v40 = v6;
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v9 = self;
    id v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v11 = sub_1DFDE6ED0();
    uint64_t v37 = v12;
    uint64_t v38 = v11;

    id v13 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEE33E0);
    uint64_t v14 = sub_1DFDE6ED0();
    uint64_t v35 = v15;
    uint64_t v36 = v14;

    id v34 = a2;
    id v33 = a1;
    id v16 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEE3480);
    uint64_t v17 = sub_1DFDE6ED0();
    uint64_t v31 = v18;
    uint64_t v32 = v17;

    id v19 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEE34C0);
    uint64_t v20 = sub_1DFDE6ED0();
    uint64_t v22 = v21;

    id v23 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEE3570);
    uint64_t v24 = sub_1DFDE6ED0();
    uint64_t v26 = v25;

    id v27 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEE35D0);
    uint64_t v28 = sub_1DFDE6ED0();
    uint64_t v30 = v29;

    *a3 = v41;
    a3[1] = v40;
    a3[2] = v39;
    a3[3] = v38;
    a3[4] = v37;
    a3[5] = v36;
    a3[6] = v35;
    a3[7] = v34;
    a3[8] = v33;
    a3[9] = v32;
    a3[10] = v31;
    a3[11] = v20;
    a3[12] = v22;
    a3[13] = v24;
    a3[14] = v26;
    a3[15] = v28;
    a3[16] = v30;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DF15F7DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v37 = a8;
  uint64_t v38 = a7;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v39 = a4;
  uint64_t v40 = a3;
  uint64_t v33 = a2;
  uint64_t v11 = type metadata accessor for NewspaperTodayFeedGroupConfigData();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v33 - v15;
  uint64_t v17 = (int *)type metadata accessor for NewspaperTodayFeedGroupEmitter();
  uint64_t v18 = a9 + v17[13];
  if (qword_1EBACBF30 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1DFDF01D0();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EBB62C00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v20, v19);
  sub_1DEA48DA8();
  uint64_t v22 = v21;
  uint64_t v34 = *(void *)(v21 - 8);
  (*(void (**)(uint64_t, void *, uint64_t))(v34 + 16))(a9, a1, v21);
  sub_1DFDF73B0();
  id v23 = (uint64_t *)&v16[*(int *)(v11 + 24)];
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  swift_bridgeObjectRetain();
  sub_1DE9EA734((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  sub_1DF16B504(v24, v25, v33, (char *)(a9 + v17[5]));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DE94F204(v40, a9 + v17[6]);
  sub_1DE94F204(v39, a9 + v17[7]);
  uint64_t v26 = v36;
  *(void *)(a9 + v17[8]) = v35;
  *(void *)(a9 + v17[9]) = v26;
  sub_1DE94F204(v38, a9 + v17[10]);
  sub_1DE94F204(v37, a9 + v17[11]);
  swift_unknownObjectRetain();
  id v27 = v26;
  uint64_t v36 = a1;
  sub_1DFDF73B0();
  uint64_t v28 = *(void *)&v14[*(int *)(v11 + 24) + 8];
  swift_bridgeObjectRetain();
  sub_1DE9EA734((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  if (v28)
  {
    uint64_t v41 = 0x657061707377654ELL;
    unint64_t v42 = 0xEB00000000282072;
    sub_1DFDFDE90();
    swift_bridgeObjectRelease();
    sub_1DFDFDE90();
    swift_unknownObjectRelease();

    uint64_t v30 = v41;
    unint64_t v29 = v42;
  }
  else
  {
    swift_unknownObjectRelease();

    unint64_t v29 = 0xE900000000000072;
    uint64_t v30 = 0x657061707377654ELL;
  }
  __swift_destroy_boxed_opaque_existential_1(v37);
  __swift_destroy_boxed_opaque_existential_1(v38);
  __swift_destroy_boxed_opaque_existential_1(v39);
  __swift_destroy_boxed_opaque_existential_1(v40);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v34 + 8))(v36, v22);
  uint64_t v32 = (uint64_t *)(a9 + v17[12]);
  *uint64_t v32 = v30;
  v32[1] = v29;
  return result;
}

double sub_1DF15FB60@<D0>(_OWORD *a1@<X8>)
{
  sub_1DEA51414(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDEE390();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v34 = (char *)&v30 - v10;
  uint64_t v11 = type metadata accessor for NewspaperTodayFeedGroupConfigData();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA48DA8();
  sub_1DFDF73B0();
  uint64_t v15 = *(void *)&v14[*(int *)(v12 + 100)];
  swift_bridgeObjectRetain();
  sub_1DE9EA734((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  if (v15)
  {
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v31 = v1;
      uint64_t v32 = a1;
      uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      uint64_t v18 = (void (**)(char *, char *, uint64_t))(v35 + 32);
      swift_bridgeObjectRetain();
      uint64_t v30 = v15;
      uint64_t v19 = v15 + 40;
      unint64_t v20 = MEMORY[0x1E4FBC860];
      uint64_t v33 = v9;
      do
      {
        swift_bridgeObjectRetain();
        sub_1DFDEE360();
        if ((*v17)(v5, 1, v6) == 1)
        {
          sub_1DE9EA734((uint64_t)v5, (uint64_t (*)(void))sub_1DEA51414);
        }
        else
        {
          uint64_t v21 = *v18;
          uint64_t v22 = v34;
          (*v18)(v34, v5, v6);
          v21(v9, v22, v6);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v20 = sub_1DEA51674(0, *(void *)(v20 + 16) + 1, 1, v20);
          }
          unint64_t v24 = *(void *)(v20 + 16);
          unint64_t v23 = *(void *)(v20 + 24);
          if (v24 >= v23 >> 1) {
            unint64_t v20 = sub_1DEA51674(v23 > 1, v24 + 1, 1, v20);
          }
          *(void *)(v20 + 16) = v24 + 1;
          unint64_t v25 = v20
              + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))
              + *(void *)(v35 + 72) * v24;
          uint64_t v9 = v33;
          v21((char *)v25, v33, v6);
        }
        v19 += 16;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease_n();
      uint64_t v26 = type metadata accessor for NewspaperTodayFeedGroupEmitter();
      uint64_t v27 = *__swift_project_boxed_opaque_existential_1((void *)(v31 + *(int *)(v26 + 44)), *(void *)(v31 + *(int *)(v26 + 44) + 24));
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v27;
      *(void *)(v28 + 24) = v20;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1DFDEE310();
      swift_bridgeObjectRelease();
      swift_release();
      a1 = v32;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1DF15FF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1DEB7BED8;
  return sub_1DF15FFC4(a1, a2);
}

uint64_t sub_1DF15FFC4(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  sub_1DEA6F140(0);
  v3[6] = swift_task_alloc();
  type metadata accessor for NewspaperTodayFeedGroupConfigData();
  v3[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF160084, 0, 0);
}

uint64_t sub_1DF160084()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  sub_1DEA48DA8();
  sub_1DFDF73B0();
  sub_1DF16B49C(v1, v2, (uint64_t (*)(void))sub_1DEA6F140);
  sub_1DE9EA734(v1, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  uint64_t v3 = sub_1DFDFAA20();
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  sub_1DE9EA734(v2, (uint64_t (*)(void))sub_1DEA6F140);
  if (v4 == 1)
  {
    uint64_t v5 = sub_1DFDF8510();
    sub_1DEA4E000((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    *uint64_t v6 = 0xD000000000000013;
    v6[1] = 0x80000001DFED53B0;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, *MEMORY[0x1E4F7F9A0], v5);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    uint64_t v9 = v0[5];
    uint64_t v10 = swift_task_alloc();
    v0[8] = v10;
    *(void *)(v10 + 16) = v9;
    uint64_t v11 = (void *)swift_task_alloc();
    v0[9] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1DF160320;
    return MEMORY[0x1F41356A0](v0 + 2, &type metadata for NewspaperTodayFeedGroupEmitterCursor, &unk_1EAC28DD0, v10, &type metadata for NewspaperTodayFeedGroupEmitterCursor);
  }
}

uint64_t sub_1DF160320()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1DF160610, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = v2[2];
    v2[11] = v3;
    int v4 = (void *)swift_task_alloc();
    v2[12] = v4;
    void *v4 = v2;
    v4[1] = sub_1DF1604B4;
    uint64_t v5 = v2[4];
    uint64_t v6 = v2[3];
    return sub_1DF1611FC(v6, v5, v3);
  }
}

uint64_t sub_1DF1604B4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_1DF160610()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DF160684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1DEB7BAE0;
  return sub_1DF160734(a1, a2, a3);
}

uint64_t sub_1DF160734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  sub_1DEAE1B58(0);
  v3[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TodayFeedGroup();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF160824, 0, 0);
}

uint64_t sub_1DF160824()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  sub_1DEA81EEC(0, (unint64_t *)&qword_1EBAF8660, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F80050]);
  uint64_t v5 = v4;
  sub_1DFDF92B0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DE9EA734(v0[6], (uint64_t (*)(void))sub_1DEAE1B58);
  }
  else
  {
    sub_1DF16B188(v0[6], v0[9], (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    sub_1DFDF88A0();
    uint64_t v8 = v0[9];
    char v10 = sub_1DEB617C8(v0[2]);
    swift_release();
    sub_1DE9EA734(v8, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    if (v10)
    {
      sub_1DF1696CC(v0[5], v0[3]);
      uint64_t v6 = 0;
      goto LABEL_4;
    }
  }
  uint64_t v6 = 1;
LABEL_4:
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v0[3], v6, 1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1DF160A48(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DF160A80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  a2[4] = sub_1DEA4E000(&qword_1EBAF8500, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs);
  a2[5] = sub_1DEA4E000(&qword_1EBAF84F8, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DF16B49C(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs);
}

uint64_t sub_1DF160B48()
{
  sub_1DEA35DD4(0);
  uint64_t v1 = sub_1DFDF8030();
  sub_1DF3DDFF0(MEMORY[0x1E4FBC860]);
  return v1;
}

uint64_t sub_1DF160BB0()
{
  sub_1DEA4E000((unint64_t *)&unk_1EBAB4ED0, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF160C1C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1DF160C3C, 0, 0);
}

uint64_t sub_1DF160C3C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *uint64_t v1 = sub_1DF160CA4();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void *sub_1DF160CA4()
{
  uint64_t v1 = v0;
  uint64_t v57 = sub_1DFDFA3B0();
  uint64_t v54 = *(void **)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NewspaperTodayFeedGroupConfigData();
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v52 - v7;
  sub_1DEA48DA8();
  uint64_t v10 = v9;
  sub_1DFDF73B0();
  uint64_t v11 = *(void *)&v8[*(int *)(v3 + 28)];
  swift_bridgeObjectRetain();
  sub_1DE9EA734((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  int64_t v12 = *(void *)(v11 + 16);
  uint64_t v55 = v0;
  if (v12)
  {
    uint64_t v52 = v10;
    uint64_t v53 = (void *)v3;
    uint64_t v58 = (void *)MEMORY[0x1E4FBC860];
    sub_1DEA9B358(0, v12, 0);
    uint64_t v13 = v58;
    uint64_t v14 = (uint64_t *)(v11 + 40);
    do
    {
      uint64_t v15 = *(v14 - 1);
      uint64_t v16 = *v14;
      uint64_t v58 = v13;
      unint64_t v18 = v13[2];
      unint64_t v17 = v13[3];
      swift_bridgeObjectRetain();
      if (v18 >= v17 >> 1)
      {
        sub_1DEA9B358(v17 > 1, v18 + 1, 1);
        uint64_t v13 = v58;
      }
      v14 += 2;
      void v13[2] = v18 + 1;
      uint64_t v19 = &v13[2 * v18];
      v19[4] = v15;
      v19[5] = v16;
      --v12;
    }
    while (v12);
    uint64_t v20 = swift_bridgeObjectRelease();
    uint64_t v1 = v55;
    uint64_t v3 = (uint64_t)v53;
  }
  else
  {
    uint64_t v20 = swift_bridgeObjectRelease();
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v20);
  *(&v52 - 2) = (uint64_t)v1;
  uint64_t v21 = (void *)sub_1DE9C661C((uint64_t)sub_1DF16B3BC, (uint64_t)(&v52 - 4), (uint64_t)v13);
  sub_1DFDF73B0();
  uint64_t v22 = *(void *)&v6[*(int *)(v3 + 32)];
  swift_bridgeObjectRetain();
  sub_1DE9EA734((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  int64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v53 = v21;
    uint64_t v58 = (void *)MEMORY[0x1E4FBC860];
    sub_1DEA9B358(0, v23, 0);
    unint64_t v24 = v58;
    unint64_t v25 = (uint64_t *)(v22 + 40);
    do
    {
      uint64_t v27 = *(v25 - 1);
      uint64_t v26 = *v25;
      uint64_t v58 = v24;
      unint64_t v29 = v24[2];
      unint64_t v28 = v24[3];
      swift_bridgeObjectRetain();
      if (v29 >= v28 >> 1)
      {
        sub_1DEA9B358(v28 > 1, v29 + 1, 1);
        unint64_t v24 = v58;
      }
      v25 += 2;
      _OWORD v24[2] = v29 + 1;
      uint64_t v30 = &v24[2 * v29];
      void v30[4] = v27;
      v30[5] = v26;
      --v23;
    }
    while (v23);
    uint64_t v31 = swift_bridgeObjectRelease();
    uint64_t v1 = v55;
    uint64_t v21 = v53;
  }
  else
  {
    uint64_t v31 = swift_bridgeObjectRelease();
    unint64_t v24 = (void *)MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v31);
  *(&v52 - 2) = (uint64_t)v1;
  uint64_t v32 = sub_1DE9C661C((uint64_t)sub_1DF16B3EC, (uint64_t)(&v52 - 4), (uint64_t)v24);
  uint64_t v58 = v21;
  sub_1DEA8C598(v32);
  uint64_t v33 = type metadata accessor for NewspaperTodayFeedGroupEmitter();
  __swift_project_boxed_opaque_existential_1(&v1[*(int *)(v33 + 40)], *(void *)&v1[*(int *)(v33 + 40) + 24]);
  uint64_t v34 = (void *)sub_1DFDF9410();
  swift_bridgeObjectRelease();
  uint64_t v58 = v34;
  swift_bridgeObjectRetain();
  sub_1DF169824(&v58);
  swift_bridgeObjectRelease();
  uint64_t v35 = v58;
  int64_t v36 = v58[2];
  if (v36)
  {
    uint64_t v58 = (void *)MEMORY[0x1E4FBC860];
    sub_1DEA9B358(0, v36, 0);
    uint64_t v38 = (char *)v54[2];
    uint64_t v37 = v54 + 2;
    uint64_t v54 = v35;
    uint64_t v55 = v38;
    uint64_t v39 = (char *)v35 + ((*((unsigned __int8 *)v37 + 64) + 32) & ~(unint64_t)*((unsigned __int8 *)v37 + 64));
    uint64_t v40 = v37[7];
    uint64_t v41 = (void (**)(char *, uint64_t))(v37 - 1);
    do
    {
      unint64_t v42 = v56;
      uint64_t v43 = v57;
      ((void (*)(char *, char *, uint64_t))v55)(v56, v39, v57);
      uint64_t v44 = sub_1DFDFA3A0();
      uint64_t v46 = v45;
      (*v41)(v42, v43);
      uint64_t v47 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA9B358(0, v47[2] + 1, 1);
        uint64_t v47 = v58;
      }
      unint64_t v49 = v47[2];
      unint64_t v48 = v47[3];
      if (v49 >= v48 >> 1)
      {
        sub_1DEA9B358(v48 > 1, v49 + 1, 1);
        uint64_t v47 = v58;
      }
      v47[2] = v49 + 1;
      uint64_t v50 = &v47[2 * v49];
      v50[4] = v44;
      v50[5] = v46;
      v39 += v40;
      --v36;
    }
    while (v36);
    swift_release();
  }
  else
  {
    swift_release();
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v47;
}

uint64_t sub_1DF1611FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = type metadata accessor for NewspaperTodayFeedGroupEmitter();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  uint64_t v5 = sub_1DFDF01D0();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  type metadata accessor for TodayFeedGroup();
  v4[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF16133C, 0, 0);
}

uint64_t sub_1DF16133C()
{
  sub_1DFDF87E0();
  type metadata accessor for TodayFeedServiceConfig();
  sub_1DEA2BBE8();
  unint64_t v1 = sub_1DFDF72E0();
  swift_bridgeObjectRelease();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEA9B358(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v27 = v0;
  uint64_t v4 = 0;
  uint64_t v5 = v28;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = (void *)MEMORY[0x1E01EE240](v4, v1);
    }
    else
    {
      uint64_t v6 = *(void **)(v1 + 8 * v4 + 32);
      swift_unknownObjectRetain();
    }
    id v7 = objc_msgSend(v6, sel_identifier, v27);
    uint64_t v8 = sub_1DFDFDD20();
    uint64_t v10 = v9;
    swift_unknownObjectRelease();

    unint64_t v12 = *(void *)(v28 + 16);
    unint64_t v11 = *(void *)(v28 + 24);
    if (v12 >= v11 >> 1) {
      sub_1DEA9B358(v11 > 1, v12 + 1, 1);
    }
    ++v4;
    *(void *)(v28 + 16) = v12 + 1;
    unint64_t v13 = v28 + 16 * v12;
    *(void *)(v13 + 32) = v8;
    *(void *)(v13 + 40) = v10;
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
  uint64_t v0 = v27;
LABEL_14:
  uint64_t v14 = v0[10];
  uint64_t v15 = sub_1DE9DB9D8(v5);
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1DFC6C5A0(v15, v14);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v0[20] = v16;
  v0[21] = v18;
  v0[22] = v20;
  if (v18)
  {
    uint64_t v21 = (void *)swift_task_alloc();
    v0[23] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1DF1616E0;
    uint64_t v22 = v0[19];
    uint64_t v23 = v0[9];
    return sub_1DF1623E4(v22, (uint64_t)v16, v18, v23);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_1DFDF8510();
    sub_1DEA4E000((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F7F990], v24);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
}

uint64_t sub_1DF1616E0()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DF161984;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1DF1617FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DF1617FC()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[8];
  if (v1)
  {
    sub_1DED57BEC();
    uint64_t v5 = (void *)(v3 + *(int *)(v4 + 48));
    sub_1DF16B49C(v2, v3, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    v5[3] = &type metadata for NewspaperTodayFeedGroupEmitterCursor;
    void *v5 = v1;
    sub_1DE9EA734(v2, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  }
  else
  {
    sub_1DF16B188(v0[19], v0[8], (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  }
  sub_1DEA81EEC(0, (unint64_t *)&qword_1EBABA1B0, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F7FA98]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1DF161984()
{
  uint64_t v68 = v0;
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[11];
  uint64_t v5 = v4 + *(int *)(v0[12] + 52);
  uint64_t v6 = *(void (**)(void, uint64_t, uint64_t))(v0[16] + 16);
  if (v2)
  {
    uint64_t v7 = v0[14];
    v6(v0[18], v5, v3);
    sub_1DF16B49C(v4, v7, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
    id v8 = v1;
    id v9 = v1;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DFDF01B0();
    os_log_type_t v11 = sub_1DFDFEA40();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = (void *)v0[24];
    unint64_t v14 = v0[21];
    if (v12)
    {
      uint64_t v54 = v0[20];
      uint64_t v59 = v0[16];
      uint64_t v15 = v0[14];
      uint64_t v61 = v0[15];
      uint64_t v63 = v0[18];
      uint64_t v16 = v0[12];
      uint64_t v65 = v2;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v56 = (void *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      v67[0] = v57;
      *(_DWORD *)uint64_t v17 = 136446722;
      uint64_t v18 = (uint64_t *)(v15 + *(int *)(v16 + 48));
      uint64_t v20 = *v18;
      unint64_t v19 = v18[1];
      swift_bridgeObjectRetain();
      v0[5] = sub_1DEA5CAB8(v20, v19, v67);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      sub_1DE9EA734(v15, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
      *(_WORD *)(v17 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[6] = sub_1DEA5CAB8(v54, v14, v67);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 22) = 2114;
      id v21 = v13;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      v0[7] = v22;
      sub_1DFDFF680();
      *uint64_t v56 = v22;

      _os_log_impl(&dword_1DE913000, v10, v11, "%{public}s failed to form group for channel.  Trying the next one.  channel=%{public}s, error=%{public}@", (uint8_t *)v17, 0x20u);
      sub_1DEB7BBD4();
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v56, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v57, -1, -1);
      uint64_t v23 = v17;
      uint64_t v2 = v65;
      MEMORY[0x1E01EFA10](v23, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v63, v61);
    }
    else
    {
      uint64_t v40 = v0[18];
      uint64_t v41 = v0[15];
      uint64_t v42 = v0[16];
      sub_1DE9EA734(v0[14], (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    }
    uint64_t v43 = (void *)swift_task_alloc();
    v0[25] = v43;
    void *v43 = v0;
    v43[1] = sub_1DF162178;
    uint64_t v44 = v0[8];
    uint64_t v45 = v0[9];
    return sub_1DF1611FC(v44, v45, v2);
  }
  else
  {
    uint64_t v24 = v0[13];
    v6(v0[17], v5, v3);
    sub_1DF16B49C(v4, v24, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
    id v25 = v1;
    id v26 = v1;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1DFDF01B0();
    os_log_type_t v28 = sub_1DFDFEA40();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = (void *)v0[24];
    unint64_t v31 = v0[21];
    if (v29)
    {
      os_log_t log = (os_log_t)v0[20];
      uint64_t v62 = v0[16];
      uint64_t v64 = v0[15];
      uint64_t v66 = v0[17];
      uint64_t v33 = v0[12];
      uint64_t v32 = v0[13];
      uint64_t v34 = swift_slowAlloc();
      uint64_t v58 = (void *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      v67[0] = v60;
      *(_DWORD *)uint64_t v34 = 136446722;
      uint64_t v35 = (uint64_t *)(v32 + *(int *)(v33 + 48));
      uint64_t v37 = *v35;
      unint64_t v36 = v35[1];
      swift_bridgeObjectRetain();
      v0[2] = sub_1DEA5CAB8(v37, v36, v67);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      sub_1DE9EA734(v32, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
      *(_WORD *)(v34 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[3] = sub_1DEA5CAB8((uint64_t)log, v31, v67);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 22) = 2114;
      id v38 = v30;
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
      v0[4] = v39;
      sub_1DFDFF680();
      *uint64_t v58 = v39;

      _os_log_impl(&dword_1DE913000, v27, v28, "%{public}s failed to form group for channel.  Cursor exhausted.  channel=%{public}s, error=%{public}@", (uint8_t *)v34, 0x20u);
      sub_1DEB7BBD4();
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v58, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v60, -1, -1);
      MEMORY[0x1E01EFA10](v34, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v66, v64);
    }
    else
    {
      uint64_t v48 = v0[16];
      uint64_t v47 = v0[17];
      uint64_t v49 = v0[15];
      sub_1DE9EA734(v0[13], (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    }
    uint64_t v50 = (void *)v0[24];
    uint64_t v51 = sub_1DFDF8510();
    sub_1DEA4E000((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v51 - 8) + 104))(v52, *MEMORY[0x1E4F7F990], v51);
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v53 = (uint64_t (*)(void))v0[1];
    return v53();
  }
}

uint64_t sub_1DF162178()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1DF162334;
  }
  else {
    uint64_t v2 = sub_1DF16228C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DF16228C()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1DF162334()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1DF1623E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[107] = v4;
  v5[106] = a4;
  v5[105] = a3;
  v5[99] = a2;
  v5[93] = a1;
  uint64_t v6 = type metadata accessor for NewspaperTodayFeedGroupEmitter();
  v5[108] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[109] = v7;
  v5[110] = *(void *)(v7 + 64);
  v5[111] = swift_task_alloc();
  sub_1DEBFF4C8(0);
  v5[112] = swift_task_alloc();
  uint64_t v8 = sub_1DFDFAFE0();
  v5[113] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[114] = v9;
  v5[115] = *(void *)(v9 + 64);
  v5[116] = swift_task_alloc();
  v5[117] = swift_task_alloc();
  uint64_t v10 = sub_1DFDFD2D0();
  v5[118] = v10;
  v5[119] = *(void *)(v10 - 8);
  v5[120] = swift_task_alloc();
  uint64_t v11 = sub_1DFDFCAB0();
  v5[121] = v11;
  v5[122] = *(void *)(v11 - 8);
  v5[123] = swift_task_alloc();
  v5[124] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for ChannelHeadlineServiceResult();
  v5[125] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[126] = v13;
  v5[127] = *(void *)(v13 + 64);
  v5[128] = swift_task_alloc();
  v5[129] = swift_task_alloc();
  type metadata accessor for ChannelHeadlineServiceRequest();
  v5[130] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF1626C4, 0, 0);
}

uint64_t sub_1DF1626C4()
{
  sub_1DF1637EC(v0[99], v0[105], v0[106], v0[130]);
  uint64_t v1 = (void *)(v0[107] + *(int *)(v0[108] + 28));
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[131] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DF162874;
  uint64_t v3 = v0[130];
  uint64_t v4 = v0[129];
  return sub_1DF54FD38(v4, v3);
}

uint64_t sub_1DF162874()
{
  *(void *)(*(void *)v1 + 1056) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1DF163028;
  }
  else {
    uint64_t v2 = sub_1DF162988;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DF162988()
{
  uint64_t v1 = v0[132];
  uint64_t v2 = v0[129];
  uint64_t v3 = v0[123];
  sub_1DF163EC0(v0[124]);
  sub_1DF1645DC(v2, v3);
  if (v1)
  {
    uint64_t v4 = v0[130];
    uint64_t v5 = v0[129];
    (*(void (**)(void, void))(v0[122] + 8))(v0[124], v0[121]);
    sub_1DE9EA734(v5, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceResult);
    sub_1DE9EA734(v4, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    sub_1DF164AEC(v0[129], v0[120]);
    uint64_t v8 = v0[129];
    uint64_t v34 = v8;
    uint64_t v42 = v0[128];
    uint64_t v44 = v0[126];
    uint64_t v9 = v0[125];
    uint64_t v29 = v0[124];
    uint64_t v30 = v0[123];
    uint64_t v10 = v0[122];
    uint64_t v11 = v0[121];
    uint64_t v12 = v0[119];
    uint64_t v31 = v0[118];
    uint64_t v32 = v0[120];
    uint64_t v35 = v0[117];
    uint64_t v39 = v0[116];
    uint64_t v43 = v0[115];
    uint64_t v46 = v0[114];
    uint64_t v33 = v0[112];
    uint64_t v37 = v0[111];
    uint64_t v38 = v0[113];
    uint64_t v40 = v0[109];
    uint64_t v41 = v0[110];
    uint64_t v36 = v0[107];
    uint64_t v45 = v0[106];
    sub_1DE9DB7BC(0, (unint64_t *)&qword_1EBAEB000, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1DFE13CF0;
    *(void *)(v13 + 32) = *(void *)(v8 + *(int *)(v9 + 24));
    sub_1DFDFE250();
    unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1DEA73C24(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], MEMORY[0x1E4FBBE00]);
    uint64_t v15 = *(void *)(v10 + 72);
    unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1DFE0B750;
    unint64_t v18 = v17 + v16;
    unint64_t v19 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16);
    v19(v18, v29, v11);
    v19(v18 + v15, v30, v11);
    sub_1DEA73C24(0, &qword_1EBAEAFC0, MEMORY[0x1E4F81978], v14);
    unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1DFE0B250;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v21 + v20, v32, v31);
    uint64_t v22 = sub_1DFDF66A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v33, 1, 1, v22);
    swift_unknownObjectRetain();
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1DFC83088(MEMORY[0x1E4FBC860]);
    sub_1DFC83088(v23);
    sub_1DFC831BC(v23);
    sub_1DFC831D4(v23);
    sub_1DFC83308(v23);
    sub_1DFC83320(v23);
    sub_1DFDFAFD0();
    sub_1DF16B49C(v36, v37, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v39, v35, v38);
    sub_1DF16B49C(v34, v42, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceResult);
    unint64_t v24 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    unint64_t v25 = (v41 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = (*(unsigned __int8 *)(v46 + 80) + v25 + 8) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    unint64_t v27 = (v43 + *(unsigned __int8 *)(v44 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    uint64_t v28 = swift_allocObject();
    v0[133] = v28;
    sub_1DF16B188(v37, v28 + v24, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
    *(void *)(v28 + v25) = v45;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v46 + 32))(v28 + v26, v39, v38);
    sub_1DF16B188(v42, v28 + v27, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceResult);
    swift_retain();
    sub_1DFDFB620();
    swift_asyncLet_begin();
    return MEMORY[0x1F41881E0](v0 + 2, v0 + 87, sub_1DF16313C, v0 + 82);
  }
}

uint64_t sub_1DF163028()
{
  sub_1DE9EA734(*(void *)(v0 + 1040), (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DF16313C()
{
  *(void *)(v1 + 1072) = v0;
  if (v0) {
    return MEMORY[0x1F41881D0](v1 + 16, v1 + 696, sub_1DF16342C, v1 + 704);
  }
  else {
    return MEMORY[0x1F4188298](sub_1DF163180, 0, 0);
  }
}

uint64_t sub_1DF163180()
{
  uint64_t v1 = v0[134];
  uint64_t v2 = v0[129];
  uint64_t v3 = v0[106];
  uint64_t v4 = v0[93];
  swift_retain();
  sub_1DF166450(v3, v2, v4);
  v0[135] = v1;
  swift_release();
  if (v1)
  {
    uint64_t v5 = v0 + 94;
    uint64_t v6 = sub_1DF16360C;
  }
  else
  {
    uint64_t v5 = v0 + 100;
    uint64_t v6 = sub_1DF163260;
  }
  return MEMORY[0x1F41881D0](v0 + 2, v0 + 87, v6, v5);
}

uint64_t sub_1DF163260()
{
  return MEMORY[0x1F4188298](sub_1DF16327C, 0, 0);
}

uint64_t sub_1DF16327C()
{
  uint64_t v1 = v0[130];
  uint64_t v2 = v0[129];
  uint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  uint64_t v5 = v0[122];
  uint64_t v6 = v0[121];
  uint64_t v7 = v0[120];
  uint64_t v8 = v0[119];
  uint64_t v9 = v0[118];
  (*(void (**)(void))(v0[114] + 8))();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v4, v6);
  v10(v3, v6);
  sub_1DE9EA734(v2, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceResult);
  sub_1DE9EA734(v1, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceRequest);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1DF16342C()
{
  return MEMORY[0x1F4188298](sub_1DF163448, 0, 0);
}

uint64_t sub_1DF163448()
{
  uint64_t v1 = v0[130];
  uint64_t v2 = v0[129];
  uint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  uint64_t v5 = v0[122];
  uint64_t v6 = v0[121];
  uint64_t v7 = v0[120];
  uint64_t v8 = v0[119];
  uint64_t v9 = v0[118];
  (*(void (**)(void, void))(v0[114] + 8))(v0[117], v0[113]);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v4, v6);
  v10(v3, v6);
  sub_1DE9EA734(v2, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceResult);
  sub_1DE9EA734(v1, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceRequest);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1DF16360C()
{
  return MEMORY[0x1F4188298](sub_1DF163628, 0, 0);
}

uint64_t sub_1DF163628()
{
  uint64_t v1 = v0[130];
  uint64_t v2 = v0[129];
  uint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  uint64_t v5 = v0[122];
  uint64_t v6 = v0[121];
  uint64_t v7 = v0[120];
  uint64_t v8 = v0[119];
  uint64_t v9 = v0[118];
  (*(void (**)(void, void))(v0[114] + 8))(v0[117], v0[113]);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v4, v6);
  v10(v3, v6);
  sub_1DE9EA734(v2, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceResult);
  sub_1DE9EA734(v1, (uint64_t (*)(void))type metadata accessor for ChannelHeadlineServiceRequest);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1DF1637EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v64 = a4;
  uint64_t v65 = a2;
  uint64_t v63 = a1;
  uint64_t v6 = sub_1DFDF9D80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF166DA8(a3);
  id v68 = v10;
  uint64_t v11 = v4 + *(int *)(type metadata accessor for NewspaperTodayFeedGroupEmitter() + 20);
  uint64_t v12 = type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v14 = v7 + 8;
  uint64_t v13 = v15;
  v15(v9, v6);
  uint64_t v70 = v80;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v15(v9, v6);
  uint64_t v62 = v79;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v15(v9, v6);
  uint64_t v61 = v78;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v15(v9, v6);
  uint64_t v60 = v77;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v15(v9, v6);
  uint64_t v59 = v76;
  uint64_t v67 = v12;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v15(v9, v6);
  uint64_t v16 = v75;
  unint64_t v17 = v69;
  sub_1DFDF88A0();
  if (v17)
  {

    return swift_bridgeObjectRelease();
  }
  uint64_t v58 = v16;
  uint64_t v57 = *(void *)(v74 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_headlines + 16);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v66 = a3;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v13(v9, v6);
  int v19 = v73;
  sub_1DFDF88A0();
  uint64_t v53 = v14;
  uint64_t v55 = 0;
  unint64_t v20 = *(void *)(v72 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_headlines);
  swift_bridgeObjectRetain();
  swift_release();
  unint64_t v69 = v20;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v22 = v70;
  uint64_t v56 = v6;
  uint64_t v54 = v13;
  int v52 = v19;
  if (v21)
  {
    uint64_t v51 = v11;
    uint64_t v71 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEA9B358(0, v21 & ~(v21 >> 63), 0);
    if (v21 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v23 = 0;
    uint64_t v24 = v71;
    unint64_t v25 = v69;
    unint64_t v26 = v69 & 0xC000000000000001;
    do
    {
      if (v26)
      {
        unint64_t v27 = (void *)MEMORY[0x1E01EE240](v23);
      }
      else
      {
        unint64_t v27 = *(void **)(v25 + 8 * v23 + 32);
        swift_unknownObjectRetain();
      }
      id v28 = objc_msgSend(v27, sel_identifier);
      uint64_t v29 = sub_1DFDFDD20();
      uint64_t v31 = v30;
      swift_unknownObjectRelease();

      uint64_t v71 = v24;
      unint64_t v33 = *(void *)(v24 + 16);
      unint64_t v32 = *(void *)(v24 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1DEA9B358(v32 > 1, v33 + 1, 1);
        uint64_t v24 = v71;
      }
      ++v23;
      *(void *)(v24 + 16) = v33 + 1;
      uint64_t v34 = v24 + 16 * v33;
      *(void *)(v34 + 32) = v29;
      *(void *)(v34 + 40) = v31;
      unint64_t v25 = v69;
      uint64_t v22 = v70;
    }
    while (v21 != v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x1E4FBC860];
  }
  uint64_t v35 = sub_1DE9DB9D8(v24);
  swift_bridgeObjectRelease();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v54(v9, v56);
  char v36 = v71;
  uint64_t v37 = (int *)type metadata accessor for ChannelHeadlineServiceRequest();
  uint64_t v38 = v64;
  uint64_t v39 = v64 + v37[16];
  uint64_t v40 = *MEMORY[0x1E4F7FEB8];
  uint64_t v41 = sub_1DFDF9170();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
  sub_1DFDF87F0();
  uint64_t v42 = *(void *)(v72 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig);
  swift_unknownObjectRetain();
  swift_release();
  if (qword_1EBAC0170 != -1) {
    swift_once();
  }
  uint64_t v43 = (void *)qword_1EBB628A8;
  uint64_t v44 = (void *)*MEMORY[0x1E4F7E020];
  uint64_t v45 = v65;
  *(void *)uint64_t v38 = v63;
  *(void *)(v38 + 8) = v45;
  *(void *)(v38 + 16) = v68;
  *(void *)(v38 + 24) = v22;
  *(unsigned char *)(v38 + 32) = 0;
  uint64_t v46 = v61;
  *(void *)(v38 + 40) = v62;
  *(void *)(v38 + 48) = v46;
  uint64_t v47 = v59;
  *(void *)(v38 + 56) = v60;
  *(void *)(v38 + 64) = v47;
  uint64_t v48 = v57;
  *(void *)(v38 + 72) = v58;
  *(void *)(v38 + 80) = v48;
  *(unsigned char *)(v38 + 88) = v52;
  *(void *)(v38 + 96) = v35;
  *(unsigned char *)(v38 + 104) = v36;
  *(void *)(v38 + v37[17]) = v42;
  *(void *)(v38 + v37[18]) = v43;
  *(void *)(v38 + v37[19]) = v44;
  id v49 = v43;
  id v50 = v44;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DF163EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v43 = type metadata accessor for NewspaperTodayFeedGroupEmitter();
  MEMORY[0x1F4188790](v43);
  uint64_t v44 = (uint64_t)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1DFDF01D0();
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1DFDFA640();
  uint64_t v4 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDFB0C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v41 - v12;
  sub_1DEA73C24(0, &qword_1EBAC0040, MEMORY[0x1E4F80E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = type metadata accessor for NewspaperTodayFeedGroupConfigData();
  uint64_t v18 = v17 - 8;
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA48DA8();
  sub_1DFDF73B0();
  sub_1DEABF2CC((uint64_t)&v20[*(int *)(v18 + 48)], (uint64_t)v16);
  sub_1DE9EA734((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  uint64_t v21 = sub_1DFDFB5C0();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v21) != 1)
  {
    int v23 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v16, v21);
    if (v23 == *MEMORY[0x1E4F80E58])
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v16, v21);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v16, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
      sub_1DFDFA620();
      unint64_t v24 = sub_1DEE181B8(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v26 = *(void *)(v24 + 16);
      unint64_t v25 = *(void *)(v24 + 24);
      if (v26 >= v25 >> 1) {
        unint64_t v24 = sub_1DEE181B8(v25 > 1, v26 + 1, 1, v24);
      }
      *(void *)(v24 + 16) = v26 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v24+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v26, v6, v42);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    else
    {
      if (v23 != *MEMORY[0x1E4F80E50]) {
        (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v21);
      }
      uint64_t v27 = v43;
      uint64_t v28 = v45;
      uint64_t v29 = v46;
      uint64_t v30 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v46, v1 + *(int *)(v43 + 52), v47);
      uint64_t v31 = v44;
      sub_1DF16B49C(v1, v44, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
      unint64_t v32 = sub_1DFDF01B0();
      os_log_type_t v33 = sub_1DFDFEA40();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 136446210;
        uint64_t v50 = v35;
        char v36 = (uint64_t *)(v31 + *(int *)(v27 + 48));
        uint64_t v37 = *v36;
        unint64_t v38 = v36[1];
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_1DEA5CAB8(v37, v38, &v50);
        sub_1DFDFF680();
        swift_bridgeObjectRelease();
        sub_1DE9EA734(v31, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
        _os_log_impl(&dword_1DE913000, v32, v33, "%{public}s invalid subtitle value, skipping.", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01EFA10](v35, -1, -1);
        MEMORY[0x1E01EFA10](v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v28 + 8))(v46, v47);
      }
      else
      {
        sub_1DE9EA734(v31, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);

        (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
      }
    }
  }
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1DF11BA44(MEMORY[0x1E4FBC860]);
  sub_1DF11BB5C(v39);
  sub_1DF11BC90(v39);
  return sub_1DFDFCAA0();
}

uint64_t sub_1DF1645DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v44 = a1;
  uint64_t v39 = sub_1DFDFC900();
  uint64_t v45 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v40 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DFDF9D80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NewspaperTodayFeedGroupEmitter();
  type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v4 + 8);
  v7(v6, v3);
  uint64_t v8 = v46;
  uint64_t v9 = v44;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v7(v6, v3);
  uint64_t v10 = v46;
  uint64_t v11 = *(int *)(type metadata accessor for ChannelHeadlineServiceResult() + 28);
  uint64_t v12 = *(void *)(v9 + v11);
  unint64_t v13 = *(void *)(v12 + 16);
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v21 < v8)
    {
LABEL_3:
      uint64_t v14 = v8;
      uint64_t v15 = sub_1DFDF8510();
      sub_1DEA4E000((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
      swift_allocError();
      uint64_t v17 = v16;
      unint64_t v18 = *(void *)(*(void *)(v9 + v11) + 16);
      if (!(v18 >> 62))
      {
        uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
        *uint64_t v17 = v14;
        v17[1] = v19;
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4F7F9C8], v15);
        return swift_willThrow();
      }
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
  }
  else if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) < v8)
  {
    goto LABEL_3;
  }
  unint64_t v22 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1DEC7FDBC(v10, v22);
  uint64_t v25 = v24;
  uint64_t v17 = v26;
  unint64_t v28 = v27;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v29 = v28 >> 1;
  uint64_t v14 = (v28 >> 1) - (void)v17;
  if (__OFSUB__(v28 >> 1, v17))
  {
    __break(1u);
  }
  else
  {
    if (!v14)
    {
LABEL_18:
      swift_unknownObjectRelease();
      uint64_t v37 = MEMORY[0x1E4FBC860];
      sub_1DF11BA44(MEMORY[0x1E4FBC860]);
      sub_1DF11BB5C(v37);
      sub_1DF11BC90(v37);
      return sub_1DFDFCAA0();
    }
    uint64_t v46 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEDF697C(0, v14 & ~(v14 >> 63), 0);
    if ((v14 & 0x8000000000000000) == 0)
    {
      v38[1] = v23;
      uint64_t v15 = v46;
      LODWORD(v44) = *MEMORY[0x1E4F81600];
      uint64_t v42 = v45 + 32;
      uint64_t v43 = (void (**)(void *, void, uint64_t))(v45 + 104);
      if ((uint64_t)v17 <= v29) {
        uint64_t v30 = (uint64_t *)v29;
      }
      else {
        uint64_t v30 = v17;
      }
      int64_t v31 = (char *)v30 - (char *)v17;
      unint64_t v32 = (void *)(v25 + 8 * (void)v17);
      uint64_t v33 = v39;
      uint64_t v34 = v40;
      while (v31)
      {
        *uint64_t v34 = *v32;
        (*v43)(v34, v44, v33);
        uint64_t v46 = v15;
        unint64_t v36 = *(void *)(v15 + 16);
        unint64_t v35 = *(void *)(v15 + 24);
        uint64_t v17 = (uint64_t *)(v36 + 1);
        swift_unknownObjectRetain();
        if (v36 >= v35 >> 1)
        {
          sub_1DEDF697C(v35 > 1, v36 + 1, 1);
          uint64_t v15 = v46;
        }
        *(void *)(v15 + 16) = v17;
        (*(void (**)(unint64_t, void *, uint64_t))(v45 + 32))(v15+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v36, v34, v33);
        --v31;
        ++v32;
        if (!--v14) {
          goto LABEL_18;
        }
      }
      __break(1u);
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF164AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ChannelHeadlineServiceResult();
  unint64_t v6 = *(void *)(*(void *)(a1 + *(int *)(v5 + 28)) + 16);
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_14:
    uint64_t v19 = sub_1DE9DB9D8(v10);
    swift_bridgeObjectRelease();
    uint64_t v20 = type metadata accessor for ChannelSectionsGroupModel();
    MEMORY[0x1F4188790](v20);
    v22[2] = v19;
    uint64_t v21 = swift_bridgeObjectRetain();
    sub_1DEF1E570(v21, (void (*)(void, char *))sub_1DF16B3B4, (uint64_t)v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1DFDFD2C0();
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DFDFFBE0();
  if (!v7) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEA9B358(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v22[5] = v5;
    v22[6] = a1;
    v22[7] = v2;
    v22[8] = a2;
    uint64_t v9 = 0;
    uint64_t v10 = v23;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = (void *)MEMORY[0x1E01EE240](v9, v6);
      }
      else
      {
        uint64_t v11 = *(void **)(v6 + 8 * v9 + 32);
        swift_unknownObjectRetain();
      }
      id v12 = objc_msgSend(v11, sel_identifier);
      uint64_t v13 = sub_1DFDFDD20();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();

      uint64_t v23 = v10;
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DEA9B358(v16 > 1, v17 + 1, 1);
        uint64_t v10 = v23;
      }
      ++v9;
      *(void *)(v10 + 16) = v17 + 1;
      uint64_t v18 = v10 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF164D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  void v5[4] = a3;
  _OWORD v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1DF164D88, 0, 0);
}

uint64_t sub_1DF164D88()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for ChannelHeadlineServiceResult() + 24));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DF164E38;
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  return sub_1DF164FA8(v5, v4, v2);
}

uint64_t sub_1DF164E38(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    return MEMORY[0x1F4188298](sub_1DF164F84, 0, 0);
  }
}

uint64_t sub_1DF164F84()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DF164FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_1DEA90818();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  sub_1DEED9B3C(0);
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA73C24(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  v4[14] = swift_task_alloc();
  sub_1DEA73C24(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v7);
  v4[15] = swift_task_alloc();
  sub_1DEA73C24(0, &qword_1EBABA130, (uint64_t (*)(uint64_t))sub_1DEA35DD4, v7);
  v4[16] = swift_task_alloc();
  uint64_t v8 = sub_1DFDFB960();
  v4[17] = v8;
  v4[18] = *(void *)(v8 - 8);
  v4[19] = swift_task_alloc();
  sub_1DEED9A4C(0);
  v4[20] = swift_task_alloc();
  sub_1DEBFF44C(0);
  v4[21] = v9;
  v4[22] = *(void *)(v9 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  sub_1DEBFF418(0);
  v4[25] = swift_task_alloc();
  sub_1DEBFF4C8(0);
  v4[26] = swift_task_alloc();
  uint64_t v10 = sub_1DFDE7630();
  v4[27] = v10;
  v4[28] = *(void *)(v10 - 8);
  v4[29] = swift_task_alloc();
  sub_1DEA6F140(0);
  v4[30] = swift_task_alloc();
  type metadata accessor for NewspaperTodayFeedGroupConfigData();
  v4[31] = swift_task_alloc();
  uint64_t v11 = sub_1DFDFAA20();
  v4[32] = v11;
  v4[33] = *(void *)(v11 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DF16544C, 0, 0);
}

uint64_t sub_1DF16544C()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 248);
  sub_1DEA48DA8();
  sub_1DFDF73B0();
  sub_1DF16B49C(v3, v4, (uint64_t (*)(void))sub_1DEA6F140);
  sub_1DE9EA734(v3, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1) == 1)
  {
    sub_1DE9EA734(*(void *)(v0 + 240), (uint64_t (*)(void))sub_1DEA6F140);
    uint64_t v5 = sub_1DFDF8510();
    sub_1DEA4E000((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    *uint64_t v6 = 0xD000000000000013;
    v6[1] = 0x80000001DFED53B0;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, *MEMORY[0x1E4F7F9A0], v5);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void *)(v0 + 224);
    uint64_t v12 = *(void *)(v0 + 192);
    uint64_t v13 = *(void *)(v0 + 176);
    uint64_t v62 = *(void *)(v0 + 168);
    uint64_t v66 = *(void *)(v0 + 160);
    uint64_t v68 = *(void *)(v0 + 208);
    uint64_t v65 = *(void *)(v0 + 88);
    uint64_t v14 = *(void **)(v0 + 32);
    (*(void (**)(void))(*(void *)(v0 + 264) + 32))();
    sub_1DFDFF9B0();
    swift_bridgeObjectRelease();
    swift_getObjectType();
    id v15 = objc_msgSend(v14, sel_identifier);
    sub_1DFDFDD20();

    sub_1DFDFDE90();
    swift_bridgeObjectRelease();
    sub_1DFDFDE90();
    sub_1DFDE7620();
    sub_1DFDE7610();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    sub_1DFDFDE90();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v14, sel_identifier);
    sub_1DFDFDD20();

    uint64_t v17 = sub_1DFDF66A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v68, 1, 1, v17);
    sub_1DFDFA8A0();
    sub_1DFDFCC80();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v18(v12, v62);
    sub_1DEA73C24(0, &qword_1EAC28E18, (uint64_t (*)(uint64_t))sub_1DEED9B3C, MEMORY[0x1E4FBBE00]);
    unint64_t v19 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1DFE0B250;
    uint64_t v21 = v20 + v19;
    sub_1DF1A1A7C(v66);
    uint64_t v22 = type metadata accessor for ChannelSupergroupConfig();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v66, 1, v22) == 1)
    {
      uint64_t v24 = *(void *)(v0 + 48);
      uint64_t v23 = *(void *)(v0 + 56);
      sub_1DE9EA734(*(void *)(v0 + 160), (uint64_t (*)(void))sub_1DEED9A4C);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v24);
    }
    else
    {
      uint64_t v25 = *(void *)(v0 + 184);
      uint64_t v27 = *(void *)(v0 + 160);
      uint64_t v26 = *(void *)(v0 + 168);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 176) + 16))(v25, v27, v26);
      sub_1DE9EA734(v27, (uint64_t (*)(void))type metadata accessor for ChannelSupergroupConfig);
      sub_1DFDFCC60();
      v18(v25, v26);
    }
    uint64_t v28 = *(void *)(v0 + 96);
    uint64_t v29 = *(void *)(v0 + 104);
    uint64_t v30 = *(void *)(v0 + 48);
    uint64_t v31 = *(void *)(v0 + 56);
    sub_1DF16B49C(v21, v29, (uint64_t (*)(void))sub_1DEED9B3C);
    sub_1DF16B188(v29, v28, (uint64_t (*)(void))sub_1DEED9B3C);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30) == 1)
    {
      sub_1DE9EA734(*(void *)(v0 + 96), (uint64_t (*)(void))sub_1DEED9B3C);
      uint64_t v32 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v33 = *(void *)(v0 + 64);
      uint64_t v34 = *(void *)(v0 + 72);
      uint64_t v35 = *(void *)(v0 + 48);
      unint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 56) + 32);
      v36(v34, *(void *)(v0 + 96), v35);
      v36(v33, v34, v35);
      uint64_t v32 = MEMORY[0x1E4FBC860];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v32 = sub_1DEE1A2BC(0, *(void *)(v32 + 16) + 1, 1, v32);
      }
      unint64_t v38 = *(void *)(v32 + 16);
      unint64_t v37 = *(void *)(v32 + 24);
      if (v38 >= v37 >> 1) {
        uint64_t v32 = sub_1DEE1A2BC(v37 > 1, v38 + 1, 1, v32);
      }
      uint64_t v40 = *(void *)(v0 + 56);
      uint64_t v39 = *(void *)(v0 + 64);
      uint64_t v41 = *(void *)(v0 + 48);
      *(void *)(v32 + 16) = v38 + 1;
      v36(v32+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v38, v39, v41);
    }
    uint64_t v42 = *(void *)(v0 + 200);
    uint64_t v43 = *(void *)(v0 + 208);
    uint64_t v45 = *(void *)(v0 + 168);
    uint64_t v44 = *(void *)(v0 + 176);
    uint64_t v63 = *(void *)(v0 + 128);
    uint64_t v64 = *(void *)(v0 + 120);
    uint64_t v46 = *(void *)(v0 + 40);
    uint64_t v67 = *(void *)(v0 + 112);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1DF3DEDE0(v32);
    sub_1DFDFAA30();
    sub_1DEBFF494();
    sub_1DFDFCC70();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v42, 0, 1, v45);
    sub_1DFDFA860();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE9EA734(v42, (uint64_t (*)(void))sub_1DEBFF418);
    sub_1DE9EA734(v43, (uint64_t (*)(void))sub_1DEBFF4C8);
    uint64_t v47 = type metadata accessor for NewspaperTodayFeedGroupEmitter();
    uint64_t v48 = (void *)(v46 + *(int *)(v47 + 24));
    uint64_t v49 = v48[3];
    uint64_t v50 = v48[4];
    __swift_project_boxed_opaque_existential_1(v48, v49);
    uint64_t v51 = v46 + *(int *)(v47 + 20);
    sub_1DEA35DD4(0);
    uint64_t v53 = v52;
    uint64_t v54 = *(void *)(v52 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v63, v51, v52);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v63, 0, 1, v53);
    uint64_t v55 = sub_1DFDFC340();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v64, 1, 1, v55);
    *(unsigned char *)(v0 + 312) = 1;
    sub_1DEA81EEC(0, (unint64_t *)&unk_1EBAE9F40, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F81400]);
    swift_allocObject();
    swift_retain();
    sub_1DFDFC5C0();
    uint64_t v56 = sub_1DFDFB640();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v67, 1, 1, v56);
    uint64_t v57 = qword_1EBAC0170;
    (id)*MEMORY[0x1E4F7E020];
    if (v57 != -1) {
      swift_once();
    }
    (id)qword_1EBB628A8;
    sub_1DFDFB930();
    uint64_t v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v58;
    *uint64_t v58 = v0;
    v58[1] = sub_1DF165FA8;
    uint64_t v59 = *(void *)(v0 + 272);
    uint64_t v60 = *(void *)(v0 + 152);
    uint64_t v61 = *(void *)(v0 + 24);
    return MEMORY[0x1F4136D58](v59, v61, v60, v49, v50);
  }
}

uint64_t sub_1DF165FA8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 144);
  v4[37] = v1;
  swift_task_dealloc();
  uint64_t v6 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v7 = v4[19];
  uint64_t v8 = v4[17];
  if (v1)
  {
    (*v6)(v7, v8);
    uint64_t v9 = sub_1DF1662CC;
  }
  else
  {
    v4[38] = a1;
    (*v6)(v7, v8);
    uint64_t v9 = sub_1DF166134;
  }
  return MEMORY[0x1F4188298](v9, 0, 0);
}

uint64_t sub_1DF166134()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[32];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[33] + 8);
  v3(v0[34], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v5 = v0[38];
  return v4(v5);
}

uint64_t sub_1DF1662CC()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[32];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[33] + 8);
  v3(v0[34], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1DF166450@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v58 = a2;
  uint64_t v56 = a1;
  uint64_t v3 = type metadata accessor for ChannelSectionsGroupSectionModel();
  uint64_t v52 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for NewspaperTodayFeedGroupConfigData();
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA73C24(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v55 = (char *)v49 - v9;
  uint64_t v10 = sub_1DFDF8C20();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v54 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)v49 - v13;
  uint64_t v14 = sub_1DFDF7010();
  uint64_t v59 = *(void *)(v14 - 8);
  uint64_t v60 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v68 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA48DA8();
  uint64_t v67 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for NewspaperGroupConfig();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v66 = (void *)((char *)v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = type metadata accessor for NewspaperGroup();
  MEMORY[0x1F4188790](v57);
  uint64_t v23 = (char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1DFDFA9F0();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDFB600();
  uint64_t v28 = sub_1DFDFA940();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  if (!v28) {
    goto LABEL_9;
  }
  uint64_t v71 = &unk_1F3BB1F00;
  uint64_t v29 = swift_dynamicCastObjCProtocolConditional();
  if (!v29)
  {
    swift_unknownObjectRelease();
LABEL_9:
    uint64_t v47 = sub_1DFDF8510();
    sub_1DEA4E000((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    *uint64_t v48 = 0xD00000000000001BLL;
    v48[1] = 0x80000001DFED53D0;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v47 - 8) + 104))(v48, *MEMORY[0x1E4F7F9A0], v47);
    return swift_willThrow();
  }
  uint64_t v50 = v29;
  uint64_t v51 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v69, v67);
  sub_1DEFE540C((uint64_t)v19, v66);
  swift_retain();
  sub_1DFDF7360();
  sub_1DFDF7360();
  type metadata accessor for NewspaperTodayFeedGroupEmitter();
  sub_1DEA35DD4(0);
  sub_1DFDF8080();
  sub_1DFDF8050();
  v49[1] = v30;
  sub_1DFDF80A0();
  type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  sub_1DEA81EEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  sub_1DFDF83A0();
  sub_1DFDF6F80();
  uint64_t v31 = v58 + *(int *)(type metadata accessor for ChannelHeadlineServiceResult() + 24);
  uint64_t v32 = *(void *)(v31 + *(int *)(type metadata accessor for ChannelSectionsGroupModel() + 24));
  uint64_t v33 = *(void *)(v32 + 16);
  uint64_t v34 = MEMORY[0x1E4FBC860];
  if (v33)
  {
    uint64_t v70 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DFDFFA70();
    uint64_t v35 = v32 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
    uint64_t v36 = *(void *)(v52 + 72);
    do
    {
      sub_1DF16B49C(v35, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ChannelSectionsGroupSectionModel);
      swift_unknownObjectRetain();
      sub_1DE9EA734((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ChannelSectionsGroupSectionModel);
      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
      v35 += v36;
      --v33;
    }
    while (v33);
    uint64_t v34 = v70;
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = (uint64_t)v61;
  sub_1DFDF73B0();
  uint64_t v38 = *(void *)(v37 + *(int *)(v62 + 92));
  swift_bridgeObjectRetain();
  sub_1DE9EA734(v37, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupConfigData);
  sub_1DF16B188((uint64_t)v66, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for NewspaperGroupConfig);
  uint64_t v39 = (int *)v57;
  uint64_t v40 = &v23[*(int *)(v57 + 20)];
  uint64_t v42 = v59;
  uint64_t v41 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v40, v68, v60);
  uint64_t v43 = v50;
  *(void *)&v23[v39[6]] = v50;
  *(void *)&v23[v39[7]] = v34;
  *(void *)&v23[v39[8]] = v38;
  uint64_t v44 = (uint64_t)v63;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v63, v40, v41);
  uint64_t v45 = v64;
  *(void *)(v44 + *(int *)(v64 + 20)) = v43;
  *(void *)(v44 + *(int *)(v45 + 24)) = v34;
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE9EA734((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for NewspaperGroup);
  *(void *)(v44 + *(int *)(v45 + 28)) = v38;
  sub_1DF16B188(v44, v65, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
  swift_unknownObjectRelease();
  type metadata accessor for TodayFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

void sub_1DF166DA8(uint64_t a1)
{
  uint64_t v2 = sub_1DFDF7A70();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v42 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF9DB0();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v41 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1DFDF9D80();
  uint64_t v52 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA73C24(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v47 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = type metadata accessor for TodayFeedServiceContext();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (id *)((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1DFDE7600();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v49 = (char *)&v41 - v20;
  uint64_t v51 = a1;
  sub_1DFDF87F0();
  sub_1DF16B49C(*(void *)&v53 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_context, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TodayFeedServiceContext);
  swift_release();
  id v21 = v14[1];
  sub_1DE9EA734((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TodayFeedServiceContext);
  id v22 = objc_msgSend(v21, sel_startDate);

  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v11, 1, 1, v15);
    goto LABEL_11;
  }
  sub_1DFDE7570();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v23(v11, v19, v15);
  uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
  v24(v11, 0, 1, v15);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v25(v11, 1, v15) == 1)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v26 = v49;
  v23(v49, v11, v15);
  uint64_t v27 = v47;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v47, v26, v15);
  v24(v27, 0, 1, v15);
  type metadata accessor for NewspaperTodayFeedGroupEmitter();
  type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  uint64_t v28 = v48;
  sub_1DFDF8870();
  uint64_t v29 = v27;
  sub_1DFDF8BF0();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v52 + 8);
  v52 += 8;
  v30(v28, v50);
  double v31 = v53;
  uint64_t v32 = 0;
  uint64_t v33 = v16;
  if (v25(v29, 1, v15) != 1)
  {
    uint64_t v32 = (void *)sub_1DFDE74D0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v29, v15);
  }
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E380]), sel_initWithStartDate_timeInterval_, v32, v31);

  if (!v34) {
    goto LABEL_12;
  }
  uint64_t v35 = v48;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v36 = v50;
  v30(v35, v50);
  if (LOBYTE(v53) != 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v49, v15);
    return;
  }
  sub_1DFDF8870();
  uint64_t v37 = v42;
  sub_1DFDF9D60();
  v30(v35, v36);
  uint64_t v38 = v41;
  uint64_t v39 = v49;
  sub_1DFDF7A60();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
  uint64_t v40 = (void *)sub_1DFDF9DA0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v44);
  if (objc_msgSend(v34, sel_intersectionWithDateRange_, v40))
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v15);

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_1DF1674A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1DFDFB0C0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1DFDFC900();
  uint64_t v11 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v13 = (void *)((char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  unint64_t v14 = swift_bridgeObjectRetain();
  unint64_t v15 = sub_1DEB1EA8C(v14, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = 0x2D6E6F6974636573;
  unint64_t v36 = 0xE800000000000000;
  uint64_t v34 = a1;
  sub_1DFDFFEE0();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  uint64_t v16 = v35;
  unint64_t v29 = v36;
  if (!(v15 >> 62))
  {
    uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v30 = v35;
    if (v17) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    sub_1DEA73C24(0, (unint64_t *)&unk_1EBABB690, MEMORY[0x1E4F808A0], MEMORY[0x1E4FBBE00]);
    sub_1DFDFA640();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0B750;
    sub_1DFDFB0A0();
    sub_1DFDFA620();
    type metadata accessor for ChannelSectionsGroupSectionModel();
    sub_1DFDFB090();
    sub_1DFDFA620();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1DF11BA44(MEMORY[0x1E4FBC860]);
    sub_1DF11BB5C(v26);
    sub_1DF11BC90(v26);
    return sub_1DFDFCAA0();
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  uint64_t v30 = v16;
  if (!v17) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEDF697C(0, v17 & ~(v17 >> 63), 0);
  if ((v17 & 0x8000000000000000) == 0)
  {
    v27[1] = v10;
    v27[2] = a2;
    v27[3] = a4;
    uint64_t v19 = 0;
    uint64_t v20 = v35;
    unint64_t v32 = v15 & 0xC000000000000001;
    uint64_t v33 = v17;
    unsigned int v31 = *MEMORY[0x1E4F81600];
    unint64_t v21 = v15;
    uint64_t v22 = v28;
    do
    {
      if (v32) {
        uint64_t v23 = MEMORY[0x1E01EE240](v19, v15);
      }
      else {
        uint64_t v23 = swift_unknownObjectRetain();
      }
      *uint64_t v13 = v23;
      (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, v31, v22);
      uint64_t v35 = v20;
      unint64_t v25 = *(void *)(v20 + 16);
      unint64_t v24 = *(void *)(v20 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1DEDF697C(v24 > 1, v25 + 1, 1);
        uint64_t v20 = v35;
      }
      ++v19;
      *(void *)(v20 + 16) = v25 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v11 + 32))(v20+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v25, v13, v22);
      unint64_t v15 = v21;
    }
    while (v33 != v19);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF16793C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (int *)type metadata accessor for NewspaperTodayFeedGroupEmitter();
  MEMORY[0x1F4188790](v6);
  uint64_t v47 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF01D0();
  uint64_t v46 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(v2 + v6[8]);
  id v12 = objc_msgSend(objc_msgSend(v11, sel_purchaseProvider), sel_purchasedTagIDs);
  uint64_t v13 = sub_1DFDFE5D0();

  LOBYTE(v12) = sub_1DEAAB55C(a1, a2, v13);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = v10;
  uint64_t v45 = v8;
  if (v12)
  {
    unsigned int v14 = 1;
    goto LABEL_25;
  }
  unint64_t v15 = (char *)objc_msgSend(objc_msgSend(v11, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v15, v15 + 1))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v49, (uint64_t)v51);
  if (!v52)
  {
    unint64_t v16 = a2;
    uint64_t v17 = a1;
    sub_1DE9E4C20((uint64_t)v51);
    goto LABEL_11;
  }
  unint64_t v16 = a2;
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
  uint64_t v17 = a1;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    id v18 = 0;
    unint64_t v20 = 0;
    goto LABEL_12;
  }
  id v18 = v48;
  id v19 = objc_msgSend(v48, sel_integerValue);
  if (v19 == (id)-1)
  {

    uint64_t v10 = v44;
    a1 = v17;
    a2 = v16;
    goto LABEL_23;
  }
  unint64_t v20 = (unint64_t)v19;
LABEL_12:
  if (objc_getAssociatedObject(v15, (const void *)~v20))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v49, (uint64_t)v51);
  if (!v52)
  {
    sub_1DE9E4C20((uint64_t)v51);
LABEL_20:

    uint64_t v10 = v44;
    a1 = v17;
    a2 = v16;
    if ((v20 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_23:
    id v23 = objc_msgSend(objc_msgSend(v11, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    unint64_t v24 = (void *)sub_1DFDFDCE0();
    unsigned int v14 = objc_msgSend(v23, sel_containsTagID_, v24);

    goto LABEL_24;
  }
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_20;
  }
  id v21 = v48;
  unsigned int v22 = objc_msgSend(v21, sel_integerValue);

  uint64_t v10 = v44;
  a1 = v17;
  a2 = v16;
  if (((v22 + 1) ^ (v20 + 1))) {
    goto LABEL_23;
  }
LABEL_21:
  unsigned int v14 = 0;
LABEL_24:
  uint64_t v8 = v45;
LABEL_25:
  uint64_t v25 = v46;
  uint64_t v42 = a1;
  uint64_t v26 = *(void **)(v3 + v6[9]);
  uint64_t v27 = (void *)sub_1DFDFDCE0();
  unsigned int v28 = objc_msgSend(v26, sel_hasSubscriptionToTagID_, v27);

  unsigned int v43 = v14;
  LODWORD(v46) = v14 & v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v10, v3 + v6[13], v8);
  uint64_t v29 = v47;
  sub_1DF16B49C(v3, v47, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_1DFDF01B0();
  os_log_type_t v31 = sub_1DFDFEA60();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = v29;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v51[0] = v41;
    *(_DWORD *)uint64_t v33 = 136447234;
    uint64_t v34 = (uint64_t *)(v32 + v6[12]);
    uint64_t v35 = v25;
    uint64_t v36 = *v34;
    unint64_t v37 = v34[1];
    swift_bridgeObjectRetain();
    *(void *)&long long v49 = sub_1DEA5CAB8(v36, v37, v51);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    sub_1DE9EA734(v32, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
    *(_WORD *)(v33 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v49 = sub_1DEA5CAB8(v42, a2, v51);
    sub_1DFDFF680();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 22) = 1024;
    LODWORD(v49) = v28;
    sub_1DFDFF680();
    *(_WORD *)(v33 + 28) = 1024;
    LODWORD(v49) = v43;
    sub_1DFDFF680();
    *(_WORD *)(v33 + 34) = 1024;
    uint64_t v38 = v46;
    LODWORD(v49) = v46;
    sub_1DFDFF680();
    _os_log_impl(&dword_1DE913000, v30, v31, "%{public}s emitter eligibility for channel=%s subscribed=%{BOOL}d access=%{BOOL}d eligible=%{BOOL}d", (uint8_t *)v33, 0x28u);
    uint64_t v39 = v41;
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v39, -1, -1);
    MEMORY[0x1E01EFA10](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v44, v45);
    return v38;
  }
  else
  {
    sub_1DE9EA734(v29, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
    return v46;
  }
}

uint64_t sub_1DF16803C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (int *)type metadata accessor for NewspaperTodayFeedGroupEmitter();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDF01D0();
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = *(void **)(v3 + v6[9]);
  uint64_t v13 = (void *)sub_1DFDFDCE0();
  unsigned int v14 = objc_msgSend(v12, sel_hasSubscriptionToTagID_, v13);

  uint64_t v35 = a1;
  unint64_t v15 = (void *)sub_1DFDFDCE0();
  unsigned int v16 = objc_msgSend(v12, sel_hasAutoFavoriteSubscriptionForTagID_, v15);

  unsigned int v34 = v14;
  uint64_t v17 = v14 | v16;
  uint64_t v18 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v11, v3 + v6[13], v9);
  sub_1DF16B49C(v3, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
  swift_bridgeObjectRetain_n();
  unint64_t v37 = v11;
  id v19 = sub_1DFDF01B0();
  os_log_type_t v20 = sub_1DFDFEA60();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    unsigned int v30 = v16;
    uint64_t v23 = v22;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v39 = v32;
    *(_DWORD *)uint64_t v23 = 136447234;
    uint64_t v33 = v9;
    unint64_t v24 = (uint64_t *)&v8[v6[12]];
    uint64_t v26 = *v24;
    unint64_t v25 = v24[1];
    int v31 = v21;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1DEA5CAB8(v26, v25, &v39);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    sub_1DE9EA734((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1DEA5CAB8(v35, a2, &v39);
    sub_1DFDFF680();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 1024;
    LODWORD(v38) = v34;
    sub_1DFDFF680();
    *(_WORD *)(v23 + 28) = 1024;
    LODWORD(v38) = v30;
    sub_1DFDFF680();
    *(_WORD *)(v23 + 34) = 1024;
    LODWORD(v38) = v17;
    sub_1DFDFF680();
    _os_log_impl(&dword_1DE913000, v19, (os_log_type_t)v31, "%{public}s emitter eligibility for channel=%s subscribed=%{BOOL}d autofavorite=%{BOOL}d eligible=%{BOOL}d", (uint8_t *)v23, 0x28u);
    uint64_t v27 = v32;
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v27, -1, -1);
    MEMORY[0x1E01EFA10](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v37, v33);
  }
  else
  {
    sub_1DE9EA734((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroupEmitter);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v37, v9);
  }
  return v17;
}

uint64_t *sub_1DF168450(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v42 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DEA48DA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEA35DD4(0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    id v12 = (int *)type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
    uint64_t v13 = v12[5];
    unsigned int v14 = &v9[v13];
    unint64_t v15 = &v10[v13];
    sub_1DEA81EEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
    *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
    *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
    *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
    *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
    *(void *)&v9[v12[11]] = *(void *)&v10[v12[11]];
    *(void *)&v9[v12[12]] = *(void *)&v10[v12[12]];
    *(void *)&v9[v12[13]] = *(void *)&v10[v12[13]];
    *(void *)&v9[v12[14]] = *(void *)&v10[v12[14]];
    *(void *)&v9[v12[15]] = *(void *)&v10[v12[15]];
    *(void *)&v9[v12[16]] = *(void *)&v10[v12[16]];
    *(void *)&v9[v12[17]] = *(void *)&v10[v12[17]];
    uint64_t v17 = a3[6];
    uint64_t v45 = (char *)a1 + v17;
    uint64_t v46 = (char *)a2 + v17;
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)a1 + v17 + 24) = v18;
    uint64_t v19 = v18;
    uint64_t v44 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v44(v45, v46, v19);
    uint64_t v20 = a3[7];
    long long v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)a1 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
    uint64_t v22 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v23 = *(void **)((char *)a2 + v22);
    *(uint64_t *)((char *)a1 + v22) = (uint64_t)v23;
    uint64_t v24 = a3[10];
    unint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    long long v27 = *(_OWORD *)((char *)a2 + v24 + 24);
    *(_OWORD *)((char *)a1 + v24 + 24) = v27;
    uint64_t v28 = v27;
    uint64_t v29 = **(void (***)(char *, char *, uint64_t))(v27 - 8);
    swift_unknownObjectRetain();
    id v30 = v23;
    v29(v25, v26, v28);
    uint64_t v31 = a3[11];
    long long v32 = *(_OWORD *)((char *)a2 + v31 + 24);
    *(_OWORD *)((char *)a1 + v31 + 24) = v32;
    (**(void (***)(void))(v32 - 8))();
    uint64_t v33 = a3[12];
    uint64_t v34 = a3[13];
    uint64_t v35 = (uint64_t *)((char *)a1 + v33);
    uint64_t v36 = (uint64_t *)((char *)a2 + v33);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = (char *)a1 + v34;
    uint64_t v39 = (char *)a2 + v34;
    uint64_t v40 = sub_1DFDF01D0();
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
    swift_bridgeObjectRetain();
    v41(v38, v39, v40);
  }
  return a1;
}

uint64_t sub_1DF168904(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA48DA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA35DD4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA81EEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[11]) = *(void *)(v9 + v11[11]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[13]) = *(void *)(v9 + v11[13]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[14]) = *(void *)(v9 + v11[14]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[15]) = *(void *)(v9 + v11[15]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[16]) = *(void *)(v9 + v11[16]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[17]) = *(void *)(v9 + v11[17]);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = *(void **)(a2 + v16);
  long long v18 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = v17;
  id v19 = v17;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[10]), (uint64_t *)(a2 + a3[10]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[11]), (uint64_t *)(a2 + a3[11]));
  uint64_t v20 = a3[12];
  long long v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *long long v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[13];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_1DFDF01D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t sub_1DF168C9C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA48DA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA35DD4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA81EEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  *(void *)(v8 + v11[11]) = *(void *)(v9 + v11[11]);
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  *(void *)(v8 + v11[13]) = *(void *)(v9 + v11[13]);
  *(void *)(v8 + v11[14]) = *(void *)(v9 + v11[14]);
  *(void *)(v8 + v11[15]) = *(void *)(v9 + v11[15]);
  *(void *)(v8 + v11[16]) = *(void *)(v9 + v11[16]);
  *(void *)(v8 + v11[17]) = *(void *)(v9 + v11[17]);
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  uint64_t v21 = a1 + v17;
  uint64_t v22 = a2 + v17;
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  uint64_t v24 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(void *)(v27 + 32) = *(void *)(v28 + 32);
  uint64_t v30 = a1 + v26;
  uint64_t v31 = a2 + v26;
  long long v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(void *)(v30 + 32) = *(void *)(v31 + 32);
  uint64_t v33 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = sub_1DFDF01D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
  return a1;
}

uint64_t sub_1DF168F58(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA48DA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA35DD4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  sub_1DEA81EEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  swift_release();
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  swift_release();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  swift_release();
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  swift_release();
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  swift_release();
  *(void *)(v8 + v11[11]) = *(void *)(v9 + v11[11]);
  swift_release();
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  swift_release();
  *(void *)(v8 + v11[13]) = *(void *)(v9 + v11[13]);
  swift_release();
  *(void *)(v8 + v11[14]) = *(void *)(v9 + v11[14]);
  swift_release();
  *(void *)(v8 + v11[15]) = *(void *)(v9 + v11[15]);
  swift_release();
  *(void *)(v8 + v11[16]) = *(void *)(v9 + v11[16]);
  swift_release();
  *(void *)(v8 + v11[17]) = *(void *)(v9 + v11[17]);
  swift_release();
  uint64_t v16 = a3[6];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  __swift_destroy_boxed_opaque_existential_1(a1 + v20);
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_unknownObjectRelease();
  uint64_t v24 = a3[9];
  uint64_t v25 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);

  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  __swift_destroy_boxed_opaque_existential_1(a1 + v26);
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(void *)(v27 + 32) = *(void *)(v28 + 32);
  uint64_t v30 = a3[11];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  __swift_destroy_boxed_opaque_existential_1(a1 + v30);
  long long v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(void *)(v31 + 32) = *(void *)(v32 + 32);
  uint64_t v34 = a3[12];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *uint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_1DFDF01D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t sub_1DF1692C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF1692D8);
}

uint64_t sub_1DF1692D8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA48DA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 24);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_1DFDF01D0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[13];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_1DF16945C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF169470);
}

uint64_t sub_1DF169470(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DEA48DA8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_1DFDF01D0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[13];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t sub_1DF1695F4()
{
  return sub_1DEA4E000(&qword_1EBAB4EC8, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroupEmitter);
}

uint64_t sub_1DF16963C()
{
  return sub_1DEA4E000((unint64_t *)&unk_1EBAB4ED0, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroupEmitter);
}

uint64_t sub_1DF169684()
{
  return sub_1DEA4E000((unint64_t *)&unk_1EBAF8218, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroupEmitter);
}

uint64_t sub_1DF1696CC(uint64_t a1, uint64_t a2)
{
  sub_1DEA81EEC(0, (unint64_t *)&qword_1EBAF8660, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, sub_1DEF692AC, MEMORY[0x1E4F80050]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF169774(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  _OWORD v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1DEB7BED8;
  return MEMORY[0x1F4188298](sub_1DF160C3C, 0, 0);
}

uint64_t sub_1DF169824(void **a1)
{
  uint64_t v2 = *(void *)(sub_1DFDFA3B0() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DEE48420(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1DF1698CC(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1DF1698CC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DFDFA3B0();
  uint64_t v143 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v140 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v155 = (char *)&v134 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v150 = (char *)&v134 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v151 = (char *)&v134 - v11;
  uint64_t v12 = a1[1];
  uint64_t result = sub_1DFDFFED0();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      return sub_1DF16A43C(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v136 = result;
  if (v12 < 2)
  {
    long long v19 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v142 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
    uint64_t v135 = MEMORY[0x1E4FBC860];
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_106:
      uint64_t v127 = v143;
      if (v21 >= 2)
      {
        uint64_t v128 = *a1;
        do
        {
          unint64_t v129 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v128) {
            goto LABEL_147;
          }
          uint64_t v130 = *(void *)&v19[16 * v129 + 32];
          uint64_t v131 = *(void *)&v19[16 * v21 + 24];
          sub_1DF16A72C(v128 + *(void *)(v127 + 72) * v130, v128 + *(void *)(v127 + 72) * *(void *)&v19[16 * v21 + 16], v128 + *(void *)(v127 + 72) * v131, v142);
          if (v2) {
            break;
          }
          if (v131 < v130) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v19 = sub_1DEE48394((uint64_t)v19);
          }
          if (v129 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v132 = &v19[16 * v129 + 32];
          *(void *)uint64_t v132 = v130;
          *((void *)v132 + 1) = v131;
          unint64_t v133 = *((void *)v19 + 2);
          if (v21 > v133) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v133 - v21));
          *((void *)v19 + 2) = v133 - 1;
          unint64_t v21 = v133 - 1;
        }
        while (v133 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v135 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v17 = v143;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DFDFE350();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = v143;
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v135 = v16;
    unint64_t v142 = v16 + v18;
  }
  uint64_t v20 = 0;
  uint64_t v148 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v149 = v17 + 16;
  uint64_t v158 = (uint64_t *)(v17 + 32);
  long long v19 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v153 = a1;
  uint64_t v154 = v4;
  while (1)
  {
    uint64_t v22 = v20 + 1;
    uint64_t v141 = v20;
    if (v20 + 1 >= v12)
    {
      uint64_t v35 = v20;
      uint64_t v37 = v20 + 1;
    }
    else
    {
      uint64_t v23 = *a1;
      uint64_t v157 = *(void *)(v143 + 72);
      uint64_t v24 = v157;
      uint64_t v146 = v23;
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v143 + 16);
      v25(v151, v23 + v157 * v22, v4);
      uint64_t v156 = v12;
      uint64_t v26 = v150;
      v25(v150, v23 + v24 * v141, v4);
      uint64_t v27 = v151;
      sub_1DFDFA390();
      double v29 = v28;
      sub_1DFDFA390();
      double v31 = v30;
      uint64_t v32 = *(void (**)(char *, uint64_t))(v143 + 8);
      long long v33 = v26;
      uint64_t v12 = v156;
      v32(v33, v4);
      uint64_t v34 = v27;
      uint64_t v35 = v141;
      v32(v34, v4);
      uint64_t v36 = v157;
      uint64_t v37 = v35 + 2;
      if (v35 + 2 < v12)
      {
        uint64_t v139 = v2;
        uint64_t v137 = v19;
        uint64_t v152 = v157 * v22;
        uint64_t v38 = v146;
        uint64_t v147 = v157 * v37;
        while (1)
        {
          uint64_t v39 = v37;
          uint64_t v40 = v151;
          v25(v151, v38 + v147, v4);
          uint64_t v41 = v150;
          v25(v150, v38 + v152, v4);
          sub_1DFDFA390();
          double v43 = v42;
          sub_1DFDFA390();
          BOOL v45 = v44 >= v43;
          v32(v41, v4);
          v32(v40, v4);
          if (v31 < v29 == v45) {
            break;
          }
          uint64_t v37 = v39 + 1;
          uint64_t v36 = v157;
          v38 += v157;
          if (v156 == v39 + 1)
          {
            uint64_t v12 = v156;
            uint64_t v37 = v156;
            long long v19 = v137;
            uint64_t v2 = v139;
            uint64_t v35 = v141;
            goto LABEL_24;
          }
        }
        long long v19 = v137;
        uint64_t v37 = v39;
        uint64_t v2 = v139;
        uint64_t v35 = v141;
        uint64_t v12 = v156;
        uint64_t v36 = v157;
      }
LABEL_24:
      a1 = v153;
      if (v31 < v29)
      {
        if (v37 < v35) {
          goto LABEL_141;
        }
        if (v35 < v37)
        {
          uint64_t v137 = v19;
          uint64_t v46 = 0;
          uint64_t v47 = v36 * (v37 - 1);
          uint64_t v48 = v37 * v36;
          uint64_t v49 = v35 * v36;
          do
          {
            if (v35 != v37 + v46 - 1)
            {
              uint64_t v139 = v2;
              uint64_t v50 = v146;
              if (!v146) {
                goto LABEL_146;
              }
              unint64_t v51 = v146 + v49;
              uint64_t v52 = v146 + v47;
              uint64_t v152 = *v158;
              ((void (*)(char *, uint64_t, uint64_t))v152)(v140, v146 + v49, v154);
              if (v49 < v47 || v51 >= v50 + v48)
              {
                uint64_t v4 = v154;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v4 = v154;
                if (v49 != v47) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v152)(v52, v140, v4);
              a1 = v153;
              uint64_t v2 = v139;
              uint64_t v36 = v157;
            }
            ++v35;
            --v46;
            v47 -= v36;
            v48 -= v36;
            v49 += v36;
          }
          while (v35 < v37 + v46);
          long long v19 = v137;
          uint64_t v35 = v141;
          uint64_t v12 = v156;
        }
      }
    }
    if (v37 < v12)
    {
      if (__OFSUB__(v37, v35)) {
        goto LABEL_139;
      }
      if (v37 - v35 < v136) {
        break;
      }
    }
LABEL_56:
    if (v37 < v35) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v152 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      long long v19 = sub_1DEE47AC8(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v76 = *((void *)v19 + 2);
    unint64_t v75 = *((void *)v19 + 3);
    unint64_t v21 = v76 + 1;
    if (v76 >= v75 >> 1) {
      long long v19 = sub_1DEE47AC8((char *)(v75 > 1), v76 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v77 = v19 + 32;
    uint64_t v78 = &v19[16 * v76 + 32];
    uint64_t v79 = v152;
    *(void *)uint64_t v78 = v35;
    *((void *)v78 + 1) = v79;
    if (v76)
    {
      a1 = v153;
      while (1)
      {
        unint64_t v80 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v85 = &v77[16 * v21];
          uint64_t v86 = *((void *)v85 - 8);
          uint64_t v87 = *((void *)v85 - 7);
          BOOL v91 = __OFSUB__(v87, v86);
          uint64_t v88 = v87 - v86;
          if (v91) {
            goto LABEL_123;
          }
          uint64_t v90 = *((void *)v85 - 6);
          uint64_t v89 = *((void *)v85 - 5);
          BOOL v91 = __OFSUB__(v89, v90);
          uint64_t v83 = v89 - v90;
          char v84 = v91;
          if (v91) {
            goto LABEL_124;
          }
          unint64_t v92 = v21 - 2;
          uint64_t v93 = &v77[16 * v21 - 32];
          uint64_t v95 = *(void *)v93;
          uint64_t v94 = *((void *)v93 + 1);
          BOOL v91 = __OFSUB__(v94, v95);
          uint64_t v96 = v94 - v95;
          if (v91) {
            goto LABEL_126;
          }
          BOOL v91 = __OFADD__(v83, v96);
          uint64_t v97 = v83 + v96;
          if (v91) {
            goto LABEL_129;
          }
          if (v97 >= v88)
          {
            uint64_t v115 = &v77[16 * v80];
            uint64_t v117 = *(void *)v115;
            uint64_t v116 = *((void *)v115 + 1);
            BOOL v91 = __OFSUB__(v116, v117);
            uint64_t v118 = v116 - v117;
            if (v91) {
              goto LABEL_133;
            }
            BOOL v108 = v83 < v118;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v109 = *((void *)v19 + 4);
            uint64_t v110 = *((void *)v19 + 5);
            BOOL v91 = __OFSUB__(v110, v109);
            uint64_t v102 = v110 - v109;
            char v103 = v91;
            goto LABEL_88;
          }
          uint64_t v82 = *((void *)v19 + 4);
          uint64_t v81 = *((void *)v19 + 5);
          BOOL v91 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          char v84 = v91;
        }
        if (v84) {
          goto LABEL_125;
        }
        unint64_t v92 = v21 - 2;
        uint64_t v98 = &v77[16 * v21 - 32];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v101 = __OFSUB__(v99, v100);
        uint64_t v102 = v99 - v100;
        char v103 = v101;
        if (v101) {
          goto LABEL_128;
        }
        uint64_t v104 = &v77[16 * v80];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v91 = __OFSUB__(v105, v106);
        uint64_t v107 = v105 - v106;
        if (v91) {
          goto LABEL_131;
        }
        if (__OFADD__(v102, v107)) {
          goto LABEL_132;
        }
        if (v102 + v107 >= v83)
        {
          BOOL v108 = v83 < v107;
LABEL_94:
          if (v108) {
            unint64_t v80 = v92;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v103) {
          goto LABEL_127;
        }
        uint64_t v111 = &v77[16 * v80];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v91 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v91) {
          goto LABEL_130;
        }
        if (v114 < v102) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v119 = v80 - 1;
        if (v80 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v120 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v121 = v19;
        uint64_t v122 = &v77[16 * v119];
        uint64_t v123 = *(void *)v122;
        unint64_t v124 = &v77[16 * v80];
        uint64_t v125 = *((void *)v124 + 1);
        sub_1DF16A72C(v120 + *(void *)(v143 + 72) * *(void *)v122, v120 + *(void *)(v143 + 72) * *(void *)v124, v120 + *(void *)(v143 + 72) * v125, v142);
        if (v2) {
          goto LABEL_117;
        }
        if (v125 < v123) {
          goto LABEL_120;
        }
        if (v80 > *((void *)v121 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v122 = v123;
        *(void *)&v77[16 * v119 + 8] = v125;
        unint64_t v126 = *((void *)v121 + 2);
        if (v80 >= v126) {
          goto LABEL_122;
        }
        long long v19 = v121;
        unint64_t v21 = v126 - 1;
        memmove(&v77[16 * v80], v124 + 16, 16 * (v126 - 1 - v80));
        *((void *)v121 + 2) = v126 - 1;
        a1 = v153;
        uint64_t v4 = v154;
        if (v126 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
    a1 = v153;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v20 = v152;
    if (v152 >= v12) {
      goto LABEL_106;
    }
  }
  if (__OFADD__(v35, v136)) {
    goto LABEL_142;
  }
  if (v35 + v136 >= v12) {
    uint64_t v53 = v12;
  }
  else {
    uint64_t v53 = v35 + v136;
  }
  if (v53 >= v35)
  {
    if (v37 != v53)
    {
      uint64_t v137 = v19;
      uint64_t v139 = v2;
      uint64_t v54 = *(void *)(v143 + 72);
      uint64_t v144 = *(void (**)(char *, uint64_t, uint64_t))(v143 + 16);
      uint64_t v145 = v54;
      uint64_t v55 = v54 * (v37 - 1);
      uint64_t v56 = v37 * v54;
      uint64_t v138 = v53;
      do
      {
        uint64_t v58 = 0;
        uint64_t v152 = v37;
        uint64_t v146 = v56;
        uint64_t v147 = v55;
        while (1)
        {
          uint64_t v59 = *a1;
          uint64_t v156 = v56 + v58;
          uint64_t v157 = v35;
          uint64_t v60 = v56 + v58 + v59;
          uint64_t v61 = v151;
          uint64_t v62 = v144;
          v144(v151, v60, v4);
          uint64_t v63 = v55 + v58 + v59;
          uint64_t v64 = a1;
          uint64_t v65 = v150;
          v62(v150, v63, v4);
          sub_1DFDFA390();
          double v67 = v66;
          sub_1DFDFA390();
          double v69 = v68;
          uint64_t v70 = *v148;
          (*v148)(v65, v4);
          v70(v61, v4);
          if (v69 >= v67) {
            break;
          }
          uint64_t v71 = *v64;
          if (!*v64) {
            goto LABEL_144;
          }
          uint64_t v56 = v146;
          uint64_t v55 = v147;
          uint64_t v72 = v71 + v147 + v58;
          unsigned __int8 v73 = (void (*)(uint64_t, char *, uint64_t))*v158;
          uint64_t v4 = v154;
          ((void (*)(char *, uint64_t, uint64_t))*v158)(v155, v71 + v146 + v58, v154);
          swift_arrayInitWithTakeFrontToBack();
          v73(v72, v155, v4);
          v58 -= v145;
          uint64_t v35 = v157 + 1;
          uint64_t v57 = v152;
          a1 = v153;
          if (v152 == v157 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v4 = v154;
        uint64_t v57 = v152;
        a1 = v64;
        uint64_t v56 = v146;
        uint64_t v55 = v147;
LABEL_49:
        uint64_t v37 = v57 + 1;
        v55 += v145;
        v56 += v145;
        uint64_t v35 = v141;
      }
      while (v37 != v138);
      uint64_t v37 = v138;
      uint64_t v2 = v139;
      long long v19 = v137;
    }
    goto LABEL_56;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1DFDFFBA0();
  __break(1u);
  return result;
}

uint64_t sub_1DF16A43C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v7 = sub_1DFDFA3B0();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  double v44 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v39 = (char *)&v31 - v11;
  uint64_t result = MEMORY[0x1F4188790](v10);
  uint64_t v38 = (char *)&v31 - v14;
  uint64_t v42 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v37 = v13 + 16;
    uint64_t v15 = *(void *)(v13 + 72);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v13 + 8);
    uint64_t v35 = a4;
    double v43 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v46 = v15 * (v42 - 1);
    uint64_t v40 = v15;
    uint64_t v16 = v15 * v42;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v45 = v33;
    uint64_t v41 = v16;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = v16 + v17 + *a4;
      uint64_t v20 = v38;
      unint64_t v21 = v36;
      v36(v38, v19, v7);
      uint64_t v22 = v39;
      v21(v39, v46 + v17 + v18, v7);
      a4 = v35;
      sub_1DFDFA390();
      double v24 = v23;
      sub_1DFDFA390();
      double v26 = v25;
      uint64_t v27 = *v34;
      (*v34)(v22, v7);
      uint64_t result = v27(v20, v7);
      uint64_t v16 = v41;
      if (v26 >= v24)
      {
LABEL_4:
        v46 += v40;
        v16 += v40;
        if (++v42 == v32) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v28 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v29 = v28 + v46 + v17;
      double v30 = *v43;
      (*v43)(v44, v28 + v41 + v17, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(v29, v44, v7);
      v17 -= v40;
      if (v42 == ++v45) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF16A72C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1DFDFA3B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  double v67 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  double v66 = (char *)&v59 - v12;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_71;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_72;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v70 = a1;
  unint64_t v69 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      unint64_t v19 = a3;
      uint64_t v20 = v17 * v14;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v36 = a4 + v20;
      unint64_t v68 = a4 + v20;
      unint64_t v70 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        unint64_t v38 = v19;
        uint64_t v39 = -v14;
        uint64_t v40 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
        uint64_t v65 = v9 + 16;
        uint64_t v61 = (void (**)(char *, uint64_t))(v9 + 8);
        uint64_t v62 = v40;
        unint64_t v60 = a4;
        unint64_t v63 = a1;
        uint64_t v41 = v66;
        do
        {
          unint64_t v64 = v38 + v39;
          uint64_t v42 = v8;
          unint64_t v43 = v38;
          uint64_t v44 = v8;
          uint64_t v45 = v62;
          v62(v41, v36 + v39, v42);
          unint64_t v46 = a2 + v39;
          uint64_t v47 = v67;
          v45(v67, a2 + v39, v44);
          uint64_t v8 = v44;
          sub_1DFDFA390();
          double v49 = v48;
          sub_1DFDFA390();
          double v51 = v50;
          uint64_t v52 = *v61;
          (*v61)(v47, v44);
          v52(v41, v44);
          if (v51 >= v49)
          {
            unint64_t v56 = v68;
            v68 += v39;
            unint64_t v38 = v64;
            if (v43 < v56 || v64 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = a2;
              unint64_t v54 = v60;
              unint64_t v55 = v63;
            }
            else
            {
              unint64_t v55 = v63;
              if (v43 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v46 = a2;
              unint64_t v54 = v60;
            }
          }
          else
          {
            unint64_t v38 = v64;
            if (v43 < a2 || v64 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v54 = v60;
              unint64_t v55 = v63;
            }
            else
            {
              BOOL v53 = v43 == a2;
              unint64_t v54 = v60;
              unint64_t v55 = v63;
              if (!v53) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v70 += v39;
          }
          unint64_t v36 = v68;
          if (v68 <= v54) {
            break;
          }
          a2 = v46;
        }
        while (v46 > v55);
      }
      goto LABEL_69;
    }
  }
  else
  {
    unint64_t v64 = a3;
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v14;
      if (a4 < a1 || a1 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v63 = a4 + v18;
      unint64_t v68 = a4 + v18;
      if (v18 >= 1 && a2 < v64)
      {
        uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
        uint64_t v65 = v9 + 16;
        double v23 = (void (**)(char *, uint64_t))(v9 + 8);
        double v24 = v66;
        do
        {
          v22(v24, a2, v8);
          double v25 = v67;
          v22(v67, a4, v8);
          sub_1DFDFA390();
          double v27 = v26;
          sub_1DFDFA390();
          double v29 = v28;
          double v30 = *v23;
          (*v23)(v25, v8);
          v30(v24, v8);
          unint64_t v31 = v70;
          if (v29 >= v27)
          {
            unint64_t v34 = v69 + v14;
            if (v70 < v69 || v70 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v70 != v69)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v69 = v34;
            unint64_t v32 = a2;
          }
          else
          {
            unint64_t v32 = a2 + v14;
            if (v70 < a2 || v70 >= v32)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v70 == a2)
            {
              unint64_t v31 = a2;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v70 = v31 + v14;
          a4 = v69;
          if (v69 >= v63) {
            break;
          }
          a2 = v32;
        }
        while (v32 < v64);
      }
LABEL_69:
      sub_1DEE47E7C(&v70, &v69, (uint64_t *)&v68);
      return 1;
    }
  }
LABEL_73:
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DF16ACD8()
{
  uint64_t v1 = (int *)(type metadata accessor for NewspaperTodayFeedGroupEmitter() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v21 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = sub_1DFDFAFE0();
  uint64_t v3 = *(void *)(v22 - 8);
  unint64_t v4 = (v21 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = (int *)(type metadata accessor for ChannelHeadlineServiceResult() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(*(void *)v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = v0 + v2;
  sub_1DEA48DA8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v2, v9);
  unint64_t v10 = v0 + v2 + v1[7];
  sub_1DEA35DD4(0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  unint64_t v12 = v10 + *(int *)(type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs() + 20);
  sub_1DEA81EEC(0, &qword_1EBABA160, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig, (uint64_t (*)(void))sub_1DEA2BBE8, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v8 + v1[8]);
  __swift_destroy_boxed_opaque_existential_1(v8 + v1[9]);
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v8 + v1[12]);
  __swift_destroy_boxed_opaque_existential_1(v8 + v1[13]);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8 + v1[15];
  uint64_t v15 = sub_1DFDF01D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v16 = v0 + v7 + v6[8];
  swift_unknownObjectRelease();
  unint64_t v17 = v16 + *(int *)(type metadata accessor for ChannelSectionsGroupModel() + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v18 = v17 + *(int *)(type metadata accessor for ChannelSectionsGroupSectionModel() + 40);
  uint64_t v19 = sub_1DFDE7220();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF16B188(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF16B1F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NewspaperTodayFeedGroupEmitter() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(sub_1DFDFAFE0() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ChannelHeadlineServiceResult() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + v5;
  uint64_t v13 = *(void *)(v1 + v6);
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  unint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *unint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_1DEB7BAE0;
  v16[2] = a1;
  return MEMORY[0x1F4188298](sub_1DF164D88, 0, 0);
}

uint64_t sub_1DF16B3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DF1674A0(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_1DF16B3BC(void *a1)
{
  return sub_1DF16B41C(a1, sub_1DF16793C) & 1;
}

uint64_t sub_1DF16B3EC(void *a1)
{
  return sub_1DF16B41C(a1, sub_1DF16803C) & 1;
}

uint64_t sub_1DF16B41C(void *a1, uint64_t (*a2)(void, void))
{
  return a2(*a1, a1[1]) & 1;
}

uint64_t sub_1DF16B45C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF16B49C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF16B504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  sub_1DEA48668(0, &qword_1EBABA168, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  sub_1DEA48668(0, &qword_1EBABA130, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v29 - v12;
  sub_1DF16BCF0();
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_1DEA4C7B8(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 1, 1, v23);
    sub_1DEA4C7B8(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
    return sub_1DFA8689C((uint64_t)v13, (uint64_t)v10, 0, 0, 0, 0, 0, 0, a4, 0, 0, 0, 0, 0, 0);
  }
  if (!*(void *)(a3 + 16))
  {
    uint64_t v26 = type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v16, 1, 1, v26);
LABEL_9:
    sub_1DEA4C7B8(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 1, 1, v27);
    sub_1DEA4C7B8(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
    sub_1DFA8689C((uint64_t)v13, (uint64_t)v10, 0, 0, 0, 0, 0, 0, a4, 0, 0, 0, 0, 0, 0);
    return sub_1DF16BD48((uint64_t)v16);
  }
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_1DEA6D930(a1, a2);
  if (v18)
  {
    unint64_t v19 = v17;
    uint64_t v20 = *(void *)(a3 + 56);
    uint64_t v21 = type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
    uint64_t v22 = *(void *)(v21 - 8);
    sub_1DF16BE08(v20 + *(void *)(v22 + 72) * v19, (uint64_t)v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
  }
  else
  {
    uint64_t v21 = type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v16, 1, v21) == 1) {
    goto LABEL_9;
  }
  return sub_1DF16BDA4((uint64_t)v16, (uint64_t)a4);
}

uint64_t sub_1DF16B9E0(void *a1, uint64_t a2)
{
  sub_1DEAB9E9C(0, &qword_1EBAA6888, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEACE7E8();
  sub_1DFE001A0();
  v10[1] = a2;
  sub_1DF16BBE0();
  sub_1DF16BC48();
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DF16BB40(uint64_t a1)
{
  unint64_t v2 = sub_1DEACE7E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF16BB7C(uint64_t a1)
{
  unint64_t v2 = sub_1DEACE7E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF16BBB8(void *a1)
{
  return sub_1DF16B9E0(a1, *v1);
}

uint64_t sub_1DF16BBD4(uint64_t *a1, uint64_t *a2)
{
  return sub_1DF508AA4(*a1, *a2);
}

void sub_1DF16BBE0()
{
  if (!qword_1EBAF86B0)
  {
    type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
    unint64_t v0 = sub_1DFDFDB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF86B0);
    }
  }
}

unint64_t sub_1DF16BC48()
{
  unint64_t result = qword_1EBAF86B8;
  if (!qword_1EBAF86B8)
  {
    sub_1DF16BBE0();
    sub_1DF16C0A4(&qword_1EBAF84F8, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF86B8);
  }
  return result;
}

void sub_1DF16BCF0()
{
  if (!qword_1EBAF8518)
  {
    type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF8518);
    }
  }
}

uint64_t sub_1DF16BD48(uint64_t a1)
{
  sub_1DF16BCF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF16BDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF16BE08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DF16BE6C(void *a1)
{
  sub_1DEAB9E9C(0, &qword_1EBABB2B8, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  unint64_t v8 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEACE7E8();
  sub_1DFE00190();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1DF16BBE0();
    sub_1DF16BFFC();
    sub_1DFDFFCD0();
    unint64_t v8 = v11;
    if (!v11) {
      unint64_t v8 = sub_1DF34B1FC(MEMORY[0x1E4FBC860]);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_1DF16BFFC()
{
  unint64_t result = qword_1EBAF86C0;
  if (!qword_1EBAF86C0)
  {
    sub_1DF16BBE0();
    sub_1DF16C0A4(&qword_1EBAF8500, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroupSubtypeKnobs);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF86C0);
  }
  return result;
}

uint64_t sub_1DF16C0A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewspaperTodayFeedGroupKnobs.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF16C188);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewspaperTodayFeedGroupKnobs.CodingKeys()
{
  return &type metadata for NewspaperTodayFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DF16C1C4()
{
  unint64_t result = qword_1EAC28E20;
  if (!qword_1EAC28E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28E20);
  }
  return result;
}

uint64_t sub_1DF16C218(uint64_t a1, uint64_t a2, int a3)
{
  int v50 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF16CDB0(0, (unint64_t *)&unk_1EBAC1020, MEMORY[0x1E4F7CDE0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v47 = (char *)&v40 - v7;
  uint64_t v8 = sub_1DFDEC370();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v42 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF16CDB0(0, (unint64_t *)&qword_1EBAD2420, MEMORY[0x1E4F7D3A0], v5);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v44 = (uint64_t)&v40 - v11;
  uint64_t v12 = sub_1DFDEC630();
  uint64_t v45 = *(void *)(v12 - 8);
  uint64_t v46 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7B338];
  sub_1DF16CDB0(0, (unint64_t *)&unk_1EBAA7190, MEMORY[0x1E4F7B338], v5);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = sub_1DFDEA260();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v40 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDE8960();
  sub_1DF16CE14((unint64_t *)&unk_1EBAC03A0, MEMORY[0x1E4F4AB90]);
  double v51 = "ntinueReadingPromptTracker";
  sub_1DFDE8390();
  uint64_t v20 = type metadata accessor for ContinueReadingPromptExposureData();
  sub_1DFDEC450();
  sub_1DF16CE14((unint64_t *)&qword_1EBAA7370, MEMORY[0x1E4F7CF00]);
  uint64_t v21 = a2;
  uint64_t v22 = v20;
  sub_1DFDE8390();
  sub_1DF16CC7C(a2 + *(int *)(v20 + 24), (uint64_t)v16, (unint64_t *)&unk_1EBAA7190, v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1DF16CCFC((uint64_t)v16, (unint64_t *)&unk_1EBAA7190, MEMORY[0x1E4F7B338]);
  }
  else
  {
    uint64_t v23 = v40;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v40, v16, v17);
    sub_1DF16CE14((unint64_t *)&unk_1EBAA7180, MEMORY[0x1E4F7B338]);
    sub_1DFDE8390();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
  }
  uint64_t v24 = v44;
  sub_1DF16CC7C(v21 + *(int *)(v20 + 28), v44, (unint64_t *)&qword_1EBAD2420, MEMORY[0x1E4F7D3A0]);
  uint64_t v26 = v45;
  uint64_t v25 = v46;
  int v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v24, 1, v46);
  uint64_t v29 = v48;
  uint64_t v28 = v49;
  uint64_t v30 = (uint64_t)v47;
  if (v27 == 1)
  {
    sub_1DF16CCFC(v24, (unint64_t *)&qword_1EBAD2420, MEMORY[0x1E4F7D3A0]);
  }
  else
  {
    uint64_t v31 = v24;
    unint64_t v32 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v41, v31, v25);
    sub_1DF16CE14((unint64_t *)&unk_1EBAA73B0, MEMORY[0x1E4F7D3A0]);
    sub_1DFDE8390();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v32, v25);
  }
  sub_1DF16CC7C(v21 + *(int *)(v22 + 32), v30, (unint64_t *)&unk_1EBAC1020, MEMORY[0x1E4F7CDE0]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v30, 1, v28) == 1)
  {
    sub_1DF16CCFC(v30, (unint64_t *)&unk_1EBAC1020, MEMORY[0x1E4F7CDE0]);
  }
  else
  {
    uint64_t v33 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v42, v30, v28);
    sub_1DF16CDB0(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
    uint64_t v34 = sub_1DFDE8410();
    uint64_t v35 = *(void *)(v34 - 8);
    unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1DFE0B250;
    (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v37 + v36, *MEMORY[0x1E4F4AA18], v34);
    sub_1DF16CE14((unint64_t *)&unk_1EBAA7340, MEMORY[0x1E4F7CDE0]);
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v28);
  }
  sub_1DFDEA950();
  sub_1DF16CE14(&qword_1EBAC0F70, MEMORY[0x1E4F7B828]);
  sub_1DFDE8390();
  sub_1DFDEB6B0();
  sub_1DF16CE14((unint64_t *)&unk_1EBAC03E0, MEMORY[0x1E4F7C298]);
  sub_1DFDE8390();
  sub_1DFDEBEA0();
  memset(v52, 0, sizeof(v52));
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = v50;
  *(void *)(v38 + 24) = a1;
  sub_1DF16CE14((unint64_t *)&unk_1EBAC0FF8, MEMORY[0x1E4F7C998]);
  swift_retain();
  sub_1DFDE83B0();
  swift_release();
  return sub_1DE9E4C20((uint64_t)v52);
}

uint64_t sub_1DF16CBD8(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_1DFDEB6B0();
    sub_1DF16CE14((unint64_t *)&unk_1EBAC03E0, MEMORY[0x1E4F7C298]);
    return sub_1DFDE8310();
  }
  return result;
}

uint64_t type metadata accessor for ContinueReadingPromptTracker()
{
  return self;
}

uint64_t sub_1DF16CC7C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1DF16CDB0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DF16CCFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DF16CDB0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF16CD6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF16CDA4(uint64_t a1)
{
  return sub_1DF16CBD8(a1, *(unsigned char *)(v1 + 16));
}

void sub_1DF16CDB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF16CE14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1DF16CE5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    sub_1DF16CFCC();
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v8, 1, v10))
    {
      uint64_t v13 = type metadata accessor for SharedWithYouFeedGapLocation(0);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
  }
  return v3;
}

void sub_1DF16CFCC()
{
  if (!qword_1EAC280C0)
  {
    type metadata accessor for SharedWithYouFeedServiceConfig();
    sub_1DEE2A15C();
    unint64_t v0 = sub_1DFDFA160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC280C0);
    }
  }
}

uint64_t sub_1DF16D030(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1DF16CFCC();
  uint64_t v6 = v5;
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v4, 1, v5);
  if (!result)
  {
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v4, v6);
  }
  return result;
}

void *sub_1DF16D100(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_1DF16CFCC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v7, 1, v9))
  {
    uint64_t v12 = type metadata accessor for SharedWithYouFeedGapLocation(0);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  return a1;
}

void *sub_1DF16D220(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DF16CFCC();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v7, 1, v9);
  int v14 = v12(v8, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v7, v8, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = type metadata accessor for SharedWithYouFeedGapLocation(0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  return a1;
}

_OWORD *sub_1DF16D3B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  sub_1DF16CFCC();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7))
  {
    uint64_t v10 = type metadata accessor for SharedWithYouFeedGapLocation(0);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  }
  return a1;
}

void *sub_1DF16D4C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DF16CFCC();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v8, 1, v10);
  int v15 = v13(v9, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v8, v9, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = type metadata accessor for SharedWithYouFeedGapLocation(0);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  return a1;
}

uint64_t sub_1DF16D648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF16D65C);
}

uint64_t sub_1DF16D65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SharedWithYouFeedGapLocation(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF16D70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF16D720);
}

uint64_t sub_1DF16D720(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SharedWithYouFeedGapLocation(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SharedWithYouFeedExpandRequest()
{
  uint64_t result = qword_1EAC28E28;
  if (!qword_1EAC28E28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF16D814()
{
  uint64_t result = type metadata accessor for SharedWithYouFeedGapLocation(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DF16D8AC(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v39 = *a2;
    uint64_t *v4 = *a2;
    unint64_t v4 = (uint64_t *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DF16DC7C();
    uint64_t v12 = v11;
    int v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v12);
    uint64_t v14 = a3[6];
    int v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_1DEBE3100();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = (int *)type metadata accessor for SportsScoresTagFeedGroupKnobs();
    *(void *)&v15[v18[5]] = *(void *)&v16[v18[5]];
    *(void *)&v15[v18[6]] = *(void *)&v16[v18[6]];
    uint64_t v19 = v18[7];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = &v16[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v41 = *((void *)v21 + 3);
    *((void *)v20 + 2) = *((void *)v21 + 2);
    *((void *)v20 + 3) = v41;
    uint64_t v23 = v18[8];
    uint64_t v24 = &v15[v23];
    uint64_t v25 = &v16[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    uint64_t v42 = *((void *)v25 + 3);
    *((void *)v24 + 2) = *((void *)v25 + 2);
    *((void *)v24 + 3) = v42;
    *(void *)&v15[v18[9]] = *(void *)&v16[v18[9]];
    *(void *)&v15[v18[10]] = *(void *)&v16[v18[10]];
    *(void *)&v15[v18[11]] = *(void *)&v16[v18[11]];
    *(void *)&v15[v18[12]] = *(void *)&v16[v18[12]];
    *(void *)&v15[v18[13]] = *(void *)&v16[v18[13]];
    uint64_t v27 = a3[7];
    uint64_t v44 = (char *)v4 + v27;
    uint64_t v45 = (char *)a2 + v27;
    long long v28 = *(_OWORD *)((char *)a2 + v27 + 24);
    *(_OWORD *)((char *)v4 + v27 + 24) = v28;
    uint64_t v29 = v28;
    unint64_t v43 = **(void (***)(char *, char *, uint64_t))(v28 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v43(v44, v45, v29);
    uint64_t v30 = a3[9];
    *(_OWORD *)((char *)v4 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v30) = *(uint64_t *)((char *)a2 + v30);
    uint64_t v31 = a3[10];
    unint64_t v32 = (char *)v4 + v31;
    uint64_t v33 = (char *)a2 + v31;
    long long v34 = *(_OWORD *)((char *)a2 + v31 + 24);
    *(_OWORD *)((char *)v4 + v31 + 24) = v34;
    uint64_t v35 = v34;
    unint64_t v36 = **(void (***)(char *, char *, uint64_t))(v34 - 8);
    swift_unknownObjectRetain();
    swift_retain();
    v36(v32, v33, v35);
    uint64_t v37 = a3[11];
    long long v38 = *(_OWORD *)((char *)a2 + v37 + 24);
    *(_OWORD *)((char *)v4 + v37 + 24) = v38;
    (**(void (***)(void))(v38 - 8))();
    *(_OWORD *)((char *)v4 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
    swift_unknownObjectRetain();
  }
  return v4;
}

void sub_1DF16DC7C()
{
  if (!qword_1EBACCB20)
  {
    type metadata accessor for SportsScoresTagFeedGroupConfigData();
    sub_1DF17451C(&qword_1EBAE5110, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupConfigData);
    sub_1DF17451C((unint64_t *)&unk_1EBAE5100, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupConfigData);
    unint64_t v0 = sub_1DFDF7430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACCB20);
    }
  }
}

uint64_t sub_1DF16DD48(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  sub_1DF16DC7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for SportsScoresTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[10]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[11]);
  return swift_unknownObjectRelease();
}

void *sub_1DF16DF08(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DF16DC7C();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v11);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  int v15 = (char *)a2 + v13;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for SportsScoresTagFeedGroupKnobs();
  *(void *)&v14[v17[5]] = *(void *)&v15[v17[5]];
  *(void *)&v14[v17[6]] = *(void *)&v15[v17[6]];
  uint64_t v18 = v17[7];
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v39 = *((void *)v20 + 3);
  *((void *)v19 + 2) = *((void *)v20 + 2);
  *((void *)v19 + 3) = v39;
  uint64_t v22 = v17[8];
  uint64_t v23 = &v14[v22];
  uint64_t v24 = &v15[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  uint64_t v40 = *((void *)v24 + 3);
  *((void *)v23 + 2) = *((void *)v24 + 2);
  *((void *)v23 + 3) = v40;
  *(void *)&v14[v17[9]] = *(void *)&v15[v17[9]];
  *(void *)&v14[v17[10]] = *(void *)&v15[v17[10]];
  *(void *)&v14[v17[11]] = *(void *)&v15[v17[11]];
  *(void *)&v14[v17[12]] = *(void *)&v15[v17[12]];
  *(void *)&v14[v17[13]] = *(void *)&v15[v17[13]];
  uint64_t v26 = a3[7];
  uint64_t v42 = (char *)a1 + v26;
  unint64_t v43 = (char *)a2 + v26;
  long long v27 = *(_OWORD *)((char *)a2 + v26 + 24);
  *(_OWORD *)((char *)a1 + v26 + 24) = v27;
  uint64_t v28 = v27;
  uint64_t v41 = **(void (***)(char *, char *, uint64_t))(v27 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v41(v42, v43, v28);
  uint64_t v29 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  uint64_t v30 = a3[10];
  uint64_t v31 = (char *)a1 + v30;
  unint64_t v32 = (char *)a2 + v30;
  long long v33 = *(_OWORD *)((char *)a2 + v30 + 24);
  *(_OWORD *)((char *)a1 + v30 + 24) = v33;
  uint64_t v34 = v33;
  uint64_t v35 = **(void (***)(char *, char *, uint64_t))(v33 - 8);
  swift_unknownObjectRetain();
  swift_retain();
  v35(v31, v32, v34);
  uint64_t v36 = a3[11];
  long long v37 = *(_OWORD *)((char *)a2 + v36 + 24);
  *(_OWORD *)((char *)a1 + v36 + 24) = v37;
  (**(void (***)(void))(v37 - 8))();
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  swift_unknownObjectRetain();
  return a1;
}

void *sub_1DF16E288(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DF16DC7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for SportsScoresTagFeedGroupKnobs();
  *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[6]] = *(void *)&v12[v14[6]];
  swift_retain();
  swift_release();
  uint64_t v15 = v14[7];
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  *(void *)&v11[v15] = *(void *)&v12[v15];
  swift_retain();
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  *((void *)v16 + 2) = *((void *)v17 + 2);
  swift_retain();
  swift_release();
  *((void *)v16 + 3) = *((void *)v17 + 3);
  swift_retain();
  swift_release();
  uint64_t v18 = v14[8];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  *(void *)&v11[v18] = *(void *)&v12[v18];
  swift_retain();
  swift_release();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_retain();
  swift_release();
  *((void *)v19 + 2) = *((void *)v20 + 2);
  swift_retain();
  swift_release();
  *((void *)v19 + 3) = *((void *)v20 + 3);
  swift_retain();
  swift_release();
  *(void *)&v11[v14[9]] = *(void *)&v12[v14[9]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[10]] = *(void *)&v12[v14[10]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[11]] = *(void *)&v12[v14[11]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[12]] = *(void *)&v12[v14[12]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[13]] = *(void *)&v12[v14[13]];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v22[1] = v24;
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[10]), (void *)((char *)a2 + a3[10]));
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[11]), (void *)((char *)a2 + a3[11]));
  uint64_t v25 = a3[12];
  uint64_t v26 = (void *)((char *)a1 + v25);
  long long v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v26[1] = v28;
  return a1;
}

_OWORD *sub_1DF16E5C8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DF16DC7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for SportsScoresTagFeedGroupKnobs();
  *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
  *(void *)&v11[v14[6]] = *(void *)&v12[v14[6]];
  uint64_t v15 = v14[7];
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  uint64_t v19 = v14[8];
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *(void *)&v11[v14[9]] = *(void *)&v12[v14[9]];
  *(void *)&v11[v14[10]] = *(void *)&v12[v14[10]];
  *(void *)&v11[v14[11]] = *(void *)&v12[v14[11]];
  *(void *)&v11[v14[12]] = *(void *)&v12[v14[12]];
  *(void *)&v11[v14[13]] = *(void *)&v12[v14[13]];
  uint64_t v23 = a3[7];
  uint64_t v24 = a3[8];
  uint64_t v25 = (char *)a1 + v23;
  uint64_t v26 = (char *)a2 + v23;
  long long v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *((void *)v25 + 4) = *((void *)v26 + 4);
  *(_OWORD *)((char *)a1 + v24) = *(_OWORD *)((char *)a2 + v24);
  uint64_t v28 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((void *)v29 + 4) = *((void *)v30 + 4);
  uint64_t v32 = a3[11];
  uint64_t v33 = a3[12];
  uint64_t v34 = (char *)a1 + v32;
  uint64_t v35 = (char *)a2 + v32;
  long long v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v36;
  *((void *)v34 + 4) = *((void *)v35 + 4);
  *(_OWORD *)((char *)a1 + v33) = *(_OWORD *)((char *)a2 + v33);
  return a1;
}

void *sub_1DF16E78C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DF16DC7C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for SportsScoresTagFeedGroupKnobs();
  *(void *)&v12[v15[5]] = *(void *)&v13[v15[5]];
  swift_release();
  *(void *)&v12[v15[6]] = *(void *)&v13[v15[6]];
  swift_release();
  uint64_t v16 = v15[7];
  uint64_t v17 = &v12[v16];
  long long v18 = &v13[v16];
  *(void *)&v12[v16] = *(void *)&v13[v16];
  swift_release();
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_release();
  *((void *)v17 + 2) = *((void *)v18 + 2);
  swift_release();
  *((void *)v17 + 3) = *((void *)v18 + 3);
  swift_release();
  uint64_t v19 = v15[8];
  uint64_t v20 = &v12[v19];
  uint64_t v21 = &v13[v19];
  *(void *)&v12[v19] = *(void *)&v13[v19];
  swift_release();
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_release();
  *((void *)v20 + 2) = *((void *)v21 + 2);
  swift_release();
  *((void *)v20 + 3) = *((void *)v21 + 3);
  swift_release();
  *(void *)&v12[v15[9]] = *(void *)&v13[v15[9]];
  swift_release();
  *(void *)&v12[v15[10]] = *(void *)&v13[v15[10]];
  swift_release();
  *(void *)&v12[v15[11]] = *(void *)&v13[v15[11]];
  swift_release();
  *(void *)&v12[v15[12]] = *(void *)&v13[v15[12]];
  swift_release();
  *(void *)&v12[v15[13]] = *(void *)&v13[v15[13]];
  swift_release();
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v22);
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((void *)v23 + 4) = *((void *)v24 + 4);
  uint64_t v26 = a3[8];
  long long v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v29 = v28[1];
  *long long v27 = *v28;
  swift_unknownObjectRelease();
  v27[1] = v29;
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_release();
  uint64_t v30 = a3[10];
  long long v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v30);
  long long v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)long long v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
  *((void *)v31 + 4) = *((void *)v32 + 4);
  uint64_t v34 = a3[11];
  uint64_t v35 = (char *)a1 + v34;
  long long v36 = (char *)a2 + v34;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v34);
  long long v37 = *((_OWORD *)v36 + 1);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v37;
  *((void *)v35 + 4) = *((void *)v36 + 4);
  uint64_t v38 = a3[12];
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  swift_unknownObjectRelease();
  v39[1] = v41;
  return a1;
}

uint64_t sub_1DF16EA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF16EA74);
}

uint64_t sub_1DF16EA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1DF16DC7C();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for SportsScoresTagFeedGroupKnobs();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DF16EBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF16EBB4);
}

uint64_t sub_1DF16EBB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1DF16DC7C();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for SportsScoresTagFeedGroupKnobs();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for SportsScoresTagFeedGroupEmitter()
{
  uint64_t result = qword_1EBAE2CE0;
  if (!qword_1EBAE2CE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF16ED2C()
{
  sub_1DF16DC7C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsScoresTagFeedGroupKnobs();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DF16EE24(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SportsScoresTagFeedGroupEmitter();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v7 = sub_1DF0F9A04();
  char v9 = v8;
  uint64_t v39 = v1;
  uint64_t v40 = a1;
  uint64_t v35 = v1;
  id v41 = v7;
  char v42 = v8;
  int v30 = v8;
  sub_1DFDFD6D0();
  uint64_t v31 = sub_1DFDEE090();
  uint64_t v38 = type metadata accessor for SportsScoresTagFeedGroupEmitter;
  sub_1DF174564(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroupEmitter);
  uint64_t v10 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v36 = v10 | 7;
  unint64_t v12 = (v11 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = v12 + 8;
  uint64_t v34 = v11 + v5;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = v13 + 9;
  uint64_t v14 = swift_allocObject();
  uint64_t v29 = type metadata accessor for SportsScoresTagFeedGroupEmitter;
  sub_1DF173DB8((uint64_t)v6, v14 + v11, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroupEmitter);
  *(void *)(v14 + v12) = a1;
  unint64_t v15 = v14 + v13;
  id v37 = v7;
  *(void *)unint64_t v15 = v7;
  *(unsigned char *)(v15 + 8) = v9;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v16 = (void *)sub_1DFDEDCE0();
  sub_1DEC80AE8(0);
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v17 = v35;
  sub_1DF174564(v35, (uint64_t)v6, (uint64_t (*)(void))v38);
  uint64_t v18 = swift_allocObject();
  sub_1DF173DB8((uint64_t)v6, v18 + v11, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroupEmitter);
  *(void *)(v18 + v12) = a1;
  unint64_t v19 = v18 + v13;
  *(void *)unint64_t v19 = v37;
  *(unsigned char *)(v19 + 8) = v30;
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v20 = (void *)sub_1DFDEDCE0();
  sub_1DFDFA9F0();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v21 = v38;
  sub_1DF174564(v17, (uint64_t)v6, (uint64_t (*)(void))v38);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v29;
  sub_1DF173DB8((uint64_t)v6, v22 + v11, (uint64_t (*)(void))v29);
  *(void *)(v22 + v12) = a1;
  swift_retain();
  uint64_t v24 = (void *)sub_1DFDEDCE0();
  sub_1DEC3C648(0);
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  sub_1DF174564(v35, (uint64_t)v6, (uint64_t (*)(void))v21);
  uint64_t v25 = swift_allocObject();
  sub_1DF173DB8((uint64_t)v6, v25 + v11, (uint64_t (*)(void))v23);
  uint64_t v26 = (void *)sub_1DFDEDCE0();
  uint64_t v27 = sub_1DFDEDEE0();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return v27;
}

uint64_t sub_1DF16F20C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DF16DC7C();
  uint64_t v6 = v5;
  uint64_t v7 = swift_allocBox();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v8, v2 + *(int *)(a1 + 20), v6);
  *a2 = v7 | 0x3000000000000002;
  return result;
}

uint64_t sub_1DF16F29C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  a2[3] = type metadata accessor for SportsScoresTagFeedGroupKnobs();
  a2[4] = sub_1DF17451C(&qword_1EBAE0800, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupKnobs);
  a2[5] = sub_1DF17451C(&qword_1EAC28E48, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DF174564(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroupKnobs);
}

unint64_t sub_1DF16F368(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DFDF9D80();
  uint64_t v31 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + *(int *)(type metadata accessor for SportsScoresTagFeedGroupEmitter() + 24);
  LOBYTE(v41) = 14;
  sub_1DEBE3100();
  uint64_t v33 = v7;
  uint64_t v34 = a1;
  uint64_t v39 = sub_1DFDF8030();
  id v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DF173C88(0, (unint64_t *)&qword_1EBAEAF50, (uint64_t (*)(uint64_t))sub_1DEC3E5EC, MEMORY[0x1E4FBBE00]);
  sub_1DEC3E5EC(0);
  uint64_t v35 = v8;
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v40 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v36 = 2 * v9;
  uint64_t v11 = swift_allocObject();
  uint64_t v38 = v11;
  *(_OWORD *)(v11 + 16) = xmmword_1DFE0CC10;
  unint64_t v12 = (uint64_t *)(v11 + v10);
  type metadata accessor for SportsScoresTagFeedGroupKnobs();
  sub_1DFDF8870();
  uint64_t v13 = sub_1DFDF8530();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v30[2] = v4 + 8;
  unint64_t v32 = v14;
  v14(v6, v3);
  unint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  unint64_t v41 = 0xD00000000000001BLL;
  unint64_t v42 = 0x80000001DFEC6230;
  v30[1] = sub_1DEC3E634();
  sub_1DFDFE5E0();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v13;
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9980, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F7FE90]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  unint64_t v15 = v12;
  *unint64_t v12 = sub_1DFDF9140();
  uint64_t v16 = *MEMORY[0x1E4F7F8E8];
  uint64_t v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 104);
  v40 += 104;
  v30[0] = v17;
  uint64_t v18 = v12;
  uint64_t v19 = v35;
  v17(v18, v16, v35);
  swift_bridgeObjectRelease();
  sub_1DFDF8870();
  uint64_t v20 = sub_1DFDF8530();
  v32(v6, v31);
  unint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  unint64_t v41 = 0xD00000000000001ELL;
  unint64_t v42 = 0x80000001DFEC6250;
  sub_1DFDFE5E0();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v20;
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(uint64_t *)((char *)v15 + v9) = sub_1DFDF9140();
  uint64_t v21 = v16;
  uint64_t v22 = (void (*)(uint64_t *, void, uint64_t))v30[0];
  ((void (*)(char *, uint64_t, uint64_t))v30[0])((char *)v15 + v9, v21, v19);
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t *)((char *)v15 + v36);
  sub_1DF173C88(0, &qword_1EBACBD50, MEMORY[0x1E4F80420], v37);
  uint64_t v24 = sub_1DFDF98F0();
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v25 + 104))(v27 + v26, *MEMORY[0x1E4F80418], v24);
  uint64_t v28 = sub_1DF3C10DC(v27);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *uint64_t v23 = v28;
  v22(v23, *MEMORY[0x1E4F7F8A8], v19);
  unint64_t v41 = v39;
  sub_1DF3DD820(v38);
  return v41;
}

uint64_t sub_1DF16F97C()
{
  return sub_1DFDF7340();
}

uint64_t sub_1DF16F9AC@<X0>(uint64_t *a1@<X8>)
{
  sub_1DF173C88(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DF16DC7C();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DF173C88(0, &qword_1EBAD26F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
  a1[3] = v5;
  a1[4] = sub_1DF1745CC();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DF16FB04()
{
  sub_1DF17451C((unint64_t *)&unk_1EBAE2CC8, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DF16FB70()
{
  return sub_1DF17451C(&qword_1EBAE2CD8, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupEmitter);
}

uint64_t sub_1DF16FBB8()
{
  return sub_1DF17451C(&qword_1EBAE2CC0, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupEmitter);
}

uint64_t sub_1DF16FC00()
{
  return sub_1DF17451C((unint64_t *)&unk_1EBAE2CC8, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupEmitter);
}

uint64_t sub_1DF16FC48()
{
  return sub_1DF17451C((unint64_t *)&unk_1EBAF82C0, (void (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupEmitter);
}

uint64_t sub_1DF16FC90(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = sub_1DFDFD6D0();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1DFDF9D80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    if (a3 == 1)
    {
      uint64_t v11 = qword_1EBAEA6E8;
      swift_unknownObjectRetain();
      if (v11 != -1) {
        swift_once();
      }
      sub_1DEA086BC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1DFE0B250;
      uint64_t v43 = 0;
      unint64_t v44 = 0xE000000000000000;
      id v45 = objc_msgSend(a2, sel_eventLeagueTag);
      sub_1DEC9C144();
      sub_1DFDFFB10();
      swift_unknownObjectRelease();
      uint64_t v13 = v43;
      unint64_t v14 = v44;
      *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v12 + 64) = sub_1DEA08668();
      *(void *)(v12 + 32) = v13;
      *(void *)(v12 + 40) = v14;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      sub_1DEA6A148(0, (unint64_t *)&qword_1EBAEB000, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1DFE13CF0;
      *(void *)(v15 + 32) = objc_msgSend(a2, sel_eventLeagueTag);
      uint64_t v43 = v15;
      sub_1DFDFE250();
      sub_1DFDFD6A0();
      sub_1DF173C88(0, &qword_1EAC28E38, MEMORY[0x1E4F81AC0], MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v16 = sub_1DFDEDE90();
      swift_unknownObjectRelease();
    }
    else
    {
      v41[1] = v6;
      v41[2] = v3;
      type metadata accessor for SportsScoresTagFeedGroupEmitter();
      type metadata accessor for SportsScoresTagFeedGroupKnobs();
      sub_1DFDF8870();
      sub_1DFDF8BF0();
      unint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
      v26(v10, v7);
      v41[0] = v43;
      sub_1DFDF8870();
      sub_1DFDF8BF0();
      v26(v10, v7);
      char v27 = v43;
      sub_1DFDF8870();
      sub_1DFDF8BF0();
      v26(v10, v7);
      char v28 = v43;
      if (qword_1EBAEA6E8 != -1) {
        swift_once();
      }
      sub_1DEA086BC();
      uint64_t v29 = swift_allocObject();
      uint64_t v30 = MEMORY[0x1E4FBB550];
      *(_OWORD *)(v29 + 16) = xmmword_1DFE0B250;
      uint64_t v31 = MEMORY[0x1E4FBB5C8];
      *(void *)(v29 + 56) = v30;
      *(void *)(v29 + 64) = v31;
      uint64_t v32 = v41[0];
      *(void *)(v29 + 32) = v41[0];
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      uint64_t v33 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v33);
      v41[-4] = v42;
      v41[-3] = v32;
      LOBYTE(v41[-2]) = v27;
      sub_1DFDEE090();
      *(unsigned char *)(swift_allocObject() + 16) = v28;
      uint64_t v34 = (void *)sub_1DFDEDCE0();
      uint64_t v16 = sub_1DFDEDE00();
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_1DFDF87F0();
    uint64_t v17 = *(void *)(v43 + 16);
    swift_retain();
    swift_release();
    id v18 = *(id *)(v17 + 32);
    swift_release();
    id v19 = objc_msgSend(v18, sel_backingTag);

    id v20 = objc_msgSend(v19, sel_asSports);
    swift_unknownObjectRelease();
    if (v20)
    {
      if (objc_msgSend(v20, sel_sportsType) == (id)1)
      {
        if (qword_1EBAEA6E8 != -1) {
          swift_once();
        }
        sub_1DEA086BC();
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1DFE0B250;
        uint64_t v43 = 0;
        unint64_t v44 = 0xE000000000000000;
        id v45 = v20;
        sub_1DEC9C144();
        sub_1DFDFFB10();
        uint64_t v22 = v43;
        unint64_t v23 = v44;
        *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v21 + 64) = sub_1DEA08668();
        *(void *)(v21 + 32) = v22;
        *(void *)(v21 + 40) = v23;
        sub_1DFDFEA60();
        sub_1DFDF00C0();
        uint64_t v24 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v24);
        v41[-2] = v42;
        sub_1DFDFB880();
        sub_1DFDEE090();
        *(void *)(swift_allocObject() + 16) = v20;
        swift_unknownObjectRetain();
        uint64_t v25 = (void *)sub_1DFDEDCE0();
        uint64_t v16 = sub_1DFDEDE00();
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
      }
      else
      {
        if (qword_1EBAEA6E8 != -1) {
          swift_once();
        }
        sub_1DEA086BC();
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_1DFE0B250;
        uint64_t v43 = 0;
        unint64_t v44 = 0xE000000000000000;
        id v45 = v20;
        sub_1DEC9C144();
        sub_1DFDFFB10();
        uint64_t v37 = v43;
        unint64_t v38 = v44;
        *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v36 + 64) = sub_1DEA08668();
        *(void *)(v36 + 32) = v37;
        *(void *)(v36 + 40) = v38;
        sub_1DFDFEA60();
        sub_1DFDF00C0();
        swift_bridgeObjectRelease();
        sub_1DEA6A148(0, (unint64_t *)&qword_1EBAEB000, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_1DFE13CF0;
        *(void *)(v39 + 32) = v20;
        uint64_t v43 = v39;
        sub_1DFDFE250();
        swift_unknownObjectRetain();
        sub_1DFDFD6A0();
        sub_1DF173C88(0, &qword_1EAC28E38, MEMORY[0x1E4F81AC0], MEMORY[0x1E4FAB088]);
        swift_allocObject();
        uint64_t v16 = sub_1DFDEDE90();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v16 = sub_1DFDF8510();
      sub_1DF17451C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v35, *MEMORY[0x1E4F7F978], v16);
      swift_willThrow();
    }
  }
  return v16;
}

uint64_t sub_1DF1706A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v76 = a4;
  uint64_t v78 = a3;
  uint64_t v69 = a2;
  uint64_t v79 = sub_1DFDFD6D0();
  uint64_t v82 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v75 = v6;
  uint64_t v81 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SportsScoresTagFeedGroupEmitter();
  uint64_t v71 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v72 = v8;
  uint64_t v73 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SportsConfiguringDataVisualizationRequest.EmbedKind(0);
  MEMORY[0x1F4188790](v9 - 8);
  double v66 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF173C88(0, (unint64_t *)&unk_1EBAF5840, MEMORY[0x1E4F81878], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v63 - v12;
  uint64_t v67 = type metadata accessor for SportsConfiguringDataVisualizationRequest(0);
  uint64_t v14 = MEMORY[0x1F4188790](v67);
  uint64_t v64 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v80 = (uint64_t)&v63 - v16;
  uint64_t v17 = sub_1DFDF9D80();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v4;
  type metadata accessor for SportsScoresTagFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v18 + 8);
  v21(v20, v17);
  uint64_t v22 = v83;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v21(v20, v17);
  uint64_t v23 = v83;
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1DFE0CC10;
  uint64_t v25 = v69;
  uint64_t v26 = *(void *)(sub_1DFDFD6C0() + 16);
  swift_bridgeObjectRelease();
  uint64_t v27 = MEMORY[0x1E4FBB550];
  uint64_t v28 = MEMORY[0x1E4FBB5C8];
  *(void *)(v24 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v24 + 64) = v28;
  *(void *)(v24 + 32) = v26;
  *(void *)(v24 + 96) = v27;
  *(void *)(v24 + 104) = v28;
  uint64_t v70 = v22;
  *(void *)(v24 + 72) = v22;
  *(void *)(v24 + 136) = v27;
  *(void *)(v24 + 144) = v28;
  uint64_t v68 = v23;
  *(void *)(v24 + 112) = v23;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DFDF87F0();
  id v29 = *(id *)(v83 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
  v30(v13, v25, v79);
  uint64_t v31 = *MEMORY[0x1E4F81870];
  uint64_t v32 = sub_1DFDFCFB0();
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v13, v31, v32);
  uint64_t v34 = v32;
  uint64_t v35 = v29;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v13, 0, 1, v34);
  uint64_t v36 = sub_1DFDFD900();
  uint64_t v37 = (uint64_t)v66;
  (*(void (**)(void))(*(void *)(v36 - 8) + 56))();
  uint64_t v38 = sub_1DFDFEBA0();
  id v39 = objc_msgSend(v35, sel_alternativeFeedDescriptor);
  uint64_t v77 = a1;
  id v65 = v35;
  if (v39)
  {
    uint64_t v40 = v39;
    id v41 = objc_msgSend(v39, sel_feedConfiguration);
  }
  else
  {
    id v41 = objc_msgSend(v35, sel_feedConfiguration);
  }
  uint64_t v42 = v64;
  sub_1DF173D24((uint64_t)v13, v64);
  uint64_t v43 = v67;
  sub_1DF174564(v37, v42 + *(int *)(v67 + 20), type metadata accessor for SportsConfiguringDataVisualizationRequest.EmbedKind);
  unint64_t v44 = (uint64_t *)(v42 + *(int *)(v43 + 24));
  *unint64_t v44 = v38;
  v44[1] = (uint64_t)v41;
  sub_1DF1742AC(v37, type metadata accessor for SportsConfiguringDataVisualizationRequest.EmbedKind);
  sub_1DF174474((uint64_t)v13, (unint64_t *)&unk_1EBAF5840, MEMORY[0x1E4F81878]);
  uint64_t v45 = v42 + *(int *)(v43 + 28);
  strcpy((char *)v45, "sportsScores");
  *(unsigned char *)(v45 + 13) = 0;
  *(_WORD *)(v45 + 14) = -5120;
  uint64_t v46 = v80;
  sub_1DF173DB8(v42, v80, type metadata accessor for SportsConfiguringDataVisualizationRequest);
  CFTimeInterval v47 = CACurrentMediaTime();
  MEMORY[0x1F4188790](v48);
  uint64_t v49 = v74;
  *(&v63 - 2) = v74;
  *(&v63 - 1) = v46;
  sub_1DFDFCE70();
  uint64_t v67 = sub_1DFDEE090();
  uint64_t v50 = v73;
  sub_1DF174564(v49, v73, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroupEmitter);
  uint64_t v51 = v79;
  v30(v81, v25, v79);
  unint64_t v52 = (*(unsigned __int8 *)(v71 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  unint64_t v53 = (v72 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = v82;
  unint64_t v56 = (*(unsigned __int8 *)(v82 + 80) + v54 + 8) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  unint64_t v57 = (v75 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v58 = swift_allocObject();
  *(CFTimeInterval *)(v58 + 16) = v47;
  *(void *)(v58 + 24) = v78;
  *(unsigned char *)(v58 + 32) = v76;
  sub_1DF173DB8(v50, v58 + v52, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroupEmitter);
  *(void *)(v58 + v53) = v77;
  *(void *)(v58 + v54) = v68;
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v58 + v56, v81, v51);
  *(void *)(v58 + v57) = v70;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v59 = (void *)sub_1DFDEDCE0();
  sub_1DEC80AE8(0);
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  unint64_t v60 = (void *)sub_1DFDEDCE0();
  uint64_t v61 = sub_1DFDEDE50();
  swift_release();

  sub_1DF1742AC(v80, type metadata accessor for SportsConfiguringDataVisualizationRequest);
  return v61;
}

uint64_t sub_1DF170F88(uint64_t a1, unint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v59 = a3;
  LODWORD(v61) = a4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF173C88(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v77 = (char *)&v56 - v9;
  sub_1DF173C88(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v7);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v69 = (char *)&v56 - v11;
  sub_1DF173C88(0, (unint64_t *)&qword_1EBAE95E0, (uint64_t (*)(uint64_t))sub_1DEBE3100, v7);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v68 = (char *)&v56 - v13;
  uint64_t v14 = sub_1DFDFB960();
  uint64_t v75 = *(void *)(v14 - 8);
  uint64_t v76 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v74 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF173C88(0, (unint64_t *)&unk_1EBACB910, MEMORY[0x1E4F7ACE8], v7);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v63 = (char *)&v56 - v17;
  uint64_t v18 = sub_1DFDFAFE0();
  uint64_t v72 = *(void *)(v18 - 8);
  uint64_t v73 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v71 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DFDFAA20();
  uint64_t v79 = *(void *)(v20 - 8);
  uint64_t v80 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v78 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for SportsScoresTagFeedGroupConfigData();
  MEMORY[0x1F4188790](v62);
  uint64_t v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1DFDFB0C0();
  MEMORY[0x1F4188790](v24 - 8);
  unint64_t v56 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1DFDE7220();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v27 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a1;
  sub_1DFDF87F0();
  id v28 = *(id *)(v82 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  id v29 = objc_msgSend(v28, sel_backingTag);

  id v66 = v29;
  id v30 = objc_msgSend(v29, sel_asSports);
  sub_1DFDFD700();
  swift_allocObject();
  uint64_t v31 = sub_1DFDFD6E0();
  sub_1DF173C88(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], MEMORY[0x1E4FBBE00]);
  sub_1DFDFCAB0();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1DFE0B750;
  uint64_t v60 = v32;
  uint64_t v65 = v31;
  sub_1DF173200(a2, v31);
  uint64_t v64 = v4;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1DF11BA44(MEMORY[0x1E4FBC860]);
  sub_1DF11BB5C(v33);
  sub_1DF11BC90(v33);
  sub_1DFDFCAA0();
  if (v61 == 1)
  {
    id v34 = objc_msgSend(objc_msgSend((id)swift_unknownObjectRetain(), sel_eventLeagueTag), sel_identifier);
    swift_unknownObjectRelease();
    if (!v34)
    {
      sub_1DFDFDD20();
      id v34 = (id)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
    }
    id v35 = objc_msgSend(self, sel_nss_NewsURLForTagID_feedConfiguration_, v34, 5);

    sub_1DFDE7190();
    sub_1DF173C88(0, (unint64_t *)&unk_1EBABB690, MEMORY[0x1E4F808A0], MEMORY[0x1E4FBBE00]);
    sub_1DFDFA640();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0B250;
    sub_1DFDFB090();
    sub_1DFDFA620();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v58);
  }
  sub_1DF11BA44(v33);
  sub_1DF11BB5C(v33);
  sub_1DF11BC90(v33);
  sub_1DFDFCAA0();
  uint64_t v36 = type metadata accessor for SportsScoresTagFeedGroupEmitter();
  uint64_t v37 = v67;
  uint64_t v38 = (void *)(v67 + *(int *)(v36 + 28));
  uint64_t v39 = v38[3];
  uint64_t v59 = v38[4];
  uint64_t v61 = v39;
  uint64_t v58 = (uint64_t)__swift_project_boxed_opaque_existential_1(v38, v39);
  sub_1DF16DC7C();
  sub_1DFDF73B0();
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, &v23[*(int *)(v62 + 20)], v80);
  uint64_t v40 = sub_1DFDF66A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v63, 1, 1, v40);
  sub_1DFC83088(v33);
  sub_1DFC83088(v33);
  sub_1DFC831BC(v33);
  sub_1DFC831D4(v33);
  sub_1DFC83308(v33);
  sub_1DFC83320(v33);
  id v41 = v71;
  sub_1DFDFAFD0();
  uint64_t v42 = v37 + *(int *)(v36 + 24);
  sub_1DEBE3100();
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(v43 - 8);
  uint64_t v46 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v68, v42, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v44);
  swift_retain();
  sub_1DFDF87F0();
  id v47 = *(id *)(v82 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  uint64_t v48 = sub_1DFDFC340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v69, 1, 1, v48);
  LOBYTE(v81) = 14;
  sub_1DEC3C690(0, (unint64_t *)&unk_1EBAE9F30, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F81400]);
  swift_allocObject();
  sub_1DFDFC5C0();
  sub_1DFDF87F0();
  sub_1DEE821D4();
  swift_release();
  sub_1DFDF87F0();
  id v49 = *(id *)(v81 + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1DFDFC5F0();
  swift_allocObject();
  sub_1DFDFC5E0();
  uint64_t v50 = sub_1DFDFB640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v77, 1, 1, v50);
  uint64_t v51 = qword_1EBAEA6E8;
  (id)*MEMORY[0x1E4F7E018];
  if (v51 != -1) {
    swift_once();
  }
  (id)qword_1EBB63310;
  unint64_t v52 = v74;
  sub_1DFDFB930();
  unint64_t v53 = v78;
  uint64_t v54 = sub_1DFDFB120();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v52, v76);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v73);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v80);
  return v54;
}

uint64_t sub_1DF171CCC(uint64_t a1)
{
  sub_1DEC3C648(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF171E60(a1, v7);
  sub_1DF174564((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
  swift_storeEnumTagMultiPayload();
  sub_1DF173C88(0, (unint64_t *)&qword_1EBAD2B30, (uint64_t (*)(uint64_t))sub_1DEC3C648, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v8 = sub_1DFDEDE90();
  sub_1DF1742AC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
  return v8;
}

uint64_t sub_1DF171E60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v18 = a2;
  sub_1DF173C88(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - v3;
  uint64_t v5 = sub_1DFDF8C20();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1DFDFA9F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF87F0();
  uint64_t v11 = *(void *)(v19 + 16);
  swift_retain();
  swift_release();
  id v12 = *(id *)(v11 + 32);
  swift_release();
  id v17 = objc_msgSend(v12, sel_backingTag);

  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v16, v7);
  type metadata accessor for SportsScoresTagFeedGroupEmitter();
  sub_1DF16DC7C();
  uint64_t v16 = sub_1DFDF7350();
  sub_1DFDF7360();
  sub_1DFDF7360();
  sub_1DEBE3100();
  sub_1DFDF8080();
  sub_1DFDF8050();
  sub_1DFDF80A0();
  uint64_t v13 = sub_1DFDF7CB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  type metadata accessor for SportsScoresTagFeedGroup();
  uint64_t v14 = v18;
  sub_1DFDF6F90();
  void *v14 = v17;
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF1721D8(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  uint64_t v6 = type metadata accessor for SportsScoresTagFeedGroupEmitter();
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v6 + 44)), *(void *)(a1 + *(int *)(v6 + 44) + 24));
  type metadata accessor for FCSportsOnboardingState(0);
  sub_1DFDEE090();
  uint64_t v7 = (void *)sub_1DFDEDB60();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(unsigned char *)(v8 + 24) = v5;
  *(unsigned char *)(v8 + 25) = 1;
  type metadata accessor for MySportsTagService();
  uint64_t v9 = sub_1DFDEDE10();
  swift_release();

  swift_release();
  return v9;
}

uint64_t sub_1DF1722F0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DFE0B250;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = v3;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return sub_1DFDFD6A0();
}

uint64_t sub_1DF172430(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsScoresTagFeedGroupEmitter();
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v2 + 40)), *(void *)(a1 + *(int *)(v2 + 40) + 24));
  return sub_1DFDFD030();
}

uint64_t sub_1DF17248C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_1DFDFC270();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF173C88(0, &qword_1EAC28E40, MEMORY[0x1E4F81308], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v33 - v9;
  id v34 = a1;
  id v11 = objc_msgSend(a1, sel_identifier);
  sub_1DFDFDD20();

  sub_1DFDFB850();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1DF174474((uint64_t)v10, &qword_1EAC28E40, MEMORY[0x1E4F81308]);
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v13 = sub_1DFDFC230();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v40 = v5 + 8;
    v39(v10, v4);
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      v33[1] = v13;
      v33[2] = v2;
      uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v15 = v5 + 16;
      unint64_t v17 = v13 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
      uint64_t v37 = *(void *)(v15 + 56);
      uint64_t v38 = v16;
      swift_bridgeObjectRetain();
      uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v36 = v15;
      do
      {
        v38(v7, v17, v4);
        uint64_t v20 = sub_1DFDFC250();
        uint64_t v22 = v21;
        v39(v7, v4);
        if (v22)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v18 = sub_1DEA8C6EC(0, v18[2] + 1, 1, v18);
          }
          unint64_t v24 = v18[2];
          unint64_t v23 = v18[3];
          if (v24 >= v23 >> 1) {
            uint64_t v18 = sub_1DEA8C6EC((void *)(v23 > 1), v24 + 1, 1, v18);
          }
          void v18[2] = v24 + 1;
          uint64_t v19 = &v18[2 * v24];
          v19[4] = v20;
          v19[5] = v22;
        }
        v17 += v37;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    }
    id v41 = v18;
    sub_1DEA6A148(0, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1DEC9C314();
    uint64_t v12 = sub_1DFDFDFF0();
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1DFE0B750;
  id v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  uint64_t v43 = v34;
  sub_1DEC9C144();
  sub_1DFDFFB10();
  uint64_t v27 = v41;
  unint64_t v28 = v42;
  *(void *)(v26 + 56) = v25;
  unint64_t v29 = sub_1DEA08668();
  *(void *)(v26 + 64) = v29;
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v28;
  uint64_t v30 = MEMORY[0x1E01ECA60](v12, v25);
  *(void *)(v26 + 96) = v25;
  *(void *)(v26 + 104) = v29;
  *(void *)(v26 + 72) = v30;
  *(void *)(v26 + 80) = v31;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  return sub_1DFDFD6B0();
}

uint64_t sub_1DF172954(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v67 = a8;
  uint64_t v61 = a7;
  uint64_t v58 = a6;
  uint64_t v57 = a5;
  LODWORD(v10) = a3;
  uint64_t v66 = a2;
  uint64_t v64 = a1;
  uint64_t v63 = sub_1DFDE7600();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v60 = v13;
  uint64_t v14 = swift_allocObject();
  long long v65 = xmmword_1DFE0B250;
  *(_OWORD *)(v14 + 16) = xmmword_1DFE0B250;
  sub_1DFDFE560();
  uint64_t v15 = MEMORY[0x1E4FBB460];
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v14 + 64) = v15;
  *(void *)(v14 + 32) = v16;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(type metadata accessor for SportsScoresTagFeedGroupEmitter() + 24);
  uint64_t v59 = a4;
  uint64_t v18 = a4 + v17;
  uint64_t v19 = type metadata accessor for SportsScoresTagFeedGroupKnobs();
  uint64_t v56 = v8;
  if (v10 >= 2u)
  {
    uint64_t v32 = (uint64_t *)(v18 + *(int *)(v19 + 32));
    uint64_t v21 = *v32;
    uint64_t v22 = v32[1];
    uint64_t v27 = v32[2];
    uint64_t v25 = v32[3];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v31 = MEMORY[0x1E4FBC870];
    uint64_t v33 = v66;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v18 + *(int *)(v19 + 28));
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[2];
    uint64_t v24 = v20[3];
    if ((_BYTE)v10)
    {
      int v53 = v10;
      uint64_t v55 = v21;
      swift_retain();
      uint64_t v54 = v22;
      swift_retain();
      swift_retain();
      uint64_t v25 = v24;
      swift_retain();
      uint64_t v10 = v66;
      id v26 = objc_msgSend((id)swift_unknownObjectRetain(), sel_UMCCanonicalID);
      uint64_t v27 = v23;
      if (v26)
      {
        unint64_t v28 = v26;
        uint64_t v52 = sub_1DFDFDD20();
        uint64_t v51 = v29;

        sub_1DEA6A148(0, (unint64_t *)&qword_1EBABB6F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v65;
        *(void *)(inited + 32) = v52;
        *(void *)(inited + 40) = v51;
        uint64_t v31 = sub_1DF3BFF80(inited);
        uint64_t v27 = v23;
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
        uint64_t v31 = MEMORY[0x1E4FBC870];
      }
      uint64_t v21 = v55;
      uint64_t v22 = v54;
      uint64_t v33 = v10;
      LOBYTE(v10) = v53;
    }
    else
    {
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v31 = MEMORY[0x1E4FBC870];
      uint64_t v27 = v23;
      uint64_t v25 = v24;
      uint64_t v33 = v66;
    }
  }
  uint64_t v34 = sub_1DF0F95FC(v33, v10);
  *(void *)&long long v65 = v25;
  uint64_t v66 = v27;
  sub_1DF08E3A4(14, v58, v31, v34, v21, v22, (uint64_t)v69, v27, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  CACurrentMediaTime();
  type metadata accessor for SportsScoresTagFeedGroupEmitter();
  unint64_t v35 = sub_1DFDFCE40();
  uint64_t v36 = sub_1DFDFD6C0();
  uint64_t v37 = sub_1DE9DB9D8(v36);
  swift_bridgeObjectRelease();
  sub_1DFDE75F0();
  unint64_t v38 = sub_1DFCB42D8(v35, (uint64_t)v69, v37, (uint64_t)v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v12, v63);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1DFE0CC10;
  unint64_t v40 = sub_1DFDFCE40();
  if (v40 >> 62) {
    uint64_t v41 = sub_1DFDFFBE0();
  }
  else {
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = MEMORY[0x1E4FBB550];
  uint64_t v43 = MEMORY[0x1E4FBB5C8];
  *(void *)(v39 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v39 + 64) = v43;
  *(void *)(v39 + 32) = v41;
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v39 + 96) = v42;
  *(void *)(v39 + 104) = v43;
  *(void *)(v39 + 72) = v44;
  sub_1DFDFE560();
  *(void *)(v39 + 136) = MEMORY[0x1E4FBB3D0];
  *(void *)(v39 + 144) = MEMORY[0x1E4FBB460];
  *(void *)(v39 + 112) = v45;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v46 = v67;
  if (v44 >= v67)
  {
    unint64_t v68 = v38;
    sub_1DF173C88(0, (unint64_t *)&unk_1EBAD2BA0, (uint64_t (*)(uint64_t))sub_1DEC80AE8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v47 = sub_1DFDEDE90();
  }
  else
  {
    uint64_t v47 = sub_1DFDF8510();
    sub_1DF17451C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    id v49 = v48;
    swift_bridgeObjectRelease();
    uint64_t *v49 = v46;
    v49[1] = v44;
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, *MEMORY[0x1E4F7F9C8], v47);
    swift_willThrow();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1DF17430C((uint64_t)v69);
  return v47;
}

uint64_t sub_1DF1730D4()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1DEA08668();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1DFDF00C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF173200(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a2;
  uint64_t v29 = sub_1DFDFC200();
  unint64_t v5 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  unint64_t v28 = (void *)((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DFDFC900();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if (!v11) {
      return v12;
    }
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEDF697C(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0) {
      break;
    }
    uint64_t v26 = v7;
    v20[0] = v3;
    uint64_t v7 = 0;
    uint64_t v12 = v31;
    unint64_t v24 = a1 & 0xC000000000000001;
    unsigned int v23 = *MEMORY[0x1E4F812B0];
    uint64_t v22 = (void (**)(uint64_t *, void, uint64_t))(v5 + 104);
    unsigned int v21 = *MEMORY[0x1E4F81608];
    uint64_t v3 = (void (**)(char *, void, uint64_t))(v8 + 104);
    v20[1] = v8 + 32;
    unint64_t v27 = a1;
    uint64_t v25 = v11;
    while (v11 != v7)
    {
      if (v24) {
        MEMORY[0x1E01EE240](v7, a1);
      }
      else {
        swift_retain();
      }
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_1DFDFCBF0();
      uint64_t v16 = v28;
      uint64_t v15 = v29;
      uint64_t *v28 = v14;
      (*v22)(v16, v23, v15);
      sub_1DFDFAB90();
      uint64_t v17 = v26;
      (*v3)(v10, v21, v26);
      swift_release();
      uint64_t v31 = v12;
      unint64_t v19 = *(void *)(v12 + 16);
      unint64_t v18 = *(void *)(v12 + 24);
      unint64_t v5 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_1DEDF697C(v18 > 1, v19 + 1, 1);
        uint64_t v12 = v31;
      }
      ++v7;
      *(void *)(v12 + 16) = v5;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v19, v10, v17);
      uint64_t v11 = v25;
      a1 = v27;
      if (v25 == v7) {
        return v12;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF173548()
{
  return sub_1DF16FC90(*(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1DF17357C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SportsScoresTagFeedGroupEmitter() - 8);
  unint64_t v4 = (*(void *)(v3 + 64)
      + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DF1706A8(*(void *)(v1 + v4), a1, *(void *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1DF173638(unint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SportsScoresTagFeedGroupEmitter() - 8);
  unint64_t v4 = (*(void *)(v3 + 64)
      + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DF170F88(*(void *)(v1 + v4), *a1, *(void *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1DF1736F0()
{
  uint64_t v1 = (int *)(type metadata accessor for SportsScoresTagFeedGroupEmitter() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  sub_1DF16DC7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[8];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsScoresTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[9]);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[13]);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF173940(uint64_t a1)
{
  return sub_1DF171CCC(a1);
}

uint64_t sub_1DF1739D8()
{
  uint64_t v1 = (int *)(type metadata accessor for SportsScoresTagFeedGroupEmitter() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  sub_1DF16DC7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[8];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsScoresTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[9]);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[13]);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF173C0C()
{
  return sub_1DEC964AC();
}

void sub_1DF173C88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF173CEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DF173D24(uint64_t a1, uint64_t a2)
{
  sub_1DF173C88(0, (unint64_t *)&unk_1EBAF5840, MEMORY[0x1E4F81878], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF173DB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF173E20()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + *(int *)(type metadata accessor for SportsScoresTagFeedGroupEmitter() + 48) + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v1, ObjectType, v3);
}

uint64_t sub_1DF173E90()
{
  uint64_t v1 = (int *)(type metadata accessor for SportsScoresTagFeedGroupEmitter() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = sub_1DFDFD6D0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  uint64_t v7 = v0 + v2;
  swift_bridgeObjectRelease();
  unint64_t v8 = v0 + v2 + v1[7];
  sub_1DF16DC7C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v7 + v1[8];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  type metadata accessor for SportsScoresTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v7 + v1[9]);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v7 + v1[12]);
  __swift_destroy_boxed_opaque_existential_1(v7 + v1[13]);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_1DF174180(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SportsScoresTagFeedGroupEmitter() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(sub_1DFDFD6D0() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_1DF172954(a1, *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), v1 + v8, *(void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DF1742AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF17430C(uint64_t a1)
{
  unint64_t v2 = *(void **)a1;
  unint64_t v3 = *(void *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1DF174398(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1DF174398(unint64_t result)
{
  if (result >= 2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF1743A8()
{
  return sub_1DF172430(*(void *)(v0 + 16));
}

uint64_t sub_1DF1743C4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF1743FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF17248C(*(void **)(v1 + 16), a1);
}

uint64_t sub_1DF174418()
{
  return sub_1DF1721D8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1DF174438()
{
  return swift_deallocObject();
}

uint64_t sub_1DF174448(uint64_t a1)
{
  return sub_1DF1722F0(a1);
}

uint64_t sub_1DF174464()
{
  return swift_deallocObject();
}

uint64_t sub_1DF174474(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DF173C88(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF1744E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF17451C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF174564(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DF1745CC()
{
  unint64_t result = qword_1EBAD26E8;
  if (!qword_1EBAD26E8)
  {
    sub_1DF173C88(255, &qword_1EBAD26F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoresTagFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD26E8);
  }
  return result;
}

id sub_1DF174658(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (id *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEAC4300(a1, (uint64_t)v4, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  uint64_t v5 = (void *)v4[3];
  uint64_t v6 = v4[6];
  uint64_t v7 = (void *)v4[7];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1DF13F890(v6, v7);
  sub_1DF13FA10();
  uint64_t v9 = (uint64_t)v4 + *(int *)(v8 + 48);
  sub_1DEAE6E48();
  uint64_t v10 = (void *)sub_1DFDFEC20();
  sub_1DF1764D8(&qword_1EAC28E50, (void (*)(uint64_t))sub_1DEAE6E48);
  sub_1DF17616C(v9, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes);
  swift_getObjectType();
  id v11 = v10;
  sub_1DF174BF4((uint64_t)v11, a1);

  id v16 = v11;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v13;
  swift_retain();
  swift_retain();
  sub_1DFDF03D0();
  swift_release();
  swift_release();
  swift_release();
  return v11;
}

id sub_1DF1748B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAC4300(a1, (uint64_t)v10, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DF17616C((uint64_t)v10, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
    sub_1DEE0F8DC();
    id v11 = (void *)sub_1DFDFEC20();
    sub_1DF1764D8(&qword_1EAC28E60, (void (*)(uint64_t))sub_1DEE0F8DC);
  }
  else
  {
    sub_1DF13F8D8();
    uint64_t v13 = &v10[*(int *)(v12 + 48)];
    sub_1DE92B6CC();
    id v11 = (void *)sub_1DFDFEC20();
    sub_1DF1764D8(&qword_1EAC28E68, (void (*)(uint64_t))sub_1DE92B6CC);
    uint64_t v14 = sub_1DFDF4540();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    uint64_t v15 = sub_1DFDF2EB0();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v10, v15);
  }
  swift_getObjectType();
  id v16 = v11;
  sub_1DF1753E0((uint64_t)v16, a1, a4, a5);

  id v21 = v16;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v19 = (void *)swift_allocObject();
  _OWORD v19[2] = v17;
  v19[3] = v18;
  v19[4] = a4;
  v19[5] = a5;
  swift_retain();
  swift_retain();
  sub_1DEABEEE0(a4);
  sub_1DFDF03D0();
  swift_release();
  swift_release();
  swift_release();
  return v16;
}

void *sub_1DF174BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAC4300(a2, (uint64_t)v10, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  long long v11 = *((_OWORD *)v10 + 3);
  void v18[2] = *((_OWORD *)v10 + 2);
  v18[3] = v11;
  uint64_t v19 = *((void *)v10 + 8);
  long long v12 = *((_OWORD *)v10 + 1);
  v18[0] = *(_OWORD *)v10;
  v18[1] = v12;
  sub_1DF13FA10();
  sub_1DF176574((uint64_t)&v10[*(int *)(v13 + 48)], (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes);
  sub_1DEAE6E48();
  sub_1DFDFD9B0();
  if (v3)
  {
    sub_1DF17616C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes);
    return sub_1DF176418(v18);
  }
  else
  {
    uint64_t v15 = (void *)v17[1];
    __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
    id v16 = (char *)sub_1DFDF2C80();
    sub_1DF8BDFA4(v18, (uint64_t)v7, v16);

    sub_1DF176418(v18);
    return (void *)sub_1DF17616C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes);
  }
}

void sub_1DF174DD0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1DF176520(0, &qword_1EAC28E58, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v33 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v18 = Strong;
  id v36 = a1;
  swift_beginAccess();
  uint64_t v19 = MEMORY[0x1E01EFB70](a4 + 16);
  if (!v19)
  {
LABEL_9:
    swift_release();
    return;
  }
  uint64_t v20 = (void *)v19;
  sub_1DFDF03C0();
  if (!v38)
  {
    sub_1DE9E4C20((uint64_t)aBlock);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_11;
  }
  int v21 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, v21 ^ 1u, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_11:
    swift_release();

    sub_1DF176110((uint64_t)v9, &qword_1EAC28E58, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
    return;
  }
  sub_1DF176574((uint64_t)v9, (uint64_t)v16, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  uint64_t v22 = *(void *)(v18 + 96);
  if (v22)
  {
    swift_retain();
    if (sub_1DFDF4BE0())
    {
      id v35 = self;
      sub_1DEAC4300((uint64_t)v16, (uint64_t)v14, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
      unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      unint64_t v34 = (v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v24 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v25 = swift_allocObject();
      id v26 = v36;
      *(void *)(v25 + 16) = v18;
      *(void *)(v25 + 24) = v26;
      sub_1DF176574((uint64_t)v14, v25 + v23, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
      *(void *)(v25 + v34) = v22;
      *(void *)(v25 + v24) = v20;
      *(void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8)) = a2;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_1DF17635C;
      *(void *)(v27 + 24) = v25;
      uint64_t v39 = sub_1DE98147C;
      uint64_t v40 = v27;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DE98142C;
      unint64_t v38 = &block_descriptor_76;
      unint64_t v28 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      id v29 = v36;
      id v30 = v20;
      id v31 = a2;
      swift_retain();
      swift_release();
      objc_msgSend(v35, sel_performWithoutAnimation_, v28);
      _Block_release(v28);
      swift_release();
      swift_release();

      sub_1DF17616C((uint64_t)v16, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return;
      }
      __break(1u);
      goto LABEL_9;
    }
    sub_1DF17616C((uint64_t)v16, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
    swift_release();
  }
  else
  {
    sub_1DF17616C((uint64_t)v16, type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader);
  }
  swift_release();
}

void *sub_1DF1752E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DF174BF4(a2, a3);
}

uint64_t sub_1DF1753E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v37 = a1;
  uint64_t v38 = sub_1DFDF4540();
  uint64_t v6 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDF2EB0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAC4300(a2, (uint64_t)v15, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return swift_release();
  }
  sub_1DF13F8D8();
  uint64_t v18 = &v15[*(int *)(v17 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
  uint64_t v19 = v18;
  uint64_t v20 = v38;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v19, v38);
  sub_1DE92B6CC();
  sub_1DFDFD9B0();
  if (v4)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  }
  else
  {
    int v21 = v39;
    uint64_t v22 = v34 + 7;
    uint64_t v23 = v34[10];
    unint64_t v34 = (void *)v34[11];
    uint64_t v33 = __swift_project_boxed_opaque_existential_1(v22, v23);
    uint64_t v24 = sub_1DFDF2C80();
    uint64_t v37 = v6;
    uint64_t v25 = (void *)v24;
    sub_1DFDF3DF0();

    id v26 = (void *)sub_1DFDF2C80();
    uint64_t v27 = (void *)sub_1DFDF1CA0();

    unint64_t v28 = (void *)sub_1DFDF5060();
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v35;
    uint64_t v31 = v36;
    *(void *)(v29 + 16) = v35;
    *(void *)(v29 + 24) = v31;
    sub_1DEABEEE0(v30);
    uint64_t v32 = (void *)sub_1DFDF5050();

    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v38);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1DF175748(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v41 = a1;
  uint64_t v42 = a5;
  sub_1DF176520(0, (unint64_t *)&unk_1EAC28E70, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v37 - v17;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v20 = Strong;
  uint64_t v40 = a6;
  swift_beginAccess();
  uint64_t v21 = MEMORY[0x1E01EFB70](a4 + 16);
  if (!v21)
  {
LABEL_9:
    swift_release();
    return;
  }
  uint64_t v22 = (void *)v21;
  sub_1DFDF03C0();
  if (!v44)
  {
    sub_1DE9E4C20((uint64_t)aBlock);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_11;
  }
  int v23 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, v23 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_11:
    swift_release();

    sub_1DF176110((uint64_t)v11, (unint64_t *)&unk_1EAC28E70, (void (*)(uint64_t))type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
    return;
  }
  sub_1DF176574((uint64_t)v11, (uint64_t)v18, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  uint64_t v24 = *(void *)(v20 + 96);
  if (v24)
  {
    swift_retain();
    if (sub_1DFDF4BE0())
    {
      id v39 = self;
      sub_1DEAC4300((uint64_t)v18, (uint64_t)v16, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
      unint64_t v25 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      unint64_t v37 = (v14 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v38 = (v37 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v26 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v27 = swift_allocObject();
      id v28 = v41;
      *(void *)(v27 + 16) = v20;
      *(void *)(v27 + 24) = v28;
      sub_1DF176574((uint64_t)v16, v27 + v25, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
      uint64_t v29 = (void *)(v27 + v37);
      uint64_t v30 = v40;
      *uint64_t v29 = v42;
      v29[1] = v30;
      *(void *)(v27 + v38) = v24;
      *(void *)(v27 + v26) = v22;
      *(void *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = a2;
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = sub_1DF17678C;
      *(void *)(v31 + 24) = v27;
      uint64_t v45 = sub_1DEABEEC4;
      uint64_t v46 = v31;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DE98142C;
      uint64_t v44 = &block_descriptor_32_2;
      uint64_t v32 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      id v33 = v41;
      sub_1DEABEEE0(v42);
      id v34 = v22;
      id v35 = a2;
      swift_retain();
      swift_release();
      objc_msgSend(v39, sel_performWithoutAnimation_, v32);
      _Block_release(v32);
      swift_release();
      swift_release();

      sub_1DF17616C((uint64_t)v18, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return;
      }
      __break(1u);
      goto LABEL_9;
    }
    sub_1DF17616C((uint64_t)v18, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
    swift_release();
  }
  else
  {
    sub_1DF17616C((uint64_t)v18, type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter);
  }
  swift_release();
}

uint64_t sub_1DF175C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DF1753E0(a2, a3, a4, a5);
}

void sub_1DF175D8C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1DFDE78B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDE79A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1E01EFB70](a1 + 16);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    uint64_t v14 = MEMORY[0x1E4FBB550];
    sub_1DE9DB808(0, (unint64_t *)&qword_1EBABB760, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DFE0B250;
    id v16 = objc_msgSend(a2, sel_indexPath);
    sub_1DFDE7950();

    uint64_t v17 = sub_1DFDE7990();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(void *)(v15 + 32) = v17;
    uint64_t v19 = v15;
    sub_1DF1764D8(&qword_1EAC25A78, MEMORY[0x1E4F27D00]);
    sub_1DE9DB808(0, (unint64_t *)&unk_1EBACA550, v14, MEMORY[0x1E4FBB320]);
    sub_1DEE81A08();
    sub_1DFDFF830();
    uint64_t v18 = (void *)sub_1DFDE7870();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v13, sel_reloadSections_, v18);
  }
}

uint64_t sub_1DF176058()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF176090()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF1760C8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DF176108(void *a1, void *a2)
{
  sub_1DF174DD0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1DF176110(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DF176520(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF17616C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DF1761CC()
{
  uint64_t v1 = *(void *)(type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  swift_release();

  uint64_t v4 = v0 + v2;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 48))
  {
    swift_unknownObjectRelease();

    swift_release();
  }
  unint64_t v5 = (((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1DF13FA10();
  uint64_t v7 = v4 + *(int *)(v6 + 48);

  uint64_t v8 = v7 + *(int *)(type metadata accessor for MagazineFeedGroupTitleViewLayoutAttributes() + 48);
  uint64_t v9 = sub_1DFDE81B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return swift_deallocObject();
}

void *sub_1DF17635C()
{
  uint64_t v1 = *(void *)(type metadata accessor for MagazineFeedEmbeddedSupplementaryHeader(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1DF1752E0(v2, v3, v4);
}

uint64_t sub_1DF176404()
{
  return swift_deallocObject();
}

void *sub_1DF176418(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  uint64_t v3 = a1[6];
  uint64_t v4 = (void *)a1[7];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1DF13F890(v3, v4);
  return a1;
}

uint64_t sub_1DF17647C()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1DF1764CC(void *a1, void *a2)
{
  sub_1DF175748(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1DF1764D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF176520(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DF176574(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF1765DC()
{
  uint64_t v1 = *(void *)(type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  uint64_t v4 = v0 + v2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
  }
  else
  {
    uint64_t v5 = sub_1DFDF2EB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    sub_1DF13F8D8();
    uint64_t v7 = v4 + *(int *)(v6 + 48);
    uint64_t v8 = sub_1DFDF4540();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  if (*(void *)(v0 + v3)) {
    swift_release();
  }
  unint64_t v9 = (((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DF17678C()
{
  uint64_t v1 = *(void *)(type metadata accessor for MagazineFeedEmbeddedSupplementaryFooter(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  return sub_1DF175C84(v4, v5, v0 + v2, v6, v7);
}

uint64_t sub_1DF176844()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_16Tm_0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1DF176898()
{
  sub_1DF175D8C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1DF1768B4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DF1768F4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1DF176930@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7NewsUI230NewslettersStateCommandHandler_newsletterManager), sel_cachedNewsletters);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1DF176CAC();
    unint64_t v5 = sub_1DFDFE220();

    if (v5 >> 62) {
      goto LABEL_18;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = sub_1DFDFFBE0())
    {
      uint64_t v7 = 4;
      while (1)
      {
        id v8 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E01EE240](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
        unint64_t v9 = v8;
        uint64_t v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        id v11 = objc_msgSend(v8, sel_enrollment);

        if (v11 == (id)2)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v12 = (unsigned int *)MEMORY[0x1E4F81268];
          goto LABEL_13;
        }
        ++v7;
        if (v10 == v6) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = (unsigned int *)MEMORY[0x1E4F81270];
LABEL_13:
  uint64_t v13 = *v12;
  uint64_t v14 = sub_1DFDFC130();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);
  return v15(a1, v13, v14);
}

uint64_t type metadata accessor for NewslettersStateCommandHandler()
{
  return self;
}

uint64_t sub_1DF176B74@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF176930(a1);
}

unint64_t sub_1DF176C54()
{
  unint64_t result = qword_1EAC28EF8;
  if (!qword_1EAC28EF8)
  {
    sub_1DFDFC130();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28EF8);
  }
  return result;
}

unint64_t sub_1DF176CAC()
{
  unint64_t result = qword_1EAC28F00[0];
  if (!qword_1EAC28F00[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1EAC28F00);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ShortcutsUpdateRequest(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShortcutsUpdateRequest(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ShortcutsUpdateRequest(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ShortcutsUpdateRequest()
{
  return &type metadata for ShortcutsUpdateRequest;
}

double sub_1DF176DB8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  char v3 = v2;
  unint64_t v5 = sub_1DE91756C(a1);
  if (v6)
  {
    unint64_t v7 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    uint64_t v11 = *v3;
    *char v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1DF65D8D4();
      uint64_t v9 = v11;
    }
    sub_1DE922160(*(void *)(v9 + 56) + 16 * v7, (uint64_t)a2);
    sub_1DF7D0228(v7, v9);
    *char v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = xmmword_1DFE14050;
  }
  return result;
}

uint64_t sub_1DF176E60()
{
  sub_1DFDE7B70();
  sub_1DEAD346C();
  sub_1DFDE7EB0();
  swift_release();
  if ((v4 & 0x100) != 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7NewsUI225EngagementFeatureSettings_store + 24);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7NewsUI225EngagementFeatureSettings_store + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC7NewsUI225EngagementFeatureSettings_store), v2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(&v4, v2, v3);
  return v4 & 1;
}

uint64_t sub_1DF176F30()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7NewsUI225EngagementFeatureSettings_observers);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(*v1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
  if (!v6) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
LABEL_8:
  uint64_t v12 = *(void *)(v2 + 56);
  uint64_t v35 = *(void *)(*(void *)(v2 + 48) + 8 * v11);
  sub_1DF177614(v12 + 16 * v11, (uint64_t)v36);
  while (1)
  {
    sub_1DF177650((uint64_t)&v35, (uint64_t)&v37, (uint64_t (*)(void))sub_1DF1776B8);
    if (v38[0]) {
      BOOL v16 = 0;
    }
    else {
      BOOL v16 = v38[1] == 1;
    }
    if (v16)
    {
      swift_release();
      return (uint64_t)v30;
    }
    uint64_t v17 = v37;
    sub_1DE922160((uint64_t)v38, (uint64_t)v33);
    uint64_t v18 = MEMORY[0x1E01EFB70](v33);
    if (v18)
    {
      uint64_t v24 = v18;
      uint64_t v28 = v34;
      swift_unknownObjectRetain();
      uint64_t v29 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v30 = sub_1DEE1A304(0, v30[2] + 1, 1, v30);
      }
      unint64_t v26 = v30[2];
      unint64_t v25 = v30[3];
      if (v26 >= v25 >> 1) {
        uint64_t v30 = sub_1DEE1A304((void *)(v25 > 1), v26 + 1, 1, v30);
      }
      v30[2] = v26 + 1;
      uint64_t v27 = &v30[2 * v26];
      void v27[4] = v24;
      v27[5] = v28;
      swift_unknownObjectRelease();
      uint64_t result = sub_1DEB1DDEC((uint64_t)v33);
      uint64_t v3 = v29;
      if (v6) {
        goto LABEL_7;
      }
    }
    else
    {
      swift_beginAccess();
      unint64_t v19 = sub_1DE91756C(v17);
      if (v20)
      {
        unint64_t v21 = v19;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = *v1;
        uint64_t v31 = *v1;
        *uint64_t v1 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DF65D8D4();
          uint64_t v23 = v31;
        }
        sub_1DE922160(*(void *)(v23 + 56) + 16 * v21, (uint64_t)&v32);
        sub_1DF7D0228(v21, v23);
        *uint64_t v1 = v23;
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v32 = xmmword_1DFE14050;
      }
      swift_endAccess();
      sub_1DEAD3510((uint64_t)&v32, (uint64_t (*)(void))sub_1DEAD35E0);
      uint64_t result = sub_1DEB1DDEC((uint64_t)v33);
      if (v6) {
        goto LABEL_7;
      }
    }
LABEL_9:
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v13 >= v7)
    {
      int64_t v15 = v9;
    }
    else
    {
      unint64_t v14 = *(void *)(v3 + 8 * v13);
      if (v14) {
        goto LABEL_12;
      }
      int64_t v15 = v9 + 1;
      if (v9 + 2 < v7)
      {
        unint64_t v14 = *(void *)(v3 + 8 * (v9 + 2));
        if (v14)
        {
          int64_t v13 = v9 + 2;
LABEL_12:
          unint64_t v6 = (v14 - 1) & v14;
          unint64_t v11 = __clz(__rbit64(v14)) + (v13 << 6);
          int64_t v9 = v13;
          goto LABEL_8;
        }
        int64_t v15 = v9 + 2;
        if (v9 + 3 < v7)
        {
          unint64_t v14 = *(void *)(v3 + 8 * (v9 + 3));
          if (v14)
          {
            int64_t v13 = v9 + 3;
            goto LABEL_12;
          }
          int64_t v13 = v9 + 4;
          int64_t v15 = v9 + 3;
          if (v9 + 4 < v7)
          {
            unint64_t v14 = *(void *)(v3 + 8 * v13);
            if (v14) {
              goto LABEL_12;
            }
            while (v7 - 5 != v9)
            {
              unint64_t v14 = *(void *)(v2 + 104 + 8 * v9++);
              if (v14)
              {
                int64_t v13 = v9 + 4;
                goto LABEL_12;
              }
            }
            int64_t v15 = v7 - 1;
          }
        }
      }
    }
    unint64_t v6 = 0;
    uint64_t v35 = 0;
    v36[0] = 0;
    int64_t v9 = v15;
    v36[1] = 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF1772CC()
{
  swift_bridgeObjectRelease();
  sub_1DEAD3510(v0 + OBJC_IVAR____TtC7NewsUI225EngagementFeatureSettings____lazy_storage___engagementUpsellConfig, (uint64_t (*)(void))sub_1DE9FEE9C);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC7NewsUI225EngagementFeatureSettings_store);
  return swift_deallocClassInstance();
}

uint64_t sub_1DF17738C()
{
  return type metadata accessor for EngagementFeatureSettings();
}

uint64_t initializeWithCopy for EngagementFeatureSettings.Observation(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for EngagementFeatureSettings.Observation(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for EngagementFeatureSettings.Observation(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for EngagementFeatureSettings.Observation(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t storeEnumTagSinglePayload for EngagementFeatureSettings.Observation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementFeatureSettings.Observation()
{
  return &type metadata for EngagementFeatureSettings.Observation;
}

uint64_t sub_1DF177498(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

unsigned char *(*sub_1DF1774A0(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1DE92CB5C() & 1;
  return sub_1DF1774EC;
}

unsigned char *sub_1DF1774EC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 17) = result[8];
  return result;
}

void *(*sub_1DF177500(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1DF176E60() & 1;
  return sub_1DF17754C;
}

void *sub_1DF17754C(uint64_t a1)
{
  return sub_1DE92C1FC(*(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1DF177574(uint64_t a1)
{
  sub_1DFDEC9B0();
  swift_beginAccess();
  sub_1DF176DB8(a1, &v3);
  swift_endAccess();
  sub_1DEAD3510((uint64_t)&v3, (uint64_t (*)(void))sub_1DEAD35E0);
  return sub_1DFDEC9C0();
}

uint64_t sub_1DF177614(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_1DF177650(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1DF1776B8()
{
  if (!qword_1EAC28F18)
  {
    sub_1DEABC3EC(255, (unint64_t *)&unk_1EAC28F20);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC28F18);
    }
  }
}

uint64_t PuzzleViewConfig.init(visualEffect:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static PuzzleViewConfig.default.getter(void *a1@<X8>)
{
  *a1 = 0;
}

id PuzzleViewConfig.visualEffect.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void **initializeBufferWithCopyOfBuffer for PuzzleViewConfig(void **a1, void **a2)
{
  long long v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for PuzzleViewConfig(void **a1, void **a2)
{
  long long v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for PuzzleViewConfig(void **a1, void **a2)
{
  long long v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleViewConfig(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleViewConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleViewConfig()
{
  return &type metadata for PuzzleViewConfig;
}

uint64_t type metadata accessor for AudioPlaylistFeedLayoutModel()
{
  uint64_t result = qword_1EAC28F30;
  if (!qword_1EAC28F30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_1DF177908()
{
  uint64_t v1 = sub_1DFDF8FD0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  int64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF177F90(v0, (uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_1DFDF8FB0();
  double v9 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v9;
}

uint64_t sub_1DF177A6C(uint64_t a1)
{
  uint64_t v2 = sub_1DF177FF4(&qword_1EAC28F40);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1DF177AC4()
{
  return sub_1DF177FF4(&qword_1EAC243E8);
}

uint64_t sub_1DF177AF8(uint64_t a1, uint64_t a2)
{
  return sub_1DF177E4C(a1, a2, MEMORY[0x1E4F7DC40]);
}

uint64_t sub_1DF177B10(uint64_t a1, uint64_t a2)
{
  return sub_1DF177E4C(a1, a2, MEMORY[0x1E4F7FDA8]);
}

uint64_t sub_1DF177B28(uint64_t a1, uint64_t a2)
{
  return sub_1DF177CE8(a1, a2, MEMORY[0x1E4F7FDB0]);
}

uint64_t sub_1DF177B40(uint64_t a1, uint64_t a2)
{
  return sub_1DF177E4C(a1, a2, MEMORY[0x1E4F7FD28]);
}

uint64_t sub_1DF177B58()
{
  uint64_t v1 = sub_1DFDF8FD0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  int64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF177F90(v0, (uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  uint64_t v8 = sub_1DFDF8F40();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v8;
}

uint64_t sub_1DF177CA0(uint64_t a1, uint64_t a2)
{
  return sub_1DF177CE8(a1, a2, MEMORY[0x1E4F7FD98]);
}

uint64_t sub_1DF177CB8(uint64_t a1, uint64_t a2)
{
  return sub_1DF177CE8(a1, a2, MEMORY[0x1E4F7FD80]);
}

uint64_t sub_1DF177CD0(uint64_t a1, uint64_t a2)
{
  return sub_1DF177CE8(a1, a2, MEMORY[0x1E4F7FD68]);
}

uint64_t sub_1DF177CE8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = sub_1DFDF8FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  double v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF177F90(v3, (uint64_t)v11);
  uint64_t v12 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
  a3(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1DF177E34(uint64_t a1, uint64_t a2)
{
  return sub_1DF177E4C(a1, a2, MEMORY[0x1E4F7FD10]);
}

uint64_t sub_1DF177E4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = sub_1DFDF8FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  double v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF177F90(v3, (uint64_t)v11);
  uint64_t v12 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
  uint64_t v13 = a3(v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v13;
}

uint64_t sub_1DF177F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioPlaylistFeedLayoutModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF177FF4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AudioPlaylistFeedLayoutModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1DF178038(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v4[5] = a2[5];
    uint64_t v8 = *(int *)(a3 + 24);
    double v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1DFDF9D80();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_1DF178164(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DFDF9D80();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DF1781E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF9D80();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t *sub_1DF1782B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDF9D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DF17834C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DFDF9D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DF1783D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DFDF9D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1DF178468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF17847C);
}

uint64_t sub_1DF17847C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF9D80();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF17852C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF178540);
}

uint64_t sub_1DF178540(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDF9D80();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TodayRebuildShortcutsModifier()
{
  uint64_t result = qword_1EBAF5D20;
  if (!qword_1EBAF5D20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF178634()
{
  uint64_t result = sub_1DFDF9D80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF1786D8(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v103 = a3;
  uint64_t v104 = a2;
  uint64_t v95 = sub_1DFDF1930();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v93 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA70F4(0, &qword_1EBAA8158, MEMORY[0x1E4FACA00]);
  uint64_t v101 = *(void *)(v5 - 8);
  uint64_t v102 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v100 = (uint64_t *)((char *)&v86 - v6);
  sub_1DEAA7740();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v91 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v89 = (uint64_t)&v86 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v98 = (uint64_t)&v86 - v12;
  sub_1DEAA70F4(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  uint64_t v14 = v13;
  uint64_t v15 = *((void *)v13 - 1);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  unint64_t v92 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v86 - v18;
  sub_1DEA7A618();
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA70F4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  uint64_t v25 = v24;
  uint64_t v105 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v88 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v86 - v29;
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v109 = (char *)&v86 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v96 = (char *)&v86 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v99 = (uint64_t)&v86 - v35;
  uint64_t v36 = *(void (**)(void (*)(void, void), uint64_t, char *))(v15 + 16);
  uint64_t v97 = a1;
  uint64_t v111 = v36;
  uint64_t v112 = v15 + 16;
  v36((void (*)(void, void))v19, a1, v14);
  sub_1DEA7A6B4((unint64_t *)&unk_1EBAA3B80);
  uint64_t v110 = (void (*)(void, void))v19;
  uint64_t v37 = (uint64_t)v23;
  sub_1DFDFDFB0();
  unint64_t v38 = &v23[*(int *)(v21 + 44)];
  sub_1DEA7A6B4((unint64_t *)&unk_1EBAA85E0);
  uint64_t v39 = *(void *)v38;
  sub_1DFDFE720();
  if (v39 == v114[0])
  {
LABEL_5:
    sub_1DF179490(v37, (uint64_t (*)(void))sub_1DEA7A618);
    sub_1DF1794F0();
    uint64_t v49 = swift_allocError();
    uint64_t v51 = v100;
    uint64_t v50 = v101;
    *uint64_t v100 = v49;
    uint64_t v52 = v102;
    (*(void (**)(uint64_t *, void, uint64_t))(v50 + 104))(v51, *MEMORY[0x1E4FAC9E0], v102);
    v104(v51);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v50 + 8))(v51, v52);
  }
  uint64_t v40 = v14;
  uint64_t v106 = (void (**)(char *))(v105 + 16);
  uint64_t v107 = (void *)(v15 + 8);
  BOOL v108 = (void (***)(char *))(v105 + 32);
  uint64_t v113 = (void (**)(char *, uint64_t))(v105 + 8);
  while (1)
  {
    id v41 = (void (*)(unint64_t *, void))sub_1DFDFE760();
    uint64_t v42 = v30;
    uint64_t v43 = v109;
    (*v106)(v109);
    v41(v114, 0);
    uint64_t v44 = v110;
    v111(v110, v37, v40);
    sub_1DFDFE730();
    uint64_t v45 = (void (*)(void, char *))*v107;
    ((void (*)(void, char *))*v107)(v44, v40);
    uint64_t v46 = *v108;
    uint64_t v47 = v43;
    uint64_t v30 = v42;
    ((void (*)(char *, char *, uint64_t))*v108)(v42, v47, v25);
    sub_1DFDF14D0();
    LODWORD(v44) = (v114[0] >> 58) & 0x3C | (LODWORD(v114[0]) >> 1) & 3;
    swift_release();
    if (v44 == 22) {
      break;
    }
    (*v113)(v42, v25);
    uint64_t v48 = *(void *)v38;
    sub_1DFDFE720();
    if (v48 == v114[0]) {
      goto LABEL_5;
    }
  }
  uint64_t v109 = v40;
  uint64_t v110 = (void (*)(void, void))v45;
  sub_1DF179490(v37, (uint64_t (*)(void))sub_1DEA7A618);
  uint64_t v54 = v96;
  ((void (*)(char *, char *, uint64_t))v46)(v96, v42, v25);
  ((void (*)(uint64_t, char *, uint64_t))v46)(v99, v54, v25);
  uint64_t v55 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56);
  uint64_t v56 = v98;
  uint64_t v96 = (char *)(v105 + 56);
  uint64_t v86 = v55;
  v55(v98, 1, 1, v25);
  sub_1DFDF14D0();
  LODWORD(v54) = (v114[0] >> 58) & 0x3C | (LODWORD(v114[0]) >> 1) & 3;
  swift_release();
  uint64_t v57 = v25;
  uint64_t v58 = v113;
  uint64_t v106 = v46;
  uint64_t v87 = v25;
  if (v54 != 22) {
    goto LABEL_21;
  }
  unint64_t v59 = v90[5];
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_1DFDFFBE0();
    if (v60) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v60 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v60)
    {
LABEL_9:
      v114[0] = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1DEA9B358(0, v60 & ~(v60 >> 63), 0);
      if (v60 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v61 = 0;
      unint64_t v62 = v114[0];
      unint64_t v63 = v59 & 0xC000000000000001;
      unint64_t v64 = v59;
      do
      {
        if (v63) {
          id v65 = (id)MEMORY[0x1E01EE240](v61, v59);
        }
        else {
          id v65 = *(id *)(v59 + 8 * v61 + 32);
        }
        uint64_t v66 = v65;
        id v67 = objc_msgSend(v65, sel_identifier);
        uint64_t v68 = sub_1DFDFDD20();
        uint64_t v70 = v69;

        v114[0] = v62;
        unint64_t v72 = *(void *)(v62 + 16);
        unint64_t v71 = *(void *)(v62 + 24);
        if (v72 >= v71 >> 1)
        {
          sub_1DEA9B358(v71 > 1, v72 + 1, 1);
          unint64_t v62 = v114[0];
        }
        ++v61;
        *(void *)(v62 + 16) = v72 + 1;
        unint64_t v73 = v62 + 16 * v72;
        *(void *)(v73 + 32) = v68;
        *(void *)(v73 + 40) = v70;
        uint64_t v58 = v113;
        unint64_t v59 = v64;
      }
      while (v60 != v61);
      swift_bridgeObjectRelease();
      uint64_t v56 = v98;
      uint64_t v57 = v87;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v62 = MEMORY[0x1E4FBC860];
LABEL_20:
  uint64_t v74 = v90;
  __swift_project_boxed_opaque_existential_1(v90, v90[3]);
  uint64_t v75 = type metadata accessor for TodayRebuildShortcutsModifier();
  sub_1DEFCB594(v99, (unint64_t)v74 + *(int *)(v75 + 24), (char *)v62, 1, v89);
  sub_1DF179490(v56, (uint64_t (*)(void))sub_1DEAA7740);
  swift_bridgeObjectRelease();
  uint64_t v76 = v89;
  v86(v89, 0, 1, v57);
  sub_1DEBD3AB8(v76, v56);
LABEL_21:
  uint64_t v77 = v92;
  uint64_t v78 = v109;
  v111((void (*)(void, void))v92, v97, v109);
  uint64_t v79 = v91;
  sub_1DF17942C(v56, v91);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v79, 1, v57) == 1)
  {
    sub_1DF179490(v79, (uint64_t (*)(void))sub_1DEAA7740);
  }
  else
  {
    uint64_t v80 = v88;
    ((void (*)(char *, uint64_t, uint64_t))v106)(v88, v79, v57);
    sub_1DFDF59D0();
    (*v58)(v80, v57);
  }
  uint64_t v81 = (uint64_t (**)(uint64_t, uint64_t))v58;
  uint64_t v82 = v94;
  uint64_t v83 = v93;
  uint64_t v84 = v95;
  (*(void (**)(char *, void, uint64_t))(v94 + 104))(v93, *MEMORY[0x1E4FAC298], v95);
  type metadata accessor for TodayModel(0);
  sub_1DEA98AA4();
  sub_1DF179544(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
  sub_1DEA908FC();
  uint64_t v85 = v100;
  sub_1DFDF3050();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
  v104(v85);
  (*(void (**)(uint64_t *, uint64_t))(v101 + 8))(v85, v102);
  v110(v77, v78);
  sub_1DF179490(v98, (uint64_t (*)(void))sub_1DEAA7740);
  return (*v81)(v99, v87);
}

uint64_t sub_1DF179330(uint64_t a1)
{
  uint64_t v2 = sub_1DF179544(&qword_1EBAF68B0, (void (*)(uint64_t))type metadata accessor for TodayRebuildShortcutsModifier);
  return MEMORY[0x1F4161388](a1, v2);
}

uint64_t sub_1DF17939C()
{
  return sub_1DF179544(qword_1EBAF68B8, (void (*)(uint64_t))type metadata accessor for TodayRebuildShortcutsModifier);
}

uint64_t sub_1DF1793E4()
{
  return sub_1DF179544(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
}

uint64_t sub_1DF17942C(uint64_t a1, uint64_t a2)
{
  sub_1DEAA7740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF179490(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DF1794F0()
{
  unint64_t result = qword_1EAC28F48;
  if (!qword_1EAC28F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28F48);
  }
  return result;
}

uint64_t sub_1DF179544(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TodayRebuildShortcutsModifier.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF179628);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayRebuildShortcutsModifier.Errors()
{
  return &type metadata for TodayRebuildShortcutsModifier.Errors;
}

unint64_t sub_1DF179664()
{
  unint64_t result = qword_1EAC28F50;
  if (!qword_1EAC28F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28F50);
  }
  return result;
}

uint64_t static Settings.Audio.refreshEveryLaunch.getter()
{
  if (qword_1EBABE3C8 != -1) {
    swift_once();
  }
  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.Audio()
{
  return &type metadata for Settings.Audio;
}

uint64_t sub_1DF179724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF179738);
}

uint64_t sub_1DF179738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1DF179808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF17981C);
}

uint64_t sub_1DF17981C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DFDF2BF0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for SportsTagLayoutOptions()
{
  uint64_t result = qword_1EAC28F58;
  if (!qword_1EAC28F58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF179924()
{
  uint64_t result = sub_1DFDF2BF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of WebViewerEventObserving.webViewerWillComplete()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WebViewerEventObserving.webViewerDidComplete(viewImpression:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t *sub_1DF179A08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for SportsDetailModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = sub_1DFDFC270();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = type metadata accessor for SportsModel();
      *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
      *(uint64_t *)((char *)a1 + *(int *)(v11 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 24));
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DF179B90(uint64_t a1)
{
  type metadata accessor for SportsDetailModel();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v3 = sub_1DFDFC270();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for SportsModel();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1DF179C78(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for SportsDetailModel();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = sub_1DFDFC270();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = type metadata accessor for SportsModel();
    *(void *)((char *)a1 + *(int *)(v9 + 20)) = *(void *)((char *)a2 + *(int *)(v9 + 20));
    *(void *)((char *)a1 + *(int *)(v9 + 24)) = *(void *)((char *)a2 + *(int *)(v9 + 24));
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DF179DB0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DF179F18((uint64_t)a1);
    type metadata accessor for SportsDetailModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = sub_1DFDFC270();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for SportsModel();
      *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
      *(void *)((char *)a1 + *(int *)(v8 + 24)) = *(void *)((char *)a2 + *(int *)(v8 + 24));
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF179F18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsDetailModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1DF179F74(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SportsDetailModel();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1DFDFC270();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for SportsModel();
    *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
    *(void *)&a1[*(int *)(v8 + 24)] = *(void *)&a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  return a1;
}

char *sub_1DF17A068(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DF179F18((uint64_t)a1);
    uint64_t v6 = type metadata accessor for SportsDetailModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1DFDFC270();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for SportsModel();
      *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
      *(void *)&a1[*(int *)(v8 + 24)] = *(void *)&a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF17A180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF17A194);
}

uint64_t sub_1DF17A194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SportsDetailModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DF17A254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF17A268);
}

uint64_t sub_1DF17A268(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SportsDetailModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SportsManagementDetailPrewarmResult()
{
  uint64_t result = qword_1EAC28F68;
  if (!qword_1EAC28F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF17A370()
{
  uint64_t result = type metadata accessor for SportsDetailModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DF17A40C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1DEAC0CEC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1DF17A4D8(uint64_t a1)
{
  sub_1DEAC0CEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_1DF17A54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEAC0CEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_1DF17A5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEAC0CEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DF17A658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEAC0CEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DF17A6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEAC0CEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1DF17A758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF17A76C);
}

uint64_t sub_1DF17A76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEAC0CEC();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DF17A82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF17A840);
}

void sub_1DF17A840(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEAC0CEC();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1DF17A8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_1DF17B0F4();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAC0CEC();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF17B1A0(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    type metadata accessor for SavedFeedServiceConfig();
    sub_1DE94D2E0((unint64_t *)&qword_1EBAC3860, (void (*)(uint64_t))type metadata accessor for SavedFeedServiceConfig);
    sub_1DFDF8040();
    sub_1DF17B204((uint64_t)v8);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a3, v13, v10);
  }
  else
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v14(v13, v8, v10);
    v14(a3, v13, v10);
  }
  if (!a2)
  {
    v16[1] = 6;
    sub_1DEA0F99C();
    swift_allocObject();
    a2 = sub_1DFDF8C00();
  }
  sub_1DF17B204(a1);
  uint64_t result = type metadata accessor for ArticleListSavedFeedGroupKnobs();
  *(void *)&a3[*(int *)(result + 20)] = a2;
  return result;
}

uint64_t sub_1DF17AB6C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  v13[0] = a2;
  sub_1DF17B0F4();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF17B260(0, &qword_1EBAEAA80, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF17B14C();
  sub_1DFE00190();
  if (!v2)
  {
    sub_1DEAC0CEC();
    char v15 = 0;
    sub_1DE94D2E0(&qword_1EBAE95E8, (void (*)(uint64_t))sub_1DEAC0CEC);
    sub_1DFDFFCD0();
    sub_1DEA0F99C();
    char v14 = 1;
    sub_1DE94D2E0(&qword_1EBAE9920, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFCD0();
    sub_1DF17A8FC((uint64_t)v6, (uint64_t)v13[1], v13[0]);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF17ADD0(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF17B260(0, &qword_1EAC28F78, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF17B14C();
  sub_1DFE001A0();
  char v13 = 0;
  sub_1DEAC0CEC();
  sub_1DE94D2E0(&qword_1EAC28F80, (void (*)(uint64_t))sub_1DEAC0CEC);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + *(int *)(type metadata accessor for ArticleListSavedFeedGroupKnobs() + 20));
    v11[15] = 1;
    sub_1DEA0F99C();
    sub_1DE94D2E0(&qword_1EBAE9918, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF17AFE8()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x73656C7572;
  }
}

uint64_t sub_1DF17B024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF17B4D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF17B04C(uint64_t a1)
{
  unint64_t v2 = sub_1DF17B14C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF17B088(uint64_t a1)
{
  unint64_t v2 = sub_1DF17B14C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF17B0C4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1DF17AB6C(a1, a2);
}

uint64_t sub_1DF17B0DC(void *a1)
{
  return sub_1DF17ADD0(a1);
}

void sub_1DF17B0F4()
{
  if (!qword_1EBAE95F8)
  {
    sub_1DEAC0CEC();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE95F8);
    }
  }
}

unint64_t sub_1DF17B14C()
{
  unint64_t result = qword_1EBAE0D70;
  if (!qword_1EBAE0D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE0D70);
  }
  return result;
}

uint64_t sub_1DF17B1A0(uint64_t a1, uint64_t a2)
{
  sub_1DF17B0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF17B204(uint64_t a1)
{
  sub_1DF17B0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DF17B260(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF17B14C();
    unint64_t v7 = a3(a1, &type metadata for ArticleListSavedFeedGroupKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ArticleListSavedFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF17B390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleListSavedFeedGroupKnobs.CodingKeys()
{
  return &type metadata for ArticleListSavedFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DF17B3CC()
{
  unint64_t result = qword_1EAC28F88;
  if (!qword_1EAC28F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC28F88);
  }
  return result;
}

unint64_t sub_1DF17B424()
{
  unint64_t result = qword_1EBAE0D80;
  if (!qword_1EBAE0D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE0D80);
  }
  return result;
}

unint64_t sub_1DF17B47C()
{
  unint64_t result = qword_1EBAE0D78;
  if (!qword_1EBAE0D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE0D78);
  }
  return result;
}

uint64_t sub_1DF17B4D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEBEBE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t type metadata accessor for SportsManagementViewController()
{
  return self;
}

void sub_1DF17B788()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v42.receiver = v0;
  v42.super_class = ObjectType;
  objc_msgSendSuper2(&v42, sel_viewDidLoad);
  BOOL v2 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_blueprintViewController];
  objc_msgSend(v0, sel_addChildViewController_, v2);
  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  unsigned int v4 = v3;
  id v5 = objc_msgSend(v2, sel_view);
  if (!v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v6 = v5;
  objc_msgSend(v4, sel_addSubview_, v5);

  objc_msgSend(v2, sel_didMoveToParentViewController_, v0);
  id v7 = objc_msgSend(v2, sel_view);
  if (!v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_16:
    __break(1u);
    return;
  }
  uint64_t v10 = v9;
  objc_msgSend(v9, sel_bounds);
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;

  objc_msgSend(v8, sel_setFrame_, v12, v14, v16, v18);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v20 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v41 = ObjectType;
  v40[0] = v0;
  uint64_t v21 = v0;
  uint64_t v22 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t)v41;
  if (v41)
  {
    uint64_t v24 = __swift_project_boxed_opaque_existential_1(v40, (uint64_t)v41);
    uint64_t v25 = *(void *)(v23 - 8);
    MEMORY[0x1F4188790](v24);
    uint64_t v27 = (char *)v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v27);
    uint64_t v28 = sub_1DFDFFF30();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  else
  {
    uint64_t v28 = 0;
  }
  id v29 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v30 = objc_msgSend(v29, sel_initWithTitle_style_target_action_, v22, 0, v28, sel_dismissVC, v40[0]);

  swift_unknownObjectRelease();
  id v31 = objc_msgSend(v21, sel_navigationItem);
  objc_msgSend(v31, sel_setRightBarButtonItem_, v30);

  sub_1DFDF30D0();
  sub_1DFDF30E0();
  uint64_t v32 = (void *)sub_1DFDF26C0();
  swift_release();
  objc_msgSend(v32, sel_setAllowsSelectionDuringEditing_, 1);

  sub_1DFDF30E0();
  uint64_t v33 = (void *)sub_1DFDF26C0();
  swift_release();
  objc_msgSend(v33, sel_addSubview_, *(void *)&v21[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_overscrollView]);

  sub_1DF17BC30();
  id v34 = objc_msgSend(v21, sel_traitCollection);
  sub_1DF17D56C();

  id v35 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_searchController], sel_searchResultsController);
  if (v35)
  {
    uint64_t v36 = v35;
    type metadata accessor for SearchViewController();
    uint64_t v37 = swift_dynamicCastClass();
    if (v37)
    {
      uint64_t v38 = *(void *)(*(void *)(v37 + OBJC_IVAR____TtC7NewsUI220SearchViewController_eventHandler) + 40);
      uint64_t v39 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v38 + 32))(v39, v38);
    }
  }
}

void sub_1DF17BC30()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  unsigned int v4 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v4, 0x80000001DFEC5E80);

  id v5 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v5, sel_setLargeTitleDisplayMode_, 2);

  id v6 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v6, sel_setSearchController_, *(void *)&v0[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_searchController]);

  id v7 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v7, sel_setHidesSearchBarWhenScrolling_, 0);

  id v8 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v8, sel_setPreferredSearchBarPlacement_, 2);

  id v9 = objc_msgSend(v0, sel_navigationItem);
  id v10 = objc_msgSend(v9, sel_searchController);

  if (v10)
  {
    objc_msgSend(v10, sel_setHidesNavigationBarDuringPresentation_, 1);
  }
  id v11 = objc_msgSend(v0, sel_navigationItem);
  id v12 = objc_msgSend(v11, sel_searchController);

  if (v12)
  {
    objc_msgSend(v12, sel_setObscuresBackgroundDuringPresentation_, 1);
  }
  id v13 = objc_msgSend(v0, sel_navigationItem);
  id v14 = objc_msgSend(v13, sel_searchController);

  if (v14)
  {
    id v15 = objc_msgSend(v14, sel_searchBar);

    objc_msgSend(v15, sel_setDelegate_, v0);
  }
  id v16 = objc_msgSend(v0, sel_navigationController);
  if (v16)
  {
    double v17 = v16;
    id v18 = objc_msgSend(v16, sel_navigationBar);

    objc_msgSend(v18, sel_setPrefersLargeTitles_, 0);
  }
}

uint64_t sub_1DF17C014(char a1)
{
  BOOL v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1DEA0D580(0);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.receiver = v2;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, sel_viewWillAppear_, a1 & 1);
  if (MEMORY[0x1E01EFB70](&v2[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_selectionProvider]))
  {
    swift_getObjectType();
    uint64_t v8 = sub_1DFDE79A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    sub_1DFDF4B30();
    swift_unknownObjectRelease();
  }
  sub_1DFDF30E0();
  id v9 = (void *)sub_1DFDF26C0();
  swift_release();
  uint64_t v10 = sub_1DFDE79A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  sub_1DFDFE830();

  return sub_1DEBD5184((uint64_t)v7);
}

id sub_1DF17C210()
{
  v42.receiver = v0;
  v42.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v42, sel_viewWillLayoutSubviews);
  id result = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_blueprintViewController], sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  BOOL v2 = result;
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v3 = result;
  objc_msgSend(result, sel_bounds);
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  objc_msgSend(v2, sel_setFrame_, v5, v7, v9, v11);
  objc_super v12 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_overscrollView];
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v13 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;

  v43.origin.x = v15;
  v43.origin.y = v17;
  v43.size.width = v19;
  v43.size.height = v21;
  double Height = CGRectGetHeight(v43);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v23 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  CGFloat v31 = v30;

  v44.origin.x = v25;
  v44.origin.y = v27;
  v44.size.width = v29;
  v44.size.height = v31;
  double Width = CGRectGetWidth(v44);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v33 = result;
    objc_msgSend(result, sel_bounds);
    CGFloat v35 = v34;
    CGFloat v37 = v36;
    CGFloat v39 = v38;
    CGFloat v41 = v40;

    v45.origin.x = v35;
    v45.origin.y = v37;
    v45.size.width = v39;
    v45.size.height = v41;
    return objc_msgSend(v12, sel_setFrame_, 0.0, -Height, Width, CGRectGetHeight(v45));
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DF17C5DC()
{
  uint64_t v19 = sub_1DFDF5B20();
  uint64_t v0 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  BOOL v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DFDF5B30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  sub_1DFDF30C0();
  sub_1DEBA1A68();
  double v10 = (uint64_t *)&v6[*(int *)(v9 + 48)];
  double v11 = &v6[*(int *)(v9 + 64)];
  sub_1DFDF1250();
  uint64_t v12 = *MEMORY[0x1E4FAC3F8];
  uint64_t v13 = sub_1DFDF1EE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = sub_1DFDF17D0();
  uint64_t v15 = MEMORY[0x1E4FAC1C8];
  v10[3] = v14;
  v10[4] = v15;
  __swift_allocate_boxed_opaque_existential_1(v10);
  sub_1DFDF1790();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAD868], v3);
  uint64_t v16 = v19;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAD880], v19);
  sub_1DFDF1750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DF17C8F4()
{
  uint64_t v0 = sub_1DFDF5B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF5B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF30C0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAD860], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAD880], v0);
  sub_1DFDF1750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF17CAD0()
{
  uint64_t v0 = sub_1DFDF5B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF5B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DFDF30C0();
  if (qword_1EAC1D908 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EACE03C0;
  uint64_t v9 = sub_1DFDF3C70();
  uint64_t v10 = MEMORY[0x1E4FACFE8];
  v7[3] = v9;
  v7[4] = v10;
  *double v7 = v8;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v12 = self;
  swift_retain();
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  uint64_t v14 = sub_1DFDFDDE0();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  v7[5] = v14;
  v7[6] = v16;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAD858], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAD888], v0);
  sub_1DFDF1750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DF17CDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DFDF47F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (result == *MEMORY[0x1E4FAD508])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    if (result == *MEMORY[0x1E4FAD4E0])
    {
      uint64_t v10 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_eventHandler) + 40);
      uint64_t ObjectType = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
    }
    if (result != *MEMORY[0x1E4FAD500] && result != *MEMORY[0x1E4FAD4E8])
    {
      if (result == *MEMORY[0x1E4FAD510]) {
        return result;
      }
      if (result != *MEMORY[0x1E4FAD528]) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
  uint64_t v13 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_eventHandler) + 40);
  uint64_t v14 = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v14, v13);
}

uint64_t sub_1DF17CFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 80))(a2, ObjectType, v4);
}

uint64_t sub_1DF17D01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 64))(a2, ObjectType, v4);
}

uint64_t sub_1DF17D07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DF17D104(a1, a2, a3, a4, sub_1DF75A328);
}

uint64_t sub_1DF17D094()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_eventHandler) + 88), *(void *)(*(void *)(v0 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_eventHandler) + 112));
  return sub_1DFDE87E0();
}

uint64_t sub_1DF17D0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DF17D104(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1DF759C70);
}

uint64_t sub_1DF17D104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v5 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_eventHandler) + 88), *(void *)(*(void *)(v5 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_eventHandler) + 112));
  return a5(a2);
}

uint64_t sub_1DF17D15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, a3, ObjectType, v6);
}

uint64_t sub_1DF17D290()
{
  return sub_1DFDF31D0();
}

void sub_1DF17D324(uint64_t a1)
{
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_searchController), sel_searchResultsController);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v5)
    {
      uint64_t v6 = v5;
      if (objc_msgSend(v5, sel_respondsToSelector_, sel_searchBar_textDidChange_))
      {
        id v7 = v4;
        uint64_t v4 = (void *)sub_1DFDFDCE0();
        objc_msgSend(v6, sel_searchBar_textDidChange_, a1, v4);
      }
    }
  }
}

void sub_1DF17D56C()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_styler];
  sub_1DE94F204((uint64_t)&v0[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_styler], (uint64_t)v14);
  id v3 = __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  id v4 = objc_msgSend(v0, sel_view);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_setBackgroundColor_, *(void *)(*__swift_project_boxed_opaque_existential_1((void *)(*v3 + 16), *(void *)(*v3 + 40))+ OBJC_IVAR____TtC7NewsUI210BaseStyler_theme));

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v6 = __swift_project_boxed_opaque_existential_1(v2, *((void *)v2 + 3));
    sub_1DFDF30E0();
    id v7 = (void *)sub_1DFDF26C0();
    swift_release();
    objc_msgSend(v7, sel_setBackgroundColor_, *(void *)(*__swift_project_boxed_opaque_existential_1((void *)(*v6 + 16), *(void *)(*v6 + 40))+ OBJC_IVAR____TtC7NewsUI210BaseStyler_theme));
    objc_msgSend(v7, sel_setSeparatorStyle_, 0);

    uint64_t v8 = __swift_project_boxed_opaque_existential_1(v2, *((void *)v2 + 3));
    id v9 = objc_msgSend(v1, sel_navigationItem);
    id v10 = *(id *)(*__swift_project_boxed_opaque_existential_1((void *)(*v8 + 16), *(void *)(*v8 + 40))+ OBJC_IVAR____TtC7NewsUI210BaseStyler_theme);
    sub_1DFDF70D0();

    double v11 = (void *)sub_1DFDFDCE0();
    objc_msgSend(v9, sel_setBackButtonTitle_, v11);

    uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC7NewsUI230SportsManagementViewController_overscrollView];
    id v13 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v13);
  }
  else
  {
    __break(1u);
  }
}

id sub_1DF17D77C(void *a1)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setCancelButtonText_, v4, 0x80000001DFEE3D80);

  return objc_msgSend(a1, sel_becomeFirstResponder);
}

uint64_t sub_1DF17D87C()
{
  return sub_1DF9D9314(v0);
}

uint64_t sub_1DF17D898(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  sub_1DEAE6578();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v4);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  sub_1DF17DAA8();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_1DFDECCA0();
  uint64_t result = swift_release();
  if (v18)
  {
    sub_1DE942EC4(&v17, (uint64_t)v19);
    uint64_t v11 = v20;
    uint64_t v12 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    id v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(v16, v11, v12);
    objc_msgSend(v13, sel_setModalPresentationStyle_, 2);
    uint64_t v14 = (void (*)(void *))sub_1DFDF4FD0();
    v14(v13);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return (uint64_t)v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1DF17DAA8()
{
  unint64_t result = qword_1EBAA5E88;
  if (!qword_1EBAA5E88)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAA5E88);
  }
  return result;
}

uint64_t sub_1DF17DB00()
{
  sub_1DEAE6578();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DF17DB90(void *a1, uint64_t a2, void *a3, void *a4, char a5)
{
  uint64_t v99 = a3;
  double v100 = *(double *)&a2;
  sub_1DF17EE30(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v95 - v12;
  uint64_t v14 = sub_1DFDE7600();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v95 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v95 - v21;
  MEMORY[0x1F4188790](v20);
  CGFloat v25 = (char *)&v95 - v24;
  switch(a5)
  {
    case 1:
      uint64_t v32 = a4;
      uint64_t v33 = (uint64_t)v99;
      double v34 = v99;
      id v35 = objc_msgSend(a1, sel_identifier);
      if (!v35)
      {
        sub_1DFDFDD20();
        id v35 = (id)sub_1DFDFDCE0();
        swift_bridgeObjectRelease();
      }
      id v36 = objc_msgSend(v34, sel_sourceForIssueID_, v35);
      uint64_t v37 = *(void *)&v100;
      sub_1DEBA5038(*(uint64_t *)&v100, v33, v32, 1);

      return v36 == (id)v37;
    case 2:
      uint64_t v39 = *(void *)&v100;
      uint64_t v40 = *(void *)(*(void *)&v100 + 16);
      if (!v40) {
        return 1;
      }
      CGFloat v41 = a4;
      uint64_t v42 = *(void *)(*(void *)&v100 + 32);
      CGRect v43 = *(void **)(*(void *)&v100 + 40);
      CGRect v44 = *(void **)(*(void *)&v100 + 48);
      uint64_t v45 = *(unsigned __int8 *)(*(void *)&v100 + 56);
      uint64_t v46 = (uint64_t)v99;
      sub_1DEBA4F84(*(uint64_t *)&v100, v99, v41, 2);
      sub_1DEBA4F84(v42, v43, v44, v45);
      char v47 = sub_1DF17DB90(a1, v42, v43, v44, v45);
      sub_1DEBA5038(v42, (uint64_t)v43, v44, v45);
      if ((v47 & 1) == 0)
      {
        uint64_t v55 = v39;
        uint64_t v56 = v46;
        uint64_t v57 = v41;
        goto LABEL_34;
      }
      uint64_t v98 = v41;
      uint64_t v48 = (char *)(v39 + 88);
      while (--v40)
      {
        uint64_t v49 = v48 + 32;
        uint64_t v51 = (void *)*((void *)v48 - 2);
        uint64_t v50 = (void *)*((void *)v48 - 1);
        uint64_t v52 = *((void *)v48 - 3);
        uint64_t v53 = *v48;
        sub_1DEBA4F84(v52, v51, v50, *v48);
        char v54 = sub_1DF17DB90(a1, v52, v51, v50, v53);
        sub_1DEBA5038(v52, (uint64_t)v51, v50, v53);
        uint64_t v48 = v49;
        if ((v54 & 1) == 0)
        {
          uint64_t v55 = v39;
          uint64_t v56 = v46;
          uint64_t v57 = v98;
LABEL_34:
          char v81 = 2;
          goto LABEL_43;
        }
      }
      uint64_t v67 = v39;
      uint64_t v68 = v46;
      uint64_t v69 = v98;
      char v70 = 2;
      goto LABEL_40;
    case 3:
      uint64_t v58 = *(void *)&v100;
      uint64_t v59 = *(void *)(*(void *)&v100 + 16);
      if (!v59) {
        return 0;
      }
      uint64_t v60 = a4;
      uint64_t v61 = *(void *)(*(void *)&v100 + 32);
      unint64_t v62 = *(void **)(*(void *)&v100 + 40);
      unint64_t v63 = *(void **)(*(void *)&v100 + 48);
      uint64_t v64 = *(unsigned __int8 *)(*(void *)&v100 + 56);
      uint64_t v65 = (uint64_t)v99;
      sub_1DEBA4F84(*(uint64_t *)&v100, v99, v60, 3);
      sub_1DEBA4F84(v61, v62, v63, v64);
      char v66 = sub_1DF17DB90(a1, v61, v62, v63, v64);
      sub_1DEBA5038(v61, (uint64_t)v62, v63, v64);
      if (v66)
      {
        uint64_t v67 = v58;
        uint64_t v68 = v65;
        uint64_t v69 = v60;
        char v70 = 3;
        goto LABEL_40;
      }
      uint64_t v82 = v58;
      uint64_t v83 = a1;
      uint64_t v84 = (char *)(v82 + 88);
      uint64_t v85 = v60;
      break;
    case 4:
      return objc_msgSend(a1, sel_isCurrent) ^ 1;
    default:
      uint64_t v98 = v23;
      double v26 = a4;
      CGFloat v27 = v99;
      swift_unknownObjectRetain();
      id v97 = v26;
      id v28 = objc_msgSend(a1, sel_identifier);
      if (!v28)
      {
        sub_1DFDFDD20();
        uint64_t v96 = v29;
        id v28 = (id)sub_1DFDFDCE0();
        swift_bridgeObjectRelease();
      }
      id v30 = objc_msgSend(v27, sel_lastVisitedDateForIssueWithID_, v28);

      if (v30)
      {
        sub_1DFDE7570();

        CGFloat v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v31(v13, v22, v14);
        uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v96(v13, 0, 1, v14);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
        {
          v31(v25, v13, v14);
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v96(v13, 1, 1, v14);
      }
      sub_1DFDE7480();
      sub_1DEAEA868((uint64_t)v13);
LABEL_22:
      unint64_t v71 = v97;
      id v72 = objc_msgSend(a1, sel_identifier);
      if (!v72)
      {
        sub_1DFDFDD20();
        id v72 = (id)sub_1DFDFDCE0();
        swift_bridgeObjectRelease();
      }
      double v73 = v100;
      id v74 = objc_msgSend(v71, sel_dateAddedForIssueID_, v72);

      if (v74)
      {
        sub_1DFDE7570();

        uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v75(v11, v22, v14);
        v96(v11, 0, 1, v14);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) != 1)
        {
          v75(v19, v11, v14);
          goto LABEL_29;
        }
      }
      else
      {
        v96(v11, 1, 1, v14);
      }
      sub_1DFDE7480();
      sub_1DEAEA868((uint64_t)v11);
LABEL_29:
      if (sub_1DFDE74E0()) {
        uint64_t v76 = v25;
      }
      else {
        uint64_t v76 = v19;
      }
      uint64_t v77 = v98;
      (*(void (**)(void *, char *, uint64_t))(v15 + 16))(v98, v76, v14);
      sub_1DFDE7530();
      double v79 = v78;
      swift_unknownObjectRelease();

      uint64_t v80 = *(void (**)(void *, uint64_t))(v15 + 8);
      v80(v77, v14);
      v80(v19, v14);
      v80(v25, v14);
      return fabs(v79) > v73;
  }
  do
  {
    if (!--v59)
    {
      uint64_t v55 = *(void *)&v100;
      uint64_t v56 = v65;
      uint64_t v57 = v85;
      char v81 = 3;
LABEL_43:
      sub_1DEBA5038(v55, v56, v57, v81);
      return 0;
    }
    uint64_t v86 = v84 + 32;
    uint64_t v87 = v65;
    uint64_t v88 = v85;
    uint64_t v90 = (void *)*((void *)v84 - 2);
    uint64_t v89 = (void *)*((void *)v84 - 1);
    uint64_t v91 = *((void *)v84 - 3);
    uint64_t v92 = *v84;
    sub_1DEBA4F84(v91, v90, v89, *v84);
    char v93 = sub_1DF17DB90(v83, v91, v90, v89, v92);
    uint64_t v94 = (uint64_t)v90;
    uint64_t v85 = v88;
    uint64_t v65 = v87;
    sub_1DEBA5038(v91, v94, v89, v92);
    uint64_t v84 = v86;
  }
  while ((v93 & 1) == 0);
  uint64_t v67 = *(void *)&v100;
  uint64_t v68 = v87;
  uint64_t v69 = v85;
  char v70 = 3;
LABEL_40:
  sub_1DEBA5038(v67, v68, v69, v70);
  return 1;
}

uint64_t sub_1DF17E3BC()
{
  swift_retain();
  uint64_t v0 = (void *)sub_1DFDEDCE0();
  sub_1DFDED040();
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1DF17E438()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DFDECEB0();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DF17E4E4()
{
  sub_1DE9B46A4();
  sub_1DFDEE090();
  swift_retain();
  uint64_t v0 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDDF0();
  swift_release();
  swift_release();

  uint64_t v1 = (void *)sub_1DFDEDCE0();
  uint64_t v2 = sub_1DFDEDDF0();
  swift_release();

  return v2;
}

uint64_t sub_1DF17E5CC(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 24), *(void *)(a1 + 48));
  id v2 = objc_msgSend(*(id *)(a1 + 16), sel_issueIDs);
  sub_1DFDFE220();

  uint64_t v3 = sub_1DFDFAE80();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DF17E66C()
{
  uint64_t v1 = sub_1DF17E910();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  unint64_t v8 = swift_bridgeObjectRetain();
  unint64_t v9 = sub_1DF17EC98(v8, v1, v3, v5, v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)(v0 + 16);
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v11)
  {
LABEL_13:
    uint64_t v23 = (void *)sub_1DFDFE200();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_removeIssueIDs_, v23);

    sub_1DF17EE30(0, (unint64_t *)&qword_1EBAA7940, (uint64_t (*)(uint64_t))sub_1DE9B46A4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v24 = sub_1DFDEDE90();
    sub_1DEBA5038(v1, (uint64_t)v3, v5, v7);
    return v24;
  }
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEA9B358(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    CGFloat v25 = v10;
    char v26 = v7;
    uint64_t v27 = v1;
    uint64_t v13 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v14 = (id)MEMORY[0x1E01EE240](v13, v9);
      }
      else {
        id v14 = *(id *)(v9 + 8 * v13 + 32);
      }
      uint64_t v15 = v14;
      id v16 = objc_msgSend(v14, sel_identifier);
      uint64_t v17 = sub_1DFDFDD20();
      uint64_t v19 = v18;

      unint64_t v21 = *(void *)(v28 + 16);
      unint64_t v20 = *(void *)(v28 + 24);
      if (v21 >= v20 >> 1) {
        sub_1DEA9B358(v20 > 1, v21 + 1, 1);
      }
      ++v13;
      *(void *)(v28 + 16) = v21 + 1;
      uint64_t v22 = v28 + 16 * v21;
      *(void *)(v22 + 32) = v17;
      *(void *)(v22 + 40) = v19;
    }
    while (v11 != v13);
    uint64_t v1 = v27;
    char v7 = v26;
    uint64_t v10 = v25;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF17E8D0()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DF17E910()
{
  __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
  swift_retain();
  sub_1DFDEDB90();
  swift_release();
  sub_1DFDED020();
  swift_release();
  int v1 = v26;
  __swift_project_boxed_opaque_existential_1(v0 + 13, v0[16]);
  uint64_t v2 = sub_1DEF0B804();
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v5 = (char *)(v2 + 64);
    do
    {
      int v6 = *(v5 - 32);
      uint64_t v7 = *((void *)v5 - 3);
      uint64_t v8 = *((void *)v5 - 2);
      uint64_t v9 = *((void *)v5 - 1);
      char v10 = *v5;
      if (v1)
      {
        if (v1 != 1 || v6 != 2)
        {
LABEL_8:
          sub_1DEBA4F84(*((void *)v5 - 3), *((void **)v5 - 2), *((void **)v5 - 1), *v5);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1DEDF7F0C(0, *(void *)(v4 + 16) + 1, 1);
          }
          unint64_t v12 = *(void *)(v4 + 16);
          unint64_t v11 = *(void *)(v4 + 24);
          if (v12 >= v11 >> 1) {
            sub_1DEDF7F0C(v11 > 1, v12 + 1, 1);
          }
          *(void *)(v4 + 16) = v12 + 1;
          uint64_t v13 = v4 + 40 * v12;
          *(unsigned char *)(v13 + 32) = v6;
          *(void *)(v13 + 40) = v7;
          *(void *)(v13 + 48) = v8;
          *(void *)(v13 + 56) = v9;
          *(unsigned char *)(v13 + 64) = v10;
          int v1 = v26;
        }
      }
      else if (!*(v5 - 32))
      {
        goto LABEL_8;
      }
      v5 += 40;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  int64_t v14 = *(void *)(v4 + 16);
  if (v14)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    uint64_t v15 = v4;
    sub_1DEDF7EDC(0, v14, 0);
    uint64_t v16 = v27;
    uint64_t v17 = (char *)(v15 + 64);
    do
    {
      uint64_t v18 = *((void *)v17 - 3);
      uint64_t v19 = (void *)*((void *)v17 - 2);
      unint64_t v20 = (void *)*((void *)v17 - 1);
      char v21 = *v17;
      sub_1DEBA4F84(v18, v19, v20, *v17);
      unint64_t v23 = *(void *)(v27 + 16);
      unint64_t v22 = *(void *)(v27 + 24);
      if (v23 >= v22 >> 1) {
        sub_1DEDF7EDC(v22 > 1, v23 + 1, 1);
      }
      v17 += 40;
      *(void *)(v27 + 16) = v23 + 1;
      uint64_t v24 = v27 + 32 * v23;
      *(void *)(v24 + 32) = v18;
      *(void *)(v24 + 40) = v19;
      *(void *)(v24 + 48) = v20;
      *(unsigned char *)(v24 + 56) = v21;
      --v14;
    }
    while (v14);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return v16;
}

uint64_t sub_1DF17EB7C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF17EBD4()
{
  return sub_1DF17E438();
}

uint64_t sub_1DF17EBDC()
{
  return sub_1DF17E4E4();
}

uint64_t sub_1DF17EBE4()
{
  return sub_1DF17E5CC(v0);
}

uint64_t sub_1DF17EC00()
{
  return sub_1DF17E66C();
}

uint64_t sub_1DF17EC2C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF17EC98(unint64_t a1, uint64_t a2, void *a3, void *a4, char a5)
{
  unint64_t v9 = a1;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v10)
  {
    while (1)
    {
      uint64_t v16 = a2;
      unint64_t v11 = 0;
      uint64_t v18 = v9 & 0xFFFFFFFFFFFFFF8;
      unint64_t v19 = v9 & 0xC000000000000001;
      unint64_t v17 = v9;
      while (v19)
      {
        id v12 = (id)MEMORY[0x1E01EE240](v11, v9);
LABEL_9:
        uint64_t v13 = v12;
        unint64_t v14 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_15;
        }
        if (sub_1DF17DB90(v12, a2, a3, a4, a5))
        {
          sub_1DFDFFA50();
          sub_1DFDFFA90();
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
          a2 = v16;
          unint64_t v9 = v17;
        }
        else
        {
        }
        ++v11;
        if (v14 == v10) {
          return v20;
        }
      }
      if (v11 < *(void *)(v18 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v10 = sub_1DFDFFBE0();
      if (!v10) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v12 = *(id *)(v9 + 8 * v11 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void sub_1DF17EE30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF17EE94()
{
  return sub_1DF17EC2C();
}

void destroy for OfflineIssuePruningCondition(uint64_t a1)
{
}

uint64_t initializeWithCopy for OfflineIssuePruningCondition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1DEBA4F84(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for OfflineIssuePruningCondition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1DEBA4F84(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1DEBA5038(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for OfflineIssuePruningCondition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1DEBA5038(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineIssuePruningCondition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineIssuePruningCondition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DF17F060(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 3u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1DF17F078(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 4;
  if (a2 >= 4)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 4;
    *(void *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for OfflineIssuePruningCondition()
{
  return &type metadata for OfflineIssuePruningCondition;
}

id sub_1DF17F0A4(void *a1)
{
  uint64_t v3 = sub_1DFDF0A90();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1DFDF5E20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF33E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = 0;
  if (objc_msgSend(a1, sel_feedConfiguration) != (id)11)
  {
    uint64_t v39 = v4;
    uint64_t v41 = v5;
    uint64_t v42 = v1;
    id v44 = a1;
    sub_1DFDF0870();
    id v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    if (qword_1EBAE91C0 != -1) {
      swift_once();
    }
    unint64_t v14 = (void *)qword_1EBAE91B0;
    id v15 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 5, 3, 22.0);
    id v16 = objc_msgSend(v14, sel_imageByApplyingSymbolConfiguration_, v15);

    id v43 = v16;
    objc_msgSend(v13, sel_setImage_forState_, v16, 0);
    sub_1DE919914(0, (unint64_t *)&qword_1EBAC0740);
    id v17 = v13;
    uint64_t v18 = (void *)sub_1DFDFF380();
    objc_msgSend(v17, sel_setMenu_, v18);

    objc_msgSend(v17, sel_setShowsMenuAsPrimaryAction_, 1);
    sub_1DFDF5DD0();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FACB68], v8);
    uint64_t v19 = *(void *)(v42 + 32);
    uint64_t v46 = sub_1DFDE8900();
    uint64_t v47 = sub_1DF183DA0((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
    uint64_t v45 = v19;
    long long v48 = 0u;
    long long v49 = 0u;
    char v50 = 1;
    sub_1DFDF2D90();
    swift_allocObject();
    id v20 = v17;
    swift_retain();
    uint64_t v21 = sub_1DFDF2D30();
    sub_1DFDF2D40();
    id v22 = objc_msgSend(v44, sel_backingTag);
    sub_1DFDF5E10();
    swift_unknownObjectRelease();
    id v23 = v20;
    sub_1DFDF0A60();
    sub_1DFDF0AA0();
    swift_allocObject();
    uint64_t v40 = sub_1DFDF0A30();
    sub_1DFDF18E0();
    sub_1DFDF2D40();
    if (qword_1EBAF7F98 != -1) {
      swift_once();
    }
    uint64_t v24 = v39;
    uint64_t v25 = __swift_project_value_buffer(v39, (uint64_t)qword_1EBB634F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v7, v25, v24);
    swift_allocObject();
    id v26 = v23;
    sub_1DFDF0A40();
    sub_1DFDF18E0();
    uint64_t v27 = (void *)sub_1DFDF0850();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v30 = swift_allocObject();
    swift_unknownObjectWeakInit();
    CGFloat v31 = (void *)swift_allocObject();
    v31[2] = v28;
    v31[3] = v29;
    v31[4] = v30;
    v31[5] = v21;
    swift_retain();

    swift_release();
    id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, v26);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    double v34 = self;
    id v12 = v32;
    id v35 = objc_msgSend(v34, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    id v36 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setAccessibilityLabel_, v36);

    swift_release();
    swift_release();
    swift_release();
  }
  return v12;
}

void sub_1DF17F79C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v39 = a4;
  long long v48 = a3;
  sub_1DF183C38(0, &qword_1EAC22670, MEMORY[0x1E4F818B0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = (char *)v37 - v6;
  uint64_t v47 = sub_1DFDF0580();
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  id v44 = (char **)((char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1DFDEA1F0();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDEC470();
  uint64_t v40 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDE7630();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DFDEC450();
  uint64_t v41 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = Strong;
    swift_beginAccess();
    id v23 = (void *)MEMORY[0x1E01EFB70](a2 + 16);
    if (v23)
    {
      id v38 = v23;
      uint64_t v24 = v48 + 16;
      swift_beginAccess();
      uint64_t v25 = MEMORY[0x1E01EFB70](v24);
      if (v25)
      {
        v37[2] = *(void *)(v22 + 32);
        long long v48 = (char *)v25;
        sub_1DFDE7620();
        sub_1DFDE7610();
        v37[1] = v26;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        (*(void (**)(char *, void, uint64_t))(v40 + 104))(v13, *MEMORY[0x1E4F7CF20], v11);
        (*(void (**)(char *, void, uint64_t))(v42 + 104))(v10, *MEMORY[0x1E4F7B250], v43);
        sub_1DFDEC440();
        sub_1DF183DA0((unint64_t *)&qword_1EBAA7370, MEMORY[0x1E4F7CF00]);
        sub_1DFDE8880();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v18);
        sub_1DFDF05A0();
        uint64_t v28 = v44;
        uint64_t v27 = v45;
        uint64_t v30 = v47;
        uint64_t v29 = v48;
        *id v44 = v48;
        (*(void (**)(char **, void, uint64_t))(v27 + 104))(v28, *MEMORY[0x1E4F7EED0], v30);
        CGFloat v31 = v29;
        uint64_t v32 = sub_1DF17FE18((uint64_t)objc_msgSend(v31, sel_feedConfiguration));
        uint64_t v33 = sub_1DFDFD0B0();
        uint64_t v34 = (uint64_t)v46;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v46, 1, 1, v33);
        MEMORY[0x1E01DEDA0](v28, v32, v34);
        swift_bridgeObjectRelease();
        sub_1DF183F44(v34, &qword_1EAC22670, MEMORY[0x1E4F818B0]);
        (*(void (**)(char **, uint64_t))(v27 + 8))(v28, v30);
        if (sub_1DFDF0560())
        {
          swift_unknownObjectRetain();
          sub_1DFDF0520();
          swift_release();
          swift_unknownObjectRelease();
        }
        sub_1DE919914(0, (unint64_t *)&qword_1EBAC0740);
        id v35 = v38;
        id v36 = (void *)sub_1DFDFF380();
        objc_msgSend(v35, sel_setMenu_, v36);
        swift_release();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1DF17FE18(uint64_t a1)
{
  switch(a1)
  {
    case 3:
      sub_1DF183C38(0, (unint64_t *)&unk_1EBAF6EB0, MEMORY[0x1E4F7EFC0], MEMORY[0x1E4FBBE00]);
      uint64_t v9 = sub_1DFDF0590();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void *)(v10 + 72);
      unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1DFE0FB10;
      unint64_t v14 = v13 + v12;
      uint64_t v15 = *(void (**)(unint64_t, void, uint64_t))(v10 + 104);
      v15(v14, *MEMORY[0x1E4F7EF48], v9);
      v15(v14 + v11, *MEMORY[0x1E4F7EF60], v9);
      v15(v14 + 2 * v11, *MEMORY[0x1E4F7EF28], v9);
      v15(v14 + 3 * v11, *MEMORY[0x1E4F7EFB0], v9);
      uint64_t v8 = sub_1DF3C0924(v13);
      swift_setDeallocating();
      break;
    case 8:
    case 9:
    case 11:
      sub_1DF183C38(0, (unint64_t *)&unk_1EBAF6EB0, MEMORY[0x1E4F7EFC0], MEMORY[0x1E4FBBE00]);
      uint64_t v1 = sub_1DFDF0590();
      uint64_t v2 = *(void *)(v1 - 8);
      uint64_t v3 = *(void *)(v2 + 72);
      unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1DFE0CC10;
      unint64_t v6 = v5 + v4;
      uint64_t v7 = *(void (**)(unint64_t, void, uint64_t))(v2 + 104);
      v7(v6, *MEMORY[0x1E4F7EF48], v1);
      v7(v6 + v3, *MEMORY[0x1E4F7EF28], v1);
      v7(v6 + 2 * v3, *MEMORY[0x1E4F7EFB0], v1);
      uint64_t v8 = sub_1DF3C0924(v5);
      swift_setDeallocating();
      break;
    case 10:
      sub_1DF183C38(0, (unint64_t *)&unk_1EBAF6EB0, MEMORY[0x1E4F7EFC0], MEMORY[0x1E4FBBE00]);
      uint64_t v20 = sub_1DFDF0590();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(void *)(v21 + 72);
      unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1DFE0B750;
      unint64_t v25 = v24 + v23;
      uint64_t v26 = *(void (**)(unint64_t, void, uint64_t))(v21 + 104);
      v26(v25, *MEMORY[0x1E4F7EF48], v20);
      v26(v25 + v22, *MEMORY[0x1E4F7EFB0], v20);
      uint64_t v8 = sub_1DF3C0924(v24);
      swift_setDeallocating();
      break;
    default:
      sub_1DF183C38(0, (unint64_t *)&unk_1EBAF6EB0, MEMORY[0x1E4F7EFC0], MEMORY[0x1E4FBBE00]);
      uint64_t v16 = sub_1DFDF0590();
      uint64_t v17 = *(void *)(v16 - 8);
      unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1DFE0B250;
      (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x1E4F7EF48], v16);
      uint64_t v8 = sub_1DF3C0924(v19);
      swift_setDeallocating();
      break;
  }
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v8;
}

id sub_1DF180384(void *a1)
{
  id v55 = a1;
  sub_1DF183C38(0, &qword_1EAC29048, (uint64_t (*)(uint64_t))sub_1DF183FB4, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v51 = (char *)&v48 - v3;
  uint64_t v4 = sub_1DFDF33E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF183FB4();
  uint64_t v9 = v8;
  uint64_t v58 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF184090();
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v57 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  long long v49 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v48 - v15;
  LOBYTE(v59) = 0;
  sub_1DE919914(0, (unint64_t *)&qword_1EBACA628);
  sub_1DEAC37EC();
  sub_1DFDF1D50();
  LOBYTE(v59) = 0;
  sub_1DF18410C(0, &qword_1EAC29058, MEMORY[0x1E4FACDD0]);
  sub_1DFDF1D50();
  uint64_t v48 = *(void *)(v1 + 24);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FACB68], v4);
  uint64_t v50 = v1;
  uint64_t v17 = *(void *)(v1 + 32);
  uint64_t v61 = sub_1DFDE8900();
  uint64_t v62 = sub_1DF183DA0((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
  uint64_t v59 = v17;
  long long v63 = 0u;
  long long v64 = 0u;
  char v65 = 1;
  sub_1DFDF2D90();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1DFDF2D70();
  if (qword_1EBAD3460 != -1) {
    swift_once();
  }
  swift_retain();
  id v18 = objc_msgSend(objc_msgSend(v55, sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v19 = sub_1DFDFDD20();
  uint64_t v21 = v20;

  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v52 = v16;
  v22(v49, v16, v57);
  uint64_t v23 = v58;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  unint64_t v25 = v51;
  uint64_t v53 = v11;
  v24(v51, v11, v9);
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
  uint64_t v54 = v9;
  v26(v25, 0, 1, v9);
  uint64_t v59 = v19;
  uint64_t v60 = v21;
  sub_1DF18410C(0, &qword_1EAC29078, MEMORY[0x1E4FACDD8]);
  id v28 = objc_allocWithZone(v27);
  uint64_t v29 = (void *)sub_1DFDF37B0();
  id v30 = objc_msgSend(*(id *)(v50 + 40), sel_configuration);
  if (v30)
  {
    id v31 = objc_msgSend(v30, sel_puzzlesConfig);
    swift_unknownObjectRelease();
    id v32 = objc_msgSend(v29, sel_customView);
    if (v32)
    {
      uint64_t v33 = v32;
      self;
      uint64_t v34 = swift_dynamicCastObjCClass();
      if (v34)
      {
        id v35 = (void *)v34;
        sub_1DE919914(0, (unint64_t *)&qword_1EBAC0740);
        id v36 = (void *)sub_1DFDFF380();
        objc_msgSend(v35, sel_setMenu_, v36);

        objc_msgSend(v35, sel_setShowsMenuAsPrimaryAction_, 1);
        objc_msgSend(v35, sel_setContextMenuInteractionEnabled_, 1);
        sub_1DE919914(0, qword_1EBAC0750);
        uint64_t v37 = swift_allocObject();
        swift_weakInit();
        uint64_t v38 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v39 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v40 = (void *)swift_allocObject();
        v40[2] = v37;
        void v40[3] = v38;
        v40[4] = v39;
        v40[5] = v31;
        id v41 = v31;
        id v31 = (id)sub_1DFDFF590();
        objc_msgSend(v35, sel_addAction_forControlEvents_, v31, 0x4000);
      }
    }
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v43 = self;
  id v44 = v29;
  id v45 = objc_msgSend(v43, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  uint64_t v46 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_setAccessibilityLabel_, v46);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v53, v54);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v57);
  return v44;
}

id sub_1DF180BE4(void *a1)
{
  id v3 = objc_msgSend(*(id *)(v1 + 40), sel_configuration);
  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_puzzlesConfig);
    swift_unknownObjectRelease();
    objc_msgSend(v4, sel_puzzleLeaderboardsEnabled);
  }
  sub_1DFDE7FA0();
  sub_1DFDE7F80();
  sub_1DFDE7E70();
  char v5 = sub_1DFDE7F90();
  swift_release();
  swift_release();
  if ((v5 & 1) == 0 || (char *)objc_msgSend(a1, sel_feedConfiguration) - 9 > (char *)1) {
    return 0;
  }
  return sub_1DF180CFC(a1);
}

id sub_1DF180CFC(void *a1)
{
  uint64_t v2 = sub_1DFDF5E20();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v42 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF183C38(0, (unint64_t *)&unk_1EBAF5D00, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterOpenLeaderboardCommandContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v38 - v5;
  uint64_t v7 = sub_1DFDF33E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1DFDFD920();
  uint64_t v11 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(objc_msgSend(a1, sel_backingTag), sel_asPuzzleType);
  swift_unknownObjectRelease();
  if (v14)
  {
    id v15 = objc_msgSend(v14, sel_identifier);
    uint64_t v16 = sub_1DFDFDD20();
    uint64_t v18 = v17;
    swift_unknownObjectRelease();

    *(void *)uint64_t v13 = v16;
    *((void *)v13 + 1) = v18;
    *((void *)v13 + 2) = 0;
    v13[24] = 1;
    uint64_t v19 = (unsigned int *)MEMORY[0x1E4F81B40];
  }
  else
  {
    unsigned int v20 = objc_msgSend(objc_msgSend(a1, sel_backingTag), sel_isPuzzleHub);
    swift_unknownObjectRelease();
    if (!v20) {
      return 0;
    }
    uint64_t v19 = (unsigned int *)MEMORY[0x1E4F81B48];
  }
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *v19, v44);
  if (qword_1EBAD1588 != -1) {
    swift_once();
  }
  id v39 = (id)qword_1EBACBC08;
  id v21 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 5, 3, 22.0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FACB68], v7);
  uint64_t v22 = *(void *)(v43 + 32);
  uint64_t v46 = sub_1DFDE8900();
  uint64_t v47 = sub_1DF183DA0((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
  uint64_t v45 = v22;
  long long v48 = 0u;
  long long v49 = 0u;
  char v50 = 1;
  sub_1DFDF2D90();
  swift_allocObject();
  swift_retain();
  sub_1DFDF2D30();
  uint64_t v23 = qword_1EBAD06F0;
  swift_unknownObjectRetain();
  swift_retain();
  if (v23 != -1) {
    swift_once();
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v13, v44);
  uint64_t v24 = type metadata accessor for PuzzleGameCenterOpenLeaderboardCommandContext();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v6, 0, 1, v24);
  sub_1DF183C38(0, &qword_1EAC29040, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleGameCenterOpenLeaderboardCommandContext, MEMORY[0x1E4FAC620]);
  objc_allocWithZone(v25);
  swift_retain();
  id v26 = v39;
  id v27 = v21;
  id v28 = (void *)sub_1DFDF2430();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v30 = self;
  id v31 = v28;
  id v32 = objc_msgSend(v30, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  uint64_t v33 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setAccessibilityLabel_, v33);

  sub_1DFDF2D40();
  if (qword_1EAC1D550 != -1) {
    swift_once();
  }
  uint64_t v34 = v41;
  uint64_t v35 = __swift_project_value_buffer(v41, (uint64_t)qword_1EACDFFA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v42, v35, v34);
  sub_1DFDF0AA0();
  swift_allocObject();
  id v36 = v31;
  sub_1DFDF0A40();
  sub_1DFDF18E0();
  swift_release();

  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v44);
  return v36;
}

char *sub_1DF18146C(void *a1)
{
  uint64_t v2 = sub_1DFDF0A90();
  MEMORY[0x1F4188790](v2 - 8);
  v59[1] = (char *)v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF5E20();
  MEMORY[0x1F4188790](v4 - 8);
  v59[0] = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDFC080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v78 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF183C38(0, (unint64_t *)&unk_1EBAD3040, (uint64_t (*)(uint64_t))sub_1DF183C9C, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v71 = (char *)v59 - v11;
  sub_1DF183C38(0, &qword_1EBAE9EB0, MEMORY[0x1E4F81220], v9);
  MEMORY[0x1F4188790](v12 - 8);
  id v72 = (char *)v59 - v13;
  uint64_t v69 = sub_1DFDF33E0();
  uint64_t v68 = *(void (***)(char *, void, uint64_t))(v69 - 8);
  MEMORY[0x1F4188790](v69);
  char v70 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1DFDEA1F0();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  char v65 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1DFDEC470();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v17 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1DFDE7630();
  uint64_t v18 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  unsigned int v20 = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DFDEC450();
  uint64_t v64 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF183C9C();
  uint64_t v76 = *(void *)(v24 - 8);
  uint64_t v77 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v83 = (char *)v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF183D24();
  uint64_t v27 = v26;
  uint64_t v75 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  id v30 = (char *)v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v82 = (char *)v59 - v31;
  id v32 = (char *)objc_msgSend(a1, sel_feedConfiguration);
  if (unint64_t)(v32 - 3) < 9 && ((0x161u >> ((_BYTE)v32 - 3))) {
    return 0;
  }
  uint64_t v80 = sub_1DFDFEBA0();
  LOBYTE(v84) = 1;
  sub_1DE919914(0, (unint64_t *)&qword_1EBACA628);
  unint64_t v33 = sub_1DEABF224();
  uint64_t v60 = v30;
  unint64_t v34 = v33;
  uint64_t v79 = v7;
  sub_1DFDF1D50();
  LOBYTE(v84) = 1;
  sub_1DF183DE8(0, (unint64_t *)&unk_1EBAD3220, MEMORY[0x1E4FACDD0]);
  v59[2] = v34;
  sub_1DFDF1D50();
  uint64_t v74 = v27;
  uint64_t v35 = v73;
  uint64_t v36 = *(void *)(v73 + 32);
  sub_1DFDE7620();
  sub_1DFDE7610();
  uint64_t v81 = v6;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v61);
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v17, *MEMORY[0x1E4F7CF20], v63);
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v65, *MEMORY[0x1E4F7B250], v67);
  sub_1DFDEC440();
  sub_1DF183DA0((unint64_t *)&qword_1EBAA7370, MEMORY[0x1E4F7CF00]);
  sub_1DFDE8880();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v23, v21);
  v68[13](v70, *MEMORY[0x1E4FACB68], v69);
  uint64_t v85 = sub_1DFDE8900();
  uint64_t v86 = sub_1DF183DA0((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
  uint64_t v84 = v36;
  long long v87 = 0u;
  long long v88 = 0u;
  char v89 = 1;
  sub_1DFDF2D90();
  swift_allocObject();
  swift_retain();
  uint64_t v37 = sub_1DFDF2D70();
  uint64_t v38 = *(void *)(v35 + 24);
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v69 = sub_1DFDF56D0();
  swift_unknownObjectRetain();
  uint64_t v39 = (uint64_t)v72;
  sub_1DFDFC060();
  uint64_t v40 = *(void (***)(char *, void, uint64_t))(v79 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v40)(v39, 0, 1, v81);
  uint64_t v41 = v77;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v60, v82, v74);
  uint64_t v42 = v76;
  uint64_t v43 = v71;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v71, v83, v41);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
  sub_1DF183DE8(0, (unint64_t *)&qword_1EBAD3230, MEMORY[0x1E4FACDD8]);
  id v45 = objc_allocWithZone(v44);
  char v70 = (char *)v37;
  unint64_t v71 = (char *)sub_1DFDF37B0();
  swift_unknownObjectRetain();
  uint64_t v46 = v78;
  sub_1DFDFC060();
  uint64_t ObjectType = swift_getObjectType();
  sub_1DFDF56D0();
  long long v48 = *(void (**)(uint64_t, char *, uint64_t))(v79 + 16);
  long long v49 = v46;
  uint64_t v50 = v81;
  v48(v39, v49, v81);
  uint64_t v68 = v40;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v40)(v39, 0, 1, v50);
  uint64_t v67 = ObjectType;
  uint64_t v69 = v38;
  LOBYTE(v40) = sub_1DFDF1B80();
  swift_release();
  sub_1DF183F44(v39, &qword_1EBAE9EB0, MEMORY[0x1E4F81220]);
  if ((v40 & 1) == 0)
  {
    swift_release();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v81);
    goto LABEL_7;
  }
  sub_1DFDF56D0();
  uint64_t v51 = v78;
  uint64_t v52 = v81;
  v48(v39, v78, v81);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v68)(v39, 0, 1, v52);
  sub_1DFDF1B40();
  swift_release();
  sub_1DF183F44(v39, &qword_1EBAE9EB0, MEMORY[0x1E4F81220]);
  if (v84 == 2)
  {
    swift_release();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v79 + 8))(v51, v52);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v76 + 8))(v83, v77);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v82, v74);
    return 0;
  }
  uint64_t v55 = v79;
  uint64_t v56 = v51;
  uint64_t v57 = v75;
  uint64_t v58 = v71;
  if (v84)
  {
    uint64_t v73 = *(void *)(v73 + 96);
    sub_1DFDF2D40();
    sub_1DFDF5E10();
    uint64_t v53 = v58;
    sub_1DFDF0A60();
    sub_1DFDF0AA0();
    swift_allocObject();
    sub_1DFDF0A30();
    sub_1DFDF18E0();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v52);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v83, v77);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v82, v74);
    return v53;
  }
  swift_release();
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v52);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v83, v77);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v82, v74);
  return 0;
}

id sub_1DF18225C@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  if (*a1)
  {
    if (qword_1EBAE91E0 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_1EBB632A8;
  }
  else
  {
    if (qword_1EAC1D2A8 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_1EACDFC28;
  }
  uint64_t v4 = (void *)*v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1DF182310(char *a1)
{
  char v1 = *a1;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  if (v1) {
    id v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEE40B0);
  }
  else {
    id v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEE4140);
  }
  sub_1DFDE6ED0();

  sub_1DFDFC080();
  sub_1DF0121C8();
  sub_1DEABF224();
  return sub_1DFDF37C0();
}

id sub_1DF182544@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v4 = sub_1DFDF33E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF2A00();
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF12F0();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v75 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDF2380();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v78 = (void *)v2;
  id v17 = objc_msgSend(*(id *)(v2 + 40), sel_configuration);
  if (v17)
  {
    id v72 = v10;
    uint64_t v73 = v5;
    id v18 = objc_msgSend(v17, sel_puzzlesConfig);
    swift_unknownObjectRelease();
    id v19 = objc_msgSend(objc_msgSend(a1, sel_backingTag), sel_asPuzzleType);
    swift_unknownObjectRelease();
    if (v19)
    {
      id v67 = v18;
      uint64_t v69 = v4;
      char v70 = v7;
      id v71 = a1;
      uint64_t v74 = v16;
      uint64_t v65 = v14;
      uint64_t v66 = v13;
      unsigned int v20 = self;
      id v21 = objc_msgSend(v20, sel_configurationWithPointSize_weight_scale_, 5, 2, 20.0);
      uint64_t v22 = v78;
      __swift_project_boxed_opaque_existential_1(v78 + 7, v78[10]);
      id v23 = v21;
      id v24 = objc_msgSend(v19, sel_identifier);
      uint64_t v25 = sub_1DFDFDD20();
      uint64_t v27 = v26;

      uint64_t v28 = sub_1DF754288(v25, v27);
      swift_bridgeObjectRelease();
      uint64_t v29 = *__swift_project_boxed_opaque_existential_1(v22 + 7, v22[10]);
      swift_beginAccess();
      uint64_t v30 = *(void *)(v29 + 24);
      if (v28[2] <= *(void *)(v30 + 16) >> 3)
      {
        uint64_t v80 = v30;
        swift_bridgeObjectRetain();
        sub_1DF0A7A40((uint64_t)v28);
        swift_bridgeObjectRelease();
        uint64_t v31 = v80;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_1DF0A8A18((uint64_t)v28, v30);
        swift_bridgeObjectRelease();
      }
      uint64_t v37 = *(void *)(v31 + 16);
      swift_bridgeObjectRelease();
      sub_1DEA74FD4();
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1DFE28FE0;
      uint64_t v39 = self;
      uint64_t v40 = v39;
      if (v37)
      {
        *(void *)(v38 + 32) = objc_msgSend(v39, sel_whiteColor);
        id v41 = objc_msgSend(v40, sel_systemPinkColor);
      }
      else
      {
        *(void *)(v38 + 32) = objc_msgSend(v39, sel_systemPinkColor);
        id v41 = objc_msgSend(v40, sel_systemGray5Color);
      }
      *(void *)(v38 + 40) = v41;
      uint64_t v80 = v38;
      sub_1DFDFE250();
      sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
      uint64_t v42 = (void *)sub_1DFDFE200();
      swift_bridgeObjectRelease();
      id v43 = objc_msgSend(v20, sel_configurationWithPaletteColors_, v42);

      id v44 = objc_msgSend(v23, sel_configurationByApplyingConfiguration_, v43);
      if (qword_1EAC1D1C0 != -1) {
        swift_once();
      }
      id v68 = v19;
      id v45 = v44;
      id result = objc_msgSend((id)qword_1EAC2C530, sel_imageByApplyingSymbolConfiguration_, v44);
      if (result)
      {
        uint64_t v46 = result;
        type metadata accessor for Localized();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        long long v48 = self;
        id v49 = objc_msgSend(v48, sel_bundleForClass_, ObjCClassFromMetadata);
        sub_1DFDE6ED0();

        id v50 = objc_msgSend(v48, sel_bundleForClass_, ObjCClassFromMetadata);
        sub_1DFDE6ED0();

        id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29128]), sel_init);
        id v52 = objc_msgSend(v51, sel_UUIDString);

        sub_1DFDFDD20();
        sub_1DFDF1310();
        swift_allocObject();
        uint64_t v53 = sub_1DFDF1300();
        uint64_t v80 = v53;
        swift_retain();
        id v64 = v46;
        sub_1DFDF12E0();
        (*(void (**)(char *, void, uint64_t))(v76 + 104))(v72, *MEMORY[0x1E4FAC838], v77);
        sub_1DF183DA0((unint64_t *)&qword_1EBAD2F10, MEMORY[0x1E4FAC0B0]);
        sub_1DFDF2330();
        (*(void (**)(char *, void, uint64_t))(v73 + 104))(v70, *MEMORY[0x1E4FACB68], v69);
        uint64_t v54 = v78[4];
        uint64_t v81 = sub_1DFDE8900();
        uint64_t v82 = sub_1DF183DA0((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
        uint64_t v80 = v54;
        long long v83 = 0u;
        long long v84 = 0u;
        char v85 = 1;
        sub_1DFDF2D90();
        swift_allocObject();
        swift_retain();
        sub_1DFDF2D70();
        sub_1DFDF05A0();
        id v55 = v67;
        uint64_t v56 = v68;
        swift_unknownObjectRetain();
        sub_1DF17FE18((uint64_t)objc_msgSend(v71, sel_feedConfiguration));
        if (sub_1DFA41AF0(v56, v55)) {
          sub_1DFDF0520();
        }
        uint64_t v57 = v66;
        uint64_t v58 = v65;
        sub_1DE919914(0, (unint64_t *)&qword_1EBAC0740);
        uint64_t v59 = sub_1DFDFF380();
        swift_unknownObjectRelease();
        swift_release();
        swift_release();

        sub_1DF183BCC();
        uint64_t v61 = v60;
        uint64_t v62 = v79;
        uint64_t v63 = (uint64_t *)(v79 + *(int *)(v60 + 48));
        (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v79, v74, v57);
        uint64_t *v63 = v53;
        v63[1] = v59;
        return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v62, 0, 1, v61);
      }
      else
      {
        __break(1u);
      }
      return result;
    }
  }
  sub_1DF183BCC();
  unint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
  uint64_t v34 = v32;
  uint64_t v35 = v79;
  return (id)v33(v35, 1, 1, v34);
}

void sub_1DF182F9C(char *a1@<X0>, void *a2@<X8>)
{
  char v3 = *a1;
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_configurationWithPointSize_weight_scale_, 5, 3, 23.0);
  sub_1DEA74FD4();
  uint64_t v6 = (_OWORD *)swift_allocObject();
  v6[1] = xmmword_1DFE28FE0;
  uint64_t v7 = self;
  id v8 = v5;
  if (v3)
  {
    *((void *)v6 + 4) = objc_msgSend(v7, sel_whiteColor);
    *((void *)v6 + 5) = objc_msgSend(v7, sel_systemPinkColor);
    sub_1DFDFE250();
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
    uint64_t v7 = (void *)sub_1DFDFE200();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v4, sel_configurationWithPaletteColors_, v7);

    id v4 = objc_msgSend(v8, sel_configurationByApplyingConfiguration_, v9);
    uint64_t v10 = qword_1EAC1D1C8;
    uint64_t v6 = v4;
    if (v10 != -1) {
      swift_once();
    }
    id v8 = objc_msgSend((id)qword_1EAC2C538, sel_imageByApplyingSymbolConfiguration_, v6);

    if (v8) {
      goto LABEL_9;
    }
    __break(1u);
  }
  *((void *)v6 + 4) = objc_msgSend(v7, sel_systemPinkColor);
  *((void *)v6 + 5) = objc_msgSend(v7, sel_systemGray5Color);
  sub_1DFDFE250();
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  uint64_t v11 = (void *)sub_1DFDFE200();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v4, sel_configurationWithPaletteColors_, v11);

  id v13 = objc_msgSend(v8, sel_configurationByApplyingConfiguration_, v12);
  uint64_t v14 = qword_1EAC1D1C0;
  uint64_t v6 = v13;
  if (v14 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend((id)qword_1EAC2C530, sel_imageByApplyingSymbolConfiguration_, v6);

  if (v8)
  {
LABEL_9:

    *a2 = v8;
    return;
  }
  __break(1u);
}

uint64_t sub_1DF1832B4()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  char v1 = self;
  id v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v3 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEE42B0);
  sub_1DFDE6ED0();

  sub_1DF18403C();
  sub_1DEAC37EC();
  return sub_1DFDF37C0();
}

void sub_1DF18344C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, void *a5)
{
  id v47 = a5;
  long long v48 = a4;
  uint64_t v45 = sub_1DFDF33E0();
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v46 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDEA1F0();
  uint64_t v43 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDEC470();
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDE7630();
  uint64_t v40 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DFDEC450();
  uint64_t v42 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v20 = Strong;
  swift_beginAccess();
  id v21 = (char *)MEMORY[0x1E01EFB70](a3 + 16);
  if (!v21)
  {
    swift_release();
    return;
  }
  uint64_t v39 = v21;
  uint64_t v22 = v48 + 16;
  swift_beginAccess();
  id v23 = (char *)MEMORY[0x1E01EFB70](v22);
  if (!v23)
  {
    swift_release();
    uint64_t v35 = v39;
LABEL_11:

    return;
  }
  id v24 = v23;
  uint64_t v38 = v20;
  id v25 = objc_msgSend(v23, sel_backingTag);
  long long v48 = v24;
  id v26 = objc_msgSend(v25, sel_asPuzzleType);
  swift_unknownObjectRelease();
  id v37 = v26;
  if (!v26)
  {
    swift_release();

    uint64_t v35 = v48;
    goto LABEL_11;
  }
  uint64_t v27 = v38;
  v36[1] = *(void *)(v38 + 32);
  sub_1DFDE7620();
  sub_1DFDE7610();
  v36[0] = v28;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v13);
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v12, *MEMORY[0x1E4F7CF20], v10);
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v9, *MEMORY[0x1E4F7B250], v7);
  sub_1DFDEC440();
  sub_1DF183DA0((unint64_t *)&qword_1EBAA7370, MEMORY[0x1E4F7CF00]);
  sub_1DFDE8880();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v16);
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v46, *MEMORY[0x1E4FACB68], v45);
  uint64_t v29 = *(void *)(v27 + 32);
  uint64_t v50 = sub_1DFDE8900();
  uint64_t v51 = sub_1DF183DA0((unint64_t *)&qword_1EBAA7040, MEMORY[0x1E4F4AB68]);
  uint64_t v49 = v29;
  long long v52 = 0u;
  long long v53 = 0u;
  char v54 = 1;
  sub_1DFDF2D90();
  swift_allocObject();
  swift_retain();
  uint64_t v30 = v39;
  sub_1DFDF2D70();
  sub_1DFDF05A0();
  id v31 = v47;
  uint64_t v32 = v37;
  swift_unknownObjectRetain();
  unint64_t v33 = v48;
  sub_1DF17FE18((uint64_t)objc_msgSend(v48, sel_feedConfiguration));
  if (sub_1DFA41AF0(v32, v31))
  {
    swift_unknownObjectRetain();
    sub_1DFDF0520();
    swift_unknownObjectRelease();
  }
  sub_1DE919914(0, (unint64_t *)&qword_1EBAC0740);
  uint64_t v34 = (void *)sub_1DFDFF380();
  objc_msgSend(v30, sel_setMenu_, v34);
  swift_release();

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
}

uint64_t sub_1DF183B48()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagFeedViewerBarButtonItemFactory()
{
  return self;
}

void sub_1DF183BCC()
{
  if (!qword_1EBAD30D0)
  {
    sub_1DFDF2380();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAD30D0);
    }
  }
}

void sub_1DF183C38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DF183C9C()
{
  if (!qword_1EBAD3038)
  {
    sub_1DF183DE8(255, (unint64_t *)&unk_1EBAD3220, MEMORY[0x1E4FACDD0]);
    sub_1DEABF224();
    unint64_t v0 = sub_1DFDF1D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAD3038);
    }
  }
}

void sub_1DF183D24()
{
  if (!qword_1EBAD3050)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBACA628);
    sub_1DEABF224();
    unint64_t v0 = sub_1DFDF1D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAD3050);
    }
  }
}

uint64_t sub_1DF183DA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF183DE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1DFDFC080();
    unint64_t v7 = sub_1DF0121C8();
    unint64_t v8 = sub_1DEABF224();
    v11[0] = v6;
    v11[1] = MEMORY[0x1E4F81040];
    v11[2] = v7;
    v11[3] = v8;
    unint64_t v9 = a3(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1DF183E78()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF183EB0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF183EE8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DF183F38()
{
  sub_1DF17F79C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1DF183F44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DF183C38(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1DF183FB4()
{
  if (!qword_1EAC29050)
  {
    sub_1DF18410C(255, &qword_1EAC29058, MEMORY[0x1E4FACDD0]);
    sub_1DEAC37EC();
    unint64_t v0 = sub_1DFDF1D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC29050);
    }
  }
}

unint64_t sub_1DF18403C()
{
  unint64_t result = qword_1EAC29060;
  if (!qword_1EAC29060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29060);
  }
  return result;
}

void sub_1DF184090()
{
  if (!qword_1EAC29070)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBACA628);
    sub_1DEAC37EC();
    unint64_t v0 = sub_1DFDF1D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC29070);
    }
  }
}

void sub_1DF18410C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for PuzzleArchiveFilterSelectionCommandContext;
    v8[1] = &type metadata for PuzzleArchiveFilterSelectionCommandState;
    void v8[2] = sub_1DF18403C();
    v8[3] = sub_1DEAC37EC();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DF184190()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DF1841E0(uint64_t a1)
{
  sub_1DF18344C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t *initializeBufferWithCopyOfBuffer for TagFeedToolbarItemType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  sub_1DF18422C(*a2, v4);
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  return a1;
}

id sub_1DF18422C(uint64_t a1, void *a2)
{
  if (a1 < 0)
  {
    return (id)swift_retain();
  }
  else
  {
    swift_retain();
    return a2;
  }
}

void destroy for TagFeedToolbarItemType(uint64_t a1)
{
}

void sub_1DF184288(uint64_t a1, void *a2)
{
  if (a1 < 0)
  {
    swift_release();
  }
  else
  {
    swift_release();
  }
}

uint64_t *assignWithCopy for TagFeedToolbarItemType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  sub_1DF18422C(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = (void *)a1[1];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  sub_1DF184288(v5, v6);
  return a1;
}

uint64_t *assignWithTake for TagFeedToolbarItemType(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (void *)a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1DF184288(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TagFeedToolbarItemType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TagFeedToolbarItemType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)unint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagFeedToolbarItemType()
{
  return &type metadata for TagFeedToolbarItemType;
}

uint64_t type metadata accessor for DislikeButton()
{
  uint64_t result = qword_1EAC29098;
  if (!qword_1EAC29098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF184470()
{
  return swift_initClassMetadata2();
}

id sub_1DF1844D4()
{
  if (*(unsigned char *)(v0 + qword_1EAC29090))
  {
    if (qword_1EAC1D1E0 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_1EAC2C550;
  }
  else
  {
    if (qword_1EAC1D1B0 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_1EAC2C520;
  }
  uint64_t v2 = (void *)(v0 + qword_1EAC29088);
  uint64_t v3 = *(void **)(v0 + qword_1EAC29088);
  *(void *)(v0 + qword_1EAC29088) = v1;
  id v4 = v1;

  uint64_t v5 = qword_1EAC29080;
  objc_msgSend(*(id *)(v0 + qword_1EAC29080), sel_setImage_, *v2);
  objc_msgSend(*(id *)(v0 + v5), sel_setNeedsDisplay);

  uint64_t v6 = qword_1EAC29080;
  objc_msgSend(*(id *)(v0 + qword_1EAC29080), sel_setImage_, *(void *)(v0 + qword_1EAC29088));
  uint64_t v7 = *(void **)(v0 + v6);
  return objc_msgSend(v7, sel_setNeedsDisplay);
}

char *sub_1DF184608(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = qword_1EAC29080;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  id v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithImage_, 0);
  *(void *)&v12[qword_1EAC29088] = 0;
  v12[qword_1EAC29090] = 1;

  v18.receiver = v12;
  v18.super_class = ObjectType;
  uint64_t v13 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v14 = qword_1EAC29080;
  uint64_t v15 = *(void **)&v13[qword_1EAC29080];
  uint64_t v16 = v13;
  objc_msgSend(v15, sel_setContentMode_, 4);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v13[v14]);

  return v16;
}

char *sub_1DF184728(double a1, double a2, double a3, double a4)
{
  return sub_1DF184608(a1, a2, a3, a4);
}

void sub_1DF18474C(unsigned char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_1EAC29080;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  id v7 = a3;
  *(void *)&a1[v5] = objc_msgSend(v6, sel_initWithImage_, 0);
  *(void *)&a1[qword_1EAC29088] = 0;
  a1[qword_1EAC29090] = 1;

  sub_1DFDFFBB0();
  __break(1u);
}

void sub_1DF18480C(void *a1)
{
  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType();
  uint64_t v1 = (char *)v3.receiver;
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  id v2 = *(id *)&v1[qword_1EAC29080];
  objc_msgSend(v1, sel_bounds, v3.receiver, v3.super_class);
  objc_msgSend(v2, sel_setFrame_);
}

id sub_1DF184894(void *a1)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  objc_super v3 = self;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v6 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_1DF18499C(void *a1)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  objc_super v3 = self;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v6 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  return v6;
}

BOOL sub_1DF184AA4(void *a1, CGFloat a2, CGFloat a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  id v9 = a1;
  objc_msgSend(v9, sel_bounds);
  v14.origin.x = UIEdgeInsetsInsetRect_0(v10);
  v13.x = a2;
  v13.y = a3;
  BOOL v11 = CGRectContainsPoint(v14, v13);

  return v11;
}

void sub_1DF184B18()
{
  uint64_t v1 = *(void **)(v0 + qword_1EAC29088);
}

void sub_1DF184B58(uint64_t a1)
{
  id v2 = *(void **)(a1 + qword_1EAC29088);
}

uint64_t sub_1DF184BA4()
{
  return type metadata accessor for DislikeButton();
}

unsigned char *storeEnumTagSinglePayload for DislikeButtonStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF184C78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DislikeButtonStyle()
{
  return &type metadata for DislikeButtonStyle;
}

unint64_t sub_1DF184CB4()
{
  unint64_t result = qword_1EAC290A8;
  if (!qword_1EAC290A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC290A8);
  }
  return result;
}

uint64_t destroy for TodayReloadBlueprintModifier(uint64_t a1)
{
  sub_1DECC0B2C(*(void *)a1, *(unsigned char *)(a1 + 8));
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for TodayReloadBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a2 + 8);
  sub_1DECC0B88(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
  return a1;
}

uint64_t assignWithCopy for TodayReloadBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a2 + 8);
  sub_1DECC0B88(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  *(void *)a1 = v4;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v5;
  sub_1DECC0B2C(v6, v7);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t assignWithTake for TodayReloadBlueprintModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1DECC0B2C(v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for TodayReloadBlueprintModifier()
{
  return &type metadata for TodayReloadBlueprintModifier;
}

uint64_t sub_1DF184EB4(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v41 = a3;
  uint64_t v42 = a2;
  uint64_t v4 = sub_1DFDF1930();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v33 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA71B4(0, &qword_1EBAA8158, MEMORY[0x1E4FACA00]);
  uint64_t v40 = v6;
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v33 - v7;
  sub_1DE917A00();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1DEAA71B4(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  CGPoint v13 = (char *)&v33 - v12;
  uint64_t v36 = v11;
  sub_1DFDF5960();
  uint64_t v34 = v3;
  uint64_t v44 = v3;
  unint64_t v14 = sub_1DF1967EC((void (*)(char *))sub_1DF1857D0, (uint64_t)v43);
  sub_1DEAA71B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1DEAADE60((unint64_t *)&unk_1EBAA7D60);
  uint64_t v18 = sub_1DEAADE60(&qword_1EBAA7D50);
  MEMORY[0x1E01DBA90](v14, v16, v17, v18);
  type metadata accessor for TodayModel(0);
  sub_1DEA98AA4();
  sub_1DEA94B30(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
  sub_1DFDF5950();
  uint64_t v19 = sub_1DEA94918();
  sub_1DFDF8730();
  sub_1DFDF8720();
  type metadata accessor for TodayFeedServiceConfig();
  sub_1DEA94B30((unint64_t *)&qword_1EBAAF9B0, (void (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig);
  uint64_t v20 = sub_1DFDF8700();
  swift_release();
  if (v20)
  {
    *((void *)&v46 + 1) = sub_1DFDF7310();
    *(void *)&long long v45 = v20;
  }
  else
  {
    long long v45 = 0u;
    long long v46 = 0u;
  }
  uint64_t v21 = v36;
  sub_1DFDF5A60();
  sub_1DEA54378(v19);
  if (*(unsigned char *)(v34 + 8) == 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  else {
    unint64_t v22 = sub_1DF34A4B0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v23 = *(void *)(v22 + 16);
  swift_bridgeObjectRelease();
  if (v23)
  {
    uint64_t v25 = v38;
    uint64_t v24 = v39;
    id v26 = v33;
    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v33, *MEMORY[0x1E4FAC298], v39);
    sub_1DEA908FC();
    sub_1DFDF3010();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v24);
    uint64_t v27 = v40;
    uint64_t v28 = v37;
    uint64_t v29 = v35;
  }
  else
  {
    sub_1DE919AD8();
    id v31 = &v8[*(int *)(v30 + 48)];
    uint64_t v29 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v8, v13, v21);
    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v31, *MEMORY[0x1E4FAC288], v39);
    uint64_t v28 = v37;
    uint64_t v27 = v40;
    (*(void (**)(char *, void, uint64_t))(v37 + 104))(v8, *MEMORY[0x1E4FAC9C0], v40);
  }
  v42(v8);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v21);
}

uint64_t sub_1DF18548C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  sub_1DEFC8C44(a1, *(void *)a2, *(unsigned __int8 *)(a2 + 8), a3);
  if (v3)
  {
    if (qword_1EBAC0170 != -1) {
      swift_once();
    }
    sub_1DEA086BC();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1DFE0B750;
    sub_1DEAA71B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
    uint64_t v9 = v8;
    uint64_t v10 = sub_1DFDF14E0();
    uint64_t v12 = v11;
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v14 = sub_1DEA08668();
    *(void *)(v7 + 64) = v14;
    *(void *)(v7 + 32) = v10;
    *(void *)(v7 + 40) = v12;
    sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
    sub_1DFDFFB10();
    *(void *)(v7 + 96) = v13;
    *(void *)(v7 + 104) = v14;
    *(void *)(v7 + 72) = 0;
    *(void *)(v7 + 80) = 0xE000000000000000;
    sub_1DFDFEA60();
    sub_1DFDF00C0();

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a3, 1, 1, v9);
  }
  else
  {
    sub_1DEAA71B4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 0, 1, v16);
  }
}

uint64_t sub_1DF1856F4(uint64_t a1)
{
  unint64_t v2 = sub_1DEE9ED3C();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DF185734()
{
  unint64_t result = qword_1EBAC6228;
  if (!qword_1EBAC6228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC6228);
  }
  return result;
}

uint64_t sub_1DF185788()
{
  return sub_1DEA94B30(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
}

uint64_t sub_1DF1857D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF18548C(a1, *(void *)(v2 + 16), a2);
}

uint64_t SearchServiceAssembly.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SearchServiceAssembly.init()()
{
  return v0;
}

uint64_t sub_1DF185808@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DFDED680();
  MEMORY[0x1F4188790](v2);
  uint64_t ContextManager = type metadata accessor for PegasusQueryContextManager();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  sub_1DE99098C((unint64_t *)&unk_1EBAA77C0, MEMORY[0x1E4FAACC8]);
  sub_1DF187494();
  sub_1DE99098C((unint64_t *)&qword_1EBABA710, (void (*)(uint64_t))sub_1DF187494);
  sub_1DFDFF830();
  sub_1DF1874EC();
  swift_allocObject();
  uint64_t result = sub_1DFDECEA0();
  *(void *)(v4 + 24) = result;
  a1[3] = ContextManager;
  a1[4] = (uint64_t)&off_1F3A7F878;
  *a1 = v4;
  return result;
}

void *sub_1DF185988@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for HeadlineModelFactory();
  swift_allocObject();
  uint64_t result = sub_1DE95DEE8();
  a1[3] = v2;
  a1[4] = &off_1F3AC16D8;
  *a1 = result;
  return result;
}

uint64_t sub_1DF1859E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&unk_1EBABAB50);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for SearchTagFactory();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1F3ACD888;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF185A78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&unk_1EBABAB50);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E30);
    uint64_t result = sub_1DFDECCC0();
    if (v21)
    {
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
      MEMORY[0x1F4188790](v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for SearchTagFactory();
      void v19[3] = v11;
      v19[4] = &off_1F3ACD888;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for SearchArticleFactory();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v11);
      MEMORY[0x1F4188790](v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      v13[6] = v11;
      v13[7] = &off_1F3ACD888;
      void v13[2] = v5;
      v13[3] = v18;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_1F3A96518;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF185CF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E20);
  uint64_t result = sub_1DFDECCC0();
  if (!v31)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAB60);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAF90);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAF8D40);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v7 = v28;
  if (!v28)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&unk_1EBABAEA0);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = result;
  uint64_t v23 = v29;
  uint64_t v24 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAB7D90);
  uint64_t result = sub_1DFDECCC0();
  if (v27)
  {
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
    MEMORY[0x1F4188790](v9);
    uint64_t v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    uint64_t v13 = *v11;
    uint64_t v14 = type metadata accessor for HeadlineModelFactory();
    v25[3] = v14;
    v25[4] = &off_1F3AC16D8;
    v25[0] = v13;
    uint64_t v15 = type metadata accessor for HeadlineService();
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v14);
    MEMORY[0x1F4188790](v17);
    uint64_t v19 = (uint64_t *)((char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v20 + 16))(v19);
    uint64_t v21 = sub_1DE95E3BC(*v19, v5, v6, v7, v23, v8, &v26, v16);

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    unint64_t v22 = v24;
    v24[3] = v15;
    v22[4] = &off_1F3AB6A88;
    *unint64_t v22 = v21;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1DF1860E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&unk_1EBABABC0);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAEF0);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&qword_1EBAEA590);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&unk_1EBABAD60);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAB4540);
  uint64_t result = sub_1DFDECCC0();
  if (v11)
  {
    type metadata accessor for TagService();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v5;
    v9[3] = v7;
    v9[4] = v6;
    v9[5] = v8;
    uint64_t result = sub_1DE942EC4(&v10, (uint64_t)(v9 + 6));
    v9[11] = 0;
    *a2 = v9;
    a2[1] = &off_1F3A8B650;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

void *sub_1DF1862D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAB60);
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = result;
  id v6 = objc_msgSend(result, sel_networkBehaviorMonitor);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E3D0]), sel_initWithNetworkBehaviorMonitor_, v6);
  uint64_t result = (void *)swift_unknownObjectRelease();
  if (!v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAF90);
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&unk_1EBABAE50);
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAFA0);
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = (uint64_t)result;
  id v11 = objc_msgSend(self, sel_currentDevice);
  id v12 = objc_msgSend(v11, sel_userInterfaceIdiom);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&unk_1EBABAB40);
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v13 = objc_msgSend(result, sel_contentStoreFrontID);
  swift_unknownObjectRelease();
  if (v13)
  {
    uint64_t v14 = sub_1DFDFDD20();
    uint64_t v33 = v15;
    uint64_t v34 = v14;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAF8D38);
  uint64_t result = (void *)sub_1DFDECCC0();
  if (!v38) {
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&unk_1EBABAD50);
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v16 = result;
  uint64_t v30 = (uint64_t)v12;
  uint64_t v31 = v9;
  uint64_t v32 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBAB0140);
  uint64_t result = (void *)sub_1DFDECCB0();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v17 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAE2900);
  uint64_t result = (void *)sub_1DFDECCC0();
  if (v36)
  {
    uint64_t v18 = (objc_class *)type metadata accessor for SearchFetcher();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
    MEMORY[0x1F4188790](v20);
    unint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v22);
    uint64_t v24 = sub_1DE919914(0, &qword_1EBAEA560);
    uint64_t ContextManager = type metadata accessor for PegasusQueryContextManager();
    *(void *)&long long v28 = v16;
    *((void *)&v28 + 1) = v17;
    id v26 = sub_1DF96B37C((uint64_t)v7, v8, v31, v10, v30, v34, v33, (uint64_t)v22, v28, (uint64_t)v35, v18, v24, ContextManager, ObjectType, (uint64_t)&off_1F3A7F878);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t result = (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    uint64_t v27 = v32;
    v32[3] = v18;
    void v27[4] = &off_1F3ABD698;
    *uint64_t v27 = v26;
    return result;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1DF1867F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E50);
  uint64_t result = sub_1DFDECCC0();
  if (!v55)
  {
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAF8D40);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v5 = v52;
  if (!v52)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v53;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E10);
  uint64_t result = sub_1DFDECCC0();
  if (!v51)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBABA190);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v7 = v48;
  if (!v48)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v49;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBABA450);
  uint64_t result = sub_1DFDECCC0();
  if (!v47)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  type metadata accessor for SearchResultsInflaterFactory();
  uint64_t v9 = swift_allocObject();
  sub_1DE942EC4(&v46, v9 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E30);
  uint64_t result = sub_1DFDECCC0();
  if (!v47)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E40);
  uint64_t result = sub_1DFDECCC0();
  if (!v45)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v41 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAB60);
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E20);
  uint64_t result = sub_1DFDECCC0();
  if (!v43)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v35 = v10;
  uint64_t v36 = v9;
  uint64_t v37 = v7;
  uint64_t v38 = v6;
  uint64_t v39 = v5;
  uint64_t v40 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBAB0140);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v54, v55);
    v34[2] = v34;
    MEMORY[0x1F4188790](v12);
    uint64_t v14 = (void *)((char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v50, v51);
    v34[1] = v34;
    MEMORY[0x1F4188790](v16);
    uint64_t v18 = (void *)((char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v19 + 16))(v18);
    uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v46, v47);
    MEMORY[0x1F4188790](v20);
    unint64_t v22 = (void *)((char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v23 + 16))(v22);
    uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v44, v45);
    MEMORY[0x1F4188790](v24);
    id v26 = (void *)((char *)v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v27 + 16))(v26);
    uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, v43);
    MEMORY[0x1F4188790](v28);
    uint64_t v30 = (void *)((char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v31 + 16))(v30);
    uint64_t v32 = sub_1DF605E60(*v14, v39, v38, *v18, v37, v41, v36, *v22, *v26, v35, *v30, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    uint64_t result = type metadata accessor for SearchService();
    uint64_t v33 = v40;
    void v40[3] = result;
    v33[4] = &off_1F3AC0450;
    void *v33 = v32;
    return result;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t SearchServiceAssembly.deinit()
{
  return v0;
}

uint64_t SearchServiceAssembly.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s7NewsUI221SearchServiceAssemblyC4load2iny13TeaFoundation14ProxyContainerC_tF_0()
{
  uint64_t v0 = sub_1DFDEDC80();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDECEE0();
  sub_1DE925C98(0, &qword_1EBAF8D38);
  sub_1DFDED7C0();
  swift_release();
  swift_release();
  sub_1DFDECEF0();
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E20);
  sub_1DFDED7C0();
  swift_release();
  swift_release();
  sub_1DFDECEE0();
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E30);
  sub_1DFDED7C0();
  swift_release();
  swift_release();
  sub_1DFDECEE0();
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E40);
  sub_1DFDED7C0();
  swift_release();
  swift_release();
  sub_1DFDECEE0();
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E10);
  sub_1DFDED7C0();
  swift_release();
  uint64_t v4 = *MEMORY[0x1E4FAB040];
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1DFDEC900();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1DFDECEE0();
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAF8D40);
  sub_1DFDED7C0();
  swift_release();
  v5(v3, v4, v0);
  sub_1DFDEC900();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1DFDECEE0();
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAF8E50);
  sub_1DFDED7C0();
  swift_release();
  swift_release();
  sub_1DFDECEE0();
  sub_1DE925C98(0, &qword_1EBAF8D50);
  sub_1DFDED7C0();
  swift_release();
  v5(v3, *MEMORY[0x1E4FAB030], v0);
  sub_1DFDEC900();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
}

uint64_t type metadata accessor for SearchServiceAssembly()
{
  return self;
}

uint64_t method lookup function for SearchServiceAssembly(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SearchServiceAssembly);
}

uint64_t dispatch thunk of SearchServiceAssembly.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

void sub_1DF187494()
{
  if (!qword_1EBABA700)
  {
    sub_1DFDED680();
    unint64_t v0 = sub_1DFDFE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABA700);
    }
  }
}

void sub_1DF1874EC()
{
  if (!qword_1EBAEBA28)
  {
    sub_1DEE5A510();
    unint64_t v0 = sub_1DFDECED0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEBA28);
    }
  }
}

uint64_t _s11ForYouFetchVwxx()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s11ForYouFetchVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s11ForYouFetchVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s11ForYouFetchVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *_s11ForYouFetchVMa()
{
  return &_s11ForYouFetchVN;
}

uint64_t sub_1DF1876D0@<X0>(void *a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *a1;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DF18774C(v5, a2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  a3[1] = v6;
  return result;
}

uint64_t sub_1DF18774C(unint64_t a1, unint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v35 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_35;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = sub_1DFDFFBE0())
  {
    unint64_t v4 = 0;
    uint64_t v30 = v2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v31 = v2 & 0xC000000000000001;
    uint64_t v28 = v2;
    uint64_t v29 = v2 + 32;
    uint64_t v27 = i;
    while (1)
    {
      if (v31)
      {
        id v5 = (id)MEMORY[0x1E01EE240](v4, v2);
      }
      else
      {
        if (v4 >= *(void *)(v30 + 16)) {
          goto LABEL_33;
        }
        id v5 = *(id *)(v29 + 8 * v4);
      }
      uint64_t v6 = v5;
      BOOL v7 = __OFADD__(v4, 1);
      unint64_t v8 = v4 + 1;
      if (v7) {
        break;
      }
      unint64_t v32 = v8;
      if (a2 >> 62)
      {
        id v25 = v5;
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_1DFDFFBE0();
        if (v9)
        {
LABEL_12:
          uint64_t v11 = 4;
          do
          {
            uint64_t v2 = v11 - 4;
            if ((a2 & 0xC000000000000001) != 0)
            {
              uint64_t v12 = (void *)MEMORY[0x1E01EE240](v11 - 4, a2);
              uint64_t v13 = v11 - 3;
              if (__OFADD__(v2, 1)) {
                goto LABEL_32;
              }
            }
            else
            {
              uint64_t v12 = (void *)swift_unknownObjectRetain();
              uint64_t v13 = v11 - 3;
              if (__OFADD__(v2, 1))
              {
LABEL_32:
                __break(1u);
LABEL_33:
                __break(1u);
                goto LABEL_34;
              }
            }
            uint64_t v34 = v13;
            id v14 = objc_msgSend(v12, sel_identifier);
            uint64_t v15 = sub_1DFDFDD20();
            uint64_t v17 = v16;

            uint64_t v18 = v6;
            id v19 = objc_msgSend(v6, sel_identifier);
            uint64_t v20 = sub_1DFDFDD20();
            uint64_t v22 = v21;

            if (v15 == v20 && v17 == v22)
            {

              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
LABEL_27:
              swift_bridgeObjectRelease();

              goto LABEL_5;
            }
            char v24 = sub_1DFDFFF50();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v24)
            {

              goto LABEL_27;
            }
            ++v11;
            uint64_t v6 = v18;
          }
          while (v34 != v9);
        }
      }
      else
      {
        uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id v10 = v5;
        swift_bridgeObjectRetain();
        if (v9) {
          goto LABEL_12;
        }
      }

      swift_bridgeObjectRelease();
      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
LABEL_5:
      uint64_t v2 = v28;
      unint64_t v4 = v32;
      if (v32 == v27) {
        return v35;
      }
    }
LABEL_34:
    __break(1u);
LABEL_35:
    ;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t *sub_1DF187A2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDF2BF0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    id v10 = (_OWORD *)((char *)a2 + v8);
    long long v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
  }
  return a1;
}

uint64_t sub_1DF187B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1DF187B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  void v8[2] = v9[2];
  v8[3] = v9[3];
  return a1;
}

uint64_t sub_1DF187C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1DF187CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDF2BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1DF187D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF187D3C);
}

uint64_t sub_1DF187D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF187DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF187DBC);
}

uint64_t sub_1DF187DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MyMagazinesSectionHeaderViewLayoutOptions()
{
  uint64_t result = qword_1EAC290B0;
  if (!qword_1EAC290B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF187E78()
{
  uint64_t result = sub_1DFDF2BF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF187F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF187F20);
}

uint64_t sub_1DF187F20(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 217)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x27) {
      return v4 - 38;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1DFDFAA20();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    long long v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DF187FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF187FDC);
}

unsigned char *sub_1DF187FDC(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 217)
  {
    *uint64_t result = a2 + 38;
  }
  else
  {
    uint64_t v7 = sub_1DFDFAA20();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsScoresTagFeedGroupConfigData()
{
  uint64_t result = qword_1EBAE5118;
  if (!qword_1EBAE5118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF1880CC()
{
  uint64_t result = sub_1DFDFAA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DF188164@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v18 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF188698(0, &qword_1EBAEAB40, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF188644();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v12 = v16;
    long long v11 = v17;
    char v19 = 1;
    sub_1DE9CB07C(&qword_1EBABA3B8);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *long long v11 = 14;
    uint64_t v13 = type metadata accessor for SportsScoresTagFeedGroupConfigData();
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v11[*(int *)(v13 + 20)], v18, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF1883CC(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF188698(0, &qword_1EAC290C0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF188644();
  sub_1DFE001A0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1DEAF3AE0();
  sub_1DFDFFE80();
  if (!v2)
  {
    type metadata accessor for SportsScoresTagFeedGroupConfigData();
    v11[13] = 1;
    sub_1DFDFAA20();
    sub_1DE9CB07C(&qword_1EBABA3B0);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF18859C(uint64_t a1)
{
  unint64_t v2 = sub_1DF188644();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF1885D8(uint64_t a1)
{
  unint64_t v2 = sub_1DF188644();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF188614@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DF188164(a1, a2);
}

uint64_t sub_1DF18862C(void *a1)
{
  return sub_1DF1883CC(a1);
}

unint64_t sub_1DF188644()
{
  unint64_t result = qword_1EBAE50E0;
  if (!qword_1EBAE50E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE50E0);
  }
  return result;
}

void sub_1DF188698(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF188644();
    unint64_t v7 = a3(a1, &type metadata for SportsScoresTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsScoresTagFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF1887C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsScoresTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SportsScoresTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF188804()
{
  unint64_t result = qword_1EAC290C8;
  if (!qword_1EAC290C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC290C8);
  }
  return result;
}

unint64_t sub_1DF18885C()
{
  unint64_t result = qword_1EBAE50F0;
  if (!qword_1EBAE50F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE50F0);
  }
  return result;
}

unint64_t sub_1DF1888B4()
{
  unint64_t result = qword_1EBAE50E8;
  if (!qword_1EBAE50E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE50E8);
  }
  return result;
}

uint64_t *sub_1DF188908(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDE7600();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DEA2098C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = type metadata accessor for SearchMoreFeedConfig();
    *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *sub_1DF188AB0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA2098C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for SearchMoreFeedConfig();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1DF188C08(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA2098C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for SearchMoreFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1DF188DD0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA2098C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for SearchMoreFeedConfig();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1DF188F24(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA2098C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for SearchMoreFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_1DF1890E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF1890F8);
}

uint64_t sub_1DF1890F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchMoreFeedConfig();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF189164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF189178);
}

uint64_t sub_1DF189178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchMoreFeedConfig();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1DF1891E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_1DEA2098C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  int v10 = (char *)&v20 - v9;
  sub_1DEA2098C(0, &qword_1EAC290E0, (void (*)(uint64_t))type metadata accessor for SearchMoreFeedConfig);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = type metadata accessor for SearchMoreFeedConfig();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF189C48(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    uint64_t v18 = sub_1DFDE7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
    sub_1DEB80304((uint64_t)v10, (uint64_t)v17);
    *(void *)&v17[*(int *)(v14 + 20)] = MEMORY[0x1E4FBC860];
    sub_1DF189CC8(a1);
    sub_1DF189CC8((uint64_t)v13);
  }
  else
  {
    sub_1DF189CC8(a1);
    sub_1DF189D40((uint64_t)v13, (uint64_t)v17);
  }
  sub_1DF189D40((uint64_t)v17, a4);
  if (a3) {
    a2 = 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t result = type metadata accessor for SearchMoreFeedContentConfig();
  *(void *)(a4 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1DF189444@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  sub_1DEA2098C(0, &qword_1EAC290E0, (void (*)(uint64_t))type metadata accessor for SearchMoreFeedConfig);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  sub_1DF189E4C(0, &qword_1EAC290E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF189DA4();
  sub_1DFE00190();
  if (!v2)
  {
    type metadata accessor for SearchMoreFeedConfig();
    char v18 = 0;
    sub_1DF189EB0(&qword_1EAC290F8);
    sub_1DFDFFCD0();
    char v17 = 1;
    sub_1DF189DF8();
    sub_1DFDFFCD0();
    sub_1DF1891E8((uint64_t)v6, v15, v16, v14);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF189674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF18A154(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF18969C(uint64_t a1)
{
  unint64_t v2 = sub_1DF189DA4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF1896D8(uint64_t a1)
{
  unint64_t v2 = sub_1DF189DA4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF189714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for SearchMoreFeedConfig();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA2098C(0, &qword_1EAC290E0, (void (*)(uint64_t))type metadata accessor for SearchMoreFeedConfig);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v19 - v13;
  sub_1DF189BE4(a1, (uint64_t)&v19 - v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
  uint64_t v15 = type metadata accessor for SearchMoreFeedContentConfig();
  uint64_t v16 = *(void *)(v2 + *(int *)(v15 + 20));
  sub_1DF189C48((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    uint64_t v17 = sub_1DFDE7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
    *(void *)&v8[*(int *)(v5 + 20)] = MEMORY[0x1E4FBC860];
    sub_1DF189CC8((uint64_t)v14);
    sub_1DF189CC8((uint64_t)v12);
  }
  else
  {
    sub_1DF189CC8((uint64_t)v14);
    sub_1DF189D40((uint64_t)v12, (uint64_t)v8);
  }
  uint64_t result = sub_1DF189D40((uint64_t)v8, a2);
  *(void *)(a2 + *(int *)(v15 + 20)) = v16;
  return result;
}

uint64_t sub_1DF18994C(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF189E4C(0, &qword_1EAC29108, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF189DA4();
  sub_1DFE001A0();
  char v13 = 0;
  type metadata accessor for SearchMoreFeedConfig();
  sub_1DF189EB0(&qword_1EAC29110);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + *(int *)(type metadata accessor for SearchMoreFeedContentConfig() + 20));
    v11[15] = 1;
    sub_1DF189EF4();
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF189B18@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF189BE4(v1, a1);
}

uint64_t sub_1DF189B28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF189444(a1, a2);
}

uint64_t sub_1DF189B40(void *a1)
{
  return sub_1DF18994C(a1);
}

uint64_t sub_1DF189B58()
{
  return sub_1DF189EB0(&qword_1EAC290D0);
}

unint64_t sub_1DF189B90()
{
  unint64_t result = qword_1EAC290D8;
  if (!qword_1EAC290D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC290D8);
  }
  return result;
}

uint64_t sub_1DF189BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchMoreFeedConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF189C48(uint64_t a1, uint64_t a2)
{
  sub_1DEA2098C(0, &qword_1EAC290E0, (void (*)(uint64_t))type metadata accessor for SearchMoreFeedConfig);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF189CC8(uint64_t a1)
{
  sub_1DEA2098C(0, &qword_1EAC290E0, (void (*)(uint64_t))type metadata accessor for SearchMoreFeedConfig);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF189D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchMoreFeedConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DF189DA4()
{
  unint64_t result = qword_1EAC290F0;
  if (!qword_1EAC290F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC290F0);
  }
  return result;
}

unint64_t sub_1DF189DF8()
{
  unint64_t result = qword_1EAC29100;
  if (!qword_1EAC29100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29100);
  }
  return result;
}

void sub_1DF189E4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF189DA4();
    unint64_t v7 = a3(a1, &type metadata for SearchMoreFeedContentConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF189EB0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SearchMoreFeedConfig();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF189EF4()
{
  unint64_t result = qword_1EAC29118;
  if (!qword_1EAC29118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29118);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchMoreFeedContentConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF18A014);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMoreFeedContentConfig.CodingKeys()
{
  return &type metadata for SearchMoreFeedContentConfig.CodingKeys;
}

unint64_t sub_1DF18A050()
{
  unint64_t result = qword_1EAC29120;
  if (!qword_1EAC29120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29120);
  }
  return result;
}

unint64_t sub_1DF18A0A8()
{
  unint64_t result = qword_1EAC29128;
  if (!qword_1EAC29128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29128);
  }
  return result;
}

unint64_t sub_1DF18A100()
{
  unint64_t result = qword_1EAC29130;
  if (!qword_1EAC29130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29130);
  }
  return result;
}

uint64_t sub_1DF18A154(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x666E6F4364656566 && a2 == 0xEA00000000006769;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F4373626F6E6BLL && a2 == 0xEB00000000676966)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t destroy for FollowingSuggestionsRebuildModifier(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

uint64_t initializeWithCopy for FollowingSuggestionsRebuildModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v8(v4, v5, v7);
  return a1;
}

void *assignWithCopy for FollowingSuggestionsRebuildModifier(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 4, a2 + 4);
  return a1;
}

uint64_t assignWithTake for FollowingSuggestionsRebuildModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for FollowingSuggestionsRebuildModifier()
{
  return &type metadata for FollowingSuggestionsRebuildModifier;
}

void sub_1DF18A46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1DF18BB5C(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v8);
  char v13 = (char *)&aBlock[-1] - v12;
  uint64_t v14 = *(void **)(v3 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&aBlock[-1] - v12, a1, v9);
  sub_1DECE377C(v4, (uint64_t)v25);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v13, v9);
  unint64_t v18 = v17 + v16;
  long long v19 = v25[3];
  *(_OWORD *)(v18 + 32) = v25[2];
  *(_OWORD *)(v18 + 48) = v19;
  *(void *)(v18 + 64) = v26;
  long long v20 = v25[1];
  *(_OWORD *)unint64_t v18 = v25[0];
  *(_OWORD *)(v18 + 16) = v20;
  uint64_t v21 = (void *)(v17 + ((v16 + 79) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v21 = a2;
  v21[1] = a3;
  aBlock[4] = sub_1DF18BAA4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9744A8;
  void aBlock[3] = &block_descriptor_78;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_prepareForUseWithCompletionHandler_, v22);
  _Block_release(v22);
}

void sub_1DF18A698(char *a1, uint64_t *a2, unint64_t a3, uint64_t a4)
{
  sub_1DF18BB5C(0, &qword_1EBAEBF50, MEMORY[0x1E4FACA00]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v81 = (char *)v71 - v11;
  sub_1DF18BB5C(0, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
  uint64_t v89 = *(void *)(v12 - 8);
  uint64_t v90 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v75 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v74 = (char *)v71 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v77 = (char *)v71 - v17;
  sub_1DEBEE754(0);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v76 = (uint64_t)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v71 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  long long v84 = (char *)v71 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)v71 - v26;
  sub_1DF18BB5C(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v29 = v28;
  MEMORY[0x1F4188790](v28);
  unint64_t v31 = (char *)v71 - v30;
  uint64_t v86 = v32;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  uint64_t v79 = v32 + 16;
  double v78 = v33;
  v33(v31, a1, v29);
  uint64_t v91 = v29;
  uint64_t v92 = v27;
  long long v87 = a1;
  sub_1DFDF5AF0();
  char v85 = a2;
  uint64_t v34 = *a2;
  id v35 = objc_msgSend(*(id *)(*a2 + 32), sel_autoFavoriteTagIDs);
  unint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t v88 = a4;
  uint64_t v82 = v10;
  uint64_t v83 = v9;
  if (v35)
  {
    uint64_t v37 = v35;
    uint64_t v38 = sub_1DFDFE220();

    uint64_t v39 = *(void **)(v34 + 16);
    uint64_t v40 = (void *)sub_1DFDFE200();
    id v41 = objc_msgSend(v39, sel_slowCachedTagsForIDs_, v40);

    if (!v41)
    {
      __break(1u);
      return;
    }
    sub_1DEABCEB0();
    uint64_t v42 = sub_1DFDFDAF0();

    uint64_t v43 = swift_bridgeObjectRetain();
    unint64_t v44 = (unint64_t)sub_1DEAB9514(v43);
    uint64_t v73 = v42;
    swift_bridgeObjectRelease();
    v94[0] = v36;
    if ((v44 & 0x8000000000000000) != 0 || (v44 & 0x4000000000000000) != 0)
    {
LABEL_17:
      swift_retain();
      uint64_t v45 = sub_1DFDFFBE0();
      if (v45) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v45 = *(void *)(v44 + 16);
      swift_retain();
      if (v45)
      {
LABEL_6:
        v71[1] = v38;
        uint64_t v72 = v34;
        uint64_t v80 = (void (*)(void))a3;
        a3 = 0;
        uint64_t v38 = (uint64_t)v23;
        while (1)
        {
          if ((v44 & 0xC000000000000001) != 0)
          {
            uint64_t v23 = (char *)MEMORY[0x1E01EE240](a3, v44);
            long long v46 = (char *)(a3 + 1);
            if (__OFADD__(a3, 1))
            {
LABEL_14:
              __break(1u);
LABEL_15:
              uint64_t v23 = (char *)v38;
              unint64_t v47 = v94[0];
              a3 = (unint64_t)v80;
              uint64_t v34 = v72;
              goto LABEL_19;
            }
          }
          else
          {
            if (a3 >= *(void *)(v44 + 16))
            {
              __break(1u);
              goto LABEL_17;
            }
            uint64_t v23 = *(char **)(v44 + 8 * a3 + 32);
            swift_unknownObjectRetain();
            long long v46 = (char *)(a3 + 1);
            if (__OFADD__(a3, 1)) {
              goto LABEL_14;
            }
          }
          sub_1DFDFFA50();
          uint64_t v34 = (uint64_t)v31;
          sub_1DFDFFA90();
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
          ++a3;
          if (v46 == (char *)v45) {
            goto LABEL_15;
          }
        }
      }
    }
    unint64_t v47 = MEMORY[0x1E4FBC860];
LABEL_19:
    swift_release();
    swift_retain();
    unint64_t v36 = sub_1DF08A100(v47, v34, MEMORY[0x1E4FBC870], MEMORY[0x1E4FBC870]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v48 = v84;
  sub_1DF18B068(v36, v84);
  swift_bridgeObjectRelease();
  uint64_t v49 = v89;
  uint64_t v50 = v90;
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
  if (v51(v48, 1, v90) == 1)
  {
    sub_1DECD10B4((uint64_t)v48);
    sub_1DF18BC1C((uint64_t)v92, (uint64_t)v23);
    int v52 = v51(v23, 1, v50);
    uint64_t v53 = v81;
    if (v52 == 1)
    {
      sub_1DECD10B4((uint64_t)v23);
    }
    else
    {
      uint64_t v58 = v23;
      uint64_t v59 = v74;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v74, v58, v50);
      sub_1DFDF14E0();
      sub_1DFDF59C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v59, v50);
    }
  }
  else
  {
    uint64_t v80 = (void (*)(void))a3;
    char v54 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    uint64_t v55 = v77;
    v54(v77, v48, v50);
    uint64_t v56 = v76;
    sub_1DF18BC1C((uint64_t)v92, v76);
    if (v51((char *)v56, 1, v50) == 1)
    {
      sub_1DECD10B4(v56);
      sub_1DEB0B5AC();
      sub_1DFDFE6A0();
      sub_1DFDFE720();
      uint64_t v57 = v83;
      if (v94[0] != v93)
      {
        sub_1DECD1110();
        sub_1DFDF5AC0();
      }
      (*(void (**)(char *, uint64_t))(v89 + 8))(v55, v90);
      a3 = (unint64_t)v80;
      uint64_t v53 = v81;
      goto LABEL_30;
    }
    uint64_t v60 = v56;
    uint64_t v61 = v75;
    v54(v75, (char *)v60, v50);
    sub_1DFDF59D0();
    uint64_t v62 = *(void (**)(char *, uint64_t))(v49 + 8);
    v62(v61, v50);
    v62(v55, v50);
    a3 = (unint64_t)v80;
    uint64_t v53 = v81;
  }
  uint64_t v57 = v83;
LABEL_30:
  type metadata accessor for FollowingModel();
  sub_1DEC38FC4();
  sub_1DEADC298();
  sub_1DECD104C(&qword_1EBAD4970, (void (*)(uint64_t))type metadata accessor for FollowingModel);
  sub_1DFDF2420();
  __swift_project_boxed_opaque_existential_1(v94, v94[3]);
  if (sub_1DFDF1990())
  {
    uint64_t v63 = (unsigned int *)MEMORY[0x1E4FAC9F8];
    uint64_t v64 = v82;
    uint64_t v65 = v91;
  }
  else
  {
    sub_1DEC39018();
    uint64_t v67 = (uint64_t)&v53[*(int *)(v66 + 48)];
    id v68 = &v53[*(int *)(v66 + 64)];
    uint64_t v65 = v91;
    v78(v53, v31, v91);
    sub_1DE94F204((uint64_t)v94, v67);
    uint64_t v69 = *MEMORY[0x1E4FAC298];
    uint64_t v70 = sub_1DFDF1930();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 104))(v68, v69, v70);
    uint64_t v63 = (unsigned int *)MEMORY[0x1E4FAC9F0];
    uint64_t v64 = v82;
  }
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v53, *v63, v57);
  ((void (*)(char *))a3)(v53);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v53, v57);
  sub_1DECD10B4((uint64_t)v92);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v31, v65);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
}

uint64_t sub_1DF18B068@<X0>(unint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1DECD0F80();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF18BB5C(0, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
  uint64_t v9 = v8;
  uint64_t v10 = *((void *)v8 - 1);
  MEMORY[0x1F4188790](v8);
  uint64_t v53 = (char *)&v46 - v11;
  unint64_t v55 = v2;
  uint64_t v12 = 0;
  uint64_t v13 = sub_1DEB01630((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1DF18BC80, (uint64_t)v54, a1);
  if (v13 < 0 || (v13 & 0x4000000000000000) != 0) {
    goto LABEL_34;
  }
  uint64_t v14 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    v56[0] = v14;
    sub_1DEBDFF08(v56);
    if (v12) {
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    unint64_t v15 = v56[0];
    unsigned __int8 v16 = objc_msgSend(*(id *)(v2 + 24), sel_isOptedInToSiriSuggestions);
    uint64_t v51 = a2;
    uint64_t v50 = v9;
    uint64_t v49 = v10;
    int v52 = v7;
    if (v16) {
      sub_1DF9BAC94(&v61);
    }
    else {
      sub_1DF9BADCC(&v61);
    }
    uint64_t v17 = v68;
    uint64_t v18 = v66;
    uint64_t v19 = v64;
    uint64_t v20 = v62;
    v56[0] = v61;
    v56[1] = v62;
    v56[2] = v63;
    v56[3] = v64;
    v56[4] = v65;
    v56[5] = v66;
    long long v57 = v67;
    uint64_t v58 = v68;
    unint64_t v59 = v15;
    uint64_t v21 = (void *)v67;
    char v60 = 8;
    sub_1DEB0B564(0);
    uint64_t v23 = v22;
    uint64_t v24 = sub_1DECD104C(&qword_1EBAEBBB0, sub_1DEB0B564);
    uint64_t v25 = sub_1DECD104C((unint64_t *)&unk_1EBAEBBA0, sub_1DEB0B564);
    uint64_t v48 = v20;
    uint64_t v26 = v19;
    uint64_t v10 = v18;
    uint64_t v7 = v17;
    swift_bridgeObjectRetain();
    uint64_t v46 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = v21;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v9 = v52;
    MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v23, v24, v25);
    uint64_t v12 = type metadata accessor for FollowingModel();
    sub_1DEADC298();
    sub_1DECD104C(&qword_1EBAD4970, (void (*)(uint64_t))type metadata accessor for FollowingModel);
    a2 = v53;
    sub_1DFDF14C0();
    id v47 = v27;
    if ((v15 & 0x8000000000000000) != 0 || (v15 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1DFDFFBE0();
      swift_release();
    }
    else
    {
      uint64_t v28 = *(void *)(v15 + 16);
    }
    unint64_t v29 = v28 >= 13 ? 13 : v28;
    swift_getObjectType();
    unint64_t v2 = sub_1DEDA9898(v15);
    swift_release();
    if ((v29 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_34:
    unint64_t v44 = swift_bridgeObjectRetain();
    uint64_t v14 = (uint64_t)sub_1DEC792E8(v44);
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = v2 >> 62;
  if (!(v2 >> 62))
  {
    uint64_t v31 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v31 >= (uint64_t)v29)
    {
LABEL_17:
      if ((v2 & 0xC000000000000001) != 0 && v29)
      {
        type metadata accessor for FollowingTagModel();
        uint64_t v32 = 0;
        do
        {
          uint64_t v33 = v32 + 1;
          sub_1DFDFF9F0();
          uint64_t v32 = v33;
        }
        while (v29 != v33);
      }
      if (v30)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_1DFDFFBF0();
        uint64_t v30 = v34;
        uint64_t v25 = v35;
        unint64_t v29 = v36;
        swift_bridgeObjectRelease_n();
        if (v29) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v25 = 0;
        uint64_t v31 = v2 & 0xFFFFFFFFFFFFFF8;
        uint64_t v30 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
        unint64_t v29 = (2 * v29) | 1;
        if (v29)
        {
LABEL_26:
          sub_1DFDFFF90();
          swift_unknownObjectRetain_n();
          uint64_t v38 = swift_dynamicCastClass();
          if (!v38)
          {
            swift_unknownObjectRelease();
            uint64_t v38 = MEMORY[0x1E4FBC860];
          }
          uint64_t v39 = *(void *)(v38 + 16);
          swift_release();
          if (!__OFSUB__(v29 >> 1, v25))
          {
            if (v39 == (v29 >> 1) - v25)
            {
              unint64_t v37 = swift_dynamicCastClass();
              if (!v37)
              {
                swift_unknownObjectRelease();
                unint64_t v37 = MEMORY[0x1E4FBC860];
              }
              goto LABEL_32;
            }
            goto LABEL_40;
          }
LABEL_39:
          __break(1u);
LABEL_40:
          swift_unknownObjectRelease();
        }
      }
      unint64_t v37 = sub_1DEC7A4A0(v31, v30, v25, v29);
LABEL_32:
      swift_unknownObjectRelease();
      sub_1DEDA9698(v37);
      swift_release();
      uint64_t v40 = v50;
      sub_1DFDF1520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v49;
      uint64_t v42 = v51;
      (*(void (**)(char *, char *, char *))(v49 + 32))(v51, a2, v40);
      return (*(uint64_t (**)(char *, void, uint64_t, char *))(v41 + 56))(v42, 0, 1, v40);
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if ((v45 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v31 >= (uint64_t)v29) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
  __break(1u);
LABEL_42:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

BOOL sub_1DF18B6CC(uint64_t a1, uint64_t a2)
{
  return qword_1DFE442F0[*(char *)(a1 + 80)] < qword_1DFE442F0[*(char *)(a2 + 80)];
}

uint64_t sub_1DF18B6F0@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v5 = sub_1DFDFBB00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (void *)((char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1DFDFB530();
  uint64_t v9 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v13 = a2[7];
  v16[1] = a2[8];
  __swift_project_boxed_opaque_existential_1(a2 + 4, v13);
  *uint64_t v8 = *(void *)(v12 + 16);
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F81010], v5);
  swift_unknownObjectRetain();
  sub_1DFDFD2A0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(a2) = sub_1DFDFB510();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  type metadata accessor for FollowingTagModel();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 1;
  *(void *)(v14 + 24) = v12;
  *(unsigned char *)(v14 + 32) = a2 & 1;
  *uint64_t v18 = v14;
  return swift_retain();
}

uint64_t sub_1DF18B918(uint64_t a1)
{
  unint64_t v2 = sub_1DECE37D8();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DF18B958()
{
  unint64_t result = qword_1EBAF2260;
  if (!qword_1EBAF2260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF2260);
  }
  return result;
}

uint64_t sub_1DF18B9AC()
{
  sub_1DF18BB5C(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 32);
  swift_release();
  return swift_deallocObject();
}

void sub_1DF18BAA4()
{
  sub_1DF18BB5C(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = (char *)(v0 + v3);
  uint64_t v6 = (unint64_t *)(v0 + ((v4 + 79) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  sub_1DF18A698(v5, (uint64_t *)(v0 + v4), v7, v8);
}

void sub_1DF18BB5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FollowingDescriptor;
    v8[1] = type metadata accessor for FollowingModel();
    void v8[2] = sub_1DEADC298();
    v8[3] = sub_1DECD104C(&qword_1EBAD4970, (void (*)(uint64_t))type metadata accessor for FollowingModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DF18BC1C(uint64_t a1, uint64_t a2)
{
  sub_1DEBEE754(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF18BC80@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DF18B6F0(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1DF18BCA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t v31 = type metadata accessor for PaywallMagazineFeedGroupConfigData();
  MEMORY[0x1F4188790](v31);
  unint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDF8EE0();
  uint64_t v4 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  unint64_t v29 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9FEB34(0, (unint64_t *)&unk_1EBAA79F0, MEMORY[0x1E4FAB0A8]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v28 - v10;
  uint64_t v12 = sub_1DFDF8C20();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DFDE7630();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDE7620();
  uint64_t v20 = sub_1DFDE7610();
  v28[1] = v21;
  v28[2] = v20;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F7FBF0], v12);
  uint64_t v22 = sub_1DFDEE010();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v11, 1, 1, v22);
  v23(v9, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v29, *MEMORY[0x1E4F7FCD8], v30);
  uint64_t v24 = &v3[*(int *)(v31 + 28)];
  uint64_t v25 = *MEMORY[0x1E4F823B8];
  uint64_t v26 = sub_1DFDEEE80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
  *(_WORD *)unint64_t v3 = 7;
  v3[2] = 1;
  sub_1DF18D128(&qword_1EBAE4B18, (void (*)(uint64_t))type metadata accessor for PaywallMagazineFeedGroupConfigData);
  sub_1DF18D128(&qword_1EBAE4B10, (void (*)(uint64_t))type metadata accessor for PaywallMagazineFeedGroupConfigData);
  return sub_1DFDF73D0();
}

uint64_t sub_1DF18C108@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v29 = type metadata accessor for PaywallMagazineFeedGroupConfigData();
  MEMORY[0x1F4188790](v29);
  uint64_t v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9FEB34(0, &qword_1EBABDAF8, MEMORY[0x1E4F823C0]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v32 = (uint64_t)&v26 - v6;
  uint64_t v33 = sub_1DFDEEE80();
  uint64_t v30 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF18D0C4(0, &qword_1EBAEAB28, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v26 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF18CF94();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v14 = v11;
    uint64_t v15 = v30;
    uint64_t v16 = v31;
    id v27 = v8;
    char v35 = 1;
    sub_1DFDFFCD0();
    int v17 = v36;
    char v34 = 2;
    sub_1DF18D128((unint64_t *)&unk_1EBABE560, MEMORY[0x1E4F823C0]);
    sub_1DFDFFD40();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v10);
    uint64_t v18 = v15;
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v32, 1, v33);
    uint64_t v20 = v16;
    uint64_t v22 = (uint64_t)v28;
    uint64_t v21 = v29;
    uint64_t v23 = v27;
    if (v19 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v18 + 104))(v27, *MEMORY[0x1E4F823B8], v33);
      sub_1DF18CFE8(v32);
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
      v24(v27, v32, v33);
    }
    *(_WORD *)uint64_t v22 = 7;
    *(unsigned char *)(v22 + 2) = (v17 == 2) | v17 & 1;
    v24((char *)(v22 + *(int *)(v21 + 28)), (uint64_t)v23, v33);
    sub_1DF18D060(v22, v20);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF18C500(void *a1)
{
  unint64_t v3 = v1;
  sub_1DF18D0C4(0, &qword_1EAC29148, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF18CF94();
  sub_1DFE001A0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1DEAD8774();
  sub_1DFDFFE80();
  if (!v2)
  {
    v11[13] = 1;
    sub_1DFDFFE50();
    type metadata accessor for PaywallMagazineFeedGroupConfigData();
    v11[12] = 2;
    sub_1DFDEEE80();
    sub_1DF18D128(&qword_1EAC29150, MEMORY[0x1E4F823C0]);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF18C70C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF2A03CC(*a1, *a2);
}

uint64_t sub_1DF18C718()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF18C7C0()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF18C854()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF18C8F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF18D37C();
  *a1 = result;
  return result;
}

void sub_1DF18C928(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0x80000001DFEB9A60;
  unint64_t v5 = 0xD000000000000017;
  if (v2 != 1)
  {
    unint64_t v5 = 0x54746E65746E6F63;
    unint64_t v4 = 0xEB00000000657079;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701869940;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DF18C98C()
{
  unint64_t v1 = 0xD000000000000017;
  if (*v0 != 1) {
    unint64_t v1 = 0x54746E65746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1DF18C9EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF18D37C();
  *a1 = result;
  return result;
}

uint64_t sub_1DF18CA14(uint64_t a1)
{
  unint64_t v2 = sub_1DF18CF94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF18CA50(uint64_t a1)
{
  unint64_t v2 = sub_1DF18CF94();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF18CA8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF18C108(a1, a2);
}

uint64_t sub_1DF18CAA4(void *a1)
{
  return sub_1DF18C500(a1);
}

void *sub_1DF18CABC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_1DFDEEE80();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1DF18CB90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_1DFDEEE80();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t sub_1DF18CBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DFDEEE80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1DF18CC7C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1DFDEEE80();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DF18CD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DFDEEE80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1DF18CD8C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1DFDEEE80();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DF18CE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF18CE2C);
}

uint64_t sub_1DF18CE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 1);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1DFDEEE80();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 28);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DF18CEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF18CEF0);
}

uint64_t sub_1DF18CEF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 1) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1DFDEEE80();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unint64_t sub_1DF18CF94()
{
  unint64_t result = qword_1EBAE4AF0;
  if (!qword_1EBAE4AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE4AF0);
  }
  return result;
}

uint64_t sub_1DF18CFE8(uint64_t a1)
{
  sub_1DE9FEB34(0, &qword_1EBABDAF8, MEMORY[0x1E4F823C0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF18D060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PaywallMagazineFeedGroupConfigData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DF18D0C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF18CF94();
    unint64_t v7 = a3(a1, &type metadata for PaywallMagazineFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF18D128(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PaywallMagazineFeedGroupConfigData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF18D23CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallMagazineFeedGroupConfigData.CodingKeys()
{
  return &type metadata for PaywallMagazineFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF18D278()
{
  unint64_t result = qword_1EAC29158;
  if (!qword_1EAC29158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29158);
  }
  return result;
}

unint64_t sub_1DF18D2D0()
{
  unint64_t result = qword_1EBAE4B00;
  if (!qword_1EBAE4B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE4B00);
  }
  return result;
}

unint64_t sub_1DF18D328()
{
  unint64_t result = qword_1EBAE4AF8;
  if (!qword_1EBAE4AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE4AF8);
  }
  return result;
}

uint64_t sub_1DF18D37C()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DF18D3C8()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_appConfiguration);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_searchMoreFeedConfigurationResourceId) & 1) != 0
    && (id v2 = objc_msgSend(v1, sel_searchMoreFeedConfigurationResourceId)) != 0)
  {
    int v3 = v2;
    sub_1DFDFDD20();

    MEMORY[0x1F4188790](v4);
    sub_1DEB3D9DC();
    sub_1DFDEE090();
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)sub_1DFDEDCE0();
    type metadata accessor for SearchMoreFeedConfigFetchResult();
    sub_1DFDEDE10();
    swift_release();

    unsigned int v6 = (void *)sub_1DFDEDCE0();
    uint64_t v7 = sub_1DFDEDE50();
    swift_unknownObjectRelease();
    swift_release();

    return v7;
  }
  else
  {
    sub_1DF18DF78();
    swift_allocError();
    *uint64_t v9 = 1;
    sub_1DF18DFEC(0, (unint64_t *)&unk_1EAC29170, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedConfigFetchResult, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v10 = sub_1DFDEDE70();
    swift_unknownObjectRelease();
    return v10;
  }
}

uint64_t sub_1DF18D60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v14[1] = a3;
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1DF18DFEC(0, (unint64_t *)&unk_1EBAD2440, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (void *)((char *)v14 - v6);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 32), *(void *)(a1 + 56));
  sub_1DFDFE570();
  *uint64_t v7 = v8;
  uint64_t v9 = *MEMORY[0x1E4FAA8C0];
  uint64_t v10 = sub_1DFDECA30();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v11 + 104))(v7, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  uint64_t v12 = sub_1DFDFB7F0();
  sub_1DEA16C6C((uint64_t)v7, (unint64_t *)&unk_1EBAD2440, v4);
  return v12;
}

id *sub_1DF18D7C0(id *a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v3 = type metadata accessor for SearchMoreFeedConfigFetchResult();
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v34 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - v6;
  uint64_t v8 = type metadata accessor for SearchMoreFeedContentConfig();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF18DFEC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = sub_1DFDE7220();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v32 - v19;
  id v21 = objc_msgSend(*a1, sel_fileURL);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_7;
  }
  uint64_t v22 = v21;
  uint64_t v33 = v7;
  sub_1DFDE7190();

  a1 = (id *)(v15 + 32);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v23(v13, v18, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_7:
    sub_1DEA16C6C((uint64_t)v13, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    sub_1DF18DF78();
    swift_allocError();
    *id v27 = 2;
    swift_willThrow();
    return a1;
  }
  v23(v20, v13, v14);
  unint64_t v24 = v36;
  uint64_t v25 = sub_1DFDE7240();
  if (!v24)
  {
    uint64_t v29 = v25;
    unint64_t v30 = v26;
    sub_1DF18DEBC();
    sub_1DFDEC890();
    unint64_t v36 = v30;
    uint64_t v31 = (uint64_t)v33;
    sub_1DF18E050((uint64_t)v10, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for SearchMoreFeedContentConfig);
    sub_1DF18E050(v31, v34, (uint64_t (*)(void))type metadata accessor for SearchMoreFeedConfigFetchResult);
    sub_1DF18DFEC(0, (unint64_t *)&unk_1EAC29170, (uint64_t (*)(uint64_t))type metadata accessor for SearchMoreFeedConfigFetchResult, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    a1 = (id *)sub_1DFDEDE90();
    sub_1DEA5E6E4(v29, v36);
    sub_1DF18E0B8(v31, (uint64_t (*)(void))type metadata accessor for SearchMoreFeedConfigFetchResult);
    sub_1DF18E0B8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchMoreFeedContentConfig);
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  return a1;
}

uint64_t sub_1DF18DC94()
{
  if (qword_1EAC1D430 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1DEA08668();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1DFDF00C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF18DDC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SearchMoreFeedContentConfig();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF18DEBC();
  uint64_t result = sub_1DFDEC890();
  if (!v1) {
    return sub_1DF18DF14((uint64_t)v5, a1);
  }
  return result;
}

uint64_t type metadata accessor for SearchMoreFeedConfigManager()
{
  return self;
}

unint64_t sub_1DF18DEBC()
{
  unint64_t result = qword_1EAC29160;
  if (!qword_1EAC29160)
  {
    type metadata accessor for SearchMoreFeedContentConfig();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29160);
  }
  return result;
}

uint64_t sub_1DF18DF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchMoreFeedContentConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DF18DF78()
{
  unint64_t result = qword_1EAC29168;
  if (!qword_1EAC29168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29168);
  }
  return result;
}

uint64_t sub_1DF18DFCC()
{
  return sub_1DF18D60C(v0[2], v0[3], v0[4]);
}

void sub_1DF18DFEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF18E050(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF18E0B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SearchMoreFeedConfigManager.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF18E1E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMoreFeedConfigManager.Errors()
{
  return &type metadata for SearchMoreFeedConfigManager.Errors;
}

unint64_t sub_1DF18E220()
{
  unint64_t result = qword_1EAC29180;
  if (!qword_1EAC29180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29180);
  }
  return result;
}

void sub_1DF18E274()
{
  sub_1DF18E2D0();
  if (v0)
  {
    id v1 = v0;
    sub_1DFDF05B0();
  }
}

void sub_1DF18E2D0()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  id v1 = objc_msgSend(v0, sel_connectedScenes);

  sub_1DE919914(0, (unint64_t *)&qword_1EBAA6620);
  sub_1DF18E704();
  uint64_t v2 = sub_1DFDFE5D0();

  if ((v2 & 0xC000000000000001) != 0)
  {
    sub_1DFDFF870();
    sub_1DFDFE620();
    uint64_t v2 = v31;
    uint64_t v3 = v32;
    uint64_t v4 = v33;
    uint64_t v5 = v34;
    unint64_t v6 = v35;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v3 = v2 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(v2 + 56);
  }
  int64_t v29 = (unint64_t)(v4 + 64) >> 6;
  uint64_t v26 = v3;
  uint64_t v27 = v2;
  while (1)
  {
    if (v2 < 0)
    {
      uint64_t v10 = v6;
      if (!sub_1DFDFF8F0()) {
        goto LABEL_46;
      }
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v13 = v30;
      swift_unknownObjectRelease();
      uint64_t v12 = v5;
      if (!v30) {
        goto LABEL_46;
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v10 = (v6 - 1) & v6;
        unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
        uint64_t v12 = v5;
      }
      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_48;
        }
        if (v14 >= v29) {
          goto LABEL_46;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v14);
        uint64_t v12 = v5 + 1;
        if (!v15)
        {
          uint64_t v12 = v5 + 2;
          if (v5 + 2 >= v29) {
            goto LABEL_46;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v5 + 3;
            if (v5 + 3 >= v29) {
              goto LABEL_46;
            }
            unint64_t v15 = *(void *)(v3 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v5 + 4;
              if (v5 + 4 >= v29) {
                goto LABEL_46;
              }
              unint64_t v15 = *(void *)(v3 + 8 * v12);
              if (!v15)
              {
                uint64_t v16 = v5 + 5;
                while (v29 != v16)
                {
                  unint64_t v15 = *(void *)(v3 + 8 * v16++);
                  if (v15)
                  {
                    uint64_t v12 = v16 - 1;
                    goto LABEL_29;
                  }
                }
LABEL_46:
                sub_1DEC80768();
                return;
              }
            }
          }
        }
LABEL_29:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_46;
      }
    }
    if (!objc_msgSend(v13, sel_activationState))
    {
      self;
      uint64_t v17 = swift_dynamicCastObjCClass();
      if (v17) {
        break;
      }
    }
LABEL_9:

    uint64_t v5 = v12;
    unint64_t v6 = v10;
  }
  uint64_t v18 = (void *)v17;
  id v28 = v13;
  id v19 = objc_msgSend(v18, sel_windows);
  sub_1DE919914(0, (unint64_t *)&unk_1EBAA6640);
  unint64_t v20 = sub_1DFDFE220();

  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_35;
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_8:

    swift_bridgeObjectRelease();
    uint64_t v3 = v26;
    uint64_t v2 = v27;
    goto LABEL_9;
  }
LABEL_35:
  uint64_t v22 = 4;
  while (1)
  {
    id v23 = (v20 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1E01EE240](v22 - 4, v20)
        : *(id *)(v20 + 8 * v22);
    unint64_t v24 = v23;
    uint64_t v25 = v22 - 3;
    if (__OFADD__(v22 - 4, 1)) {
      break;
    }
    sub_1DFDF05E0();
    if (swift_dynamicCastClass())
    {
      swift_bridgeObjectRelease();

      sub_1DEC80768();
      return;
    }

    ++v22;
    if (v25 == v21) {
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

unint64_t sub_1DF18E704()
{
  unint64_t result = qword_1EBAA6630;
  if (!qword_1EBAA6630)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBAA6620);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAA6630);
  }
  return result;
}

void sub_1DF18E76C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1E01EFB70](v2);
  if (v3)
  {
    uint64_t v4 = (char *)v3;
    id v5 = objc_msgSend(self, sel_feedTitleViewUpdateCheckingForNewStoriesForType_, 1);
    objc_msgSend(*(id *)(*(void *)&v4[OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadView] + qword_1EBAA9F80), sel_applyFeedTitleViewUpdate_animation_force_, v5, 2, 1);
  }
}

void sub_1DF18E81C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1E01EFB70](v2);
  if (v3)
  {
    uint64_t v4 = (char *)v3;
    id v5 = objc_msgSend(self, sel_feedTitleViewUpdateEmptyStateForType_, 1);
    objc_msgSend(*(id *)(*(void *)&v4[OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadView] + qword_1EBAA9F80), sel_applyFeedTitleViewUpdate_animation_, v5, 2);
  }
}

uint64_t sub_1DF18EA1C()
{
  return type metadata accessor for MastheadViewProvider();
}

id sub_1DF18EA24()
{
  return sub_1DF18EA48();
}

id sub_1DF18EA48()
{
  sub_1DE94F204(*(void *)(v0 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_titleViewStyler)+ OBJC_IVAR____TtC7NewsUI2P33_40459F828962B2D00232170432F6EDA023MastheadTitleViewStyler_renderer, (uint64_t)v12);
  id v1 = __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model);
  swift_retain();
  sub_1DEC29388(v2);
  swift_release();
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadView), sel_bounds);
  double v4 = v3;
  double v6 = v5;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1((void *)(*v1 + 16), *(void *)(*v1 + 40));
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F82D00]), sel_initWithTextColor_, *(void *)(*__swift_project_boxed_opaque_existential_1((void *)(*v7 + 16), *(void *)(*v7 + 40))+ OBJC_IVAR____TtC7NewsUI210BaseStyler_theme+ 32));
  uint64_t v9 = (void *)sub_1DFDFDCE0();
  id v10 = objc_msgSend(v8, sel_styleTitleText_styleType_boundingSize_, v9, 0, v4, v6);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v10;
}

uint64_t sub_1DF18EBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DF18EBD8(a1, a2, a3);
}

uint64_t sub_1DF18EBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1DFDED6F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6355C(0, &qword_1EBAD3208, MEMORY[0x1E4FACD38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  int64_t v14 = (char *)&v45 - v13;
  uint64_t v15 = OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model;
  double v16 = 0.0;
  uint64_t v17 = *(void *)(v4 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model) >> 61;
  uint64_t v47 = v9;
  uint64_t v48 = v8;
  uint64_t v46 = v11;
  uint64_t v49 = a3;
  uint64_t v18 = a2;
  if (!v17)
  {
    id v19 = *(void **)(v4 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_engagementBanner);
    if (v19)
    {
      id v20 = v19;
      sub_1DFDF3760();
      double Width = CGRectGetWidth(v53);
      sub_1DFDF3700();
      sub_1DFDFE8F0();
      objc_msgSend(v20, sel_sizeThatFits_, Width - v22, 1.79769313e308);
      double v16 = v23;
    }
  }
  sub_1DFDF3760();
  CGFloat v24 = CGRectGetWidth(v54);
  uint64_t v25 = (void *)(v4 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_layoutAttributesFactory);
  double v26 = sub_1DEA63670(v16);
  sub_1DFDF3700();
  sub_1DFDF3760();
  sub_1DFDF2A40();
  *(CGFloat *)int v52 = v24;
  *(double *)&v52[1] = v26;
  _OWORD v52[2] = v27;
  v52[3] = v28;
  v52[4] = v29;
  v52[5] = v30;
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  unint64_t v31 = *(void *)(v4 + v15);
  swift_retain();
  sub_1DEA63730(v31, (uint64_t)v52, a1, (uint64_t)v51, v16);
  swift_release();
  sub_1DE94F204(*(void *)(v4 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_titleViewStyler)+ OBJC_IVAR____TtC7NewsUI2P33_40459F828962B2D00232170432F6EDA023MastheadTitleViewStyler_renderer, (uint64_t)v50);
  __swift_project_boxed_opaque_existential_1(v50, v50[3]);
  unint64_t v32 = *(void *)(v4 + v15);
  swift_retain();
  uint64_t v33 = (void *)sub_1DFDF36E0();
  uint64_t v34 = v18;
  uint64_t v35 = v49;
  sub_1DF7B68BC(v32, (uint64_t)v51, *(char **)(v4 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadView), v34, v49);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  uint64_t v36 = sub_1DFDF3770();
  uint64_t v37 = *(void *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v14, a1, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v14, 0, 1, v36);
  uint64_t v38 = v4 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_lastLayoutOptions;
  swift_beginAccess();
  sub_1DEA691B0((uint64_t)v14, v38);
  swift_endAccess();
  *(void *)(v4 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable + 8) = v35;
  swift_unknownObjectWeakAssign();
  if (*(unsigned char *)(*(void *)(v4 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_animationManager) + 16) == 1)
  {
    sub_1DEA635C0((uint64_t)&unk_1F3A67B68);
    uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAD18];
    sub_1DEA6355C(0, (unint64_t *)&unk_1EBABE0E0, MEMORY[0x1E4FAAD18], MEMORY[0x1E4FBBE00]);
    uint64_t v40 = v47;
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1DFE0B250;
    sub_1DFDED6D0();
    v50[0] = v41;
    sub_1DEA64D74((unint64_t *)&qword_1EBABE4C0, MEMORY[0x1E4FAAD18]);
    sub_1DEA6355C(0, (unint64_t *)&unk_1EBAC00C0, v39, MEMORY[0x1E4FBB320]);
    sub_1DEA635E8();
    uint64_t v42 = v46;
    uint64_t v43 = v48;
    sub_1DFDFF830();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_1DFDECBA0();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1DEA64CF4((uint64_t)v51);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v43);
    return swift_release();
  }
  else
  {
    sub_1DE9CAAB8();
    return sub_1DEA64CF4((uint64_t)v51);
  }
}

double sub_1DF18F1A4()
{
  return sub_1DF18F1C8();
}

double sub_1DF18F1C8()
{
  double v1 = 0.0;
  if (!(*(void *)(v0 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model) >> 61))
  {
    unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_engagementBanner);
    if (v2)
    {
      id v3 = v2;
      sub_1DFDF3760();
      double Width = CGRectGetWidth(v9);
      sub_1DFDF3700();
      sub_1DFDFE8F0();
      objc_msgSend(v3, sel_sizeThatFits_, Width - v5, 1.79769313e308);
      double v1 = v6;
    }
  }
  return sub_1DEA63670(v1);
}

void sub_1DF18F27C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1E01EFB70](v1);
  if (v2)
  {
    id v3 = (void *)v2;
    sub_1DE9CAAB8();
  }
}

uint64_t sub_1DF18F2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DF18F4E4(a3);
}

uint64_t sub_1DF18F2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DF18FD58(a3);
}

void sub_1DF18F2E0(uint64_t a1, uint64_t a2, void *a3)
{
}

id sub_1DF18F3E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MastheadTitleViewStyler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

ValueMetadata *type metadata accessor for MastheadViewProviderEvent()
{
  return &type metadata for MastheadViewProviderEvent;
}

uint64_t sub_1DF18F4A4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DF18F4DC()
{
  sub_1DF18F27C(v0);
}

uint64_t sub_1DF18F4E4(uint64_t a1)
{
  uint64_t v61 = a1;
  sub_1DEA69244();
  uint64_t v3 = v2;
  uint64_t v62 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6355C(0, &qword_1EBAD3208, MEMORY[0x1E4FACD38], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  CGRect v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v57 - v10;
  uint64_t v12 = sub_1DFDF3770();
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v64 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v18 = type metadata accessor for MastheadModelContext();
  uint64_t result = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model;
  unint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model);
  switch(v23 >> 61)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 6uLL:
      return result;
    case 5uLL:
      sub_1DEC2A1E8();
      uint64_t v39 = v38;
      uint64_t v60 = v23 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v40 = swift_projectBox();
      LODWORD(v59) = *(unsigned __int8 *)(v40 + *(int *)(v39 + 64));
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      v41(v5, v40, v3);
      uint64_t v42 = swift_allocBox();
      unint64_t v44 = v43;
      long long v57 = &v43[*(int *)(v39 + 48)];
      uint64_t v58 = v42;
      v41(v43, (uint64_t)v5, v3);
      sub_1DF190654(v61, (uint64_t)&v65);
      uint64_t v45 = v66;
      if (v66)
      {
        uint64_t v46 = v65;
        uint64_t v45 = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v46 = 0;
      }
      char v49 = v59;
      uint64_t v50 = v57;
      uint64_t v51 = v58;
      *(void *)long long v57 = v46;
      *((void *)v50 + 1) = v45;
      v44[*(int *)(v39 + 64)] = v49;
      *(void *)(v1 + v22) = v51 | 0xA000000000000000;
      swift_retain();
      swift_release();
      uint64_t v52 = v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_lastLayoutOptions;
      swift_beginAccess();
      sub_1DEAE6B84(v52, (uint64_t)v9);
      uint64_t v54 = v63;
      uint64_t v53 = v64;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v9, 1, v64) == 1)
      {
        sub_1DF1905C8((uint64_t)v9);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v15, v9, v53);
        uint64_t v55 = v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable;
        uint64_t v56 = MEMORY[0x1E01EFB70](v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable);
        if (v56)
        {
          sub_1DF18EBD8((uint64_t)v15, v56, *(void *)(v55 + 8));
          swift_unknownObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v53);
      }
      (*(void (**)(char *, uint64_t))(v62 + 8))(v5, v3);
      goto LABEL_17;
    default:
      sub_1DEC2A0B8();
      uint64_t v25 = v24;
      double v26 = (uint64_t *)swift_projectBox();
      uint64_t v27 = *v26;
      uint64_t v28 = (uint64_t)v26 + v25[12];
      LODWORD(v62) = *((unsigned __int8 *)v26 + v25[20]);
      LODWORD(v60) = *((unsigned __int8 *)v26 + v25[24]);
      sub_1DEA68AB4(v28, (uint64_t)v21);
      uint64_t v29 = swift_allocBox();
      unint64_t v31 = v30;
      uint64_t v32 = (uint64_t)v30 + v25[12];
      uint64_t v33 = (uint64_t)v31 + v25[16];
      uint64_t v58 = v25[20];
      uint64_t v59 = v29;
      long long v57 = (char *)v25[24];
      void *v31 = v27;
      sub_1DEA68AB4((uint64_t)v21, v32);
      uint64_t v34 = v61;
      sub_1DF190654(v61, v33);
      *((unsigned char *)v31 + v58) = v62;
      v57[(void)v31] = v60;
      *(void *)(v1 + v22) = v59;
      swift_retain();
      swift_retain_n();
      sub_1DF1906C8(v34);
      swift_release();
      uint64_t v35 = v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_lastLayoutOptions;
      swift_beginAccess();
      sub_1DEAE6B84(v35, (uint64_t)v11);
      uint64_t v37 = v63;
      uint64_t v36 = v64;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v11, 1, v64) == 1)
      {
        sub_1DF1905C8((uint64_t)v11);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v17, v11, v36);
        uint64_t v47 = v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable;
        uint64_t v48 = MEMORY[0x1E01EFB70](v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable);
        if (v48)
        {
          sub_1DF18EBD8((uint64_t)v17, v48, *(void *)(v47 + 8));
          swift_unknownObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v36);
      }
      swift_release();
      sub_1DEE5C0A4((uint64_t)v21);
LABEL_17:
      uint64_t result = swift_release();
      break;
  }
  return result;
}

void sub_1DF18FAEC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MastheadModelContext();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_engagementBanner;
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_engagementBanner);
  if (a1)
  {
    if (v8)
    {
      sub_1DEC0A134();
      id v9 = v8;
      id v10 = a1;
      char v11 = sub_1DFDFF550();

      if (v11) {
        return;
      }
      uint64_t v12 = *(void **)(v2 + v7);
    }
    else
    {
      uint64_t v12 = 0;
      id v10 = a1;
    }
    *(void *)(v2 + v7) = a1;
    id v13 = v10;

    objc_msgSend(*(id *)(*(void *)(v2 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadView) + qword_1EBAC1FD8), sel_addSubview_, v13);
  }
  else
  {
    if (!v8) {
      return;
    }
    *(void *)(v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_engagementBanner) = 0;

    sub_1DEF9D7F4();
  }
  uint64_t v14 = OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model;
  if (!(*(void *)(v2 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model) >> 61))
  {
    sub_1DEC2A0B8();
    uint64_t v16 = v15;
    uint64_t v17 = (uint64_t *)swift_projectBox();
    uint64_t v18 = *v17;
    uint64_t v19 = (uint64_t)v17 + v16[12];
    uint64_t v20 = (uint64_t *)((char *)v17 + v16[16]);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)v20[3];
    uint64_t v42 = (void *)v20[2];
    uint64_t v43 = v21;
    uint64_t v45 = v20[4];
    uint64_t v46 = v7;
    uint64_t v25 = v20[5];
    CGFloat v24 = (void *)v20[6];
    uint64_t v39 = v25;
    uint64_t v40 = v23;
    unint64_t v44 = v24;
    int v47 = *((unsigned __int8 *)v17 + v16[24]);
    sub_1DEA68AB4(v19, (uint64_t)v6);
    uint64_t v41 = swift_allocBox();
    uint64_t v27 = v26;
    uint64_t v28 = (uint64_t)v26 + v16[12];
    uint64_t v29 = (void *)((char *)v27 + v16[16]);
    uint64_t v30 = v16[20];
    uint64_t v37 = v16[24];
    uint64_t v38 = v30;
    *uint64_t v27 = v18;
    sub_1DEA69CCC((uint64_t)v6, v28);
    uint64_t v32 = v42;
    uint64_t v31 = v43;
    *uint64_t v29 = v43;
    v29[1] = v22;
    void v29[2] = (uint64_t)v32;
    v29[3] = (uint64_t)v23;
    uint64_t v34 = v45;
    uint64_t v33 = v46;
    v29[4] = v45;
    v29[5] = v25;
    uint64_t v35 = v44;
    v29[6] = (uint64_t)v44;
    *((unsigned char *)v27 + v38) = *(void *)(v2 + v33) == 0;
    *((unsigned char *)v27 + v37) = v47;
    *(void *)(v2 + v14) = v41;
    swift_retain();
    sub_1DEC2A404(v31, v22, v32, v40, v34, v39, v35);
    swift_release();
  }
}

uint64_t sub_1DF18FD58(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model;
  if (*(void *)(v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model) >> 61 == 5)
  {
    uint64_t v3 = result;
    sub_1DEC2A1E8();
    uint64_t v5 = v4;
    uint64_t v6 = swift_projectBox();
    uint64_t v7 = (uint64_t *)(v6 + *(int *)(v5 + 48));
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    char v10 = *(unsigned char *)(v6 + *(int *)(v5 + 64));
    uint64_t v11 = swift_allocBox();
    uint64_t v13 = v12;
    uint64_t v14 = (void *)(v12 + *(int *)(v5 + 48));
    uint64_t v15 = *(int *)(v5 + 64);
    sub_1DEA69244();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v3, v16);
    void *v14 = v9;
    v14[1] = v8;
    *(unsigned char *)(v13 + v15) = v10;
    *(void *)(v1 + v2) = v11 | 0xA000000000000000;
    swift_bridgeObjectRetain();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF18FE88(uint64_t a1)
{
  uint64_t v89 = a1;
  sub_1DEA69244();
  uint64_t v90 = *(void *)(v2 - 8);
  uint64_t v91 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6355C(0, &qword_1EBAD3208, MEMORY[0x1E4FACD38], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v75 - v9;
  uint64_t v11 = (void *)sub_1DFDF3770();
  uint64_t v12 = *(v11 - 1);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v75 - v17;
  uint64_t v19 = OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model;
  uint64_t v92 = v1;
  unint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_model);
  switch(v20 >> 61)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 6uLL:
      return result;
    case 5uLL:
      uint64_t v87 = v20 & 0x1FFFFFFFFFFFFFFFLL;
      sub_1DEC2A1E8();
      uint64_t v54 = v53;
      uint64_t v55 = swift_projectBox();
      uint64_t v56 = v55 + *(int *)(v54 + 48);
      long long v57 = *(void **)v56;
      long long v84 = *(void **)(v56 + 8);
      char v85 = v57;
      uint64_t v58 = v91;
      uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
      v59(v4, v55, v91);
      uint64_t v83 = swift_allocBox();
      uint64_t v88 = v12;
      uint64_t v61 = v60;
      uint64_t v62 = *(int *)(v54 + 48);
      id v86 = v11;
      uint64_t v63 = &v60[v62];
      uint64_t v64 = *(int *)(v54 + 64);
      v59(v60, (uint64_t)v4, v58);
      uint64_t v65 = v84;
      *(void *)uint64_t v63 = v85;
      *((void *)v63 + 1) = v65;
      id v66 = v86;
      uint64_t v67 = v92;
      v61[v64] = *(unsigned char *)(v89 + 2);
      *(void *)(v67 + v19) = v83 | 0xA000000000000000;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v68 = v67 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_lastLayoutOptions;
      swift_beginAccess();
      uint64_t v69 = v88;
      sub_1DEAE6B84(v68, (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, id))(v69 + 48))(v8, 1, v66) == 1)
      {
        sub_1DF1905C8((uint64_t)v8);
      }
      else
      {
        (*(void (**)(char *, char *, id))(v69 + 32))(v15, v8, v66);
        uint64_t v70 = v67 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable;
        uint64_t v71 = MEMORY[0x1E01EFB70](v67 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable);
        if (v71)
        {
          sub_1DF18EBD8((uint64_t)v15, v71, *(void *)(v70 + 8));
          swift_unknownObjectRelease();
        }
        (*(void (**)(char *, id))(v69 + 8))(v15, v66);
      }
      (*(void (**)(char *, uint64_t))(v90 + 8))(v4, v91);
      goto LABEL_9;
    default:
      uint64_t v88 = v12;
      sub_1DEC2A0B8();
      uint64_t v22 = v21;
      unint64_t v23 = (uint64_t *)swift_projectBox();
      uint64_t v24 = *v23;
      uint64_t v25 = (uint64_t *)((char *)v23 + v22[16]);
      uint64_t v26 = *v25;
      uint64_t v27 = (void *)v25[2];
      uint64_t v90 = v25[1];
      uint64_t v91 = v24;
      uint64_t v28 = (void *)v25[3];
      uint64_t v29 = v25[4];
      uint64_t v30 = (void *)v25[6];
      uint64_t v83 = v25[5];
      int v80 = *((unsigned __int8 *)v23 + v22[20]);
      uint64_t v31 = v20 & 0x1FFFFFFFFFFFFFFFLL;
      id v86 = *(id *)(v92 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_featureAvailability);
      uint64_t v87 = v26;
      swift_retain();
      swift_retain();
      long long v84 = v27;
      char v85 = v28;
      uint64_t v32 = v27;
      uint64_t v33 = v83;
      uint64_t v81 = v30;
      uint64_t v82 = v29;
      sub_1DEC2A404(v87, v90, v32, v28, v29, v83, v30);
      if (objc_msgSend(v86, sel_useOfflineMode))
      {
        uint64_t v79 = v31;
        uint64_t v34 = swift_allocBox();
        uint64_t v36 = v35;
        uint64_t v37 = (uint64_t)v35 + v22[12];
        uint64_t v38 = (void *)((char *)v36 + v22[16]);
        id v86 = v11;
        uint64_t v76 = v22[20];
        uint64_t v77 = v22[24];
        uint64_t v78 = v34;
        *uint64_t v36 = v91;
        uint64_t v39 = v89;
        sub_1DEA68AB4(v89, v37);
        uint64_t v40 = v87;
        uint64_t v41 = v90;
        void *v38 = v87;
        v38[1] = v41;
        uint64_t v42 = v85;
        void v38[2] = v84;
        v38[3] = v42;
        uint64_t v43 = v81;
        uint64_t v44 = v82;
        void v38[4] = v82;
        void v38[5] = v33;
        v38[6] = v43;
        uint64_t v45 = v43;
        *((unsigned char *)v36 + v76) = v80;
        *((unsigned char *)v36 + v77) = *(unsigned char *)(v39 + 2);
        uint64_t v46 = v92;
        *(void *)(v92 + v19) = v78;
        swift_retain();
        uint64_t v47 = v41;
        char v49 = v84;
        uint64_t v48 = v85;
        sub_1DEC2A404(v40, v47, v84, v85, v44, v33, v45);
        id v50 = v86;
        swift_release();
        uint64_t v51 = v46 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_lastLayoutOptions;
        swift_beginAccess();
        uint64_t v52 = v88;
        sub_1DEAE6B84(v51, (uint64_t)v10);
        if ((*(unsigned int (**)(char *, uint64_t, id))(v52 + 48))(v10, 1, v50) == 1)
        {
          sub_1DF1905C8((uint64_t)v10);
          swift_release();
          sub_1DEC2A468(v87, v90, v49, v48, v44, v83, v45);
        }
        else
        {
          uint64_t v72 = v83;
          (*(void (**)(char *, char *, id))(v52 + 32))(v18, v10, v50);
          uint64_t v73 = v92 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable;
          uint64_t v74 = MEMORY[0x1E01EFB70](v92 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable);
          if (v74)
          {
            sub_1DF18EBD8((uint64_t)v18, v74, *(void *)(v73 + 8));
            swift_unknownObjectRelease();
          }
          (*(void (**)(char *, id))(v52 + 8))(v18, v50);
          swift_release();
          sub_1DEC2A468(v87, v90, v84, v85, v44, v72, v45);
        }
      }
      else
      {
        swift_release();
        sub_1DEC2A468(v87, v90, v84, v85, v82, v33, v81);
      }
LABEL_9:
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_1DF1905C8(uint64_t a1)
{
  sub_1DEA6355C(0, &qword_1EBAD3208, MEMORY[0x1E4FACD38], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF190654(uint64_t a1, uint64_t a2)
{
  sub_1DE9DB774(0, (unint64_t *)&unk_1EBAD0B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF1906C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF190700()
{
  sub_1DEA6355C(0, &qword_1EBAD3208, MEMORY[0x1E4FACD38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v12 - v2;
  uint64_t v4 = sub_1DFDF3770();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_lastLayoutOptions;
  swift_beginAccess();
  sub_1DEAE6B84(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_1DF1905C8((uint64_t)v3);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v10 = v0 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable;
  uint64_t v11 = MEMORY[0x1E01EFB70](v0 + OBJC_IVAR____TtC7NewsUI220MastheadViewProvider_mastheadable);
  if (v11)
  {
    sub_1DF18EBD8((uint64_t)v7, v11, *(void *)(v10 + 8));
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unsigned char *storeEnumTagSinglePayload for MagazineGridModelSort(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF1909B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MagazineGridModelSort()
{
  return &type metadata for MagazineGridModelSort;
}

uint64_t sub_1DF1909F0()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t sub_1DF190C54()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF190D30()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF190DF4()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF190ECC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF191100();
  *a1 = result;
  return result;
}

void sub_1DF190EFC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701667182;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6465727574616566;
      goto LABEL_3;
    case 2:
      *a1 = 0x7974697669746361;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x446873696C627570;
      a1[1] = 0xEB00000000657461;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DF190F98(uint64_t a1)
{
  unint64_t v2 = sub_1DF19114C();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1DF190FEC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DF19114C();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1DF191048(uint64_t a1)
{
  unint64_t v2 = sub_1DF19114C();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1DF19109C(unsigned __int8 *a1, char *a2)
{
  return sub_1DF2A0610(*a1, *a2);
}

unint64_t sub_1DF1910AC()
{
  unint64_t result = qword_1EAC291C0;
  if (!qword_1EAC291C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC291C0);
  }
  return result;
}

uint64_t sub_1DF191100()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1DF19114C()
{
  unint64_t result = qword_1EAC291C8;
  if (!qword_1EAC291C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC291C8);
  }
  return result;
}

void sub_1DF1911A0(void *a1, void *a2, void (*a3)(uint64_t))
{
  uint64_t v4 = v3;
  uint64_t v8 = (void *)sub_1DF191A34();
  uint64_t v9 = *(void **)(v3 + 24);
  type metadata accessor for SearchHomeCoordinatingController();
  uint64_t v10 = sub_1DFDFED50();
  uint64_t v11 = (void *)v26[0];
  uint64_t v12 = *(void *)(v3 + 32);
  if (v12 && (*(unsigned char *)(v12 + 16) & 1) != 0
    || a2
    && (type metadata accessor for FloatingTabBarNavigationController(),
        id v13 = v9,
        id v14 = a2,
        char v15 = sub_1DFDFF550(),
        v14,
        v13,
        (v15 & 1) != 0))
  {
    BOOL v16 = 1;
    int v17 = 1;
    if (!v8) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  id v20 = objc_msgSend(*(id *)(v4 + 16), sel_viewControllers);
  sub_1DEB51528();
  unint64_t v21 = sub_1DFDFE220();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = swift_bridgeObjectRelease();
  int v17 = 0;
  BOOL v16 = v22 == 1;
  if (v8)
  {
LABEL_6:
    id v18 = v8;
    sub_1DF24D2A4(v26[0]);
  }
LABEL_7:
  if (v16) {
    sub_1DF192290(v9, *(char **)(v4 + 16));
  }
  a3(v10);
  if (v17 && (objc_msgSend(a1, sel_setSelectedViewController_, *(void *)(v4 + 16)), !*(void *)(v4 + 32)))
  {
    id v19 = objc_msgSend(self, sel_sharedApplication);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v8;
    v26[4] = (uint64_t)sub_1DF1929E4;
    v26[5] = v23;
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 1107296256;
    _OWORD v26[2] = (uint64_t)sub_1DE9744A8;
    v26[3] = (uint64_t)&block_descriptor_51_1;
    uint64_t v24 = _Block_copy(v26);
    id v25 = v8;
    swift_release();
    objc_msgSend(v19, sel_ts_installCACommitCompletionBlock_, v24);

    _Block_release(v24);
  }
  else
  {

    id v19 = (id)v26[0];
  }
}

void sub_1DF19143C(void *a1, id a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v8 = (char *)sub_1DF191A34();
  uint64_t v9 = (char *)v3[3];
  type metadata accessor for SearchHomeCoordinatingController();
  uint64_t v10 = (void *)sub_1DFDFED50();
  id v11 = v22[0];
  uint64_t v12 = v3[4];
  if (v12 && (*(unsigned char *)(v12 + 16) & 1) != 0)
  {
    LODWORD(a2) = 1;
    if (!v22[0]) {
      goto LABEL_12;
    }
LABEL_11:
    id v17 = v22[0];
    sub_1DF24D2A4((uint64_t)v8);

    goto LABEL_12;
  }
  if (!a2) {
    goto LABEL_10;
  }
  id v13 = (void *)v3[2];
  type metadata accessor for FloatingTabBarNavigationController();
  id v14 = v13;
  a2 = a2;
  char v15 = sub_1DFDFF550();

  LODWORD(a2) = 0;
  if ((v15 & 1) == 0 || !v8)
  {
LABEL_10:
    if (!v22[0]) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v10 = (void *)MEMORY[0x1E01EFB70](&v8[OBJC_IVAR____TtC7NewsUI232SearchHomeCoordinatingController_searchController]);
  if (v10)
  {
    BOOL v16 = v10;
    LODWORD(a2) = objc_msgSend(v10, sel_isActive);

    goto LABEL_10;
  }
  LODWORD(a2) = 0;
  if (v22[0]) {
    goto LABEL_11;
  }
LABEL_12:
  if (!a2)
  {
    ((void (*)(void *))a3)(v10);
    goto LABEL_16;
  }
  sub_1DF192290((void *)v4[2], v9);
  a3();
  objc_msgSend(a1, sel_setSelectedViewController_, v9);
  if (v4[4])
  {
LABEL_16:

    id v18 = v22[0];
    goto LABEL_17;
  }
  id v18 = objc_msgSend(self, sel_sharedApplication);
  id v19 = (id *)swift_allocObject();
  _OWORD v19[2] = v22[0];
  v22[4] = sub_1DF192A18;
  v22[5] = v19;
  v22[0] = (id)MEMORY[0x1E4F143A8];
  v22[1] = (id)1107296256;
  v22[2] = sub_1DE9744A8;
  v22[3] = &block_descriptor_67;
  id v20 = _Block_copy(v22);
  id v21 = v11;
  swift_release();
  objc_msgSend(v18, sel_ts_installCACommitCompletionBlock_, v20);

  _Block_release(v20);
LABEL_17:
}

uint64_t sub_1DF19169C(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (a1) {
    return a2();
  }
  unsigned int v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  v9[4] = sub_1DEABEEC4;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1DE98142C;
  v9[3] = &block_descriptor_84;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performWithoutAnimation_, v8);
  _Block_release(v8);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

void sub_1DF1917D4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  id v5 = objc_msgSend(a1, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_horizontalSizeClass);

  if (v6 == (id)2)
  {
    char v15 = (void *)v3[3];
    type metadata accessor for SearchHomeCoordinatingController();
    sub_1DFDFED50();
    if (a2)
    {
      type metadata accessor for FloatingTabBarNavigationController();
      id v16 = a2;
      id v17 = v15;
      char v18 = sub_1DFDFF550();

      if (!v28) {
        goto LABEL_15;
      }
    }
    else
    {
      char v18 = 0;
      if (!v28) {
        goto LABEL_15;
      }
    }
    id v19 = (void *)MEMORY[0x1E01EFB70](&v28[OBJC_IVAR____TtC7NewsUI232SearchHomeCoordinatingController_searchController]);
    if (v19)
    {
      id v20 = v19;
      unsigned __int8 v21 = objc_msgSend(v19, sel_isActive);

LABEL_16:
      type metadata accessor for MainTabBarLayoutCoordinator.BackgroundState();
      uint64_t v22 = swift_allocObject();
      uint64_t v23 = MEMORY[0x1E4FBC860];
      *(unsigned char *)(v22 + 16) = v18 & 1;
      *(unsigned char *)(v22 + 17) = v21;
      *(void *)(v22 + 24) = a2;
      *(void *)(v22 + 32) = v23;
      id v24 = a2;

      v3[4] = v22;
      swift_release();
      return;
    }
LABEL_15:
    unsigned __int8 v21 = 0;
    goto LABEL_16;
  }
  if (v6 == (id)1)
  {
    uint64_t v7 = (char *)sub_1DF191A34();
    if (a2)
    {
      uint64_t v8 = (void *)v3[2];
      type metadata accessor for FloatingTabBarNavigationController();
      id v9 = v8;
      id v10 = a2;
      char v11 = sub_1DFDFF550();

      unsigned __int8 v12 = 0;
      if ((v11 & 1) != 0 && v7)
      {
        id v13 = (void *)MEMORY[0x1E01EFB70](&v7[OBJC_IVAR____TtC7NewsUI232SearchHomeCoordinatingController_searchController]);
        if (v13)
        {
          id v14 = v13;
          unsigned __int8 v12 = objc_msgSend(v13, sel_isActive);
        }
        else
        {
          unsigned __int8 v12 = 0;
        }
      }
    }
    else
    {
      unsigned __int8 v12 = 0;
      id v10 = 0;
    }
    type metadata accessor for MainTabBarLayoutCoordinator.BackgroundState();
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    *(unsigned char *)(v25 + 16) = v12;
    *(unsigned char *)(v25 + 17) = v12;
    *(void *)(v25 + 24) = a2;
    *(void *)(v25 + 32) = v26;
    id v27 = v10;

    v3[4] = v25;
    swift_release();
  }
}

uint64_t sub_1DF191A34()
{
  type metadata accessor for FollowingViewController();
  sub_1DFDFED50();
  if (v4)
  {
    id v0 = objc_msgSend(v4, sel_navigationItem);
    id v1 = objc_msgSend(v0, sel_searchController);

    if (v1)
    {
      id v2 = objc_msgSend(v1, sel_searchResultsController);

      if (v2)
      {
        type metadata accessor for SearchHomeCoordinatingController();
        uint64_t result = swift_dynamicCastClass();
        if (result) {
          return result;
        }
      }
    }
    else
    {
    }
  }
  return 0;
}

uint64_t sub_1DF191B0C(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1DF1929A8;
  *(void *)(v4 + 24) = v3;
  void v8[4] = sub_1DEABEEC4;
  v8[5] = v4;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  void v8[2] = sub_1DE98142C;
  v8[3] = &block_descriptor_35_0;
  id v5 = _Block_copy(v8);
  id v6 = a1;
  swift_retain();
  swift_release();
  objc_msgSend((id)v2, sel_performWithoutAnimation_, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF191C70(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1DF192A88;
  *(void *)(v4 + 24) = v3;
  void v8[4] = sub_1DEABEEC4;
  v8[5] = v4;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  void v8[2] = sub_1DE98142C;
  v8[3] = &block_descriptor_45_0;
  id v5 = _Block_copy(v8);
  id v6 = a1;
  swift_retain();
  swift_release();
  objc_msgSend((id)v2, sel_performWithoutAnimation_, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

void sub_1DF191DD4(uint64_t a1)
{
  id v1 = (void *)MEMORY[0x1E01EFB70](a1 + OBJC_IVAR____TtC7NewsUI232SearchHomeCoordinatingController_searchController);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_searchBar);

    objc_msgSend(v3, sel_becomeFirstResponder);
  }
}

uint64_t sub_1DF191E64(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1DF192A98;
  *(void *)(v4 + 24) = v3;
  void v8[4] = sub_1DEABEEC4;
  v8[5] = v4;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  void v8[2] = sub_1DE98142C;
  v8[3] = &block_descriptor_77;
  id v5 = _Block_copy(v8);
  id v6 = a1;
  swift_retain();
  swift_release();
  objc_msgSend((id)v2, sel_performWithoutAnimation_, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF191FC8(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1DF1929EC;
  *(void *)(v4 + 24) = v3;
  void v8[4] = sub_1DEABEEC4;
  v8[5] = v4;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  void v8[2] = sub_1DE98142C;
  v8[3] = &block_descriptor_61_0;
  id v5 = _Block_copy(v8);
  id v6 = a1;
  swift_retain();
  swift_release();
  objc_msgSend((id)v2, sel_performWithoutAnimation_, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

void sub_1DF19212C(uint64_t a1)
{
  if (a1)
  {
    id v1 = (void *)MEMORY[0x1E01EFB70](a1 + OBJC_IVAR____TtC7NewsUI232SearchHomeCoordinatingController_searchController);
    if (v1)
    {
      uint64_t v2 = v1;
      id v3 = objc_msgSend(v1, sel_searchBar);

      objc_msgSend(v3, sel_becomeFirstResponder);
    }
  }
}

uint64_t sub_1DF1921C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF192200()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MainTabBarLayoutCoordinator()
{
  return self;
}

uint64_t type metadata accessor for MainTabBarLayoutCoordinator.BackgroundState()
{
  return self;
}

void sub_1DF192290(void *a1, char *a2)
{
  id v3 = objc_msgSend(a1, sel_viewControllers);
  sub_1DEB51528();
  unint64_t v4 = sub_1DFDFE220();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5 >= 1) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v5 >= (unint64_t)v6) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v5 < 0)
  {
LABEL_29:
    __break(1u);
    return;
  }
  if (v5 >= 1) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v20 < v6)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v21 < v5)
  {
    __break(1u);
    goto LABEL_28;
  }
LABEL_6:
  if ((v4 & 0xC000000000000001) != 0 && (unint64_t)v5 >= 2)
  {
    uint64_t v8 = v6;
    do
    {
      uint64_t v9 = v8 + 1;
      sub_1DFDFF9F0();
      uint64_t v8 = v9;
    }
    while (v5 != v9);
  }
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DFDFFBF0();
    uint64_t v10 = v12;
    uint64_t v6 = v13;
    unint64_t v11 = v14;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v10 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v11 = (2 * v5) | 1;
  }
  sub_1DF9625C8(0);
  swift_bridgeObjectRelease();
  sub_1DF9625C8(0);
  swift_bridgeObjectRelease();
  if (v6 != v11 >> 1)
  {
    sub_1DEA74FD4();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DFE13CF0;
    id v16 = *(void **)&a2[qword_1EBAF4E50];
    *(void *)(v15 + 32) = v16;
    sub_1DFDFE250();
    id v17 = v16;
    uint64_t v18 = swift_unknownObjectRetain();
    sub_1DF3DF09C(v18, v10, v6, v11);
    id v19 = (void *)sub_1DFDFE200();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setViewControllers_, v19);
  }
  swift_unknownObjectRelease();
}

uint64_t sub_1DF192514(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 32);
  if (!v2) {
    return result;
  }
  uint64_t v3 = v1;
  unint64_t v4 = (void *)result;
  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1DF19293C;
  *(void *)(v7 + 24) = v6;
  uint64_t v29 = sub_1DE98147C;
  uint64_t v30 = v7;
  uint64_t v25 = (void *)MEMORY[0x1E4F143A8];
  uint64_t v26 = 1107296256;
  id v27 = sub_1DE98142C;
  uint64_t v28 = &block_descriptor_79;
  uint64_t v8 = _Block_copy(&v25);
  swift_retain_n();
  id v9 = v4;
  swift_retain();
  swift_release();
  objc_msgSend((id)v5, sel_performWithoutAnimation_, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
    return result;
  }
  id v10 = objc_msgSend(v9, sel_traitCollection);
  id v11 = objc_msgSend(v10, sel_horizontalSizeClass);

  if (v11 == (id)2)
  {
    if (*(unsigned char *)(v2 + 17) != 1) {
      goto LABEL_12;
    }
    type metadata accessor for SearchHomeCoordinatingController();
    sub_1DFDFED50();
    uint64_t v13 = v25;
    if (!v25) {
      goto LABEL_12;
    }
    id v14 = objc_msgSend(self, sel_sharedApplication);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v13;
    uint64_t v29 = sub_1DF192998;
    uint64_t v30 = v17;
    uint64_t v25 = (void *)MEMORY[0x1E4F143A8];
    uint64_t v26 = 1107296256;
    id v16 = &block_descriptor_19_0;
  }
  else
  {
    if (v11 != (id)1) {
      goto LABEL_12;
    }
    if (*(unsigned char *)(v2 + 17) != 1) {
      goto LABEL_12;
    }
    uint64_t v12 = sub_1DF191A34();
    if (!v12) {
      goto LABEL_12;
    }
    uint64_t v13 = (void *)v12;
    id v14 = objc_msgSend(self, sel_sharedApplication);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v13;
    uint64_t v29 = sub_1DF1929A0;
    uint64_t v30 = v15;
    uint64_t v25 = (void *)MEMORY[0x1E4F143A8];
    uint64_t v26 = 1107296256;
    id v16 = &block_descriptor_25_0;
  }
  id v27 = sub_1DE9744A8;
  uint64_t v28 = v16;
  uint64_t v18 = _Block_copy(&v25);
  id v19 = v13;
  swift_release();
  objc_msgSend(v14, sel_ts_installCACommitCompletionBlock_, v18, v25, v26);
  _Block_release(v18);

LABEL_12:
  swift_beginAccess();
  uint64_t v20 = *(void *)(v2 + 32);
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = v20 + 40;
    do
    {
      uint64_t v23 = *(void (**)(uint64_t))(v22 - 8);
      uint64_t v24 = swift_retain();
      v23(v24);
      swift_release();
      v22 += 16;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
  }
  swift_release();
  *(void *)(v3 + 32) = 0;
  swift_release();
  return swift_release();
}

uint64_t sub_1DF1928FC()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1DF19293C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setSelectedViewController_, *(void *)(*(void *)(v0 + 24) + 24));
}

uint64_t sub_1DF192950()
{
  return swift_deallocObject();
}

uint64_t sub_1DF192960()
{
  return swift_deallocObject();
}

uint64_t sub_1DF192998()
{
  return sub_1DF191C70(*(void **)(v0 + 16));
}

uint64_t sub_1DF1929A0()
{
  return sub_1DF191B0C(*(void **)(v0 + 16));
}

void sub_1DF1929A8()
{
  sub_1DF191DD4(*(void *)(v0 + 16));
}

uint64_t sub_1DF1929C4()
{
  return swift_deallocObject();
}

uint64_t sub_1DF1929D4()
{
  return swift_deallocObject();
}

uint64_t sub_1DF1929E4()
{
  return sub_1DF191FC8(*(void **)(v0 + 16));
}

void sub_1DF1929EC()
{
  sub_1DF19212C(*(void *)(v0 + 16));
}

uint64_t sub_1DF192A08()
{
  return swift_deallocObject();
}

uint64_t sub_1DF192A18()
{
  return sub_1DF191E64(*(void **)(v0 + 16));
}

uint64_t sub_1DF192A20()
{
  return swift_deallocObject();
}

uint64_t sub_1DF192A30()
{
  return swift_deallocObject();
}

void *sub_1DF192AA4(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  void (*v19)(uint64_t *__return_ptr, void *);

  id v19 = a1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = (uint64_t *)(a3 + 40);
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v10 = *v7;
    v18[0] = *(v7 - 1);
    v18[1] = v10;
    swift_bridgeObjectRetain();
    v19(&v16, v18);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
    if (v17)
    {
      uint64_t v12 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1DEA8C6EC(0, v8[2] + 1, 1, v8);
      }
      unint64_t v14 = v8[2];
      unint64_t v13 = v8[3];
      if (v14 >= v13 >> 1) {
        uint64_t v8 = sub_1DEA8C6EC((void *)(v13 > 1), v14 + 1, 1, v8);
      }
      void v8[2] = v14 + 1;
      id v9 = &v8[2 * v14];
      v9[4] = v12;
      v9[5] = v11;
    }
    v7 += 2;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1DF192C08(void (*a1)(char *), uint64_t a2)
{
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  sub_1DEBCABEC(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v54 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA7F52C(0, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
  uint64_t v44 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  char v49 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v43 = (char *)&v42 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v42 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v42 - v14;
  sub_1DEB0DFE4();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB4FAF4();
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v50 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v51 = v17 + 16;
  v50(v19, v2, v16);
  sub_1DF19ABA4((unint64_t *)&unk_1EBAD2F40, (void (*)(uint64_t))sub_1DEB0DFE4);
  uint64_t v52 = v19;
  sub_1DFDFDFB0();
  uint64_t v24 = &v23[*(int *)(v21 + 44)];
  uint64_t v57 = sub_1DEBCAD30();
  uint64_t v58 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v61[0])
  {
    unint64_t v59 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DEB4FAF4);
  }
  else
  {
    uint64_t v47 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v48 = (void (**)(char *))(v6 + 16);
    uint64_t v60 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v46 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v42 = v6;
    uint64_t v45 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    unint64_t v59 = MEMORY[0x1E4FBC860];
    uint64_t v26 = v44;
    while (1)
    {
      uint64_t v29 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v30 = v53;
      (*v48)(v53);
      v29(v61, 0);
      uint64_t v31 = v52;
      uint64_t v32 = (uint64_t)v23;
      v50(v52, (uint64_t)v23, v16);
      sub_1DFDFE730();
      (*v47)(v31, v16);
      uint64_t v33 = *v60;
      (*v60)(v13, v30, v26);
      uint64_t v34 = (uint64_t)v54;
      uint64_t v35 = v62;
      v55(v13);
      if (v35) {
        break;
      }
      (*v46)(v13, v26);
      int v36 = (*v45)(v34, 1, v26);
      uint64_t v62 = 0;
      if (v36 == 1)
      {
        sub_1DF19ABEC(v34, (uint64_t (*)(void))sub_1DEBCABEC);
        uint64_t v23 = (char *)v32;
        id v27 = v58;
      }
      else
      {
        uint64_t v37 = v43;
        v33(v43, (char *)v34, v26);
        v33(v49, v37, v26);
        uint64_t v23 = (char *)v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v59 = sub_1DEE17C94(0, *(void *)(v59 + 16) + 1, 1, v59);
        }
        id v27 = v58;
        unint64_t v39 = *(void *)(v59 + 16);
        unint64_t v38 = *(void *)(v59 + 24);
        uint64_t v26 = v44;
        if (v39 >= v38 >> 1) {
          unint64_t v59 = sub_1DEE17C94(v38 > 1, v39 + 1, 1, v59);
        }
        unint64_t v40 = v59;
        *(void *)(v59 + 16) = v39 + 1;
        v33((char *)(v40+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v39), v49, v26);
      }
      uint64_t v28 = *(void *)v27;
      sub_1DFDFE720();
      if (v28 == v61[0]) {
        goto LABEL_3;
      }
    }
    (*v46)(v13, v26);
    sub_1DF19ABEC(v32, (uint64_t (*)(void))sub_1DEB4FAF4);
    swift_bridgeObjectRelease();
  }
  return v59;
}

void sub_1DF193258(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  sub_1DEC38E88();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA7F52C(0, (unint64_t *)&unk_1EBAF2F50, (uint64_t (*)(uint64_t))type metadata accessor for FollowingModel, sub_1DEAE2210, MEMORY[0x1E4FABD50]);
  uint64_t v10 = v9;
  uint64_t v28 = *((void *)v9 - 1);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v33 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v27 = (char *)&v25 - v13;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v14 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v14; uint64_t v14 = sub_1DFDFFBE0())
  {
    uint64_t v31 = (unsigned int (**)(char *, uint64_t, void *))(v28 + 48);
    unint64_t v32 = a3 & 0xC000000000000001;
    uint64_t v30 = (void (**)(char *, char *, void *))(v28 + 32);
    unint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v15 = 4;
    unint64_t v26 = a3;
    while (1)
    {
      uint64_t v16 = v10;
      id v17 = v32 ? (id)MEMORY[0x1E01EE240](v15 - 4, a3) : *(id *)(a3 + 8 * v15);
      uint64_t v10 = v17;
      uint64_t v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1)) {
        break;
      }
      id v37 = v17;
      v34(&v37);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }

      uint64_t v10 = v16;
      if ((*v31)(v8, 1, v16) == 1)
      {
        sub_1DF19ABEC((uint64_t)v8, (uint64_t (*)(void))sub_1DEC38E88);
      }
      else
      {
        uint64_t v29 = 0;
        id v19 = *v30;
        uint64_t v20 = v27;
        (*v30)(v27, v8, v16);
        v19(v33, v20, v16);
        unint64_t v21 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v21 = sub_1DEE17FD8(0, *(void *)(v21 + 16) + 1, 1, v21);
        }
        unint64_t v23 = *(void *)(v21 + 16);
        unint64_t v22 = *(void *)(v21 + 24);
        unint64_t v36 = v21;
        uint64_t v4 = v29;
        if (v23 >= v22 >> 1) {
          unint64_t v36 = sub_1DEE17FD8(v22 > 1, v23 + 1, 1, v36);
        }
        unint64_t v24 = v36;
        *(void *)(v36 + 16) = v23 + 1;
        uint64_t v10 = v16;
        v19((char *)(v24+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23), v33, v16);
        a3 = v26;
      }
      ++v15;
      if (v18 == v14) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
}

unint64_t sub_1DF193630(void (*a1)(char *), uint64_t a2)
{
  unint64_t v59 = a1;
  sub_1DEC273BC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB49A28();
  uint64_t v62 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v61 = (char *)&v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v44 - v14;
  sub_1DEE569AC();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DED4BA00();
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v55 = v17 + 16;
  v54(v19, v2, v16);
  sub_1DF19ABA4(&qword_1EAC29210, (void (*)(uint64_t))sub_1DEE569AC);
  uint64_t v56 = v19;
  sub_1DFDFDFB0();
  unint64_t v24 = &v23[*(int *)(v21 + 44)];
  sub_1DF19B1E8();
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v65[0])
  {
    unint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DED4BA00);
  }
  else
  {
    char v49 = (void (**)(char *, uint64_t))(v17 + 8);
    id v50 = (void (**)(char *))(v7 + 16);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = v7;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v23;
    uint64_t v52 = a2;
    unint64_t v26 = v61;
    uint64_t v27 = v62;
    while (1)
    {
      uint64_t v30 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v31 = v23;
      unint64_t v32 = v57;
      (*v50)(v57);
      v30(v65, 0);
      uint64_t v33 = v56;
      v54(v56, (uint64_t)v31, v16);
      sub_1DFDFE730();
      (*v49)(v33, v16);
      uint64_t v34 = *v64;
      (*v64)(v26, v32, v27);
      uint64_t v35 = (uint64_t)v58;
      uint64_t v36 = v66;
      v59(v26);
      if (v36) {
        break;
      }
      uint64_t v66 = 0;
      (*v48)(v26, v27);
      if ((*v47)(v35, 1, v27) == 1)
      {
        sub_1DF19ABEC(v35, (uint64_t (*)(void))sub_1DEC273BC);
        unint64_t v23 = v51;
        uint64_t v28 = v60;
      }
      else
      {
        id v37 = v46;
        v34(v46, (char *)v35, v27);
        v34(v53, v37, v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v23 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v63 = sub_1DEE180F8(0, *(void *)(v63 + 16) + 1, 1, v63);
        }
        uint64_t v28 = v60;
        unint64_t v40 = *(void *)(v63 + 16);
        unint64_t v39 = *(void *)(v63 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v63 = sub_1DEE180F8(v39 > 1, v40 + 1, 1, v63);
        }
        uint64_t v41 = v62;
        unint64_t v42 = v63;
        *(void *)(v63 + 16) = v40 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40), v53, v41);
      }
      uint64_t v29 = *(void *)v28;
      sub_1DFDFE720();
      unint64_t v26 = v61;
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v48)(v26, v27);
    sub_1DF19ABEC((uint64_t)v51, (uint64_t (*)(void))sub_1DED4BA00);
    swift_bridgeObjectRelease();
  }
  return v63;
}

unint64_t sub_1DF193C50(void (*a1)(char *), uint64_t a2)
{
  unint64_t v59 = a1;
  sub_1DEF88848();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0DA74();
  uint64_t v62 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v61 = (char *)&v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v44 - v14;
  sub_1DECE5588();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF19AF74(0);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v55 = v17 + 16;
  v54(v19, v2, v16);
  sub_1DF19ABA4(&qword_1EBAEC348, (void (*)(uint64_t))sub_1DECE5588);
  uint64_t v56 = v19;
  sub_1DFDFDFB0();
  unint64_t v24 = &v23[*(int *)(v21 + 44)];
  sub_1DF19AFBC();
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v65[0])
  {
    unint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DF19AF74);
  }
  else
  {
    char v49 = (void (**)(char *, uint64_t))(v17 + 8);
    id v50 = (void (**)(char *))(v7 + 16);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = v7;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v23;
    uint64_t v52 = a2;
    unint64_t v26 = v61;
    uint64_t v27 = v62;
    while (1)
    {
      uint64_t v30 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v31 = v23;
      unint64_t v32 = v57;
      (*v50)(v57);
      v30(v65, 0);
      uint64_t v33 = v56;
      v54(v56, (uint64_t)v31, v16);
      sub_1DFDFE730();
      (*v49)(v33, v16);
      uint64_t v34 = *v64;
      (*v64)(v26, v32, v27);
      uint64_t v35 = (uint64_t)v58;
      uint64_t v36 = v66;
      v59(v26);
      if (v36) {
        break;
      }
      uint64_t v66 = 0;
      (*v48)(v26, v27);
      if ((*v47)(v35, 1, v27) == 1)
      {
        sub_1DF19ABEC(v35, (uint64_t (*)(void))sub_1DEF88848);
        unint64_t v23 = v51;
        uint64_t v28 = v60;
      }
      else
      {
        id v37 = v46;
        v34(v46, (char *)v35, v27);
        v34(v53, v37, v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v23 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v63 = sub_1DEE185B8(0, *(void *)(v63 + 16) + 1, 1, v63);
        }
        uint64_t v28 = v60;
        unint64_t v40 = *(void *)(v63 + 16);
        unint64_t v39 = *(void *)(v63 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v63 = sub_1DEE185B8(v39 > 1, v40 + 1, 1, v63);
        }
        uint64_t v41 = v62;
        unint64_t v42 = v63;
        *(void *)(v63 + 16) = v40 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40), v53, v41);
      }
      uint64_t v29 = *(void *)v28;
      sub_1DFDFE720();
      unint64_t v26 = v61;
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v48)(v26, v27);
    sub_1DF19ABEC((uint64_t)v51, (uint64_t (*)(void))sub_1DF19AF74);
    swift_bridgeObjectRelease();
  }
  return v63;
}

void *sub_1DF194270(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  if (a3 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DFDFFBE0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      unint64_t v20 = v4 & 0xC000000000000001;
      uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v7 = 4;
      unint64_t v19 = v4;
      while (1)
      {
        uint64_t v9 = v7 - 4;
        if (v20)
        {
          uint64_t v10 = MEMORY[0x1E01EE240](v7 - 4, v4);
          BOOL v11 = __OFADD__(v9, 1);
          uint64_t v12 = v7 - 3;
          if (v11) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(v4 + 8 * v7);
          swift_unknownObjectRetain();
          BOOL v11 = __OFADD__(v9, 1);
          uint64_t v12 = v7 - 3;
          if (v11)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v24 = v10;
        a1(&v22, &v24);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v6;
        }
        swift_unknownObjectRelease();
        uint64_t v13 = v23;
        if (v23)
        {
          uint64_t v14 = v5;
          uint64_t v15 = v22;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1DEA8C6EC(0, v6[2] + 1, 1, v6);
          }
          unint64_t v17 = v6[2];
          unint64_t v16 = v6[3];
          if (v17 >= v16 >> 1) {
            uint64_t v6 = sub_1DEA8C6EC((void *)(v16 > 1), v17 + 1, 1, v6);
          }
          void v6[2] = v17 + 1;
          uint64_t v8 = &v6[2 * v17];
          void v8[4] = v15;
          v8[5] = v13;
          unint64_t v4 = v19;
          uint64_t v5 = v14;
        }
        ++v7;
        if (v12 == v5)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t sub_1DF194454(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a3 + 56);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v28 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v8 >= v23) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v8);
    if (!v13) {
      break;
    }
LABEL_18:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_19:
    uint64_t v15 = (void *)(*(void *)(v28 + 48) + 16 * v11);
    uint64_t v16 = v15[1];
    v27[0] = *v15;
    v27[1] = v16;
    swift_bridgeObjectRetain();
    a1(&v25, v27);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v9;
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = v26;
    if (v26)
    {
      uint64_t v18 = v25;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DEA8C6EC(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v20 = v9[2];
      unint64_t v19 = v9[3];
      if (v20 >= v19 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DEA8C6EC((void *)(v19 > 1), v20 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      v9[2] = v20 + 1;
      uint64_t v21 = &v9[2 * v20];
      v21[4] = v18;
      v21[5] = v17;
    }
  }
  int64_t v14 = v8 + 1;
  if (v8 + 1 >= v23) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_17;
  }
  int64_t v14 = v8 + 2;
  if (v8 + 2 >= v23) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_17;
  }
  int64_t v14 = v8 + 3;
  if (v8 + 3 >= v23) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_17;
  }
  int64_t v14 = v8 + 4;
  if (v8 + 4 >= v23)
  {
LABEL_31:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
LABEL_17:
    int64_t v8 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v23) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

unint64_t sub_1DF1946CC(void (*a1)(char *), uint64_t a2)
{
  unint64_t v59 = a1;
  sub_1DEC31D44();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0DB64();
  uint64_t v62 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v61 = (char *)&v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v44 - v14;
  sub_1DEB0DC50();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF19B0BC(0);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  int64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v55 = v17 + 16;
  v54(v19, v2, v16);
  sub_1DF19ABA4((unint64_t *)&unk_1EBAEC368, (void (*)(uint64_t))sub_1DEB0DC50);
  uint64_t v56 = v19;
  sub_1DFDFDFB0();
  uint64_t v24 = &v23[*(int *)(v21 + 44)];
  sub_1DEB0DD3C();
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v65[0])
  {
    unint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DF19B0BC);
  }
  else
  {
    char v49 = (void (**)(char *, uint64_t))(v17 + 8);
    id v50 = (void (**)(char *))(v7 + 16);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = v7;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v23;
    uint64_t v52 = a2;
    uint64_t v26 = v61;
    uint64_t v27 = v62;
    while (1)
    {
      uint64_t v30 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v31 = v23;
      unint64_t v32 = v57;
      (*v50)(v57);
      v30(v65, 0);
      uint64_t v33 = v56;
      v54(v56, (uint64_t)v31, v16);
      sub_1DFDFE730();
      (*v49)(v33, v16);
      uint64_t v34 = *v64;
      (*v64)(v26, v32, v27);
      uint64_t v35 = (uint64_t)v58;
      uint64_t v36 = v66;
      v59(v26);
      if (v36) {
        break;
      }
      uint64_t v66 = 0;
      (*v48)(v26, v27);
      if ((*v47)(v35, 1, v27) == 1)
      {
        sub_1DF19ABEC(v35, (uint64_t (*)(void))sub_1DEC31D44);
        int64_t v23 = v51;
        uint64_t v28 = v60;
      }
      else
      {
        id v37 = v46;
        v34(v46, (char *)v35, v27);
        v34(v53, v37, v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        int64_t v23 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v63 = sub_1DEE18F38(0, *(void *)(v63 + 16) + 1, 1, v63);
        }
        uint64_t v28 = v60;
        unint64_t v40 = *(void *)(v63 + 16);
        unint64_t v39 = *(void *)(v63 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v63 = sub_1DEE18F38(v39 > 1, v40 + 1, 1, v63);
        }
        uint64_t v41 = v62;
        unint64_t v42 = v63;
        *(void *)(v63 + 16) = v40 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40), v53, v41);
      }
      uint64_t v29 = *(void *)v28;
      sub_1DFDFE720();
      uint64_t v26 = v61;
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v48)(v26, v27);
    sub_1DF19ABEC((uint64_t)v51, (uint64_t (*)(void))sub_1DF19B0BC);
    swift_bridgeObjectRelease();
  }
  return v63;
}

unint64_t sub_1DF194CEC(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v29 = a1;
  sub_1DEDBAB14();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ChannelPickerElementModel();
  uint64_t v24 = *(void *)(v28 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v28);
  uint64_t v27 = (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v23 = (uint64_t)&v22 - v10;
  if (a3 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DFDFFBE0();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      unint64_t v26 = a3 & 0xC000000000000001;
      unint64_t v12 = MEMORY[0x1E4FBC860];
      uint64_t v13 = 4;
      unint64_t v22 = a3;
      while (1)
      {
        uint64_t v14 = v13 - 4;
        if (v26)
        {
          uint64_t v15 = MEMORY[0x1E01EE240](v13 - 4, a3);
          BOOL v16 = __OFADD__(v14, 1);
          uint64_t v17 = v13 - 3;
          if (v16) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v15 = *(void *)(a3 + 8 * v13);
          swift_retain();
          BOOL v16 = __OFADD__(v14, 1);
          uint64_t v17 = v13 - 3;
          if (v16)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        uint64_t v30 = v15;
        v29(&v30);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return v12;
        }
        swift_release();
        if ((*v25)(v7, 1, v28) == 1)
        {
          sub_1DF19ABEC((uint64_t)v7, (uint64_t (*)(void))sub_1DEDBAB14);
        }
        else
        {
          uint64_t v18 = v23;
          sub_1DEA9C1E0((uint64_t)v7, v23, (uint64_t (*)(void))type metadata accessor for ChannelPickerElementModel);
          sub_1DEA9C1E0(v18, v27, (uint64_t (*)(void))type metadata accessor for ChannelPickerElementModel);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v12 = sub_1DEE18FC8(0, *(void *)(v12 + 16) + 1, 1, v12);
          }
          unint64_t v20 = *(void *)(v12 + 16);
          unint64_t v19 = *(void *)(v12 + 24);
          if (v20 >= v19 >> 1) {
            unint64_t v12 = sub_1DEE18FC8(v19 > 1, v20 + 1, 1, v12);
          }
          *(void *)(v12 + 16) = v20 + 1;
          sub_1DEA9C1E0(v27, v12+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, (uint64_t (*)(void))type metadata accessor for ChannelPickerElementModel);
          a3 = v22;
        }
        ++v13;
        if (v17 == v11)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1DF19505C(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v28 = a1;
  sub_1DF19B010(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ChannelSectionsGroupSectionModel();
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_1DFDFFBE0())
  {
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v25 = a3 & 0xC000000000000001;
    unint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v13 = 4;
    unint64_t v21 = a3;
    while (1)
    {
      id v14 = v25 ? (id)MEMORY[0x1E01EE240](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v29 = v14;
      v28(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v24)(v7, 1, v27) == 1)
      {
        sub_1DF19ABEC((uint64_t)v7, (uint64_t (*)(void))sub_1DF19B010);
      }
      else
      {
        uint64_t v17 = v22;
        sub_1DEA9C1E0((uint64_t)v7, v22, (uint64_t (*)(void))type metadata accessor for ChannelSectionsGroupSectionModel);
        sub_1DEA9C1E0(v17, v26, (uint64_t (*)(void))type metadata accessor for ChannelSectionsGroupSectionModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_1DEE19010(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_1DEE19010(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_1DEA9C1E0(v26, v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, (uint64_t (*)(void))type metadata accessor for ChannelSectionsGroupSectionModel);
        a3 = v21;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void *sub_1DF1953B8(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  if (a3 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DFDFFBE0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      unint64_t v20 = v4 & 0xC000000000000001;
      uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v7 = 4;
      unint64_t v19 = v4;
      while (1)
      {
        uint64_t v9 = v7 - 4;
        if (v20)
        {
          uint64_t v10 = MEMORY[0x1E01EE240](v7 - 4, v4);
          BOOL v11 = __OFADD__(v9, 1);
          uint64_t v12 = v7 - 3;
          if (v11) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(v4 + 8 * v7);
          swift_unknownObjectRetain();
          BOOL v11 = __OFADD__(v9, 1);
          uint64_t v12 = v7 - 3;
          if (v11)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v24 = v10;
        a1(&v22, &v24);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v6;
        }
        swift_unknownObjectRelease();
        uint64_t v13 = v23;
        if (v23)
        {
          uint64_t v14 = v5;
          uint64_t v15 = v22;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1DEE19860(0, v6[2] + 1, 1, v6);
          }
          unint64_t v17 = v6[2];
          unint64_t v16 = v6[3];
          if (v17 >= v16 >> 1) {
            uint64_t v6 = sub_1DEE19860((void *)(v16 > 1), v17 + 1, 1, v6);
          }
          void v6[2] = v17 + 1;
          uint64_t v8 = &v6[2 * v17];
          void v8[4] = v15;
          v8[5] = v13;
          unint64_t v4 = v19;
          uint64_t v5 = v14;
        }
        ++v7;
        if (v12 == v5)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

unint64_t sub_1DF19559C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  sub_1DF19AFF0(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TagFeedModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v30 = (uint64_t)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v28 = (uint64_t)&v24 - v14;
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = *(void *)(sub_1DFDFC900() - 8);
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v25 = v11;
  unint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v29 = *(void *)(v16 + 72);
  uint64_t v24 = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v26 = v10;
  uint64_t v27 = a2;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v9, 1, v10) == 1)
    {
      sub_1DF19ABEC((uint64_t)v9, (uint64_t (*)(void))sub_1DF19AFF0);
    }
    else
    {
      uint64_t v20 = v28;
      sub_1DEA9C1E0((uint64_t)v9, v28, type metadata accessor for TagFeedModel);
      sub_1DEA9C1E0(v20, v30, type metadata accessor for TagFeedModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1DEE17C04(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v19 = sub_1DEE17C04(v21 > 1, v22 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v22 + 1;
      sub_1DEA9C1E0(v30, v19+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22, type metadata accessor for TagFeedModel);
      uint64_t v10 = v26;
    }
    v17 += v29;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_1DF1958D4(void (*a1)(long long *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DFDFFBE0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v7 = 4;
      uint64_t v19 = v5;
      while (1)
      {
        uint64_t v9 = v7 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = MEMORY[0x1E01EE240](v7 - 4, a3);
          BOOL v11 = __OFADD__(v9, 1);
          uint64_t v12 = v7 - 3;
          if (v11) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(a3 + 8 * v7);
          swift_unknownObjectRetain();
          BOOL v11 = __OFADD__(v9, 1);
          uint64_t v12 = v7 - 3;
          if (v11)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v24 = v10;
        a1(&v22, &v24);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v6;
        }
        swift_unknownObjectRelease();
        if ((void)v22)
        {
          long long v21 = v22;
          uint64_t v13 = v23;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1DEE19B14(0, v6[2] + 1, 1, v6);
          }
          unint64_t v15 = v6[2];
          unint64_t v14 = v6[3];
          long long v16 = v21;
          if (v15 >= v14 >> 1)
          {
            uint64_t v17 = sub_1DEE19B14((void *)(v14 > 1), v15 + 1, 1, v6);
            long long v16 = v21;
            uint64_t v6 = v17;
          }
          void v6[2] = v15 + 1;
          uint64_t v8 = &v6[3 * v15];
          *((_OWORD *)v8 + 2) = v16;
          void v8[6] = v13;
          uint64_t v5 = v19;
        }
        ++v7;
        if (v12 == v5)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

void *sub_1DF195ACC(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = (uint64_t *)(a3 + 48);
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v11 = *(v8 - 1);
    uint64_t v12 = *v8;
    v22[0] = *(v8 - 2);
    v22[1] = v11;
    v22[2] = v12;
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v19, v22);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return v9;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if ((void)v19)
    {
      long long v18 = v19;
      uint64_t v13 = v20;
      uint64_t v14 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1DEE19CA4(0, v9[2] + 1, 1, v9);
      }
      unint64_t v16 = v9[2];
      unint64_t v15 = v9[3];
      if (v16 >= v15 >> 1) {
        uint64_t v9 = sub_1DEE19CA4((void *)(v15 > 1), v16 + 1, 1, v9);
      }
      v9[2] = v16 + 1;
      uint64_t v10 = &v9[4 * v16];
      *((_OWORD *)v10 + 2) = v18;
      v10[6] = v13;
      v10[7] = v14;
    }
    v8 += 3;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_1DF195C88(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  sub_1DF19AF34(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TagFeedCuration(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v30 = (uint64_t)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v28 = (uint64_t)&v24 - v14;
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = *(void *)(type metadata accessor for TagFeedCurationServiceConfig() - 8);
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v25 = v11;
  long long v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v29 = *(void *)(v16 + 72);
  uint64_t v24 = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v26 = v10;
  uint64_t v27 = a2;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v9, 1, v10) == 1)
    {
      sub_1DF19ABEC((uint64_t)v9, (uint64_t (*)(void))sub_1DF19AF34);
    }
    else
    {
      uint64_t v20 = v28;
      sub_1DEA9C1E0((uint64_t)v9, v28, type metadata accessor for TagFeedCuration);
      sub_1DEA9C1E0(v20, v30, type metadata accessor for TagFeedCuration);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1DEE19DE8(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v19 = sub_1DEE19DE8(v21 > 1, v22 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v22 + 1;
      sub_1DEA9C1E0(v30, v19+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22, type metadata accessor for TagFeedCuration);
      uint64_t v10 = v26;
    }
    v17 += v29;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1DF195FC0(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a1;
  sub_1DF19AF54(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TagFeedCurationServiceConfig();
  uint64_t v8 = MEMORY[0x1F4188790](v24);
  uint64_t v23 = (uint64_t)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v22 = (uint64_t)&v20 - v11;
  uint64_t v12 = *(void *)(a3 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v20 = v10;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v21 = a3;
  do
  {
    uint64_t v26 = *(void *)(a3 + 8 * v14 + 32);
    swift_retain();
    v25(&v26);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v15;
    }
    swift_release();
    if ((*v13)(v7, 1, v24) == 1)
    {
      sub_1DF19ABEC((uint64_t)v7, (uint64_t (*)(void))sub_1DF19AF54);
    }
    else
    {
      uint64_t v16 = v22;
      sub_1DEA9C1E0((uint64_t)v7, v22, (uint64_t (*)(void))type metadata accessor for TagFeedCurationServiceConfig);
      sub_1DEA9C1E0(v16, v23, (uint64_t (*)(void))type metadata accessor for TagFeedCurationServiceConfig);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_1DEE19E30(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v18 = *(void *)(v15 + 16);
      unint64_t v17 = *(void *)(v15 + 24);
      if (v18 >= v17 >> 1) {
        unint64_t v15 = sub_1DEE19E30(v17 > 1, v18 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v18 + 1;
      sub_1DEA9C1E0(v23, v15+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v18, (uint64_t (*)(void))type metadata accessor for TagFeedCurationServiceConfig);
      a3 = v21;
    }
    ++v14;
  }
  while (v12 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

void *sub_1DF1962C8(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  v22[4] = a3;
  uint64_t v8 = (uint64_t *)(a3 + 48);
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v11 = *(v8 - 1);
    uint64_t v12 = *v8;
    v22[0] = *(v8 - 2);
    v22[1] = v11;
    v22[2] = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v20, v22);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if ((void)v20)
    {
      long long v19 = v20;
      uint64_t v13 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1DEE19FC0(0, v9[2] + 1, 1, v9);
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      long long v16 = v19;
      if (v15 >= v14 >> 1)
      {
        unint64_t v17 = sub_1DEE19FC0((void *)(v14 > 1), v15 + 1, 1, v9);
        long long v16 = v19;
        uint64_t v9 = v17;
      }
      v9[2] = v15 + 1;
      uint64_t v10 = &v9[3 * v15];
      *((_OWORD *)v10 + 2) = v16;
      v10[6] = v13;
    }
    v8 += 3;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_1DF19647C(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v29 = a1;
  sub_1DE9E1360();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for AudioFeedTrack(0);
  uint64_t v24 = *(void *)(v28 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v28);
  uint64_t v27 = (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v23 = (uint64_t)&v22 - v10;
  if (a3 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DFDFFBE0();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      unint64_t v26 = a3 & 0xC000000000000001;
      unint64_t v12 = MEMORY[0x1E4FBC860];
      uint64_t v13 = 4;
      unint64_t v22 = a3;
      while (1)
      {
        uint64_t v14 = v13 - 4;
        if (v26)
        {
          uint64_t v15 = MEMORY[0x1E01EE240](v13 - 4, a3);
          BOOL v16 = __OFADD__(v14, 1);
          uint64_t v17 = v13 - 3;
          if (v16) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v15 = *(void *)(a3 + 8 * v13);
          swift_unknownObjectRetain();
          BOOL v16 = __OFADD__(v14, 1);
          uint64_t v17 = v13 - 3;
          if (v16)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        uint64_t v30 = v15;
        v29(&v30);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v12;
        }
        swift_unknownObjectRelease();
        if ((*v25)(v7, 1, v28) == 1)
        {
          sub_1DF19ABEC((uint64_t)v7, (uint64_t (*)(void))sub_1DE9E1360);
        }
        else
        {
          uint64_t v18 = v23;
          sub_1DEA9C1E0((uint64_t)v7, v23, type metadata accessor for AudioFeedTrack);
          sub_1DEA9C1E0(v18, v27, type metadata accessor for AudioFeedTrack);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v12 = sub_1DEA9E2E0(0, *(void *)(v12 + 16) + 1, 1, v12);
          }
          unint64_t v20 = *(void *)(v12 + 16);
          unint64_t v19 = *(void *)(v12 + 24);
          if (v20 >= v19 >> 1) {
            unint64_t v12 = sub_1DEA9E2E0(v19 > 1, v20 + 1, 1, v12);
          }
          *(void *)(v12 + 16) = v20 + 1;
          sub_1DEA9C1E0(v27, v12+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, type metadata accessor for AudioFeedTrack);
          a3 = v22;
        }
        ++v13;
        if (v17 == v11)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1DF1967EC(void (*a1)(char *), uint64_t a2)
{
  unint64_t v59 = a1;
  sub_1DEAA7740();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA87830();
  uint64_t v62 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v61 = (char *)&v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v44 - v14;
  sub_1DEA94E04();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA7A618();
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v55 = v17 + 16;
  v54(v19, v2, v16);
  sub_1DF19ABA4((unint64_t *)&unk_1EBAA3B80, (void (*)(uint64_t))sub_1DEA94E04);
  uint64_t v56 = v19;
  sub_1DFDFDFB0();
  uint64_t v24 = &v23[*(int *)(v21 + 44)];
  sub_1DEB0D1D0();
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v65[0])
  {
    unint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DEA7A618);
  }
  else
  {
    char v49 = (void (**)(char *, uint64_t))(v17 + 8);
    id v50 = (void (**)(char *))(v7 + 16);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = v7;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v23;
    uint64_t v52 = a2;
    unint64_t v26 = v61;
    uint64_t v27 = v62;
    while (1)
    {
      uint64_t v30 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v31 = v23;
      unint64_t v32 = v57;
      (*v50)(v57);
      v30(v65, 0);
      uint64_t v33 = v56;
      v54(v56, (uint64_t)v31, v16);
      sub_1DFDFE730();
      (*v49)(v33, v16);
      uint64_t v34 = *v64;
      (*v64)(v26, v32, v27);
      uint64_t v35 = (uint64_t)v58;
      uint64_t v36 = v66;
      v59(v26);
      if (v36) {
        break;
      }
      uint64_t v66 = 0;
      (*v48)(v26, v27);
      if ((*v47)(v35, 1, v27) == 1)
      {
        sub_1DF19ABEC(v35, (uint64_t (*)(void))sub_1DEAA7740);
        uint64_t v23 = v51;
        uint64_t v28 = v60;
      }
      else
      {
        id v37 = v46;
        v34(v46, (char *)v35, v27);
        v34(v53, v37, v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v63 = sub_1DEE189BC(0, *(void *)(v63 + 16) + 1, 1, v63);
        }
        uint64_t v28 = v60;
        unint64_t v40 = *(void *)(v63 + 16);
        unint64_t v39 = *(void *)(v63 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v63 = sub_1DEE189BC(v39 > 1, v40 + 1, 1, v63);
        }
        uint64_t v41 = v62;
        unint64_t v42 = v63;
        *(void *)(v63 + 16) = v40 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40), v53, v41);
      }
      uint64_t v29 = *(void *)v28;
      sub_1DFDFE720();
      unint64_t v26 = v61;
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v48)(v26, v27);
    sub_1DF19ABEC((uint64_t)v51, (uint64_t (*)(void))sub_1DEA7A618);
    swift_bridgeObjectRelease();
  }
  return v63;
}

unint64_t sub_1DF196E0C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  sub_1DF19AC8C(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDF5FC0();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v29 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v26 = (char *)&v23 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = v12;
  uint64_t v27 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  unint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  do
  {
    char v31 = *(unsigned char *)(a3 + v15 + 32);
    a1(&v31);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*v28)(v8, 1, v9) == 1)
    {
      sub_1DF19ABEC((uint64_t)v8, (uint64_t (*)(void))sub_1DF19AC8C);
    }
    else
    {
      uint64_t v17 = v14;
      uint64_t v18 = v26;
      unint64_t v19 = *v27;
      (*v27)(v26, v8, v9);
      v19(v29, v18, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_1DEE1A450(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v21 = *(void *)(v16 + 16);
      unint64_t v20 = *(void *)(v16 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v16 = sub_1DEE1A450(v20 > 1, v21 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v21 + 1;
      v19((char *)(v16+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v21), v29, v9);
      a1 = v24;
      a3 = v25;
      uint64_t v14 = v17;
    }
    ++v15;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_1DF197100(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a2;
  sub_1DF19AC6C(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDEA540();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v30 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v27 = (char *)&v24 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v25 = v12;
  uint64_t v28 = (void (**)(char *))(v12 + 32);
  uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  uint64_t v24 = a3;
  uint64_t v15 = (uint64_t *)(a3 + 40);
  unint64_t v33 = MEMORY[0x1E4FBC860];
  unint64_t v26 = a1;
  do
  {
    uint64_t v16 = v9;
    uint64_t v17 = *v15;
    v32[0] = *(v15 - 1);
    v32[1] = v17;
    swift_bridgeObjectRetain();
    a1(v32);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v33;
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v16;
    if ((*v29)(v8, 1, v16) == 1)
    {
      sub_1DF19ABEC((uint64_t)v8, (uint64_t (*)(void))sub_1DF19AC6C);
    }
    else
    {
      uint64_t v18 = v27;
      unint64_t v19 = *v28;
      (*v28)(v27);
      ((void (*)(char *, char *, uint64_t))v19)(v30, v18, v16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v33 = sub_1DEE1A4E0(0, *(void *)(v33 + 16) + 1, 1, v33);
      }
      unint64_t v21 = *(void *)(v33 + 16);
      unint64_t v20 = *(void *)(v33 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v33 = sub_1DEE1A4E0(v20 > 1, v21 + 1, 1, v33);
      }
      unint64_t v22 = v33;
      *(void *)(v33 + 16) = v21 + 1;
      uint64_t v9 = v16;
      ((void (*)(unint64_t, char *, uint64_t))v19)(v22+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v21, v30, v16);
      a1 = v26;
    }
    v15 += 2;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v33;
}

unint64_t sub_1DF197428(void (*a1)(char *), uint64_t a2)
{
  unint64_t v59 = a1;
  sub_1DEC4C948();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0DD70();
  uint64_t v62 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v61 = (char *)&v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v44 - v14;
  sub_1DEB0DE5C();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF19B1A0(0);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v55 = v17 + 16;
  v54(v19, v2, v16);
  sub_1DF19ABA4(&qword_1EBAEC388, (void (*)(uint64_t))sub_1DEB0DE5C);
  uint64_t v56 = v19;
  sub_1DFDFDFB0();
  uint64_t v24 = &v23[*(int *)(v21 + 44)];
  sub_1DEB0DF48();
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v65[0])
  {
    unint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DF19B1A0);
  }
  else
  {
    char v49 = (void (**)(char *, uint64_t))(v17 + 8);
    id v50 = (void (**)(char *))(v7 + 16);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = v7;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v23;
    uint64_t v52 = a2;
    unint64_t v26 = v61;
    uint64_t v27 = v62;
    while (1)
    {
      uint64_t v30 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v31 = v23;
      unint64_t v32 = v57;
      (*v50)(v57);
      v30(v65, 0);
      unint64_t v33 = v56;
      v54(v56, (uint64_t)v31, v16);
      sub_1DFDFE730();
      (*v49)(v33, v16);
      uint64_t v34 = *v64;
      (*v64)(v26, v32, v27);
      uint64_t v35 = (uint64_t)v58;
      uint64_t v36 = v66;
      v59(v26);
      if (v36) {
        break;
      }
      uint64_t v66 = 0;
      (*v48)(v26, v27);
      if ((*v47)(v35, 1, v27) == 1)
      {
        sub_1DF19ABEC(v35, (uint64_t (*)(void))sub_1DEC4C948);
        uint64_t v23 = v51;
        uint64_t v28 = v60;
      }
      else
      {
        id v37 = v46;
        v34(v46, (char *)v35, v27);
        v34(v53, v37, v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v63 = sub_1DEE1A980(0, *(void *)(v63 + 16) + 1, 1, v63);
        }
        uint64_t v28 = v60;
        unint64_t v40 = *(void *)(v63 + 16);
        unint64_t v39 = *(void *)(v63 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v63 = sub_1DEE1A980(v39 > 1, v40 + 1, 1, v63);
        }
        uint64_t v41 = v62;
        unint64_t v42 = v63;
        *(void *)(v63 + 16) = v40 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40), v53, v41);
      }
      uint64_t v29 = *(void *)v28;
      sub_1DFDFE720();
      unint64_t v26 = v61;
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v48)(v26, v27);
    sub_1DF19ABEC((uint64_t)v51, (uint64_t (*)(void))sub_1DF19B1A0);
    swift_bridgeObjectRelease();
  }
  return v63;
}

uint64_t sub_1DF197A48(void (*a1)(void *__return_ptr, char *), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v36 = a2;
  sub_1DEA7F52C(0, (unint64_t *)&unk_1EBAF2F50, (uint64_t (*)(uint64_t))type metadata accessor for FollowingModel, sub_1DEAE2210, MEMORY[0x1E4FABD50]);
  uint64_t v6 = v5;
  unint64_t v40 = *(uint64_t (***)(char *, uint64_t))(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v44 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v36 - v9;
  sub_1DEB0B398();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC38D8C();
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x1E4FBC860];
  unint64_t v42 = (void (**)(char *, uint64_t))v13;
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v46 = v13 + 16;
  v45(v15, v3, v12);
  sub_1DF19ABA4(&qword_1EAC22090, (void (*)(uint64_t))sub_1DEB0B398);
  uint64_t v47 = v15;
  sub_1DFDFDFB0();
  uint64_t v20 = &v19[*(int *)(v17 + 44)];
  uint64_t v21 = sub_1DEB0B5AC();
  uint64_t v22 = *(void *)v20;
  uint64_t v48 = v19;
  sub_1DFDFE720();
  if (v22 == v50[0])
  {
    uint64_t v23 = (uint64_t)v48;
LABEL_3:
    sub_1DF19ABEC(v23, (uint64_t (*)(void))sub_1DEC38D8C);
    return v51;
  }
  else
  {
    uint64_t v25 = v21;
    unint64_t v26 = v10;
    uint64_t v27 = v40;
    ++v42;
    uint64_t v43 = (void (**)(char *))(v40 + 2);
    ++v40;
    uint64_t v41 = (void (**)(char *, char *, uint64_t))(v27 + 4);
    uint64_t v23 = (uint64_t)v48;
    id v37 = v10;
    uint64_t v38 = v25;
    unint64_t v39 = v20;
    while (1)
    {
      uint64_t v31 = (void (*)(void *, void))sub_1DFDFE760();
      (*v43)(v26);
      v31(v50, 0);
      unint64_t v32 = v47;
      v45(v47, v23, v12);
      sub_1DFDFE730();
      (*v42)(v32, v12);
      unint64_t v33 = v44;
      (*v41)(v44, v26, v6);
      uint64_t v34 = v49;
      a1(v50, v33);
      if (v34) {
        break;
      }
      uint64_t v35 = (*v40)(v33, v6);
      if (v50[0])
      {
        MEMORY[0x1E01ECA20](v35);
        if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
        unint64_t v26 = v37;
      }
      uint64_t v49 = 0;
      uint64_t v28 = *(void *)v39;
      uint64_t v29 = (uint64_t)v48;
      sub_1DFDFE720();
      BOOL v30 = v28 == v50[0];
      uint64_t v23 = v29;
      if (v30) {
        goto LABEL_3;
      }
    }
    (*v40)(v33, v6);
    sub_1DF19ABEC(v23, (uint64_t (*)(void))sub_1DEC38D8C);
    return swift_bridgeObjectRelease();
  }
}

void *sub_1DF197F4C(void (*a1)(long long *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DFDFFBE0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v8 = i - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = MEMORY[0x1E01EE240](i - 4, a3);
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = i - 3;
          if (v10) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a3 + 8 * i);
          swift_unknownObjectRetain();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = i - 3;
          if (v10)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v20 = v9;
        a1(&v19, &v20);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v6;
        }
        swift_unknownObjectRelease();
        if ((void)v19)
        {
          long long v18 = v19;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1DEE1B9C0(0, v6[2] + 1, 1, v6);
          }
          unint64_t v13 = v6[2];
          unint64_t v12 = v6[3];
          long long v14 = v18;
          if (v13 >= v12 >> 1)
          {
            uint64_t v15 = sub_1DEE1B9C0((void *)(v12 > 1), v13 + 1, 1, v6);
            long long v14 = v18;
            uint64_t v6 = v15;
          }
          void v6[2] = v13 + 1;
          *(_OWORD *)&v6[2 * v13 + 4] = v14;
        }
        if (v11 == v5)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

unint64_t sub_1DF198130(void (*a1)(char *), uint64_t a2)
{
  unint64_t v59 = a1;
  sub_1DF14E5AC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE1FE40();
  uint64_t v62 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v61 = (char *)&v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v44 - v14;
  sub_1DF19ACAC();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF19AD98(0);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v55 = v17 + 16;
  v54(v19, v2, v16);
  sub_1DF19ABA4(&qword_1EAC291E8, (void (*)(uint64_t))sub_1DF19ACAC);
  uint64_t v56 = v19;
  sub_1DFDFDFB0();
  uint64_t v24 = &v23[*(int *)(v21 + 44)];
  sub_1DF19ADE0();
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v65[0])
  {
    unint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DF19AD98);
  }
  else
  {
    uint64_t v49 = (void (**)(char *, uint64_t))(v17 + 8);
    id v50 = (void (**)(char *))(v7 + 16);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = v7;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v23;
    uint64_t v52 = a2;
    unint64_t v26 = v61;
    uint64_t v27 = v62;
    while (1)
    {
      BOOL v30 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v31 = v23;
      unint64_t v32 = v57;
      (*v50)(v57);
      v30(v65, 0);
      unint64_t v33 = v56;
      v54(v56, (uint64_t)v31, v16);
      sub_1DFDFE730();
      (*v49)(v33, v16);
      uint64_t v34 = *v64;
      (*v64)(v26, v32, v27);
      uint64_t v35 = (uint64_t)v58;
      uint64_t v36 = v66;
      v59(v26);
      if (v36) {
        break;
      }
      uint64_t v66 = 0;
      (*v48)(v26, v27);
      if ((*v47)(v35, 1, v27) == 1)
      {
        sub_1DF19ABEC(v35, (uint64_t (*)(void))sub_1DF14E5AC);
        uint64_t v23 = v51;
        uint64_t v28 = v60;
      }
      else
      {
        id v37 = v46;
        v34(v46, (char *)v35, v27);
        v34(v53, v37, v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v63 = sub_1DEE1BF24(0, *(void *)(v63 + 16) + 1, 1, v63);
        }
        uint64_t v28 = v60;
        unint64_t v40 = *(void *)(v63 + 16);
        unint64_t v39 = *(void *)(v63 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v63 = sub_1DEE1BF24(v39 > 1, v40 + 1, 1, v63);
        }
        uint64_t v41 = v62;
        unint64_t v42 = v63;
        *(void *)(v63 + 16) = v40 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40), v53, v41);
      }
      uint64_t v29 = *(void *)v28;
      sub_1DFDFE720();
      unint64_t v26 = v61;
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v48)(v26, v27);
    sub_1DF19ABEC((uint64_t)v51, (uint64_t (*)(void))sub_1DF19AD98);
    swift_bridgeObjectRelease();
  }
  return v63;
}

unint64_t sub_1DF198750(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  sub_1DF19AC4C(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MagazineFeedModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v30 = (uint64_t)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v28 = (uint64_t)&v24 - v14;
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = *(void *)(sub_1DFDFC900() - 8);
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v25 = v11;
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v29 = *(void *)(v16 + 72);
  uint64_t v24 = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v26 = v10;
  uint64_t v27 = a2;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v9, 1, v10) == 1)
    {
      sub_1DF19ABEC((uint64_t)v9, (uint64_t (*)(void))sub_1DF19AC4C);
    }
    else
    {
      uint64_t v20 = v28;
      sub_1DEA9C1E0((uint64_t)v9, v28, type metadata accessor for MagazineFeedModel);
      sub_1DEA9C1E0(v20, v30, type metadata accessor for MagazineFeedModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1DEE1965C(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v19 = sub_1DEE1965C(v21 > 1, v22 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v22 + 1;
      sub_1DEA9C1E0(v30, v19+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22, type metadata accessor for MagazineFeedModel);
      uint64_t v10 = v26;
    }
    v17 += v29;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1DF198A88(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a1;
  sub_1DF19AE14(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for SearchResultsGroup();
  uint64_t v8 = MEMORY[0x1F4188790](v26);
  uint64_t v25 = (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v24 = (uint64_t)&v22 - v11;
  uint64_t v12 = *(void *)(a3 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = v10;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  uint64_t v22 = a3;
  uint64_t v14 = (void *)(a3 + 64);
  unint64_t v15 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v16 = *v14;
    uint64_t v17 = *(v14 - 3);
    v27[0] = *((unsigned char *)v14 - 32);
    uint64_t v28 = v17;
    long long v29 = *((_OWORD *)v14 - 1);
    uint64_t v30 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v27);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*v13)(v7, 1, v26) == 1)
    {
      sub_1DF19ABEC((uint64_t)v7, (uint64_t (*)(void))sub_1DF19AE14);
    }
    else
    {
      uint64_t v18 = v24;
      sub_1DEA9C1E0((uint64_t)v7, v24, (uint64_t (*)(void))type metadata accessor for SearchResultsGroup);
      sub_1DEA9C1E0(v18, v25, (uint64_t (*)(void))type metadata accessor for SearchResultsGroup);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_1DEE18020(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v20 = *(void *)(v15 + 16);
      unint64_t v19 = *(void *)(v15 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v15 = sub_1DEE18020(v19 > 1, v20 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v20 + 1;
      sub_1DEA9C1E0(v25, v15+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v20, (uint64_t (*)(void))type metadata accessor for SearchResultsGroup);
    }
    v14 += 5;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1DF198DB0(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3)
{
  sub_1DF19AE34(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for SearchModel(0);
  uint64_t v22 = *(void *)(v28 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v28);
  uint64_t v25 = (uint64_t)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v21 = (uint64_t)v20 - v12;
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  sub_1DECA5328(a3 + 32, (uint64_t)v27);
  sub_1DECA5328((uint64_t)v27, (uint64_t)v26);
  sub_1DF19AE54(v27, sub_1DECA545C);
  a1(v26);
  if (!v3)
  {
    uint64_t v23 = a2;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    v20[1] = a3;
    uint64_t v15 = a3 + 568;
    unint64_t v14 = MEMORY[0x1E4FBC860];
    while (1)
    {
      sub_1DF19AE54(v27, sub_1DECA5D58);
      if ((*v24)(v9, 1, v28) == 1)
      {
        sub_1DF19ABEC((uint64_t)v9, (uint64_t (*)(void))sub_1DF19AE34);
        if (!--v13) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v16 = v21;
        sub_1DEA9C1E0((uint64_t)v9, v21, type metadata accessor for SearchModel);
        sub_1DEA9C1E0(v16, v25, type metadata accessor for SearchModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v14 = sub_1DEE1AAF8(0, *(void *)(v14 + 16) + 1, 1, v14);
        }
        unint64_t v18 = *(void *)(v14 + 16);
        unint64_t v17 = *(void *)(v14 + 24);
        if (v18 >= v17 >> 1) {
          unint64_t v14 = sub_1DEE1AAF8(v17 > 1, v18 + 1, 1, v14);
        }
        *(void *)(v14 + 16) = v18 + 1;
        sub_1DEA9C1E0(v25, v14+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v18, type metadata accessor for SearchModel);
        if (!--v13)
        {
LABEL_15:
          swift_bridgeObjectRelease();
          return v14;
        }
      }
      sub_1DECA5328(v15, (uint64_t)v27);
      sub_1DECA5328((uint64_t)v27, (uint64_t)v26);
      sub_1DF19AE54(v27, sub_1DECA545C);
      a1(v26);
      v15 += 536;
    }
  }
  unint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1DF19AE54(v27, sub_1DECA5D58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1DF199174(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  sub_1DEAA7740();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA87830();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v31 = (char *)v26 - v14;
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = *(void *)(type metadata accessor for TodayFeedGroup() - 8);
  uint64_t v17 = v11;
  uint64_t v18 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  unint64_t v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v28 = v17;
  unint64_t v33 = (void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v32 = *(void *)(v16 + 72);
  v26[1] = a3;
  swift_bridgeObjectRetain();
  unint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v29 = v10;
  uint64_t v30 = a1;
  uint64_t v27 = v19;
  do
  {
    a1(v18);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*v19)(v8, 1, v10) == 1)
    {
      sub_1DF19ABEC((uint64_t)v8, (uint64_t (*)(void))sub_1DEAA7740);
    }
    else
    {
      uint64_t v21 = *v33;
      uint64_t v22 = v31;
      (*v33)(v31, v8, v10);
      v21(v34, v22, v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v20 = sub_1DEE189BC(0, *(void *)(v20 + 16) + 1, 1, v20);
      }
      unint64_t v24 = *(void *)(v20 + 16);
      unint64_t v23 = *(void *)(v20 + 24);
      if (v24 >= v23 >> 1) {
        unint64_t v20 = sub_1DEE189BC(v23 > 1, v24 + 1, 1, v20);
      }
      *(void *)(v20 + 16) = v24 + 1;
      uint64_t v10 = v29;
      v21((char *)(v20+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v24), v34, v29);
      a1 = v30;
      unint64_t v19 = v27;
    }
    v18 += v32;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_1DF1994B8(void (*a1)(char *), uint64_t a2)
{
  unint64_t v59 = a1;
  sub_1DF19B104(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE03B08();
  uint64_t v62 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v61 = (char *)&v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v44 - v14;
  sub_1DEE568C0();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF19B124(0);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v55 = v17 + 16;
  v54(v19, v2, v16);
  sub_1DF19ABA4(&qword_1EAC29208, (void (*)(uint64_t))sub_1DEE568C0);
  uint64_t v56 = v19;
  sub_1DFDFDFB0();
  unint64_t v24 = &v23[*(int *)(v21 + 44)];
  sub_1DF19B16C();
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v65[0])
  {
    unint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DF19B124);
  }
  else
  {
    uint64_t v49 = (void (**)(char *, uint64_t))(v17 + 8);
    id v50 = (void (**)(char *))(v7 + 16);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = v7;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v23;
    uint64_t v52 = a2;
    uint64_t v26 = v61;
    uint64_t v27 = v62;
    while (1)
    {
      uint64_t v30 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v31 = v23;
      uint64_t v32 = v57;
      (*v50)(v57);
      v30(v65, 0);
      unint64_t v33 = v56;
      v54(v56, (uint64_t)v31, v16);
      sub_1DFDFE730();
      (*v49)(v33, v16);
      uint64_t v34 = *v64;
      (*v64)(v26, v32, v27);
      uint64_t v35 = (uint64_t)v58;
      uint64_t v36 = v66;
      v59(v26);
      if (v36) {
        break;
      }
      uint64_t v66 = 0;
      (*v48)(v26, v27);
      if ((*v47)(v35, 1, v27) == 1)
      {
        sub_1DF19ABEC(v35, (uint64_t (*)(void))sub_1DF19B104);
        unint64_t v23 = v51;
        uint64_t v28 = v60;
      }
      else
      {
        id v37 = v46;
        v34(v46, (char *)v35, v27);
        v34(v53, v37, v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v23 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v63 = sub_1DEE1C78C(0, *(void *)(v63 + 16) + 1, 1, v63);
        }
        uint64_t v28 = v60;
        unint64_t v40 = *(void *)(v63 + 16);
        unint64_t v39 = *(void *)(v63 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v63 = sub_1DEE1C78C(v39 > 1, v40 + 1, 1, v63);
        }
        uint64_t v41 = v62;
        unint64_t v42 = v63;
        *(void *)(v63 + 16) = v40 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40), v53, v41);
      }
      uint64_t v29 = *(void *)v28;
      sub_1DFDFE720();
      uint64_t v26 = v61;
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v48)(v26, v27);
    sub_1DF19ABEC((uint64_t)v51, (uint64_t (*)(void))sub_1DF19B124);
    swift_bridgeObjectRelease();
  }
  return v63;
}

unint64_t sub_1DF199AD8(void (*a1)(char *), uint64_t a2)
{
  unint64_t v59 = a1;
  sub_1DEF2F4E8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0C444();
  uint64_t v62 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v61 = (char *)&v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v44 - v14;
  sub_1DEB0C5EC();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEF522CC();
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v55 = v17 + 16;
  v54(v19, v2, v16);
  sub_1DF19ABA4((unint64_t *)&unk_1EBAA8630, (void (*)(uint64_t))sub_1DEB0C5EC);
  uint64_t v56 = v19;
  sub_1DFDFDFB0();
  unint64_t v24 = &v23[*(int *)(v21 + 44)];
  sub_1DF07826C();
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v65[0])
  {
    unint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DEF522CC);
  }
  else
  {
    uint64_t v49 = (void (**)(char *, uint64_t))(v17 + 8);
    id v50 = (void (**)(char *))(v7 + 16);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = v7;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v23;
    uint64_t v52 = a2;
    uint64_t v26 = v61;
    uint64_t v27 = v62;
    while (1)
    {
      uint64_t v30 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v31 = v23;
      uint64_t v32 = v57;
      (*v50)(v57);
      v30(v65, 0);
      unint64_t v33 = v56;
      v54(v56, (uint64_t)v31, v16);
      sub_1DFDFE730();
      (*v49)(v33, v16);
      uint64_t v34 = *v64;
      (*v64)(v26, v32, v27);
      uint64_t v35 = (uint64_t)v58;
      uint64_t v36 = v66;
      v59(v26);
      if (v36) {
        break;
      }
      uint64_t v66 = 0;
      (*v48)(v26, v27);
      if ((*v47)(v35, 1, v27) == 1)
      {
        sub_1DF19ABEC(v35, (uint64_t (*)(void))sub_1DEF2F4E8);
        unint64_t v23 = v51;
        uint64_t v28 = v60;
      }
      else
      {
        id v37 = v46;
        v34(v46, (char *)v35, v27);
        v34(v53, v37, v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v23 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v63 = sub_1DEE196B8(0, *(void *)(v63 + 16) + 1, 1, v63);
        }
        uint64_t v28 = v60;
        unint64_t v40 = *(void *)(v63 + 16);
        unint64_t v39 = *(void *)(v63 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v63 = sub_1DEE196B8(v39 > 1, v40 + 1, 1, v63);
        }
        uint64_t v41 = v62;
        unint64_t v42 = v63;
        *(void *)(v63 + 16) = v40 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40), v53, v41);
      }
      uint64_t v29 = *(void *)v28;
      sub_1DFDFE720();
      uint64_t v26 = v61;
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v48)(v26, v27);
    sub_1DF19ABEC((uint64_t)v51, (uint64_t (*)(void))sub_1DEF522CC);
    swift_bridgeObjectRelease();
  }
  return v63;
}

unint64_t sub_1DF19A0F8(void (*a1)(char *), uint64_t a2)
{
  unint64_t v59 = a1;
  sub_1DECAB644();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEE201F8();
  uint64_t v62 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v61 = (char *)&v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v44 - v14;
  sub_1DEE567D4();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF19B040(0);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v55 = v17 + 16;
  v54(v19, v2, v16);
  sub_1DF19ABA4(&qword_1EAC21000, (void (*)(uint64_t))sub_1DEE567D4);
  uint64_t v56 = v19;
  sub_1DFDFDFB0();
  unint64_t v24 = &v23[*(int *)(v21 + 44)];
  sub_1DF19B088();
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)v24;
  sub_1DFDFE720();
  if (v25 == v65[0])
  {
    unint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1DF19ABEC((uint64_t)v23, (uint64_t (*)(void))sub_1DF19B040);
  }
  else
  {
    uint64_t v49 = (void (**)(char *, uint64_t))(v17 + 8);
    id v50 = (void (**)(char *))(v7 + 16);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = v7;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v23;
    uint64_t v52 = a2;
    uint64_t v26 = v61;
    uint64_t v27 = v62;
    while (1)
    {
      uint64_t v30 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      uint64_t v31 = v23;
      uint64_t v32 = v57;
      (*v50)(v57);
      v30(v65, 0);
      unint64_t v33 = v56;
      v54(v56, (uint64_t)v31, v16);
      sub_1DFDFE730();
      (*v49)(v33, v16);
      uint64_t v34 = *v64;
      (*v64)(v26, v32, v27);
      uint64_t v35 = (uint64_t)v58;
      uint64_t v36 = v66;
      v59(v26);
      if (v36) {
        break;
      }
      uint64_t v66 = 0;
      (*v48)(v26, v27);
      if ((*v47)(v35, 1, v27) == 1)
      {
        sub_1DF19ABEC(v35, (uint64_t (*)(void))sub_1DECAB644);
        unint64_t v23 = v51;
        uint64_t v28 = v60;
      }
      else
      {
        id v37 = v46;
        v34(v46, (char *)v35, v27);
        v34(v53, v37, v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v23 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v63 = sub_1DEE1CF04(0, *(void *)(v63 + 16) + 1, 1, v63);
        }
        uint64_t v28 = v60;
        unint64_t v40 = *(void *)(v63 + 16);
        unint64_t v39 = *(void *)(v63 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v63 = sub_1DEE1CF04(v39 > 1, v40 + 1, 1, v63);
        }
        uint64_t v41 = v62;
        unint64_t v42 = v63;
        *(void *)(v63 + 16) = v40 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40), v53, v41);
      }
      uint64_t v29 = *(void *)v28;
      sub_1DFDFE720();
      uint64_t v26 = v61;
      if (v29 == v65[0]) {
        goto LABEL_3;
      }
    }
    (*v48)(v26, v27);
    sub_1DF19ABEC((uint64_t)v51, (uint64_t (*)(void))sub_1DF19B040);
    swift_bridgeObjectRelease();
  }
  return v63;
}

uint64_t sub_1DF19A718()
{
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  MEMORY[0x1E01ECA60](v0, MEMORY[0x1E4FBB1A0]);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v2 = swift_bridgeObjectRetain();
  MEMORY[0x1E01ECA60](v2, v1);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return 0x3D64656464617BLL;
}

uint64_t sub_1DF19A81C@<X0>(id *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = (uint64_t)objc_msgSend(*a1, sel_UMCCanonicalID);
  if (!result) {
    goto LABEL_5;
  }
  uint64_t v8 = (void *)result;
  uint64_t v9 = sub_1DFDFDD20();
  uint64_t v11 = v10;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v12 = sub_1DFDFD220();
  LOBYTE(v8) = sub_1DEAAB55C(v9, v11, v12);
  swift_bridgeObjectRelease();
  if (v8 & 1) == 0 || (uint64_t result = sub_1DEAAB55C(v9, v11, a3), (result))
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_5:
    *a4 = 0;
    a4[1] = 0;
    return result;
  }
  *a4 = v9;
  a4[1] = v11;
  return result;
}

id sub_1DF19A900@<X0>(id *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id result = objc_msgSend(*a1, sel_UMCCanonicalID);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_1DFDFDD20();
    uint64_t v9 = v8;

    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v10 = sub_1DFDFD220();
    LOBYTE(v6) = sub_1DEAAB55C(v7, v9, v10);
    id result = (id)swift_bridgeObjectRelease();
    if (v6)
    {
      *a3 = v7;
      a3[1] = v9;
      return result;
    }
    id result = (id)swift_bridgeObjectRelease();
  }
  *a3 = 0;
  a3[1] = 0;
  return result;
}

uint64_t sub_1DF19A9CC()
{
  return sub_1DF19A718();
}

void *sub_1DF19A9D4(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DE9DB9D8(v8);
  swift_bridgeObjectRelease();
  uint64_t v20 = a2;
  uint64_t v21 = v9;
  uint64_t v10 = sub_1DF194270((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1DEE49DA4, (uint64_t)v19, a1);
  uint64_t v11 = swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    MEMORY[0x1F4188790](v11);
    void v18[2] = a2;
    uint64_t v13 = sub_1DF194270((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1DF19AB88, (uint64_t)v18, a1);
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1DE9DB9D8((uint64_t)v13);
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DEBE19C0(v15, v14);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (v10[2])
  {
    sub_1DF19ABEC(a3, (uint64_t (*)(void))type metadata accessor for SportsSyncFavoritesFetchResult);
    __swift_destroy_boxed_opaque_existential_1(a2);
  }
  else
  {
    uint64_t v16 = *(void *)(v12 + 16);
    sub_1DF19ABEC(a3, (uint64_t (*)(void))type metadata accessor for SportsSyncFavoritesFetchResult);
    __swift_destroy_boxed_opaque_existential_1(a2);
    if (!v16)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v10;
}

id sub_1DF19AB88@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DF19A900(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1DF19ABA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF19ABEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DF19AC4C(uint64_t a1)
{
}

void sub_1DF19AC6C(uint64_t a1)
{
}

void sub_1DF19AC8C(uint64_t a1)
{
}

void sub_1DF19ACAC()
{
  if (!qword_1EAC32430)
  {
    type metadata accessor for SearchMoreSectionDescriptor();
    type metadata accessor for SearchMoreModel(255);
    sub_1DF19ABA4(&qword_1EAC24D20, (void (*)(uint64_t))type metadata accessor for SearchMoreSectionDescriptor);
    sub_1DF19ABA4((unint64_t *)&unk_1EAC28C40, (void (*)(uint64_t))type metadata accessor for SearchMoreModel);
    unint64_t v0 = sub_1DFDF5AD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC32430);
    }
  }
}

void sub_1DF19AD98(uint64_t a1)
{
}

uint64_t sub_1DF19ADE0()
{
  return sub_1DF19ABA4(&qword_1EAC291E0, (void (*)(uint64_t))sub_1DF19ACAC);
}

void sub_1DF19AE14(uint64_t a1)
{
}

void sub_1DF19AE34(uint64_t a1)
{
}

#error "1DF19AF14: call analysis failed (funcsize=56)"

void sub_1DF19AF34(uint64_t a1)
{
}

void sub_1DF19AF54(uint64_t a1)
{
}

void sub_1DF19AF74(uint64_t a1)
{
}

uint64_t sub_1DF19AFBC()
{
  return sub_1DF19ABA4((unint64_t *)&unk_1EBAEC350, (void (*)(uint64_t))sub_1DECE5588);
}

void sub_1DF19AFF0(uint64_t a1)
{
}

void sub_1DF19B010(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for SportsSyncToWatchlistChangeSet()
{
  return &type metadata for SportsSyncToWatchlistChangeSet;
}

void sub_1DF19B040(uint64_t a1)
{
}

uint64_t sub_1DF19B088()
{
  return sub_1DF19ABA4(&qword_1EAC21038, (void (*)(uint64_t))sub_1DEE567D4);
}

void sub_1DF19B0BC(uint64_t a1)
{
}

void sub_1DF19B104(uint64_t a1)
{
}

void sub_1DF19B124(uint64_t a1)
{
}

uint64_t sub_1DF19B16C()
{
  return sub_1DF19ABA4(&qword_1EAC25508, (void (*)(uint64_t))sub_1DEE568C0);
}

void sub_1DF19B1A0(uint64_t a1)
{
}

uint64_t sub_1DF19B1E8()
{
  return sub_1DF19ABA4(&qword_1EAC21E20, (void (*)(uint64_t))sub_1DEE569AC);
}

unint64_t SearchContentType.init(rawValue:)(unint64_t a1)
{
  return sub_1DEE93B44(a1);
}

unint64_t sub_1DF19B240()
{
  unint64_t result = qword_1EAC29218;
  if (!qword_1EAC29218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29218);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchContentType()
{
  return &type metadata for SearchContentType;
}

uint64_t sub_1DF19B2A4()
{
  sub_1DFDF8730();
  sub_1DFDF8720();
  sub_1DF19ACAC();
  sub_1DFDF5A50();
  if (v3)
  {
    sub_1DFDF7310();
    swift_dynamicCast();
  }
  else
  {
    sub_1DE9E4C20((uint64_t)v2);
  }
  type metadata accessor for SearchMoreFeedServiceConfig();
  sub_1DEACFF64((unint64_t *)&qword_1EBAC5810, (void (*)(uint64_t))type metadata accessor for SearchMoreFeedServiceConfig);
  uint64_t v0 = sub_1DFDF8710();
  swift_release();
  swift_release();
  return v0;
}

uint64_t *sub_1DF19B3B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = type metadata accessor for ChannelSectionsGroupModel();
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (uint64_t *)((char *)v7 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v9 + 24);
    void v10[2] = *(uint64_t *)((char *)a2 + v9 + 16);
    v10[3] = v13;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v9 + 40);
    v10[4] = *(uint64_t *)((char *)a2 + v9 + 32);
    v10[5] = v14;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v9 + 48);
    uint64_t v15 = *(uint64_t *)((char *)a2 + v9 + 56);
    uint64_t v34 = v8;
    v10[6] = v16;
    v10[7] = v15;
    uint64_t v17 = *(int *)(type metadata accessor for ChannelSectionsGroupSectionModel() + 40);
    uint64_t v31 = &v11[v17];
    uint64_t v32 = (char *)v10 + v17;
    uint64_t v18 = sub_1DFDE7220();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v30(v32, v31, v18);
    *(uint64_t *)((char *)v7 + *(int *)(v34 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v34 + 24));
    uint64_t v19 = a3[6];
    *(uint64_t *)((char *)v7 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v20 = *(void **)((char *)a2 + v19);
    *(uint64_t *)((char *)v7 + v19) = (uint64_t)v20;
    uint64_t v21 = a3[7];
    uint64_t v22 = a3[8];
    unint64_t v23 = *(void **)((char *)a2 + v21);
    *(uint64_t *)((char *)v7 + v21) = (uint64_t)v23;
    uint64_t v35 = (char *)v7 + v22;
    unint64_t v33 = (char *)a2 + v22;
    uint64_t v24 = sub_1DFDF9170();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v20;
    id v27 = v23;
    v25(v35, v33, v24);
    uint64_t v28 = a3[10];
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v7 + v28) = *(uint64_t *)((char *)a2 + v28);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1DF19B5D4(uint64_t a1, int *a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ChannelSectionsGroupModel() + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ChannelSectionsGroupSectionModel() + 40);
  uint64_t v6 = sub_1DFDE7220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = sub_1DFDF9170();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1DF19B720(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v31 = type metadata accessor for ChannelSectionsGroupModel();
  uint64_t v6 = *(int *)(v31 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  uint64_t v10 = *(void *)((char *)a2 + v6 + 24);
  _OWORD v7[2] = *(void *)((char *)a2 + v6 + 16);
  v7[3] = v10;
  uint64_t v11 = *(void *)((char *)a2 + v6 + 40);
  v7[4] = *(void *)((char *)a2 + v6 + 32);
  v7[5] = v11;
  uint64_t v13 = *(void *)((char *)a2 + v6 + 48);
  uint64_t v12 = *(void *)((char *)a2 + v6 + 56);
  v7[6] = v13;
  v7[7] = v12;
  uint64_t v14 = *(int *)(type metadata accessor for ChannelSectionsGroupSectionModel() + 40);
  uint64_t v28 = &v8[v14];
  uint64_t v29 = (char *)v7 + v14;
  uint64_t v15 = sub_1DFDE7220();
  id v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v27(v29, v28, v15);
  *(void *)((char *)a1 + *(int *)(v31 + 24)) = *(void *)((char *)a2 + *(int *)(v31 + 24));
  uint64_t v16 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v17 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v17;
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = *(void **)((char *)a2 + v18);
  *(void *)((char *)a1 + v18) = v20;
  uint64_t v32 = (char *)a1 + v19;
  uint64_t v30 = (char *)a2 + v19;
  uint64_t v21 = sub_1DFDF9170();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = v17;
  id v24 = v20;
  v22(v32, v30, v21);
  uint64_t v25 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DF19B8F8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for ChannelSectionsGroupModel();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = *(void *)((char *)a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v8[4] = v9[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v8[5] = v9[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  void v8[6] = v9[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[7] = v9[7];
  uint64_t v10 = *(int *)(type metadata accessor for ChannelSectionsGroupSectionModel() + 40);
  uint64_t v11 = (char *)v8 + v10;
  uint64_t v12 = (char *)v9 + v10;
  uint64_t v13 = sub_1DFDE7220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[6];
  uint64_t v15 = *(void **)((char *)a2 + v14);
  uint64_t v16 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = v15;
  id v17 = v15;

  uint64_t v18 = a3[7];
  uint64_t v19 = *(void **)((char *)a2 + v18);
  uint64_t v20 = *(void **)((char *)a1 + v18);
  *(void *)((char *)a1 + v18) = v19;
  id v21 = v19;

  uint64_t v22 = a3[8];
  id v23 = (char *)a1 + v22;
  id v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1DFDF9170();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1DF19BB34(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for ChannelSectionsGroupModel();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  long long v10 = *(_OWORD *)((char *)a2 + v7 + 16);
  *uint64_t v8 = *(_OWORD *)((char *)a2 + v7);
  v8[1] = v10;
  long long v11 = *(_OWORD *)((char *)a2 + v7 + 48);
  void v8[2] = *(_OWORD *)((char *)a2 + v7 + 32);
  v8[3] = v11;
  uint64_t v12 = *(int *)(type metadata accessor for ChannelSectionsGroupSectionModel() + 40);
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1DFDE7220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v16 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1DFDF9170();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  return a1;
}

void *sub_1DF19BC74(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for ChannelSectionsGroupModel();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v9[3];
  void v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  void v8[4] = v9[4];
  swift_unknownObjectRelease();
  v8[5] = v9[5];
  swift_unknownObjectRelease();
  void v8[6] = v9[6];
  swift_bridgeObjectRelease();
  v8[7] = v9[7];
  uint64_t v12 = *(int *)(type metadata accessor for ChannelSectionsGroupSectionModel() + 40);
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (char *)v9 + v12;
  uint64_t v15 = sub_1DFDE7220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[6];
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);

  uint64_t v18 = a3[7];
  uint64_t v19 = *(void **)((char *)a1 + v18);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);

  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1DFDF9170();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_unknownObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF19BE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF19BE54);
}

uint64_t sub_1DF19BE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ChannelSectionsGroupModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1DFDF9170();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1DF19BF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF19BF94);
}

uint64_t sub_1DF19BF94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ChannelSectionsGroupModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1DFDF9170();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for ChannelHeroServiceRequest()
{
  uint64_t result = qword_1EBACC528;
  if (!qword_1EBACC528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF19C10C()
{
  uint64_t result = type metadata accessor for ChannelSectionsGroupModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DFDF9170();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DF19C204@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v25 = a6;
  id v26 = a7;
  uint64_t v12 = sub_1DFDFBBA0();
  if (*(void *)(a1 + 16) && (unint64_t v14 = sub_1DEA6D930(v12, v13), (v15 & 1) != 0))
  {
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v14);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1DF19D2C8(0, (unint64_t *)&unk_1EBAF6EC0, type metadata accessor for AudioFeedModel, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = *(void *)(type metadata accessor for AudioFeedModel(0) - 8);
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1DFE0B250;
    *(void *)(v19 + v18) = v16;
    uint64_t result = swift_storeEnumTagMultiPayload();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1DFDFBBC0();
    uint64_t v22 = sub_1DEFF6654(v21);
    uint64_t v23 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v23);
    _OWORD v24[2] = a2;
    v24[3] = a3;
    v24[4] = a4;
    v24[5] = a5;
    v24[6] = v25;
    uint64_t v19 = sub_1DEFC6628((void (*)(uint64_t *__return_ptr, uint64_t))sub_1DF19D2A4, (uint64_t)v24, v22);
    uint64_t result = swift_bridgeObjectRelease();
  }
  *id v26 = v19;
  return result;
}

uint64_t sub_1DF19C418@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v38 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a5;
  unint64_t v34 = a2;
  uint64_t v35 = a4;
  unint64_t v39 = a7;
  sub_1DF19D2C8(0, qword_1EBAAA830, type metadata accessor for AudioFeedModel, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = type metadata accessor for AudioFeedModel(0);
  uint64_t v33 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v32 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDFC900();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DFDFB0F0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v16, v13) == *MEMORY[0x1E4F815D0])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    uint64_t v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    MEMORY[0x1F4188790](v21);
    unint64_t v22 = v34;
    uint64_t v23 = v35;
    *(&v31 - 6) = v36;
    *(&v31 - 5) = v23;
    uint64_t v24 = v38;
    *(&v31 - 4) = v37;
    *(&v31 - 3) = v24;
    *(&v31 - 2) = (uint64_t)v20;
    uint64_t v25 = sub_1DEB04490((void (*)(uint64_t *))sub_1DF19D400, (uint64_t)(&v31 - 8), v22, (uint64_t)v40);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    sub_1DF19CA40(a1, v35, v37, v38, (uint64_t)v10);
    uint64_t v27 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v10, 1, v11) == 1)
    {
      uint64_t result = sub_1DF19D32C((uint64_t)v10, qword_1EBAAA830, type metadata accessor for AudioFeedModel);
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v28 = (uint64_t)v10;
      uint64_t v29 = v32;
      sub_1DF19D39C(v28, v32);
      sub_1DF19D2C8(0, (unint64_t *)&unk_1EBAF6EC0, type metadata accessor for AudioFeedModel, MEMORY[0x1E4FBBE00]);
      unint64_t v30 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1DFE0B250;
      uint64_t result = sub_1DF19D39C(v29, v25 + v30);
    }
  }
  *unint64_t v39 = v25;
  return result;
}

uint64_t sub_1DF19C878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v15[1] = a3;
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7A860];
  sub_1DF19D2C8(0, &qword_1EBAA8660, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)v15 - v9;
  sub_1DEAB957C();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DFE0B750;
  *(void *)(v11 + 32) = a4;
  *(void *)(v11 + 40) = a5;
  swift_bridgeObjectRetain();
  *(void *)(v11 + 48) = sub_1DFDFB0E0();
  *(void *)(v11 + 56) = v12;
  sub_1DFDFA490();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1DFDF6490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  sub_1DFDF7870();
  swift_bridgeObjectRelease();
  sub_1DF19D32C((uint64_t)v10, &qword_1EBAA8660, v7);
  type metadata accessor for AudioFeedModel(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DF19CA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  sub_1DEA8F08C();
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v45 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDFAE30();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v42 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF19D2C8(0, &qword_1EBAA8660, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v41 - v12;
  sub_1DEA8E984();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DFDFC900();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v22 = (id *)((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = *(void (**)(id *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v41 = a1;
  v23(v22, a1, v19);
  int v24 = (*(uint64_t (**)(id *, uint64_t))(v20 + 88))(v22, v19);
  if (v24 != *MEMORY[0x1E4F81600])
  {
    if (v24 == *MEMORY[0x1E4F815E8])
    {
      (*(void (**)(id *, uint64_t))(v20 + 96))(v22, v19);

LABEL_14:
      uint64_t v30 = type metadata accessor for AudioFeedModel(0);
      uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
      uint64_t v28 = a5;
      uint64_t v29 = 1;
      return v27(v28, v29, 1, v30);
    }
    if (v24 == *MEMORY[0x1E4F815E0])
    {
      (*(void (**)(id *, uint64_t))(v20 + 96))(v22, v19);
      sub_1DFDF7810();
      swift_unknownObjectRelease();
      uint64_t v26 = type metadata accessor for AudioFeedModel(0);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
      uint64_t v28 = a5;
      goto LABEL_8;
    }
    if (v24 != *MEMORY[0x1E4F81608])
    {
      if (v24 == *MEMORY[0x1E4F815F8] || v24 == *MEMORY[0x1E4F815C8])
      {
        (*(void (**)(id *, uint64_t))(v20 + 96))(v22, v19);
        swift_unknownObjectRelease();
        goto LABEL_14;
      }
      if (v24 == *MEMORY[0x1E4F815F0])
      {
        (*(void (**)(id *, uint64_t))(v20 + 96))(v22, v19);
        uint64_t v33 = v42;
        uint64_t v32 = v43;
        unint64_t v34 = v22;
        uint64_t v35 = v44;
        (*(void (**)(char *, id *, uint64_t))(v43 + 32))(v42, v34, v44);
        uint64_t v36 = v45;
        sub_1DFDF77A0();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v35);
        (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(a5, v36, v47);
        uint64_t v26 = type metadata accessor for AudioFeedModel(0);
        goto LABEL_7;
      }
      if (v24 != *MEMORY[0x1E4F815D0])
      {
        sub_1DF19D2C8(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1DFE0B250;
        uint64_t v51 = 0;
        unint64_t v52 = 0xE000000000000000;
        sub_1DFDFFB10();
        uint64_t v38 = v51;
        unint64_t v39 = v52;
        *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v37 + 64) = sub_1DEA08668();
        *(void *)(v37 + 32) = v38;
        *(void *)(v37 + 40) = v39;
        MEMORY[0x1E01DB6A0]("Unknown format item %{public}@ encountered. Please update this switch statement to handle the new case.", 103, 2, v37);
        swift_bridgeObjectRelease();
        uint64_t v40 = type metadata accessor for AudioFeedModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a5, 1, 1, v40);
        return (*(uint64_t (**)(id *, uint64_t))(v20 + 8))(v22, v19);
      }
    }
    (*(void (**)(id *, uint64_t))(v20 + 8))(v22, v19);
    goto LABEL_14;
  }
  (*(void (**)(id *, uint64_t))(v20 + 96))(v22, v19);
  uint64_t v25 = sub_1DFDF6490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 1, 1, v25);
  sub_1DFDF7870();
  swift_unknownObjectRelease();
  sub_1DF19D32C((uint64_t)v13, &qword_1EBAA8660, MEMORY[0x1E4F7A860]);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a5, v18, v15);
  uint64_t v26 = type metadata accessor for AudioFeedModel(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = a5;
LABEL_8:
  uint64_t v29 = 0;
  uint64_t v30 = v26;
  return v27(v28, v29, 1, v30);
}

uint64_t type metadata accessor for AudioFeedModelFactory()
{
  return self;
}

uint64_t sub_1DF19D1F0()
{
  return sub_1DF19D25C(&qword_1EBAAA7D0, (void (*)(uint64_t))type metadata accessor for AudioFeedModel);
}

uint64_t sub_1DF19D238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1DF19CA40(a1, a2, a3, a4, a5);
}

uint64_t sub_1DF19D25C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF19D2A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DF19C418(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

void sub_1DF19D2C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF19D32C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DF19D2C8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF19D39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioFeedModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF19D400(uint64_t a1)
{
  return sub_1DF19C878(a1, v1[2], v1[3], v1[4], v1[5]);
}

id sub_1DF19D428(int a1, id a2)
{
  if (objc_msgSend(a2, sel_sportsType) == (id)3
    && ((unint64_t)objc_msgSend(a2, sel_sportsLeagueType) & 0xFFFFFFFFFFFFFFFELL) != 2)
  {
    uint64_t v13 = (void *)sub_1DFDFEB90();
    uint64_t v14 = sub_1DFDFF440();

    return (id)v14;
  }
  else
  {
    int v3 = (void *)sub_1DFDFEB90();
    uint64_t v4 = (void *)sub_1DFDFF440();

    objc_msgSend(v4, sel_ts_luminance);
    double v6 = v5;

    sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
    sub_1DFDFF490();
    double v8 = v7;
    id v9 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    if (v8 >= v6)
    {
      double v10 = 0.24;
      double v11 = 0.26;
    }
    else
    {
      double v10 = 0.92;
      double v11 = 0.96;
    }
    return objc_msgSend(v9, sel_initWithRed_green_blue_alpha_, v10, v10, v11, 0.6);
  }
}

uint64_t type metadata accessor for NameLogoMastheadViewStyler()
{
  return self;
}

uint64_t sub_1DF19D584(void *a1, void *a2, char a3)
{
  id v5 = objc_msgSend(a1, sel_horizontalSizeClass);
  sub_1DF70D8E4(a2);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  char v8 = (v7 != 0) | a3;
  id v9 = self;
  double v10 = 48.0;
  if (v8) {
    double v10 = 34.0;
  }
  double v11 = 42.0;
  if (v8) {
    double v11 = 28.0;
  }
  if (v5 != (id)2) {
    double v10 = v11;
  }
  id v12 = objc_msgSend(v9, sel_systemFontOfSize_weight_, v10, *MEMORY[0x1E4FB09B8]);
  uint64_t v13 = sub_1DFDFF370();

  return v13;
}

id sub_1DF19D66C(uint64_t a1, void *a2, void *a3, char a4)
{
  id v5 = (void *)sub_1DF19D584(a3, a2, a4);
  id v6 = objc_msgSend(a2, sel_sportsPrimaryName);
  if (!v6) {
    id v6 = objc_msgSend(a2, sel_name);
  }
  sub_1DFDFDD20();

  sub_1DEA65970(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  char v8 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v9 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  *(void *)(inited + 40) = v5;
  double v10 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  id v11 = v8;
  id v12 = v5;
  id v13 = v10;
  uint64_t v14 = (void *)sub_1DFDFEB90();
  uint64_t v15 = sub_1DFDFF440();

  *(void *)(inited + 104) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
  *(void *)(inited + 80) = v15;
  sub_1DEA65870(inited);
  id v16 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v17 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DEA66BC8();
  uint64_t v18 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

id sub_1DF19D878(void *a1, void *a2)
{
  id v3 = objc_msgSend(a1, sel_horizontalSizeClass);
  if (objc_msgSend(a2, sel_sportsType) == (id)3
    && ((unint64_t)objc_msgSend(a2, sel_sportsLeagueType) & 0xFFFFFFFFFFFFFFFELL) != 2)
  {
    char v8 = self;
    double v9 = *MEMORY[0x1E4FB09B8];
    if (v3 == (id)2) {
      id v10 = objc_msgSend(v8, sel_systemFontOfSize_weight_, 20.0, v9);
    }
    else {
      id v10 = objc_msgSend(v8, sel_systemFontOfSize_weight_, 15.0, v9);
    }
    id v11 = v10;
    uint64_t v12 = sub_1DFDFF370();

    return (id)v12;
  }
  else
  {
    uint64_t v4 = self;
    double v5 = *MEMORY[0x1E4FB09D8];
    if (v3 == (id)2) {
      id v6 = objc_msgSend(v4, sel_systemFontOfSize_weight_, 15.0, v5);
    }
    else {
      id v6 = objc_msgSend(v4, sel_systemFontOfSize_weight_, 12.0, v5);
    }
    return v6;
  }
}

id sub_1DF19D9B4(int a1, void *a2, void *a3)
{
  sub_1DF70D8E4(a2);
  id v7 = v6;
  if (v6)
  {
    id v8 = sub_1DF19D878(a3, a2);
    id v9 = sub_1DF19D428(a1, a2);
    sub_1DEA65970(0, (unint64_t *)&qword_1EBABB780, (uint64_t (*)(uint64_t))sub_1DEABCAE0, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
    id v11 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v12 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(inited + 40) = v8;
    id v13 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(inited + 64) = v12;
    *(void *)(inited + 72) = v13;
    *(void *)(inited + 104) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB060);
    *(void *)(inited + 80) = v9;
    id v14 = v11;
    id v15 = v8;
    id v16 = v13;
    id v17 = v9;
    sub_1DEA65870(inited);
    id v18 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v19 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DEA66BC8();
    uint64_t v20 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);
  }
  return v7;
}

double sub_1DF19DB90(int a1, id a2, void *a3)
{
  sub_1DF70D6C8(a2, a3, (uint64_t)v11);
  uint64_t v5 = v12;
  sub_1DEB6F4C0((uint64_t)v11);
  if (!v5) {
    return 0.0;
  }
  id v6 = objc_msgSend(a3, sel_horizontalSizeClass);
  sub_1DF70D8E4(a2);
  if (v7)
  {
    swift_bridgeObjectRelease();
    BOOL v8 = v6 == (id)1;
    double result = 96.0;
    double v10 = 80.0;
  }
  else
  {
    BOOL v8 = v6 == (id)1;
    double result = 80.0;
    double v10 = 64.0;
  }
  if (v8) {
    return v10;
  }
  return result;
}

double sub_1DF19DC48(int a1, id a2, void *a3)
{
  sub_1DF70D6C8(a2, a3, (uint64_t)v13);
  uint64_t v5 = v14;
  sub_1DEB6F4C0((uint64_t)v13);
  if (!v5) {
    return 0.0;
  }
  objc_msgSend(a3, sel_horizontalSizeClass);
  sub_1DF70D8E4(a2);
  if (v6) {
    swift_bridgeObjectRelease();
  }
  sub_1DF70D8E4(a2);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (!v8) {
    return 12.0;
  }
  if (objc_msgSend(a3, sel_horizontalSizeClass) == (id)1)
  {
    id v9 = objc_msgSend(a2, sel_sportsTheme);
    double v10 = 4.0;
    if (!v9) {
      return v10;
    }
    goto LABEL_11;
  }
  id v9 = objc_msgSend(a2, sel_sportsTheme);
  double v10 = 8.0;
  if (v9)
  {
LABEL_11:
    id v11 = objc_msgSend(v9, sel_sportsLogoMastheadHorizontalPaddingOffset);
    swift_unknownObjectRelease();
    return v10 + (double)(uint64_t)v11;
  }
  return v10;
}

uint64_t FollowingMySportsModel.identifier.getter()
{
  return 0x7374726F7053796DLL;
}

void sub_1DF19DDB8()
{
  sub_1DEB69898();
  uint64_t v0 = (void *)sub_1DFDFF330();
  id v1 = objc_msgSend(self, sel_configurationWithFont_, v0);

  uint64_t v2 = (void *)sub_1DFDFDCE0();
  id v3 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v2, v1);

  if (v3)
  {
    objc_msgSend(v3, sel_imageWithRenderingMode_, 2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t static FollowingMySportsModel.Identifier.mySports.getter()
{
  return 0x7374726F7053796DLL;
}

uint64_t sub_1DF19DED4()
{
  return 0x7374726F7053796DLL;
}

void sub_1DF19DEEC()
{
}

uint64_t FollowingMySportsModel.hashValue.getter()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF19DF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DF19E3D0(&qword_1EAC29228);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t FollowingMySportsModel.canPreview.getter()
{
  return 0;
}

id FollowingMySportsModel.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  id result = objc_msgSend(self, sel_nss_NewsURLForMySports);
  if (result)
  {
    swift_bridgeObjectRetain();
    sub_1DFDF5730();
    uint64_t v3 = sub_1DFDF5740();
    uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    return (id)v4(a1, 0, 1, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DF19E0B4@<X0>(uint64_t a1@<X8>)
{
  id result = objc_msgSend(self, sel_nss_NewsURLForMySports);
  if (result)
  {
    swift_bridgeObjectRetain();
    sub_1DFDF5730();
    uint64_t v3 = sub_1DFDF5740();
    uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    return (id)v4(a1, 0, 1, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FollowingMySportsModel.isMovable.getter()
{
  return 0;
}

uint64_t _s7NewsUI222FollowingMySportsModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for FollowingMySportsModel() + 36);
  unint64_t v5 = *(char *)(a1 + v4 + 2);
  int v6 = *(unsigned __int16 *)(a1 + v4) | (v5 << 16);
  int v7 = *(unsigned __int16 *)(a2 + v4) | (*(char *)(a2 + v4 + 2) << 16);
  switch((v5 >> 5) & 3)
  {
    case 1uLL:
      if ((v7 & 0x600000) != 0x200000) {
        goto LABEL_13;
      }
      LOBYTE(v8) = (v7 ^ v6) == 0;
      return v8 & 1;
    case 2uLL:
      if ((v7 & 0x600000) != 0x400000) {
        goto LABEL_13;
      }
      LOBYTE(v8) = ((v6 & 1) == 0) ^ v7;
      return v8 & 1;
    case 3uLL:
      if (v7 != 6291456) {
        goto LABEL_13;
      }
      LOBYTE(v8) = 1;
      return v8 & 1;
    default:
      if ((v7 & 0x600000) != 0 || v7 != v6) {
        goto LABEL_13;
      }
      if ((v6 & 0xFF00) == 0x200)
      {
        if (BYTE1(v7) != 2)
        {
LABEL_13:
          LOBYTE(v8) = 0;
          return v8 & 1;
        }
      }
      else
      {
        LOBYTE(v8) = 0;
        if (BYTE1(v7) == 2 || ((((v6 & 0x100) == 0) ^ ((unsigned __int16)(v7 & 0x100) >> 8)) & 1) == 0) {
          return v8 & 1;
        }
      }
      unsigned int v8 = ((v6 & 0x10000) == 0) ^ ((v7 & 0x10000u) >> 16);
      if (v6 < 0)
      {
        if (v7 >= 0) {
          LOBYTE(v8) = 0;
        }
      }
      else if (v7 < 0)
      {
        LOBYTE(v8) = 0;
      }
      return v8 & 1;
  }
}

uint64_t sub_1DF19E2CC()
{
  return sub_1DF19E3D0(&qword_1EAC29228);
}

uint64_t sub_1DF19E300()
{
  return sub_1DF19E3D0(&qword_1EAC29230);
}

uint64_t sub_1DF19E334()
{
  return sub_1DF19E3D0(&qword_1EAC29220);
}

uint64_t sub_1DF19E368()
{
  return sub_1DF19E3D0(&qword_1EAC29238);
}

uint64_t sub_1DF19E39C()
{
  return sub_1DF19E3D0((unint64_t *)&unk_1EAC29240);
}

uint64_t sub_1DF19E3D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FollowingMySportsModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FollowingMySportsModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF19E428);
}

uint64_t sub_1DF19E428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1DEA3C638();
    id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FollowingMySportsModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF19E4EC);
}

uint64_t sub_1DF19E4EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1DEA3C638();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingMySportsModel.Identifier()
{
  return &type metadata for FollowingMySportsModel.Identifier;
}

void sub_1DF19E5A4(void *a1, id a2)
{
  uint64_t v3 = v2;
  if (objc_msgSend(a2, sel_feedConfiguration) == (id)8)
  {
    int v6 = self;
    id v7 = objc_msgSend(v6, sel_clearColor);
    objc_msgSend(a1, sel_setBackgroundColor_, v7);

    id v8 = objc_msgSend(v6, sel_whiteColor);
    uint64_t v9 = &selRef_setTintColor_;
  }
  else
  {
    uint64_t v10 = *(void **)(v2 + 56);
    if (v10)
    {
      id v8 = *(id *)(v2 + 56);
    }
    else
    {
      id v11 = objc_msgSend((id)sub_1DFDFEBA0(), sel_theme);
      swift_unknownObjectRelease();
      if (!v11
        || (uint64_t ObjectType = swift_getObjectType(),
            id v8 = FCFeedTheming.feedDynamicBackgroundColor.getter(ObjectType),
            swift_unknownObjectRelease(),
            !v8))
      {
        id v8 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40))
                               + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                               + 24));
      }
    }
    id v13 = v10;
    uint64_t v9 = &selRef_setBackgroundColor_;
  }
  objc_msgSend(a1, *v9, v8);

  id v14 = objc_msgSend(objc_msgSend(a2, sel_backingTag), sel_theme);
  swift_unknownObjectRelease();
  if (v14)
  {
    id v15 = objc_msgSend(v14, sel_feedControlColor);
    swift_unknownObjectRelease();
    if (v15)
    {
      id v16 = objc_msgSend(objc_msgSend(a2, sel_backingTag), sel_theme);
      swift_unknownObjectRelease();
      if (v16)
      {
        id v17 = objc_msgSend(v16, sel_darkStyleFeedControlColor);
        swift_unknownObjectRelease();
      }
      else
      {
        id v17 = 0;
      }
      id v18 = (id)sub_1DFDFF420();

      objc_msgSend(a1, sel_setTintColor_, v18);
    }
  }
}

uint64_t sub_1DF19E838(void *a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1DF19F098(0, &qword_1EBAD2E70, (uint64_t (*)(uint64_t))sub_1DF19F064, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v18 - v7;
  id v9 = objc_msgSend((id)sub_1DFDFEBA0(), sel_theme);
  swift_unknownObjectRelease();
  if (!v9
    || (uint64_t ObjectType = swift_getObjectType(),
        id v11 = FCFeedTheming.feedDynamicBackgroundColor.getter(ObjectType),
        swift_unknownObjectRelease(),
        !v11))
  {
    id v11 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40))
                            + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                            + 24));
  }
  objc_msgSend(a1, sel_setBackgroundColor_, v11);

  if (a2)
  {
    id v12 = objc_msgSend((id)sub_1DFDFEBA0(), sel_theme);
    swift_unknownObjectRelease();
    if (!v12
      || (uint64_t v13 = swift_getObjectType(),
          id v14 = FCFeedTheming.feedDynamicBackgroundColor.getter(v13),
          swift_unknownObjectRelease(),
          !v14))
    {
      id v14 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40))
                              + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                              + 24));
    }
    objc_msgSend(a2, sel_setBackgroundColor_, v14);
  }
  id v15 = objc_msgSend((id)sub_1DFDFEBA0(), sel_theme);
  swift_unknownObjectRelease();
  if (v15)
  {
    swift_getObjectType();
    FCFeedTheming.feedDynamicBackgroundGradient.getter((uint64_t)v8);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1DF19F064(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  return sub_1DFDF0950();
}

uint64_t sub_1DF19EAB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (objc_msgSend(a1, sel_theme))
  {
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v4 = (uint64_t)FCFeedTheming.feedDynamicControlColor.getter(ObjectType);
    if (!v4)
    {
      if (qword_1EBAD1590 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1DFDF9580();
      __swift_project_value_buffer(v5, (uint64_t)qword_1EBB62AD8);
      uint64_t v4 = sub_1DFDF9560();
    }
    uint64_t v6 = v4;
    uint64_t v7 = (uint64_t)FCFeedTheming.feedDynamicBackgroundColor.getter(ObjectType);
    if (!v7)
    {
      if (qword_1EBAD1590 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1DFDF9580();
      __swift_project_value_buffer(v8, (uint64_t)qword_1EBB62AD8);
      uint64_t v7 = sub_1DFDF9570();
    }
    uint64_t v9 = v7;
    swift_unknownObjectRelease();
    a2[3] = (uint64_t)&type metadata for TagFeedCoverViewStyler;
    a2[4] = sub_1DF19F010();
    uint64_t result = swift_unknownObjectRelease();
    *a2 = 100;
    a2[1] = v6;
    a2[2] = v9;
  }
  else
  {
    if (qword_1EBAD1590 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1DFDF9580();
    uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBB62AD8);
    a2[3] = v11;
    a2[4] = sub_1DF19EFB8();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
    id v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    return v14(boxed_opaque_existential_1, v12, v11);
  }
  return result;
}

uint64_t sub_1DF19ECAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (objc_msgSend(a1, sel_theme))
  {
    uint64_t ObjectType = swift_getObjectType();
    if (!FCFeedTheming.feedDynamicBackgroundColor.getter(ObjectType)) {
      id v5 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40))
    }
                             + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                             + 24));
    if (!FCFeedTheming.feedDynamicControlColor.getter(ObjectType))
    {
      id v9 = FCFeedTheming.feedDynamicBackgroundColor.getter(ObjectType);
      if (v9)
      {
        uint64_t v10 = v9;
        sub_1DFDFF440();
      }
      else
      {
        sub_1DFDF17B0();
      }
    }
    uint64_t v11 = sub_1DFDF17D0();
    uint64_t v12 = MEMORY[0x1E4FAC1C8];
    a2[3] = v11;
    a2[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(a2);
    sub_1DFDF17A0();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_1DFDF17D0();
    uint64_t v7 = MEMORY[0x1E4FAC1C8];
    a2[3] = v6;
    a2[4] = v7;
    __swift_allocate_boxed_opaque_existential_1(a2);
    return sub_1DFDF17C0();
  }
}

uint64_t sub_1DF19EDF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (objc_msgSend(a1, sel_theme))
  {
    uint64_t ObjectType = swift_getObjectType();
    if (!FCFeedTheming.feedDynamicBackgroundColor.getter(ObjectType)) {
      id v5 = objc_retain(*(id *)(*__swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40))
    }
                             + OBJC_IVAR____TtC7NewsUI210BaseStyler_theme
                             + 24));
    if (!FCFeedTheming.feedDynamicControlColor.getter(ObjectType))
    {
      id v9 = FCFeedTheming.feedDynamicBackgroundColor.getter(ObjectType);
      if (v9)
      {
        uint64_t v10 = v9;
        sub_1DFDFF440();
      }
      else
      {
        sub_1DFDF0610();
      }
    }
    uint64_t v11 = sub_1DFDF0630();
    uint64_t v12 = MEMORY[0x1E4FABBF0];
    a2[3] = v11;
    a2[4] = v12;
    __swift_allocate_boxed_opaque_existential_1(a2);
    sub_1DFDF0600();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_1DFDF0630();
    uint64_t v7 = MEMORY[0x1E4FABBF0];
    a2[3] = v6;
    a2[4] = v7;
    __swift_allocate_boxed_opaque_existential_1(a2);
    return sub_1DFDF0620();
  }
}

uint64_t sub_1DF19EF44()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagFeedStyler()
{
  return self;
}

uint64_t sub_1DF19EFA8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  return MEMORY[0x1F41817F8]();
}

unint64_t sub_1DF19EFB8()
{
  unint64_t result = qword_1EBACBC10;
  if (!qword_1EBACBC10)
  {
    sub_1DFDF9580();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBACBC10);
  }
  return result;
}

unint64_t sub_1DF19F010()
{
  unint64_t result = qword_1EBAD9CF0;
  if (!qword_1EBAD9CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9CF0);
  }
  return result;
}

void sub_1DF19F064(uint64_t a1)
{
}

void sub_1DF19F098(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DF19F0FC(void *a1, void *a2)
{
  id v4 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v4);

  objc_msgSend(a1, sel_setAlwaysBounceVertical_, 1);
  objc_msgSend(a1, sel_setKeyboardDismissMode_, 3);
  id v5 = objc_msgSend(a2, sel_alternativeFeedDescriptor);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_feedConfiguration);

    if (v7 == (id)7)
    {
      objc_msgSend(a1, sel_setContentInsetAdjustmentBehavior_, 3);
      objc_msgSend(a1, sel_setScrollEnabled_, 0);
    }
  }
}

uint64_t sub_1DF19F20C()
{
  if (qword_1EBAC0150 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC7NewsUI235PuzzleStreakBackgroundWorkerManager_workerFactory), *(void *)(v0 + OBJC_IVAR____TtC7NewsUI235PuzzleStreakBackgroundWorkerManager_workerFactory + 24));
  uint64_t v1 = sub_1DF429360();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    id v4 = (void **)(v0 + OBJC_IVAR____TtC7NewsUI235PuzzleStreakBackgroundWorkerManager_registeredWorkers);
    do
    {
      long long v10 = *(_OWORD *)(v1 + 16 * v3 + 32);
      swift_unknownObjectRetain();
      sub_1DFDED8B0();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      swift_beginAccess();
      id v5 = *v4;
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      void *v4 = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        id v5 = sub_1DEE18188(0, v5[2] + 1, 1, v5);
        void *v4 = v5;
      }
      unint64_t v8 = v5[2];
      unint64_t v7 = v5[3];
      if (v8 >= v7 >> 1)
      {
        id v5 = sub_1DEE18188((void *)(v7 > 1), v8 + 1, 1, v5);
        void *v4 = v5;
      }
      ++v3;
      _OWORD v5[2] = v8 + 1;
      *(_OWORD *)&v5[2 * v8 + 4] = v10;
      swift_endAccess();
      swift_unknownObjectRelease();
    }
    while (v2 != v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1DF19F674(char a1)
{
  unint64_t result = 0x6F6C6F6E6F726863;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000024;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF19F784()
{
  return sub_1DED60330();
}

uint64_t sub_1DF19F790()
{
  return sub_1DF3DBB20();
}

uint64_t sub_1DF19F798()
{
  return sub_1DED60330();
}

uint64_t sub_1DF19F7A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DF19FB2C();
  *a1 = result;
  return result;
}

unint64_t sub_1DF19F7D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DF19F674(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DF19F7FC()
{
  return sub_1DFDFE1D0();
}

uint64_t sub_1DF19F85C()
{
  return sub_1DFDFE180();
}

uint64_t sub_1DF19F8AC(unsigned __int8 *a1, char *a2)
{
  return sub_1DF2A07A0(*a1, *a2);
}

unint64_t sub_1DF19F8B8(char a1)
{
  unint64_t result = 0x6F6C6F6E6F726863;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000024;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DF19F9C8()
{
  return sub_1DF19F8B8(*v0);
}

unsigned char *storeEnumTagSinglePayload for SportsScoreSortingSelectOrderBy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF19FA9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsScoreSortingSelectOrderBy()
{
  return &type metadata for SportsScoreSortingSelectOrderBy;
}

unint64_t sub_1DF19FAD8()
{
  unint64_t result = qword_1EAC29270;
  if (!qword_1EAC29270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29270);
  }
  return result;
}

uint64_t sub_1DF19FB2C()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

unint64_t sub_1DF19FB78()
{
  unint64_t result = qword_1EBAE2CA8;
  if (!qword_1EBAE2CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAE2CA8);
  }
  return result;
}

uint64_t sub_1DF19FBCC()
{
  swift_retain();
  return swift_retain();
}

uint64_t destroy for FollowingDislikedLayoutModel()
{
  return sub_1DF19FCC4();
}

uint64_t sub_1DF19FCC4()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FollowingDislikedLayoutModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v65 = a2[9];
  uint64_t v66 = a2[8];
  uint64_t v63 = a2[11];
  uint64_t v64 = a2[10];
  uint64_t v61 = a2[13];
  uint64_t v62 = a2[12];
  uint64_t v59 = a2[15];
  uint64_t v60 = a2[14];
  uint64_t v57 = a2[17];
  uint64_t v58 = a2[16];
  uint64_t v55 = a2[19];
  uint64_t v56 = a2[18];
  uint64_t v53 = a2[21];
  uint64_t v54 = a2[20];
  uint64_t v51 = a2[23];
  uint64_t v52 = a2[22];
  uint64_t v49 = a2[25];
  uint64_t v50 = a2[24];
  uint64_t v47 = a2[27];
  uint64_t v48 = a2[26];
  uint64_t v46 = a2[28];
  uint64_t v45 = a2[29];
  uint64_t v44 = a2[30];
  uint64_t v43 = a2[31];
  uint64_t v42 = a2[32];
  uint64_t v41 = a2[33];
  uint64_t v40 = a2[34];
  uint64_t v13 = a2[35];
  uint64_t v14 = a2[36];
  uint64_t v15 = a2[37];
  uint64_t v16 = a2[38];
  uint64_t v17 = a2[39];
  uint64_t v18 = a2[40];
  uint64_t v19 = a2[41];
  uint64_t v20 = a2[42];
  uint64_t v3 = a2[44];
  uint64_t v21 = a2[43];
  uint64_t v22 = a2[45];
  uint64_t v23 = a2[46];
  uint64_t v24 = a2[47];
  uint64_t v25 = a2[48];
  uint64_t v26 = a2[49];
  uint64_t v27 = a2[50];
  uint64_t v28 = a2[51];
  uint64_t v29 = a2[52];
  uint64_t v30 = a2[53];
  uint64_t v31 = a2[54];
  uint64_t v32 = a2[55];
  uint64_t v33 = a2[56];
  uint64_t v34 = a2[57];
  uint64_t v35 = a2[58];
  uint64_t v36 = a2[59];
  uint64_t v37 = a2[60];
  uint64_t v38 = a2[61];
  __int16 v39 = *((_WORD *)a2 + 248);
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  sub_1DF19FBCC();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v66;
  *(void *)(a1 + 72) = v65;
  *(void *)(a1 + 80) = v64;
  *(void *)(a1 + 88) = v63;
  *(void *)(a1 + 96) = v62;
  *(void *)(a1 + 104) = v61;
  *(void *)(a1 + 112) = v60;
  *(void *)(a1 + 120) = v59;
  *(void *)(a1 + 128) = v58;
  *(void *)(a1 + 136) = v57;
  *(void *)(a1 + 144) = v56;
  *(void *)(a1 + 152) = v55;
  *(void *)(a1 + 160) = v54;
  *(void *)(a1 + 168) = v53;
  *(void *)(a1 + 176) = v52;
  *(void *)(a1 + 184) = v51;
  *(void *)(a1 + 192) = v50;
  *(void *)(a1 + 200) = v49;
  *(void *)(a1 + 208) = v48;
  *(void *)(a1 + 216) = v47;
  *(void *)(a1 + 224) = v46;
  *(void *)(a1 + 232) = v45;
  *(void *)(a1 + 240) = v44;
  *(void *)(a1 + 248) = v43;
  *(void *)(a1 + 256) = v42;
  *(void *)(a1 + 264) = v41;
  *(void *)(a1 + 272) = v40;
  *(void *)(a1 + 280) = v13;
  *(void *)(a1 + 288) = v14;
  *(void *)(a1 + 296) = v15;
  *(void *)(a1 + 304) = v16;
  *(void *)(a1 + 312) = v17;
  *(void *)(a1 + 320) = v18;
  *(void *)(a1 + 328) = v19;
  *(void *)(a1 + 336) = v20;
  *(void *)(a1 + 344) = v21;
  *(void *)(a1 + 352) = v3;
  *(void *)(a1 + 360) = v22;
  *(void *)(a1 + 368) = v23;
  *(void *)(a1 + 376) = v24;
  *(void *)(a1 + 384) = v25;
  *(void *)(a1 + 392) = v26;
  *(void *)(a1 + 400) = v27;
  *(void *)(a1 + 408) = v28;
  *(void *)(a1 + 416) = v29;
  *(void *)(a1 + 424) = v30;
  *(void *)(a1 + 432) = v31;
  *(void *)(a1 + 440) = v32;
  *(void *)(a1 + 448) = v33;
  *(void *)(a1 + 456) = v34;
  *(void *)(a1 + 464) = v35;
  *(void *)(a1 + 472) = v36;
  *(void *)(a1 + 480) = v37;
  *(void *)(a1 + 488) = v38;
  *(_WORD *)(a1 + 496) = v39;
  return a1;
}

uint64_t assignWithCopy for FollowingDislikedLayoutModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v65 = *a2;
  uint64_t v66 = a2[1];
  uint64_t v63 = a2[3];
  uint64_t v64 = a2[2];
  uint64_t v61 = a2[5];
  uint64_t v62 = a2[4];
  uint64_t v59 = a2[7];
  uint64_t v60 = a2[6];
  uint64_t v57 = a2[9];
  uint64_t v58 = a2[8];
  uint64_t v55 = a2[11];
  uint64_t v56 = a2[10];
  uint64_t v53 = a2[13];
  uint64_t v54 = a2[12];
  uint64_t v51 = a2[15];
  uint64_t v52 = a2[14];
  uint64_t v49 = a2[17];
  uint64_t v50 = a2[16];
  uint64_t v48 = a2[18];
  uint64_t v47 = a2[19];
  uint64_t v46 = a2[20];
  uint64_t v45 = a2[21];
  uint64_t v44 = a2[22];
  uint64_t v43 = a2[23];
  uint64_t v42 = a2[24];
  uint64_t v41 = a2[25];
  uint64_t v40 = a2[26];
  uint64_t v39 = a2[27];
  uint64_t v38 = a2[28];
  uint64_t v37 = a2[29];
  uint64_t v36 = a2[30];
  uint64_t v35 = a2[31];
  uint64_t v34 = a2[32];
  uint64_t v33 = a2[33];
  uint64_t v32 = a2[34];
  uint64_t v4 = a2[36];
  uint64_t v3 = a2[37];
  uint64_t v6 = a2[38];
  uint64_t v5 = a2[39];
  uint64_t v8 = a2[40];
  uint64_t v7 = a2[41];
  uint64_t v10 = a2[42];
  uint64_t v9 = a2[43];
  uint64_t v11 = a2[44];
  uint64_t v13 = a2[35];
  uint64_t v14 = a2[45];
  uint64_t v15 = a2[46];
  uint64_t v16 = a2[47];
  uint64_t v17 = a2[48];
  uint64_t v18 = a2[49];
  uint64_t v19 = a2[50];
  uint64_t v20 = a2[51];
  uint64_t v21 = a2[52];
  uint64_t v22 = a2[53];
  uint64_t v23 = a2[54];
  uint64_t v24 = a2[55];
  uint64_t v25 = a2[56];
  uint64_t v26 = a2[57];
  uint64_t v27 = a2[58];
  uint64_t v28 = a2[59];
  uint64_t v29 = a2[60];
  uint64_t v30 = a2[61];
  __int16 v31 = *((_WORD *)a2 + 248);
  sub_1DF19FBCC();
  *(void *)a1 = v65;
  *(void *)(a1 + 8) = v66;
  *(void *)(a1 + 16) = v64;
  *(void *)(a1 + 24) = v63;
  *(void *)(a1 + 32) = v62;
  *(void *)(a1 + 40) = v61;
  *(void *)(a1 + 48) = v60;
  *(void *)(a1 + 56) = v59;
  *(void *)(a1 + 64) = v58;
  *(void *)(a1 + 72) = v57;
  *(void *)(a1 + 80) = v56;
  *(void *)(a1 + 88) = v55;
  *(void *)(a1 + 96) = v54;
  *(void *)(a1 + 104) = v53;
  *(void *)(a1 + 112) = v52;
  *(void *)(a1 + 120) = v51;
  *(void *)(a1 + 128) = v50;
  *(void *)(a1 + 136) = v49;
  *(void *)(a1 + 144) = v48;
  *(void *)(a1 + 152) = v47;
  *(void *)(a1 + 160) = v46;
  *(void *)(a1 + 168) = v45;
  *(void *)(a1 + 176) = v44;
  *(void *)(a1 + 184) = v43;
  *(void *)(a1 + 192) = v42;
  *(void *)(a1 + 200) = v41;
  *(void *)(a1 + 208) = v40;
  *(void *)(a1 + 216) = v39;
  *(void *)(a1 + 224) = v38;
  *(void *)(a1 + 232) = v37;
  *(void *)(a1 + 240) = v36;
  *(void *)(a1 + 248) = v35;
  *(void *)(a1 + 256) = v34;
  *(void *)(a1 + 264) = v33;
  *(void *)(a1 + 272) = v32;
  *(void *)(a1 + 280) = v13;
  *(void *)(a1 + 288) = v4;
  *(void *)(a1 + 296) = v3;
  *(void *)(a1 + 304) = v6;
  *(void *)(a1 + 312) = v5;
  *(void *)(a1 + 320) = v8;
  *(void *)(a1 + 328) = v7;
  *(void *)(a1 + 336) = v10;
  *(void *)(a1 + 344) = v9;
  *(void *)(a1 + 352) = v11;
  *(void *)(a1 + 360) = v14;
  *(void *)(a1 + 368) = v15;
  *(void *)(a1 + 376) = v16;
  *(void *)(a1 + 384) = v17;
  *(void *)(a1 + 392) = v18;
  *(void *)(a1 + 400) = v19;
  *(void *)(a1 + 408) = v20;
  *(void *)(a1 + 416) = v21;
  *(void *)(a1 + 424) = v22;
  *(void *)(a1 + 432) = v23;
  *(void *)(a1 + 440) = v24;
  *(void *)(a1 + 448) = v25;
  *(void *)(a1 + 456) = v26;
  *(void *)(a1 + 464) = v27;
  *(void *)(a1 + 472) = v28;
  *(void *)(a1 + 480) = v29;
  *(void *)(a1 + 488) = v30;
  *(_WORD *)(a1 + 496) = v31;
  sub_1DF19FCC4();
  return a1;
}

void *__swift_memcpy498_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F2uLL);
}

uint64_t assignWithTake for FollowingDislikedLayoutModel(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  long long v9 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v9;
  long long v10 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v10;
  long long v11 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v11;
  long long v12 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v12;
  long long v13 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v13;
  long long v14 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v14;
  long long v15 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v15;
  long long v16 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v16;
  long long v17 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v17;
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_WORD *)(a1 + 496) = *(_WORD *)(a2 + 496);
  sub_1DF19FCC4();
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingDislikedLayoutModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFFFFFFF && *(unsigned char *)(a1 + 498)) {
    return (*(_DWORD *)a1 + 0xFFFFFFF);
  }
  unsigned int v3 = ((*(unsigned __int16 *)(a1 + 496) >> 15) | (2
                                                 * ((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7 | (*(void *)(a1 + 480) >> 50) & 0x3C00 | ((*(void *)(a1 + 480) & 7) << 7) | (*(unsigned __int16 *)(a1 + 496) << 12) & 0x7E00000 | (*(_WORD *)(a1 + 496) >> 1 << 14)))) ^ 0xFFFFFFF;
  if (v3 >= 0xFFFFFFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FollowingDislikedLayoutModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFFFFFFE)
  {
    *(void *)(result + 488) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 496) = 0;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 0xFFFFFFF;
    if (a3 >= 0xFFFFFFF) {
      *(unsigned char *)(result + 498) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFFFFFFF) {
      *(unsigned char *)(result + 498) = 0;
    }
    if (a2)
    {
      unint64_t v3 = ((-a2 >> 1) & 0x7FFFFFF) - (a2 << 27);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(_OWORD *)(result + 136) = 0u;
      *(_OWORD *)(result + 152) = 0u;
      *(_OWORD *)(result + 168) = 0u;
      *(_OWORD *)(result + 184) = 0u;
      *(_OWORD *)(result + 200) = 0u;
      *(_OWORD *)(result + 216) = 0u;
      *(_OWORD *)(result + 232) = 0u;
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 248) = 0u;
      *(_OWORD *)(result + 264) = 0u;
      *(_OWORD *)(result + 280) = 0u;
      *(_OWORD *)(result + 296) = 0u;
      *(_OWORD *)(result + 312) = 0u;
      *(_OWORD *)(result + 328) = 0u;
      *(_OWORD *)(result + 344) = 0u;
      *(_OWORD *)(result + 360) = 0u;
      *(_OWORD *)(result + 376) = 0u;
      *(_OWORD *)(result + 392) = 0u;
      *(_OWORD *)(result + 408) = 0u;
      *(_OWORD *)(result + 424) = 0u;
      *(_OWORD *)(result + 440) = 0u;
      *(_OWORD *)(result + 456) = 0u;
      *(void *)(result + 472) = 0;
      *(void *)(result + 480) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(void *)(result + 488) = 0;
      *(_WORD *)(result + 496) = (v3 >> 13) & 0xFE | (v3 >> 12) & 0xFE00;
    }
  }
  return result;
}

uint64_t sub_1DF1A0A70(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 496) >> 15;
}

uint64_t sub_1DF1A0A7C(uint64_t result)
{
  *(_WORD *)(result + 496) &= ~0x8000u;
  return result;
}

uint64_t sub_1DF1A0A8C(uint64_t result, __int16 a2)
{
  uint64_t v2 = *(void *)(result + 480) & 0xFFFFFFFFFFFFFF8;
  __int16 v3 = *(_WORD *)(result + 496) & 0x101 | (a2 << 15);
  *(void *)result &= 0xFFFFFFFFFFFFFF8uLL;
  *(void *)(result + 480) = v2;
  *(_WORD *)(result + 496) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FollowingDislikedLayoutModel()
{
  return &type metadata for FollowingDislikedLayoutModel;
}

double sub_1DF1A0AC8()
{
  sub_1DF1A0B5C(v0, v2);
  sub_1DF1A0B5C(v2, __dst);
  sub_1DF1A0A70((uint64_t)__dst);
  return *(double *)(sub_1DF1A0A7C((uint64_t)__dst) + 8);
}

uint64_t sub_1DF1A0B1C(uint64_t a1)
{
  unint64_t v2 = sub_1DF1A0B70();
  return MEMORY[0x1F4162968](a1, v2);
}

void *sub_1DF1A0B5C(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x1F2uLL);
}

unint64_t sub_1DF1A0B70()
{
  unint64_t result = qword_1EAC29278;
  if (!qword_1EAC29278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29278);
  }
  return result;
}

uint64_t sub_1DF1A0BC4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DFDEFA00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDEF9A0();
  uint64_t v9 = MEMORY[0x1E4FBC868];
  uint64_t v20 = MEMORY[0x1E4FBC868];
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    uint64_t v18 = a1;
    uint64_t v19 = v2;
    long long v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    long long v11 = v13;
    unint64_t v14 = v8 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v15 = *(void *)(v12 + 56);
    swift_bridgeObjectRetain();
    do
    {
      v11(v7, v14, v4);
      sub_1DF1A0DA0(&v20);
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      v14 += v15;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v9 = v20;
    a1 = v18;
    uint64_t v2 = v19;
  }
  uint64_t v16 = sub_1DFDEF9B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
  swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = v9;
  return v2;
}

uint64_t sub_1DF1A0DA0(uint64_t *a1)
{
  __int16 v31 = a1;
  uint64_t v2 = sub_1DFDEF9C0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v30 - v8;
  MEMORY[0x1F4188790](v7);
  long long v11 = (char *)&v30 - v10;
  sub_1DFDEF9E0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v9, *MEMORY[0x1E4F81E78], v2);
  sub_1DF0E4FF0(&qword_1EAC29280, MEMORY[0x1E4F81E90]);
  char v12 = sub_1DFDFDC70();
  long long v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v9, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v13)(v11, v2);
  if ((v12 & 1) == 0)
  {
    sub_1DFDEF9E0();
    uint64_t v15 = *v31;
    if (*(void *)(*v31 + 16) && (unint64_t v16 = sub_1DF50C3C0((uint64_t)v6), (v17 & 1) != 0))
    {
      uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v18 = MEMORY[0x1E4FBC868];
    }
    v13(v6, v2);
    uint64_t v19 = sub_1DFDEF9D0();
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v30 = v1;
    if (v20 && (unint64_t v21 = sub_1DF50C1B4(v19), (v22 & 1) != 0)) {
      uint64_t v23 = *(void *)(*(void *)(v18 + 56) + 8 * v21);
    }
    else {
      uint64_t v23 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DFDEF9F0();
    uint64_t v24 = v23 + result;
    if (__OFADD__(v23, result))
    {
      __break(1u);
    }
    else
    {
      uint64_t v25 = sub_1DFDEF9D0();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v32 = v18;
      sub_1DFBC79F0(v24, v25, isUniquelyReferenced_nonNull_native);
      uint64_t v27 = v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DFDEF9E0();
      swift_bridgeObjectRetain();
      uint64_t v28 = v31;
      char v29 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v32 = *v28;
      uint64_t *v28 = 0x8000000000000000;
      sub_1DFBC7B78(v27, (uint64_t)v11, v29);
      uint64_t *v28 = v32;
      swift_bridgeObjectRelease();
      v13(v11, v2);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1DF1A10C0@<X0>(uint64_t a1@<X8>)
{
  sub_1DF1A15C0(0, &qword_1EAC29288, (uint64_t (*)(uint64_t))sub_1DEE565F4, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v47 - v4;
  sub_1DF1A1624();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDEF9C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v52 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v47 - v14;
  unint64_t v16 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_1DEE53988(v17, (uint64_t)v5);
  swift_bridgeObjectRelease();
  sub_1DEE565F4();
  uint64_t v19 = v18;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v5, 1, v18) == 1)
  {
    sub_1DF1A1694((uint64_t)v5);
    sub_1DF1A1720();
    uint64_t v21 = v20;
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v23 = a1;
LABEL_7:
    uint64_t v35 = 1;
    return v22(v23, v35, 1, v21);
  }
  uint64_t v48 = v16;
  uint64_t v51 = a1;
  uint64_t v24 = *(void *)&v5[*(int *)(v19 + 48)];
  uint64_t v25 = *(int *)(v7 + 48);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v26(v9, v5, v10);
  *(void *)&v9[v25] = v24;
  uint64_t v27 = *(void *)&v9[*(int *)(v7 + 48)];
  uint64_t v49 = v11 + 32;
  uint64_t v50 = (void (*)(uint64_t, char *, uint64_t))v26;
  v26(v15, v9, v10);
  uint64_t v55 = v27;
  uint64_t v28 = sub_1DEE53B70(v27);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    sub_1DF1A1720();
    uint64_t v21 = v34;
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
    uint64_t v23 = v51;
    goto LABEL_7;
  }
  uint64_t v30 = (uint64_t)v28;
  uint64_t v31 = v11;
  uint64_t v32 = v29 - 1;
  if (v29 <= 1)
  {
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_1DF7CEC24(v36);
  }
  else
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v54 = v27;
    sub_1DFBC79F0(v32, v30, isUniquelyReferenced_nonNull_native);
    uint64_t v55 = v54;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = v51;
  uint64_t v38 = (uint64_t)v52;
  uint64_t v39 = v15;
  uint64_t v40 = v48;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v52, v15, v10);
  uint64_t v41 = v55;
  if (*(void *)(v55 + 16))
  {
    swift_beginAccess();
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v53 = *v40;
    uint64_t *v40 = 0x8000000000000000;
    sub_1DFBC7B78(v41, v38, v42);
    uint64_t *v40 = v53;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v38, v10);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1DF7CECF8(v38);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v38, v10);
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  sub_1DF1A1720();
  uint64_t v44 = v43;
  uint64_t v45 = *(int *)(v43 + 48);
  v50(v37, v39, v10);
  *(void *)(v37 + v45) = v30;
  char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
  uint64_t v23 = v37;
  uint64_t v35 = 0;
  uint64_t v21 = v44;
  return v22(v23, v35, 1, v21);
}

uint64_t type metadata accessor for BrowseNonPresentationRequirements()
{
  return self;
}

void sub_1DF1A15C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DF1A1624()
{
  if (!qword_1EAC29290)
  {
    sub_1DFDEF9C0();
    sub_1DEE56668();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC29290);
    }
  }
}

uint64_t sub_1DF1A1694(uint64_t a1)
{
  sub_1DF1A15C0(0, &qword_1EAC29288, (uint64_t (*)(uint64_t))sub_1DEE565F4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DF1A1720()
{
  if (!qword_1EAC35960)
  {
    sub_1DFDEF9C0();
    sub_1DF1A15C0(255, (unint64_t *)&unk_1EAC283A0, MEMORY[0x1E4F81EC0], MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC35960);
    }
  }
}

uint64_t sub_1DF1A17C0()
{
  uint64_t v0 = sub_1DFDF70E0();
  __swift_allocate_value_buffer(v0, qword_1EACDF9A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF9A8);
  if (qword_1EBAEA690 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB62CB0;
  return sub_1DFDF70B0();
}

uint64_t sub_1DF1A186C()
{
  uint64_t v0 = sub_1DFDF70E0();
  __swift_allocate_value_buffer(v0, qword_1EACDF9C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF9C0);
  if (qword_1EBAEA6A8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB62CB8;
  return sub_1DFDF70B0();
}

uint64_t sub_1DF1A1918()
{
  uint64_t v0 = sub_1DFDF70E0();
  __swift_allocate_value_buffer(v0, qword_1EBB633C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB633C8);
  if (qword_1EBAEA6C8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB63300;
  return sub_1DFDF70B0();
}

uint64_t sub_1DF1A19C8()
{
  uint64_t v0 = sub_1DFDF70E0();
  __swift_allocate_value_buffer(v0, qword_1EACDF9D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF9D8);
  if (qword_1EAC1D430 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EACDFD50;
  return sub_1DFDF70B0();
}

uint64_t sub_1DF1A1A7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1DEED9A4C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1DFDFDD80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v11 = objc_msgSend(v2, sel_supergroupConfigJson);
  if (!v11) {
    goto LABEL_4;
  }
  uint64_t v12 = v11;
  sub_1DFDFDD20();

  sub_1DFDFDD70();
  uint64_t v13 = sub_1DFDFDD30();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  if (v15 >> 60 == 15)
  {
LABEL_4:
    uint64_t v17 = type metadata accessor for ChannelSupergroupConfig();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
  else
  {
    sub_1DFDEC8B0();
    swift_allocObject();
    sub_1DFDEC8A0();
    uint64_t v16 = type metadata accessor for ChannelSupergroupConfig();
    sub_1DF1A1D64();
    sub_1DFDEC890();
    sub_1DE986E40(v13, v15);
    swift_release();
    uint64_t v18 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v18((uint64_t)v6, 0, 1, v16);
    sub_1DF1A1E18((uint64_t)v6, a1);
    return v18(a1, 0, 1, v16);
  }
}

unint64_t sub_1DF1A1D64()
{
  unint64_t result = qword_1EBAAFF30;
  if (!qword_1EBAAFF30)
  {
    type metadata accessor for ChannelSupergroupConfig();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAAFF30);
  }
  return result;
}

uint64_t sub_1DF1A1DBC(uint64_t a1)
{
  sub_1DEED9A4C(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF1A1E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChannelSupergroupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1DF1A1E7C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v50 = a6;
  uint64_t v51 = a2;
  uint64_t v52 = a5;
  uint64_t v53 = a4;
  uint64_t v54 = a3;
  id v55 = a1;
  sub_1DF1A23B4(0, (unint64_t *)&unk_1EBACBDC0, MEMORY[0x1E4F7D778]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v46 - v11;
  sub_1DF1A23B4(0, &qword_1EAC22308, MEMORY[0x1E4F7D788]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v47 = (char *)&v46 - v14;
  uint64_t v15 = sub_1DFDE92C0();
  uint64_t v48 = *(void *)(v15 - 8);
  uint64_t v49 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v46 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF1A23B4(0, (unint64_t *)&unk_1EBAD2190, MEMORY[0x1E4F7D9B8]);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = sub_1DFDE9890();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (void *)v8[2];
  id v25 = objc_msgSend(objc_msgSend(v55, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  if (!v25)
  {
    sub_1DFDFDD20();
    id v25 = (id)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
  }
  unsigned int v26 = objc_msgSend(v24, sel_hasMutedSubscriptionForTagID_, v25);

  if (!v26) {
    goto LABEL_11;
  }
  sub_1DF1A2408(v50, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    uint64_t v27 = (unint64_t *)&unk_1EBAD2190;
    uint64_t v28 = (void (*)(uint64_t))MEMORY[0x1E4F7D9B8];
LABEL_9:
    sub_1DF1A2488((uint64_t)v19, v27, v28);
LABEL_11:
    uint64_t v33 = v54;
    id v32 = v55;
    *(void *)a7 = v51;
    *(void *)(a7 + 8) = v33;
    uint64_t v35 = v52;
    uint64_t v34 = v53;
    *(void *)(a7 + 16) = v32;
    *(void *)(a7 + 24) = v34;
    *(void *)(a7 + 32) = v35;
    *(unsigned char *)(a7 + 40) = 0;
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
  if ((sub_1DFDE9860() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(v8 + 3, v8[6]);
  sub_1DFDE9880();
  uint64_t v29 = v47;
  sub_1DFDE9C70();
  uint64_t v19 = v29;
  sub_1DF1A2488((uint64_t)v12, (unint64_t *)&unk_1EBACBDC0, MEMORY[0x1E4F7D778]);
  uint64_t v31 = v48;
  uint64_t v30 = v49;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v19, 1, v49) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    uint64_t v27 = &qword_1EAC22308;
    uint64_t v28 = (void (*)(uint64_t))MEMORY[0x1E4F7D788];
    goto LABEL_9;
  }
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v39 = v46;
  v38(v46, v19, v30);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 40) = v30;
  *(void *)(v40 + 48) = sub_1DF1A2530();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v40 + 16));
  v38((char *)boxed_opaque_existential_1, v39, v30);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  uint64_t v43 = v54;
  id v42 = v55;
  *(void *)(v40 + 56) = v51;
  *(void *)(v40 + 64) = v43;
  uint64_t v45 = v52;
  uint64_t v44 = v53;
  *(void *)(v40 + 72) = v42;
  *(void *)(v40 + 80) = v44;
  *(void *)(v40 + 88) = v45;
  *(unsigned char *)(v40 + 96) = 0;
  *(void *)a7 = v40;
  *(_OWORD *)(a7 + 8) = 0u;
  *(_OWORD *)(a7 + 24) = 0u;
  *(unsigned char *)(a7 + 40) = 1;
LABEL_12:
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v36 = v55;
  return v36;
}

void sub_1DF1A23B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DF1A2408(uint64_t a1, uint64_t a2)
{
  sub_1DF1A23B4(0, (unint64_t *)&unk_1EBAD2190, MEMORY[0x1E4F7D9B8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF1A2488(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DF1A23B4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF1A24E4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1DEB28A50(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  return swift_deallocObject();
}

unint64_t sub_1DF1A2530()
{
  unint64_t result = qword_1EAC29298;
  if (!qword_1EAC29298)
  {
    sub_1DFDE92C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29298);
  }
  return result;
}

uint64_t sub_1DF1A2588@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF1A2EC0(0, &qword_1EAC292C0, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for SportsMastheadTagFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF1A2E08();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_1DF1A2F24(&qword_1EBACA150, MEMORY[0x1E4F7F240]);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_1DF1A2E5C((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF1A2834(uint64_t a1)
{
  unint64_t v2 = sub_1DF1A2E08();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF1A2870(uint64_t a1)
{
  unint64_t v2 = sub_1DF1A2E08();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF1A28AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF1A28C0);
}

uint64_t sub_1DF1A28C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DF1A292C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF1A2940);
}

uint64_t sub_1DF1A2940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SportsMastheadTagFeedGroup()
{
  uint64_t result = qword_1EBADCCA8;
  if (!qword_1EBADCCA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF1A29FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF1A2588(a1, a2);
}

uint64_t sub_1DF1A2A14(void *a1)
{
  sub_1DF1A2EC0(0, &qword_1EAC292D0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF1A2E08();
  sub_1DFE001A0();
  sub_1DFDF7010();
  sub_1DF1A2F24((unint64_t *)&unk_1EBACA140, MEMORY[0x1E4F7F240]);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DF1A2B9C()
{
  return sub_1DF1A2F24((unint64_t *)&unk_1EAC309B0, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
}

uint64_t sub_1DF1A2BE4()
{
  return sub_1DF1A2F24(&qword_1EAC292A0, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
}

uint64_t sub_1DF1A2C2C()
{
  return sub_1DF1A2F24(&qword_1EAC292A8, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
}

uint64_t sub_1DF1A2C74(uint64_t a1)
{
  uint64_t result = sub_1DF1A2F24((unint64_t *)&unk_1EAC30A90, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DF1A2CCC(void *a1)
{
  a1[1] = sub_1DF1A2F24(&qword_1EAC292B0, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
  a1[2] = sub_1DF1A2F24((unint64_t *)&unk_1EAC30BA0, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
  uint64_t result = sub_1DF1A2F24(&qword_1EAC292B8, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
  a1[3] = result;
  return result;
}

uint64_t sub_1DF1A2D78(uint64_t a1)
{
  uint64_t v2 = sub_1DF1A2F24(&qword_1EAC292B0, (void (*)(uint64_t))type metadata accessor for SportsMastheadTagFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DF1A2DE4()
{
  return 0x4D207374726F7053;
}

unint64_t sub_1DF1A2E08()
{
  unint64_t result = qword_1EAC292C8;
  if (!qword_1EAC292C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC292C8);
  }
  return result;
}

uint64_t sub_1DF1A2E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsMastheadTagFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DF1A2EC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF1A2E08();
    unint64_t v7 = a3(a1, &type metadata for SportsMastheadTagFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DF1A2F24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsMastheadTagFeedGroup.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF1A3008);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsMastheadTagFeedGroup.CodingKeys()
{
  return &type metadata for SportsMastheadTagFeedGroup.CodingKeys;
}

unint64_t sub_1DF1A3044()
{
  unint64_t result = qword_1EAC292D8;
  if (!qword_1EAC292D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC292D8);
  }
  return result;
}

unint64_t sub_1DF1A309C()
{
  unint64_t result = qword_1EAC292E0;
  if (!qword_1EAC292E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC292E0);
  }
  return result;
}

unint64_t sub_1DF1A30F4()
{
  unint64_t result = qword_1EAC292E8;
  if (!qword_1EAC292E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC292E8);
  }
  return result;
}

uint64_t type metadata accessor for ContinueReadingEventHandler()
{
  return self;
}

uint64_t sub_1DF1A316C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v2) {
      break;
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DFDFFA70();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = (void *)MEMORY[0x1E01EE240](v4, a1);
      }
      else
      {
        uint64_t v5 = *(void **)(a1 + 8 * v4 + 32);
        swift_unknownObjectRetain();
      }
      ++v4;
      id v6 = objc_msgSend(v5, sel_sourceChannel);
      swift_unknownObjectRelease();
      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
      if (v2 == v4) {
        return v7;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DF1A32BC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v2) {
      break;
    }
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DFDFFA70();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1E01EE240](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      id v6 = v5;
      ++v4;
      id v7 = objc_msgSend(v5, sel_contentManifest);

      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
      if (v2 == v4) {
        return v8;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DF1A3400(uint64_t a1)
{
  sub_1DF1A348C(0, (unint64_t *)&unk_1EBAD1820, MEMORY[0x1E4F81250], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DF1A348C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF1A34F0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF1A3538()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ChannelPickerBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_1DF1A35BC()
{
  return sub_1DF1A5F18((unint64_t *)&unk_1EAC20240, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutSectionDescriptor);
}

uint64_t sub_1DF1A3604()
{
  return sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
}

uint64_t sub_1DF1A364C()
{
  return sub_1DF1A5F18((unint64_t *)&unk_1EAC20230, (void (*)(uint64_t))type metadata accessor for ChannelPickerElementModel);
}

uint64_t sub_1DF1A3694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v7 = sub_1DFDF4820();
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = type metadata accessor for ChannelPickerLayoutSectionDescriptor();
  uint64_t v10 = MEMORY[0x1F4188790](v48);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v41 - v13;
  sub_1DEB0C1BC();
  sub_1DFDF14D0();
  sub_1DEB53AB0(&v53, v54);
  sub_1DEB53AB0(v54, v55);
  BOOL v15 = sub_1DEB539B0((uint64_t)v55) == 1;
  uint64_t v44 = v12;
  uint64_t v45 = v14;
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v41 = a3;
  if (v15)
  {
    sub_1DEB539BC((uint64_t)v55);
    sub_1DF1A5C7C((uint64_t)v54);
    sub_1DFDF14D0();
    sub_1DEB53AB0(v51, v52);
    sub_1DEB53AB0(v52, v50);
    sub_1DF1A3DB4(v50, a3, (uint64_t)v14);
    sub_1DF1A5C7C((uint64_t)v52);
    sub_1DF1A5D58((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ChannelPickerLayoutSectionDescriptor);
    sub_1DF1A5EB4(0, &qword_1EAC292F0, MEMORY[0x1E4FABB70], MEMORY[0x1E4FBBE00]);
    uint64_t v16 = sub_1DFDF0420();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(void *)(v17 + 72);
    unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1DFE0CC10;
    uint64_t v21 = (void *)(v20 + v19);
    *uint64_t v21 = 0;
    uint64_t v22 = *(void (**)(void))(v17 + 104);
    ((void (*)(void *, void, uint64_t))v22)(v21, *MEMORY[0x1E4FABB68], v16);
    *(void *)((char *)v21 + v18) = 0x4024000000000000;
    v22();
    ((void (*)(char *, void, uint64_t))v22)((char *)v21 + 2 * v18, *MEMORY[0x1E4FABB58], v16);
    *uint64_t v9 = v20;
    uint64_t v23 = *MEMORY[0x1E4FAD558];
    uint64_t v24 = sub_1DFDF4810();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v9, v23, v24);
    uint64_t v25 = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v46 + 104))(v9, *MEMORY[0x1E4FAD550], v47);
    MEMORY[0x1F4188790](v25);
    uint64_t v37 = &v41 - 6;
    uint64_t v26 = v43;
    *(&v41 - 4) = v41;
    *(&v41 - 3) = v26;
    *(&v41 - 2) = v42;
    uint64_t v39 = (void (*)(char *))sub_1DF1A5D34;
  }
  else
  {
    sub_1DEB539BC((uint64_t)v55);
    sub_1DF1A5C7C((uint64_t)v54);
    sub_1DFDF14D0();
    sub_1DEB53AB0(v51, v52);
    sub_1DEB53AB0(v52, v50);
    sub_1DF1A3DB4(v50, a3, (uint64_t)v14);
    sub_1DF1A5C7C((uint64_t)v52);
    sub_1DF1A5D58((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ChannelPickerLayoutSectionDescriptor);
    sub_1DF1A5EB4(0, &qword_1EAC292F0, MEMORY[0x1E4FABB70], MEMORY[0x1E4FBBE00]);
    uint64_t v27 = sub_1DFDF0420();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void *)(v28 + 72);
    unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1DFE0CC10;
    id v32 = (void *)(v31 + v30);
    *id v32 = 0;
    uint64_t v33 = *(void (**)(void))(v28 + 104);
    ((void (*)(unint64_t, void, uint64_t))v33)(v31 + v30, *MEMORY[0x1E4FABB68], v27);
    *(void *)((char *)v32 + v29) = 0;
    v33();
    ((void (*)(unint64_t, void, uint64_t))v33)(v31 + v30 + 2 * v29, *MEMORY[0x1E4FABB58], v27);
    *uint64_t v9 = v31;
    uint64_t v34 = *MEMORY[0x1E4FAD558];
    uint64_t v35 = sub_1DFDF4810();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v9, v34, v35);
    uint64_t v36 = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v46 + 104))(v9, *MEMORY[0x1E4FAD550], v47);
    MEMORY[0x1F4188790](v36);
    uint64_t v37 = &v41 - 6;
    uint64_t v38 = v41;
    *(&v41 - 4) = v43;
    *(&v41 - 3) = v38;
    *(&v41 - 2) = v42;
    uint64_t v39 = (void (*)(char *))sub_1DF1A5D10;
  }
  sub_1DEB04A9C(v39, (uint64_t)v37);
  type metadata accessor for ChannelPickerLayoutModel();
  sub_1DF1A5F18(&qword_1EAC306D0, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutSectionDescriptor);
  sub_1DF1A5F18(&qword_1EAC21CF8, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
  sub_1DFDF2C30();
  return sub_1DF1A5DC0((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for ChannelPickerLayoutSectionDescriptor);
}

uint64_t sub_1DF1A3DB4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v82 = a2;
  *(void *)&long long v81 = type metadata accessor for ChannelPickerHeaderViewLayoutOptions(0);
  MEMORY[0x1F4188790](v81);
  id v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for ChannelPickerHeaderViewLayoutAttributes(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v76 - v12;
  MEMORY[0x1F4188790](v11);
  BOOL v15 = (char *)&v76 - v14;
  sub_1DEB53AB0(a1, v91);
  sub_1DEB53AB0(v91, v92);
  sub_1DEB539B0((uint64_t)v92);
  uint64_t v16 = sub_1DEB539BC((uint64_t)v92);
  uint64_t v17 = *(void *)(v16 + 160);
  uint64_t v83 = v10;
  if (v17)
  {
    sub_1DEB53AB0(v91, v90);
    sub_1DEB539B0((uint64_t)v90);
    uint64_t v18 = sub_1DEB539BC((uint64_t)v90);
    uint64_t v19 = *(void *)(v18 + 168);
    if (*(void *)(v18 + 176))
    {
      uint64_t v77 = *(void *)(v18 + 176);
    }
    else
    {
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v21 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v19 = sub_1DFDE6ED0();
      uint64_t v77 = v22;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v77 = 0;
    uint64_t v19 = *(void *)(v16 + 152);
  }
  sub_1DEB53AB0(v91, v90);
  int v23 = sub_1DEB539B0((uint64_t)v90);
  uint64_t v24 = sub_1DEB539BC((uint64_t)v90);
  unint64_t v25 = *(void *)(v24 + 48);
  uint64_t v79 = v19;
  if (v23 == 1)
  {
    if (!v25)
    {
      sub_1DEB53AB0(v91, v89);
      uint64_t v26 = (uint64_t *)sub_1DEB539BC((uint64_t)v89);
      uint64_t v28 = *v26;
      unint64_t v27 = v26[1];
      unint64_t v29 = 0xE400000000000000;
      uint64_t v30 = 1684632167;
LABEL_13:
      uint64_t v78 = v30;
      goto LABEL_14;
    }
  }
  else if (!v25)
  {
    sub_1DEB53AB0(v91, v89);
    id v32 = (uint64_t *)sub_1DEB539BC((uint64_t)v89);
    uint64_t v28 = *v32;
    unint64_t v27 = v32[1];
    unint64_t v29 = 0xE400000000000000;
    uint64_t v30 = 1953720684;
    goto LABEL_13;
  }
  uint64_t v78 = *(void *)(v24 + 40);
  sub_1DEB53AB0(v91, v89);
  uint64_t v31 = (uint64_t *)sub_1DEB539BC((uint64_t)v89);
  uint64_t v28 = *v31;
  unint64_t v27 = v31[1];
  unint64_t v29 = v25;
LABEL_14:
  swift_bridgeObjectRetain();
  sub_1DEB53AB0(v91, v89);
  sub_1DEB539B0((uint64_t)v89);
  uint64_t v33 = sub_1DEB539BC((uint64_t)v89);
  uint64_t v34 = *(void *)(v33 + 24);
  if (!v34) {
    goto LABEL_19;
  }
  uint64_t v35 = *(void *)(v33 + 16);
  if (v34 == 0xE000000000000000 && !v35)
  {
    uint64_t v36 = 0;
    goto LABEL_20;
  }
  char v37 = sub_1DFDFFF50();
  uint64_t v36 = 0;
  uint64_t v35 = 0;
  if ((v37 & 1) == 0)
  {
LABEL_19:
    sub_1DEB53AB0(v91, &v84);
    sub_1DEB539B0((uint64_t)&v84);
    uint64_t v36 = *(void *)(sub_1DEB539BC((uint64_t)&v84) + 16);
    uint64_t v35 = swift_bridgeObjectRetain();
  }
LABEL_20:
  unint64_t v38 = 0xE000000000000000;
  if (v27) {
    unint64_t v38 = v27;
  }
  *(void *)&long long v84 = v78;
  *((void *)&v84 + 1) = v29;
  if (v27) {
    uint64_t v39 = v28;
  }
  else {
    uint64_t v39 = 0;
  }
  *(void *)&long long v85 = v39;
  *((void *)&v85 + 1) = v38;
  *(void *)&long long v86 = v36;
  *((void *)&v86 + 1) = v35;
  *(void *)&long long v87 = 0;
  *((void *)&v87 + 1) = v79;
  uint64_t v88 = v77;
  __swift_project_boxed_opaque_existential_1((void *)(v80 + 176), *(void *)(v80 + 200));
  uint64_t v40 = sub_1DFDF2BF0();
  (*(void (**)(char *, void, uint64_t))(*(void *)(v40 - 8) + 16))(v6, v82, v40);
  swift_bridgeObjectRetain();
  sub_1DFDF2AB0();
  uint64_t v41 = v81;
  *(void *)&v6[*(int *)(v81 + 20)] = 0x4035000000000000;
  *(void *)&v6[*(int *)(v41 + 24)] = 0x4026000000000000;
  *(void *)&v6[*(int *)(v41 + 28)] = v42;
  sub_1DF27C52C((double *)&v84, (uint64_t)v6, (uint64_t)v15);
  sub_1DF1A5DC0((uint64_t)v6, type metadata accessor for ChannelPickerHeaderViewLayoutOptions);
  CGRectGetWidth(*(CGRect *)&v15[v7[5]]);
  sub_1DFDF2AB0();
  sub_1DFDFF2D0();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = &v15[v7[6]];
  long long v52 = *(_OWORD *)v51;
  uint64_t v53 = *((void *)v51 + 2);
  uint64_t v54 = *((void *)v51 + 3);
  id v55 = &v15[v7[7]];
  long long v56 = *(_OWORD *)v55;
  long long v81 = v52;
  long long v82 = v56;
  uint64_t v57 = *((void *)v55 + 2);
  uint64_t v58 = *((void *)v55 + 3);
  uint64_t v59 = v7[9];
  uint64_t v60 = &v15[v7[8]];
  long long v80 = *(_OWORD *)v60;
  uint64_t v61 = *((void *)v60 + 2);
  uint64_t v62 = *((void *)v60 + 3);
  char v63 = v60[32];
  char v64 = v15[v59];
  uint64_t v65 = *MEMORY[0x1E4FAD2B0];
  uint64_t v66 = sub_1DFDF4140();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v13, v65, v66);
  uint64_t v67 = &v13[v7[5]];
  *(void *)uint64_t v67 = v44;
  *((void *)v67 + 1) = v46;
  *((void *)v67 + 2) = v48;
  *((void *)v67 + 3) = v50;
  uint64_t v68 = &v13[v7[6]];
  *(_OWORD *)uint64_t v68 = v81;
  *((void *)v68 + 2) = v53;
  *((void *)v68 + 3) = v54;
  uint64_t v69 = &v13[v7[7]];
  *(_OWORD *)uint64_t v69 = v82;
  *((void *)v69 + 2) = v57;
  *((void *)v69 + 3) = v58;
  uint64_t v70 = &v13[v7[8]];
  *(_OWORD *)uint64_t v70 = v80;
  *((void *)v70 + 2) = v61;
  *((void *)v70 + 3) = v62;
  v70[32] = v63;
  v13[v7[9]] = v64;
  uint64_t v71 = (uint64_t)v83;
  sub_1DF1A6080((uint64_t)v13, (uint64_t)v83, type metadata accessor for ChannelPickerHeaderViewLayoutAttributes);
  sub_1DF1A5DC0((uint64_t)v15, type metadata accessor for ChannelPickerHeaderViewLayoutAttributes);
  long long v72 = v87;
  *(_OWORD *)(a3 + 32) = v86;
  *(_OWORD *)(a3 + 48) = v72;
  *(void *)(a3 + 64) = v88;
  long long v73 = v85;
  *(_OWORD *)a3 = v84;
  *(_OWORD *)(a3 + 16) = v73;
  uint64_t v74 = type metadata accessor for ChannelPickerLayoutSectionDescriptor();
  uint64_t result = sub_1DF1A6080(v71, a3 + *(int *)(v74 + 20), type metadata accessor for ChannelPickerHeaderViewLayoutAttributes);
  *(void *)(a3 + *(int *)(v74 + 24)) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1DF1A43F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v64[1] = a2;
  uint64_t v65 = a3;
  uint64_t v69 = a1;
  uint64_t v71 = a4;
  uint64_t v4 = type metadata accessor for ChannelEngagementLayoutOptions();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v67 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ChannelPickerEngagementModel();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v66 = (uint64_t)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for ChannelCategoryLayoutOptions();
  MEMORY[0x1F4188790](v8);
  uint64_t v68 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for ChannelPickerLayoutModel();
  MEMORY[0x1F4188790](v70);
  uint64_t v11 = (_OWORD *)((char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (int *)type metadata accessor for ChannelCoinLayoutOptions();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ChannelPickerElementModel();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (long long *)((char *)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEC81854();
  sub_1DFDF0B50();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v58 = v17[7];
      long long v91 = v17[6];
      long long v92 = v58;
      v93[0] = v17[8];
      *(_OWORD *)((char *)v93 + 9) = *(long long *)((char *)v17 + 137);
      long long v59 = v17[3];
      long long v87 = v17[2];
      long long v88 = v59;
      long long v60 = v17[5];
      long long v89 = v17[4];
      long long v90 = v60;
      long long v61 = v17[1];
      long long v85 = *v17;
      long long v86 = v61;
      uint64_t v62 = sub_1DFDF2BF0();
      double v63 = *(double *)&v68;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v68, v69, v62);
      *(void *)(*(void *)&v63 + v8[5]) = 0x4020000000000000;
      *(void *)(*(void *)&v63 + v8[6]) = 0x4031000000000000;
      *(unsigned char *)(*(void *)&v63 + v8[7]) = 0;
      *(unsigned char *)(*(void *)&v63 + v8[8]) = 0;
      long long v79 = v91;
      long long v80 = v92;
      v81[0] = v93[0];
      *(_OWORD *)((char *)v81 + 9) = *(_OWORD *)((char *)v93 + 9);
      long long v75 = v87;
      long long v76 = v88;
      long long v77 = v89;
      long long v78 = v90;
      long long v73 = v85;
      long long v74 = v86;
      sub_1DFA80C20((double *)&v73, v63, (uint64_t)&v94[10]);
      v94[6] = v91;
      v94[7] = v92;
      v94[8] = v93[0];
      *(_OWORD *)((char *)&v94[8] + 9) = *(_OWORD *)((char *)v93 + 9);
      v94[2] = v87;
      v94[3] = v88;
      void v94[4] = v89;
      v94[5] = v90;
      v94[0] = v85;
      v94[1] = v86;
      memcpy(v11, v94, 0x140uLL);
      swift_storeEnumTagMultiPayload();
      sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
      sub_1DFDF2110();
      long long v56 = type metadata accessor for ChannelCategoryLayoutOptions;
      uint64_t v57 = *(void *)&v63;
      goto LABEL_6;
    case 2u:
      long long v37 = v17[9];
      v94[8] = v17[8];
      v94[9] = v37;
      v94[10] = v17[10];
      long long v38 = v17[5];
      void v94[4] = v17[4];
      v94[5] = v38;
      long long v39 = v17[7];
      v94[6] = v17[6];
      v94[7] = v39;
      long long v40 = v17[1];
      v94[0] = *v17;
      v94[1] = v40;
      long long v41 = v17[3];
      v94[2] = v17[2];
      v94[3] = v41;
      uint64_t v42 = sub_1DFDF2BF0();
      uint64_t v43 = (uint64_t)v68;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v68, v69, v42);
      *(void *)(v43 + v8[5]) = 0x4020000000000000;
      *(void *)(v43 + v8[6]) = 0x4031000000000000;
      *(unsigned char *)(v43 + v8[7]) = 0;
      *(unsigned char *)(v43 + v8[8]) = 0;
      sub_1DFA813AC((double *)v94, v43, (uint64_t)&v85);
      sub_1DEDBFA10((uint64_t)v94, (uint64_t)v11);
      long long v44 = v92;
      v11[17] = v91;
      v11[18] = v44;
      long long v45 = v93[1];
      v11[19] = v93[0];
      v11[20] = v45;
      long long v46 = v88;
      v11[13] = v87;
      v11[14] = v46;
      long long v47 = v90;
      v11[15] = v89;
      unsigned char v11[16] = v47;
      long long v48 = v86;
      v11[11] = v85;
      v11[12] = v48;
      swift_storeEnumTagMultiPayload();
      sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
      sub_1DFDF2110();
      sub_1DF1A5DC0(v43, (uint64_t (*)(void))type metadata accessor for ChannelCategoryLayoutOptions);
      uint64_t result = sub_1DEB403C4((uint64_t)v94);
      break;
    case 3u:
      uint64_t v49 = v66;
      sub_1DF1A6080((uint64_t)v17, v66, (uint64_t (*)(void))type metadata accessor for ChannelPickerEngagementModel);
      uint64_t v50 = sub_1DFDF2BF0();
      uint64_t v51 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v67, v69, v50);
      __swift_project_boxed_opaque_existential_1((void *)(v65 + 136), *(void *)(v65 + 160));
      sub_1DEC8E964(v49, v51, (uint64_t)v94);
      sub_1DEC12D4C();
      uint64_t v53 = (_OWORD *)((char *)v11 + *(int *)(v52 + 48));
      sub_1DF1A5D58(v49, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ChannelPickerEngagementModel);
      long long v54 = v94[1];
      *uint64_t v53 = v94[0];
      v53[1] = v54;
      long long v55 = v94[3];
      v53[2] = v94[2];
      v53[3] = v55;
      swift_storeEnumTagMultiPayload();
      sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
      sub_1DFDF2110();
      sub_1DF1A5DC0(v51, (uint64_t (*)(void))type metadata accessor for ChannelEngagementLayoutOptions);
      long long v56 = type metadata accessor for ChannelPickerEngagementModel;
      uint64_t v57 = v49;
LABEL_6:
      uint64_t result = sub_1DF1A5DC0(v57, (uint64_t (*)(void))v56);
      break;
    default:
      long long v18 = v17[4];
      long long v19 = v17[5];
      long long v20 = v17[2];
      v83[3] = v17[3];
      v83[4] = v18;
      v84[0] = v19;
      *(_OWORD *)((char *)v84 + 9) = *(long long *)((char *)v17 + 89);
      long long v21 = v17[1];
      v83[0] = *v17;
      v83[1] = v21;
      v83[2] = v20;
      uint64_t v22 = sub_1DFDF2BF0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v14, v69, v22);
      sub_1DEB0C1BC();
      sub_1DFDF14D0();
      sub_1DEB53AB0(&v73, &v85);
      sub_1DF1A5C7C((uint64_t)&v85);
      sub_1DFDF14D0();
      sub_1DEB53AB0(v72, v94);
      sub_1DF1A5C7C((uint64_t)v94);
      __asm { FMOV            V0.2D, #24.0 }
      *(_OWORD *)&v14[v12[8]] = _Q0;
      *(void *)&v14[v12[9]] = 0x4020000000000000;
      *(void *)&v14[v12[10]] = 0x4031000000000000;
      v14[v12[5]] = 3;
      v14[v12[6]] = 1;
      v14[v12[11]] = 0;
      v14[v12[7]] = 0;
      long long v73 = *(_OWORD *)((char *)v84 + 8);
      v72[0] = 0x6C61636F6CLL;
      v72[1] = 0xE500000000000000;
      sub_1DEA4DB08();
      char v28 = sub_1DFDFF750();
      sub_1DF0B2D18((uint64_t)v83, (uint64_t)v14, v28 & 1, (uint64_t)&v73);
      sub_1DEDBFA6C((uint64_t)v83, (uint64_t)v11);
      long long v29 = v82[0];
      v11[19] = v81[4];
      v11[20] = v29;
      *(_OWORD *)((char *)v11 + 329) = *(_OWORD *)((char *)v82 + 9);
      long long v30 = v81[1];
      v11[15] = v81[0];
      unsigned char v11[16] = v30;
      long long v31 = v81[3];
      v11[17] = v81[2];
      v11[18] = v31;
      long long v32 = v78;
      v11[11] = v77;
      v11[12] = v32;
      long long v33 = v80;
      v11[13] = v79;
      v11[14] = v33;
      long long v34 = v74;
      v11[7] = v73;
      v11[8] = v34;
      long long v35 = v76;
      v11[9] = v75;
      v11[10] = v35;
      swift_storeEnumTagMultiPayload();
      sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
      sub_1DFDF2110();
      sub_1DF1A5DC0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ChannelCoinLayoutOptions);
      uint64_t result = sub_1DEB40524((uint64_t)v83);
      break;
  }
  return result;
}

uint64_t sub_1DF1A4CEC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v102 = a4;
  uint64_t v108 = a3;
  unint64_t v140 = a1;
  uint64_t v111 = a5;
  uint64_t v6 = type metadata accessor for ChannelEngagementLayoutOptions();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v104 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ChannelPickerEngagementModel();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v103 = (uint64_t)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for ChannelCategoryLayoutOptions();
  MEMORY[0x1F4188790](v105);
  uint64_t v106 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for ChannelPickerLayoutModel();
  MEMORY[0x1F4188790](v110);
  uint64_t v109 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for ChannelTagLayoutOptions();
  MEMORY[0x1F4188790](v98);
  double v100 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for ChannelPickerElementModel();
  MEMORY[0x1F4188790](v115);
  uint64_t v113 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC81854();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v101 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF1A5E20();
  uint64_t v112 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v114 = (uint64_t)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF1A5EB4(0, (unint64_t *)&unk_1EAC23CD0, (uint64_t (*)(uint64_t))sub_1DEC81854, MEMORY[0x1E4FBB718]);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v107 = (uint64_t)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v116 = (char *)&v97 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v97 - v25;
  sub_1DEDBF804();
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  long long v31 = (char *)&v97 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0C1BC();
  uint64_t v97 = v32;
  uint64_t v99 = a2;
  sub_1DFDF1510();
  uint64_t v33 = sub_1DFDED270();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    long long v35 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    v35(v26, v33+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * (v34 - 1), v15);
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v36(v26, 0, 1, v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v36(v26, 1, 1, v15);
    swift_bridgeObjectRelease();
    long long v35 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
  }
  uint64_t v37 = (uint64_t)v116;
  v35(v116, v140, v15);
  uint64_t v38 = v37;
  v36((char *)v37, 0, 1, v15);
  uint64_t v39 = v114;
  uint64_t v40 = v114 + *(int *)(v112 + 48);
  sub_1DF1A5F60((uint64_t)v26, v114);
  sub_1DF1A5F60(v38, v40);
  long long v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v41(v39, 1, v15) == 1)
  {
    sub_1DF1A5FF4(v38);
    sub_1DF1A5FF4((uint64_t)v26);
    if (v41(v40, 1, v15) == 1)
    {
      sub_1DF1A5FF4(v39);
      char v42 = 1;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  uint64_t v43 = v107;
  sub_1DF1A5F60(v39, v107);
  if (v41(v40, 1, v15) == 1)
  {
    sub_1DF1A5FF4((uint64_t)v116);
    sub_1DF1A5FF4((uint64_t)v26);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v43, v15);
LABEL_9:
    sub_1DF1A5DC0(v39, (uint64_t (*)(void))sub_1DF1A5E20);
    char v42 = 0;
    goto LABEL_11;
  }
  long long v44 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v101, v40, v15);
  sub_1DF1A5F18(&qword_1EAC23CC0, (void (*)(uint64_t))sub_1DEC81854);
  char v45 = sub_1DFDFDC70();
  long long v46 = *(void (**)(char *, uint64_t))(v16 + 8);
  v46(v44, v15);
  sub_1DF1A5FF4((uint64_t)v116);
  sub_1DF1A5FF4((uint64_t)v26);
  uint64_t v47 = v43;
  char v42 = v45;
  v46((char *)v47, v15);
  sub_1DF1A5FF4(v39);
LABEL_11:
  long long v48 = (long long *)v113;
  sub_1DFDF0B50();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v91 = v48[7];
      long long v136 = v48[6];
      long long v137 = v91;
      v138[0] = v48[8];
      *(_OWORD *)((char *)v138 + 9) = *(long long *)((char *)v48 + 137);
      long long v92 = v48[3];
      long long v132 = v48[2];
      long long v133 = v92;
      long long v93 = v48[5];
      long long v134 = v48[4];
      long long v135 = v93;
      long long v94 = v48[1];
      long long v130 = *v48;
      long long v131 = v94;
      uint64_t v95 = sub_1DFDF2BF0();
      uint64_t v83 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16))(v106, v108, v95);
      uint64_t v96 = (int *)v105;
      *(void *)(v83 + *(int *)(v105 + 20)) = 0x4020000000000000;
      *(void *)(v83 + v96[6]) = 0x4031000000000000;
      *(unsigned char *)(v83 + v96[7]) = 0;
      *(unsigned char *)(v83 + v96[8]) = v42 & 1;
      long long v124 = v136;
      long long v125 = v137;
      v126[0] = v138[0];
      *(_OWORD *)((char *)v126 + 9) = *(_OWORD *)((char *)v138 + 9);
      long long v120 = v132;
      long long v121 = v133;
      long long v122 = v134;
      long long v123 = v135;
      long long v118 = v130;
      long long v119 = v131;
      sub_1DFA80C20((double *)&v118, *(double *)&v83, (uint64_t)&v139[10]);
      v139[6] = v136;
      v139[7] = v137;
      v139[8] = v138[0];
      *(_OWORD *)((char *)&v139[8] + 9) = *(_OWORD *)((char *)v138 + 9);
      v139[2] = v132;
      v139[3] = v133;
      v139[4] = v134;
      v139[5] = v135;
      v139[0] = v130;
      v139[1] = v131;
      memcpy(v109, v139, 0x140uLL);
      swift_storeEnumTagMultiPayload();
      sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
      sub_1DFDF2110();
      long long v90 = type metadata accessor for ChannelCategoryLayoutOptions;
      goto LABEL_16;
    case 2u:
      long long v69 = v48[9];
      v139[8] = v48[8];
      v139[9] = v69;
      v139[10] = v48[10];
      long long v70 = v48[5];
      v139[4] = v48[4];
      v139[5] = v70;
      long long v71 = v48[7];
      v139[6] = v48[6];
      v139[7] = v71;
      long long v72 = v48[1];
      v139[0] = *v48;
      v139[1] = v72;
      long long v73 = v48[3];
      v139[2] = v48[2];
      v139[3] = v73;
      uint64_t v74 = sub_1DFDF2BF0();
      uint64_t v75 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v106, v108, v74);
      long long v76 = (int *)v105;
      *(void *)(v75 + *(int *)(v105 + 20)) = 0x4020000000000000;
      *(void *)(v75 + v76[6]) = 0x4031000000000000;
      *(unsigned char *)(v75 + v76[7]) = 0;
      *(unsigned char *)(v75 + v76[8]) = v42 & 1;
      sub_1DFA813AC((double *)v139, v75, (uint64_t)&v130);
      long long v77 = v109;
      sub_1DEDBFA10((uint64_t)v139, (uint64_t)v109);
      long long v78 = v137;
      v77[17] = v136;
      v77[18] = v78;
      long long v79 = v138[1];
      v77[19] = v138[0];
      v77[20] = v79;
      long long v80 = v133;
      v77[13] = v132;
      v77[14] = v80;
      long long v81 = v135;
      v77[15] = v134;
      v77[16] = v81;
      long long v82 = v131;
      v77[11] = v130;
      v77[12] = v82;
      swift_storeEnumTagMultiPayload();
      sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
      sub_1DFDF2110();
      sub_1DF1A5DC0(v75, (uint64_t (*)(void))type metadata accessor for ChannelCategoryLayoutOptions);
      uint64_t result = sub_1DEB403C4((uint64_t)v139);
      break;
    case 3u:
      uint64_t v83 = v103;
      sub_1DF1A6080((uint64_t)v48, v103, (uint64_t (*)(void))type metadata accessor for ChannelPickerEngagementModel);
      uint64_t v84 = sub_1DFDF2BF0();
      uint64_t v85 = (uint64_t)v104;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v104, v108, v84);
      __swift_project_boxed_opaque_existential_1((void *)(v102 + 136), *(void *)(v102 + 160));
      sub_1DEC8E964(v83, v85, (uint64_t)v139);
      sub_1DEC12D4C();
      long long v87 = &v109[*(int *)(v86 + 48)];
      sub_1DF1A5D58(v83, (uint64_t)v109, (uint64_t (*)(void))type metadata accessor for ChannelPickerEngagementModel);
      long long v88 = v139[1];
      *(_OWORD *)long long v87 = v139[0];
      *((_OWORD *)v87 + 1) = v88;
      long long v89 = v139[3];
      *((_OWORD *)v87 + 2) = v139[2];
      *((_OWORD *)v87 + 3) = v89;
      swift_storeEnumTagMultiPayload();
      sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
      sub_1DFDF2110();
      sub_1DF1A5DC0(v85, (uint64_t (*)(void))type metadata accessor for ChannelEngagementLayoutOptions);
      long long v90 = type metadata accessor for ChannelPickerEngagementModel;
LABEL_16:
      uint64_t result = sub_1DF1A5DC0(v83, (uint64_t (*)(void))v90);
      break;
    default:
      long long v49 = v48[4];
      long long v50 = v48[5];
      long long v51 = v48[2];
      v128[3] = v48[3];
      v128[4] = v49;
      v129[0] = v50;
      *(_OWORD *)((char *)v129 + 9) = *(long long *)((char *)v48 + 89);
      long long v52 = v48[1];
      v128[0] = *v48;
      v128[1] = v52;
      v128[2] = v51;
      uint64_t v53 = sub_1DFDF2BF0();
      uint64_t v54 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v100, v108, v53);
      sub_1DFDF14D0();
      sub_1DEB53AB0(&v118, &v130);
      sub_1DF1A5C7C((uint64_t)&v130);
      sub_1DFDF14D0();
      sub_1DEB53AB0(&v117, v139);
      sub_1DF1A5C7C((uint64_t)v139);
      long long v55 = (int *)v98;
      __asm { FMOV            V0.2D, #24.0 }
      *(_OWORD *)(v54 + *(int *)(v98 + 32)) = _Q0;
      *(void *)(v54 + v55[9]) = 0x4020000000000000;
      *(void *)(v54 + v55[10]) = 0x4031000000000000;
      *(unsigned char *)(v54 + v55[5]) = 3;
      *(unsigned char *)(v54 + v55[6]) = 1;
      *(unsigned char *)(v54 + v55[7]) = 0;
      *(unsigned char *)(v54 + v55[11]) = v42 & 1;
      sub_1DF473FF8((uint64_t)v128, v54, (uint64_t)&v118);
      long long v61 = v109;
      sub_1DEDBFA6C((uint64_t)v128, (uint64_t)v109);
      long long v62 = v126[3];
      *((_OWORD *)v61 + 17) = v126[2];
      *((_OWORD *)v61 + 18) = v62;
      *((void *)v61 + 38) = v127;
      long long v63 = v125;
      *((_OWORD *)v61 + 13) = v124;
      *((_OWORD *)v61 + 14) = v63;
      long long v64 = v126[1];
      *((_OWORD *)v61 + 15) = v126[0];
      *((_OWORD *)v61 + 16) = v64;
      long long v65 = v121;
      *((_OWORD *)v61 + 9) = v120;
      *((_OWORD *)v61 + 10) = v65;
      long long v66 = v123;
      *((_OWORD *)v61 + 11) = v122;
      *((_OWORD *)v61 + 12) = v66;
      long long v67 = v119;
      *((_OWORD *)v61 + 7) = v118;
      *((_OWORD *)v61 + 8) = v67;
      swift_storeEnumTagMultiPayload();
      sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
      sub_1DFDF2110();
      sub_1DF1A5DC0(v54, (uint64_t (*)(void))type metadata accessor for ChannelTagLayoutOptions);
      uint64_t result = sub_1DEB40524((uint64_t)v128);
      break;
  }
  return result;
}

uint64_t sub_1DF1A5AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = *v2;
  (*(void (**)(unsigned char *, uint64_t))(v7 + 16))(&v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], a2);
  uint64_t v10 = v6;
  uint64_t v11 = a2;
  sub_1DEB04724((void (*)(char *))sub_1DF1A5C5C, (uint64_t)v9);
  type metadata accessor for ChannelPickerLayoutSectionDescriptor();
  type metadata accessor for ChannelPickerLayoutModel();
  sub_1DF1A5F18((unint64_t *)&unk_1EAC20240, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutSectionDescriptor);
  sub_1DF1A5F18(&qword_1EAC24220, (void (*)(uint64_t))type metadata accessor for ChannelPickerLayoutModel);
  return sub_1DFDF10D0();
}

uint64_t sub_1DF1A5C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF1A3694(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1DF1A5C7C(uint64_t a1)
{
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 224);
  sub_1DEB52F24(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    *(void *)(a1 + 272));
  return a1;
}

uint64_t sub_1DF1A5D10@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF1A4CEC(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1DF1A5D34@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF1A43F4(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1DF1A5D58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF1A5DC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DF1A5E20()
{
  if (!qword_1EAC292F8)
  {
    sub_1DF1A5EB4(255, (unint64_t *)&unk_1EAC23CD0, (uint64_t (*)(uint64_t))sub_1DEC81854, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC292F8);
    }
  }
}

void sub_1DF1A5EB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF1A5F18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF1A5F60(uint64_t a1, uint64_t a2)
{
  sub_1DF1A5EB4(0, (unint64_t *)&unk_1EAC23CD0, (uint64_t (*)(uint64_t))sub_1DEC81854, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF1A5FF4(uint64_t a1)
{
  sub_1DF1A5EB4(0, (unint64_t *)&unk_1EAC23CD0, (uint64_t (*)(uint64_t))sub_1DEC81854, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DF1A6080(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DF1A60E8(uint64_t a1)
{
  sub_1DEA98D10(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v11 - v4;
  unint64_t result = sub_1DF1A62C0(a1, v13);
  uint64_t v7 = v13[0];
  if ((~v13[0] & 0xF000000000000007) != 0)
  {
    uint64_t v8 = *(void *)(v1 + 64);
    uint64_t v9 = sub_1DFDEAB40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
    sub_1DE94F204(v1 + 72, (uint64_t)v13);
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    swift_retain();
    sub_1DFBB5128(v7, v8, (uint64_t)v5, (uint64_t)v13, 0, 0, 0, 0, (uint64_t)v11);
    swift_release();
    sub_1DE933144((uint64_t)v11, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
    sub_1DE933144((uint64_t)v13, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
    sub_1DEEC93A0((uint64_t)v5, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
    swift_release();
    return sub_1DEB28D0C(v7);
  }
  return result;
}

uint64_t sub_1DF1A62C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DEA98D10(0, (unint64_t *)&qword_1EBAAAA00, (void (*)(uint64_t))type metadata accessor for AudioFeedTrack);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v34[-v6];
  uint64_t v8 = type metadata accessor for AudioFeedTrack(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1DFDE8F10();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for AudioPlaylistFeedRouteModel();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)&v34[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DF1A6664(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AudioPlaylistFeedRouteModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = *v17;
    uint64_t v19 = v2[18];
    uint64_t v20 = v2[19];
    __swift_project_boxed_opaque_existential_1(v2 + 15, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 8))(v18, v19, v20);
    swift_unknownObjectRelease();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    sub_1DEA9C178((uint64_t)v7, (uint64_t)v11, type metadata accessor for AudioFeedTrack);
    uint64_t v30 = swift_allocBox();
    uint64_t result = sub_1DEA9C178((uint64_t)v11, v31, type metadata accessor for AudioFeedTrack);
    uint64_t v33 = v30 | 0x1000000000000002;
  }
  else
  {
    sub_1DEA9C178((uint64_t)v17, (uint64_t)v14, MEMORY[0x1E4F7D5D0]);
    sub_1DEAE4654();
    uint64_t v22 = v21;
    uint64_t v23 = swift_allocBox();
    uint64_t v25 = v24;
    uint64_t v26 = *(int *)(v22 + 48);
    sub_1DE919EB0();
    uint64_t v28 = *(int *)(v27 + 48);
    sub_1DF1A6664((uint64_t)v14, v25, MEMORY[0x1E4F7D5D0]);
    uint64_t v29 = MEMORY[0x1E4FBC860];
    *(void *)(v25 + v28) = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEDE4694((uint64_t)v14);
    *(void *)(v25 + v26) = v29;
    uint64_t v33 = v23 | 2;
  }
  *a2 = v33;
  return result;
}

uint64_t type metadata accessor for AudioPlaylistFeedRouter()
{
  return self;
}

uint64_t sub_1DF1A6664(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for SearchMoreBlueprintModifierFactory()
{
  return self;
}

uint64_t sub_1DF1A66F0()
{
  return sub_1DEA94BC0(&qword_1EAC24D20, (void (*)(uint64_t))type metadata accessor for SearchMoreSectionDescriptor);
}

uint64_t sub_1DF1A6738()
{
  return sub_1DEA94BC0((unint64_t *)&unk_1EAC28C40, (void (*)(uint64_t))type metadata accessor for SearchMoreModel);
}

uint64_t sub_1DF1A6780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE94F204(*v3 + 56, (uint64_t)&v11);
  v10[0] = a1;
  v10[1] = a2;
  void v10[2] = a3;
  sub_1DF1A6BA4((uint64_t)v10, (uint64_t)&v9);
  sub_1DF1A6960();
  swift_allocObject();
  sub_1DF1A6C00();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_1DFDF19A0();
  sub_1DF1A6C54((uint64_t)v10);
  return v7;
}

uint64_t sub_1DF1A6838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE94F204(*v3 + 56, (uint64_t)&v11);
  v10[0] = a1;
  v10[1] = a2;
  void v10[2] = a3;
  sub_1DF1A6AA0((uint64_t)v10, (uint64_t)&v9);
  sub_1DF1A6960();
  swift_allocObject();
  sub_1DF1A6AFC();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_1DFDF19A0();
  sub_1DF1A6B50((uint64_t)v10);
  return v7;
}

uint64_t sub_1DF1A68F0()
{
  return sub_1DFDF19A0();
}

void sub_1DF1A6960()
{
  if (!qword_1EAC29300)
  {
    type metadata accessor for SearchMoreSectionDescriptor();
    type metadata accessor for SearchMoreModel(255);
    sub_1DEA94BC0(&qword_1EAC24D20, (void (*)(uint64_t))type metadata accessor for SearchMoreSectionDescriptor);
    sub_1DEA94BC0((unint64_t *)&unk_1EAC28C40, (void (*)(uint64_t))type metadata accessor for SearchMoreModel);
    unint64_t v0 = sub_1DFDF19B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC29300);
    }
  }
}

unint64_t sub_1DF1A6A4C()
{
  unint64_t result = qword_1EAC29308;
  if (!qword_1EAC29308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29308);
  }
  return result;
}

uint64_t sub_1DF1A6AA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1DF1A6AFC()
{
  unint64_t result = qword_1EAC32450;
  if (!qword_1EAC32450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC32450);
  }
  return result;
}

uint64_t sub_1DF1A6B50(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF1A6BA4(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1DF1A6C00()
{
  unint64_t result = qword_1EAC29310;
  if (!qword_1EAC29310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29310);
  }
  return result;
}

uint64_t sub_1DF1A6C54(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DF1A6CA8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v5 = sub_1DFDF3D40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(a1, sel_objectForKey_, v9);

  if (v10)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
    sub_1DEA6FDEC(v19, v20);
    sub_1DE9A1E44();
    swift_dynamicCast();
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v12 = v18;
    _OWORD v11[2] = a1;
    v11[3] = v12;
    void v11[4] = a3;
    id v13 = a1;
    swift_retain();
    sub_1DFDF1010();
    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_objectForKey_, v14);

    if (v15)
    {
      sub_1DFDFF780();
      swift_unknownObjectRelease();
      sub_1DEA6FDEC(v19, v20);
      swift_dynamicCast();
      *(void *)&v20[0] = 0xD000000000000040;
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAD088], v5);
      sub_1DFDF1030();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1DF1A6FB4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v5 = sub_1DFDF6B40();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF6BA0();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF6BE0();
  uint64_t v29 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v25 - v16;
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
  uint64_t v18 = (void *)sub_1DFDFEE60();
  sub_1DFDF6BC0();
  MEMORY[0x1E01E5440](v15, 5.0);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v15, v11);
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = v26;
  uint64_t v21 = v27;
  _OWORD v19[2] = a2;
  void v19[3] = v20;
  v19[4] = v21;
  aBlock[4] = sub_1DF1A7A6C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9744A8;
  void aBlock[3] = &block_descriptor_13_5;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = a2;
  swift_retain();
  swift_release();
  sub_1DFDF6B70();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DEA54A14((unint64_t *)&qword_1EBAB9EB0, MEMORY[0x1E4FBCB00]);
  sub_1DEABDA4C();
  sub_1DEA54A14((unint64_t *)&qword_1EBABA860, (void (*)(uint64_t))sub_1DEABDA4C);
  sub_1DFDFF830();
  MEMORY[0x1E01ED670](v17, v10, v7, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return ((uint64_t (*)(char *, uint64_t))v28)(v17, v29);
}

void sub_1DF1A7394(void *a1, void (*a2)(id))
{
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a1, sel_objectForKey_, v4);

  if (v5)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
    sub_1DEA6FDEC(&v14, &v15);
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAC50);
    swift_dynamicCast();
    type metadata accessor for SavedFeedViewController();
    sub_1DFDFED50();

    uint64_t v6 = v16;
    if (v16)
    {
      sub_1DFDF30E0();
      uint64_t v7 = (void *)sub_1DFDF26C0();

      swift_release();
      id v8 = v7;
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      objc_msgSend(a1, sel_setObject_forKey_, v8, v9);

      id v10 = 0;
    }
    else
    {
      id v11 = objc_allocWithZone(MEMORY[0x1E4FAB4B8]);
      uint64_t v12 = (void *)sub_1DFDFDCE0();
      id v10 = objc_msgSend(v11, sel_initWithMessage_, v12);

      id v8 = v10;
    }
    a2(v10);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DF1A7630()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DF1A7668(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v4 = sub_1DFDF6B40();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDF6BA0();
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF6BE0();
  uint64_t v28 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  long long v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - v15;
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
  uint64_t v17 = (void *)sub_1DFDFEE60();
  sub_1DFDF6BC0();
  MEMORY[0x1E01E5440](v14, 2.0);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  v27(v14, v10);
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v25;
  uint64_t v20 = v26;
  void v18[2] = a1;
  v18[3] = v19;
  void v18[4] = v20;
  aBlock[4] = sub_1DF1A7A4C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9744A8;
  void aBlock[3] = &block_descriptor_80;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = a1;
  swift_retain();
  swift_release();
  sub_1DFDF6B70();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DEA54A14((unint64_t *)&qword_1EBAB9EB0, MEMORY[0x1E4FBCB00]);
  sub_1DEABDA4C();
  sub_1DEA54A14((unint64_t *)&qword_1EBABA860, (void (*)(uint64_t))sub_1DEABDA4C);
  sub_1DFDFF830();
  MEMORY[0x1E01ED670](v16, v9, v6, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
  return ((uint64_t (*)(char *, uint64_t))v27)(v16, v28);
}

uint64_t sub_1DF1A7A4C()
{
  return sub_1DF1A6CA8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1DF1A7A5C(uint64_t a1)
{
  return sub_1DF1A6FB4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1DF1A7A6C()
{
  sub_1DF1A7394(*(void **)(v0 + 16), *(void (**)(id))(v0 + 24));
}

uint64_t *sub_1DF1A7A78(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDE7600();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1DEA83C40();
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = type metadata accessor for HistoryFeedConfig();
    *(void *)&v9[*(int *)(v15 + 20)] = *(void *)&v10[*(int *)(v15 + 20)];
    uint64_t v16 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
    uint64_t v17 = &v9[v16];
    uint64_t v18 = &v10[v16];
    sub_1DEAC0B50();
    uint64_t v20 = v19;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v17, v18, v20);
    uint64_t v22 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
    *(void *)&v17[*(int *)(v22 + 20)] = *(void *)&v18[*(int *)(v22 + 20)];
    uint64_t v23 = type metadata accessor for HistoryFeedKnobsConfig();
    *(void *)&v17[*(int *)(v23 + 20)] = *(void *)&v18[*(int *)(v23 + 20)];
    uint64_t v24 = a3[6];
    uint64_t v25 = a3[7];
    uint64_t v26 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)v7 + v24) = (uint64_t)v26;
    *(uint64_t *)((char *)v7 + v25) = *(uint64_t *)((char *)a2 + v25);
    uint64_t v27 = a3[8];
    uint64_t v33 = (char *)v7 + v27;
    uint64_t v28 = (char *)a2 + v27;
    uint64_t v29 = sub_1DFDF8150();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_retain();
    id v31 = v26;
    swift_unknownObjectRetain();
    v30(v33, v28, v29);
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  }
  return v7;
}

uint64_t sub_1DF1A7D20(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1DFDE7600();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  type metadata accessor for HistoryFeedConfig();
  swift_bridgeObjectRelease();
  uint64_t v7 = v4 + *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  sub_1DEAC0B50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  swift_release();

  swift_unknownObjectRelease();
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_1DFDF8150();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *sub_1DF1A7EAC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDE7600();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1DEA83C40();
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = type metadata accessor for HistoryFeedConfig();
  *(void *)&v8[*(int *)(v14 + 20)] = *(void *)&v9[*(int *)(v14 + 20)];
  uint64_t v15 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  sub_1DEAC0B50();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v20(v16, v17, v19);
  uint64_t v21 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  *(void *)&v16[*(int *)(v21 + 20)] = *(void *)&v17[*(int *)(v21 + 20)];
  uint64_t v22 = type metadata accessor for HistoryFeedKnobsConfig();
  *(void *)&v16[*(int *)(v22 + 20)] = *(void *)&v17[*(int *)(v22 + 20)];
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = *(void **)((char *)a2 + v23);
  *(void *)((char *)a1 + v23) = v25;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v26 = a3[8];
  uint64_t v32 = (char *)a1 + v26;
  uint64_t v27 = (char *)a2 + v26;
  uint64_t v28 = sub_1DFDF8150();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_retain();
  id v30 = v25;
  swift_unknownObjectRetain();
  v29(v32, v27, v28);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

void *sub_1DF1A8104(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDE7600();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DEA83C40();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = type metadata accessor for HistoryFeedConfig();
  *(void *)&v7[*(int *)(v15 + 20)] = *(void *)&v8[*(int *)(v15 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  sub_1DEAC0B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  *(void *)&v17[*(int *)(v20 + 20)] = *(void *)&v18[*(int *)(v20 + 20)];
  swift_retain();
  swift_release();
  uint64_t v21 = type metadata accessor for HistoryFeedKnobsConfig();
  *(void *)&v17[*(int *)(v21 + 20)] = *(void *)&v18[*(int *)(v21 + 20)];
  uint64_t v22 = a3[6];
  uint64_t v23 = *(void **)((char *)a1 + v22);
  uint64_t v24 = *(void **)((char *)a2 + v22);
  *(void *)((char *)a1 + v22) = v24;
  id v25 = v24;

  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_1DFDF8150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *sub_1DF1A83D4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDE7600();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DEA83C40();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = type metadata accessor for HistoryFeedConfig();
  *(void *)&v7[*(int *)(v12 + 20)] = *(void *)&v8[*(int *)(v12 + 20)];
  uint64_t v13 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  sub_1DEAC0B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
  uint64_t v18 = type metadata accessor for HistoryFeedKnobsConfig();
  *(void *)&v14[*(int *)(v18 + 20)] = *(void *)&v15[*(int *)(v18 + 20)];
  uint64_t v19 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1DFDF8150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

void *sub_1DF1A85E8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDE7600();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DEA83C40();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = type metadata accessor for HistoryFeedConfig();
  *(void *)&v7[*(int *)(v15 + 20)] = *(void *)&v8[*(int *)(v15 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(type metadata accessor for HistoryFeedContentConfig() + 20);
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  sub_1DEAC0B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = type metadata accessor for ArticleListHistoryFeedGroupKnobs();
  *(void *)&v17[*(int *)(v20 + 20)] = *(void *)&v18[*(int *)(v20 + 20)];
  swift_release();
  uint64_t v21 = type metadata accessor for HistoryFeedKnobsConfig();
  *(void *)&v17[*(int *)(v21 + 20)] = *(void *)&v18[*(int *)(v21 + 20)];
  uint64_t v22 = a3[6];
  uint64_t v23 = *(void **)((char *)a1 + v22);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);

  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_unknownObjectRelease();
  uint64_t v24 = a3[8];
  id v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_1DFDF8150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_1DF1A8894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF1A88A8);
}

uint64_t sub_1DF1A88A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for HistoryFeedContentConfig();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DFDF8150();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DF1A89D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF1A89E8);
}

void *sub_1DF1A89E8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for HistoryFeedContentConfig();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DFDF8150();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 32);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1DF1A8B14@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sub_1DFDF8150();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v6 = v28;
  uint64_t v29 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = v8;
  uint64_t v9 = type metadata accessor for HistoryFeedContentConfig();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  uint64_t v26 = v2[1];
  uint64_t v27 = v12;
  sub_1DF1A8E74(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for HistoryFeedContentConfig);
  uint64_t v13 = (int *)type metadata accessor for HistoryFeedServiceConfig();
  uint64_t v14 = *(void **)((char *)v2 + v13[6]);
  uint64_t v15 = *(void **)((char *)v2 + v13[7]);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v17 = v8;
  uint64_t v18 = v29;
  v16(v17, (char *)v2 + v13[8], v29);
  uint64_t v19 = v26;
  *(void *)a2 = v12;
  *((void *)a2 + 1) = v19;
  sub_1DF1A8E74((uint64_t)v11, (uint64_t)&a2[v13[5]], (uint64_t (*)(void))type metadata accessor for HistoryFeedContentConfig);
  *(void *)&a2[v13[6]] = v14;
  *(void *)&a2[v13[7]] = v15;
  uint64_t v20 = v25;
  v16(&a2[v13[8]], v25, v18);
  id v21 = v14;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  double v22 = (double)(uint64_t)objc_msgSend(v15, sel_autoRefreshMinimumInterval);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v18);
  uint64_t result = sub_1DEB4B27C((uint64_t)v11);
  *(double *)&a2[v13[9]] = v22;
  return result;
}

uint64_t sub_1DF1A8D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF1A8E74(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for HistoryFeedContentConfig);
}

uint64_t sub_1DF1A8D74@<X0>(uint64_t a1@<X8>)
{
  return sub_1DED9B26C(MEMORY[0x1E4F803E0], MEMORY[0x1E4F80408], a1);
}

uint64_t sub_1DF1A8D98@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF1A8E74(v1, a1, (uint64_t (*)(void))type metadata accessor for HistoryFeedServiceConfig);
}

uint64_t sub_1DF1A8DD4()
{
  return sub_1DE94CD70((unint64_t *)&unk_1EBAF0070, (void (*)(uint64_t))type metadata accessor for HistoryFeedContentConfig);
}

unint64_t sub_1DF1A8E20()
{
  unint64_t result = qword_1EBAED048;
  if (!qword_1EBAED048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAED048);
  }
  return result;
}

uint64_t sub_1DF1A8E74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for WebEmbedResource(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDE7220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDF2200();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for WebEmbedResource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDE7220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DFDF2200();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for WebEmbedResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF2200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for WebEmbedResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF2200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for WebEmbedResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF2200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for WebEmbedResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF2200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF1A93E4);
}

uint64_t sub_1DF1A93E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_1DFDF2200();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WebEmbedResource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF1A951C);
}

uint64_t sub_1DF1A951C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DFDE7220();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DFDF2200();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for WebEmbedResource()
{
  uint64_t result = qword_1EBAD5478;
  if (!qword_1EBAD5478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF1A9678()
{
  uint64_t result = sub_1DFDE7220();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DFDF2200();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DF1A9748@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v7 + 16);
  v11(a3, a1, v6, v8);
  ((void (*)(char *, uint64_t, uint64_t))v11)(v10, a1, v6);
  uint64_t v12 = type metadata accessor for WebEmbedResource();
  uint64_t v13 = a3 + *(int *)(v12 + 20);
  id v14 = a2;
  sub_1DF21EAAC((uint64_t)v10, a2, v13);
  uint64_t v15 = sub_1DFDE7070();
  if (v16)
  {
    uint64_t v17 = v15;
    uint64_t v18 = v16;
    if (v15 == 1702195828 && v16 == 0xE400000000000000
      || (sub_1DFDFFF50() & 1) != 0
      || v17 == 49 && v18 == 0xE100000000000000)
    {
      char v19 = 1;
    }
    else
    {
      char v19 = sub_1DFDFFF50();
    }

    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    uint64_t v21 = *(int *)(v12 + 24);
    char v22 = v19 & 1;
  }
  else
  {

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    uint64_t v21 = *(int *)(v12 + 24);
    char v22 = 1;
  }
  *(unsigned char *)(a3 + v21) = v22;
  return result;
}

uint64_t *sub_1DF1A995C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDE7600();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DEA83C40();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *sub_1DF1A9AE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA83C40();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1DF1A9C98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA83C40();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  return a1;
}

char *sub_1DF1A9DC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA83C40();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DF1A9F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA83C40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

void sub_1DF1AA028(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA83C40();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1DF1AA0E4(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      break;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1DEA9B358(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      JUMPOUT(0x1DF1AA258);
    }
    uint64_t v4 = 0;
    uint64_t v3 = v14;
    unint64_t v13 = v1 & 0xC000000000000001;
    unint64_t v5 = v1;
    while (v2 != v4)
    {
      if (v13) {
        MEMORY[0x1E01EE240](v4, v1);
      }
      else {
        swift_retain();
      }
      uint64_t v6 = sub_1DFDFA7A0();
      uint64_t v8 = v7;
      swift_release();
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      if (v10 >= v9 >> 1) {
        sub_1DEA9B358(v9 > 1, v10 + 1, 1);
      }
      ++v4;
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v11 = v14 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v8;
      unint64_t v1 = v5;
      if (v2 == v4) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1DF1AA268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CuratedAudioFeedGroupConfigData();
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6D1D4();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for AudioFeedGroupConfig();
  uint64_t v11 = *(void *)(v30 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v30);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = *(void *)(v1 + *(int *)(type metadata accessor for AudioFeedConfig() + 20));
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = v11;
    uint64_t v20 = v17 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v27 = a1;
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v29 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v25 = v17;
    uint64_t v26 = v19;
    uint64_t v21 = *(void *)(v19 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1DEA6CF60(v20, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
      sub_1DEA6CF60((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        (*v28)(v10, v14, v7);
        sub_1DFDF73B0();
        swift_bridgeObjectRetain();
        sub_1DEA6D36C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroupConfigData);
        uint64_t v22 = sub_1DFDFFCA0();
        swift_bridgeObjectRelease();
        if (!v22)
        {
          (*v29)(v10, v7);
          swift_bridgeObjectRelease();
          a1 = v27;
          sub_1DEA6EAE8((uint64_t)v16, v27);
          uint64_t v23 = 0;
          uint64_t v11 = v26;
          goto LABEL_11;
        }
        (*v29)(v10, v7);
      }
      else
      {
        sub_1DEA6D36C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
      }
      sub_1DEA6D36C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
      v20 += v21;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = 1;
        uint64_t v11 = v26;
        a1 = v27;
        goto LABEL_11;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = 1;
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, v23, 1, v30);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF1AA614(char *a1, char *a2)
{
  return sub_1DF2A73C0(*a1, *a2);
}

uint64_t sub_1DF1AA620()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF1AA6A8()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF1AA71C()
{
  return sub_1DFE00140();
}

uint64_t sub_1DF1AA7A0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1DF1AA800(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x446873696C627570;
  if (*v1) {
    uint64_t v2 = 0x7370756F7267;
  }
  unint64_t v3 = 0xEB00000000657461;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DF1AA844@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF1AA8A8(uint64_t a1)
{
  unint64_t v2 = sub_1DEAE1AE0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF1AA8E4(uint64_t a1)
{
  unint64_t v2 = sub_1DEAE1AE0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF1AA920(void *a1)
{
  uint64_t v3 = v1;
  sub_1DEAE8A60(0, &qword_1EAC29330, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEAE1AE0();
  sub_1DFE001A0();
  char v13 = 0;
  sub_1DFDE7600();
  sub_1DE96D70C(&qword_1EBAA6D78, MEMORY[0x1E4F27928]);
  sub_1DFDFFE30();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + *(int *)(type metadata accessor for AudioFeedConfig() + 20));
    v11[15] = 1;
    sub_1DEA209E0(0, &qword_1EAC29338, (uint64_t (*)(uint64_t))type metadata accessor for AudioFeedGroupConfig, MEMORY[0x1E4FBB320]);
    sub_1DF1AB73C();
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DF1AAB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CuratedAudioFeedGroupConfigData();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6D1D4();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AudioFeedGroupConfig();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a2 + 24);
  sub_1DEA6CF60(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRetain();
      sub_1DEA6D36C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
      char v16 = 1;
      break;
    case 2u:
      swift_bridgeObjectRetain();
      sub_1DEA6D36C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
      char v16 = 3;
      break;
    case 3u:
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
      swift_bridgeObjectRetain();
      sub_1DFDF73B0();
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1DFDFFCA0();
      swift_bridgeObjectRelease();
      if (v17)
      {
        sub_1DEA6D36C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroupConfigData);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        if (v17 == 1) {
          char v16 = 5;
        }
        else {
          char v16 = 4;
        }
      }
      else
      {
        sub_1DEA6D36C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroupConfigData);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        char v16 = 0;
      }
      break;
    default:
      swift_bridgeObjectRetain();
      sub_1DEA6D36C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
      char v16 = 2;
      break;
  }
  char v18 = sub_1DF1B5AE0(v16, v15);
  swift_bridgeObjectRelease();
  return v18 & 1;
}

uint64_t sub_1DF1AAEAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEA6CF60(v1, a1, (uint64_t (*)(void))sub_1DEA83C40);
}

uint64_t sub_1DF1AAEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + *(int *)(a3 + 20));
  if (*(void *)(*(void *)(a1 + 24) + 16))
  {
    void v6[2] = MEMORY[0x1F4188790](a1);
    swift_bridgeObjectRetain();
    return sub_1DF7CAF48((uint64_t (*)(char *))sub_1DF1AB71C, (uint64_t)v6, v4);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DF1AAF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DEA83C40();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6CF60(v2, (uint64_t)v7, (uint64_t (*)(void))sub_1DEA83C40);
  swift_bridgeObjectRetain();
  return sub_1DEA6C0C4((uint64_t)v7, a1, a2);
}

uint64_t sub_1DF1AB038(void *a1)
{
  return sub_1DF1AA920(a1);
}

uint64_t sub_1DF1AB050()
{
  return sub_1DE96D70C(&qword_1EBAADCD8, (void (*)(uint64_t))type metadata accessor for AudioFeedGroupConfig);
}

uint64_t sub_1DF1AB098()
{
  return sub_1DE96D70C((unint64_t *)&qword_1EBAC3910, (void (*)(uint64_t))type metadata accessor for AudioFeedServiceContext);
}

uint64_t sub_1DF1AB0E0()
{
  uint64_t v0 = sub_1DFDFAA20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for CuratedAudioFeedGroupConfigData();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DF1AB80C(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DF1AB37C(v9);
  sub_1DEA6D1D4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10) == 1)
  {
    sub_1DEA6D36C((uint64_t)v9, (uint64_t (*)(void))sub_1DF1AB80C);
    return MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1DFDF73B0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, &v6[*(int *)(v4 + 20)], v0);
    sub_1DEA6D36C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroupConfigData);
    sub_1DFDFA820();
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    unint64_t v14 = sub_1DFDFE3C0();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1DF1AA0E4(v14);
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t sub_1DF1AB37C@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CuratedAudioFeedGroupConfigData();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6D1D4();
  uint64_t v28 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v27 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AudioFeedGroupConfig();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v1 + *(int *)(type metadata accessor for AudioFeedConfig() + 20));
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
    uint64_t v22 = 1;
    uint64_t v17 = v28;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v22, 1, v17);
  }
  uint64_t v25 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  id v31 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v29 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v15 = *(void *)(v9 + 72);
  v24[1] = v12;
  swift_bridgeObjectRetain();
  char v16 = v27;
  uint64_t v17 = v28;
  uint64_t v30 = v8;
  uint64_t v18 = (uint64_t)v32;
  while (1)
  {
    sub_1DEA6CF60(v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
    if (swift_getEnumCaseMultiPayload() == 3) {
      break;
    }
    sub_1DEA6D36C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AudioFeedGroupConfig);
LABEL_4:
    v14 += v15;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = 1;
      a1 = v26;
      goto LABEL_12;
    }
  }
  uint64_t v19 = *v31;
  (*v31)(v16, v11, v17);
  uint64_t v20 = v16;
  sub_1DFDF73B0();
  swift_bridgeObjectRetain();
  sub_1DEA6D36C(v18, (uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroupConfigData);
  uint64_t v21 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v21 == 1)
  {
    (*v29)(v20, v17);
    char v16 = v20;
    goto LABEL_4;
  }
  if (v21)
  {
    uint64_t v17 = v28;
    char v16 = v27;
    (*v29)(v27, v28);
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  a1 = v26;
  uint64_t v17 = v28;
  v19(v26, v27, v28);
  uint64_t v22 = 0;
LABEL_12:
  uint64_t v6 = v25;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v22, 1, v17);
}

uint64_t sub_1DF1AB71C(uint64_t a1)
{
  return sub_1DF1AAB38(a1, *(void *)(v1 + 16)) & 1;
}

unint64_t sub_1DF1AB73C()
{
  unint64_t result = qword_1EAC29340;
  if (!qword_1EAC29340)
  {
    sub_1DEA209E0(255, &qword_1EAC29338, (uint64_t (*)(uint64_t))type metadata accessor for AudioFeedGroupConfig, MEMORY[0x1E4FBB320]);
    sub_1DE96D70C(&qword_1EBAADCE8, (void (*)(uint64_t))type metadata accessor for AudioFeedGroupConfig);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29340);
  }
  return result;
}

void sub_1DF1AB80C(uint64_t a1)
{
}

unsigned char *storeEnumTagSinglePayload for AudioFeedConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF1AB90CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioFeedConfig.CodingKeys()
{
  return &type metadata for AudioFeedConfig.CodingKeys;
}

unint64_t sub_1DF1AB948()
{
  unint64_t result = qword_1EAC29348;
  if (!qword_1EAC29348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29348);
  }
  return result;
}

uint64_t sub_1DF1AB99C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FollowingEditorialModel()
{
  return self;
}

unint64_t sub_1DF1AB9F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v1 + 104);
  if (v2 == 255) {
    return 0xD000000000000017;
  }
  int v3 = *(void **)(v1 + 96);
  if (v2)
  {
    uint64_t v5 = *(void *)(v1 + 80);
    sub_1DEFB5C74(v5, *(void *)(v1 + 88), *(void **)(v1 + 96), 1);
    return v5;
  }
  else
  {
    id v4 = v3;
  }
  return (unint64_t)v3;
}

uint64_t sub_1DF1ABA84()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)v0 + 16) + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DF1ABABC()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1DF1ABAF4()
{
  uint64_t v1 = *(void **)(*(void *)(*(void *)v0 + 16) + 64);
  id v2 = v1;
  return v1;
}

unint64_t sub_1DF1ABB24()
{
  return sub_1DF1AB9F8();
}

uint64_t sub_1DF1ABB48()
{
  return 6291456;
}

BOOL sub_1DF1ABB50()
{
  return *(void *)(*(void *)(*(void *)(*(void *)v0 + 16) + 72) + 16) != 0;
}

uint64_t sub_1DF1ABB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DF1AC100(&qword_1EAC29368, a2, (void (*)(uint64_t))type metadata accessor for FollowingEditorialModel);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1DF1ABBF8(uint64_t a1, uint64_t a2)
{
  return sub_1DEFB6BAC(*(void *)(*(void *)a1 + 16), *(void *)(*(void *)a2 + 16));
}

uint64_t sub_1DF1ABC0C(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEB0B564(0);
  uint64_t v24 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v22 - v10;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (!v12) {
    return v13;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEDF6934(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = v25;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v15 = 0;
      uint64_t v23 = v6 + 32;
      do
      {
        unint64_t v16 = a1;
        void *v4 = MEMORY[0x1E01EE240](v15, a1);
        swift_storeEnumTagMultiPayload();
        sub_1DF1AC100(&qword_1EBAD4970, 255, (void (*)(uint64_t))type metadata accessor for FollowingModel);
        sub_1DFDF0B40();
        uint64_t v25 = v13;
        unint64_t v18 = *(void *)(v13 + 16);
        unint64_t v17 = *(void *)(v13 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1DEDF6934(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v25;
        }
        ++v15;
        *(void *)(v13 + 16) = v18 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v18, v11, v24);
        a1 = v16;
      }
      while (v12 != v15);
    }
    else
    {
      uint64_t v19 = (void *)(a1 + 32);
      uint64_t v23 = sub_1DF1AC100(&qword_1EBAD4970, 255, (void (*)(uint64_t))type metadata accessor for FollowingModel);
      do
      {
        void *v4 = *v19;
        swift_storeEnumTagMultiPayload();
        swift_retain();
        sub_1DFDF0B40();
        uint64_t v25 = v13;
        unint64_t v21 = *(void *)(v13 + 16);
        unint64_t v20 = *(void *)(v13 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1DEDF6934(v20 > 1, v21 + 1, 1);
          uint64_t v13 = v25;
        }
        *(void *)(v13 + 16) = v21 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v21, v9, v24);
        ++v19;
        --v12;
      }
      while (v12);
    }
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF1ABF98(uint64_t a1, uint64_t a2)
{
  return sub_1DF1AC100(&qword_1EAC29350, a2, (void (*)(uint64_t))type metadata accessor for FollowingEditorialModel);
}

uint64_t sub_1DF1ABFE0(uint64_t a1, uint64_t a2)
{
  return sub_1DF1AC100(&qword_1EAC29358, a2, (void (*)(uint64_t))type metadata accessor for FollowingEditorialModel);
}

uint64_t sub_1DF1AC028(uint64_t a1, uint64_t a2)
{
  return sub_1DF1AC100(&qword_1EAC29360, a2, (void (*)(uint64_t))type metadata accessor for FollowingEditorialModel);
}

uint64_t sub_1DF1AC070(uint64_t a1, uint64_t a2)
{
  return sub_1DF1AC100(&qword_1EAC29368, a2, (void (*)(uint64_t))type metadata accessor for FollowingEditorialModel);
}

uint64_t sub_1DF1AC0B8(uint64_t a1, uint64_t a2)
{
  return sub_1DF1AC100(&qword_1EAC29370, a2, (void (*)(uint64_t))type metadata accessor for FollowingEditorialModel);
}

uint64_t sub_1DF1AC100(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF1AC178(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x656C746974;
      break;
    case 3:
      unint64_t result = 7107189;
      break;
    case 4:
      unint64_t result = 0x7974697669746361;
      break;
    case 5:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 6:
      unint64_t result = 0x6F506C6C6F726373;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DF1AC288()
{
  return sub_1DF1AC178(*v0);
}

uint64_t sub_1DF1AC290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DF1AD4AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DF1AC2B8(uint64_t a1)
{
  unint64_t v2 = sub_1DF1ACF84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF1AC2F4(uint64_t a1)
{
  unint64_t v2 = sub_1DF1ACF84();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF1AC3D0()
{
  return type metadata accessor for NewsActivityInfo();
}

uint64_t type metadata accessor for NewsActivityInfo()
{
  uint64_t result = qword_1EBAA8EE0;
  if (!qword_1EBAA8EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DF1AC424()
{
  sub_1DEA3C638();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1DF1AC4F4(void *a1)
{
  uint64_t v3 = v1;
  sub_1DF1AD0D4(0, (unint64_t *)&unk_1EBABB368, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF1ACF84();
  sub_1DFE001A0();
  LOBYTE(v12[0]) = *(unsigned char *)(v3 + OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_type);
  char v13 = 0;
  sub_1DF1AD138();
  sub_1DFDFFE80();
  if (!v2)
  {
    LOBYTE(v12[0]) = 1;
    sub_1DFDFFE40();
    LOBYTE(v12[0]) = 2;
    sub_1DFDFFDE0();
    LOBYTE(v12[0]) = 3;
    sub_1DFDE7220();
    sub_1DEB1FD20((unint64_t *)&unk_1EBAA6D20);
    sub_1DFDFFE30();
    *(void *)&v12[0] = *(void *)(v3 + OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_activityTraits);
    char v13 = 4;
    sub_1DEDBD6B8();
    sub_1DF1AD18C(&qword_1EBABA7C8, (void (*)(void))sub_1DF1AD1F8);
    sub_1DFDFFE30();
    LOBYTE(v12[0]) = 5;
    sub_1DFDFFDE0();
    long long v10 = *(_OWORD *)(v3 + OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_scrollPosition + 16);
    v12[0] = *(_OWORD *)(v3 + OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_scrollPosition);
    v12[1] = v10;
    char v13 = 6;
    sub_1DF1AD24C();
    sub_1DFDFFE30();
    LOBYTE(v12[0]) = 7;
    sub_1DFDFFE20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_1DF1AC868(void *a1)
{
  uint64_t v3 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1DEA3C638();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF1AD0D4(0, &qword_1EBAC01A8, MEMORY[0x1E4FBBDC0]);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)&v32 - v9;
  uint64_t v11 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1DF1ACF84();
  uint64_t v12 = v3;
  char v13 = v10;
  sub_1DFE00190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    id v31 = ObjectType;

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v14 = (uint64_t)v7;
    uint64_t v15 = v32;
    char v39 = 0;
    sub_1DF1ACFD8();
    sub_1DFDFFD90();
    v12[OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_type] = v37;
    LOBYTE(v37) = 1;
    uint64_t v17 = sub_1DFDFFD50();
    uint64_t v18 = (uint64_t)v34;
    uint64_t v19 = (uint64_t *)&v12[OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_identifier];
    *uint64_t v19 = v17;
    v19[1] = v20;
    LOBYTE(v37) = 2;
    uint64_t v21 = sub_1DFDFFCF0();
    uint64_t v22 = (uint64_t *)&v12[OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_title];
    *uint64_t v22 = v21;
    v22[1] = v23;
    sub_1DFDE7220();
    LOBYTE(v37) = 3;
    sub_1DEB1FD20((unint64_t *)&unk_1EBAA6D30);
    sub_1DFDFFD40();
    sub_1DEAEAEA0(v14, (uint64_t)&v12[OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_url]);
    sub_1DEDBD6B8();
    char v39 = 4;
    sub_1DF1AD18C((unint64_t *)&unk_1EBAC00D8, (void (*)(void))sub_1DF1AD02C);
    sub_1DFDFFD40();
    *(void *)&v12[OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_activityTraits] = v37;
    LOBYTE(v37) = 5;
    uint64_t v24 = sub_1DFDFFCF0();
    uint64_t v25 = (uint64_t *)&v12[OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_bookmark];
    uint64_t *v25 = v24;
    v25[1] = v26;
    char v39 = 6;
    sub_1DF1AD080();
    sub_1DFDFFD40();
    uint64_t v27 = &v12[OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_scrollPosition];
    *(_OWORD *)uint64_t v27 = v37;
    *((_OWORD *)v27 + 1) = v38;
    LOBYTE(v37) = 7;
    uint64_t v28 = sub_1DFDFFD30();
    uint64_t v29 = &v12[OBJC_IVAR____TtC7NewsUI216NewsActivityInfo_feedConfigurationRawValue];
    *(void *)uint64_t v29 = v28;
    v29[8] = v30 & 1;

    v36.receiver = v12;
    v36.super_class = ObjectType;
    id v31 = objc_msgSendSuper2(&v36, sel_init);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v33);
    __swift_destroy_boxed_opaque_existential_1(v18);
  }
  return v31;
}

id sub_1DF1ACF10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = sub_1DF1AC868(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DF1ACF60(void *a1)
{
  return sub_1DF1AC4F4(a1);
}

unint64_t sub_1DF1ACF84()
{
  unint64_t result = qword_1EBAA8EC0;
  if (!qword_1EBAA8EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAA8EC0);
  }
  return result;
}

unint64_t sub_1DF1ACFD8()
{
  unint64_t result = qword_1EBABE758;
  if (!qword_1EBABE758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABE758);
  }
  return result;
}

unint64_t sub_1DF1AD02C()
{
  unint64_t result = qword_1EBABE778[0];
  if (!qword_1EBABE778[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBABE778);
  }
  return result;
}

unint64_t sub_1DF1AD080()
{
  unint64_t result = qword_1EBAC2070;
  if (!qword_1EBAC2070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC2070);
  }
  return result;
}

void sub_1DF1AD0D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF1ACF84();
    unint64_t v7 = a3(a1, &type metadata for NewsActivityInfo.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DF1AD138()
{
  unint64_t result = qword_1EBAA8EF8;
  if (!qword_1EBAA8EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAA8EF8);
  }
  return result;
}

uint64_t sub_1DF1AD18C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEDBD6B8();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DF1AD1F8()
{
  unint64_t result = qword_1EBAA94E8;
  if (!qword_1EBAA94E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAA94E8);
  }
  return result;
}

unint64_t sub_1DF1AD24C()
{
  unint64_t result = qword_1EBAC2068;
  if (!qword_1EBAC2068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC2068);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsActivityInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF1AD36CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsActivityInfo.CodingKeys()
{
  return &type metadata for NewsActivityInfo.CodingKeys;
}

unint64_t sub_1DF1AD3A8()
{
  unint64_t result = qword_1EAC29390;
  if (!qword_1EAC29390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29390);
  }
  return result;
}

unint64_t sub_1DF1AD400()
{
  unint64_t result = qword_1EBAA8ED0;
  if (!qword_1EBAA8ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAA8ED0);
  }
  return result;
}

unint64_t sub_1DF1AD458()
{
  unint64_t result = qword_1EBAA8EC8;
  if (!qword_1EBAA8EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAA8EC8);
  }
  return result;
}

uint64_t sub_1DF1AD4AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xEE00737469617254 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xE800000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F506C6C6F726373 && a2 == 0xEE006E6F69746973 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DFEE51E0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

char *sub_1DF1AD820(char *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    unsigned int v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1DFDE7600();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DEA20A44(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = type metadata accessor for SavedFeedConfig();
    *(void *)&v4[*(int *)(v11 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
    uint64_t v12 = *(int *)(a3 + 20);
    char v13 = &v4[v12];
    uint64_t v14 = (char *)a2 + v12;
    sub_1DEAC0CEC();
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v13, v14, v16);
    uint64_t v18 = type metadata accessor for ArticleListSavedFeedGroupKnobs();
    *(void *)&v13[*(int *)(v18 + 20)] = *(void *)&v14[*(int *)(v18 + 20)];
    uint64_t v19 = type metadata accessor for SavedFeedKnobsConfig();
    *(void *)&v13[*(int *)(v19 + 20)] = *(void *)&v14[*(int *)(v19 + 20)];
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DF1ADA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDE7600();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  type metadata accessor for SavedFeedConfig();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  sub_1DEAC0CEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for ArticleListSavedFeedGroupKnobs();
  return swift_release();
}

char *sub_1DF1ADB68(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA20A44(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for SavedFeedConfig();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  sub_1DEAC0CEC();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v11, v12, v14);
  uint64_t v16 = type metadata accessor for ArticleListSavedFeedGroupKnobs();
  *(void *)&v11[*(int *)(v16 + 20)] = *(void *)&v12[*(int *)(v16 + 20)];
  uint64_t v17 = type metadata accessor for SavedFeedKnobsConfig();
  *(void *)&v11[*(int *)(v17 + 20)] = *(void *)&v12[*(int *)(v17 + 20)];
  swift_retain();
  return a1;
}

char *sub_1DF1ADD3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA20A44(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for SavedFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  sub_1DEAC0CEC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for ArticleListSavedFeedGroupKnobs();
  *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
  swift_retain();
  swift_release();
  uint64_t v18 = type metadata accessor for SavedFeedKnobsConfig();
  *(void *)&v14[*(int *)(v18 + 20)] = *(void *)&v15[*(int *)(v18 + 20)];
  return a1;
}

char *sub_1DF1ADF78(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA20A44(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for SavedFeedConfig();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  sub_1DEAC0CEC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for ArticleListSavedFeedGroupKnobs();
  *(void *)&v11[*(int *)(v14 + 20)] = *(void *)&v12[*(int *)(v14 + 20)];
  uint64_t v15 = type metadata accessor for SavedFeedKnobsConfig();
  *(void *)&v11[*(int *)(v15 + 20)] = *(void *)&v12[*(int *)(v15 + 20)];
  return a1;
}

char *sub_1DF1AE130(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA20A44(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for SavedFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  sub_1DEAC0CEC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for ArticleListSavedFeedGroupKnobs();
  *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
  swift_release();
  uint64_t v18 = type metadata accessor for SavedFeedKnobsConfig();
  *(void *)&v14[*(int *)(v18 + 20)] = *(void *)&v15[*(int *)(v18 + 20)];
  return a1;
}

uint64_t sub_1DF1AE35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF1AE370);
}

uint64_t sub_1DF1AE370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SavedFeedConfig();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for SavedFeedKnobsConfig();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DF1AE468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF1AE47C);
}

uint64_t sub_1DF1AE47C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SavedFeedConfig();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for SavedFeedKnobsConfig();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1DF1AE580()
{
  return sub_1DE94D328(&qword_1EBAD4F58, (void (*)(uint64_t))type metadata accessor for SavedFeedConfig);
}

uint64_t sub_1DF1AE5C8()
{
  return sub_1DE94D328(&qword_1EBAEE878, (void (*)(uint64_t))type metadata accessor for SavedFeedKnobsConfig);
}

uint64_t sub_1DF1AE610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  sub_1DEA20A44(0, (unint64_t *)&qword_1EBAE95F8, (void (*)(uint64_t))sub_1DEAC0CEC);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v54 = (char *)&v54 - v5;
  uint64_t v6 = type metadata accessor for ArticleListSavedFeedGroupKnobs();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v57 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA20A44(0, &qword_1EBAE0D90, (void (*)(uint64_t))type metadata accessor for ArticleListSavedFeedGroupKnobs);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  long long v66 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  long long v64 = (char *)&v54 - v11;
  uint64_t v60 = type metadata accessor for SavedFeedGroupKnobs();
  uint64_t v12 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v59 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA20A44(0, qword_1EBAD7090, (void (*)(uint64_t))type metadata accessor for SavedFeedGroupKnobs);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v65 = (uint64_t)&v54 - v17;
  sub_1DEA20A44(0, &qword_1EBAD7FA8, (void (*)(uint64_t))type metadata accessor for SavedFeedKnobsConfig);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v54 - v19;
  uint64_t v69 = type metadata accessor for SavedFeedKnobsConfig();
  uint64_t v21 = *(void *)(v69 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v69);
  uint64_t v58 = (uint64_t)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v62 = (uint64_t)&v54 - v24;
  sub_1DEA20A44(0, &qword_1EBAD4F68, (void (*)(uint64_t))type metadata accessor for SavedFeedConfig);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v54 - v26;
  uint64_t v28 = type metadata accessor for SavedFeedConfig();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  id v31 = (char *)&v54 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a1;
  sub_1DF1AF6A4(a1, (uint64_t)v27, &qword_1EBAD4F68, (void (*)(uint64_t))type metadata accessor for SavedFeedConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    uint64_t v32 = sub_1DFDE7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
    *(void *)&v31[*(int *)(v28 + 20)] = MEMORY[0x1E4FBC860];
    sub_1DF1AF710((uint64_t)v27, &qword_1EBAD4F68, (void (*)(uint64_t))type metadata accessor for SavedFeedConfig);
  }
  else
  {
    sub_1DF1AF76C((uint64_t)v27, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for SavedFeedConfig);
  }
  uint64_t v34 = v67;
  uint64_t v33 = v68;
  uint64_t v35 = (uint64_t)v66;
  uint64_t v36 = (uint64_t)v64;
  uint64_t v37 = v69;
  sub_1DF1AF76C((uint64_t)v31, v68, (uint64_t (*)(void))type metadata accessor for SavedFeedConfig);
  sub_1DF1AF6A4(v34, (uint64_t)v20, &qword_1EBAD7FA8, (void (*)(uint64_t))type metadata accessor for SavedFeedKnobsConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v37) == 1)
  {
    uint64_t v38 = v65;
    uint64_t v39 = v60;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v65, 1, 1, v60);
    uint64_t v40 = v38;
    uint64_t v41 = v61;
    sub_1DF1AF6A4(v40, v61, qword_1EBAD7090, (void (*)(uint64_t))type metadata accessor for SavedFeedGroupKnobs);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v41, 1, v39) == 1)
    {
      uint64_t v43 = v55;
      uint64_t v42 = v56;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v36, 1, 1, v56);
      sub_1DF1AF6A4(v36, v35, &qword_1EBAE0D90, (void (*)(uint64_t))type metadata accessor for ArticleListSavedFeedGroupKnobs);
      int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v35, 1, v42);
      uint64_t v45 = v63;
      long long v46 = v57;
      uint64_t v47 = v59;
      if (v44 == 1)
      {
        sub_1DEAC0CEC();
        uint64_t v49 = (uint64_t)v54;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v54, 1, 1, v48);
        sub_1DF17A8FC(v49, 0, v46);
        sub_1DF1AF710(v36, &qword_1EBAE0D90, (void (*)(uint64_t))type metadata accessor for ArticleListSavedFeedGroupKnobs);
        sub_1DF1AF710(v35, &qword_1EBAE0D90, (void (*)(uint64_t))type metadata accessor for ArticleListSavedFeedGroupKnobs);
      }
      else
      {
        sub_1DF1AF710(v36, &qword_1EBAE0D90, (void (*)(uint64_t))type metadata accessor for ArticleListSavedFeedGroupKnobs);
        sub_1DF1AF76C(v35, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ArticleListSavedFeedGroupKnobs);
      }
      uint64_t v37 = v69;
      sub_1DF1AF76C((uint64_t)v46, v47, (uint64_t (*)(void))type metadata accessor for ArticleListSavedFeedGroupKnobs);
      sub_1DF1AF710(v61, qword_1EBAD7090, (void (*)(uint64_t))type metadata accessor for SavedFeedGroupKnobs);
    }
    else
    {
      uint64_t v47 = v59;
      sub_1DF1AF76C(v41, v59, (uint64_t (*)(void))type metadata accessor for SavedFeedGroupKnobs);
      uint64_t v45 = v63;
    }
    uint64_t v50 = v62;
    uint64_t v51 = v58;
    sub_1DF1AF76C(v47, v58, (uint64_t (*)(void))type metadata accessor for SavedFeedGroupKnobs);
    sub_1DF1AF710(v65, qword_1EBAD7090, (void (*)(uint64_t))type metadata accessor for SavedFeedGroupKnobs);
    *(void *)(v51 + *(int *)(v37 + 20)) = 0x7FFFFFFFFFFFFFFFLL;
    sub_1DF1AF76C(v51, v50, (uint64_t (*)(void))type metadata accessor for SavedFeedKnobsConfig);
    sub_1DF1AF710(v34, &qword_1EBAD7FA8, (void (*)(uint64_t))type metadata accessor for SavedFeedKnobsConfig);
    sub_1DF1AF710(v45, &qword_1EBAD4F68, (void (*)(uint64_t))type metadata accessor for SavedFeedConfig);
    sub_1DF1AF710((uint64_t)v20, &qword_1EBAD7FA8, (void (*)(uint64_t))type metadata accessor for SavedFeedKnobsConfig);
  }
  else
  {
    sub_1DF1AF710(v34, &qword_1EBAD7FA8, (void (*)(uint64_t))type metadata accessor for SavedFeedKnobsConfig);
    sub_1DF1AF710(v63, &qword_1EBAD4F68, (void (*)(uint64_t))type metadata accessor for SavedFeedConfig);
    uint64_t v50 = v62;
    sub_1DF1AF76C((uint64_t)v20, v62, (uint64_t (*)(void))type metadata accessor for SavedFeedKnobsConfig);
  }
  uint64_t v52 = type metadata accessor for SavedFeedContentConfig();
  return sub_1DF1AF76C(v50, v33 + *(int *)(v52 + 20), (uint64_t (*)(void))type metadata accessor for SavedFeedKnobsConfig);
}

uint64_t sub_1DF1AEFA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1DEA20A44(0, &qword_1EBAD7FA8, (void (*)(uint64_t))type metadata accessor for SavedFeedKnobsConfig);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - v5;
  sub_1DEA20A44(0, &qword_1EBAD4F68, (void (*)(uint64_t))type metadata accessor for SavedFeedConfig);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v15 - v8;
  sub_1DF1AF5F4();
  uint64_t v11 = v10;
  uint64_t v15 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF1AF650();
  sub_1DFE00190();
  if (!v2)
  {
    type metadata accessor for SavedFeedConfig();
    char v18 = 0;
    sub_1DE94D328(&qword_1EBAD4F60, (void (*)(uint64_t))type metadata accessor for SavedFeedConfig);
    sub_1DFDFFCD0();
    type metadata accessor for SavedFeedKnobsConfig();
    char v17 = 1;
    sub_1DE94D328(&qword_1EBAD7FA0, (void (*)(uint64_t))type metadata accessor for SavedFeedKnobsConfig);
    sub_1DFDFFCD0();
    sub_1DF1AE610((uint64_t)v9, (uint64_t)v6, v16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DF1AF26C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF1AF2CC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DF1AF330(uint64_t a1)
{
  unint64_t v2 = sub_1DF1AF650();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF1AF36C(uint64_t a1)
{
  unint64_t v2 = sub_1DF1AF650();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF1AF3A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF1AEFA4(a1, a2);
}

uint64_t sub_1DF1AF3C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF1AF7D4(v1, a1, (uint64_t (*)(void))type metadata accessor for SavedFeedConfig);
}

uint64_t sub_1DF1AF3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF1AF7D4(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for SavedFeedKnobsConfig);
}

uint64_t sub_1DF1AF42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DEA20A44(0, &qword_1EBAD7FA8, (void (*)(uint64_t))type metadata accessor for SavedFeedKnobsConfig);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  sub_1DEA20A44(0, &qword_1EBAD4F68, (void (*)(uint64_t))type metadata accessor for SavedFeedConfig);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - v11;
  sub_1DF1AF7D4(a1, (uint64_t)&v16 - v11, (uint64_t (*)(void))type metadata accessor for SavedFeedConfig);
  uint64_t v13 = type metadata accessor for SavedFeedConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  sub_1DF1AF7D4(v3 + *(int *)(a2 + 20), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SavedFeedKnobsConfig);
  uint64_t v14 = type metadata accessor for SavedFeedKnobsConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  return sub_1DF1AE610((uint64_t)v12, (uint64_t)v9, a3);
}

void sub_1DF1AF5F4()
{
  if (!qword_1EBAEA930)
  {
    sub_1DF1AF650();
    unint64_t v0 = sub_1DFDFFDD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA930);
    }
  }
}

unint64_t sub_1DF1AF650()
{
  unint64_t result = qword_1EBAD9980;
  if (!qword_1EBAD9980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9980);
  }
  return result;
}

uint64_t sub_1DF1AF6A4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1DEA20A44(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DF1AF710(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DEA20A44(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF1AF76C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF1AF7D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SavedFeedContentConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF1AF908);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SavedFeedContentConfig.CodingKeys()
{
  return &type metadata for SavedFeedContentConfig.CodingKeys;
}

unint64_t sub_1DF1AF944()
{
  unint64_t result = qword_1EAC29398;
  if (!qword_1EAC29398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29398);
  }
  return result;
}

unint64_t sub_1DF1AF99C()
{
  unint64_t result = qword_1EBAD9990;
  if (!qword_1EBAD9990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9990);
  }
  return result;
}

unint64_t sub_1DF1AF9F4()
{
  unint64_t result = qword_1EBAD9988;
  if (!qword_1EBAD9988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD9988);
  }
  return result;
}

uint64_t sub_1DF1AFA54()
{
  return sub_1DEB74D68(&OBJC_IVAR___TSEditorialItem_identifier);
}

uint64_t sub_1DF1AFA6C(uint64_t a1, uint64_t a2)
{
  return sub_1DEB74DC8(a1, a2, &OBJC_IVAR___TSEditorialItem_identifier);
}

uint64_t (*sub_1DF1AFA78())()
{
  return j_j__swift_endAccess;
}

id sub_1DF1AFAE0()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v0 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DF1AFB58()
{
  return sub_1DEB74D68(&OBJC_IVAR___TSEditorialItem_title);
}

uint64_t sub_1DF1AFB70(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1DFDFDD20();
  uint64_t v8 = v7;
  uint64_t v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *uint64_t v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF1AFBDC(uint64_t a1, uint64_t a2)
{
  return sub_1DEB74DC8(a1, a2, &OBJC_IVAR___TSEditorialItem_title);
}

uint64_t (*sub_1DF1AFBE8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DF1AFC50()
{
  return sub_1DEB74D68(&OBJC_IVAR___TSEditorialItem_subtitle);
}

uint64_t sub_1DF1AFC68(uint64_t a1, uint64_t a2)
{
  return sub_1DEB74DC8(a1, a2, &OBJC_IVAR___TSEditorialItem_subtitle);
}

uint64_t (*sub_1DF1AFC74())()
{
  return j_j__swift_endAccess;
}

id sub_1DF1AFCDC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a1 + *a3;
  swift_beginAccess();
  if (*(void *)(v3 + 8))
  {
    swift_bridgeObjectRetain();
    unsigned int v4 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = 0;
  }
  return v4;
}

uint64_t sub_1DF1AFD64()
{
  return sub_1DEB74D68(&OBJC_IVAR___TSEditorialItem_subtitleColor);
}

uint64_t sub_1DF1AFD7C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = sub_1DFDFDD20();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *uint64_t v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF1AFDF8(uint64_t a1, uint64_t a2)
{
  return sub_1DEB74DC8(a1, a2, &OBJC_IVAR___TSEditorialItem_subtitleColor);
}

uint64_t (*sub_1DF1AFE04())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DF1AFEDC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DF1AFF90(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___TSEditorialItem_attributes);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF1AFFE4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___TSEditorialItem_attributes);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DF1B0050())()
{
  return j__swift_endAccess;
}

uint64_t sub_1DF1B01E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___TSEditorialItem_actionURL;
  swift_beginAccess();
  return sub_1DEAEAE20(v3, a1);
}

uint64_t sub_1DF1B0374(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___TSEditorialItem_actionURL;
  swift_beginAccess();
  sub_1DF1B03D0(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1DF1B03D0(uint64_t a1, uint64_t a2)
{
  sub_1DEA3C638();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF1B0434(uint64_t a1, void *a2)
{
  sub_1DEA3C638();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAEAE20(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + OBJC_IVAR___TSEditorialItem_actionURL;
  swift_beginAccess();
  sub_1DF1B03D0((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t (*sub_1DF1B04F0())()
{
  return j_j__swift_endAccess;
}

void *sub_1DF1B0598()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___TSEditorialItem_thumbnailImage);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1DF1B0648(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___TSEditorialItem_thumbnailImage);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

void sub_1DF1B069C(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR___TSEditorialItem_thumbnailImage);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_1DF1B0700())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DF1B0768()
{
  return sub_1DF1B0858();
}

uint64_t sub_1DF1B0780(uint64_t a1)
{
  return sub_1DF1B091C(a1, &OBJC_IVAR___TSEditorialItem_backingTag);
}

uint64_t (*sub_1DF1B078C())()
{
  return j_j__swift_endAccess;
}

id sub_1DF1B07F4()
{
  swift_beginAccess();
  uint64_t v0 = (void *)swift_unknownObjectRetain();
  return v0;
}

uint64_t sub_1DF1B084C()
{
  return sub_1DF1B0858();
}

uint64_t sub_1DF1B0858()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DF1B08AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = (void *)(a1 + *a4);
  swift_beginAccess();
  void *v5 = a3;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1DF1B0910(uint64_t a1)
{
  return sub_1DF1B091C(a1, &OBJC_IVAR___TSEditorialItem_headline);
}

uint64_t sub_1DF1B091C(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  void *v4 = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1DF1B096C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v6 = v5;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1DF1B09D4())()
{
  return j_j__swift_endAccess;
}

id EditorialItem.__allocating_init(identifier:title:subtitle:subtitleColor:attributes:actionURL:thumbnailImage:backingTag:headline:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  id v18 = objc_allocWithZone(v13);
  id v19 = sub_1DF1B0F28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v19;
}

id EditorialItem.init(identifier:title:subtitle:subtitleColor:attributes:actionURL:thumbnailImage:backingTag:headline:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  id v13 = sub_1DF1B0F28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v13;
}

id EditorialItem.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void EditorialItem.init()()
{
}

id EditorialItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditorialItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1DF1B0F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  char v17 = &v13[OBJC_IVAR___TSEditorialItem_subtitle];
  *(void *)char v17 = 0;
  *((void *)v17 + 1) = 0;
  id v18 = &v13[OBJC_IVAR___TSEditorialItem_subtitleColor];
  *(void *)id v18 = 0;
  *((void *)v18 + 1) = 0;
  uint64_t v19 = (uint64_t)&v13[OBJC_IVAR___TSEditorialItem_actionURL];
  uint64_t v20 = sub_1DFDE7220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = (void **)&v13[OBJC_IVAR___TSEditorialItem_thumbnailImage];
  *(void *)&v13[OBJC_IVAR___TSEditorialItem_thumbnailImage] = 0;
  uint64_t v22 = &v13[OBJC_IVAR___TSEditorialItem_backingTag];
  *(void *)&v13[OBJC_IVAR___TSEditorialItem_backingTag] = 0;
  uint64_t v23 = &v13[OBJC_IVAR___TSEditorialItem_headline];
  *(void *)&v13[OBJC_IVAR___TSEditorialItem_headline] = 0;
  uint64_t v24 = &v13[OBJC_IVAR___TSEditorialItem_identifier];
  *(void *)uint64_t v24 = a1;
  *((void *)v24 + 1) = a2;
  uint64_t v25 = &v13[OBJC_IVAR___TSEditorialItem_title];
  *(void *)uint64_t v25 = a3;
  *((void *)v25 + 1) = a4;
  swift_beginAccess();
  *(void *)char v17 = a5;
  *((void *)v17 + 1) = a6;
  uint64_t v26 = v13;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)id v18 = a7;
  *((void *)v18 + 1) = a8;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v27 = *v21;
  *uint64_t v21 = a11;
  id v28 = a11;

  swift_beginAccess();
  *(void *)uint64_t v22 = a12;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_beginAccess();
  sub_1DEF997D0(a10, v19);
  swift_endAccess();
  *(void *)&v26[OBJC_IVAR___TSEditorialItem_attributes] = a9;
  swift_beginAccess();
  *(void *)uint64_t v23 = a13;
  swift_unknownObjectRetain();

  swift_unknownObjectRelease();
  v36.receiver = v26;
  v36.super_class = (Class)type metadata accessor for EditorialItem();
  id v29 = objc_msgSendSuper2(&v36, sel_init);
  sub_1DEB4B7AC(a10);
  return v29;
}

uint64_t type metadata accessor for EditorialItem()
{
  uint64_t result = qword_1EBAAA218;
  if (!qword_1EBAAA218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DF1B1200@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR___TSEditorialItem_identifier, a2);
}

uint64_t sub_1DF1B120C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEB74CF4(a1, a2, a3, a4, &OBJC_IVAR___TSEditorialItem_identifier);
}

uint64_t sub_1DF1B122C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR___TSEditorialItem_title, a2);
}

uint64_t sub_1DF1B1238(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEB74CF4(a1, a2, a3, a4, &OBJC_IVAR___TSEditorialItem_title);
}

uint64_t sub_1DF1B1258@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR___TSEditorialItem_subtitle, a2);
}

uint64_t sub_1DF1B1264(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEB74CF4(a1, a2, a3, a4, &OBJC_IVAR___TSEditorialItem_subtitle);
}

uint64_t sub_1DF1B1284@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR___TSEditorialItem_subtitleColor, a2);
}

uint64_t sub_1DF1B1290(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEB74CF4(a1, a2, a3, a4, &OBJC_IVAR___TSEditorialItem_subtitleColor);
}

uint64_t sub_1DF1B12B0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + OBJC_IVAR___TSEditorialItem_attributes);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DF1B130C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___TSEditorialItem_actionURL;
  swift_beginAccess();
  return sub_1DEAEAE20(v3, a2);
}

id sub_1DF1B1368@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR___TSEditorialItem_thumbnailImage);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1DF1B13D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_15Tm(a1, &OBJC_IVAR___TSEditorialItem_backingTag, a2);
}

uint64_t sub_1DF1B13DC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DF1B096C(a1, a2, a3, a4, &OBJC_IVAR___TSEditorialItem_backingTag);
}

uint64_t sub_1DF1B13FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_15Tm(a1, &OBJC_IVAR___TSEditorialItem_headline, a2);
}

uint64_t keypath_get_15Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_unknownObjectRetain();
}

uint64_t sub_1DF1B145C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DF1B096C(a1, a2, a3, a4, &OBJC_IVAR___TSEditorialItem_headline);
}

uint64_t sub_1DF1B147C()
{
  return type metadata accessor for EditorialItem();
}

void sub_1DF1B1484()
{
  sub_1DEA3C638();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for EditorialItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EditorialItem);
}

uint64_t dispatch thunk of EditorialItem.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of EditorialItem.identifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of EditorialItem.identifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of EditorialItem.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of EditorialItem.title.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of EditorialItem.title.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of EditorialItem.subtitle.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of EditorialItem.subtitle.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of EditorialItem.subtitle.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EditorialItem.subtitleColor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of EditorialItem.subtitleColor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EditorialItem.subtitleColor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EditorialItem.attributes.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of EditorialItem.attributes.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of EditorialItem.attributes.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of EditorialItem.actionURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of EditorialItem.actionURL.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of EditorialItem.actionURL.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of EditorialItem.thumbnailImage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of EditorialItem.thumbnailImage.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of EditorialItem.thumbnailImage.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of EditorialItem.backingTag.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of EditorialItem.backingTag.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of EditorialItem.backingTag.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of EditorialItem.headline.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of EditorialItem.headline.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of EditorialItem.headline.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of EditorialItem.__allocating_init(identifier:title:subtitle:subtitleColor:attributes:actionURL:thumbnailImage:backingTag:headline:)()
{
  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t sub_1DF1B1B78(char a1)
{
  uint64_t v3 = sub_1DFDEB120();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDEB110();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v17 - v12;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 88), *(void *)(v1 + 112));
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, **((unsigned int **)&unk_1E6D343F0 + a1), v3);
  sub_1DFDEB100();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v11, v7);
  sub_1DFDE87E0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t type metadata accessor for SportsFavoritesSyncEventHandler()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SportsFavoritesSyncEngagementConclusion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF1B1EACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsFavoritesSyncEngagementConclusion()
{
  return &type metadata for SportsFavoritesSyncEngagementConclusion;
}

unint64_t sub_1DF1B1EE8()
{
  unint64_t result = qword_1EAC293C8;
  if (!qword_1EAC293C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC293C8);
  }
  return result;
}

uint64_t sub_1DF1B1F3C()
{
  uint64_t v1 = sub_1DFDEB110();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DF1B1FCC()
{
  sub_1DFDEB110();
  return sub_1DFD8169C();
}

uint64_t getEnumTagSinglePayload for TagFeedGroupKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDA) {
    goto LABEL_17;
  }
  if (a2 + 38 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 38) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 38;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 38;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 38;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x27;
  int v8 = v6 - 39;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for IssueListTagFeedGroupConfigData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 38 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 38) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD9)
  {
    unsigned int v6 = ((a2 - 218) >> 8) + 1;
    *unint64_t result = a2 + 38;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF1B2198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 38;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueListTagFeedGroupConfigData()
{
  return &type metadata for IssueListTagFeedGroupConfigData;
}

uint64_t sub_1DF1B21D0(void *a1, char a2)
{
  sub_1DF1B25FC(0, &qword_1EAC293D0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v8 = &v10[-v7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF1B25A8();
  sub_1DFE001A0();
  v10[15] = a2;
  sub_1DEAF3AE0();
  sub_1DFDFFE80();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DF1B2328()
{
  return 1684957547;
}

uint64_t sub_1DF1B2338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DFDFFF50();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DF1B23C0(uint64_t a1)
{
  unint64_t v2 = sub_1DF1B25A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DF1B23FC(uint64_t a1)
{
  unint64_t v2 = sub_1DF1B25A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DF1B2438@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DF1B25FC(0, &qword_1EBAF6E90, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DF1B25A8();
  sub_1DFE00190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = 0;
  return result;
}

uint64_t sub_1DF1B258C(void *a1)
{
  return sub_1DF1B21D0(a1, *v1);
}

unint64_t sub_1DF1B25A8()
{
  unint64_t result = qword_1EBAF69D8;
  if (!qword_1EBAF69D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF69D8);
  }
  return result;
}

void sub_1DF1B25FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DF1B25A8();
    unint64_t v7 = a3(a1, &type metadata for IssueListTagFeedGroupConfigData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for IssueListTagFeedGroupConfigData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DF1B26FCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueListTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for IssueListTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DF1B2738()
{
  unint64_t result = qword_1EAC293D8;
  if (!qword_1EAC293D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC293D8);
  }
  return result;
}

unint64_t sub_1DF1B2790()
{
  unint64_t result = qword_1EBAF69E8;
  if (!qword_1EBAF69E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF69E8);
  }
  return result;
}

unint64_t sub_1DF1B27E8()
{
  unint64_t result = qword_1EBAF69E0;
  if (!qword_1EBAF69E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF69E0);
  }
  return result;
}

char *sub_1DF1B283C(uint64_t a1)
{
  uint64_t v2 = sub_1DFDED180();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE936284(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v42 - v6;
  uint64_t v8 = (char *)sub_1DF08E998(a1);
  uint64_t v9 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedViewContext()), sel_init);
  uint64_t v10 = &v8[OBJC_IVAR____TtC7NewsUI29AdContext_previewID];
  swift_beginAccess();
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  id v13 = &v9[OBJC_IVAR___TSFeedViewContext_adPreviewID];
  swift_beginAccess();
  *(void *)id v13 = v12;
  *((void *)v13 + 1) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v14 = &v8[OBJC_IVAR____TtC7NewsUI29AdContext_previewSessionID];
  swift_beginAccess();
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  uint64_t v17 = &v9[OBJC_IVAR___TSFeedViewContext_adPreviewSessionID];
  swift_beginAccess();
  *(void *)uint64_t v17 = v16;
  *((void *)v17 + 1) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v18 = &v8[OBJC_IVAR____TtC7NewsUI29AdContext_qToken];
  swift_beginAccess();
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  uint64_t v21 = &v9[OBJC_IVAR___TSFeedViewContext_adQToken];
  swift_beginAccess();
  *(void *)uint64_t v21 = v20;
  *((void *)v21 + 1) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1DEF97CE8();
  uint64_t v24 = v23;
  uint64_t v25 = (uint64_t *)&v9[OBJC_IVAR___TSFeedViewContext_sourceApplication];
  swift_beginAccess();
  uint64_t *v25 = v22;
  v25[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = &v8[OBJC_IVAR____TtC7NewsUI29AdContext_maximumAdRequestsForCurrentAdPreviewID];
  swift_beginAccess();
  if (v26[8]) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = *(void *)v26;
  }
  id v28 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v27);
  id v29 = (void **)&v9[OBJC_IVAR___TSFeedViewContext_maximumAdRequestsForCurrentAdPreviewID];
  swift_beginAccess();
  uint64_t v30 = *v29;
  *id v29 = v28;

  id v31 = sub_1DEF7404C(a1);
  uint64_t v32 = (void **)&v9[OBJC_IVAR___TSFeedViewContext_referral];
  swift_beginAccess();
  uint64_t v33 = *v32;
  *uint64_t v32 = v31;

  sub_1DE936284(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  sub_1DFDED420();
  sub_1DFDED130();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v44);
  uint64_t v34 = sub_1DFDE7220();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v7, 0, 1, v34);
  uint64_t v35 = (uint64_t)&v9[OBJC_IVAR___TSFeedViewContext_sourceURL];
  swift_beginAccess();
  sub_1DF1B03D0((uint64_t)v7, v35);
  swift_endAccess();
  id v36 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, 3);
  uint64_t v37 = (void **)&v9[OBJC_IVAR___TSFeedViewContext_presentationReason];
  swift_beginAccess();
  uint64_t v38 = *v37;
  uint64_t *v37 = v36;

  LOBYTE(v36) = sub_1DEF97A88();
  char v39 = v36 & 1;
  uint64_t v40 = &v9[OBJC_IVAR___TSFeedViewContext_openedFromNews];
  swift_beginAccess();
  char *v40 = v39;
  return v9;
}

uint64_t SportsManagementDetailModule.createViewController(model:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SportsDetailModel();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = sub_1DFDE88B0();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  type metadata accessor for SportsManagementDetailViewController();
  sub_1DEBF7610(a1, (uint64_t)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  sub_1DF1B30A4((uint64_t)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  swift_retain();
  uint64_t v9 = sub_1DFDECC90();
  uint64_t result = swift_release();
  if (v9)
  {
    swift_release();
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF1B2EC4(void *a1)
{
  return sub_1DFDECAA0();
}

uint64_t sub_1DF1B2F64()
{
  uint64_t v1 = *(void *)(type metadata accessor for SportsDetailModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v4 = sub_1DFDFC270();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
    type metadata accessor for SportsModel();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DF1B30A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDetailModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DF1B3108(void *a1)
{
  type metadata accessor for SportsDetailModel();
  return sub_1DF1B2EC4(a1);
}

uint64_t SportsManagementDetailModule.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t SportsManagementDetailModule.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF1B31E4(uint64_t a1)
{
  return SportsManagementDetailModule.createViewController(model:)(a1);
}

uint64_t dispatch thunk of SportsManagementDetailModuleType.createViewController(model:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for SportsManagementDetailModule()
{
  return self;
}

uint64_t method lookup function for SportsManagementDetailModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsManagementDetailModule);
}

uint64_t sub_1DF1B3258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1DFDF3D40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)a1;
  int v12 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v12 != 255 && a2)
    {
      sub_1DF1B4D14(v11, v12);
      if (!sub_1DFDF2D50())
      {
        swift_release();
        return sub_1DF1B4D68(v11, v12);
      }
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 40) = &type metadata for ConfirmationToast;
      *(void *)(v14 + 48) = sub_1DF1B4E08();
      *(void *)&v17[0] = v14 | 0xB000000000000006;
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAD088], v7);
      sub_1DFDF1030();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_1DEAF0150(*(unint64_t *)&v17[0]);
      sub_1DE94F204(a4, (uint64_t)v17);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v11;
      *(unsigned char *)(v15 + 24) = v12;
      sub_1DE942EC4(v17, v15 + 32);
      sub_1DF1B4D14(v11, v12);
      sub_1DFDE87E0();
      swift_release();
      sub_1DF1B4D68(v11, v12);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DF1B34C4(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  sub_1DF1B4EF8(0, &qword_1EAC293E8, MEMORY[0x1E4F7C458], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = sub_1DFDEB850();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF1B3920(a4, a2, a3, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DF1B4F5C((uint64_t)v9, &qword_1EAC293E8, MEMORY[0x1E4F7C458]);
    sub_1DE9B646C();
    uint64_t v14 = (void *)sub_1DFDFF610();
    sub_1DFDFEA40();
    sub_1DF1B4EF8(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DFE0B250;
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    uint64_t v23 = a2;
    char v24 = a3;
    sub_1DFDFFB10();
    uint64_t v16 = v25;
    unint64_t v17 = v26;
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 64) = sub_1DEA08668();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v17;
    sub_1DFDF00C0();

    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1DF1B4EF8(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
    uint64_t v19 = sub_1DFDE8410();
    uint64_t v20 = *(void *)(v19 - 8);
    unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
    (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x1E4F4AA18], v19);
    sub_1DF1B4EB0(&qword_1EAC293F0, MEMORY[0x1E4F7C458]);
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    sub_1DFDEB930();
    sub_1DF1B4EB0(&qword_1EAC293F8, MEMORY[0x1E4F7C520]);
    sub_1DFDE82F0();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1DF1B3920@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v75 = a4;
  long long v76 = (char *)a2;
  uint64_t v6 = sub_1DFDFBA50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char **)((char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF1B4EF8(0, &qword_1EAC347A0, MEMORY[0x1E4F81508], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  unint64_t v17 = (unint64_t)&v71 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v71 - v18;
  sub_1DF1B4EF8(0, (unint64_t *)&unk_1EBAE9ED0, MEMORY[0x1E4F812E0], v10);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v74 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v71 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v71 - v26;
  uint64_t v28 = sub_1DFDEC000();
  MEMORY[0x1F4188790](v28);
  unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v33 = (char *)&v71 - v32;
  switch(a3)
  {
    case 1:
      uint64_t v34 = (unsigned int *)MEMORY[0x1E4F7CA50];
      goto LABEL_5;
    case 2:
      uint64_t v34 = (unsigned int *)MEMORY[0x1E4F7CA58];
      goto LABEL_5;
    case 3:
      uint64_t v72 = v29;
      long long v73 = (char *)&v71 - v32;
      uint64_t v14 = v30;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      uint64_t v25 = v76;
      *uint64_t v9 = v76;
      (*(void (**)(char **, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F80FD8], v6);
      swift_unknownObjectRetain_n();
      unint64_t v17 = sub_1DFDFCEA0();
      (*(void (**)(char **, uint64_t))(v7 + 8))(v9, v6);
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v40 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        if (v40) {
          goto LABEL_9;
        }
LABEL_43:
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
      unint64_t v40 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v40) {
        goto LABEL_43;
      }
LABEL_9:
      if ((v17 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1E01EE240](0, v17);
        goto LABEL_12;
      }
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        swift_retain();
LABEL_12:
        swift_bridgeObjectRelease();
        sub_1DFDFB2F0();
        swift_release();
        uint64_t v41 = sub_1DFDFC7F0();
        uint64_t v42 = *(void *)(v41 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v19, 1, v41) == 1)
        {
          sub_1DF1B4F5C((uint64_t)v19, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
LABEL_44:
          uint64_t v63 = sub_1DFDFC200();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v27, 1, 1, v63);
          goto LABEL_45;
        }
        sub_1DFDFC7E0();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v41);
        uint64_t v49 = sub_1DFDFC200();
        uint64_t v50 = *(void *)(v49 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v27, 1, v49) == 1)
        {
LABEL_45:
          sub_1DF1B4D7C((uint64_t)v25, 3);
          long long v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F812E0];
          uint64_t v65 = (uint64_t)v27;
          goto LABEL_54;
        }
        if ((*(unsigned int (**)(char *, uint64_t))(v50 + 88))(v27, v49) == *MEMORY[0x1E4F812B0])
        {
          (*(void (**)(char *, uint64_t))(v50 + 96))(v27, v49);
          uint64_t v51 = *(void *)(*(void *)v27 + 16);
          swift_retain();
          swift_release();
          uint64_t v52 = (uint64_t)v73;
          (*((void (**)(char *, void, uint64_t))v14 + 13))(v73, *MEMORY[0x1E4F7CA48], v72);
          uint64_t v37 = v75;
          sub_1DF1B46F4(v52, v51, v75);
          uint64_t v53 = (uint64_t)v25;
          char v54 = 3;
          goto LABEL_37;
        }
        sub_1DF1B4D7C((uint64_t)v25, 3);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v49);
        goto LABEL_55;
      }
      __break(1u);
LABEL_59:
      MEMORY[0x1E01EE240](0, v40);
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1DFDFB2F0();
      swift_release();
      uint64_t v45 = sub_1DFDFC7F0();
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v46 + 48))(v17, 1, v45) == 1)
      {
        sub_1DF1B4F5C(v17, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
LABEL_48:
        uint64_t v67 = sub_1DFDFC200();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v25, 1, 1, v67);
        goto LABEL_49;
      }
      sub_1DFDFC7E0();
      (*(void (**)(unint64_t, uint64_t))(v46 + 8))(v17, v45);
      uint64_t v55 = sub_1DFDFC200();
      uint64_t v56 = *(void *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v25, 1, v55) == 1)
      {
LABEL_49:
        sub_1DF1B4D7C((uint64_t)v76, 4);
        long long v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F812E0];
        uint64_t v65 = (uint64_t)v25;
LABEL_54:
        sub_1DF1B4F5C(v65, (unint64_t *)&unk_1EBAE9ED0, v64);
        goto LABEL_55;
      }
      if ((*(unsigned int (**)(char *, uint64_t))(v56 + 88))(v25, v55) != *MEMORY[0x1E4F812B0])
      {
        sub_1DF1B4D7C((uint64_t)v76, 4);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v25, v55);
LABEL_55:
        uint64_t v70 = sub_1DFDEB850();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v75, 1, 1, v70);
      }
      (*(void (**)(char *, uint64_t))(v56 + 96))(v25, v55);
      uint64_t v57 = *(void *)(*(void *)v25 + 16);
      swift_retain();
      swift_release();
      uint64_t v58 = (uint64_t)v73;
      (*((void (**)(char *, void, uint64_t))v14 + 13))(v73, *MEMORY[0x1E4F7CA50], v72);
      uint64_t v37 = v75;
      sub_1DF1B46F4(v58, v57, v75);
      uint64_t v53 = (uint64_t)v76;
      char v54 = 4;
LABEL_37:
      sub_1DF1B4D7C(v53, v54);
LABEL_6:
      uint64_t v38 = sub_1DFDEB850();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
    case 4:
      uint64_t v72 = v29;
      long long v73 = (char *)&v71 - v32;
      uint64_t v14 = v30;
      uint64_t v43 = a1[3];
      uint64_t v44 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v43);
      *uint64_t v9 = v76;
      (*(void (**)(char **, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F80FD8], v6);
      swift_unknownObjectRetain_n();
      unint64_t v40 = sub_1DFDFCEA0();
      (*(void (**)(char **, uint64_t))(v7 + 8))(v9, v6);
      if (v40 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        if (v66)
        {
LABEL_16:
          if ((v40 & 0xC000000000000001) != 0) {
            goto LABEL_59;
          }
          if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_19;
          }
          __break(1u);
LABEL_61:
          MEMORY[0x1E01EE240](0, v17);
          goto LABEL_26;
        }
      }
      else if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 5:
      uint64_t v72 = v29;
      long long v73 = (char *)&v71 - v32;
      uint64_t v25 = v30;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      uint64_t v44 = (uint64_t)v76;
      *uint64_t v9 = v76;
      (*(void (**)(char **, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F80FD8], v6);
      swift_unknownObjectRetain_n();
      unint64_t v17 = sub_1DFDFCEA0();
      (*(void (**)(char **, uint64_t))(v7 + 8))(v9, v6);
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v68 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        uint64_t v43 = (uint64_t)v74;
        if (v68) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v43 = (uint64_t)v74;
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_23:
          if ((v17 & 0xC000000000000001) != 0) {
            goto LABEL_61;
          }
          if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x1DF1B46DCLL);
          }
          swift_retain();
LABEL_26:
          swift_bridgeObjectRelease();
          sub_1DFDFB2F0();
          swift_release();
          uint64_t v47 = sub_1DFDFC7F0();
          uint64_t v48 = *(void *)(v47 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v14, 1, v47) == 1)
          {
            sub_1DF1B4F5C((uint64_t)v14, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
LABEL_52:
            uint64_t v69 = sub_1DFDFC200();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v43, 1, 1, v69);
          }
          else
          {
            sub_1DFDFC7E0();
            (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v47);
            uint64_t v59 = sub_1DFDFC200();
            uint64_t v60 = *(void *)(v59 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v43, 1, v59) != 1)
            {
              if ((*(unsigned int (**)(uint64_t, uint64_t))(v60 + 88))(v43, v59) != *MEMORY[0x1E4F812B0])
              {
                sub_1DF1B4D7C(v44, 5);
                (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v43, v59);
                goto LABEL_55;
              }
              (*(void (**)(uint64_t, uint64_t))(v60 + 96))(v43, v59);
              uint64_t v61 = *(void *)(*(void *)v43 + 16);
              swift_retain();
              swift_release();
              uint64_t v62 = (uint64_t)v73;
              (*((void (**)(char *, void, uint64_t))v25 + 13))(v73, *MEMORY[0x1E4F7CA58], v72);
              uint64_t v37 = v75;
              sub_1DF1B46F4(v62, v61, v75);
              uint64_t v53 = v44;
              char v54 = 5;
              goto LABEL_37;
            }
          }
          sub_1DF1B4D7C(v44, 5);
          long long v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F812E0];
          uint64_t v65 = v43;
          goto LABEL_54;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_52;
    default:
      uint64_t v34 = (unsigned int *)MEMORY[0x1E4F7CA48];
LABEL_5:
      uint64_t v35 = (uint64_t)v33;
      (*((void (**)(char *, void))v30 + 13))(v33, *v34);
      uint64_t v36 = (uint64_t)v76;
      swift_retain();
      uint64_t v37 = v75;
      sub_1DF1B46F4(v35, v36, v75);
      goto LABEL_6;
  }
}

uint64_t sub_1DF1B46F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  uint64_t v70 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v68 = (char *)&v56 - v11;
  uint64_t v12 = sub_1DFDEC000();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = *(void (**)(void))(v13 + 16);
  uint64_t v60 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15();
  unint64_t v16 = sub_1DFDFCBD0();
  unint64_t v17 = v16;
  if (v16 >> 62) {
    uint64_t v18 = sub_1DFDFFBE0();
  }
  else {
    uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v64 = a1;
  uint64_t v65 = a2;
  uint64_t v62 = v12;
  uint64_t v63 = a3;
  uint64_t v61 = v13;
  if (v18)
  {
    uint64_t v71 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEA9B358(0, v18 & ~(v18 >> 63), 0);
    if (v18 < 0)
    {
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v67 = v10;
    uint64_t v20 = 0;
    uint64_t v21 = v71;
    unint64_t v22 = v17 & 0xC000000000000001;
    unint64_t v23 = v17;
    do
    {
      if (v22)
      {
        uint64_t v24 = (void *)MEMORY[0x1E01EE240](v20, v17);
      }
      else
      {
        uint64_t v24 = *(void **)(v17 + 8 * v20 + 32);
        swift_unknownObjectRetain();
      }
      id v25 = objc_msgSend(v24, sel_identifier);
      uint64_t v26 = sub_1DFDFDD20();
      uint64_t v28 = v27;
      swift_unknownObjectRelease();

      uint64_t v71 = v21;
      unint64_t v30 = *(void *)(v21 + 16);
      unint64_t v29 = *(void *)(v21 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1DEA9B358(v29 > 1, v30 + 1, 1);
        uint64_t v21 = v71;
      }
      ++v20;
      *(void *)(v21 + 16) = v30 + 1;
      uint64_t v31 = v21 + 16 * v30;
      *(void *)(v31 + 32) = v26;
      *(void *)(v31 + 40) = v28;
      unint64_t v17 = v23;
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    uint64_t v10 = v67;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = sub_1DFDFCBE0();
  uint64_t v34 = v33;
  uint64_t v35 = v68;
  sub_1DFDFCC10();
  uint64_t v36 = sub_1DFDE70E0();
  uint64_t v38 = v37;
  char v39 = *(char **)(v70 + 8);
  v70 += 8;
  uint64_t v68 = v39;
  ((void (*)(char *, uint64_t))v39)(v35, v69);
  unint64_t v40 = sub_1DFDFCB90();
  unint64_t v41 = v40;
  uint64_t v58 = v34;
  uint64_t v59 = v32;
  uint64_t v56 = v38;
  uint64_t v57 = v36;
  if (v40 >> 62)
  {
    uint64_t v42 = sub_1DFDFFBE0();
    if (v42)
    {
LABEL_16:
      uint64_t v71 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1DEA9B358(0, v42 & ~(v42 >> 63), 0);
      if ((v42 & 0x8000000000000000) == 0)
      {
        uint64_t v43 = 0;
        unint64_t v66 = v41 & 0xC000000000000001;
        uint64_t v67 = (char *)v42;
        unint64_t v44 = v41;
        do
        {
          if (v66) {
            MEMORY[0x1E01EE240](v43, v41);
          }
          else {
            swift_retain();
          }
          sub_1DFDFD860();
          uint64_t v45 = sub_1DFDE70E0();
          uint64_t v47 = v46;
          ((void (*)(char *, uint64_t))v68)(v10, v69);
          swift_release();
          uint64_t v48 = v71;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DEA9B358(0, *(void *)(v48 + 16) + 1, 1);
            uint64_t v48 = v71;
          }
          unint64_t v50 = *(void *)(v48 + 16);
          unint64_t v49 = *(void *)(v48 + 24);
          if (v50 >= v49 >> 1)
          {
            sub_1DEA9B358(v49 > 1, v50 + 1, 1);
            uint64_t v48 = v71;
          }
          ++v43;
          *(void *)(v48 + 16) = v50 + 1;
          uint64_t v51 = v48 + 16 * v50;
          *(void *)(v51 + 32) = v45;
          *(void *)(v51 + 40) = v47;
          unint64_t v41 = v44;
        }
        while (v67 != v43);
        goto LABEL_29;
      }
LABEL_36:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v42 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v42) {
      goto LABEL_16;
    }
  }
LABEL_29:
  swift_bridgeObjectRelease();
  uint64_t v52 = (void *)sub_1DFDFCC40();
  if (v52)
  {
    id v53 = objc_msgSend(v52, sel_UMCCanonicalID, v56, v57, v58, v59);
    swift_unknownObjectRelease();
    if (v53)
    {
      sub_1DFDFDD20();
    }
  }
  char v54 = (void *)sub_1DFDFCC40();
  if (v54)
  {
    id v55 = objc_msgSend(v54, sel_name);
    swift_unknownObjectRelease();
    sub_1DFDFDD20();
  }
  sub_1DFDEB840();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v64, v62);
}

uint64_t sub_1DF1B4C90()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DF1B4CC8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DF1B4D08(uint64_t a1, uint64_t a2)
{
  return sub_1DF1B3258(a1, a2, *(void *)(v2 + 16), v2 + 24);
}

uint64_t sub_1DF1B4D14(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_retain();
      break;
    case 3:
    case 4:
    case 5:
      uint64_t result = swift_unknownObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF1B4D68(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return sub_1DF1B4D7C(a1, a2);
  }
  return a1;
}

uint64_t sub_1DF1B4D7C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_release();
      break;
    case 3:
    case 4:
    case 5:
      uint64_t result = swift_unknownObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DF1B4DD0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_1DF1B4E08()
{
  unint64_t result = qword_1EAC293E0;
  if (!qword_1EAC293E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC293E0);
  }
  return result;
}

uint64_t sub_1DF1B4E5C()
{
  sub_1DF1B4D7C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_1DF1B4EA0(uint64_t a1)
{
  return sub_1DF1B34C4(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), (void *)(v1 + 32));
}

uint64_t sub_1DF1B4EB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DF1B4EF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF1B4F5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DF1B4EF8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF1B4FCC(void *a1)
{
  sub_1DEB28694();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)MEMORY[0x1E01EFB70](v1 + 16);
  swift_unknownObjectRetain();
  if (v6)
  {
    objc_msgSend(v6, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
  id v7 = objc_allocWithZone((Class)type metadata accessor for FeedViewContext());
  swift_unknownObjectRetain();
  swift_retain();
  id v8 = objc_msgSend(v7, sel_init);
  uint64_t v9 = swift_allocObject();
  id v10 = objc_msgSend(a1, sel_identifier);
  uint64_t v11 = sub_1DFDFDD20();
  uint64_t v13 = v12;

  *(void *)(v9 + 16) = v11;
  *(void *)(v9 + 24) = v13;
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = 0;
  *(unsigned char *)(v9 + 48) = 1;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 72) = 0u;
  *(void *)(v9 + 88) = 0;
  *(unsigned char *)(v9 + 96) = -1;
  swift_unknownObjectRelease();
  uint64_t v14 = *(void *)(v1 + 64);
  uint64_t v15 = sub_1DFDEAB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v5, 1, 1, v15);
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_1DFBB5128(v9 | 0x2000000000000006, v14, (uint64_t)v5, (uint64_t)v20, 0, 0, 0, 0, (uint64_t)v18);
  swift_release();
  swift_unknownObjectRelease();
  sub_1DE932EE8((uint64_t)v18, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460);
  sub_1DE932EE8((uint64_t)v20, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0);
  sub_1DEBFF970((uint64_t)v5);
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for SportsNavigationRouter()
{
  return self;
}

uint64_t sub_1DF1B5274()
{
  sub_1DEB28744(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_1DEB287CC(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SportsTopicClusteringResult()
{
  return &type metadata for SportsTopicClusteringResult;
}

uint64_t destroy for SportsForYouCluster()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void *assignWithCopy for SportsForYouCluster(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SportsForYouCluster(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SportsForYouCluster()
{
  return &type metadata for SportsForYouCluster;
}

uint64_t destroy for SportsTopicCluster()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for SportsTopicCluster(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SportsTopicCluster(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SportsTopicCluster(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SportsTopicCluster()
{
  return &type metadata for SportsTopicCluster;
}

uint64_t sub_1DF1B5544(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1DFDFFF50();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1DFDFFF50() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_1DF1B560C(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF1B566C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_1DF1B56D0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = a1;
  uint64_t v4 = (unsigned __int8 *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  do
  {
    int v6 = *v4++;
    BOOL result = v6 == v3;
  }
  while (v6 != v3 && v5-- != 0);
  return result;
}

uint64_t sub_1DF1B5708(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (!v4) {
    return 0;
  }
  BOOL v9 = a1 != 4;
  BOOL v10 = a1 != 3;
  BOOL v11 = a1 != 2;
  BOOL v12 = a1 != 1;
  if (a2)
  {
    BOOL v9 = 1;
    BOOL v10 = 1;
    BOOL v11 = 1;
    BOOL v12 = 1;
  }
  BOOL v13 = a3 == 2;
  if (a3 != 2) {
    BOOL v9 = 1;
  }
  BOOL v34 = v9;
  char v14 = a3 != 2 || v10;
  char v33 = v14;
  char v15 = a3 != 2 || v11;
  char v16 = a3 != 2 || v12;
  char v31 = v16;
  char v32 = v15;
  if (a2 | a1) {
    BOOL v13 = 0;
  }
  BOOL v30 = v13;
  swift_bridgeObjectRetain();
  unint64_t v17 = (unsigned __int8 *)(a4 + 48);
  while (1)
  {
    uint64_t v19 = *((void *)v17 - 2);
    uint64_t v18 = *((void *)v17 - 1);
    int v20 = *v17;
    if (!*v17)
    {
      if (a3) {
        goto LABEL_19;
      }
      if (v19 == a1 && v18 == a2)
      {
        sub_1DEC08B50(a1, a2, 0);
        sub_1DEC08B50(a1, a2, 0);
        sub_1DEB21B94(a1, a2, 0);
        uint64_t v28 = a1;
        uint64_t v26 = a2;
        unsigned __int8 v27 = 0;
        goto LABEL_52;
      }
      char v25 = sub_1DFDFFF50();
      sub_1DEC08B50(v19, v18, 0);
      sub_1DEC08B50(a1, a2, 0);
      sub_1DEB21B94(v19, v18, 0);
      sub_1DEB21B94(a1, a2, 0);
      if (v25) {
        goto LABEL_53;
      }
      goto LABEL_20;
    }
    if (v20 != 1) {
      break;
    }
    if (a3 != 1)
    {
LABEL_19:
      sub_1DEC08B50(*((void *)v17 - 2), *((void *)v17 - 1), *v17);
      sub_1DEC08B50(a1, a2, a3);
      sub_1DEB21B94(v19, v18, v20);
      sub_1DEB21B94(a1, a2, a3);
      goto LABEL_20;
    }
    if (v19 == a1 && v18 == a2)
    {
      uint64_t v23 = 1;
      sub_1DEC08B50(a1, a2, 1u);
      sub_1DEC08B50(a1, a2, 1u);
      sub_1DEB21B94(a1, a2, 1u);
      sub_1DEB21B94(a1, a2, 1u);
      goto LABEL_54;
    }
    char v22 = sub_1DFDFFF50();
    uint64_t v23 = 1;
    sub_1DEC08B50(v19, v18, 1u);
    sub_1DEC08B50(a1, a2, 1u);
    sub_1DEB21B94(v19, v18, 1u);
    sub_1DEB21B94(a1, a2, 1u);
    if (v22) {
      goto LABEL_54;
    }
LABEL_20:
    v17 += 24;
    if (!--v4)
    {
      uint64_t v23 = 0;
      goto LABEL_54;
    }
  }
  switch(v19)
  {
    case 1:
      if (v31) {
        goto LABEL_19;
      }
      sub_1DEB21B94(*((void *)v17 - 2), *((void *)v17 - 1), 2u);
      uint64_t v23 = 1;
      sub_1DEB21B94(1, 0, 2u);
      goto LABEL_54;
    case 2:
      if (v32) {
        goto LABEL_19;
      }
      sub_1DEB21B94(*((void *)v17 - 2), *((void *)v17 - 1), 2u);
      uint64_t v28 = 2;
      goto LABEL_51;
    case 3:
      if (v33) {
        goto LABEL_19;
      }
      sub_1DEB21B94(*((void *)v17 - 2), *((void *)v17 - 1), 2u);
      uint64_t v28 = 3;
      goto LABEL_51;
    case 4:
      if (v34) {
        goto LABEL_19;
      }
      sub_1DEB21B94(*((void *)v17 - 2), *((void *)v17 - 1), 2u);
      uint64_t v28 = 4;
      goto LABEL_51;
    default:
      if (!v30) {
        goto LABEL_19;
      }
      sub_1DEB21B94(*((void *)v17 - 2), *((void *)v17 - 1), 2u);
      uint64_t v28 = 0;
LABEL_51:
      uint64_t v26 = 0;
      unsigned __int8 v27 = 2;
      break;
  }
LABEL_52:
  sub_1DEB21B94(v28, v26, v27);
LABEL_53:
  uint64_t v23 = 1;
LABEL_54:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1DF1B5AE0(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (2)
    {
      uint64_t v6 = a2 + v5++;
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1869768040;
      switch(*(unsigned char *)(v6 + 32))
      {
        case 1:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x7478654E7075;
          break;
        case 2:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x756F59726F66;
          break;
        case 3:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6C6C6177796170;
          break;
        case 4:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x64657461727563;
          break;
        case 5:
          uint64_t v8 = 0x4C7974696C697475;
          unint64_t v7 = 0xEC000000736B6E69;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1869768040;
      switch(a1)
      {
        case 1:
          unint64_t v9 = 0xE600000000000000;
          if (v8 == 0x7478654E7075) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0xE600000000000000;
          if (v8 != 0x756F59726F66) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x6C6C6177796170) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x64657461727563;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xEC000000736B6E69;
          if (v8 != 0x4C7974696C697475) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            return 1;
          }
LABEL_19:
          char v11 = sub_1DFDFFF50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11)
          {
            swift_bridgeObjectRelease();
            return 1;
          }
          if (v2 != v5) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  return 0;
}

uint64_t sub_1DF1B5D50(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  unint64_t v5 = sub_1DFB5D6C0(*(unsigned char *)(a2 + 32));
  uint64_t v7 = v6;
  if (v5 == sub_1DFB5D6C0(a1) && v7 == v8)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v10 = sub_1DFDFFF50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = 33;
  while (1)
  {
    uint64_t v13 = v12 - 31;
    if (__OFADD__(v12 - 32, 1)) {
      break;
    }
    unint64_t v14 = sub_1DFB5D6C0(*(unsigned char *)(a2 + v12));
    uint64_t v16 = v15;
    if (v14 == sub_1DFB5D6C0(a1) && v16 == v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v19 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_7;
    }
    ++v12;
    if (v13 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DF1B5EA8(uint64_t a1, unint64_t a2)
{
  return sub_1DF1B5ED0(a1, a2, (uint64_t)&qword_1EBABAAD0);
}

uint64_t sub_1DF1B5EBC(uint64_t a1, unint64_t a2)
{
  return sub_1DF1B5ED0(a1, a2, (uint64_t)&qword_1EBABB030);
}

uint64_t sub_1DF1B5ED0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1DFDFFBE0())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)MEMORY[0x1E01EE240](0, a2);
LABEL_5:
      uint64_t v8 = v7;
      sub_1DE919914(0, (unint64_t *)a3);
      a3 = sub_1DFDFF550();

      if (a3)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        char v13 = sub_1DFDFF550();

        if (v13) {
          goto LABEL_6;
        }
        ++v6;
        if (v12 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      MEMORY[0x1E01EE240](a3, a2);
      uint64_t v10 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      char v11 = sub_1DFDFF550();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++a3;
      if (v10 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DF1B6058()
{
  return sub_1DE9F5388();
}

uint64_t sub_1DF1B6070@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DE978BC4(0xD000000000000015, 0x80000001DFEE5600, a1);
}

uint64_t sub_1DF1B608C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v34 = a2;
  uint64_t v3 = sub_1DFDF0310();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  char v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDF02A0();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v30);
  unint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v24 - v11;
  uint64_t v25 = sub_1DFDF0330();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1DFDF0340();
  id v16 = objc_msgSend(a1, sel_contentDirectory);
  sub_1DFDFDD20();

  sub_1DFDE7110();
  swift_bridgeObjectRelease();
  sub_1DFDE7140();
  uint64_t v17 = sub_1DFDE71C0();
  uint64_t v19 = v18;
  int v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v10, v6);
  v20(v12, v6);
  *uint64_t v15 = v17;
  v15[1] = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA728], v25);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1DE9F5848(0, &qword_1EBAEADD8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
  sub_1DFDF0290();
  uint64_t v35 = v22;
  sub_1DE9F59A0((unint64_t *)&unk_1EBAD2E40, MEMORY[0x1E4FAA678]);
  sub_1DE9F5848(0, &qword_1EBAEA188, v21, MEMORY[0x1E4FBB320]);
  sub_1DE9F58AC((unint64_t *)&unk_1EBAEA190, &qword_1EBAEA188, v21);
  sub_1DFDFF830();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAA710], v33);
  uint64_t result = sub_1DFDF0320();
  *BOOL v34 = result;
  return result;
}

uint64_t sub_1DF1B6524@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v34 = a2;
  uint64_t v3 = sub_1DFDF0310();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  char v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDF02A0();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v30);
  unint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v24 - v11;
  uint64_t v25 = sub_1DFDF0330();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1DFDF0340();
  id v16 = objc_msgSend(a1, sel_contentDirectory);
  sub_1DFDFDD20();

  sub_1DFDE7110();
  swift_bridgeObjectRelease();
  sub_1DFDE7140();
  uint64_t v17 = sub_1DFDE71C0();
  uint64_t v19 = v18;
  int v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v10, v6);
  v20(v12, v6);
  *uint64_t v15 = v17;
  v15[1] = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA728], v25);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1DE9F5848(0, &qword_1EBAEADD8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
  sub_1DFDF0290();
  uint64_t v35 = v22;
  sub_1DE9F59A0((unint64_t *)&unk_1EBAD2E40, MEMORY[0x1E4FAA678]);
  sub_1DE9F5848(0, &qword_1EBAEA188, v21, MEMORY[0x1E4FBB320]);
  sub_1DE9F58AC((unint64_t *)&unk_1EBAEA190, &qword_1EBAEA188, v21);
  sub_1DFDFF830();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAA710], v33);
  uint64_t result = sub_1DFDF0320();
  *BOOL v34 = result;
  return result;
}

uint64_t sub_1DF1B69BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v34 = a2;
  uint64_t v3 = sub_1DFDF0310();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  char v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDF02A0();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v30);
  unint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v24 - v11;
  uint64_t v25 = sub_1DFDF0330();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1DFDF0340();
  id v16 = objc_msgSend(a1, sel_contentDirectory);
  sub_1DFDFDD20();

  sub_1DFDE7110();
  swift_bridgeObjectRelease();
  sub_1DFDE7140();
  uint64_t v17 = sub_1DFDE71C0();
  uint64_t v19 = v18;
  int v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v10, v6);
  v20(v12, v6);
  *uint64_t v15 = v17;
  v15[1] = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA728], v25);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1DE9F5848(0, &qword_1EBAEADD8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
  sub_1DFDF0290();
  uint64_t v35 = v22;
  sub_1DE9F59A0((unint64_t *)&unk_1EBAD2E40, MEMORY[0x1E4FAA678]);
  sub_1DE9F5848(0, &qword_1EBAEA188, v21, MEMORY[0x1E4FBB320]);
  sub_1DE9F58AC((unint64_t *)&unk_1EBAEA190, &qword_1EBAEA188, v21);
  sub_1DFDFF830();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAA710], v33);
  uint64_t result = sub_1DFDF0320();
  *BOOL v34 = result;
  return result;
}

uint64_t sub_1DF1B6E4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v34 = a2;
  uint64_t v3 = sub_1DFDF0310();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  char v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDF02A0();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v30);
  unint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v24 - v11;
  uint64_t v25 = sub_1DFDF0330();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1DFDF0340();
  id v16 = objc_msgSend(a1, sel_contentDirectory);
  sub_1DFDFDD20();

  sub_1DFDE7110();
  swift_bridgeObjectRelease();
  sub_1DFDE7140();
  uint64_t v17 = sub_1DFDE71C0();
  uint64_t v19 = v18;
  int v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v10, v6);
  v20(v12, v6);
  *uint64_t v15 = v17;
  v15[1] = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA728], v25);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1DE9F5848(0, &qword_1EBAEADD8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
  sub_1DFDF0290();
  uint64_t v35 = v22;
  sub_1DE9F59A0((unint64_t *)&unk_1EBAD2E40, MEMORY[0x1E4FAA678]);
  sub_1DE9F5848(0, &qword_1EBAEA188, v21, MEMORY[0x1E4FBB320]);
  sub_1DE9F58AC((unint64_t *)&unk_1EBAEA190, &qword_1EBAEA188, v21);
  sub_1DFDFF830();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAA710], v33);
  uint64_t result = sub_1DFDF0320();
  *BOOL v34 = result;
  return result;
}

void *sub_1DF1B72DC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DEB789B4();
  uint64_t result = (void *)sub_1DFDECCB0();
  if (result)
  {
    sub_1DF814F00(result);
    return (void *)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DF1B7358@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v38 = a4;
  uint64_t v5 = sub_1DFDF0310();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v35 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1DFDF02A0();
  uint64_t v30 = *(void *)(v34 - 8);
  uint64_t v31 = v30;
  MEMORY[0x1F4188790](v34);
  uint64_t v33 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDE7220();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v27 = sub_1DFDF0330();
  uint64_t v15 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = sub_1DFDF0340();
  id v18 = objc_msgSend(a1, sel_contentDirectory);
  sub_1DFDFDD20();

  sub_1DFDE7110();
  swift_bridgeObjectRelease();
  sub_1DFDE7140();
  uint64_t v19 = sub_1DFDE71C0();
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  v22(v14, v8);
  *uint64_t v17 = v19;
  v17[1] = v21;
  (*(void (**)(uint64_t *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FAA728], v27);
  uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1DE9F5848(0, &qword_1EBAEADD8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1DFE0B250;
  sub_1DFDF0290();
  uint64_t v39 = v24;
  sub_1DE9F59A0((unint64_t *)&unk_1EBAD2E40, MEMORY[0x1E4FAA678]);
  sub_1DE9F5848(0, &qword_1EBAEA188, v23, MEMORY[0x1E4FBB320]);
  sub_1DE9F58AC((unint64_t *)&unk_1EBAEA190, &qword_1EBAEA188, v23);
  sub_1DFDFF830();
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x1E4FAA710], v37);
  uint64_t result = sub_1DFDF0320();
  uint64_t *v38 = result;
  return result;
}

uint64_t sub_1DF1B77D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1DFDF0310();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDF02A0();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v30);
  uint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v24 - v11;
  uint64_t v25 = sub_1DFDF0330();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1DFDF0340();
  id v16 = objc_msgSend(a1, sel_contentDirectory);
  sub_1DFDFDD20();

  sub_1DFDE7110();
  swift_bridgeObjectRelease();
  sub_1DFDE7140();
  uint64_t v17 = sub_1DFDE71C0();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v10, v6);
  v20(v12, v6);
  *uint64_t v15 = v17;
  v15[1] = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA728], v25);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1DE9F5848(0, &qword_1EBAEADD8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
  sub_1DFDF0290();
  uint64_t v35 = v22;
  sub_1DE9F59A0((unint64_t *)&unk_1EBAD2E40, MEMORY[0x1E4FAA678]);
  sub_1DE9F5848(0, &qword_1EBAEA188, v21, MEMORY[0x1E4FBB320]);
  sub_1DE9F58AC((unint64_t *)&unk_1EBAEA190, &qword_1EBAEA188, v21);
  sub_1DFDFF830();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAA710], v33);
  uint64_t result = sub_1DFDF0320();
  *uint64_t v34 = result;
  return result;
}

uint64_t sub_1DF1B7C68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1DFDF0310();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDF02A0();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v30);
  uint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v24 - v11;
  uint64_t v25 = sub_1DFDF0330();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1DFDF0340();
  id v16 = objc_msgSend(a1, sel_contentDirectory);
  sub_1DFDFDD20();

  sub_1DFDE7110();
  swift_bridgeObjectRelease();
  sub_1DFDE7140();
  uint64_t v17 = sub_1DFDE71C0();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v10, v6);
  v20(v12, v6);
  *uint64_t v15 = v17;
  v15[1] = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA728], v25);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1DE9F5848(0, &qword_1EBAEADD8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
  sub_1DFDF0290();
  uint64_t v35 = v22;
  sub_1DE9F59A0((unint64_t *)&unk_1EBAD2E40, MEMORY[0x1E4FAA678]);
  sub_1DE9F5848(0, &qword_1EBAEA188, v21, MEMORY[0x1E4FBB320]);
  sub_1DE9F58AC((unint64_t *)&unk_1EBAEA190, &qword_1EBAEA188, v21);
  sub_1DFDFF830();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAA710], v33);
  uint64_t result = sub_1DFDF0320();
  *uint64_t v34 = result;
  return result;
}

uint64_t sub_1DF1B80F8()
{
  return sub_1DE9F5388();
}

uint64_t sub_1DF1B8110@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DE978BC4(0xD000000000000026, 0x80000001DFEE5620, a1);
}

uint64_t sub_1DF1B812C(void *a1)
{
  return sub_1DE9F55B4(a1);
}

uint64_t sub_1DF1B814C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1DFDF0310();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDF02A0();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v30);
  uint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDE7220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v24 - v11;
  uint64_t v25 = sub_1DFDF0330();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1DFDF0340();
  id v16 = objc_msgSend(a1, sel_contentDirectory);
  sub_1DFDFDD20();

  sub_1DFDE7110();
  swift_bridgeObjectRelease();
  sub_1DFDE7140();
  uint64_t v17 = sub_1DFDE71C0();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v10, v6);
  v20(v12, v6);
  *uint64_t v15 = v17;
  v15[1] = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA728], v25);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1DE9F5848(0, &qword_1EBAEADD8, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DFE0CC10;
  sub_1DFDF0270();
  sub_1DFDF0290();
  sub_1DFDF0280();
  uint64_t v35 = v22;
  sub_1DE9F59A0((unint64_t *)&unk_1EBAD2E40, MEMORY[0x1E4FAA678]);
  sub_1DE9F5848(0, &qword_1EBAEA188, v21, MEMORY[0x1E4FBB320]);
  sub_1DE9F58AC((unint64_t *)&unk_1EBAEA190, &qword_1EBAEA188, v21);
  sub_1DFDFF830();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAA710], v33);
  uint64_t result = sub_1DFDF0320();
  *uint64_t v34 = result;
  return result;
}

void *sub_1DF1B85F8(uint64_t a1, void *a2)
{
  return sub_1DF1B72DC(a1, a2);
}

uint64_t sub_1DF1B8600()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF1B8638(void *a1)
{
  return sub_1DEADF664(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DF1B8640()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF1B8680@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF1B814C(*(void **)(v1 + 16), a1);
}

uint64_t sub_1DF1B8688@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF1B7C68(*(void **)(v1 + 16), a1);
}

uint64_t sub_1DF1B8690()
{
  return swift_deallocObject();
}

uint64_t sub_1DF1B86C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DEADF180(*(void **)(v1 + 16), a1);
}

uint64_t sub_1DF1B86D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DF1B608C(*(void **)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for AlertContentUnavailable()
{
  return &type metadata for AlertContentUnavailable;
}

uint64_t sub_1DF1B870C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t sub_1DF1B87C4()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t sub_1DF1B888C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t static Settings.Sports.isOnboardingActive.getter()
{
  return sub_1DEB702E0(&qword_1EBAD1E68);
}

uint64_t static Settings.Sports.sportsSyncServiceVersion.getter()
{
  return sub_1DEB702E0(&qword_1EBAD1E80);
}

ValueMetadata *type metadata accessor for Settings.Sports()
{
  return &type metadata for Settings.Sports;
}

uint64_t sub_1DF1B89AC()
{
  sub_1DEA98C58(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v6 - v1;
  uint64_t v3 = sub_1DFDEAB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  swift_retain();
  sub_1DFBB5128(0xD000000000000048, 0, (uint64_t)v2, (uint64_t)v8, 0, 0, 0, 0, (uint64_t)v6);
  swift_release();
  sub_1DE932EE8((uint64_t)v6, &qword_1EBAA7470, (unint64_t *)&unk_1EBAA7460);
  sub_1DE932EE8((uint64_t)v8, (unint64_t *)&unk_1EBAA3BB0, (unint64_t *)&qword_1EBAA86B0);
  sub_1DEBFF970((uint64_t)v2);
  swift_release();
  return 1;
}

uint64_t type metadata accessor for SharedWithYouURLHandler()
{
  return self;
}

uint64_t sub_1DF1B8D4C()
{
  return sub_1DF1B89AC() & 1;
}

unint64_t sub_1DF1B8D78()
{
  unint64_t result = qword_1EBADA5D0;
  if (!qword_1EBADA5D0)
  {
    type metadata accessor for SharedWithYouURLHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADA5D0);
  }
  return result;
}

uint64_t sub_1DF1B8DCC()
{
  uint64_t v1 = (char *)objc_msgSend(*(id *)(v0 + 184), sel_cachedSubscription);
  if (objc_getAssociatedObject(v1, v1 + 1))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_1DEAB8E08((uint64_t)&v9, (uint64_t)v11, (uint64_t (*)(void))sub_1DE9E4C7C);
  if (!v12)
  {
    sub_1DEA2CC98((uint64_t)v11, (uint64_t (*)(void))sub_1DE9E4C7C);
    goto LABEL_9;
  }
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = v8;
  unint64_t v3 = (unint64_t)objc_msgSend(v8, sel_integerValue);
  if (v3 == -1) {
    goto LABEL_17;
  }
LABEL_10:
  if (objc_getAssociatedObject(v1, (const void *)~v3))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_1DEAB8E08((uint64_t)&v9, (uint64_t)v11, (uint64_t (*)(void))sub_1DE9E4C7C);
  if (!v12)
  {
    sub_1DEA2CC98((uint64_t)v11, (uint64_t (*)(void))sub_1DE9E4C7C);
    goto LABEL_17;
  }
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:

    int v6 = -50;
    return (v6 ^ v3) & 1;
  }
  id v4 = v8;
  unsigned int v5 = objc_msgSend(v4, sel_integerValue);

  int v6 = v5 - 50;
  return (v6 ^ v3) & 1;
}

uint64_t sub_1DF1B8FF4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1DF1B906C()
{
  sub_1DF1B8FF4();
  return swift_deallocClassInstance();
}

uint64_t sub_1DF1B90A0()
{
  uint64_t v1 = v0;
  sub_1DFDF5710();
  sub_1DFDF5520();
  char v2 = sub_1DFDF5220();
  swift_release();
  if (v2 & 1) != 0 || (sub_1DFDF54A0(), char v3 = sub_1DFDF5220(), swift_release(), (v3))
  {
    id v4 = objc_msgSend(*(id *)(v1 + 96), sel_listenableArticleIDs);
    uint64_t v5 = sub_1DFDFE5D0();

    sub_1DF1BD748(0, (unint64_t *)&unk_1EBAC06F0, (uint64_t (*)(uint64_t))sub_1DEABCC20, MEMORY[0x1E4F80D98]);
    sub_1DFDFB470();
    id v6 = objc_msgSend(v12, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v7 = sub_1DFDFDD20();
    uint64_t v9 = v8;

    char v10 = sub_1DEAAB55C(v7, v9, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 1;
  }
  return v10 & 1;
}

uint64_t sub_1DF1B9214(id *a1, uint64_t a2)
{
  sub_1DF1BD748(0, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (id *)((char *)&v20 - v5);
  id v7 = objc_msgSend(*a1, sel_identifier);
  uint64_t v8 = sub_1DFDFDD20();
  uint64_t v10 = v9;

  sub_1DF1BD6A8(a2, (uint64_t)v6, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
  uint64_t v11 = type metadata accessor for AudioFeedTrack(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v6, 1, v11) == 1)
  {
    sub_1DE986B1C((uint64_t)v6, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    swift_bridgeObjectRelease();
    char v12 = 1;
  }
  else
  {
    id v13 = objc_msgSend(*v6, sel_identifier);
    uint64_t v14 = sub_1DFDFDD20();
    uint64_t v16 = v15;

    sub_1DEA2CC98((uint64_t)v6, type metadata accessor for AudioFeedTrack);
    if (v8 == v14 && v10 == v16)
    {
      swift_bridgeObjectRelease_n();
      char v12 = 0;
    }
    else
    {
      char v18 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v12 = v18 ^ 1;
    }
  }
  return v12 & 1;
}

void sub_1DF1B942C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
}

uint64_t sub_1DF1B9458()
{
  return sub_1DF1BD4A4() & 1;
}

void sub_1DF1B9488(void *a1, void *a2)
{
  v497 = a1;
  v466 = (void *)sub_1DFDFB520();
  v465 = (void (*)(char *, uint64_t))*(v466 - 1);
  MEMORY[0x1F4188790](v466);
  v463 = (char *)&v415 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v464 = sub_1DFDFADD0();
  v462 = *(void **)(v464 - 8);
  MEMORY[0x1F4188790](v464);
  v460 = (char *)&v415 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v461 = sub_1DFDFA6C0();
  uint64_t v459 = *(void *)(v461 - 8);
  MEMORY[0x1F4188790](v461);
  v458 = (char *)&v415 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF1BD58C();
  uint64_t v431 = v7;
  uint64_t v430 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v429 = (char *)&v415 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DF1BD748(0, &qword_1EAC29400, (uint64_t (*)(uint64_t))sub_1DEF36B58, MEMORY[0x1E4FBB718]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  v448 = (char *)&v415 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v432 = (uint64_t)&v415 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v421 = (char *)&v415 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v437 = (uint64_t)&v415 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v425 = (char *)&v415 - v20;
  MEMORY[0x1F4188790](v19);
  v447 = (char *)&v415 - v21;
  sub_1DF0EB2BC();
  uint64_t v467 = v22;
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  uint64_t v438 = (uint64_t)&v415 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v435 = (uint64_t)&v415 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v439 = (uint64_t)&v415 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v470 = (uint64_t)&v415 - v29;
  sub_1DF1BD748(0, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack, v9);
  uint64_t v31 = MEMORY[0x1F4188790](v30 - 8);
  v417 = (char *)&v415 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  v418 = (char *)&v415 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  v440 = (char *)&v415 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v426 = (uint64_t)&v415 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  v446 = (id *)((char *)&v415 - v40);
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  unint64_t v450 = (unint64_t)&v415 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v452 = (uint64_t)&v415 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  v451 = (char *)&v415 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  v428 = (char *)&v415 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  unint64_t v420 = (unint64_t)&v415 - v50;
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  v422 = (id *)((char *)&v415 - v52);
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  v441 = (id *)((char *)&v415 - v54);
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  v424 = (char *)&v415 - v56;
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  v433 = (id *)((char *)&v415 - v58);
  uint64_t v59 = MEMORY[0x1F4188790](v57);
  v443 = (id *)((char *)&v415 - v60);
  uint64_t v61 = MEMORY[0x1F4188790](v59);
  v444 = (char *)&v415 - v62;
  uint64_t v63 = MEMORY[0x1F4188790](v61);
  uint64_t v456 = (uint64_t)&v415 - v64;
  uint64_t v65 = MEMORY[0x1F4188790](v63);
  v455 = (char *)&v415 - v66;
  uint64_t v67 = MEMORY[0x1F4188790](v65);
  v457 = (id *)((char *)&v415 - v68);
  uint64_t v69 = MEMORY[0x1F4188790](v67);
  uint64_t v469 = (uint64_t)&v415 - v70;
  MEMORY[0x1F4188790](v69);
  uint64_t v486 = (uint64_t)&v415 - v71;
  sub_1DEAE9BCC();
  MEMORY[0x1F4188790](v72 - 8);
  v484 = (char *)&v415 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v487 = type metadata accessor for AudioFeedTrack(0);
  uint64_t v485 = *(void *)(v487 - 8);
  uint64_t v74 = MEMORY[0x1F4188790](v487);
  v416 = (id *)((char *)&v415 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v76 = MEMORY[0x1F4188790](v74);
  v415 = (id *)((char *)&v415 - v77);
  uint64_t v78 = MEMORY[0x1F4188790](v76);
  v434 = (id *)((char *)&v415 - v79);
  uint64_t v80 = MEMORY[0x1F4188790](v78);
  v453 = (id *)((char *)&v415 - v81);
  uint64_t v82 = MEMORY[0x1F4188790](v80);
  v488 = (id *)((char *)&v415 - v83);
  MEMORY[0x1F4188790](v82);
  uint64_t v468 = (uint64_t)&v415 - v84;
  uint64_t v483 = sub_1DFDEA9A0();
  uint64_t v481 = *(void *)(v483 - 8);
  MEMORY[0x1F4188790](v483);
  v479 = (char *)&v415 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v478 = sub_1DFDFAD30();
  uint64_t v492 = *(void *)(v478 - 8);
  uint64_t v86 = MEMORY[0x1F4188790](v478);
  v474 = (char *)&v415 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v86);
  v477 = (char *)&v415 - v88;
  uint64_t v493 = sub_1DFDEA990();
  uint64_t v491 = *(void *)(v493 - 8);
  MEMORY[0x1F4188790](v493);
  v490 = (char *)&v415 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v472 = sub_1DFDFB8B0();
  uint64_t v471 = *(void *)(v472 - 8);
  uint64_t v90 = MEMORY[0x1F4188790](v472);
  long long v92 = (char *)&v415 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v90);
  long long v94 = (char *)&v415 - v93;
  uint64_t v476 = sub_1DFDEB740();
  uint64_t v475 = *(void *)(v476 - 8);
  MEMORY[0x1F4188790](v476);
  uint64_t v489 = (uint64_t)&v415 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1DFDFA4B0();
  uint64_t v494 = *(void *)(v96 - 8);
  uint64_t v495 = v96;
  uint64_t v97 = MEMORY[0x1F4188790](v96);
  v482 = (char *)&v415 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = MEMORY[0x1F4188790](v97);
  v480 = (char *)&v415 - v100;
  MEMORY[0x1F4188790](v99);
  uint64_t v102 = (char *)&v415 - v101;
  sub_1DF1BD748(0, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18, v9);
  uint64_t v104 = MEMORY[0x1F4188790](v103 - 8);
  uint64_t v445 = (uint64_t)&v415 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = MEMORY[0x1F4188790](v104);
  v449 = (char *)&v415 - v107;
  uint64_t v108 = MEMORY[0x1F4188790](v106);
  uint64_t v427 = (uint64_t)&v415 - v109;
  uint64_t v110 = MEMORY[0x1F4188790](v108);
  v419 = (char *)&v415 - v111;
  uint64_t v112 = MEMORY[0x1F4188790](v110);
  uint64_t v436 = (uint64_t)&v415 - v113;
  uint64_t v114 = MEMORY[0x1F4188790](v112);
  uint64_t v423 = (uint64_t)&v415 - v115;
  uint64_t v116 = MEMORY[0x1F4188790](v114);
  uint64_t v442 = (uint64_t)&v415 - v117;
  uint64_t v118 = MEMORY[0x1F4188790](v116);
  uint64_t v454 = (uint64_t)&v415 - v119;
  uint64_t v120 = MEMORY[0x1F4188790](v118);
  uint64_t v473 = (uint64_t)&v415 - v121;
  MEMORY[0x1F4188790](v120);
  long long v123 = (char *)&v415 - v122;
  sub_1DF1BD748(0, (unint64_t *)&unk_1EBAC06F0, (uint64_t (*)(uint64_t))sub_1DEABCC20, MEMORY[0x1E4F80D98]);
  uint64_t v125 = v124;
  uint64_t v126 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v128 = (char *)&v415 - v127;
  unint64_t v129 = v2;
  char v130 = sub_1DFDFAC40();
  long long v131 = *(void (**)(char *, void *, uint64_t))(v126 + 16);
  v496 = a2;
  v131(v128, a2, v125);
  if (v130)
  {
    (*(void (**)(char *, uint64_t))(v126 + 8))(v128, v125);
  }
  else
  {
    char v132 = sub_1DF1B90A0();
    (*(void (**)(char *, uint64_t))(v126 + 8))(v128, v125);
    if ((v132 & 1) == 0)
    {
      __swift_project_boxed_opaque_existential_1(v129 + 24, v129[27]);
      uint64_t v150 = (void *)sub_1DFDF1C90();
      if (v150)
      {
        unint64_t v151 = v150;
        id v152 = objc_msgSend(v150, sel_rootViewController);

        if (v152)
        {
          uint64_t v153 = v129[16];
          v497 = (void *)v129[17];
          __swift_project_boxed_opaque_existential_1(v129 + 13, v153);
          uint64_t v154 = v458;
          sub_1DFDE9110();
          uint64_t v155 = v462;
          uint64_t v156 = v460;
          uint64_t v157 = v464;
          ((void (*)(char *, void, uint64_t))v462[13])(v460, *MEMORY[0x1E4F80AC0], v464);
          uint64_t v158 = v465;
          uint64_t v159 = v463;
          uint64_t v160 = v466;
          (*((void (**)(char *, void, void *))v465 + 13))(v463, *MEMORY[0x1E4F80E20], v466);
          uint64_t v161 = (void *)sub_1DFDFD410();
          (*((void (**)(char *, void *))v158 + 1))(v159, v160);
          ((void (*)(char *, uint64_t))v155[1])(v156, v157);
          (*(void (**)(char *, uint64_t))(v459 + 8))(v154, v461);
          objc_msgSend(v152, sel_presentViewController_animated_completion_, v161, 1, 0);
        }
      }
      return;
    }
  }
  sub_1DFDF5710();
  sub_1DFDF5490();
  char v133 = sub_1DFDF5220();
  swift_release();
  if (v133)
  {
    sub_1DFDFB470();
    id v134 = v498;
    sub_1DEF36A18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v123, 1, 1, v135);
    sub_1DEF366E0(v134, (uint64_t)v123);
    swift_unknownObjectRelease();
    long long v136 = &qword_1EBAF6050;
    long long v137 = (uint64_t (*)(uint64_t))sub_1DEF36A18;
    uint64_t v138 = (uint64_t)v123;
LABEL_6:
    sub_1DE986B1C(v138, v136, v137);
    return;
  }
  sub_1DFDF5520();
  char v139 = sub_1DFDF5220();
  swift_release();
  if ((v139 & 1) != 0
    || (sub_1DFDF54A0(), char v140 = sub_1DFDF5220(), swift_release(), (v140 & 1) != 0)
    || (sub_1DFDF5440(), char v141 = sub_1DFDF5220(), swift_release(), (v141 & 1) != 0))
  {
    sub_1DFDFB470();
    v466 = v498;
    uint64_t v142 = v129[21];
    uint64_t v143 = v129;
    v463 = (char *)v129[22];
    uint64_t v464 = v142;
    v462 = __swift_project_boxed_opaque_existential_1(v129 + 18, v142);
    sub_1DFDFB490();
    sub_1DEE5C3A0(v489);
    uint64_t v144 = *(void (**)(char *, uint64_t))(v494 + 8);
    v144(v102, v495);
    sub_1DFDFB4A0();
    uint64_t v145 = v471;
    uint64_t v146 = v472;
    (*(void (**)(char *, char *, uint64_t))(v471 + 16))(v92, v94, v472);
    int v147 = (*(uint64_t (**)(char *, uint64_t))(v145 + 88))(v92, v146);
    if (v147 == *MEMORY[0x1E4F80F00])
    {
      uint64_t v148 = (unsigned int *)MEMORY[0x1E4F7B840];
      uint64_t v149 = v477;
    }
    else
    {
      uint64_t v149 = v477;
      if (v147 == *MEMORY[0x1E4F80F10])
      {
        uint64_t v148 = (unsigned int *)MEMORY[0x1E4F7B850];
      }
      else
      {
        if (v147 != *MEMORY[0x1E4F80F08])
        {
          int v414 = 0;
          goto LABEL_183;
        }
        uint64_t v148 = (unsigned int *)MEMORY[0x1E4F7B848];
      }
    }
    (*(void (**)(char *, void, uint64_t))(v491 + 104))(v490, *v148, v493);
    (*(void (**)(char *, uint64_t))(v145 + 8))(v94, v146);
    sub_1DFDFB480();
    uint64_t v162 = v492;
    uint64_t v163 = v474;
    uint64_t v164 = v478;
    (*(void (**)(char *, char *, uint64_t))(v492 + 16))(v474, v149, v478);
    int v165 = (*(uint64_t (**)(char *, uint64_t))(v162 + 88))(v163, v164);
    BOOL v166 = v165 == *MEMORY[0x1E4F80A58];
    v465 = v144;
    if (v166)
    {
      uint64_t v167 = (unsigned int *)MEMORY[0x1E4F7B858];
      goto LABEL_24;
    }
    if (v165 == *MEMORY[0x1E4F80A50])
    {
      uint64_t v167 = (unsigned int *)MEMORY[0x1E4F7B868];
LABEL_24:
      uint64_t v168 = v481;
      uint64_t v169 = v479;
      uint64_t v170 = v483;
      (*(void (**)(char *, void, uint64_t))(v481 + 104))(v479, *v167, v483);
      (*(void (**)(char *, uint64_t))(v492 + 8))(v149, v164);
      uint64_t v172 = v489;
      int64_t v171 = v490;
      (*((void (**)(uint64_t, char *, char *, uint64_t))v463 + 1))(v489, v490, v169, v464);
      (*(void (**)(char *, uint64_t))(v168 + 8))(v169, v170);
      (*(void (**)(char *, uint64_t))(v491 + 8))(v171, v493);
      (*(void (**)(uint64_t, uint64_t))(v475 + 8))(v172, v476);
      uint64_t v173 = v143;
      uint64_t v493 = v143[4];
      sub_1DFDE95C0();
      uint64_t v174 = (uint64_t)v484;
      sub_1DFDECF80();
      swift_release();
      uint64_t v175 = v473;
      sub_1DEF364B8(v473);
      sub_1DEA2CC98(v174, (uint64_t (*)(void))sub_1DEAE9BCC);
      sub_1DEF36A18();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v176 - 8) + 48))(v175, 1, v176) == 1)
      {
        sub_1DE986B1C(v175, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
      }
      else
      {
        uint64_t v177 = v468;
        sub_1DEAB8E08(v175, v468, type metadata accessor for AudioFeedTrack);
        sub_1DF9A55AC(v177, 3);
        sub_1DEA2CC98(v177, type metadata accessor for AudioFeedTrack);
      }
      uint64_t v178 = v466;
      uint64_t v179 = v465;
      unint64_t v180 = v480;
      sub_1DFDFB490();
      uint64_t v181 = v495;
      uint64_t v182 = v482;
      (*(void (**)(char *, void, uint64_t))(v494 + 104))(v482, *MEMORY[0x1E4F80768], v495);
      char v183 = sub_1DFDFA4A0();
      v179(v182, v181);
      v179(v180, v181);
      uint64_t v184 = v173[9];
      uint64_t v185 = v173[10];
      uint64_t v186 = v173;
      __swift_project_boxed_opaque_existential_1(v173 + 6, v184);
      uint64_t v187 = v485;
      uint64_t v188 = v487;
      uint64_t v189 = (uint64_t)v488;
      if (v183) {
        (*(void (**)(void *, uint64_t, uint64_t))(v185 + 16))(v178, v184, v185);
      }
      else {
        (*(void (**)(void *, uint64_t, uint64_t))(v185 + 8))(v178, v184, v185);
      }
      uint64_t v190 = v486;
      sub_1DEDDB1E0(v189, v486);
      uint64_t v191 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v187 + 56);
      uint64_t v192 = 1;
      v191(v190, 0, 1, v188);
      unint64_t v193 = (void *)v186[2];
      swift_retain();
      sub_1DFDECF80();
      swift_release();
      uint64_t v194 = v498[2];
      v496 = v193;
      uint64_t v195 = v469;
      if (v194)
      {
        sub_1DEDDB1E0((uint64_t)v498+ ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80)), v469);
        uint64_t v192 = 0;
      }
      v191(v195, v192, 1, v188);
      swift_bridgeObjectRelease();
      uint64_t v203 = v470;
      uint64_t v204 = v470 + *(int *)(v467 + 48);
      sub_1DF1BD6A8(v190, v470, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
      uint64_t v205 = v203;
      sub_1DF1BD6A8(v195, v204, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
      uint64_t v206 = v190;
      unint64_t v207 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v187 + 48);
      if (v207(v203, 1, v188) == 1)
      {
        sub_1DE986B1C(v195, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
        uint64_t v205 = v470;
        sub_1DE986B1C(v206, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
        int v208 = v207(v204, 1, v188);
        uint64_t v209 = v488;
        if (v208 == 1)
        {
          sub_1DE986B1C(v205, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
LABEL_44:
          v498 = (void *)MEMORY[0x1E4FBC860];
          sub_1DF0EB388();
          sub_1DFDECFB0();
          uint64_t v216 = (void *)sub_1DFDF5440();
          swift_release();
          if (v216 == v497) {
            sub_1DFDE9620();
          }
          else {
            sub_1DFDE9600();
          }
          swift_unknownObjectRelease();
LABEL_55:
          sub_1DEA2CC98((uint64_t)v209, type metadata accessor for AudioFeedTrack);
          return;
        }
      }
      else
      {
        v210 = v457;
        sub_1DF1BD6A8(v203, (uint64_t)v457, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
        if (v207(v204, 1, v188) != 1)
        {
          uint64_t v214 = v453;
          sub_1DEAB8E08(v204, (uint64_t)v453, type metadata accessor for AudioFeedTrack);
          char v215 = _s7NewsUI214AudioFeedTrackV2eeoiySbAC_ACtFZ_0(v210, v214);
          sub_1DEA2CC98((uint64_t)v214, type metadata accessor for AudioFeedTrack);
          sub_1DE986B1C(v469, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
          sub_1DE986B1C(v486, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
          sub_1DEA2CC98((uint64_t)v210, type metadata accessor for AudioFeedTrack);
          sub_1DE986B1C(v203, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
          uint64_t v209 = v488;
          if (v215) {
            goto LABEL_44;
          }
LABEL_41:
          sub_1DF1BD748(0, (unint64_t *)&unk_1EBABB520, type metadata accessor for AudioFeedTrack, MEMORY[0x1E4FBBE00]);
          unint64_t v211 = (*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
          uint64_t v212 = (_OWORD *)swift_allocObject();
          v212[1] = xmmword_1DFE0B250;
          sub_1DEDDB1E0((uint64_t)v209, (uint64_t)v212 + v211);
          v498 = v212;
          sub_1DF0EB388();
          sub_1DFDECFB0();
          swift_bridgeObjectRelease();
          uint64_t v213 = (void *)sub_1DFDF5440();
          swift_release();
          if (v213 == v497) {
            sub_1DFDE9620();
          }
          else {
            sub_1DFDE9600();
          }
          uint64_t v217 = *(void **)((char *)v496 + OBJC_IVAR____TtC7NewsUI216AudioDataManager_readingHistory);
          id v218 = objc_msgSend(*v209, sel_articleID);
          if (!v218)
          {
            sub_1DFDFDD20();
            id v218 = (id)sub_1DFDFDCE0();
            swift_bridgeObjectRelease();
          }
          objc_msgSend(v217, sel_markArticle_withCompletedListening_, v218, 0);
          swift_unknownObjectRelease();

          goto LABEL_55;
        }
        sub_1DE986B1C(v469, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
        sub_1DE986B1C(v486, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
        sub_1DEA2CC98((uint64_t)v210, type metadata accessor for AudioFeedTrack);
        uint64_t v209 = v488;
      }
      sub_1DEA2CC98(v205, (uint64_t (*)(void))sub_1DF0EB2BC);
      goto LABEL_41;
    }
    int v414 = 0;
LABEL_183:
    sub_1DFDFFBB0();
    __break(1u);
    return;
  }
  sub_1DFDF5540();
  char v196 = sub_1DFDF5220();
  swift_release();
  if (v196)
  {
    sub_1DFDFB470();
    v497 = v498;
    sub_1DFDE95B0();
    unint64_t v197 = (unint64_t)v455;
    sub_1DFDECF80();
    swift_release();
    v496 = v129;
    sub_1DFDECF80();
    uint64_t v198 = v485;
    if (v498[2])
    {
      uint64_t v199 = v456;
      sub_1DEDDB1E0((uint64_t)v498 + ((*(unsigned __int8 *)(v485 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v485 + 80)), v456);
      uint64_t v200 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56);
      uint64_t v201 = v199;
      uint64_t v202 = 0;
    }
    else
    {
      uint64_t v200 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v485 + 56);
      uint64_t v201 = v456;
      uint64_t v202 = 1;
    }
    uint64_t v232 = v487;
    v200(v201, v202, 1, v487);
    swift_bridgeObjectRelease();
    sub_1DFDE95C0();
    uint64_t v233 = (uint64_t)v484;
    sub_1DFDECF80();
    swift_release();
    uint64_t v234 = v454;
    sub_1DEF364B8(v454);
    sub_1DEA2CC98(v233, (uint64_t (*)(void))sub_1DEAE9BCC);
    uint64_t v235 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v198 + 48);
    if (v235(v197, 1, v232) == 1)
    {
      unint64_t v236 = (unint64_t)v444;
      v200((uint64_t)v444, 1, 1, v232);
      uint64_t v237 = v442;
      sub_1DF1BD6A8(v234, v442, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
      sub_1DEF36A18();
      uint64_t v239 = v238;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v238 - 8) + 48))(v237, 1, v238) == 1)
      {
        sub_1DE986B1C(v237, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
        sub_1DEF36B58();
        uint64_t v241 = v240;
        uint64_t v242 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v240 - 8) + 56);
        uint64_t v243 = (uint64_t *)&v479;
LABEL_67:
        uint64_t v244 = *(v243 - 32);
        uint64_t v245 = v244;
        uint64_t v246 = 1;
LABEL_72:
        v242(v245, v246, 1, v241);
        sub_1DF9A3F40(v497, v236, v244);
        swift_unknownObjectRelease();
        sub_1DE986B1C(v244, &qword_1EAC29400, (uint64_t (*)(uint64_t))sub_1DEF36B58);
        uint64_t v256 = v236;
LABEL_73:
        sub_1DE986B1C(v256, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
        sub_1DE986B1C(v234, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
        uint64_t v257 = v456;
LABEL_138:
        sub_1DE986B1C(v257, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
        uint64_t v138 = v197;
LABEL_153:
        long long v136 = (unint64_t *)&qword_1EBAAAA00;
        long long v137 = type metadata accessor for AudioFeedTrack;
        goto LABEL_6;
      }
      uint64_t v250 = *(void *)(v237 + *(int *)(v239 + 48));
      sub_1DEF36B58();
      uint64_t v252 = v251;
      uint64_t v253 = *(int *)(v251 + 48);
      uint64_t v254 = v237;
      unint64_t v255 = (uint64_t *)&v479;
      goto LABEL_71;
    }
    uint64_t v247 = v443;
    sub_1DF1BD6A8(v197, (uint64_t)v443, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    if (v235((unint64_t)v247, 1, v232) == 1)
    {
      sub_1DE986B1C((uint64_t)v247, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
      uint64_t v248 = 0;
      uint64_t v249 = 0;
    }
    else
    {
      id v258 = objc_msgSend(*v247, sel_identifier);
      uint64_t v248 = sub_1DFDFDD20();
      uint64_t v249 = v259;

      sub_1DEA2CC98((uint64_t)v247, type metadata accessor for AudioFeedTrack);
    }
    id v260 = objc_msgSend(v497, sel_identifier);
    uint64_t v261 = sub_1DFDFDD20();
    uint64_t v263 = v262;

    if (v249)
    {
      unint64_t v197 = (unint64_t)v455;
      if (v248 == v261 && v249 == v263)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_122;
      }
      char v294 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v294) {
        goto LABEL_122;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v197 = (unint64_t)v455;
    }
    uint64_t v295 = v439;
    uint64_t v296 = v439 + *(int *)(v467 + 48);
    sub_1DF1BD6A8(v197, v439, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    sub_1DF1BD6A8(v456, v296, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    uint64_t v297 = v487;
    if (v235(v295, 1, v487) == 1)
    {
      if (v235(v296, 1, v297) == 1)
      {
        sub_1DE986B1C(v295, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
LABEL_120:
        unint64_t v236 = (unint64_t)v424;
        v200((uint64_t)v424, 1, 1, v487);
        uint64_t v234 = v454;
        uint64_t v312 = v423;
        sub_1DF1BD6A8(v454, v423, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
        sub_1DEF36A18();
        uint64_t v314 = v313;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v313 - 8) + 48))(v312, 1, v313) == 1)
        {
          sub_1DE986B1C(v312, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
          sub_1DEF36B58();
          uint64_t v241 = v315;
          uint64_t v242 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v315 - 8) + 56);
          uint64_t v243 = (uint64_t *)&v457;
          goto LABEL_67;
        }
        uint64_t v250 = *(void *)(v312 + *(int *)(v314 + 48));
        sub_1DEF36B58();
        uint64_t v252 = v361;
        uint64_t v253 = *(int *)(v361 + 48);
        uint64_t v254 = v312;
        unint64_t v255 = (uint64_t *)&v457;
LABEL_71:
        uint64_t v244 = *(v255 - 32);
        sub_1DEAB8E08(v254, v244, type metadata accessor for AudioFeedTrack);
        *(void *)(v244 + v253) = v250;
        uint64_t v242 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v252 - 8) + 56);
        uint64_t v245 = v244;
        uint64_t v246 = 0;
        uint64_t v241 = v252;
        goto LABEL_72;
      }
      goto LABEL_105;
    }
    uint64_t v302 = v433;
    sub_1DF1BD6A8(v295, (uint64_t)v433, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    if (v235(v296, 1, v297) == 1)
    {
      sub_1DEA2CC98((uint64_t)v302, type metadata accessor for AudioFeedTrack);
LABEL_105:
      sub_1DEA2CC98(v295, (uint64_t (*)(void))sub_1DF0EB2BC);
      goto LABEL_122;
    }
    uint64_t v310 = v453;
    sub_1DEAB8E08(v296, (uint64_t)v453, type metadata accessor for AudioFeedTrack);
    char v311 = _s7NewsUI214AudioFeedTrackV2eeoiySbAC_ACtFZ_0(v302, v310);
    sub_1DEA2CC98((uint64_t)v310, type metadata accessor for AudioFeedTrack);
    sub_1DEA2CC98((uint64_t)v302, type metadata accessor for AudioFeedTrack);
    sub_1DE986B1C(v295, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    if (v311) {
      goto LABEL_120;
    }
LABEL_122:
    uint64_t v316 = v441;
    sub_1DF1BD6A8(v197, (uint64_t)v441, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    if (v235((unint64_t)v316, 1, v487) == 1)
    {
      sub_1DE986B1C((uint64_t)v316, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
      uint64_t v317 = 0;
      uint64_t v318 = 0;
      uint64_t v319 = &selRef_handleCloseActionOnPresenter_;
    }
    else
    {
      uint64_t v319 = &selRef_handleCloseActionOnPresenter_;
      id v320 = objc_msgSend(*v316, sel_identifier);
      uint64_t v317 = sub_1DFDFDD20();
      uint64_t v318 = v321;

      sub_1DEA2CC98((uint64_t)v316, type metadata accessor for AudioFeedTrack);
    }
    id v322 = [v497 v319[228]];
    uint64_t v323 = sub_1DFDFDD20();
    uint64_t v325 = v324;

    if (v318)
    {
      unint64_t v197 = (unint64_t)v455;
      if (v317 == v323 && v318 == v325)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_131;
      }
      char v326 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v326)
      {
LABEL_131:
        uint64_t v327 = v435;
        uint64_t v328 = v435 + *(int *)(v467 + 48);
        sub_1DF1BD6A8(v197, v435, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
        sub_1DF1BD6A8(v456, v328, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
        uint64_t v329 = v487;
        if (v235(v327, 1, v487) == 1)
        {
          if (v235(v328, 1, v329) == 1)
          {
            sub_1DE986B1C(v327, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
LABEL_156:
            uint64_t v364 = sub_1DFDECF80();
            MEMORY[0x1F4188790](v364);
            uint64_t v413 = v456;
            uint64_t v499 = sub_1DF7CB1E0((uint64_t (*)(char *))sub_1DF1BD7AC, (uint64_t)(&v415 - 4), v365);
            sub_1DF0EB388();
            uint64_t v366 = 1;
            sub_1DFDECFB0();
            swift_bridgeObjectRelease();
            swift_retain();
            sub_1DFDECF80();
            swift_release();
            if (*(void *)(v499 + 16))
            {
              unint64_t v367 = v420;
              sub_1DEDDB1E0(v499 + ((*(unsigned __int8 *)(v485 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v485 + 80)), v420);
              uint64_t v366 = 0;
              uint64_t v368 = v487;
              uint64_t v369 = (uint64_t)v421;
            }
            else
            {
              uint64_t v368 = v487;
              uint64_t v369 = (uint64_t)v421;
              unint64_t v367 = v420;
            }
            uint64_t v392 = (uint64_t)v419;
            v200(v367, v366, 1, v368);
            swift_bridgeObjectRelease();
            uint64_t v234 = v454;
            sub_1DF1BD6A8(v454, v392, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
            sub_1DEF36A18();
            uint64_t v394 = v393;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v393 - 8) + 48))(v392, 1, v393) == 1)
            {
              sub_1DE986B1C(v392, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
              sub_1DEF36B58();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v395 - 8) + 56))(v369, 1, 1, v395);
            }
            else
            {
              uint64_t v396 = *(void *)(v392 + *(int *)(v394 + 48));
              sub_1DEF36B58();
              uint64_t v398 = v397;
              uint64_t v399 = *(int *)(v397 + 48);
              sub_1DEAB8E08(v392, v369, type metadata accessor for AudioFeedTrack);
              *(void *)(v369 + v399) = v396;
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v398 - 8) + 56))(v369, 0, 1, v398);
            }
            sub_1DF9A3F40(v497, v367, v369);
            swift_unknownObjectRelease();
            sub_1DE986B1C(v369, &qword_1EAC29400, (uint64_t (*)(uint64_t))sub_1DEF36B58);
            uint64_t v256 = v367;
            goto LABEL_73;
          }
        }
        else
        {
          uint64_t v340 = v422;
          sub_1DF1BD6A8(v327, (uint64_t)v422, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
          if (v235(v328, 1, v329) != 1)
          {
            uint64_t v362 = v453;
            sub_1DEAB8E08(v328, (uint64_t)v453, type metadata accessor for AudioFeedTrack);
            char v363 = _s7NewsUI214AudioFeedTrackV2eeoiySbAC_ACtFZ_0(v340, v362);
            sub_1DEA2CC98((uint64_t)v362, type metadata accessor for AudioFeedTrack);
            sub_1DEA2CC98((uint64_t)v340, type metadata accessor for AudioFeedTrack);
            sub_1DE986B1C(v327, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
            if (v363) {
              goto LABEL_156;
            }
LABEL_158:
            swift_retain();
            sub_1DFDECF80();
            swift_release();
            uint64_t v499 = (uint64_t)v498;
            sub_1DF1BD748(0, (unint64_t *)&unk_1EBABA7D0, type metadata accessor for AudioFeedTrack, MEMORY[0x1E4FBB320]);
            sub_1DF1BD620();
            v370 = v429;
            sub_1DFDFE6B0();
            swift_bridgeObjectRelease();
            uint64_t v499 = 1;
            unint64_t v371 = (unint64_t)v428;
            uint64_t v372 = v431;
            sub_1DFDECF20();
            (*(void (**)(char *, uint64_t))(v430 + 8))(v370, v372);
            uint64_t v234 = v454;
            uint64_t v373 = v427;
            sub_1DF1BD6A8(v454, v427, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
            sub_1DEF36A18();
            uint64_t v375 = v374;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v374 - 8) + 48))(v373, 1, v374) == 1)
            {
              sub_1DE986B1C(v373, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
              sub_1DEF36B58();
              uint64_t v377 = v432;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v376 - 8) + 56))(v432, 1, 1, v376);
            }
            else
            {
              uint64_t v378 = *(void *)(v373 + *(int *)(v375 + 48));
              sub_1DEF36B58();
              uint64_t v380 = v379;
              uint64_t v381 = *(int *)(v379 + 48);
              uint64_t v382 = v373;
              uint64_t v377 = v432;
              sub_1DEAB8E08(v382, v432, type metadata accessor for AudioFeedTrack);
              *(void *)(v377 + v381) = v378;
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v380 - 8) + 56))(v377, 0, 1, v380);
            }
            sub_1DF9A3F40(v497, v371, v377);
            swift_unknownObjectRelease();
            sub_1DE986B1C(v377, &qword_1EAC29400, (uint64_t (*)(uint64_t))sub_1DEF36B58);
            uint64_t v256 = v371;
            goto LABEL_73;
          }
          sub_1DEA2CC98((uint64_t)v340, type metadata accessor for AudioFeedTrack);
        }
        sub_1DEA2CC98(v327, (uint64_t (*)(void))sub_1DF0EB2BC);
        goto LABEL_158;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v197 = (unint64_t)v455;
    }
    uint64_t v330 = v454;
    uint64_t v331 = v436;
    sub_1DF1BD6A8(v454, v436, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
    sub_1DEF36A18();
    uint64_t v333 = v332;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v332 - 8) + 48))(v331, 1, v332) == 1)
    {
      sub_1DE986B1C(v331, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
      sub_1DEF36B58();
      uint64_t v335 = v437;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v334 - 8) + 56))(v437, 1, 1, v334);
    }
    else
    {
      uint64_t v336 = *(void *)(v331 + *(int *)(v333 + 48));
      sub_1DEF36B58();
      uint64_t v338 = v337;
      uint64_t v339 = *(int *)(v337 + 48);
      uint64_t v335 = v437;
      sub_1DEAB8E08(v331, v437, type metadata accessor for AudioFeedTrack);
      *(void *)(v335 + v339) = v336;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v338 - 8) + 56))(v335, 0, 1, v338);
    }
    sub_1DF9A3F40(v497, v197, v335);
    swift_unknownObjectRelease();
    sub_1DE986B1C(v335, &qword_1EAC29400, (uint64_t (*)(uint64_t))sub_1DEF36B58);
    sub_1DE986B1C(v330, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
    uint64_t v257 = v456;
    goto LABEL_138;
  }
  sub_1DFDF5530();
  char v219 = sub_1DFDF5220();
  swift_release();
  uint64_t v220 = v129;
  uint64_t v221 = v485;
  if (v219)
  {
    sub_1DFDFB470();
    id v222 = v498;
    sub_1DFDE95B0();
    uint64_t v223 = v451;
    sub_1DFDECF80();
    swift_release();
    v497 = (void *)v220[5];
    sub_1DFDECF80();
    if (v498[2])
    {
      uint64_t v224 = v452;
      sub_1DEDDB1E0((uint64_t)v498 + ((*(unsigned __int8 *)(v221 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80)), v452);
      uint64_t v225 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v221 + 56);
      v225(v224, 0, 1, v487);
    }
    else
    {
      uint64_t v225 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v221 + 56);
      v225(v452, 1, 1, v487);
    }
    uint64_t v264 = (uint64_t)v449;
    swift_bridgeObjectRelease();
    sub_1DFDE95C0();
    uint64_t v265 = (uint64_t)v484;
    sub_1DFDECF80();
    swift_release();
    sub_1DEF364B8(v264);
    sub_1DEA2CC98(v265, (uint64_t (*)(void))sub_1DEAE9BCC);
    swift_retain();
    sub_1DFDECF80();
    swift_release();
    uint64_t v266 = v498[2];
    if (v266)
    {
      unint64_t v267 = v450;
      sub_1DEDDB1E0((uint64_t)v498+ ((*(unsigned __int8 *)(v221 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80))+ *(void *)(v221 + 72) * (v266 - 1), v450);
      uint64_t v268 = 0;
    }
    else
    {
      uint64_t v268 = 1;
      unint64_t v267 = v450;
    }
    unint64_t v279 = v267;
    uint64_t v280 = v487;
    v225(v279, v268, 1, v487);
    swift_bridgeObjectRelease();
    uint64_t v281 = (uint64_t)v223;
    v282 = v446;
    sub_1DF1BD6A8(v281, (uint64_t)v446, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    v283 = *(unsigned int (**)(id *, uint64_t, uint64_t))(v221 + 48);
    if (v283(v282, 1, v280) == 1)
    {
      sub_1DE986B1C((uint64_t)v282, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
      uint64_t v284 = 0;
      uint64_t v285 = 0;
    }
    else
    {
      id v286 = objc_msgSend(*v282, sel_identifier);
      uint64_t v284 = sub_1DFDFDD20();
      uint64_t v285 = v287;

      sub_1DEA2CC98((uint64_t)v282, type metadata accessor for AudioFeedTrack);
    }
    id v288 = objc_msgSend(v222, sel_identifier);
    uint64_t v289 = sub_1DFDFDD20();
    uint64_t v291 = v290;

    if (v285)
    {
      uint64_t v292 = (uint64_t)v451;
      if (v284 == v289 && v285 == v291)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v293 = (uint64_t)v448;
      }
      else
      {
        char v298 = sub_1DFDFFF50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v293 = (uint64_t)v448;
        if ((v298 & 1) == 0) {
          goto LABEL_149;
        }
      }
      uint64_t v299 = v438;
      uint64_t v300 = v438 + *(int *)(v467 + 48);
      sub_1DF1BD6A8(v292, v438, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
      sub_1DF1BD6A8(v452, v300, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
      uint64_t v301 = v487;
      if (v283((id *)v299, 1, v487) == 1)
      {
        if (v283((id *)v300, 1, v301) == 1)
        {
          sub_1DE986B1C(v299, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
          uint64_t v264 = (uint64_t)v449;
LABEL_148:
          uint64_t v350 = sub_1DFDECF80();
          MEMORY[0x1F4188790](v350);
          uint64_t v413 = v452;
          v498 = (void *)sub_1DF7CB1E0((uint64_t (*)(char *))sub_1DF1BD728, (uint64_t)(&v415 - 4), v351);
          sub_1DF0EB388();
          sub_1DFDECFB0();
          swift_bridgeObjectRelease();
          goto LABEL_149;
        }
        goto LABEL_111;
      }
      uint64_t v306 = v426;
      sub_1DF1BD6A8(v299, v426, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
      if (v283((id *)v300, 1, v301) == 1)
      {
        sub_1DEA2CC98(v306, type metadata accessor for AudioFeedTrack);
LABEL_111:
        sub_1DEA2CC98(v299, (uint64_t (*)(void))sub_1DF0EB2BC);
        uint64_t v264 = (uint64_t)v449;
        goto LABEL_149;
      }
      v346 = (id *)v306;
      uint64_t v347 = v299;
      v348 = v453;
      sub_1DEAB8E08(v300, (uint64_t)v453, type metadata accessor for AudioFeedTrack);
      char v349 = _s7NewsUI214AudioFeedTrackV2eeoiySbAC_ACtFZ_0(v346, v348);
      sub_1DEA2CC98((uint64_t)v348, type metadata accessor for AudioFeedTrack);
      sub_1DEA2CC98((uint64_t)v346, type metadata accessor for AudioFeedTrack);
      sub_1DE986B1C(v347, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
      uint64_t v264 = (uint64_t)v449;
      if (v349) {
        goto LABEL_148;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v293 = (uint64_t)v448;
      uint64_t v292 = (uint64_t)v451;
    }
LABEL_149:
    uint64_t v352 = v445;
    sub_1DF1BD6A8(v264, v445, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
    sub_1DEF36A18();
    uint64_t v354 = v353;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v353 - 8) + 48))(v352, 1, v353) == 1)
    {
      sub_1DE986B1C(v352, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
      sub_1DEF36B58();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v355 - 8) + 56))(v293, 1, 1, v355);
    }
    else
    {
      uint64_t v356 = *(void *)(v352 + *(int *)(v354 + 48));
      sub_1DEF36B58();
      uint64_t v358 = v357;
      uint64_t v359 = *(int *)(v357 + 48);
      sub_1DEAB8E08(v352, v293, type metadata accessor for AudioFeedTrack);
      *(void *)(v293 + v359) = v356;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v358 - 8) + 56))(v293, 0, 1, v358);
    }
    uint64_t v360 = v450;
    sub_1DF9A3F40(v222, v450, v293);
    swift_unknownObjectRelease();
    sub_1DE986B1C(v293, &qword_1EAC29400, (uint64_t (*)(uint64_t))sub_1DEF36B58);
    sub_1DE986B1C(v360, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    sub_1DE986B1C(v264, &qword_1EBAF6050, (uint64_t (*)(uint64_t))sub_1DEF36A18);
    sub_1DE986B1C(v292, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
    uint64_t v138 = v452;
    goto LABEL_153;
  }
  sub_1DFDF54F0();
  char v226 = sub_1DFDF5220();
  swift_release();
  if (v226 & 1) != 0 || (sub_1DFDF5400(), char v227 = sub_1DFDF5220(), swift_release(), (v227))
  {
    sub_1DFDFB470();
    id v228 = v498;
    uint64_t v229 = &selRef_handleCloseActionOnPresenter_;
    id v230 = objc_msgSend(v498, sel_articleID);
    if (!v230)
    {
      sub_1DFDFDD20();
      id v230 = (id)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
    }
    sub_1DFDE95B0();
    uint64_t v231 = (uint64_t)v440;
    sub_1DFDECF80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v221 + 48))(v231, 1, v487) == 1)
    {
      sub_1DE986B1C(v231, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
LABEL_115:
      uint64_t v308 = (void *)v220[30];
      id v309 = [v228 v229[262]];
      if (!v309)
      {
        sub_1DFDFDD20();
        id v309 = (id)sub_1DFDFDCE0();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v308, sel_removeArticleID_, v309);
      goto LABEL_118;
    }
    uint64_t v269 = v220;
    v270 = v434;
    sub_1DEAB8E08(v231, (uint64_t)v434, type metadata accessor for AudioFeedTrack);
    id v271 = objc_msgSend(*v270, sel_identifier);
    uint64_t v272 = sub_1DFDFDD20();
    uint64_t v274 = v273;

    id v275 = objc_msgSend(v228, sel_identifier);
    uint64_t v276 = sub_1DFDFDD20();
    uint64_t v278 = v277;

    if (v272 == v276 && v274 == v278)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v229 = &selRef_handleCloseActionOnPresenter_;
    }
    else
    {
      char v307 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v229 = &selRef_handleCloseActionOnPresenter_;
      if ((v307 & 1) == 0)
      {
LABEL_114:
        sub_1DEA2CC98((uint64_t)v270, type metadata accessor for AudioFeedTrack);
        uint64_t v220 = v269;
        goto LABEL_115;
      }
    }
    sub_1DFDE9610();
    goto LABEL_114;
  }
  sub_1DFDF5460();
  char v303 = sub_1DFDF5220();
  swift_release();
  if (v303)
  {
    sub_1DFDFB470();
    id v304 = v498;
    sub_1DFDE95B0();
    uint64_t v305 = (uint64_t)v418;
    sub_1DFDECF80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v221 + 48))(v305, 1, v487) == 1)
    {
      sub_1DE986B1C(v305, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
LABEL_176:
      id v411 = objc_msgSend(v304, sel_articleID);
      sub_1DFDFDD20();

      sub_1DFC1B298();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v383 = v415;
    sub_1DEAB8E08(v305, (uint64_t)v415, type metadata accessor for AudioFeedTrack);
    id v384 = objc_msgSend(*v383, sel_identifier);
    uint64_t v385 = sub_1DFDFDD20();
    uint64_t v387 = v386;

    id v388 = objc_msgSend(v304, sel_identifier);
    uint64_t v389 = sub_1DFDFDD20();
    uint64_t v391 = v390;

    if (v385 == v389 && v387 == v391)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v410 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v410 & 1) == 0)
      {
LABEL_175:
        sub_1DEA2CC98((uint64_t)v383, type metadata accessor for AudioFeedTrack);
        goto LABEL_176;
      }
    }
    sub_1DFDE9610();
    goto LABEL_175;
  }
  sub_1DFDF5470();
  char v341 = sub_1DFDF5220();
  swift_release();
  if (v341)
  {
    sub_1DFDFB470();
    id v342 = v498;
    id v343 = objc_msgSend(v498, sel_articleID);
    id v230 = v343;
    id v309 = v343;
    if (!v343)
    {
      sub_1DFDFDD20();
      id v309 = (id)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      sub_1DFDFDD20();
      id v230 = (id)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
    }
    id v344 = v343;
    sub_1DFDE95B0();
    uint64_t v345 = (uint64_t)v417;
    sub_1DFDECF80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v221 + 48))(v345, 1, v487) == 1)
    {
      sub_1DE986B1C(v345, (unint64_t *)&qword_1EBAAAA00, type metadata accessor for AudioFeedTrack);
LABEL_180:
      objc_msgSend((id)v220[30], sel_removeArticleID_, v309);
LABEL_118:

      objc_msgSend((id)v220[29], sel_markArticle_withRemovedFromAudio_, v230, 1);
      swift_unknownObjectRelease();

      return;
    }
    v400 = v220;
    v401 = v416;
    sub_1DEAB8E08(v345, (uint64_t)v416, type metadata accessor for AudioFeedTrack);
    id v402 = objc_msgSend(*v401, sel_identifier);
    uint64_t v403 = sub_1DFDFDD20();
    uint64_t v405 = v404;

    id v406 = objc_msgSend(v342, sel_identifier);
    uint64_t v407 = sub_1DFDFDD20();
    uint64_t v409 = v408;

    if (v403 == v407 && v405 == v409)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v412 = sub_1DFDFFF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v412 & 1) == 0)
      {
LABEL_179:
        sub_1DEA2CC98((uint64_t)v416, type metadata accessor for AudioFeedTrack);
        uint64_t v220 = v400;
        goto LABEL_180;
      }
    }
    sub_1DFDE9610();
    goto LABEL_179;
  }
}

uint64_t sub_1DF1BD4A4()
{
  sub_1DFDF5710();
  sub_1DFDF54F0();
  char v0 = sub_1DFDF5220();
  swift_release();
  if ((v0 & 1) == 0)
  {
    sub_1DFDF5400();
    char v1 = sub_1DFDF5220();
    swift_release();
    if ((v1 & 1) == 0)
    {
      sub_1DFDF5540();
      char v2 = sub_1DFDF5220();
      swift_release();
      if ((v2 & 1) == 0)
      {
        sub_1DFDF5530();
        char v3 = sub_1DFDF5220();
        swift_release();
        if ((v3 & 1) == 0) {
          return 1;
        }
      }
    }
  }
  return sub_1DF1B8DCC();
}

void sub_1DF1BD58C()
{
  if (!qword_1EBAA74B8)
  {
    sub_1DF1BD748(255, (unint64_t *)&unk_1EBABA7D0, type metadata accessor for AudioFeedTrack, MEMORY[0x1E4FBB320]);
    sub_1DF1BD620();
    unint64_t v0 = sub_1DFDECF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA74B8);
    }
  }
}

unint64_t sub_1DF1BD620()
{
  unint64_t result = qword_1EBABA7E8;
  if (!qword_1EBABA7E8)
  {
    sub_1DF1BD748(255, (unint64_t *)&unk_1EBABA7D0, type metadata accessor for AudioFeedTrack, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABA7E8);
  }
  return result;
}

uint64_t sub_1DF1BD6A8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1DF1BD748(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DF1BD728(id *a1)
{
  return sub_1DF1B9214(a1, *(void *)(v1 + 16)) & 1;
}

void sub_1DF1BD748(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DF1BD7AC(id *a1)
{
  return sub_1DF1BD728(a1) & 1;
}

uint64_t sub_1DF1BD7C8()
{
  sub_1DE936F1C(0, (unint64_t *)&unk_1EBAA85C0, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1DE936F1C(0, (unint64_t *)&qword_1EBAA85D0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1DFDF5190();
  qword_1EACDF9F0 = result;
  return result;
}

ValueMetadata *type metadata accessor for FollowingSubscriptionChangeIgnoreModifier()
{
  return &type metadata for FollowingSubscriptionChangeIgnoreModifier;
}

uint64_t sub_1DF1BD908(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v70 = a3;
  uint64_t v71 = a2;
  sub_1DEC38EE0(0, &qword_1EBAEBF50, MEMORY[0x1E4FACA00]);
  uint64_t v69 = v5;
  uint64_t v68 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v67 = (char *)&v62 - v6;
  sub_1DEC38E88();
  MEMORY[0x1F4188790](v7 - 8);
  long long v92 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0B564(0);
  uint64_t v91 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1DFDFBB00();
  uint64_t v12 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v90 = (uint64_t *)((char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = sub_1DFDFB530();
  uint64_t v14 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v88 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBEE754(0);
  MEMORY[0x1F4188790](v16 - 8);
  long long v94 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEC38EE0(0, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
  uint64_t v98 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v93 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v62 - v22;
  sub_1DEC38EE0(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v65 = v27;
  uint64_t v28 = *(void (**)(void))(v27 + 16);
  uint64_t v95 = v26;
  uint64_t v66 = a1;
  uint64_t v99 = v29;
  uint64_t v64 = v27 + 16;
  uint64_t v63 = v28;
  v28();
  uint64_t v30 = *(void *)(*v3 + 16);
  if (v30)
  {
    uint64_t v31 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    uint64_t v84 = (void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    uint64_t v83 = (void (**)(char *, char *, uint64_t))(v19 + 16);
    uint64_t v86 = v3;
    uint64_t v82 = v3 + 1;
    unsigned int v81 = *MEMORY[0x1E4F81010];
    uint64_t v80 = (void (**)(void *, void, uint64_t))(v12 + 104);
    uint64_t v79 = (void (**)(void *, uint64_t))(v12 + 8);
    uint64_t v78 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v77 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v73 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v72 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v76 = (void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v62 = swift_bridgeObjectRetain();
    uint64_t v32 = (unsigned __int8 *)(v62 + 40);
    uint64_t v33 = (uint64_t)v94;
    uint64_t v34 = v93;
    uint64_t v75 = v23;
    uint64_t v85 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    uint64_t v35 = v98;
    do
    {
      uint64_t v37 = *v32;
      if (v37 <= 0x3F)
      {
        uint64_t v38 = *((void *)v32 - 1);
        j__swift_retain(v38, *v32);
        sub_1DFDF5AF0();
        if ((*v31)(v33, 1, v35) == 1)
        {
          sub_1DEE33634(v33, (uint64_t (*)(void))sub_1DEBEE754);
          uint64_t v36 = v38;
        }
        else
        {
          (*v84)(v23, v33, v35);
          (*v83)(v34, v23, v35);
          uint64_t v39 = v86[4];
          uint64_t v97 = v86[5];
          __swift_project_boxed_opaque_existential_1(v82, v39);
          uint64_t v40 = v90;
          void *v90 = *(void *)(v38 + 16);
          uint64_t v41 = v87;
          (*v80)(v40, v81, v87);
          swift_unknownObjectRetain();
          uint64_t v42 = v88;
          sub_1DFDFD2A0();
          uint64_t v43 = v40;
          uint64_t v34 = v93;
          (*v79)(v43, v41);
          char v44 = sub_1DFDFB510();
          (*v78)(v42, v89);
          type metadata accessor for FollowingTagModel();
          uint64_t inited = swift_initStackObject();
          *(unsigned char *)(inited + 16) = 1;
          *(void *)(inited + 24) = v38;
          *(unsigned char *)(inited + 32) = v44 & 1;
          v101[0] = 0;
          v101[1] = 0xE000000000000000;
          LOBYTE(v100) = 1;
          unsigned int v96 = v37;
          j__swift_retain(v38, v37);
          sub_1DFDFFB10();
          sub_1DFDFDE90();
          uint64_t v97 = v38;
          id v46 = objc_msgSend(*(id *)(v38 + 16), sel_identifier, v62);
          sub_1DFDFDD20();

          sub_1DFDFDE90();
          swift_bridgeObjectRelease();
          uint64_t v47 = (uint64_t)v92;
          sub_1DFDF1600();
          swift_bridgeObjectRelease();
          uint64_t v48 = v91;
          if ((*v77)(v47, 1, v91) == 1)
          {
            sub_1DEE33634(v47, (uint64_t (*)(void))sub_1DEC38E88);
          }
          else
          {
            uint64_t v49 = v74;
            (*v73)(v74, v47, v48);
            sub_1DFDF1570();
            (*v72)(v49, v48);
          }
          uint64_t v23 = v75;
          sub_1DEB0B5AC();
          sub_1DFDFE6A0();
          sub_1DFDFE720();
          if (v101[0] == v100)
          {
            sub_1DFDF14E0();
            sub_1DFDF59C0();
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1DFDF59D0();
            swift_release();
          }
          uint64_t v37 = v96;
          uint64_t v50 = *v76;
          (*v76)(v34, v35);
          v50(v23, v35);
          uint64_t v33 = (uint64_t)v94;
          uint64_t v31 = v85;
          uint64_t v36 = v97;
        }
        j__swift_release(v36, v37);
      }
      v32 += 16;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
  }
  type metadata accessor for FollowingModel();
  sub_1DEC38FC4();
  sub_1DEADC298();
  sub_1DEAE2210();
  uint64_t v51 = v95;
  sub_1DFDF2420();
  __swift_project_boxed_opaque_existential_1(v101, v101[3]);
  if (sub_1DFDF1990())
  {
    uint64_t v52 = (unsigned int *)MEMORY[0x1E4FAC9F8];
    uint64_t v53 = v67;
  }
  else
  {
    sub_1DEC39018();
    uint64_t v53 = v67;
    uint64_t v55 = (uint64_t)&v67[*(int *)(v54 + 48)];
    uint64_t v56 = &v67[*(int *)(v54 + 64)];
    ((void (*)(char *, char *, uint64_t))v63)(v67, v51, v99);
    sub_1DE94F204((uint64_t)v101, v55);
    uint64_t v57 = *MEMORY[0x1E4FAC298];
    uint64_t v58 = sub_1DFDF1930();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 104))(v56, v57, v58);
    uint64_t v52 = (unsigned int *)MEMORY[0x1E4FAC9F0];
  }
  uint64_t v59 = v68;
  uint64_t v60 = v69;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v53, *v52, v69);
  v71(v53);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v53, v60);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v51, v99);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
}

uint64_t sub_1DF1BE468(uint64_t a1)
{
  unint64_t v2 = sub_1DECE39EC();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DF1BE4A8()
{
  unint64_t result = qword_1EAC29408;
  if (!qword_1EAC29408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29408);
  }
  return result;
}

void *sub_1DF1BE4FC(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    uint64_t v7 = (int *)type metadata accessor for SearchResults();
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDEA1B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = v7[7];
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v7[8];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_1DFDEB4F0();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      sub_1DEA9E174(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140]);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *(void *)((char *)v4 + v7[9]) = *(void *)((char *)a2 + v7[9]);
    *(void *)((char *)v4 + v7[10]) = *(void *)((char *)a2 + v7[10]);
    uint64_t v25 = a3[5];
    uint64_t v26 = (char *)v4 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_1DFDE7600();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v60 = a2;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1DEA9E174(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v31 = type metadata accessor for SearchFeedConfig();
    *(void *)&v26[*(int *)(v31 + 20)] = *(void *)&v27[*(int *)(v31 + 20)];
    uint64_t v32 = *(int *)(type metadata accessor for SearchFeedContentConfig() + 20);
    uint64_t v33 = &v26[v32];
    uint64_t v34 = &v27[v32];
    sub_1DEAC0BE4(0);
    uint64_t v36 = v35;
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    v59(v33, v34, v36);
    uint64_t v37 = type metadata accessor for ArticlesSearchFeedGroupKnobs();
    *(void *)&v33[*(int *)(v37 + 20)] = *(void *)&v34[*(int *)(v37 + 20)];
    *(void *)&v33[*(int *)(v37 + 24)] = *(void *)&v34[*(int *)(v37 + 24)];
    uint64_t v38 = (int *)type metadata accessor for SearchFeedGroupKnobs();
    uint64_t v39 = v38[5];
    uint64_t v40 = &v33[v39];
    uint64_t v41 = &v34[v39];
    swift_retain();
    swift_retain();
    v59(v40, v41, v36);
    uint64_t v42 = type metadata accessor for ChannelsSearchFeedGroupKnobs();
    *(void *)&v40[*(int *)(v42 + 20)] = *(void *)&v41[*(int *)(v42 + 20)];
    uint64_t v43 = v38[6];
    char v44 = &v33[v43];
    uint64_t v45 = &v34[v43];
    swift_retain();
    v59(v44, v45, v36);
    uint64_t v46 = type metadata accessor for TopicsSearchFeedGroupKnobs();
    *(void *)&v44[*(int *)(v46 + 20)] = *(void *)&v45[*(int *)(v46 + 20)];
    uint64_t v47 = v38[7];
    uint64_t v48 = &v33[v47];
    uint64_t v49 = &v34[v47];
    swift_retain();
    v59(v48, v49, v36);
    uint64_t v50 = type metadata accessor for SportsSearchFeedGroupKnobs();
    *(void *)&v48[*(int *)(v50 + 20)] = *(void *)&v49[*(int *)(v50 + 20)];
    uint64_t v51 = type metadata accessor for SearchFeedKnobsConfig();
    *(void *)&v33[*(int *)(v51 + 20)] = *(void *)&v34[*(int *)(v51 + 20)];
    uint64_t v52 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)v60 + a3[6]);
    uint64_t v53 = (char *)v4 + v52;
    uint64_t v54 = (char *)v60 + v52;
    uint64_t v55 = sub_1DFDF8150();
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
    swift_retain();
    swift_unknownObjectRetain();
    v56(v53, v54, v55);
    uint64_t v57 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(void *)((char *)v60 + a3[8]);
    *(void *)((char *)v4 + v57) = *(void *)((char *)v60 + v57);
  }
  return v4;
}

uint64_t sub_1DF1BEA28(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for SearchResults();
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  uint64_t v6 = sub_1DFDEA1B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(v4 + 32);
  uint64_t v8 = sub_1DFDEB4F0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 20);
  uint64_t v11 = sub_1DFDE7600();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  type metadata accessor for SearchFeedConfig();
  swift_bridgeObjectRelease();
  uint64_t v13 = v10 + *(int *)(type metadata accessor for SearchFeedContentConfig() + 20);
  sub_1DEAC0BE4(0);
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v16(v13, v14);
  type metadata accessor for ArticlesSearchFeedGroupKnobs();
  swift_release();
  swift_release();
  uint64_t v17 = (int *)type metadata accessor for SearchFeedGroupKnobs();
  v16(v13 + v17[5], v15);
  type metadata accessor for ChannelsSearchFeedGroupKnobs();
  swift_release();
  v16(v13 + v17[6], v15);
  type metadata accessor for TopicsSearchFeedGroupKnobs();
  swift_release();
  v16(v13 + v17[7], v15);
  type metadata accessor for SportsSearchFeedGroupKnobs();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v18 = a1 + *(int *)(a2 + 28);
  uint64_t v19 = sub_1DFDF8150();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
  return v20(v18, v19);
}

void *sub_1DF1BED54(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  uint64_t v6 = (int *)type metadata accessor for SearchResults();
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDEA1B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v6[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v60 = a2;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1DFDEB4F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    sub_1DEA9E174(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140]);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)v60 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)v60 + v6[10]);
  uint64_t v23 = a3[5];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)v60 + v23;
  uint64_t v26 = sub_1DFDE7600();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v58 = a1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1DEA9E174(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = type metadata accessor for SearchFeedConfig();
  *(void *)&v24[*(int *)(v29 + 20)] = *(void *)&v25[*(int *)(v29 + 20)];
  uint64_t v30 = *(int *)(type metadata accessor for SearchFeedContentConfig() + 20);
  uint64_t v31 = &v24[v30];
  uint64_t v32 = &v25[v30];
  sub_1DEAC0BE4(0);
  uint64_t v34 = v33;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
  swift_bridgeObjectRetain();
  v35(v31, v32, v34);
  uint64_t v36 = type metadata accessor for ArticlesSearchFeedGroupKnobs();
  *(void *)&v31[*(int *)(v36 + 20)] = *(void *)&v32[*(int *)(v36 + 20)];
  *(void *)&v31[*(int *)(v36 + 24)] = *(void *)&v32[*(int *)(v36 + 24)];
  uint64_t v37 = (int *)type metadata accessor for SearchFeedGroupKnobs();
  uint64_t v38 = v37[5];
  uint64_t v39 = &v31[v38];
  uint64_t v40 = &v32[v38];
  swift_retain();
  swift_retain();
  v35(v39, v40, v34);
  uint64_t v41 = type metadata accessor for ChannelsSearchFeedGroupKnobs();
  *(void *)&v39[*(int *)(v41 + 20)] = *(void *)&v40[*(int *)(v41 + 20)];
  uint64_t v42 = v37[6];
  uint64_t v43 = &v31[v42];
  char v44 = &v32[v42];
  swift_retain();
  v35(v43, v44, v34);
  uint64_t v45 = type metadata accessor for TopicsSearchFeedGroupKnobs();
  *(void *)&v43[*(int *)(v45 + 20)] = *(void *)&v44[*(int *)(v45 + 20)];
  uint64_t v46 = v37[7];
  uint64_t v47 = &v31[v46];
  uint64_t v48 = &v32[v46];
  swift_retain();
  v35(v47, v48, v34);
  uint64_t v49 = type metadata accessor for SportsSearchFeedGroupKnobs();
  *(void *)&v47[*(int *)(v49 + 20)] = *(void *)&v48[*(int *)(v49 + 20)];
  uint64_t v50 = type metadata accessor for SearchFeedKnobsConfig();
  *(void *)&v31[*(int *)(v50 + 20)] = *(void *)&v32[*(int *)(v50 + 20)];
  uint64_t v51 = a3[7];
  *(void *)((char *)v58 + a3[6]) = *(void *)((char *)v60 + a3[6]);
  uint64_t v52 = (char *)v58 + v51;
  uint64_t v53 = (char *)v60 + v51;
  uint64_t v54 = sub_1DFDF8150();
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
  swift_retain();
  swift_unknownObjectRetain();
  v55(v52, v53, v54);
  uint64_t v56 = a3[9];
  *(void *)((char *)v58 + a3[8]) = *(void *)((char *)v60 + a3[8]);
  *(void *)((char *)v58 + v56) = *(void *)((char *)v60 + v56);
  return v58;
}

void *sub_1DF1BF234(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for SearchResults();
  uint64_t v6 = v5[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDEA1B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = v5[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = v5[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1DFDEB4F0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    sub_1DEA9E174(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  *(void *)((char *)a1 + v5[9]) = *(void *)((char *)a2 + v5[9]);
  *(void *)((char *)a1 + v5[10]) = *(void *)((char *)a2 + v5[10]);
  uint64_t v22 = a3[5];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1DFDE7600();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    sub_1DEA9E174(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_13:
  uint64_t v31 = type metadata accessor for SearchFeedConfig();
  *(void *)&v23[*(int *)(v31 + 20)] = *(void *)&v24[*(int *)(v31 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = *(int *)(type metadata accessor for SearchFeedContentConfig() + 20);
  uint64_t v33 = &v23[v32];
  uint64_t v34 = &v24[v32];
  sub_1DEAC0BE4(0);
  uint64_t v36 = v35;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24);
  v37(v33, v34, v35);
  uint64_t v38 = type metadata accessor for ArticlesSearchFeedGroupKnobs();
  *(void *)&v33[*(int *)(v38 + 20)] = *(void *)&v34[*(int *)(v38 + 20)];
  swift_retain();
  swift_release();
  *(void *)&v33[*(int *)(v38 + 24)] = *(void *)&v34[*(int *)(v38 + 24)];
  swift_retain();
  swift_release();
  uint64_t v39 = (int *)type metadata accessor for SearchFeedGroupKnobs();
  uint64_t v40 = v39[5];
  uint64_t v41 = &v33[v40];
  uint64_t v42 = &v34[v40];
  v37(&v33[v40], &v34[v40], v36);
  uint64_t v43 = type metadata accessor for ChannelsSearchFeedGroupKnobs();
  *(void *)&v41[*(int *)(v43 + 20)] = *(void *)&v42[*(int *)(v43 + 20)];
  swift_retain();
  swift_release();
  uint64_t v44 = v39[6];
  uint64_t v45 = &v33[v44];
  uint64_t v46 = &v34[v44];
  v37(&v33[v44], &v34[v44], v36);
  uint64_t v47 = type metadata accessor for TopicsSearchFeedGroupKnobs();
  *(void *)&v45[*(int *)(v47 + 20)] = *(void *)&v46[*(int *)(v47 + 20)];
  swift_retain();
  swift_release();
  uint64_t v48 = v39[7];
  uint64_t v49 = &v33[v48];
  uint64_t v50 = &v34[v48];
  v37(&v33[v48], &v34[v48], v36);
  uint64_t v51 = type metadata accessor for SportsSearchFeedGroupKnobs();
  *(void *)&v49[*(int *)(v51 + 20)] = *(void *)&v50[*(int *)(v51 + 20)];
  swift_retain();
  swift_release();
  uint64_t v52 = type metadata accessor for SearchFeedKnobsConfig();
  *(void *)&v33[*(int *)(v52 + 20)] = *(void *)&v34[*(int *)(v52 + 20)];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v53 = a3[7];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = sub_1DFDF8150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 24))(v54, v55, v56);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_1DF1BF828(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = (int *)type metadata accessor for SearchResults();
  uint64_t v7 = v6[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDEA1B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
  uint64_t v11 = v6[8];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_1DFDEB4F0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1DEA9E174(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  *(void *)(a1 + v6[10]) = *(void *)(a2 + v6[10]);
  uint64_t v17 = a3[5];
  uint64_t v18 = (char *)(a1 + v17);
  int v19 = (char *)(a2 + v17);
  uint64_t v20 = sub_1DFDE7600();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v51 = a3;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1DEA9E174(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v23 = type metadata accessor for SearchFeedConfig();
  *(void *)&v18[*(int *)(v23 + 20)] = *(void *)&v19[*(int *)(v23 + 20)];
  uint64_t v24 = *(int *)(type metadata accessor for SearchFeedContentConfig() + 20);
  uint64_t v25 = &v18[v24];
  uint64_t v26 = &v19[v24];
  sub_1DEAC0BE4(0);
  uint64_t v28 = v27;
  int v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32);
  v29(v25, v26, v27);
  uint64_t v30 = type metadata accessor for ArticlesSearchFeedGroupKnobs();
  *(void *)&v25[*(int *)(v30 + 20)] = *(void *)&v26[*(int *)(v30 + 20)];
  *(void *)&v25[*(int *)(v30 + 24)] = *(void *)&v26[*(int *)(v30 + 24)];
  uint64_t v31 = (int *)type metadata accessor for SearchFeedGroupKnobs();
  uint64_t v32 = v31[5];
  uint64_t v33 = &v25[v32];
  uint64_t v34 = &v26[v32];
  v29(&v25[v32], &v26[v32], v28);
  uint64_t v35 = type metadata accessor for ChannelsSearchFeedGroupKnobs();
  *(void *)&v33[*(int *)(v35 + 20)] = *(void *)&v34[*(int *)(v35 + 20)];
  uint64_t v36 = v31[6];
  uint64_t v37 = &v25[v36];
  uint64_t v38 = &v26[v36];
  v29(&v25[v36], &v26[v36], v28);
  uint64_t v39 = type metadata accessor for TopicsSearchFeedGroupKnobs();
  *(void *)&v37[*(int *)(v39 + 20)] = *(void *)&v38[*(int *)(v39 + 20)];
  uint64_t v40 = v31[7];
  uint64_t v41 = &v25[v40];
  uint64_t v42 = &v26[v40];
  v29(&v25[v40], &v26[v40], v28);
  uint64_t v43 = type metadata accessor for SportsSearchFeedGroupKnobs();
  *(void *)&v41[*(int *)(v43 + 20)] = *(void *)&v42[*(int *)(v43 + 20)];
  uint64_t v44 = type metadata accessor for SearchFeedKnobsConfig();
  *(void *)&v25[*(int *)(v44 + 20)] = *(void *)&v26[*(int *)(v44 + 20)];
  uint64_t v45 = v51[7];
  *(void *)(a1 + v51[6]) = *(void *)(a2 + v51[6]);
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = sub_1DFDF8150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
  uint64_t v49 = v51[9];
  *(void *)(a1 + v51[8]) = *(void *)(a2 + v51[8]);
  *(void *)(a1 + v49) = *(void *)(a2 + v49);
  return a1;
}

void *sub_1DF1BFCA0(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for SearchResults();
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDEA1B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v6[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1DFDEB4F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_1DEA9E174(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_7:
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  uint64_t v25 = a3[5];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_1DFDE7600();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    sub_1DEA9E174(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_13:
  uint64_t v34 = type metadata accessor for SearchFeedConfig();
  *(void *)&v26[*(int *)(v34 + 20)] = *(void *)&v27[*(int *)(v34 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(type metadata accessor for SearchFeedContentConfig() + 20);
  uint64_t v36 = &v26[v35];
  uint64_t v37 = &v27[v35];
  sub_1DEAC0BE4(0);
  uint64_t v39 = v38;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40);
  v40(v36, v37, v38);
  uint64_t v41 = type metadata accessor for ArticlesSearchFeedGroupKnobs();
  *(void *)&v36[*(int *)(v41 + 20)] = *(void *)&v37[*(int *)(v41 + 20)];
  swift_release();
  *(void *)&v36[*(int *)(v41 + 24)] = *(void *)&v37[*(int *)(v41 + 24)];
  swift_release();
  uint64_t v42 = (int *)type metadata accessor for SearchFeedGroupKnobs();
  uint64_t v43 = v42[5];
  uint64_t v44 = &v36[v43];
  uint64_t v45 = &v37[v43];
  v40(&v36[v43], &v37[v43], v39);
  uint64_t v46 = type metadata accessor for ChannelsSearchFeedGroupKnobs();
  *(void *)&v44[*(int *)(v46 + 20)] = *(void *)&v45[*(int *)(v46 + 20)];
  swift_release();
  uint64_t v47 = v42[6];
  uint64_t v48 = &v36[v47];
  uint64_t v49 = &v37[v47];
  v40(&v36[v47], &v37[v47], v39);
  uint64_t v50 = type metadata accessor for TopicsSearchFeedGroupKnobs();
  *(void *)&v48[*(int *)(v50 + 20)] = *(void *)&v49[*(int *)(v50 + 20)];
  swift_release();
  uint64_t v51 = v42[7];
  uint64_t v52 = &v36[v51];
  uint64_t v53 = &v37[v51];
  v40(&v36[v51], &v37[v51], v39);
  uint64_t v54 = type metadata accessor for SportsSearchFeedGroupKnobs();
  *(void *)&v52[*(int *)(v54 + 20)] = *(void *)&v53[*(int *)(v54 + 20)];
  swift_release();
  uint64_t v55 = type metadata accessor for SearchFeedKnobsConfig();
  *(void *)&v36[*(int *)(v55 + 20)] = *(void *)&v37[*(int *)(v55 + 20)];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_unknownObjectRelease();
  uint64_t v56 = a3[7];
  uint64_t v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)a2 + v56;
  uint64_t v59 = sub_1DFDF8150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 40))(v57, v58, v59);
  uint64_t v60 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v60) = *(void *)((char *)a2 + v60);
  return a1;
}

uint64_t sub_1DF1C0230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DF1C0244);
}

uint64_t sub_1DF1C0244(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SearchFeedServiceContext();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for SearchFeedContentConfig();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_1DFDF8150();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_1DF1C03C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DF1C03D8);
}

uint64_t sub_1DF1C03D8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for SearchFeedServiceContext();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for SearchFeedContentConfig();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6]) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_1DFDF8150();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[7];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t sub_1DF1C0558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = sub_1DFDF8150();
  uint64_t v5 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = v7;
  uint64_t v8 = type metadata accessor for SearchFeedContentConfig();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SearchFeedServiceContext();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DF1C0B08(v2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SearchFeedServiceContext);
  sub_1DF1C0B08(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchFeedContentConfig);
  uint64_t v14 = (int *)type metadata accessor for SearchFeedServiceConfig();
  uint64_t v15 = *(void *)(v2 + v14[6]);
  uint64_t v16 = v7;
  uint64_t v17 = v24;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v16, *MEMORY[0x1E4F7F7F8], v24);
  uint64_t v23 = *(void *)(v2 + v14[9]);
  sub_1DF1C0B08((uint64_t)v13, a2, (uint64_t (*)(void))type metadata accessor for SearchFeedServiceContext);
  sub_1DF1C0B08((uint64_t)v10, a2 + v14[5], (uint64_t (*)(void))type metadata accessor for SearchFeedContentConfig);
  *(void *)(a2 + v14[6]) = v15;
  uint64_t v18 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2 + v14[7], v22, v17);
  double v19 = (double)(uint64_t)objc_msgSend((id)swift_unknownObjectRetain(), sel_autoRefreshMinimumInterval);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v17);
  sub_1DF1C0B70((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchFeedContentConfig);
  uint64_t result = sub_1DF1C0B70((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SearchFeedServiceContext);
  *(double *)(a2 + v14[8]) = v19;
  *(void *)(a2 + v14[9]) = v23;
  return result;
}

uint64_t sub_1DF1C0814@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF1C0B08(v1, a1, (uint64_t (*)(void))type metadata accessor for SearchFeedServiceContext);
}

uint64_t sub_1DF1C0848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DF1C0B08(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for SearchFeedContentConfig);
}

uint64_t sub_1DF1C0880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_1DFDF8150();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1DF1C08F0()
{
  uint64_t v1 = type metadata accessor for SearchFeedServiceContext();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DF1C0B08(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SearchFeedServiceContext);
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  sub_1DF1C0B70((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SearchResults);
  return v4;
}

double sub_1DF1C09AC(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_1DF1C09BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F803C8];
  uint64_t v3 = sub_1DFDF98E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1DF1C0A34@<X0>(uint64_t a1@<X8>)
{
  return sub_1DF1C0B08(v1, a1, (uint64_t (*)(void))type metadata accessor for SearchFeedServiceConfig);
}

uint64_t sub_1DF1C0A68()
{
  return sub_1DEAD4FB0(&qword_1EAC29418, (void (*)(uint64_t))type metadata accessor for SearchFeedContentConfig);
}

unint64_t sub_1DF1C0AB4()
{
  unint64_t result = qword_1EAC29420;
  if (!qword_1EAC29420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC29420);
  }
  return result;
}

uint64_t sub_1DF1C0B08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DF1C0B70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DF1C0BD0()
{
  unint64_t result = 0x656E696C64616568;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x676E69646E657274;
      break;
    case 3:
      unint64_t result = 0x64657461727563;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MagazineFeedPoolServiceContent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DF1C0D34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MagazineFeedPoolServiceContent()
{
  return &type metadata for MagazineFeedPoolServiceContent;
}

unint64_t sub_1DF1C0D70()
{
  unint64_t result = qword_1EBAC0630;
  if (!qword_1EBAC0630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC0630);
  }
  return result;
}

void sub_1DF1C0DC4()
{
  qword_1EACDF9F8 = MEMORY[0x1E4FBC860];
  byte_1EACDFA00 = 4;
}

BOOL sub_1DF1C0DE4(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if ((sub_1DF64D3D8(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }
  if (v2 != 4) {
    return v3 != 4 && (sub_1DF2A0610(v2, v3) & 1) != 0;
  }
  return v3 == 4;
}

uint64_t sub_1DF1C0E58(uint64_t *a1, uint64_t *a2)
{
  return sub_1DF64D054(*a1, *a2);
}

ValueMetadata *type metadata accessor for MagazineGridModelActionMenuGroup()
{
  return &type metadata for MagazineGridModelActionMenuGroup;
}

uint64_t initializeBufferWithCopyOfBuffer for MagazineGridModelActionMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MagazineGridModelActionMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for MagazineGridModelActionMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MagazineGridModelActionMenu(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MagazineGridModelActionMenu(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MagazineGridModelActionMenu()
{
  return &type metadata for MagazineGridModelActionMenu;
}

uint64_t sub_1DF1C0FD8()
{
  uint64_t v0 = sub_1DFDEC020();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDEC010();
  sub_1DEA6AC28(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20]);
  uint64_t v4 = sub_1DFDE8410();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, *MEMORY[0x1E4F4AA18], v4);
  sub_1DF1C1A48(&qword_1EBAF8C08, MEMORY[0x1E4F7CA68]);
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DFDEC0B0();
  sub_1DF1C1A48((unint64_t *)&unk_1EBAF8C10, MEMORY[0x1E4F7CAF8]);
  memset(v9, 0, sizeof(v9));
  sub_1DFDE83B0();
  return sub_1DE9E4C20((uint64_t)v9);
}

uint64_t sub_1DF1C1268(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  if (sub_1DFDEC1F0())
  {
    *(void *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain();
    sub_1DFDE87E0();
    return swift_release();
  }
  else
  {
    sub_1DE9B646C();
    uint64_t v4 = (void *)sub_1DFDFF610();
    sub_1DFDFEA60();
    sub_1DEA6AC28(0, (unint64_t *)&qword_1EBABB7A0, (void (*)(uint64_t))sub_1DEAB939C);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1DFE0B250;
    uint64_t v6 = sub_1DFDFFEE0();
    uint64_t v8 = v7;
    *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 64) = sub_1DEA08668();
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v8;
    sub_1DFDF00C0();

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DF1C1418()
{
  uint64_t v0 = sub_1DFDEBDE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDEBDD0();
  sub_1DEA6AC28(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20]);
  uint64_t v4 = sub_1DFDE8410();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, *MEMORY[0x1E4F4AA18], v4);
  sub_1DF1C1A48(&qword_1EAC29440, MEMORY[0x1E4F7C920]);
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DFDEBF20();
  sub_1DF1C1A48((unint64_t *)&unk_1EAC29448, MEMORY[0x1E4F7C9B8]);
  memset(v9, 0, sizeof(v9));
  sub_1DFDE83B0();
  return sub_1DE9E4C20((uint64_t)v9);
}

uint64_t sub_1DF1C16A8()
{
  uint64_t v0 = sub_1DFDEC0D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDEC0C0();
  sub_1DEA6AC28(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20]);
  uint64_t v4 = sub_1DFDE8410();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, *MEMORY[0x1E4F4AA18], v4);
  sub_1DF1C1A48(&qword_1EAC29430, MEMORY[0x1E4F7CB08]);
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DFDEC140();
  sub_1DF1C1A48(&qword_1EAC29438, MEMORY[0x1E4F7CBE8]);
  memset(v9, 0, sizeof(v9));
  sub_1DFDE83B0();
  return sub_1DE9E4C20((uint64_t)v9);
}

uint64_t sub_1DF1C1938(uint64_t a1)
{
  return sub_1DF1C1268(a1);
}

uint64_t sub_1DF1C1978(uint64_t a1)
{
  return sub_1DF1C1268(a1);
}

uint64_t sub_1DF1C19B8(uint64_t a1)
{
  return sub_1DF1C1268(a1);
}

uint64_t sub_1DF1C19F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DF1C1A30()
{
  return sub_1DF1C16A8();
}

uint64_t sub_1DF1C1A38()
{
  return sub_1DF1C1418();
}

uint64_t sub_1DF1C1A40()
{
  return sub_1DF1C0FD8();
}

uint64_t sub_1DF1C1A48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DF1C1A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v52 = a2;
  int v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DE9F1790(0, &qword_1EBAE9530, MEMORY[0x1E4F7F4C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v51 - v5;
  sub_1DEA9B060();
  uint64_t v61 = v7;
  uint64_t v63 = *(void (***)(char *, uint64_t))(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v60 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9F1790(0, &qword_1EBAAAF80, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, v3);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v51 - v10;
  sub_1DEA83724(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v51 - v15;
  sub_1DEA83724(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v51 - v20;
  uint64_t v22 = type metadata accessor for FeedPerformanceCommandContext();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v2 + *(int *)(v22 + 20), v18);
  uint64_t v23 = sub_1DECE8BEC();
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v47 = v52;
    uint64_t v48 = sub_1DFDF7670();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
  }
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v26 = v14 + 16;
  uint64_t v25 = v27;
  uint64_t v28 = *(unsigned __int8 *)(v26 + 64);
  uint64_t v51 = v23;
  uint64_t v29 = v23 + ((v28 + 32) & ~v28);
  uint64_t v58 = v63 + 1;
  uint64_t v59 = v6;
  uint64_t v63 = (void (**)(char *, uint64_t))(v26 - 8);
  uint64_t v30 = *(void *)(v26 + 56);
  uint64_t v56 = v27;
  uint64_t v57 = v26;
  uint64_t v55 = v30;
  v27(v16, v29, v13);
  while (1)
  {
    sub_1DFDF14D0();
    sub_1DEA78AC4(v64, (uint64_t)v11);
    swift_release();
    uint64_t v31 = type metadata accessor for TodayFeedGroup();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v11, 1, v31) == 1)
    {
      sub_1DF1C21B0((uint64_t)v11, &qword_1EBAAAF80, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup);
      (*v63)(v16, v13);
      goto LABEL_4;
    }
    uint64_t v32 = sub_1DEA851BC();
    uint64_t v34 = v33;
    sub_1DEC07958((uint64_t)v11);
    type metadata accessor for TodayFeedServiceConfig();
    sub_1DEA4B0D4((unint64_t *)&qword_1EBAAF9B0, (void (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig);
    uint64_t v35 = v60;
    sub_1DFDF7E90();
    uint64_t v36 = v61;
    uint64_t v37 = sub_1DFDF9DC0();
    (*v58)(v35, v36);
    if (!*(void *)(v37 + 16)) {
      goto LABEL_10;
    }
    unint64_t v38 = sub_1DEA6D930(v32, v34);
    if (v39)
    {
      unint64_t v40 = v38;
      uint64_t v53 = *(void *)(v37 + 56);
      uint64_t v41 = sub_1DFDF7670();
      uint64_t v42 = *(void *)(v41 - 8);
      uint64_t v54 = v34;
      uint64_t v43 = v42;
      uint64_t v44 = v53 + *(void *)(v42 + 72) * v40;
      uint64_t v45 = (uint64_t)v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v59, v44, v41);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v45, 0, 1, v41);
    }
    else
    {
LABEL_10:
      uint64_t v41 = sub_1DFDF7670();
      uint64_t v45 = (uint64_t)v59;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v59, 1, 1, v41);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v63)(v16, v13);
    sub_1DFDF7670();
    uint64_t v46 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v45, 1, v41) != 1) {
      break;
    }
    sub_1DF1C21B0(v45, &qword_1EBAE9530, MEMORY[0x1E4F7F4C8]);
    uint64_t v25 = v56;
    uint64_t v30 = v55;
LABEL_4:
    v29 += v30;
    if (!--v24) {
      goto LABEL_13;
    }
    v25(v16, v29, v13);
  }
  swift_bridgeObjectRelease();
  uint64_t v50 = v52;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v52, v45, v41);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v50, 0, 1, v41);
}

uint64_t sub_1DF1C21B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DE9F1790(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DF1C23E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDE6AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA83724(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for TodayFeedGroup();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_1DEC07958((uint64_t)v12);
      goto LABEL_7;
    }
    if (a1 == a2) {
      goto LABEL_100;
    }
    sub_1DEC07958((uint64_t)v12);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v66 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(v12, v13, v66);
        uint64_t v67 = (int *)type metadata accessor for NewspaperTodayFeedGroup();
        *(void *)((char *)v12 + v67[5]) = *(void *)((char *)v13 + v67[5]);
        *(void *)((char *)v12 + v67[6]) = *(void *)((char *)v13 + v67[6]);
        *(void *)((char *)v12 + v67[7]) = *(void *)((char *)v13 + v67[7]);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      case 2u:
        v869 = a3;
        uint64_t v68 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v12, v13, v68);
        uint64_t v69 = (int *)type metadata accessor for LocalNewsTodayFeedGroup();
        *(void *)((char *)v12 + v69[5]) = *(void *)((char *)v13 + v69[5]);
        *(void *)((char *)v12 + v69[6]) = *(void *)((char *)v13 + v69[6]);
        uint64_t v70 = v69[7];
        v832 = (char *)v12 + v70;
        v854 = (char *)v13 + v70;
        v864 = v69;
        uint64_t v71 = sub_1DFDF9EE0();
        uint64_t v72 = *(void *)(v71 - 8);
        v840 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        if (v840(v854, 1, v71))
        {
          sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA350, MEMORY[0x1E4F80520], MEMORY[0x1E4FBB718]);
          memcpy(v832, v854, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v832, v854, v71);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v832, 0, 1, v71);
        }
        a3 = v869;
        *(void *)((char *)v12 + v864[8]) = *(void *)((char *)v13 + v864[8]);
        uint64_t v98 = v864[9];
        uint64_t v99 = (char *)v12 + v98;
        uint64_t v100 = (char *)v13 + v98;
        *(void *)uint64_t v99 = *(void *)v100;
        v99[8] = v100[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
        uint64_t v74 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(v12, v13, v74);
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      case 8u:
        uint64_t v75 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(v12, v13, v75);
        uint64_t v76 = type metadata accessor for TopicTodayFeedGroup();
        *((unsigned char *)v12 + *(int *)(v76 + 20)) = *((unsigned char *)v13 + *(int *)(v76 + 20));
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      case 9u:
        type metadata accessor for MagazineFeedGroup();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1DEA530F0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v198 - 8) + 16))(v12, v13, v198);
            uint64_t v199 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
            uint64_t v200 = (char *)v12 + v199;
            uint64_t v201 = (char *)v13 + v199;
            uint64_t v202 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
            goto LABEL_132;
          case 2u:
          case 0xAu:
          case 0xBu:
            uint64_t v270 = sub_1DFDF7010();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v270 - 8) + 16))(v12, v13, v270);
            goto LABEL_132;
          case 3u:
            sub_1DEA52F58();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v203 - 8) + 16))(v12, v13, v203);
            uint64_t v204 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
            uint64_t v205 = (char *)v12 + v204;
            uint64_t v206 = (char *)v13 + v204;
            uint64_t v207 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 16))(v205, v206, v207);
            goto LABEL_132;
          case 4u:
            *uint64_t v12 = *v13;
            v12[1] = v13[1];
            _OWORD v12[2] = v13[2];
            void v12[3] = v13[3];
            int v208 = (void *)v13[4];
            v12[4] = v208;
            void v12[5] = v13[5];
            v12[6] = v13[6];
            v12[7] = v13[7];
            v12[8] = v13[8];
            v12[9] = v13[9];
            v875 = a3;
            uint64_t v209 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
            uint64_t v210 = v209[10];
            v794 = (char *)v13 + v210;
            __dstuint64_t i = (char *)v12 + v210;
            uint64_t v211 = sub_1DFDF8C20();
            v765 = *(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v212 = v208;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v765(__dsti, v794, v211);
            *(void *)((char *)v12 + v209[11]) = *(void *)((char *)v13 + v209[11]);
            uint64_t v213 = v209[12];
            a3 = v875;
            *(void *)((char *)v12 + v213) = *(void *)((char *)v13 + v213);
            goto LABEL_132;
          case 5u:
            v876 = a3;
            *uint64_t v12 = *v13;
            v12[1] = v13[1];
            _OWORD v12[2] = v13[2];
            void v12[3] = v13[3];
            v795 = (void *)v13[4];
            v12[4] = v795;
            v846 = (void *)v13[5];
            void v12[5] = v846;
            v12[6] = v13[6];
            v12[7] = v13[7];
            v12[8] = v13[8];
            v12[9] = v13[9];
            uint64_t v214 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
            uint64_t v215 = v214[10];
            v742 = (char *)v13 + v215;
            v766 = (char *)v12 + v215;
            uint64_t v216 = sub_1DFDF8C20();
            v725 = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v217 = v795;
            id v218 = v846;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v725(v766, v742, v216);
            v725((char *)v12 + v214[11], (char *)v13 + v214[11], v216);
            v858 = v214;
            *(void *)((char *)v12 + v214[12]) = *(void *)((char *)v13 + v214[12]);
            uint64_t v219 = v214[13];
            uint64_t v220 = (char *)v12 + v219;
            uint64_t v221 = (char *)v13 + v219;
            sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 16))(v220, v221, v222);
            uint64_t v223 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
            *(void *)&v220[*(int *)(v223 + 20)] = *(void *)&v221[*(int *)(v223 + 20)];
            uint64_t v224 = *(int *)(v223 + 24);
            v847 = &v220[v224];
            uint64_t v225 = &v221[v224];
            sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
            uint64_t v227 = v226;
            id v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 16);
            swift_retain();
            v228(v847, v225, v227);
            *(void *)((char *)v12 + v858[14]) = *(void *)((char *)v13 + v858[14]);
            *((unsigned char *)v12 + v858[15]) = *((unsigned char *)v13 + v858[15]);
            uint64_t v229 = v858[16];
            v848 = (char *)v12 + v229;
            id v230 = (char *)v13 + v229;
            uint64_t v231 = sub_1DFDF8F10();
            uint64_t v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16);
            swift_unknownObjectRetain();
            v232(v848, v230, v231);
            uint64_t v233 = v858[17];
            uint64_t v234 = (char *)v12 + v233;
            uint64_t v235 = (char *)v13 + v233;
            uint64_t v236 = sub_1DFDF7CB0();
            uint64_t v237 = *(void *)(v236 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v237 + 48))(v235, 1, v236))
            {
              sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
              memcpy(v234, v235, *(void *)(*(void *)(v238 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v237 + 16))(v234, v235, v236);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v237 + 56))(v234, 0, 1, v236);
            }
            a3 = v876;
            *(void *)((char *)v12 + v858[18]) = *(void *)((char *)v13 + v858[18]);
            swift_bridgeObjectRetain();
            goto LABEL_132;
          case 6u:
            sub_1DEA536E4();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v239 - 8) + 16))(v12, v13, v239);
            uint64_t v240 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
            uint64_t v241 = (char *)v12 + v240;
            uint64_t v242 = (char *)v13 + v240;
            uint64_t v243 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 16))(v241, v242, v243);
            goto LABEL_132;
          case 7u:
            v877 = a3;
            *uint64_t v12 = *v13;
            v12[1] = v13[1];
            uint64_t v244 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
            uint64_t v245 = v244[5];
            v849 = (char *)v13 + v245;
            v859 = (char *)v12 + v245;
            uint64_t v246 = sub_1DFDF8C20();
            uint64_t v247 = *(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 16);
            swift_bridgeObjectRetain();
            v247(v859, v849, v246);
            v247((char *)v12 + v244[6], (char *)v13 + v244[6], v246);
            *(void *)((char *)v12 + v244[7]) = *(void *)((char *)v13 + v244[7]);
            *(void *)((char *)v12 + v244[8]) = *(void *)((char *)v13 + v244[8]);
            uint64_t v248 = v244[9];
            uint64_t v249 = (char *)v12 + v248;
            uint64_t v250 = (char *)v13 + v248;
            type metadata accessor for FeedPaywallModel(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            v850 = v250;
            v860 = v249;
            *uint64_t v249 = *v250;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v252 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v253 = v252[5];
              uint64_t v254 = &v249[v253];
              unint64_t v255 = &v250[v253];
              uint64_t v256 = sub_1DFDE7220();
              uint64_t v257 = *(void *)(v256 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v257 + 48))(v255, 1, v256))
              {
                sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v254, v255, *(void *)(*(void *)(v258 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v257 + 16))(v254, v255, v256);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v257 + 56))(v254, 0, 1, v256);
              }
              *(void *)&v860[v252[6]] = *(void *)&v250[v252[6]];
              *(void *)&v860[v252[7]] = *(void *)&v250[v252[7]];
              *(void *)&v860[v252[8]] = *(void *)&v250[v252[8]];
              uint64_t v474 = v252[9];
              uint64_t v475 = *(void **)&v250[v474];
              *(void *)&v860[v474] = v475;
              uint64_t v476 = v252[10];
              v671 = *(void **)&v250[v476];
              *(void *)&v860[v476] = v671;
              uint64_t v477 = v252[11];
              v700 = *(void **)&v250[v477];
              *(void *)&v860[v477] = v700;
              uint64_t v478 = v252[12];
              v710 = *(void **)&v250[v478];
              *(void *)&v860[v478] = v710;
              uint64_t v479 = v252[13];
              v718 = *(void **)&v250[v479];
              *(void *)&v860[v479] = v718;
              uint64_t v480 = v252[14];
              v732 = *(void **)&v250[v480];
              *(void *)&v860[v480] = v732;
              uint64_t v481 = v252[15];
              v754 = *(void **)&v250[v481];
              *(void *)&v860[v481] = v754;
              uint64_t v482 = v252[16];
              v778 = *(void **)&v250[v482];
              *(void *)&v860[v482] = v778;
              uint64_t v483 = v252[17];
              v807 = *(void **)&v250[v483];
              *(void *)&v860[v483] = v807;
              uint64_t v484 = v252[18];
              __dstl = *(void **)&v250[v484];
              *(void *)&v860[v484] = __dstl;
              uint64_t v485 = v252[19];
              uint64_t v486 = &v860[v485];
              uint64_t v487 = &v250[v485];
              *(void *)uint64_t v486 = *(void *)v487;
              *((void *)v486 + 1) = *((void *)v487 + 1);
              uint64_t v488 = v252[20];
              uint64_t v489 = &v860[v488];
              v490 = &v250[v488];
              *(void *)uint64_t v489 = *(void *)v490;
              *((void *)v489 + 1) = *((void *)v490 + 1);
              uint64_t v491 = v252[21];
              uint64_t v492 = &v860[v491];
              uint64_t v493 = &v250[v491];
              *(void *)uint64_t v492 = *(void *)v493;
              *((void *)v492 + 1) = *((void *)v493 + 1);
              uint64_t v494 = v252[22];
              v677 = &v250[v494];
              v683 = &v860[v494];
              uint64_t v495 = sub_1DFDEF360();
              v665 = *(void (**)(char *, char *, uint64_t))(*(void *)(v495 - 8) + 16);
              id v496 = v475;
              id v497 = v671;
              id v498 = v700;
              id v499 = v710;
              id v500 = v718;
              id v501 = v732;
              id v502 = v754;
              id v503 = v778;
              id v504 = v807;
              id v505 = __dstl;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v665(v683, v677, v495);
              uint64_t v506 = v252[23];
              v507 = &v860[v506];
              v508 = &v250[v506];
              *(void *)v507 = *(void *)v508;
              *((void *)v507 + 1) = *((void *)v508 + 1);
              uint64_t v509 = v252[24];
              __dstb = &v860[v509];
              uint64_t v334 = &v250[v509];
              uint64_t v510 = sub_1DFDEF130();
              uint64_t v511 = *(void *)(v510 - 8);
              v512 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v511 + 48);
              swift_bridgeObjectRetain();
              if (!v512(v334, 1, v510))
              {
                (*(void (**)(char *, char *, uint64_t))(v511 + 16))(__dstb, v334, v510);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v511 + 56))(__dstb, 0, 1, v510);
                goto LABEL_108;
              }
            }
            else
            {
              uint64_t v321 = (void *)*((void *)v250 + 1);
              *((void *)v249 + 1) = v321;
              v769 = (void *)*((void *)v250 + 2);
              *((void *)v249 + 2) = v769;
              v798 = (void *)*((void *)v250 + 3);
              *((void *)v249 + 3) = v798;
              __dstk = (void *)*((void *)v250 + 4);
              *((void *)v249 + 4) = __dstk;
              *((void *)v249 + 5) = *((void *)v250 + 5);
              *((void *)v249 + 6) = *((void *)v250 + 6);
              *((void *)v249 + 7) = *((void *)v250 + 7);
              v745 = (void *)*((void *)v250 + 8);
              *((void *)v249 + 8) = v745;
              *((void *)v249 + 9) = *((void *)v250 + 9);
              *((void *)v249 + 10) = *((void *)v250 + 10);
              *((void *)v249 + 11) = *((void *)v250 + 11);
              *((void *)v249 + 12) = *((void *)v250 + 12);
              *((void *)v249 + 13) = *((void *)v250 + 13);
              *((void *)v249 + 14) = *((void *)v250 + 14);
              id v322 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v323 = v322[16];
              v707 = &v250[v323];
              v717 = &v249[v323];
              uint64_t v324 = sub_1DFDEF360();
              v695 = *(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16);
              id v325 = v321;
              id v326 = v769;
              id v327 = v798;
              id v328 = __dstk;
              id v329 = v745;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v695(v717, v707, v324);
              uint64_t v330 = v322[17];
              uint64_t v331 = &v249[v330];
              uint64_t v332 = &v250[v330];
              *(void *)uint64_t v331 = *(void *)v332;
              *((void *)v331 + 1) = *((void *)v332 + 1);
              uint64_t v333 = v322[18];
              __dstb = &v249[v333];
              uint64_t v334 = &v250[v333];
              uint64_t v335 = sub_1DFDEF130();
              uint64_t v336 = *(void *)(v335 - 8);
              uint64_t v337 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v336 + 48);
              swift_bridgeObjectRetain();
              if (!v337(v334, 1, v335))
              {
                (*(void (**)(char *, char *, uint64_t))(v336 + 16))(__dstb, v334, v335);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v336 + 56))(__dstb, 0, 1, v335);
                goto LABEL_108;
              }
            }
            sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
            memcpy(__dstb, v334, *(void *)(*(void *)(v513 - 8) + 64));
LABEL_108:
            swift_storeEnumTagMultiPayload();
            __dstd = (int *)type metadata accessor for FeedPaywallConfig();
            uint64_t v514 = __dstd[5];
            v515 = &v860[v514];
            v516 = &v850[v514];
            int v517 = swift_getEnumCaseMultiPayload();
            char *v515 = *v516;
            if (v517 == 1)
            {
              v518 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v519 = v518[5];
              v808 = &v515[v519];
              v520 = &v516[v519];
              uint64_t v521 = sub_1DFDE7220();
              uint64_t v522 = *(void *)(v521 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v522 + 48))(v520, 1, v521))
              {
                sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v808, v520, *(void *)(*(void *)(v523 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v522 + 16))(v808, v520, v521);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v522 + 56))(v808, 0, 1, v521);
              }
              *(void *)&v515[v518[6]] = *(void *)&v516[v518[6]];
              *(void *)&v515[v518[7]] = *(void *)&v516[v518[7]];
              *(void *)&v515[v518[8]] = *(void *)&v516[v518[8]];
              uint64_t v541 = v518[9];
              v542 = *(void **)&v516[v541];
              *(void *)&v515[v541] = v542;
              uint64_t v543 = v518[10];
              v666 = *(void **)&v516[v543];
              *(void *)&v515[v543] = v666;
              uint64_t v544 = v518[11];
              v690 = *(void **)&v516[v544];
              *(void *)&v515[v544] = v690;
              uint64_t v545 = v518[12];
              v702 = *(void **)&v516[v545];
              *(void *)&v515[v545] = v702;
              uint64_t v546 = v518[13];
              v712 = *(void **)&v516[v546];
              *(void *)&v515[v546] = v712;
              uint64_t v547 = v518[14];
              v721 = *(void **)&v516[v547];
              *(void *)&v515[v547] = v721;
              uint64_t v548 = v518[15];
              v734 = *(void **)&v516[v548];
              *(void *)&v515[v548] = v734;
              uint64_t v549 = v518[16];
              v756 = *(void **)&v516[v549];
              *(void *)&v515[v549] = v756;
              uint64_t v550 = v518[17];
              v781 = *(void **)&v516[v550];
              *(void *)&v515[v550] = v781;
              uint64_t v551 = v518[18];
              v811 = *(void **)&v516[v551];
              *(void *)&v515[v551] = v811;
              uint64_t v552 = v518[19];
              v553 = &v515[v552];
              v554 = &v516[v552];
              *(void *)v553 = *(void *)v554;
              *((void *)v553 + 1) = *((void *)v554 + 1);
              uint64_t v555 = v518[20];
              v556 = &v515[v555];
              v557 = &v516[v555];
              *(void *)v556 = *(void *)v557;
              *((void *)v556 + 1) = *((void *)v557 + 1);
              uint64_t v558 = v518[21];
              v559 = &v515[v558];
              v560 = &v516[v558];
              *(void *)v559 = *(void *)v560;
              *((void *)v559 + 1) = *((void *)v560 + 1);
              uint64_t v561 = v518[22];
              v672 = &v516[v561];
              v678 = &v515[v561];
              uint64_t v562 = sub_1DFDEF360();
              v660 = *(void (**)(char *, char *, uint64_t))(*(void *)(v562 - 8) + 16);
              id v563 = v542;
              id v564 = v666;
              id v565 = v690;
              id v566 = v702;
              id v567 = v712;
              id v568 = v721;
              id v569 = v734;
              id v570 = v756;
              id v571 = v781;
              id v572 = v811;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v660(v678, v672, v562);
              uint64_t v573 = v518[23];
              v574 = &v515[v573];
              v575 = &v516[v573];
              *(void *)v574 = *(void *)v575;
              *((void *)v574 + 1) = *((void *)v575 + 1);
              uint64_t v576 = v518[24];
              v782 = &v516[v576];
              v812 = &v515[v576];
              uint64_t v577 = sub_1DFDEF130();
              uint64_t v578 = *(void *)(v577 - 8);
              v579 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v578 + 48);
              swift_bridgeObjectRetain();
              if (v579(v782, 1, v577))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v812, v782, *(void *)(*(void *)(v580 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v578 + 16))(v812, v782, v577);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v578 + 56))(v812, 0, 1, v577);
              }
            }
            else
            {
              v524 = (void *)*((void *)v516 + 1);
              *((void *)v515 + 1) = v524;
              v755 = (void *)*((void *)v516 + 2);
              *((void *)v515 + 2) = v755;
              v779 = (void *)*((void *)v516 + 3);
              *((void *)v515 + 3) = v779;
              v809 = (void *)*((void *)v516 + 4);
              *((void *)v515 + 4) = v809;
              *((void *)v515 + 5) = *((void *)v516 + 5);
              *((void *)v515 + 6) = *((void *)v516 + 6);
              *((void *)v515 + 7) = *((void *)v516 + 7);
              v733 = (void *)*((void *)v516 + 8);
              *((void *)v515 + 8) = v733;
              *((void *)v515 + 9) = *((void *)v516 + 9);
              *((void *)v515 + 10) = *((void *)v516 + 10);
              *((void *)v515 + 11) = *((void *)v516 + 11);
              *((void *)v515 + 12) = *((void *)v516 + 12);
              *((void *)v515 + 13) = *((void *)v516 + 13);
              *((void *)v515 + 14) = *((void *)v516 + 14);
              v525 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v526 = v525[16];
              v701 = &v516[v526];
              v711 = &v515[v526];
              uint64_t v527 = sub_1DFDEF360();
              v689 = *(void (**)(char *, char *, uint64_t))(*(void *)(v527 - 8) + 16);
              id v528 = v524;
              id v529 = v755;
              id v530 = v779;
              id v531 = v809;
              id v532 = v733;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v689(v711, v701, v527);
              uint64_t v533 = v525[17];
              v534 = &v515[v533];
              v535 = &v516[v533];
              *(void *)v534 = *(void *)v535;
              *((void *)v534 + 1) = *((void *)v535 + 1);
              uint64_t v536 = v525[18];
              v780 = &v515[v536];
              v810 = &v516[v536];
              uint64_t v537 = sub_1DFDEF130();
              uint64_t v538 = *(void *)(v537 - 8);
              v539 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v538 + 48);
              swift_bridgeObjectRetain();
              if (v539(v810, 1, v537))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v780, v810, *(void *)(*(void *)(v540 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v780, v810, v537);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v780, 0, 1, v537);
              }
            }
            swift_storeEnumTagMultiPayload();
            uint64_t v581 = __dstd[6];
            v582 = &v860[v581];
            v583 = &v850[v581];
            int v584 = swift_getEnumCaseMultiPayload();
            char *v582 = *v583;
            if (v584 == 1)
            {
              v585 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v586 = v585[5];
              v813 = &v582[v586];
              v587 = &v583[v586];
              uint64_t v588 = sub_1DFDE7220();
              uint64_t v589 = *(void *)(v588 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v589 + 48))(v587, 1, v588))
              {
                sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v813, v587, *(void *)(*(void *)(v590 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v589 + 16))(v813, v587, v588);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v589 + 56))(v813, 0, 1, v588);
              }
              *(void *)&v582[v585[6]] = *(void *)&v583[v585[6]];
              *(void *)&v582[v585[7]] = *(void *)&v583[v585[7]];
              *(void *)&v582[v585[8]] = *(void *)&v583[v585[8]];
              uint64_t v608 = v585[9];
              v609 = *(void **)&v583[v608];
              *(void *)&v582[v608] = v609;
              uint64_t v610 = v585[10];
              v667 = *(void **)&v583[v610];
              *(void *)&v582[v610] = v667;
              uint64_t v611 = v585[11];
              v692 = *(void **)&v583[v611];
              *(void *)&v582[v611] = v692;
              uint64_t v612 = v585[12];
              v704 = *(void **)&v583[v612];
              *(void *)&v582[v612] = v704;
              uint64_t v613 = v585[13];
              v714 = *(void **)&v583[v613];
              *(void *)&v582[v613] = v714;
              uint64_t v614 = v585[14];
              v722 = *(void **)&v583[v614];
              *(void *)&v582[v614] = v722;
              uint64_t v615 = v585[15];
              v736 = *(void **)&v583[v615];
              *(void *)&v582[v615] = v736;
              uint64_t v616 = v585[16];
              v758 = *(void **)&v583[v616];
              *(void *)&v582[v616] = v758;
              uint64_t v617 = v585[17];
              v785 = *(void **)&v583[v617];
              *(void *)&v582[v617] = v785;
              uint64_t v618 = v585[18];
              v816 = *(void **)&v583[v618];
              *(void *)&v582[v618] = v816;
              uint64_t v619 = v585[19];
              v620 = &v582[v619];
              v621 = &v583[v619];
              *(void *)v620 = *(void *)v621;
              *((void *)v620 + 1) = *((void *)v621 + 1);
              uint64_t v622 = v585[20];
              v623 = &v582[v622];
              v624 = &v583[v622];
              *(void *)v623 = *(void *)v624;
              *((void *)v623 + 1) = *((void *)v624 + 1);
              uint64_t v625 = v585[21];
              v626 = &v582[v625];
              v627 = &v583[v625];
              *(void *)v626 = *(void *)v627;
              *((void *)v626 + 1) = *((void *)v627 + 1);
              uint64_t v628 = v585[22];
              v673 = &v583[v628];
              v679 = &v582[v628];
              uint64_t v629 = sub_1DFDEF360();
              v661 = *(void (**)(char *, char *, uint64_t))(*(void *)(v629 - 8) + 16);
              id v630 = v609;
              id v631 = v667;
              id v632 = v692;
              id v633 = v704;
              id v634 = v714;
              id v635 = v722;
              id v636 = v736;
              id v637 = v758;
              id v638 = v785;
              id v639 = v816;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v661(v679, v673, v629);
              uint64_t v640 = v585[23];
              v641 = &v582[v640];
              v642 = &v583[v640];
              *(void *)v641 = *(void *)v642;
              *((void *)v641 + 1) = *((void *)v642 + 1);
              uint64_t v643 = v585[24];
              v786 = &v583[v643];
              v817 = &v582[v643];
              uint64_t v644 = sub_1DFDEF130();
              uint64_t v645 = *(void *)(v644 - 8);
              v646 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v645 + 48);
              swift_bridgeObjectRetain();
              if (v646(v786, 1, v644))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v817, v786, *(void *)(*(void *)(v647 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v645 + 16))(v817, v786, v644);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v645 + 56))(v817, 0, 1, v644);
              }
            }
            else
            {
              v591 = (void *)*((void *)v583 + 1);
              *((void *)v582 + 1) = v591;
              v757 = (void *)*((void *)v583 + 2);
              *((void *)v582 + 2) = v757;
              v783 = (void *)*((void *)v583 + 3);
              *((void *)v582 + 3) = v783;
              v814 = (void *)*((void *)v583 + 4);
              *((void *)v582 + 4) = v814;
              *((void *)v582 + 5) = *((void *)v583 + 5);
              *((void *)v582 + 6) = *((void *)v583 + 6);
              *((void *)v582 + 7) = *((void *)v583 + 7);
              v735 = (void *)*((void *)v583 + 8);
              *((void *)v582 + 8) = v735;
              *((void *)v582 + 9) = *((void *)v583 + 9);
              *((void *)v582 + 10) = *((void *)v583 + 10);
              *((void *)v582 + 11) = *((void *)v583 + 11);
              *((void *)v582 + 12) = *((void *)v583 + 12);
              *((void *)v582 + 13) = *((void *)v583 + 13);
              *((void *)v582 + 14) = *((void *)v583 + 14);
              v592 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v593 = v592[16];
              v703 = &v583[v593];
              v713 = &v582[v593];
              uint64_t v594 = sub_1DFDEF360();
              v691 = *(void (**)(char *, char *, uint64_t))(*(void *)(v594 - 8) + 16);
              id v595 = v591;
              id v596 = v757;
              id v597 = v783;
              id v598 = v814;
              id v599 = v735;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v691(v713, v703, v594);
              uint64_t v600 = v592[17];
              v601 = &v582[v600];
              v602 = &v583[v600];
              *(void *)v601 = *(void *)v602;
              *((void *)v601 + 1) = *((void *)v602 + 1);
              uint64_t v603 = v592[18];
              v784 = &v582[v603];
              v815 = &v583[v603];
              uint64_t v604 = sub_1DFDEF130();
              uint64_t v605 = *(void *)(v604 - 8);
              v606 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v605 + 48);
              swift_bridgeObjectRetain();
              if (v606(v815, 1, v604))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v784, v815, *(void *)(*(void *)(v607 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v605 + 16))(v784, v815, v604);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v605 + 56))(v784, 0, 1, v604);
              }
            }
            swift_storeEnumTagMultiPayload();
            uint64_t v648 = __dstd[7];
            v649 = &v860[v648];
            v650 = &v850[v648];
            uint64_t v651 = type metadata accessor for FeedPaywallType(0);
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v649, v650, *(void *)(*(void *)(v651 - 8) + 64));
            }
            else
            {
              *(void *)v649 = *(void *)v650;
              sub_1DEC84AA4();
              uint64_t v653 = *(int *)(v652 + 48);
              v654 = &v649[v653];
              v655 = &v650[v653];
              uint64_t v656 = sub_1DFDEEE80();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v656 - 8) + 16))(v654, v655, v656);
              swift_storeEnumTagMultiPayload();
            }
            a3 = v877;
LABEL_132:
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            goto LABEL_100;
          case 8u:
            *uint64_t v12 = *v13;
            v12[1] = v13[1];
            _OWORD v12[2] = v13[2];
            void v12[3] = v13[3];
            v796 = (void *)v13[4];
            v12[4] = v796;
            v838 = (void *)v13[5];
            void v12[5] = v838;
            v12[6] = v13[6];
            v12[7] = v13[7];
            v12[8] = v13[8];
            v12[9] = v13[9];
            v12[10] = v13[10];
            v878 = a3;
            uint64_t v259 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
            uint64_t v260 = v259[11];
            v743 = (char *)v13 + v260;
            v767 = (char *)v12 + v260;
            uint64_t v261 = sub_1DFDF8C20();
            v726 = *(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v262 = v796;
            id v263 = v838;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v726(v767, v743, v261);
            v726((char *)v12 + v259[12], (char *)v13 + v259[12], v261);
            uint64_t v264 = v259[13];
            a3 = v878;
            *(void *)((char *)v12 + v264) = *(void *)((char *)v13 + v264);
            goto LABEL_132;
          case 9u:
            sub_1DEA53948();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v265 - 8) + 16))(v12, v13, v265);
            uint64_t v266 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
            unint64_t v267 = (char *)v12 + v266;
            uint64_t v268 = (char *)v13 + v266;
            uint64_t v269 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 16))(v267, v268, v269);
            goto LABEL_132;
          case 0xCu:
            uint64_t v271 = sub_1DFDF7010();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v271 - 8) + 16))(v12, v13, v271);
            uint64_t v272 = type metadata accessor for NewspaperMagazineFeedGroup();
            *(void *)((char *)v12 + *(int *)(v272 + 20)) = *(void *)((char *)v13 + *(int *)(v272 + 20));
            *(void *)((char *)v12 + *(int *)(v272 + 24)) = *(void *)((char *)v13 + *(int *)(v272 + 24));
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_132;
          case 0xDu:
            sub_1DEA5387C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v273 - 8) + 16))(v12, v13, v273);
            uint64_t v274 = type metadata accessor for CuratedMagazineFeedGroup();
            uint64_t v275 = *(int *)(v274 + 20);
            uint64_t v276 = (char *)v12 + v275;
            uint64_t v277 = (char *)v13 + v275;
            uint64_t v278 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16))(v276, v277, v278);
            uint64_t v279 = *(int *)(v274 + 24);
            uint64_t v280 = (char *)v12 + v279;
            uint64_t v281 = (char *)v13 + v279;
            uint64_t v282 = sub_1DFDF8F10();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 16))(v280, v281, v282);
            goto LABEL_132;
          default:
            *uint64_t v12 = *v13;
            v12[1] = v13[1];
            _OWORD v12[2] = v13[2];
            void v12[3] = v13[3];
            uint64_t v77 = (void *)v13[4];
            v12[4] = v77;
            void v12[5] = v13[5];
            v12[6] = v13[6];
            v12[7] = v13[7];
            v12[8] = v13[8];
            v12[9] = v13[9];
            uint64_t v855 = type metadata accessor for CategoriesMagazineFeedGroup();
            uint64_t v78 = *(int *)(v855 + 40);
            v788 = (char *)v13 + v78;
            __dstf = (char *)v12 + v78;
            v870 = a3;
            uint64_t v79 = sub_1DFDF8C20();
            v760 = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v80 = v77;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v81 = v79;
            a3 = v870;
            v760(__dstf, v788, v81);
            *(void *)((char *)v12 + *(int *)(v855 + 44)) = *(void *)((char *)v13 + *(int *)(v855 + 44));
            goto LABEL_132;
        }
      case 0xCu:
        uint64_t v82 = sub_1DFDF6D40();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v82 - 8) + 16))(v12, v13, v82);
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      case 0x10u:
        sub_1DEA4B52C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v83 - 8) + 16))(v12, v13, v83);
        uint64_t v84 = *(int *)(type metadata accessor for SharedWithYouTodayFeedGroup() + 20);
        uint64_t v85 = (char *)v12 + v84;
        uint64_t v86 = (char *)v13 + v84;
        uint64_t v87 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      case 0x11u:
        sub_1DEAC2768();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v88 - 8) + 16))(v12, v13, v88);
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      case 0x16u:
        uint64_t v89 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v89 - 8) + 16))(v12, v13, v89);
        uint64_t v90 = type metadata accessor for SavedStoriesTodayFeedGroup();
        *(void *)((char *)v12 + *(int *)(v90 + 20)) = *(void *)((char *)v13 + *(int *)(v90 + 20));
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      case 0x17u:
        uint64_t v91 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v91 - 8) + 16))(v12, v13, v91);
        uint64_t v92 = *(int *)(type metadata accessor for ChannelPickerTodayFeedGroup() + 20);
        uint64_t v93 = (void *)((char *)v12 + v92);
        long long v94 = (void *)((char *)v13 + v92);
        void *v93 = *v94;
        v93[1] = v94[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      default:
        uint64_t v29 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v12, v13, v29);
        uint64_t v30 = (int *)type metadata accessor for CuratedTodayFeedGroup();
        uint64_t v31 = v30[5];
        uint64_t v32 = (void *)((char *)v12 + v31);
        uint64_t v33 = (void *)((char *)v13 + v31);
        *uint64_t v32 = *v33;
        v32[1] = v33[1];
        *(void *)((char *)v12 + v30[6]) = *(void *)((char *)v13 + v30[6]);
        uint64_t v34 = v30[7];
        v862 = (char *)v13 + v34;
        v866 = (char *)v12 + v34;
        uint64_t v35 = a3;
        uint64_t v36 = sub_1DFDF8F10();
        uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v38 = v36;
        a3 = v35;
        v37(v866, v862, v38);
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
    }
  }
  if (v18)
  {
LABEL_7:
    sub_1DE9F1790(0, &qword_1EBAAAF80, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, MEMORY[0x1E4FBB718]);
    memcpy(v12, v13, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_100;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v39 = sub_1DFDF7010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v12, v13, v39);
      unint64_t v40 = (int *)type metadata accessor for NewspaperTodayFeedGroup();
      *(void *)((char *)v12 + v40[5]) = *(void *)((char *)v13 + v40[5]);
      *(void *)((char *)v12 + v40[6]) = *(void *)((char *)v13 + v40[6]);
      *(void *)((char *)v12 + v40[7]) = *(void *)((char *)v13 + v40[7]);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_99;
    case 2u:
      v867 = a3;
      uint64_t v41 = sub_1DFDF7010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v12, v13, v41);
      uint64_t v42 = (int *)type metadata accessor for LocalNewsTodayFeedGroup();
      *(void *)((char *)v12 + v42[5]) = *(void *)((char *)v13 + v42[5]);
      *(void *)((char *)v12 + v42[6]) = *(void *)((char *)v13 + v42[6]);
      uint64_t v43 = v42[7];
      v852 = (char *)v12 + v43;
      v863 = v42;
      v839 = (char *)v13 + v43;
      uint64_t v44 = sub_1DFDF9EE0();
      __dst = *(void **)(v44 - 8);
      v831 = (unsigned int (*)(char *, uint64_t, uint64_t))__dst[6];
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      if (v831(v839, 1, v44))
      {
        sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA350, MEMORY[0x1E4F80520], MEMORY[0x1E4FBB718]);
        memcpy(v852, v839, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))__dst[2])(v852, v839, v44);
        ((void (*)(char *, void, uint64_t, uint64_t))__dst[7])(v852, 0, 1, v44);
      }
      a3 = v867;
      *(void *)((char *)v12 + v863[8]) = *(void *)((char *)v13 + v863[8]);
      uint64_t v95 = v863[9];
      unsigned int v96 = (char *)v12 + v95;
      uint64_t v97 = (char *)v13 + v95;
      *(void *)unsigned int v96 = *(void *)v97;
      v96[8] = v97[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_99;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
      uint64_t v46 = sub_1DFDF7010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v12, v13, v46);
      goto LABEL_99;
    case 8u:
      uint64_t v47 = sub_1DFDF7010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v12, v13, v47);
      uint64_t v48 = type metadata accessor for TopicTodayFeedGroup();
      *((unsigned char *)v12 + *(int *)(v48 + 20)) = *((unsigned char *)v13 + *(int *)(v48 + 20));
      goto LABEL_99;
    case 9u:
      type metadata accessor for MagazineFeedGroup();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1DEA530F0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v101 - 8) + 16))(v12, v13, v101);
          uint64_t v102 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
          uint64_t v103 = (char *)v12 + v102;
          uint64_t v104 = (char *)v13 + v102;
          uint64_t v105 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
          goto LABEL_98;
        case 2u:
        case 0xAu:
        case 0xBu:
          uint64_t v169 = sub_1DFDF7010();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v169 - 8) + 16))(v12, v13, v169);
          goto LABEL_98;
        case 3u:
          sub_1DEA52F58();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 16))(v12, v13, v106);
          uint64_t v107 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
          uint64_t v108 = (char *)v12 + v107;
          uint64_t v109 = (char *)v13 + v107;
          uint64_t v110 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
          goto LABEL_98;
        case 4u:
          *uint64_t v12 = *v13;
          v12[1] = v13[1];
          _OWORD v12[2] = v13[2];
          void v12[3] = v13[3];
          v833 = (void *)v13[4];
          v12[4] = v833;
          void v12[5] = v13[5];
          v12[6] = v13[6];
          v12[7] = v13[7];
          v12[8] = v13[8];
          v12[9] = v13[9];
          v871 = a3;
          uint64_t v111 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
          uint64_t v112 = v111[10];
          v761 = (char *)v13 + v112;
          v789 = (char *)v12 + v112;
          uint64_t v113 = sub_1DFDF8C20();
          v738 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v114 = v833;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v738(v789, v761, v113);
          *(void *)((char *)v12 + v111[11]) = *(void *)((char *)v13 + v111[11]);
          uint64_t v115 = v111[12];
          a3 = v871;
          *(void *)((char *)v12 + v115) = *(void *)((char *)v13 + v115);
          goto LABEL_98;
        case 5u:
          v872 = a3;
          *uint64_t v12 = *v13;
          v12[1] = v13[1];
          _OWORD v12[2] = v13[2];
          void v12[3] = v13[3];
          v790 = (void *)v13[4];
          v12[4] = v790;
          v841 = (void *)v13[5];
          void v12[5] = v841;
          v12[6] = v13[6];
          v12[7] = v13[7];
          v12[8] = v13[8];
          v12[9] = v13[9];
          uint64_t v116 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
          uint64_t v117 = v116[10];
          v739 = (char *)v13 + v117;
          v762 = (char *)v12 + v117;
          uint64_t v118 = sub_1DFDF8C20();
          v723 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v119 = v790;
          id v120 = v841;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v723(v762, v739, v118);
          v723((char *)v12 + v116[11], (char *)v13 + v116[11], v118);
          v856 = v116;
          *(void *)((char *)v12 + v116[12]) = *(void *)((char *)v13 + v116[12]);
          uint64_t v121 = v116[13];
          uint64_t v122 = (char *)v12 + v121;
          long long v123 = (char *)v13 + v121;
          sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
          uint64_t v125 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
          *(void *)&v122[*(int *)(v125 + 20)] = *(void *)&v123[*(int *)(v125 + 20)];
          uint64_t v126 = *(int *)(v125 + 24);
          v834 = &v123[v126];
          v842 = &v122[v126];
          sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
          uint64_t v128 = v127;
          unint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
          swift_retain();
          v129(v842, v834, v128);
          *(void *)((char *)v12 + v856[14]) = *(void *)((char *)v13 + v856[14]);
          *((unsigned char *)v12 + v856[15]) = *((unsigned char *)v13 + v856[15]);
          uint64_t v130 = v856[16];
          v835 = (char *)v13 + v130;
          v843 = (char *)v12 + v130;
          uint64_t v131 = sub_1DFDF8F10();
          __dstg = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
          swift_unknownObjectRetain();
          __dstg(v843, v835, v131);
          uint64_t v132 = v856[17];
          char v133 = (char *)v12 + v132;
          id v134 = (char *)v13 + v132;
          uint64_t v135 = sub_1DFDF7CB0();
          uint64_t v136 = *(void *)(v135 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v134, 1, v135))
          {
            sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
            memcpy(v133, v134, *(void *)(*(void *)(v137 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v133, v134, v135);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
          }
          *(void *)((char *)v12 + v856[18]) = *(void *)((char *)v13 + v856[18]);
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          a3 = v872;
          goto LABEL_99;
        case 6u:
          sub_1DEA536E4();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v138 - 8) + 16))(v12, v13, v138);
          uint64_t v139 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
          char v140 = (char *)v12 + v139;
          char v141 = (char *)v13 + v139;
          uint64_t v142 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
          goto LABEL_98;
        case 7u:
          v873 = a3;
          *uint64_t v12 = *v13;
          v12[1] = v13[1];
          uint64_t v143 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
          uint64_t v144 = v143[5];
          v836 = (char *)v13 + v144;
          v844 = (char *)v12 + v144;
          uint64_t v145 = sub_1DFDF8C20();
          uint64_t v146 = *(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16);
          swift_bridgeObjectRetain();
          v146(v844, v836, v145);
          v146((char *)v12 + v143[6], (char *)v13 + v143[6], v145);
          *(void *)((char *)v12 + v143[7]) = *(void *)((char *)v13 + v143[7]);
          *(void *)((char *)v12 + v143[8]) = *(void *)((char *)v13 + v143[8]);
          uint64_t v147 = v143[9];
          uint64_t v148 = (char *)v12 + v147;
          uint64_t v149 = (char *)v13 + v147;
          type metadata accessor for FeedPaywallModel(0);
          int v150 = swift_getEnumCaseMultiPayload();
          *uint64_t v148 = *v149;
          v845 = v148;
          v857 = v149;
          if (v150 == 1)
          {
            unint64_t v151 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            uint64_t v152 = v151[5];
            uint64_t v153 = &v148[v152];
            uint64_t v154 = &v149[v152];
            uint64_t v155 = sub_1DFDE7220();
            uint64_t v156 = *(void *)(v155 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
            {
              sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(v153, v154, *(void *)(*(void *)(v157 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v153, v154, v155);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
            }
            *(void *)&v845[v151[6]] = *(void *)&v857[v151[6]];
            *(void *)&v845[v151[7]] = *(void *)&v857[v151[7]];
            *(void *)&v845[v151[8]] = *(void *)&v857[v151[8]];
            uint64_t v283 = v151[9];
            v662 = *(void **)&v857[v283];
            *(void *)&v845[v283] = v662;
            uint64_t v284 = v151[10];
            v668 = *(void **)&v857[v284];
            *(void *)&v845[v284] = v668;
            uint64_t v285 = v151[11];
            v694 = *(void **)&v857[v285];
            *(void *)&v845[v285] = v694;
            uint64_t v286 = v151[12];
            v706 = *(void **)&v857[v286];
            *(void *)&v845[v286] = v706;
            uint64_t v287 = v151[13];
            v716 = *(void **)&v857[v287];
            *(void *)&v845[v287] = v716;
            uint64_t v288 = v151[14];
            v727 = *(void **)&v857[v288];
            *(void *)&v845[v288] = v727;
            uint64_t v289 = v151[15];
            v744 = *(void **)&v857[v289];
            *(void *)&v845[v289] = v744;
            uint64_t v290 = v151[16];
            v768 = *(void **)&v857[v290];
            *(void *)&v845[v290] = v768;
            uint64_t v291 = v151[17];
            v797 = *(void **)&v857[v291];
            *(void *)&v845[v291] = v797;
            uint64_t v292 = v151[18];
            __dstj = *(void **)&v857[v292];
            *(void *)&v845[v292] = __dstj;
            uint64_t v293 = v151[19];
            char v294 = &v845[v293];
            uint64_t v295 = &v857[v293];
            *(void *)char v294 = *(void *)v295;
            *((void *)v294 + 1) = *((void *)v295 + 1);
            uint64_t v296 = v151[20];
            uint64_t v297 = &v845[v296];
            char v298 = &v857[v296];
            *(void *)uint64_t v297 = *(void *)v298;
            *((void *)v297 + 1) = *((void *)v298 + 1);
            uint64_t v299 = v151[21];
            uint64_t v300 = &v845[v299];
            uint64_t v301 = &v857[v299];
            *(void *)uint64_t v300 = *(void *)v301;
            *((void *)v300 + 1) = *((void *)v301 + 1);
            uint64_t v302 = v151[22];
            v674 = &v857[v302];
            v680 = &v845[v302];
            uint64_t v303 = sub_1DFDEF360();
            v659 = *(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 16);
            id v304 = v662;
            id v305 = v668;
            id v306 = v694;
            id v307 = v706;
            id v308 = v716;
            id v309 = v727;
            id v310 = v744;
            id v311 = v768;
            id v312 = v797;
            id v313 = __dstj;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v659(v680, v674, v303);
            uint64_t v314 = v151[23];
            uint64_t v315 = &v845[v314];
            uint64_t v316 = &v857[v314];
            *(void *)uint64_t v315 = *(void *)v316;
            *((void *)v315 + 1) = *((void *)v316 + 1);
            uint64_t v317 = v151[24];
            v793 = &v857[v317];
            __dsta = &v845[v317];
            uint64_t v318 = sub_1DFDEF130();
            uint64_t v319 = *(void *)(v318 - 8);
            id v320 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v319 + 48);
            swift_bridgeObjectRetain();
            if (v320(v793, 1, v318)) {
              goto LABEL_54;
            }
            (*(void (**)(char *, char *, uint64_t))(v319 + 16))(__dsta, v793, v318);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v319 + 56))(__dsta, 0, 1, v318);
          }
          else
          {
            v715 = (void *)*((void *)v149 + 1);
            *((void *)v148 + 1) = v715;
            v764 = (void *)*((void *)v149 + 2);
            *((void *)v148 + 2) = v764;
            v792 = (void *)*((void *)v149 + 3);
            *((void *)v148 + 3) = v792;
            __dsth = (void *)*((void *)v149 + 4);
            *((void *)v148 + 4) = __dsth;
            *((void *)v148 + 5) = *((void *)v149 + 5);
            *((void *)v148 + 6) = *((void *)v149 + 6);
            *((void *)v148 + 7) = *((void *)v149 + 7);
            v741 = (void *)*((void *)v149 + 8);
            *((void *)v148 + 8) = v741;
            *((void *)v148 + 9) = *((void *)v149 + 9);
            *((void *)v148 + 10) = *((void *)v149 + 10);
            *((void *)v148 + 11) = *((void *)v149 + 11);
            *((void *)v148 + 12) = *((void *)v149 + 12);
            *((void *)v148 + 13) = *((void *)v149 + 13);
            *((void *)v148 + 14) = *((void *)v149 + 14);
            uint64_t v182 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v183 = v182[16];
            v693 = &v149[v183];
            v705 = &v148[v183];
            uint64_t v184 = sub_1DFDEF360();
            v684 = *(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16);
            id v185 = v715;
            id v186 = v764;
            id v187 = v792;
            id v188 = __dsth;
            id v189 = v741;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v684(v705, v693, v184);
            uint64_t v190 = v182[17];
            uint64_t v191 = &v148[v190];
            uint64_t v192 = &v149[v190];
            *(void *)uint64_t v191 = *(void *)v192;
            *((void *)v191 + 1) = *((void *)v192 + 1);
            uint64_t v193 = v182[18];
            v793 = &v149[v193];
            __dsta = &v148[v193];
            uint64_t v194 = sub_1DFDEF130();
            uint64_t v195 = *(void *)(v194 - 8);
            char v196 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48);
            swift_bridgeObjectRetain();
            if (v196(v793, 1, v194))
            {
LABEL_54:
              sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
              memcpy(__dsta, v793, *(void *)(*(void *)(v197 - 8) + 64));
              goto LABEL_78;
            }
            (*(void (**)(char *, char *, uint64_t))(v195 + 16))(__dsta, v793, v194);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(__dsta, 0, 1, v194);
          }
LABEL_78:
          swift_storeEnumTagMultiPayload();
          __dstc = (int *)type metadata accessor for FeedPaywallConfig();
          uint64_t v338 = __dstc[5];
          uint64_t v339 = &v845[v338];
          uint64_t v340 = &v857[v338];
          int v341 = swift_getEnumCaseMultiPayload();
          char *v339 = *v340;
          if (v341 == 1)
          {
            id v342 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            uint64_t v343 = v342[5];
            v799 = &v339[v343];
            id v344 = &v340[v343];
            uint64_t v345 = sub_1DFDE7220();
            uint64_t v746 = *(void *)(v345 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v746 + 48))(v344, 1, v345))
            {
              sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(v799, v344, *(void *)(*(void *)(v346 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v746 + 16))(v799, v344, v345);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v746 + 56))(v799, 0, 1, v345);
            }
            *(void *)&v339[v342[6]] = *(void *)&v340[v342[6]];
            *(void *)&v339[v342[7]] = *(void *)&v340[v342[7]];
            *(void *)&v339[v342[8]] = *(void *)&v340[v342[8]];
            uint64_t v364 = v342[9];
            uint64_t v365 = *(void **)&v340[v364];
            *(void *)&v339[v364] = v365;
            uint64_t v366 = v342[10];
            v663 = *(void **)&v340[v366];
            *(void *)&v339[v366] = v663;
            uint64_t v367 = v342[11];
            v686 = *(void **)&v340[v367];
            *(void *)&v339[v367] = v686;
            uint64_t v368 = v342[12];
            v697 = *(void **)&v340[v368];
            *(void *)&v339[v368] = v697;
            uint64_t v369 = v342[13];
            v708 = *(void **)&v340[v369];
            *(void *)&v339[v369] = v708;
            uint64_t v370 = v342[14];
            v719 = *(void **)&v340[v370];
            *(void *)&v339[v370] = v719;
            uint64_t v371 = v342[15];
            v729 = *(void **)&v340[v371];
            *(void *)&v339[v371] = v729;
            uint64_t v372 = v342[16];
            v749 = *(void **)&v340[v372];
            *(void *)&v339[v372] = v749;
            uint64_t v373 = v342[17];
            v772 = *(void **)&v340[v373];
            *(void *)&v339[v373] = v772;
            uint64_t v374 = v342[18];
            v802 = *(void **)&v340[v374];
            *(void *)&v339[v374] = v802;
            uint64_t v375 = v342[19];
            uint64_t v376 = &v339[v375];
            uint64_t v377 = &v340[v375];
            *(void *)uint64_t v376 = *(void *)v377;
            *((void *)v376 + 1) = *((void *)v377 + 1);
            uint64_t v378 = v342[20];
            uint64_t v379 = &v339[v378];
            uint64_t v380 = &v340[v378];
            *(void *)uint64_t v379 = *(void *)v380;
            *((void *)v379 + 1) = *((void *)v380 + 1);
            uint64_t v381 = v342[21];
            uint64_t v382 = &v339[v381];
            v383 = &v340[v381];
            *(void *)uint64_t v382 = *(void *)v383;
            *((void *)v382 + 1) = *((void *)v383 + 1);
            uint64_t v384 = v342[22];
            v669 = &v340[v384];
            v675 = &v339[v384];
            uint64_t v385 = sub_1DFDEF360();
            v657 = *(void (**)(char *, char *, uint64_t))(*(void *)(v385 - 8) + 16);
            id v386 = v365;
            id v387 = v663;
            id v388 = v686;
            id v389 = v697;
            id v390 = v708;
            id v391 = v719;
            id v392 = v729;
            id v393 = v749;
            id v394 = v772;
            id v395 = v802;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v657(v675, v669, v385);
            uint64_t v396 = v342[23];
            uint64_t v397 = &v339[v396];
            uint64_t v398 = &v340[v396];
            *(void *)uint64_t v397 = *(void *)v398;
            *((void *)v397 + 1) = *((void *)v398 + 1);
            uint64_t v399 = v342[24];
            v773 = &v340[v399];
            v801 = &v339[v399];
            uint64_t v360 = sub_1DFDEF130();
            uint64_t v748 = *(void *)(v360 - 8);
            v400 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v748 + 48);
            uint64_t v362 = v773;
            swift_bridgeObjectRetain();
            if (!v400(v773, 1, v360)) {
              goto LABEL_85;
            }
LABEL_82:
            sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
            memcpy(v801, v362, *(void *)(*(void *)(v363 - 8) + 64));
            goto LABEL_86;
          }
          uint64_t v347 = (void *)*((void *)v340 + 1);
          *((void *)v339 + 1) = v347;
          v747 = (void *)*((void *)v340 + 2);
          *((void *)v339 + 2) = v747;
          v770 = (void *)*((void *)v340 + 3);
          *((void *)v339 + 3) = v770;
          v800 = (void *)*((void *)v340 + 4);
          *((void *)v339 + 4) = v800;
          *((void *)v339 + 5) = *((void *)v340 + 5);
          *((void *)v339 + 6) = *((void *)v340 + 6);
          *((void *)v339 + 7) = *((void *)v340 + 7);
          v728 = (void *)*((void *)v340 + 8);
          *((void *)v339 + 8) = v728;
          *((void *)v339 + 9) = *((void *)v340 + 9);
          *((void *)v339 + 10) = *((void *)v340 + 10);
          *((void *)v339 + 11) = *((void *)v340 + 11);
          *((void *)v339 + 12) = *((void *)v340 + 12);
          *((void *)v339 + 13) = *((void *)v340 + 13);
          *((void *)v339 + 14) = *((void *)v340 + 14);
          v348 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
          uint64_t v349 = v348[16];
          v685 = &v340[v349];
          v696 = &v339[v349];
          uint64_t v350 = sub_1DFDEF360();
          v681 = *(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 16);
          id v351 = v347;
          id v352 = v747;
          id v353 = v770;
          id v354 = v800;
          id v355 = v728;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v681(v696, v685, v350);
          uint64_t v356 = v348[17];
          uint64_t v357 = &v339[v356];
          uint64_t v358 = &v340[v356];
          *(void *)uint64_t v357 = *(void *)v358;
          *((void *)v357 + 1) = *((void *)v358 + 1);
          uint64_t v359 = v348[18];
          v771 = &v340[v359];
          v801 = &v339[v359];
          uint64_t v360 = sub_1DFDEF130();
          uint64_t v748 = *(void *)(v360 - 8);
          uint64_t v361 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v748 + 48);
          uint64_t v362 = v771;
          swift_bridgeObjectRetain();
          if (v361(v771, 1, v360)) {
            goto LABEL_82;
          }
LABEL_85:
          (*(void (**)(char *, char *, uint64_t))(v748 + 16))(v801, v362, v360);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v748 + 56))(v801, 0, 1, v360);
LABEL_86:
          swift_storeEnumTagMultiPayload();
          uint64_t v401 = __dstc[6];
          id v402 = &v845[v401];
          uint64_t v403 = &v857[v401];
          int v404 = swift_getEnumCaseMultiPayload();
          *id v402 = *v403;
          if (v404 == 1)
          {
            uint64_t v405 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            uint64_t v406 = v405[5];
            v803 = &v402[v406];
            uint64_t v407 = &v403[v406];
            uint64_t v408 = sub_1DFDE7220();
            uint64_t v750 = *(void *)(v408 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v750 + 48))(v407, 1, v408))
            {
              sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(v803, v407, *(void *)(*(void *)(v409 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v750 + 16))(v803, v407, v408);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v750 + 56))(v803, 0, 1, v408);
            }
            *(void *)&v402[v405[6]] = *(void *)&v403[v405[6]];
            *(void *)&v402[v405[7]] = *(void *)&v403[v405[7]];
            *(void *)&v402[v405[8]] = *(void *)&v403[v405[8]];
            uint64_t v427 = v405[9];
            v428 = *(void **)&v403[v427];
            *(void *)&v402[v427] = v428;
            uint64_t v429 = v405[10];
            v664 = *(void **)&v403[v429];
            *(void *)&v402[v429] = v664;
            uint64_t v430 = v405[11];
            v688 = *(void **)&v403[v430];
            *(void *)&v402[v430] = v688;
            uint64_t v431 = v405[12];
            v699 = *(void **)&v403[v431];
            *(void *)&v402[v431] = v699;
            uint64_t v432 = v405[13];
            v709 = *(void **)&v403[v432];
            *(void *)&v402[v432] = v709;
            uint64_t v433 = v405[14];
            v720 = *(void **)&v403[v433];
            *(void *)&v402[v433] = v720;
            uint64_t v434 = v405[15];
            v731 = *(void **)&v403[v434];
            *(void *)&v402[v434] = v731;
            uint64_t v435 = v405[16];
            v753 = *(void **)&v403[v435];
            *(void *)&v402[v435] = v753;
            uint64_t v436 = v405[17];
            v776 = *(void **)&v403[v436];
            *(void *)&v402[v436] = v776;
            uint64_t v437 = v405[18];
            v806 = *(void **)&v403[v437];
            *(void *)&v402[v437] = v806;
            uint64_t v438 = v405[19];
            uint64_t v439 = &v402[v438];
            v440 = &v403[v438];
            *(void *)uint64_t v439 = *(void *)v440;
            *((void *)v439 + 1) = *((void *)v440 + 1);
            uint64_t v441 = v405[20];
            uint64_t v442 = &v402[v441];
            v443 = &v403[v441];
            *(void *)uint64_t v442 = *(void *)v443;
            *((void *)v442 + 1) = *((void *)v443 + 1);
            uint64_t v444 = v405[21];
            uint64_t v445 = &v402[v444];
            v446 = &v403[v444];
            *(void *)uint64_t v445 = *(void *)v446;
            *((void *)v445 + 1) = *((void *)v446 + 1);
            uint64_t v447 = v405[22];
            v670 = &v403[v447];
            v676 = &v402[v447];
            uint64_t v448 = sub_1DFDEF360();
            v658 = *(void (**)(char *, char *, uint64_t))(*(void *)(v448 - 8) + 16);
            id v449 = v428;
            id v450 = v664;
            id v451 = v688;
            id v452 = v699;
            id v453 = v709;
            id v454 = v720;
            id v455 = v731;
            id v456 = v753;
            id v457 = v776;
            id v458 = v806;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v658(v676, v670, v448);
            uint64_t v459 = v405[23];
            v460 = &v402[v459];
            uint64_t v461 = &v403[v459];
            *(void *)v460 = *(void *)v461;
            *((void *)v460 + 1) = *((void *)v461 + 1);
            uint64_t v462 = v405[24];
            v777 = &v403[v462];
            v805 = &v402[v462];
            uint64_t v423 = sub_1DFDEF130();
            uint64_t v752 = *(void *)(v423 - 8);
            v463 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v752 + 48);
            v425 = v777;
            swift_bridgeObjectRetain();
            if (!v463(v777, 1, v423)) {
              goto LABEL_93;
            }
          }
          else
          {
            char v410 = (void *)*((void *)v403 + 1);
            *((void *)v402 + 1) = v410;
            v751 = (void *)*((void *)v403 + 2);
            *((void *)v402 + 2) = v751;
            v774 = (void *)*((void *)v403 + 3);
            *((void *)v402 + 3) = v774;
            v804 = (void *)*((void *)v403 + 4);
            *((void *)v402 + 4) = v804;
            *((void *)v402 + 5) = *((void *)v403 + 5);
            *((void *)v402 + 6) = *((void *)v403 + 6);
            *((void *)v402 + 7) = *((void *)v403 + 7);
            v730 = (void *)*((void *)v403 + 8);
            *((void *)v402 + 8) = v730;
            *((void *)v402 + 9) = *((void *)v403 + 9);
            *((void *)v402 + 10) = *((void *)v403 + 10);
            *((void *)v402 + 11) = *((void *)v403 + 11);
            *((void *)v402 + 12) = *((void *)v403 + 12);
            *((void *)v402 + 13) = *((void *)v403 + 13);
            *((void *)v402 + 14) = *((void *)v403 + 14);
            id v411 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v412 = v411[16];
            v687 = &v403[v412];
            v698 = &v402[v412];
            uint64_t v413 = sub_1DFDEF360();
            v682 = *(void (**)(char *, char *, uint64_t))(*(void *)(v413 - 8) + 16);
            id v414 = v410;
            id v415 = v751;
            id v416 = v774;
            id v417 = v804;
            id v418 = v730;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v682(v698, v687, v413);
            uint64_t v419 = v411[17];
            unint64_t v420 = &v402[v419];
            v421 = &v403[v419];
            *(void *)unint64_t v420 = *(void *)v421;
            *((void *)v420 + 1) = *((void *)v421 + 1);
            uint64_t v422 = v411[18];
            v775 = &v403[v422];
            v805 = &v402[v422];
            uint64_t v423 = sub_1DFDEF130();
            uint64_t v752 = *(void *)(v423 - 8);
            v424 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v752 + 48);
            v425 = v775;
            swift_bridgeObjectRetain();
            if (!v424(v775, 1, v423))
            {
LABEL_93:
              (*(void (**)(char *, char *, uint64_t))(v752 + 16))(v805, v425, v423);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v752 + 56))(v805, 0, 1, v423);
              goto LABEL_94;
            }
          }
          sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
          memcpy(v805, v425, *(void *)(*(void *)(v426 - 8) + 64));
LABEL_94:
          swift_storeEnumTagMultiPayload();
          uint64_t v464 = __dstc[7];
          v465 = &v845[v464];
          v466 = &v857[v464];
          uint64_t v467 = type metadata accessor for FeedPaywallType(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v465, v466, *(void *)(*(void *)(v467 - 8) + 64));
          }
          else
          {
            *(void *)v465 = *(void *)v466;
            sub_1DEC84AA4();
            uint64_t v469 = *(int *)(v468 + 48);
            uint64_t v470 = &v465[v469];
            uint64_t v471 = &v466[v469];
            uint64_t v472 = sub_1DFDEEE80();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v472 - 8) + 16))(v470, v471, v472);
            swift_storeEnumTagMultiPayload();
          }
          a3 = v873;
LABEL_98:
          swift_storeEnumTagMultiPayload();
LABEL_99:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_100:
          *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
          return a1;
        case 8u:
          *uint64_t v12 = *v13;
          v12[1] = v13[1];
          _OWORD v12[2] = v13[2];
          void v12[3] = v13[3];
          v791 = (void *)v13[4];
          v12[4] = v791;
          v837 = (void *)v13[5];
          void v12[5] = v837;
          v12[6] = v13[6];
          v12[7] = v13[7];
          v12[8] = v13[8];
          v12[9] = v13[9];
          v12[10] = v13[10];
          v874 = a3;
          uint64_t v158 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
          uint64_t v159 = v158[11];
          v740 = (char *)v13 + v159;
          v763 = (char *)v12 + v159;
          uint64_t v160 = sub_1DFDF8C20();
          v724 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v161 = v791;
          id v162 = v837;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v724(v763, v740, v160);
          v724((char *)v12 + v158[12], (char *)v13 + v158[12], v160);
          uint64_t v163 = v158[13];
          a3 = v874;
          *(void *)((char *)v12 + v163) = *(void *)((char *)v13 + v163);
          goto LABEL_98;
        case 9u:
          sub_1DEA53948();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v164 - 8) + 16))(v12, v13, v164);
          uint64_t v165 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
          BOOL v166 = (char *)v12 + v165;
          uint64_t v167 = (char *)v13 + v165;
          uint64_t v168 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
          goto LABEL_98;
        case 0xCu:
          uint64_t v170 = sub_1DFDF7010();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v170 - 8) + 16))(v12, v13, v170);
          uint64_t v171 = type metadata accessor for NewspaperMagazineFeedGroup();
          *(void *)((char *)v12 + *(int *)(v171 + 20)) = *(void *)((char *)v13 + *(int *)(v171 + 20));
          *(void *)((char *)v12 + *(int *)(v171 + 24)) = *(void *)((char *)v13 + *(int *)(v171 + 24));
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_98;
        case 0xDu:
          sub_1DEA5387C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v172 - 8) + 16))(v12, v13, v172);
          uint64_t v173 = type metadata accessor for CuratedMagazineFeedGroup();
          uint64_t v174 = *(int *)(v173 + 20);
          uint64_t v175 = (char *)v12 + v174;
          uint64_t v176 = (char *)v13 + v174;
          uint64_t v177 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v175, v176, v177);
          uint64_t v178 = *(int *)(v173 + 24);
          uint64_t v179 = (char *)v12 + v178;
          unint64_t v180 = (char *)v13 + v178;
          uint64_t v181 = sub_1DFDF8F10();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v180, v181);
          goto LABEL_98;
        default:
          *uint64_t v12 = *v13;
          v12[1] = v13[1];
          _OWORD v12[2] = v13[2];
          void v12[3] = v13[3];
          __dste = (void *)v13[4];
          v12[4] = __dste;
          void v12[5] = v13[5];
          v12[6] = v13[6];
          v12[7] = v13[7];
          v12[8] = v13[8];
          v12[9] = v13[9];
          uint64_t v853 = type metadata accessor for CategoriesMagazineFeedGroup();
          uint64_t v49 = *(int *)(v853 + 40);
          v759 = (char *)v13 + v49;
          v787 = (char *)v12 + v49;
          v868 = a3;
          uint64_t v50 = sub_1DFDF8C20();
          v737 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v51 = __dste;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v52 = v50;
          a3 = v868;
          v737(v787, v759, v52);
          *(void *)((char *)v12 + *(int *)(v853 + 44)) = *(void *)((char *)v13 + *(int *)(v853 + 44));
          goto LABEL_98;
      }
    case 0xCu:
      uint64_t v53 = sub_1DFDF6D40();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v12, v13, v53);
      goto LABEL_99;
    case 0x10u:
      sub_1DEA4B52C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v12, v13, v54);
      uint64_t v55 = *(int *)(type metadata accessor for SharedWithYouTodayFeedGroup() + 20);
      uint64_t v56 = (char *)v12 + v55;
      uint64_t v57 = (char *)v13 + v55;
      uint64_t v58 = sub_1DFDF7010();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      goto LABEL_99;
    case 0x11u:
      sub_1DEAC2768();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v12, v13, v59);
      goto LABEL_99;
    case 0x16u:
      uint64_t v60 = sub_1DFDF7010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(v12, v13, v60);
      uint64_t v61 = type metadata accessor for SavedStoriesTodayFeedGroup();
      *(void *)((char *)v12 + *(int *)(v61 + 20)) = *(void *)((char *)v13 + *(int *)(v61 + 20));
      goto LABEL_99;
    case 0x17u:
      uint64_t v62 = sub_1DFDF7010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(v12, v13, v62);
      uint64_t v63 = *(int *)(type metadata accessor for ChannelPickerTodayFeedGroup() + 20);
      unint64_t v64 = (void *)((char *)v12 + v63);
      uint64_t v65 = (void *)((char *)v13 + v63);
      *unint64_t v64 = *v65;
      v64[1] = v65[1];
      swift_bridgeObjectRetain();
      goto LABEL_99;
    default:
      uint64_t v19 = sub_1DFDF7010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v12, v13, v19);
      uint64_t v20 = (int *)type metadata accessor for CuratedTodayFeedGroup();
      uint64_t v21 = v20[5];
      uint64_t v22 = (void *)((char *)v12 + v21);
      uint64_t v23 = (void *)((char *)v13 + v21);
      *uint64_t v22 = *v23;
      v22[1] = v23[1];
      *(void *)((char *)v12 + v20[6]) = *(void *)((char *)v13 + v20[6]);
      uint64_t v24 = v20[7];
      v851 = (char *)v13 + v24;
      v861 = (char *)v12 + v24;
      v865 = a3;
      uint64_t v25 = sub_1DFDF8F10();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v27 = v25;
      a3 = v865;
      v26(v861, v851, v27);
      goto LABEL_99;
  }
}

uint64_t sub_1DF1C7FA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDE6AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA83724(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for TodayFeedGroup();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v23 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v12, v13, v23);
        uint64_t v24 = (int *)type metadata accessor for NewspaperTodayFeedGroup();
        *(void *)&v12[v24[5]] = *(void *)&v13[v24[5]];
        *(void *)&v12[v24[6]] = *(void *)&v13[v24[6]];
        *(void *)&v12[v24[7]] = *(void *)&v13[v24[7]];
        goto LABEL_64;
      case 2u:
        uint64_t v25 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v12, v13, v25);
        uint64_t v26 = (int *)type metadata accessor for LocalNewsTodayFeedGroup();
        *(void *)&v12[v26[5]] = *(void *)&v13[v26[5]];
        *(void *)&v12[v26[6]] = *(void *)&v13[v26[6]];
        uint64_t v27 = v26[7];
        uint64_t v248 = &v12[v27];
        uint64_t v252 = v26;
        uint64_t v28 = &v13[v27];
        uint64_t v29 = sub_1DFDF9EE0();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA350, MEMORY[0x1E4F80520], MEMORY[0x1E4FBB718]);
          memcpy(v248, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v248, v28, v29);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v248, 0, 1, v29);
        }
        *(void *)&v12[v252[8]] = *(void *)&v13[v252[8]];
        uint64_t v52 = v252[9];
        uint64_t v53 = &v12[v52];
        uint64_t v54 = &v13[v52];
        *(void *)uint64_t v53 = *(void *)v54;
        v53[8] = v54[8];
        goto LABEL_64;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
        uint64_t v32 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v12, v13, v32);
        goto LABEL_64;
      case 8u:
        uint64_t v33 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v12, v13, v33);
        uint64_t v34 = type metadata accessor for TopicTodayFeedGroup();
        v12[*(int *)(v34 + 20)] = v13[*(int *)(v34 + 20)];
        goto LABEL_64;
      case 9u:
        type metadata accessor for MagazineFeedGroup();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1DEA530F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v12, v13, v55);
            uint64_t v56 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
            uint64_t v57 = &v12[v56];
            uint64_t v58 = &v13[v56];
            uint64_t v59 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
            goto LABEL_63;
          case 2u:
          case 0xAu:
          case 0xBu:
            uint64_t v125 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v12, v13, v125);
            goto LABEL_63;
          case 3u:
            sub_1DEA52F58();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v12, v13, v60);
            uint64_t v61 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
            uint64_t v62 = &v12[v61];
            uint64_t v63 = &v13[v61];
            uint64_t v64 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
            goto LABEL_63;
          case 4u:
            long long v65 = *((_OWORD *)v13 + 1);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            *((_OWORD *)v12 + 1) = v65;
            *((void *)v12 + 4) = *((void *)v13 + 4);
            *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
            *((void *)v12 + 7) = *((void *)v13 + 7);
            *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
            uint64_t v66 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
            uint64_t v67 = v66[10];
            uint64_t v68 = &v12[v67];
            uint64_t v69 = &v13[v67];
            uint64_t v70 = sub_1DFDF8C20();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
            *(void *)&v12[v66[11]] = *(void *)&v13[v66[11]];
            *(void *)&v12[v66[12]] = *(void *)&v13[v66[12]];
            goto LABEL_63;
          case 5u:
            long long v71 = *((_OWORD *)v13 + 1);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            *((_OWORD *)v12 + 1) = v71;
            long long v72 = *((_OWORD *)v13 + 3);
            *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
            *((_OWORD *)v12 + 3) = v72;
            *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
            uint64_t v73 = type metadata accessor for MyMagazinesMagazineFeedGroup();
            uint64_t v74 = *(int *)(v73 + 40);
            __dstb = &v12[v74];
            uint64_t v249 = (int *)v73;
            uint64_t v240 = &v13[v74];
            uint64_t v75 = sub_1DFDF8C20();
            uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32);
            v76(__dstb, v240, v75);
            v76(&v12[v249[11]], &v13[v249[11]], v75);
            *(void *)&v12[v249[12]] = *(void *)&v13[v249[12]];
            uint64_t v77 = v249[13];
            uint64_t v78 = &v12[v77];
            uint64_t v79 = &v13[v77];
            sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
            uint64_t v81 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
            *(void *)&v78[*(int *)(v81 + 20)] = *(void *)&v79[*(int *)(v81 + 20)];
            uint64_t v82 = *(int *)(v81 + 24);
            uint64_t v83 = &v78[v82];
            uint64_t v84 = &v79[v82];
            sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
            *(void *)&v12[v249[14]] = *(void *)&v13[v249[14]];
            v12[v249[15]] = v13[v249[15]];
            uint64_t v86 = v249[16];
            uint64_t v87 = &v12[v86];
            uint64_t v88 = &v13[v86];
            uint64_t v89 = sub_1DFDF8F10();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
            uint64_t v90 = v249[17];
            __dst = &v12[v90];
            uint64_t v91 = &v13[v90];
            uint64_t v92 = sub_1DFDF7CB0();
            uint64_t v93 = *(void *)(v92 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
            {
              sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
              memcpy(__dst, v91, *(void *)(*(void *)(v94 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v93 + 32))(__dst, v91, v92);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(__dst, 0, 1, v92);
            }
            *(void *)&v12[v249[18]] = *(void *)&v13[v249[18]];
            goto LABEL_63;
          case 6u:
            sub_1DEA536E4();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v12, v13, v95);
            uint64_t v96 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
            uint64_t v97 = &v12[v96];
            uint64_t v98 = &v13[v96];
            uint64_t v99 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
            goto LABEL_63;
          case 7u:
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            uint64_t v100 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
            uint64_t v101 = v100[5];
            uint64_t v241 = &v13[v101];
            __dstc = &v12[v101];
            uint64_t v102 = sub_1DFDF8C20();
            uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32);
            v103(__dstc, v241, v102);
            v103(&v12[v100[6]], &v13[v100[6]], v102);
            *(void *)&v12[v100[7]] = *(void *)&v13[v100[7]];
            *(void *)&v12[v100[8]] = *(void *)&v13[v100[8]];
            uint64_t v104 = v100[9];
            uint64_t v105 = &v12[v104];
            uint64_t v106 = &v13[v104];
            type metadata accessor for FeedPaywallModel(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            *uint64_t v105 = *v106;
            __dsta = v106;
            uint64_t v250 = v105;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v108 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v109 = v108[5];
              uint64_t v235 = &v105[v109];
              uint64_t v110 = &v106[v109];
              uint64_t v111 = sub_1DFDE7220();
              uint64_t v112 = *(void *)(v111 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
              {
                sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v235, v110, *(void *)(*(void *)(v113 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v235, v110, v111);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v235, 0, 1, v111);
              }
              *(void *)&v250[v108[6]] = *(void *)&__dsta[v108[6]];
              *(void *)&v250[v108[7]] = *(void *)&__dsta[v108[7]];
              *(void *)&v250[v108[8]] = *(void *)&__dsta[v108[8]];
              *(void *)&v250[v108[9]] = *(void *)&__dsta[v108[9]];
              *(void *)&v250[v108[10]] = *(void *)&__dsta[v108[10]];
              *(void *)&v250[v108[11]] = *(void *)&__dsta[v108[11]];
              *(void *)&v250[v108[12]] = *(void *)&__dsta[v108[12]];
              *(void *)&v250[v108[13]] = *(void *)&__dsta[v108[13]];
              *(void *)&v250[v108[14]] = *(void *)&__dsta[v108[14]];
              *(void *)&v250[v108[15]] = *(void *)&__dsta[v108[15]];
              *(void *)&v250[v108[16]] = *(void *)&__dsta[v108[16]];
              *(void *)&v250[v108[17]] = *(void *)&__dsta[v108[17]];
              *(void *)&v250[v108[18]] = *(void *)&__dsta[v108[18]];
              *(_OWORD *)&v250[v108[19]] = *(_OWORD *)&__dsta[v108[19]];
              *(_OWORD *)&v250[v108[20]] = *(_OWORD *)&__dsta[v108[20]];
              *(_OWORD *)&v250[v108[21]] = *(_OWORD *)&__dsta[v108[21]];
              uint64_t v149 = v108[22];
              uint64_t v238 = &v250[v149];
              int v150 = &__dsta[v149];
              uint64_t v151 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v238, v150, v151);
              *(_OWORD *)&v250[v108[23]] = *(_OWORD *)&__dsta[v108[23]];
              uint64_t v152 = v108[24];
              uint64_t v153 = &v250[v152];
              uint64_t v154 = &__dsta[v152];
              uint64_t v155 = sub_1DFDEF130();
              uint64_t v156 = *(void *)(v155 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v153, v154, *(void *)(*(void *)(v157 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v153, v154, v155);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
              }
            }
            else
            {
              *(_OWORD *)(v105 + 8) = *(_OWORD *)(v106 + 8);
              *(_OWORD *)(v105 + 24) = *(_OWORD *)(v106 + 24);
              *(_OWORD *)(v105 + 40) = *(_OWORD *)(v106 + 40);
              uint64_t v138 = *((void *)v106 + 8);
              *((void *)v105 + 7) = *((void *)v106 + 7);
              *((void *)v105 + 8) = v138;
              *(_OWORD *)(v105 + 72) = *(_OWORD *)(v106 + 72);
              *(_OWORD *)(v105 + 88) = *(_OWORD *)(v106 + 88);
              *(_OWORD *)(v105 + 104) = *(_OWORD *)(v106 + 104);
              uint64_t v139 = v105;
              char v140 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v141 = v140[16];
              uint64_t v236 = &v139[v141];
              uint64_t v142 = &v106[v141];
              uint64_t v143 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v236, v142, v143);
              *(_OWORD *)&v139[v140[17]] = *(_OWORD *)&v106[v140[17]];
              uint64_t v144 = v140[18];
              uint64_t v237 = &v139[v144];
              uint64_t v145 = &v106[v144];
              uint64_t v146 = sub_1DFDEF130();
              uint64_t v147 = *(void *)(v146 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48))(v145, 1, v146))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v237, v145, *(void *)(*(void *)(v148 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v237, v145, v146);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v237, 0, 1, v146);
              }
            }
            swift_storeEnumTagMultiPayload();
            uint64_t v239 = (int *)type metadata accessor for FeedPaywallConfig();
            uint64_t v158 = v239[5];
            uint64_t v159 = &v250[v158];
            uint64_t v160 = &__dsta[v158];
            int v161 = swift_getEnumCaseMultiPayload();
            char *v159 = *v160;
            if (v161 == 1)
            {
              id v162 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v163 = v162[5];
              uint64_t v226 = &v159[v163];
              uint64_t v164 = &v160[v163];
              uint64_t v165 = sub_1DFDE7220();
              uint64_t v222 = *(void *)(v165 - 8);
              uint64_t v224 = v164;
              BOOL v166 = v164;
              uint64_t v167 = v165;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v166, 1, v165))
              {
                sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v226, v224, *(void *)(*(void *)(v168 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v226, v224, v167);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v226, 0, 1, v167);
              }
              *(void *)&v159[v162[6]] = *(void *)&v160[v162[6]];
              *(void *)&v159[v162[7]] = *(void *)&v160[v162[7]];
              *(void *)&v159[v162[8]] = *(void *)&v160[v162[8]];
              *(void *)&v159[v162[9]] = *(void *)&v160[v162[9]];
              *(void *)&v159[v162[10]] = *(void *)&v160[v162[10]];
              *(void *)&v159[v162[11]] = *(void *)&v160[v162[11]];
              *(void *)&v159[v162[12]] = *(void *)&v160[v162[12]];
              *(void *)&v159[v162[13]] = *(void *)&v160[v162[13]];
              *(void *)&v159[v162[14]] = *(void *)&v160[v162[14]];
              *(void *)&v159[v162[15]] = *(void *)&v160[v162[15]];
              *(void *)&v159[v162[16]] = *(void *)&v160[v162[16]];
              *(void *)&v159[v162[17]] = *(void *)&v160[v162[17]];
              *(void *)&v159[v162[18]] = *(void *)&v160[v162[18]];
              *(_OWORD *)&v159[v162[19]] = *(_OWORD *)&v160[v162[19]];
              *(_OWORD *)&v159[v162[20]] = *(_OWORD *)&v160[v162[20]];
              *(_OWORD *)&v159[v162[21]] = *(_OWORD *)&v160[v162[21]];
              uint64_t v179 = v162[22];
              uint64_t v229 = &v159[v179];
              unint64_t v180 = &v160[v179];
              uint64_t v181 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 32))(v229, v180, v181);
              *(_OWORD *)&v159[v162[23]] = *(_OWORD *)&v160[v162[23]];
              uint64_t v182 = v162[24];
              id v230 = &v159[v182];
              uint64_t v183 = &v160[v182];
              uint64_t v184 = sub_1DFDEF130();
              uint64_t v185 = *(void *)(v184 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v185 + 48))(v183, 1, v184))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v230, v183, *(void *)(*(void *)(v186 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v230, v183, v184);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v185 + 56))(v230, 0, 1, v184);
              }
            }
            else
            {
              *(_OWORD *)(v159 + 8) = *(_OWORD *)(v160 + 8);
              *(_OWORD *)(v159 + 24) = *(_OWORD *)(v160 + 24);
              *(_OWORD *)(v159 + 40) = *(_OWORD *)(v160 + 40);
              uint64_t v169 = *((void *)v160 + 8);
              *((void *)v159 + 7) = *((void *)v160 + 7);
              *((void *)v159 + 8) = v169;
              *(_OWORD *)(v159 + 72) = *(_OWORD *)(v160 + 72);
              *(_OWORD *)(v159 + 88) = *(_OWORD *)(v160 + 88);
              *(_OWORD *)(v159 + 104) = *(_OWORD *)(v160 + 104);
              uint64_t v170 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v171 = v170[16];
              uint64_t v227 = &v159[v171];
              uint64_t v172 = &v160[v171];
              uint64_t v173 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v227, v172, v173);
              *(_OWORD *)&v159[v170[17]] = *(_OWORD *)&v160[v170[17]];
              uint64_t v174 = v170[18];
              id v228 = &v159[v174];
              uint64_t v175 = &v160[v174];
              uint64_t v176 = sub_1DFDEF130();
              uint64_t v177 = *(void *)(v176 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v175, 1, v176))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v228, v175, *(void *)(*(void *)(v178 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v228, v175, v176);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v228, 0, 1, v176);
              }
            }
            swift_storeEnumTagMultiPayload();
            uint64_t v187 = v239[6];
            id v188 = &v250[v187];
            id v189 = &__dsta[v187];
            int v190 = swift_getEnumCaseMultiPayload();
            *id v188 = *v189;
            if (v190 == 1)
            {
              uint64_t v191 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v192 = v191[5];
              uint64_t v231 = &v188[v192];
              uint64_t v193 = &v189[v192];
              uint64_t v194 = sub_1DFDE7220();
              uint64_t v223 = *(void *)(v194 - 8);
              uint64_t v225 = v193;
              uint64_t v195 = v193;
              uint64_t v196 = v194;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v223 + 48))(v195, 1, v194))
              {
                sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v231, v225, *(void *)(*(void *)(v197 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v223 + 32))(v231, v225, v196);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v223 + 56))(v231, 0, 1, v196);
              }
              *(void *)&v188[v191[6]] = *(void *)&v189[v191[6]];
              *(void *)&v188[v191[7]] = *(void *)&v189[v191[7]];
              *(void *)&v188[v191[8]] = *(void *)&v189[v191[8]];
              *(void *)&v188[v191[9]] = *(void *)&v189[v191[9]];
              *(void *)&v188[v191[10]] = *(void *)&v189[v191[10]];
              *(void *)&v188[v191[11]] = *(void *)&v189[v191[11]];
              *(void *)&v188[v191[12]] = *(void *)&v189[v191[12]];
              *(void *)&v188[v191[13]] = *(void *)&v189[v191[13]];
              *(void *)&v188[v191[14]] = *(void *)&v189[v191[14]];
              *(void *)&v188[v191[15]] = *(void *)&v189[v191[15]];
              *(void *)&v188[v191[16]] = *(void *)&v189[v191[16]];
              *(void *)&v188[v191[17]] = *(void *)&v189[v191[17]];
              *(void *)&v188[v191[18]] = *(void *)&v189[v191[18]];
              *(_OWORD *)&v188[v191[19]] = *(_OWORD *)&v189[v191[19]];
              *(_OWORD *)&v188[v191[20]] = *(_OWORD *)&v189[v191[20]];
              *(_OWORD *)&v188[v191[21]] = *(_OWORD *)&v189[v191[21]];
              uint64_t v208 = v191[22];
              uint64_t v234 = &v188[v208];
              uint64_t v209 = &v189[v208];
              uint64_t v210 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(v234, v209, v210);
              *(_OWORD *)&v188[v191[23]] = *(_OWORD *)&v189[v191[23]];
              uint64_t v211 = v191[24];
              uint64_t v233 = &v188[v211];
              uint64_t v204 = &v189[v211];
              uint64_t v205 = sub_1DFDEF130();
              uint64_t v206 = *(void *)(v205 - 8);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205)) {
                goto LABEL_59;
              }
            }
            else
            {
              *(_OWORD *)(v188 + 8) = *(_OWORD *)(v189 + 8);
              *(_OWORD *)(v188 + 24) = *(_OWORD *)(v189 + 24);
              *(_OWORD *)(v188 + 40) = *(_OWORD *)(v189 + 40);
              uint64_t v198 = *((void *)v189 + 8);
              *((void *)v188 + 7) = *((void *)v189 + 7);
              *((void *)v188 + 8) = v198;
              *(_OWORD *)(v188 + 72) = *(_OWORD *)(v189 + 72);
              *(_OWORD *)(v188 + 88) = *(_OWORD *)(v189 + 88);
              *(_OWORD *)(v188 + 104) = *(_OWORD *)(v189 + 104);
              uint64_t v199 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v200 = v199[16];
              uint64_t v232 = &v188[v200];
              uint64_t v201 = &v189[v200];
              uint64_t v202 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 32))(v232, v201, v202);
              *(_OWORD *)&v188[v199[17]] = *(_OWORD *)&v189[v199[17]];
              uint64_t v203 = v199[18];
              uint64_t v233 = &v188[v203];
              uint64_t v204 = &v189[v203];
              uint64_t v205 = sub_1DFDEF130();
              uint64_t v206 = *(void *)(v205 - 8);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205))
              {
LABEL_59:
                (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v233, v204, v205);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v206 + 56))(v233, 0, 1, v205);
                goto LABEL_60;
              }
            }
            sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
            memcpy(v233, v204, *(void *)(*(void *)(v207 - 8) + 64));
LABEL_60:
            swift_storeEnumTagMultiPayload();
            uint64_t v212 = v239[7];
            uint64_t v213 = &v250[v212];
            uint64_t v214 = &__dsta[v212];
            uint64_t v215 = type metadata accessor for FeedPaywallType(0);
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v213 = *(void *)v214;
              sub_1DEC84AA4();
              uint64_t v217 = *(int *)(v216 + 48);
              id v218 = &v213[v217];
              uint64_t v219 = &v214[v217];
              uint64_t v220 = sub_1DFDEEE80();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 32))(v218, v219, v220);
              swift_storeEnumTagMultiPayload();
            }
LABEL_63:
            swift_storeEnumTagMultiPayload();
LABEL_64:
            swift_storeEnumTagMultiPayload();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
            goto LABEL_65;
          case 8u:
            long long v114 = *((_OWORD *)v13 + 1);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            *((_OWORD *)v12 + 1) = v114;
            long long v115 = *((_OWORD *)v13 + 3);
            *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
            *((_OWORD *)v12 + 3) = v115;
            *((void *)v12 + 8) = *((void *)v13 + 8);
            *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
            uint64_t v116 = type metadata accessor for RecommendedIssuesMagazineFeedGroup();
            uint64_t v117 = *(int *)(v116 + 44);
            __dstd = &v12[v117];
            uint64_t v251 = v116;
            uint64_t v242 = &v13[v117];
            uint64_t v118 = sub_1DFDF8C20();
            id v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32);
            v119(__dstd, v242, v118);
            v119(&v12[*(int *)(v251 + 48)], &v13[*(int *)(v251 + 48)], v118);
            *(void *)&v12[*(int *)(v251 + 52)] = *(void *)&v13[*(int *)(v251 + 52)];
            goto LABEL_63;
          case 9u:
            sub_1DEA53948();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v12, v13, v120);
            uint64_t v121 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
            uint64_t v122 = &v12[v121];
            long long v123 = &v13[v121];
            uint64_t v124 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
            goto LABEL_63;
          case 0xCu:
            uint64_t v126 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v12, v13, v126);
            uint64_t v127 = type metadata accessor for NewspaperMagazineFeedGroup();
            *(void *)&v12[*(int *)(v127 + 20)] = *(void *)&v13[*(int *)(v127 + 20)];
            *(void *)&v12[*(int *)(v127 + 24)] = *(void *)&v13[*(int *)(v127 + 24)];
            goto LABEL_63;
          case 0xDu:
            sub_1DEA5387C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v12, v13, v128);
            uint64_t v129 = type metadata accessor for CuratedMagazineFeedGroup();
            uint64_t v130 = *(int *)(v129 + 20);
            uint64_t v131 = &v12[v130];
            uint64_t v132 = &v13[v130];
            uint64_t v133 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
            uint64_t v134 = *(int *)(v129 + 24);
            uint64_t v135 = &v12[v134];
            uint64_t v136 = &v13[v134];
            uint64_t v137 = sub_1DFDF8F10();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
            goto LABEL_63;
          default:
            long long v35 = *((_OWORD *)v13 + 1);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            *((_OWORD *)v12 + 1) = v35;
            *((void *)v12 + 4) = *((void *)v13 + 4);
            *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
            *((void *)v12 + 7) = *((void *)v13 + 7);
            *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
            uint64_t v36 = type metadata accessor for CategoriesMagazineFeedGroup();
            uint64_t v37 = *(int *)(v36 + 40);
            uint64_t v38 = &v12[v37];
            uint64_t v39 = &v13[v37];
            uint64_t v40 = sub_1DFDF8C20();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
            *(void *)&v12[*(int *)(v36 + 44)] = *(void *)&v13[*(int *)(v36 + 44)];
            goto LABEL_63;
        }
      case 0xCu:
        uint64_t v41 = sub_1DFDF6D40();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v12, v13, v41);
        goto LABEL_64;
      case 0x10u:
        sub_1DEA4B52C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v12, v13, v42);
        uint64_t v43 = *(int *)(type metadata accessor for SharedWithYouTodayFeedGroup() + 20);
        uint64_t v44 = &v12[v43];
        uint64_t v45 = &v13[v43];
        uint64_t v46 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
        goto LABEL_64;
      case 0x11u:
        sub_1DEAC2768();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v12, v13, v47);
        goto LABEL_64;
      case 0x16u:
        uint64_t v48 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v12, v13, v48);
        uint64_t v49 = type metadata accessor for SavedStoriesTodayFeedGroup();
        *(void *)&v12[*(int *)(v49 + 20)] = *(void *)&v13[*(int *)(v49 + 20)];
        goto LABEL_64;
      case 0x17u:
        uint64_t v50 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v12, v13, v50);
        uint64_t v51 = type metadata accessor for ChannelPickerTodayFeedGroup();
        *(_OWORD *)&v12[*(int *)(v51 + 20)] = *(_OWORD *)&v13[*(int *)(v51 + 20)];
        goto LABEL_64;
      default:
        uint64_t v17 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v12, v13, v17);
        int v18 = (int *)type metadata accessor for CuratedTodayFeedGroup();
        *(_OWORD *)&v12[v18[5]] = *(_OWORD *)&v13[v18[5]];
        *(void *)&v12[v18[6]] = *(void *)&v13[v18[6]];
        uint64_t v19 = v18[7];
        uint64_t v20 = &v12[v19];
        uint64_t v21 = &v13[v19];
        uint64_t v22 = sub_1DFDF8F10();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        goto LABEL_64;
    }
  }
  sub_1DE9F1790(0, &qword_1EBAAAF80, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, MEMORY[0x1E4FBB718]);
  memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_65:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DF1CA6B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDE6AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA83724(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for TodayFeedGroup();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v32 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v12, v13, v32);
          uint64_t v33 = (int *)type metadata accessor for NewspaperTodayFeedGroup();
          *(void *)&v12[v33[5]] = *(void *)&v13[v33[5]];
          *(void *)&v12[v33[6]] = *(void *)&v13[v33[6]];
          *(void *)&v12[v33[7]] = *(void *)&v13[v33[7]];
          goto LABEL_100;
        case 2u:
          uint64_t v34 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v12, v13, v34);
          long long v35 = (int *)type metadata accessor for LocalNewsTodayFeedGroup();
          *(void *)&v12[v35[5]] = *(void *)&v13[v35[5]];
          *(void *)&v12[v35[6]] = *(void *)&v13[v35[6]];
          uint64_t v459 = v35;
          uint64_t v36 = v35[7];
          __dst = &v12[v36];
          uint64_t v37 = &v13[v36];
          uint64_t v38 = sub_1DFDF9EE0();
          uint64_t v39 = *(void *)(v38 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
          {
            sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA350, MEMORY[0x1E4F80520], MEMORY[0x1E4FBB718]);
            memcpy(__dst, v37, *(void *)(*(void *)(v40 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v39 + 32))(__dst, v37, v38);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
          }
          *(void *)&v12[v459[8]] = *(void *)&v13[v459[8]];
          uint64_t v90 = v459[9];
          uint64_t v91 = &v12[v90];
          uint64_t v92 = &v13[v90];
          *(void *)uint64_t v91 = *(void *)v92;
          v91[8] = v92[8];
          goto LABEL_100;
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 0xAu:
        case 0xBu:
        case 0xDu:
        case 0xEu:
        case 0xFu:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
          uint64_t v41 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v12, v13, v41);
          goto LABEL_100;
        case 8u:
          uint64_t v42 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v12, v13, v42);
          uint64_t v43 = type metadata accessor for TopicTodayFeedGroup();
          v12[*(int *)(v43 + 20)] = v13[*(int *)(v43 + 20)];
          goto LABEL_100;
        case 9u:
          type metadata accessor for MagazineFeedGroup();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              sub_1DEA530F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v12, v13, v96);
              uint64_t v97 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
              uint64_t v98 = &v12[v97];
              uint64_t v99 = &v13[v97];
              uint64_t v100 = sub_1DFDF7010();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
              goto LABEL_99;
            case 2u:
            case 0xAu:
            case 0xBu:
              uint64_t v166 = sub_1DFDF7010();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 32))(v12, v13, v166);
              goto LABEL_99;
            case 3u:
              sub_1DEA52F58();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v12, v13, v101);
              uint64_t v102 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
              uint64_t v103 = &v12[v102];
              uint64_t v104 = &v13[v102];
              uint64_t v105 = sub_1DFDF7010();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
              goto LABEL_99;
            case 4u:
              long long v106 = *((_OWORD *)v13 + 1);
              *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
              *((_OWORD *)v12 + 1) = v106;
              *((void *)v12 + 4) = *((void *)v13 + 4);
              *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
              *((void *)v12 + 7) = *((void *)v13 + 7);
              *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
              uint64_t v107 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
              uint64_t v108 = v107[10];
              uint64_t v109 = &v12[v108];
              uint64_t v110 = &v13[v108];
              uint64_t v111 = sub_1DFDF8C20();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
              *(void *)&v12[v107[11]] = *(void *)&v13[v107[11]];
              *(void *)&v12[v107[12]] = *(void *)&v13[v107[12]];
              goto LABEL_99;
            case 5u:
              long long v112 = *((_OWORD *)v13 + 1);
              *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
              *((_OWORD *)v12 + 1) = v112;
              long long v113 = *((_OWORD *)v13 + 3);
              *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
              *((_OWORD *)v12 + 3) = v113;
              *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
              uint64_t v114 = type metadata accessor for MyMagazinesMagazineFeedGroup();
              uint64_t v115 = *(int *)(v114 + 40);
              v460 = &v12[v115];
              uint64_t v469 = (int *)v114;
              id v456 = &v13[v115];
              uint64_t v116 = sub_1DFDF8C20();
              uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32);
              v117(v460, v456, v116);
              v117(&v12[v469[11]], &v13[v469[11]], v116);
              *(void *)&v12[v469[12]] = *(void *)&v13[v469[12]];
              uint64_t v118 = v469[13];
              id v119 = &v12[v118];
              uint64_t v120 = &v13[v118];
              sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v119, v120, v121);
              uint64_t v122 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
              *(void *)&v119[*(int *)(v122 + 20)] = *(void *)&v120[*(int *)(v122 + 20)];
              uint64_t v123 = *(int *)(v122 + 24);
              uint64_t v124 = &v119[v123];
              uint64_t v125 = &v120[v123];
              sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v124, v125, v126);
              *(void *)&v12[v469[14]] = *(void *)&v13[v469[14]];
              v12[v469[15]] = v13[v469[15]];
              uint64_t v127 = v469[16];
              uint64_t v128 = &v12[v127];
              uint64_t v129 = &v13[v127];
              uint64_t v130 = sub_1DFDF8F10();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
              uint64_t v131 = v469[17];
              uint64_t v461 = &v12[v131];
              uint64_t v132 = &v13[v131];
              uint64_t v133 = sub_1DFDF7CB0();
              uint64_t v134 = *(void *)(v133 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
                memcpy(v461, v132, *(void *)(*(void *)(v135 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v461, v132, v133);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v461, 0, 1, v133);
              }
              *(void *)&v12[v469[18]] = *(void *)&v13[v469[18]];
              goto LABEL_99;
            case 6u:
              sub_1DEA536E4();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v12, v13, v136);
              uint64_t v137 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
              uint64_t v138 = &v12[v137];
              uint64_t v139 = &v13[v137];
              uint64_t v140 = sub_1DFDF7010();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v138, v139, v140);
              goto LABEL_99;
            case 7u:
              *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
              uint64_t v141 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
              uint64_t v142 = v141[5];
              id v457 = &v13[v142];
              uint64_t v462 = &v12[v142];
              uint64_t v143 = sub_1DFDF8C20();
              uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32);
              v144(v462, v457, v143);
              v144(&v12[v141[6]], &v13[v141[6]], v143);
              *(void *)&v12[v141[7]] = *(void *)&v13[v141[7]];
              *(void *)&v12[v141[8]] = *(void *)&v13[v141[8]];
              uint64_t v145 = v141[9];
              uint64_t v146 = &v12[v145];
              uint64_t v147 = &v13[v145];
              type metadata accessor for FeedPaywallModel(0);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              char *v146 = *v147;
              v463 = v147;
              uint64_t v470 = v146;
              if (EnumCaseMultiPayload == 1)
              {
                uint64_t v149 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                uint64_t v150 = v149[5];
                id v450 = &v146[v150];
                uint64_t v151 = &v147[v150];
                uint64_t v152 = sub_1DFDE7220();
                uint64_t v153 = *(void *)(v152 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v151, 1, v152))
                {
                  sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                  memcpy(v450, v151, *(void *)(*(void *)(v154 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v450, v151, v152);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v450, 0, 1, v152);
                }
                *(void *)&v470[v149[6]] = *(void *)&v463[v149[6]];
                *(void *)&v470[v149[7]] = *(void *)&v463[v149[7]];
                *(void *)&v470[v149[8]] = *(void *)&v463[v149[8]];
                *(void *)&v470[v149[9]] = *(void *)&v463[v149[9]];
                *(void *)&v470[v149[10]] = *(void *)&v463[v149[10]];
                *(void *)&v470[v149[11]] = *(void *)&v463[v149[11]];
                *(void *)&v470[v149[12]] = *(void *)&v463[v149[12]];
                *(void *)&v470[v149[13]] = *(void *)&v463[v149[13]];
                *(void *)&v470[v149[14]] = *(void *)&v463[v149[14]];
                *(void *)&v470[v149[15]] = *(void *)&v463[v149[15]];
                *(void *)&v470[v149[16]] = *(void *)&v463[v149[16]];
                *(void *)&v470[v149[17]] = *(void *)&v463[v149[17]];
                *(void *)&v470[v149[18]] = *(void *)&v463[v149[18]];
                *(_OWORD *)&v470[v149[19]] = *(_OWORD *)&v463[v149[19]];
                *(_OWORD *)&v470[v149[20]] = *(_OWORD *)&v463[v149[20]];
                *(_OWORD *)&v470[v149[21]] = *(_OWORD *)&v463[v149[21]];
                uint64_t v275 = v149[22];
                id v453 = &v470[v275];
                uint64_t v276 = &v463[v275];
                uint64_t v277 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 32))(v453, v276, v277);
                *(_OWORD *)&v470[v149[23]] = *(_OWORD *)&v463[v149[23]];
                uint64_t v278 = v149[24];
                uint64_t v279 = &v470[v278];
                uint64_t v280 = &v463[v278];
                uint64_t v281 = sub_1DFDEF130();
                uint64_t v282 = *(void *)(v281 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))(v280, 1, v281))
                {
                  sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                  memcpy(v279, v280, *(void *)(*(void *)(v283 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v282 + 32))(v279, v280, v281);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v282 + 56))(v279, 0, 1, v281);
                }
              }
              else
              {
                *(_OWORD *)(v146 + 8) = *(_OWORD *)(v147 + 8);
                *(_OWORD *)(v146 + 24) = *(_OWORD *)(v147 + 24);
                *(_OWORD *)(v146 + 40) = *(_OWORD *)(v147 + 40);
                uint64_t v179 = *((void *)v147 + 8);
                *((void *)v146 + 7) = *((void *)v147 + 7);
                *((void *)v146 + 8) = v179;
                *(_OWORD *)(v146 + 72) = *(_OWORD *)(v147 + 72);
                *(_OWORD *)(v146 + 88) = *(_OWORD *)(v147 + 88);
                *(_OWORD *)(v146 + 104) = *(_OWORD *)(v147 + 104);
                unint64_t v180 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                uint64_t v181 = v180[16];
                uint64_t v182 = v146;
                uint64_t v183 = &v146[v181];
                id v451 = &v147[v181];
                uint64_t v184 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32))(v183, v451, v184);
                *(_OWORD *)&v182[v180[17]] = *(_OWORD *)&v147[v180[17]];
                uint64_t v185 = v180[18];
                id v452 = &v182[v185];
                uint64_t v186 = &v147[v185];
                uint64_t v187 = sub_1DFDEF130();
                uint64_t v188 = *(void *)(v187 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(v186, 1, v187))
                {
                  sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                  memcpy(v452, v186, *(void *)(*(void *)(v189 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v452, v186, v187);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v188 + 56))(v452, 0, 1, v187);
                }
              }
              swift_storeEnumTagMultiPayload();
              id v454 = (int *)type metadata accessor for FeedPaywallConfig();
              uint64_t v295 = v454[5];
              uint64_t v296 = &v470[v295];
              uint64_t v297 = &v463[v295];
              int v298 = swift_getEnumCaseMultiPayload();
              char *v296 = *v297;
              if (v298 == 1)
              {
                uint64_t v299 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                uint64_t v300 = v299[5];
                uint64_t v439 = &v296[v300];
                uint64_t v301 = &v297[v300];
                uint64_t v302 = sub_1DFDE7220();
                uint64_t v433 = *(void *)(v302 - 8);
                uint64_t v437 = v301;
                uint64_t v303 = v301;
                uint64_t v304 = v302;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v433 + 48))(v303, 1, v302))
                {
                  sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                  memcpy(v439, v437, *(void *)(*(void *)(v305 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v433 + 32))(v439, v437, v304);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v433 + 56))(v439, 0, 1, v304);
                }
                *(void *)&v296[v299[6]] = *(void *)&v297[v299[6]];
                *(void *)&v296[v299[7]] = *(void *)&v297[v299[7]];
                *(void *)&v296[v299[8]] = *(void *)&v297[v299[8]];
                *(void *)&v296[v299[9]] = *(void *)&v297[v299[9]];
                *(void *)&v296[v299[10]] = *(void *)&v297[v299[10]];
                *(void *)&v296[v299[11]] = *(void *)&v297[v299[11]];
                *(void *)&v296[v299[12]] = *(void *)&v297[v299[12]];
                *(void *)&v296[v299[13]] = *(void *)&v297[v299[13]];
                *(void *)&v296[v299[14]] = *(void *)&v297[v299[14]];
                *(void *)&v296[v299[15]] = *(void *)&v297[v299[15]];
                *(void *)&v296[v299[16]] = *(void *)&v297[v299[16]];
                *(void *)&v296[v299[17]] = *(void *)&v297[v299[17]];
                *(void *)&v296[v299[18]] = *(void *)&v297[v299[18]];
                *(_OWORD *)&v296[v299[19]] = *(_OWORD *)&v297[v299[19]];
                *(_OWORD *)&v296[v299[20]] = *(_OWORD *)&v297[v299[20]];
                *(_OWORD *)&v296[v299[21]] = *(_OWORD *)&v297[v299[21]];
                uint64_t v316 = v299[22];
                uint64_t v442 = &v296[v316];
                uint64_t v317 = &v297[v316];
                uint64_t v318 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v318 - 8) + 32))(v442, v317, v318);
                *(_OWORD *)&v296[v299[23]] = *(_OWORD *)&v297[v299[23]];
                uint64_t v319 = v299[24];
                v443 = &v296[v319];
                id v320 = &v297[v319];
                uint64_t v321 = sub_1DFDEF130();
                uint64_t v322 = *(void *)(v321 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v322 + 48))(v320, 1, v321))
                {
                  sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                  memcpy(v443, v320, *(void *)(*(void *)(v323 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v322 + 32))(v443, v320, v321);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v322 + 56))(v443, 0, 1, v321);
                }
              }
              else
              {
                *(_OWORD *)(v296 + 8) = *(_OWORD *)(v297 + 8);
                *(_OWORD *)(v296 + 24) = *(_OWORD *)(v297 + 24);
                *(_OWORD *)(v296 + 40) = *(_OWORD *)(v297 + 40);
                uint64_t v306 = *((void *)v297 + 8);
                *((void *)v296 + 7) = *((void *)v297 + 7);
                *((void *)v296 + 8) = v306;
                *(_OWORD *)(v296 + 72) = *(_OWORD *)(v297 + 72);
                *(_OWORD *)(v296 + 88) = *(_OWORD *)(v297 + 88);
                *(_OWORD *)(v296 + 104) = *(_OWORD *)(v297 + 104);
                id v307 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                uint64_t v308 = v307[16];
                v440 = &v296[v308];
                id v309 = &v297[v308];
                uint64_t v310 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 32))(v440, v309, v310);
                *(_OWORD *)&v296[v307[17]] = *(_OWORD *)&v297[v307[17]];
                uint64_t v311 = v307[18];
                uint64_t v441 = &v296[v311];
                id v312 = &v297[v311];
                uint64_t v313 = sub_1DFDEF130();
                uint64_t v314 = *(void *)(v313 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v312, 1, v313))
                {
                  sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                  memcpy(v441, v312, *(void *)(*(void *)(v315 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v314 + 32))(v441, v312, v313);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v441, 0, 1, v313);
                }
              }
              swift_storeEnumTagMultiPayload();
              uint64_t v324 = v454[6];
              id v325 = &v470[v324];
              id v326 = &v463[v324];
              int v327 = swift_getEnumCaseMultiPayload();
              *id v325 = *v326;
              if (v327 == 1)
              {
                id v328 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                uint64_t v329 = v328[5];
                uint64_t v444 = &v325[v329];
                uint64_t v330 = &v326[v329];
                uint64_t v331 = sub_1DFDE7220();
                uint64_t v434 = *(void *)(v331 - 8);
                uint64_t v438 = v330;
                uint64_t v332 = v330;
                uint64_t v333 = v331;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v434 + 48))(v332, 1, v331))
                {
                  sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                  memcpy(v444, v438, *(void *)(*(void *)(v334 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v434 + 32))(v444, v438, v333);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v434 + 56))(v444, 0, 1, v333);
                }
                *(void *)&v325[v328[6]] = *(void *)&v326[v328[6]];
                *(void *)&v325[v328[7]] = *(void *)&v326[v328[7]];
                *(void *)&v325[v328[8]] = *(void *)&v326[v328[8]];
                *(void *)&v325[v328[9]] = *(void *)&v326[v328[9]];
                *(void *)&v325[v328[10]] = *(void *)&v326[v328[10]];
                *(void *)&v325[v328[11]] = *(void *)&v326[v328[11]];
                *(void *)&v325[v328[12]] = *(void *)&v326[v328[12]];
                *(void *)&v325[v328[13]] = *(void *)&v326[v328[13]];
                *(void *)&v325[v328[14]] = *(void *)&v326[v328[14]];
                *(void *)&v325[v328[15]] = *(void *)&v326[v328[15]];
                *(void *)&v325[v328[16]] = *(void *)&v326[v328[16]];
                *(void *)&v325[v328[17]] = *(void *)&v326[v328[17]];
                *(void *)&v325[v328[18]] = *(void *)&v326[v328[18]];
                *(_OWORD *)&v325[v328[19]] = *(_OWORD *)&v326[v328[19]];
                *(_OWORD *)&v325[v328[20]] = *(_OWORD *)&v326[v328[20]];
                *(_OWORD *)&v325[v328[21]] = *(_OWORD *)&v326[v328[21]];
                uint64_t v345 = v328[22];
                uint64_t v447 = &v325[v345];
                uint64_t v346 = &v326[v345];
                uint64_t v347 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 32))(v447, v346, v347);
                *(_OWORD *)&v325[v328[23]] = *(_OWORD *)&v326[v328[23]];
                uint64_t v348 = v328[24];
                v446 = &v325[v348];
                int v341 = &v326[v348];
                uint64_t v342 = sub_1DFDEF130();
                uint64_t v343 = *(void *)(v342 - 8);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v343 + 48))(v341, 1, v342)) {
                  goto LABEL_95;
                }
              }
              else
              {
                *(_OWORD *)(v325 + 8) = *(_OWORD *)(v326 + 8);
                *(_OWORD *)(v325 + 24) = *(_OWORD *)(v326 + 24);
                *(_OWORD *)(v325 + 40) = *(_OWORD *)(v326 + 40);
                uint64_t v335 = *((void *)v326 + 8);
                *((void *)v325 + 7) = *((void *)v326 + 7);
                *((void *)v325 + 8) = v335;
                *(_OWORD *)(v325 + 72) = *(_OWORD *)(v326 + 72);
                *(_OWORD *)(v325 + 88) = *(_OWORD *)(v326 + 88);
                *(_OWORD *)(v325 + 104) = *(_OWORD *)(v326 + 104);
                uint64_t v336 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                uint64_t v337 = v336[16];
                uint64_t v445 = &v325[v337];
                uint64_t v338 = &v326[v337];
                uint64_t v339 = sub_1DFDEF360();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v339 - 8) + 32))(v445, v338, v339);
                *(_OWORD *)&v325[v336[17]] = *(_OWORD *)&v326[v336[17]];
                uint64_t v340 = v336[18];
                v446 = &v325[v340];
                int v341 = &v326[v340];
                uint64_t v342 = sub_1DFDEF130();
                uint64_t v343 = *(void *)(v342 - 8);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v343 + 48))(v341, 1, v342))
                {
LABEL_95:
                  (*(void (**)(char *, char *, uint64_t))(v343 + 32))(v446, v341, v342);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v343 + 56))(v446, 0, 1, v342);
                  goto LABEL_96;
                }
              }
              sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
              memcpy(v446, v341, *(void *)(*(void *)(v344 - 8) + 64));
LABEL_96:
              swift_storeEnumTagMultiPayload();
              uint64_t v349 = v454[7];
              uint64_t v350 = &v470[v349];
              id v351 = &v463[v349];
              uint64_t v352 = type metadata accessor for FeedPaywallType(0);
              if (swift_getEnumCaseMultiPayload())
              {
                memcpy(v350, v351, *(void *)(*(void *)(v352 - 8) + 64));
              }
              else
              {
                *(void *)uint64_t v350 = *(void *)v351;
                sub_1DEC84AA4();
                uint64_t v354 = *(int *)(v353 + 48);
                id v355 = &v350[v354];
                uint64_t v356 = &v351[v354];
                uint64_t v357 = sub_1DFDEEE80();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 32))(v355, v356, v357);
                swift_storeEnumTagMultiPayload();
              }
LABEL_99:
              swift_storeEnumTagMultiPayload();
LABEL_100:
              swift_storeEnumTagMultiPayload();
              (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
              goto LABEL_101;
            case 8u:
              long long v155 = *((_OWORD *)v13 + 1);
              *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
              *((_OWORD *)v12 + 1) = v155;
              long long v156 = *((_OWORD *)v13 + 3);
              *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
              *((_OWORD *)v12 + 3) = v156;
              *((void *)v12 + 8) = *((void *)v13 + 8);
              *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
              uint64_t v157 = type metadata accessor for RecommendedIssuesMagazineFeedGroup();
              uint64_t v158 = *(int *)(v157 + 44);
              uint64_t v464 = &v12[v158];
              uint64_t v471 = (int *)v157;
              id v458 = &v13[v158];
              uint64_t v159 = sub_1DFDF8C20();
              uint64_t v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32);
              v160(v464, v458, v159);
              v160(&v12[v471[12]], &v13[v471[12]], v159);
              *(void *)&v12[v471[13]] = *(void *)&v13[v471[13]];
              goto LABEL_99;
            case 9u:
              sub_1DEA53948();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v12, v13, v161);
              uint64_t v162 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
              uint64_t v163 = &v12[v162];
              uint64_t v164 = &v13[v162];
              uint64_t v165 = sub_1DFDF7010();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
              goto LABEL_99;
            case 0xCu:
              uint64_t v167 = sub_1DFDF7010();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v12, v13, v167);
              uint64_t v168 = type metadata accessor for NewspaperMagazineFeedGroup();
              *(void *)&v12[*(int *)(v168 + 20)] = *(void *)&v13[*(int *)(v168 + 20)];
              *(void *)&v12[*(int *)(v168 + 24)] = *(void *)&v13[*(int *)(v168 + 24)];
              goto LABEL_99;
            case 0xDu:
              sub_1DEA5387C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 32))(v12, v13, v169);
              uint64_t v170 = type metadata accessor for CuratedMagazineFeedGroup();
              uint64_t v171 = *(int *)(v170 + 20);
              uint64_t v172 = &v12[v171];
              uint64_t v173 = &v13[v171];
              uint64_t v174 = sub_1DFDF7010();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
              uint64_t v175 = *(int *)(v170 + 24);
              uint64_t v176 = &v12[v175];
              uint64_t v177 = &v13[v175];
              uint64_t v178 = sub_1DFDF8F10();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v176, v177, v178);
              goto LABEL_99;
            default:
              long long v44 = *((_OWORD *)v13 + 1);
              *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
              *((_OWORD *)v12 + 1) = v44;
              *((void *)v12 + 4) = *((void *)v13 + 4);
              *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
              *((void *)v12 + 7) = *((void *)v13 + 7);
              *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
              uint64_t v45 = type metadata accessor for CategoriesMagazineFeedGroup();
              uint64_t v46 = *(int *)(v45 + 40);
              uint64_t v47 = &v12[v46];
              uint64_t v48 = &v13[v46];
              uint64_t v49 = sub_1DFDF8C20();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
              *(void *)&v12[*(int *)(v45 + 44)] = *(void *)&v13[*(int *)(v45 + 44)];
              goto LABEL_99;
          }
        case 0xCu:
          uint64_t v50 = sub_1DFDF6D40();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v12, v13, v50);
          goto LABEL_100;
        case 0x10u:
          sub_1DEA4B52C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v12, v13, v51);
          uint64_t v52 = *(int *)(type metadata accessor for SharedWithYouTodayFeedGroup() + 20);
          uint64_t v53 = &v12[v52];
          uint64_t v54 = &v13[v52];
          uint64_t v55 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
          goto LABEL_100;
        case 0x11u:
          sub_1DEAC2768();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v12, v13, v56);
          goto LABEL_100;
        case 0x16u:
          uint64_t v57 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v12, v13, v57);
          uint64_t v58 = type metadata accessor for SavedStoriesTodayFeedGroup();
          *(void *)&v12[*(int *)(v58 + 20)] = *(void *)&v13[*(int *)(v58 + 20)];
          goto LABEL_100;
        case 0x17u:
          uint64_t v59 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v12, v13, v59);
          uint64_t v60 = type metadata accessor for ChannelPickerTodayFeedGroup();
          *(_OWORD *)&v12[*(int *)(v60 + 20)] = *(_OWORD *)&v13[*(int *)(v60 + 20)];
          goto LABEL_100;
        default:
          uint64_t v19 = sub_1DFDF7010();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v12, v13, v19);
          uint64_t v20 = (int *)type metadata accessor for CuratedTodayFeedGroup();
          *(_OWORD *)&v12[v20[5]] = *(_OWORD *)&v13[v20[5]];
          *(void *)&v12[v20[6]] = *(void *)&v13[v20[6]];
          uint64_t v21 = v20[7];
          uint64_t v22 = &v12[v21];
          uint64_t v23 = &v13[v21];
          uint64_t v24 = sub_1DFDF8F10();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
          goto LABEL_100;
      }
    }
    goto LABEL_7;
  }
  if (!v18)
  {
    if (a1 == a2) {
      goto LABEL_101;
    }
    sub_1DEC07958((uint64_t)v12);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v61 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v12, v13, v61);
        uint64_t v62 = (int *)type metadata accessor for NewspaperTodayFeedGroup();
        *(void *)&v12[v62[5]] = *(void *)&v13[v62[5]];
        *(void *)&v12[v62[6]] = *(void *)&v13[v62[6]];
        *(void *)&v12[v62[7]] = *(void *)&v13[v62[7]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      case 2u:
        uint64_t v63 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v12, v13, v63);
        uint64_t v64 = (int *)type metadata accessor for LocalNewsTodayFeedGroup();
        *(void *)&v12[v64[5]] = *(void *)&v13[v64[5]];
        *(void *)&v12[v64[6]] = *(void *)&v13[v64[6]];
        uint64_t v65 = v64[7];
        __dsta = &v12[v65];
        uint64_t v66 = &v13[v65];
        uint64_t v67 = sub_1DFDF9EE0();
        uint64_t v68 = *(void *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        {
          sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA350, MEMORY[0x1E4F80520], MEMORY[0x1E4FBB718]);
          memcpy(__dsta, v66, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(__dsta, v66, v67);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(__dsta, 0, 1, v67);
        }
        *(void *)&v12[v64[8]] = *(void *)&v13[v64[8]];
        uint64_t v93 = v64[9];
        uint64_t v94 = &v12[v93];
        uint64_t v95 = &v13[v93];
        *(void *)uint64_t v94 = *(void *)v95;
        v94[8] = v95[8];
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
        uint64_t v70 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v12, v13, v70);
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      case 8u:
        uint64_t v71 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v12, v13, v71);
        uint64_t v72 = type metadata accessor for TopicTodayFeedGroup();
        v12[*(int *)(v72 + 20)] = v13[*(int *)(v72 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      case 9u:
        type metadata accessor for MagazineFeedGroup();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1DEA530F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 32))(v12, v13, v190);
            uint64_t v191 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
            uint64_t v192 = &v12[v191];
            uint64_t v193 = &v13[v191];
            uint64_t v194 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v192, v193, v194);
            goto LABEL_131;
          case 2u:
          case 0xAu:
          case 0xBu:
            uint64_t v262 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 32))(v12, v13, v262);
            goto LABEL_131;
          case 3u:
            sub_1DEA52F58();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32))(v12, v13, v195);
            uint64_t v196 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
            uint64_t v197 = &v12[v196];
            uint64_t v198 = &v13[v196];
            uint64_t v199 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 32))(v197, v198, v199);
            goto LABEL_131;
          case 4u:
            long long v200 = *((_OWORD *)v13 + 1);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            *((_OWORD *)v12 + 1) = v200;
            *((void *)v12 + 4) = *((void *)v13 + 4);
            *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
            *((void *)v12 + 7) = *((void *)v13 + 7);
            *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
            uint64_t v201 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
            uint64_t v202 = v201[10];
            uint64_t v203 = &v12[v202];
            uint64_t v204 = &v13[v202];
            uint64_t v205 = sub_1DFDF8C20();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
            *(void *)&v12[v201[11]] = *(void *)&v13[v201[11]];
            *(void *)&v12[v201[12]] = *(void *)&v13[v201[12]];
            goto LABEL_131;
          case 5u:
            long long v206 = *((_OWORD *)v13 + 1);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            *((_OWORD *)v12 + 1) = v206;
            long long v207 = *((_OWORD *)v13 + 3);
            *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
            *((_OWORD *)v12 + 3) = v207;
            *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
            uint64_t v208 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
            uint64_t v209 = v208[10];
            v465 = &v13[v209];
            uint64_t v472 = &v12[v209];
            uint64_t v210 = sub_1DFDF8C20();
            uint64_t v211 = *(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32);
            v211(v472, v465, v210);
            v211(&v12[v208[11]], &v13[v208[11]], v210);
            uint64_t v212 = v208;
            *(void *)&v12[v208[12]] = *(void *)&v13[v208[12]];
            uint64_t v213 = v208[13];
            uint64_t v214 = &v12[v213];
            uint64_t v215 = &v13[v213];
            sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 32))(v214, v215, v216);
            uint64_t v217 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
            *(void *)&v214[*(int *)(v217 + 20)] = *(void *)&v215[*(int *)(v217 + 20)];
            uint64_t v218 = *(int *)(v217 + 24);
            uint64_t v219 = &v214[v218];
            uint64_t v220 = &v215[v218];
            sub_1DEA82C88(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 32))(v219, v220, v221);
            *(void *)&v12[v212[14]] = *(void *)&v13[v212[14]];
            v12[v212[15]] = v13[v212[15]];
            uint64_t v222 = v212[16];
            uint64_t v223 = &v12[v222];
            uint64_t v224 = &v13[v222];
            uint64_t v225 = sub_1DFDF8F10();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 32))(v223, v224, v225);
            uint64_t v226 = v212[17];
            uint64_t v473 = &v12[v226];
            uint64_t v227 = &v13[v226];
            uint64_t v228 = sub_1DFDF7CB0();
            uint64_t v229 = *(void *)(v228 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v229 + 48))(v227, 1, v228))
            {
              sub_1DE9F1790(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
              memcpy(v473, v227, *(void *)(*(void *)(v230 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v229 + 32))(v473, v227, v228);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v229 + 56))(v473, 0, 1, v228);
            }
            *(void *)&v12[v212[18]] = *(void *)&v13[v212[18]];
            goto LABEL_131;
          case 6u:
            sub_1DEA536E4();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 32))(v12, v13, v231);
            uint64_t v232 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
            uint64_t v233 = &v12[v232];
            uint64_t v234 = &v13[v232];
            uint64_t v235 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v233, v234, v235);
            goto LABEL_131;
          case 7u:
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            uint64_t v236 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
            uint64_t v237 = v236[5];
            v466 = &v13[v237];
            uint64_t v474 = &v12[v237];
            uint64_t v238 = sub_1DFDF8C20();
            uint64_t v239 = *(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 32);
            v239(v474, v466, v238);
            v239(&v12[v236[6]], &v13[v236[6]], v238);
            *(void *)&v12[v236[7]] = *(void *)&v13[v236[7]];
            *(void *)&v12[v236[8]] = *(void *)&v13[v236[8]];
            uint64_t v240 = v236[9];
            uint64_t v241 = &v13[v240];
            uint64_t v242 = &v12[v240];
            type metadata accessor for FeedPaywallModel(0);
            int v243 = swift_getEnumCaseMultiPayload();
            uint64_t v467 = v241;
            uint64_t v475 = v242;
            *uint64_t v242 = *v241;
            if (v243 == 1)
            {
              uint64_t v244 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v245 = v244[5];
              uint64_t v246 = &v242[v245];
              uint64_t v247 = &v241[v245];
              uint64_t v248 = sub_1DFDE7220();
              uint64_t v249 = *(void *)(v248 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48))(v247, 1, v248))
              {
                sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v246, v247, *(void *)(*(void *)(v250 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v249 + 32))(v246, v247, v248);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v249 + 56))(v246, 0, 1, v248);
              }
              *(void *)&v475[v244[6]] = *(void *)&v467[v244[6]];
              *(void *)&v475[v244[7]] = *(void *)&v467[v244[7]];
              *(void *)&v475[v244[8]] = *(void *)&v467[v244[8]];
              *(void *)&v475[v244[9]] = *(void *)&v467[v244[9]];
              *(void *)&v475[v244[10]] = *(void *)&v467[v244[10]];
              *(void *)&v475[v244[11]] = *(void *)&v467[v244[11]];
              *(void *)&v475[v244[12]] = *(void *)&v467[v244[12]];
              *(void *)&v475[v244[13]] = *(void *)&v467[v244[13]];
              *(void *)&v475[v244[14]] = *(void *)&v467[v244[14]];
              *(void *)&v475[v244[15]] = *(void *)&v467[v244[15]];
              *(void *)&v475[v244[16]] = *(void *)&v467[v244[16]];
              *(void *)&v475[v244[17]] = *(void *)&v467[v244[17]];
              *(void *)&v475[v244[18]] = *(void *)&v467[v244[18]];
              *(_OWORD *)&v475[v244[19]] = *(_OWORD *)&v467[v244[19]];
              *(_OWORD *)&v475[v244[20]] = *(_OWORD *)&v467[v244[20]];
              *(_OWORD *)&v475[v244[21]] = *(_OWORD *)&v467[v244[21]];
              uint64_t v359 = v244[22];
              uint64_t v360 = &v475[v359];
              uint64_t v361 = &v467[v359];
              uint64_t v362 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v362 - 8) + 32))(v360, v361, v362);
              *(_OWORD *)&v475[v244[23]] = *(_OWORD *)&v467[v244[23]];
              uint64_t v363 = v244[24];
              uint64_t v291 = &v475[v363];
              uint64_t v292 = &v467[v363];
              uint64_t v364 = sub_1DFDEF130();
              uint64_t v365 = *(void *)(v364 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v365 + 48))(v292, 1, v364)) {
                goto LABEL_106;
              }
              (*(void (**)(char *, char *, uint64_t))(v365 + 32))(v291, v292, v364);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v365 + 56))(v291, 0, 1, v364);
            }
            else
            {
              *(_OWORD *)(v242 + 8) = *(_OWORD *)(v241 + 8);
              *(_OWORD *)(v242 + 24) = *(_OWORD *)(v241 + 24);
              *(_OWORD *)(v242 + 40) = *(_OWORD *)(v241 + 40);
              uint64_t v284 = *((void *)v241 + 8);
              *((void *)v242 + 7) = *((void *)v241 + 7);
              *((void *)v242 + 8) = v284;
              *(_OWORD *)(v242 + 72) = *(_OWORD *)(v241 + 72);
              *(_OWORD *)(v242 + 88) = *(_OWORD *)(v241 + 88);
              *(_OWORD *)(v242 + 104) = *(_OWORD *)(v241 + 104);
              uint64_t v285 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v286 = v285[16];
              uint64_t v287 = &v475[v286];
              uint64_t v288 = &v241[v286];
              uint64_t v289 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v289 - 8) + 32))(v287, v288, v289);
              *(_OWORD *)&v475[v285[17]] = *(_OWORD *)&v241[v285[17]];
              uint64_t v290 = v285[18];
              uint64_t v291 = &v475[v290];
              uint64_t v292 = &v241[v290];
              uint64_t v293 = sub_1DFDEF130();
              uint64_t v294 = *(void *)(v293 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v294 + 48))(v292, 1, v293))
              {
LABEL_106:
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v291, v292, *(void *)(*(void *)(v366 - 8) + 64));
                goto LABEL_109;
              }
              (*(void (**)(char *, char *, uint64_t))(v294 + 32))(v291, v292, v293);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v294 + 56))(v291, 0, 1, v293);
            }
LABEL_109:
            swift_storeEnumTagMultiPayload();
            id v455 = (int *)type metadata accessor for FeedPaywallConfig();
            uint64_t v367 = v455[5];
            uint64_t v368 = &v475[v367];
            uint64_t v369 = &v467[v367];
            int v370 = swift_getEnumCaseMultiPayload();
            *uint64_t v368 = *v369;
            if (v370 == 1)
            {
              uint64_t v371 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v372 = v371[5];
              uint64_t v448 = &v368[v372];
              uint64_t v373 = &v369[v372];
              uint64_t v374 = sub_1DFDE7220();
              uint64_t v435 = *(void *)(v374 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v435 + 48))(v373, 1, v374))
              {
                sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v448, v373, *(void *)(*(void *)(v375 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v435 + 32))(v448, v373, v374);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v435 + 56))(v448, 0, 1, v374);
              }
              *(void *)&v368[v371[6]] = *(void *)&v369[v371[6]];
              *(void *)&v368[v371[7]] = *(void *)&v369[v371[7]];
              *(void *)&v368[v371[8]] = *(void *)&v369[v371[8]];
              *(void *)&v368[v371[9]] = *(void *)&v369[v371[9]];
              *(void *)&v368[v371[10]] = *(void *)&v369[v371[10]];
              *(void *)&v368[v371[11]] = *(void *)&v369[v371[11]];
              *(void *)&v368[v371[12]] = *(void *)&v369[v371[12]];
              *(void *)&v368[v371[13]] = *(void *)&v369[v371[13]];
              *(void *)&v368[v371[14]] = *(void *)&v369[v371[14]];
              *(void *)&v368[v371[15]] = *(void *)&v369[v371[15]];
              *(void *)&v368[v371[16]] = *(void *)&v369[v371[16]];
              *(void *)&v368[v371[17]] = *(void *)&v369[v371[17]];
              *(void *)&v368[v371[18]] = *(void *)&v369[v371[18]];
              *(_OWORD *)&v368[v371[19]] = *(_OWORD *)&v369[v371[19]];
              *(_OWORD *)&v368[v371[20]] = *(_OWORD *)&v369[v371[20]];
              *(_OWORD *)&v368[v371[21]] = *(_OWORD *)&v369[v371[21]];
              uint64_t v388 = v371[22];
              id v389 = &v368[v388];
              id v390 = &v369[v388];
              uint64_t v391 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 32))(v389, v390, v391);
              *(_OWORD *)&v368[v371[23]] = *(_OWORD *)&v369[v371[23]];
              uint64_t v392 = v371[24];
              id v393 = &v368[v392];
              id v394 = &v369[v392];
              uint64_t v395 = sub_1DFDEF130();
              uint64_t v396 = *(void *)(v395 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v396 + 48))(v394, 1, v395))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v393, v394, *(void *)(*(void *)(v397 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v396 + 32))(v393, v394, v395);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v396 + 56))(v393, 0, 1, v395);
              }
            }
            else
            {
              *(_OWORD *)(v368 + 8) = *(_OWORD *)(v369 + 8);
              *(_OWORD *)(v368 + 24) = *(_OWORD *)(v369 + 24);
              *(_OWORD *)(v368 + 40) = *(_OWORD *)(v369 + 40);
              uint64_t v376 = *((void *)v369 + 8);
              *((void *)v368 + 7) = *((void *)v369 + 7);
              *((void *)v368 + 8) = v376;
              *(_OWORD *)(v368 + 72) = *(_OWORD *)(v369 + 72);
              *(_OWORD *)(v368 + 88) = *(_OWORD *)(v369 + 88);
              *(_OWORD *)(v368 + 104) = *(_OWORD *)(v369 + 104);
              uint64_t v377 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v378 = v377[16];
              uint64_t v379 = &v368[v378];
              uint64_t v380 = &v369[v378];
              uint64_t v381 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v381 - 8) + 32))(v379, v380, v381);
              *(_OWORD *)&v368[v377[17]] = *(_OWORD *)&v369[v377[17]];
              uint64_t v382 = v377[18];
              v383 = &v368[v382];
              uint64_t v384 = &v369[v382];
              uint64_t v385 = sub_1DFDEF130();
              uint64_t v386 = *(void *)(v385 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v386 + 48))(v384, 1, v385))
              {
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v383, v384, *(void *)(*(void *)(v387 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v386 + 32))(v383, v384, v385);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v386 + 56))(v383, 0, 1, v385);
              }
            }
            swift_storeEnumTagMultiPayload();
            uint64_t v398 = v455[6];
            uint64_t v399 = &v475[v398];
            v400 = &v467[v398];
            int v401 = swift_getEnumCaseMultiPayload();
            *uint64_t v399 = *v400;
            if (v401 == 1)
            {
              id v402 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v403 = v402[5];
              id v449 = &v399[v403];
              int v404 = &v400[v403];
              uint64_t v405 = sub_1DFDE7220();
              uint64_t v436 = *(void *)(v405 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v436 + 48))(v404, 1, v405))
              {
                sub_1DE9F1790(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v449, v404, *(void *)(*(void *)(v406 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v436 + 32))(v449, v404, v405);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v436 + 56))(v449, 0, 1, v405);
              }
              *(void *)&v399[v402[6]] = *(void *)&v400[v402[6]];
              *(void *)&v399[v402[7]] = *(void *)&v400[v402[7]];
              *(void *)&v399[v402[8]] = *(void *)&v400[v402[8]];
              *(void *)&v399[v402[9]] = *(void *)&v400[v402[9]];
              *(void *)&v399[v402[10]] = *(void *)&v400[v402[10]];
              *(void *)&v399[v402[11]] = *(void *)&v400[v402[11]];
              *(void *)&v399[v402[12]] = *(void *)&v400[v402[12]];
              *(void *)&v399[v402[13]] = *(void *)&v400[v402[13]];
              *(void *)&v399[v402[14]] = *(void *)&v400[v402[14]];
              *(void *)&v399[v402[15]] = *(void *)&v400[v402[15]];
              *(void *)&v399[v402[16]] = *(void *)&v400[v402[16]];
              *(void *)&v399[v402[17]] = *(void *)&v400[v402[17]];
              *(void *)&v399[v402[18]] = *(void *)&v400[v402[18]];
              *(_OWORD *)&v399[v402[19]] = *(_OWORD *)&v400[v402[19]];
              *(_OWORD *)&v399[v402[20]] = *(_OWORD *)&v400[v402[20]];
              *(_OWORD *)&v399[v402[21]] = *(_OWORD *)&v400[v402[21]];
              uint64_t v418 = v402[22];
              uint64_t v419 = &v399[v418];
              unint64_t v420 = &v400[v418];
              uint64_t v421 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v421 - 8) + 32))(v419, v420, v421);
              *(_OWORD *)&v399[v402[23]] = *(_OWORD *)&v400[v402[23]];
              uint64_t v422 = v402[24];
              id v414 = &v399[v422];
              id v415 = &v400[v422];
              uint64_t v416 = sub_1DFDEF130();
              uint64_t v417 = *(void *)(v416 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v417 + 48))(v415, 1, v416)) {
                goto LABEL_126;
              }
            }
            else
            {
              *(_OWORD *)(v399 + 8) = *(_OWORD *)(v400 + 8);
              *(_OWORD *)(v399 + 24) = *(_OWORD *)(v400 + 24);
              *(_OWORD *)(v399 + 40) = *(_OWORD *)(v400 + 40);
              uint64_t v407 = *((void *)v400 + 8);
              *((void *)v399 + 7) = *((void *)v400 + 7);
              *((void *)v399 + 8) = v407;
              *(_OWORD *)(v399 + 72) = *(_OWORD *)(v400 + 72);
              *(_OWORD *)(v399 + 88) = *(_OWORD *)(v400 + 88);
              *(_OWORD *)(v399 + 104) = *(_OWORD *)(v400 + 104);
              uint64_t v408 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v409 = v408[16];
              char v410 = &v399[v409];
              id v411 = &v400[v409];
              uint64_t v412 = sub_1DFDEF360();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v412 - 8) + 32))(v410, v411, v412);
              *(_OWORD *)&v399[v408[17]] = *(_OWORD *)&v400[v408[17]];
              uint64_t v413 = v408[18];
              id v414 = &v399[v413];
              id v415 = &v400[v413];
              uint64_t v416 = sub_1DFDEF130();
              uint64_t v417 = *(void *)(v416 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v417 + 48))(v415, 1, v416))
              {
LABEL_126:
                sub_1DE9F1790(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530], MEMORY[0x1E4FBB718]);
                memcpy(v414, v415, *(void *)(*(void *)(v423 - 8) + 64));
                goto LABEL_128;
              }
            }
            (*(void (**)(char *, char *, uint64_t))(v417 + 32))(v414, v415, v416);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v417 + 56))(v414, 0, 1, v416);
LABEL_128:
            swift_storeEnumTagMultiPayload();
            uint64_t v424 = v455[7];
            v425 = &v475[v424];
            uint64_t v426 = &v467[v424];
            uint64_t v427 = type metadata accessor for FeedPaywallType(0);
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v425, v426, *(void *)(*(void *)(v427 - 8) + 64));
            }
            else
            {
              *(void *)v425 = *(void *)v426;
              sub_1DEC84AA4();
              uint64_t v429 = *(int *)(v428 + 48);
              uint64_t v430 = &v425[v429];
              uint64_t v431 = &v426[v429];
              uint64_t v432 = sub_1DFDEEE80();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v432 - 8) + 32))(v430, v431, v432);
              swift_storeEnumTagMultiPayload();
            }
LABEL_131:
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            goto LABEL_101;
          case 8u:
            long long v251 = *((_OWORD *)v13 + 1);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            *((_OWORD *)v12 + 1) = v251;
            long long v252 = *((_OWORD *)v13 + 3);
            *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
            *((_OWORD *)v12 + 3) = v252;
            *((void *)v12 + 8) = *((void *)v13 + 8);
            *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
            uint64_t v253 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
            uint64_t v254 = v253[11];
            uint64_t v468 = &v13[v254];
            uint64_t v476 = &v12[v254];
            uint64_t v255 = sub_1DFDF8C20();
            uint64_t v256 = *(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 32);
            v256(v476, v468, v255);
            v256(&v12[v253[12]], &v13[v253[12]], v255);
            *(void *)&v12[v253[13]] = *(void *)&v13[v253[13]];
            goto LABEL_131;
          case 9u:
            sub_1DEA53948();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v257 - 8) + 32))(v12, v13, v257);
            uint64_t v258 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
            uint64_t v259 = &v12[v258];
            uint64_t v260 = &v13[v258];
            uint64_t v261 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 32))(v259, v260, v261);
            goto LABEL_131;
          case 0xCu:
            uint64_t v263 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 32))(v12, v13, v263);
            uint64_t v264 = type metadata accessor for NewspaperMagazineFeedGroup();
            *(void *)&v12[*(int *)(v264 + 20)] = *(void *)&v13[*(int *)(v264 + 20)];
            *(void *)&v12[*(int *)(v264 + 24)] = *(void *)&v13[*(int *)(v264 + 24)];
            goto LABEL_131;
          case 0xDu:
            sub_1DEA5387C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 32))(v12, v13, v265);
            uint64_t v266 = type metadata accessor for CuratedMagazineFeedGroup();
            uint64_t v267 = *(int *)(v266 + 20);
            uint64_t v268 = &v12[v267];
            uint64_t v269 = &v13[v267];
            uint64_t v270 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v268, v269, v270);
            uint64_t v271 = *(int *)(v266 + 24);
            uint64_t v272 = &v12[v271];
            uint64_t v273 = &v13[v271];
            uint64_t v274 = sub_1DFDF8F10();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32))(v272, v273, v274);
            goto LABEL_131;
          default:
            long long v73 = *((_OWORD *)v13 + 1);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
            *((_OWORD *)v12 + 1) = v73;
            *((void *)v12 + 4) = *((void *)v13 + 4);
            *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
            *((void *)v12 + 7) = *((void *)v13 + 7);
            *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
            uint64_t v74 = type metadata accessor for CategoriesMagazineFeedGroup();
            uint64_t v75 = *(int *)(v74 + 40);
            uint64_t v76 = &v12[v75];
            uint64_t v77 = &v13[v75];
            uint64_t v78 = sub_1DFDF8C20();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
            *(void *)&v12[*(int *)(v74 + 44)] = *(void *)&v13[*(int *)(v74 + 44)];
            goto LABEL_131;
        }
      case 0xCu:
        uint64_t v79 = sub_1DFDF6D40();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v12, v13, v79);
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      case 0x10u:
        sub_1DEA4B52C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v12, v13, v80);
        uint64_t v81 = *(int *)(type metadata accessor for SharedWithYouTodayFeedGroup() + 20);
        uint64_t v82 = &v12[v81];
        uint64_t v83 = &v13[v81];
        uint64_t v84 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      case 0x11u:
        sub_1DEAC2768();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v12, v13, v85);
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      case 0x16u:
        uint64_t v86 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v12, v13, v86);
        uint64_t v87 = type metadata accessor for SavedStoriesTodayFeedGroup();
        *(void *)&v12[*(int *)(v87 + 20)] = *(void *)&v13[*(int *)(v87 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      case 0x17u:
        uint64_t v88 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v12, v13, v88);
        uint64_t v89 = type metadata accessor for ChannelPickerTodayFeedGroup();
        *(_OWORD *)&v12[*(int *)(v89 + 20)] = *(_OWORD *)&v13[*(int *)(v89 + 20)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
      default:
        uint64_t v26 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v12, v13, v26);
        uint64_t v27 = (int *)type metadata accessor for CuratedTodayFeedGroup();
        *(_OWORD *)&v12[v27[5]] = *(_OWORD *)&v13[v27[5]];
        *(void *)&v12[v27[6]] = *(void *)&v13[v27[6]];
        uint64_t v28 = v27[7];
        uint64_t v29 = &v12[v28];
        uint64_t v30 = &v13[v28];
        uint64_t v31 = sub_1DFDF8F10();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        swift_storeEnumTagMultiPayload();
        goto LABEL_101;
    }
  }
  sub_1DEC07958((uint64_t)v12);
LABEL_7:
  sub_1DE9F1790(0, &qword_1EBAAAF80, (uint64_t (*)(uint64_t))type metadata accessor for TodayFeedGroup, MEMORY[0x1E4FBB718]);
  memcpy(v12, v13, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_101:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}