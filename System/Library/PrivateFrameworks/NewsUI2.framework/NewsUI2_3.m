uint64_t sub_1DEB539B0(uint64_t a1)
{
  return *(void *)(a1 + 144) >> 63;
}

uint64_t sub_1DEB539BC(uint64_t result)
{
  *(void *)(result + 144) &= ~0x8000000000000000;
  return result;
}

void *sub_1DEB539CC(void *result, uint64_t a2)
{
  uint64_t v2 = result[10] & 1;
  uint64_t v3 = result[12] & 1;
  uint64_t v4 = result[14] & 1;
  uint64_t v5 = result[18] & 1 | (a2 << 63);
  result[4] = *((unsigned __int16 *)result + 16);
  result[10] = v2;
  result[12] = v3;
  result[14] = v4;
  result[18] = v5;
  return result;
}

ValueMetadata *type metadata accessor for ChannelPickerSectionDescriptor()
{
  return &type metadata for ChannelPickerSectionDescriptor;
}

uint64_t sub_1DEB53A1C()
{
  sub_1DEB53AB0(v0, v5);
  sub_1DEB53AB0(v5, __dst);
  int v1 = sub_1DEB539B0((uint64_t)__dst);
  uint64_t v2 = sub_1DEB539BC((uint64_t)__dst);
  if (v1 == 1) {
    uint64_t v3 = 1684632167;
  }
  else {
    uint64_t v3 = 1953720684;
  }
  if (*(void *)(v2 + 48))
  {
    uint64_t v3 = *(void *)(v2 + 40);
    swift_bridgeObjectRetain();
  }
  return v3;
}

void *sub_1DEB53AB0(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x151uLL);
}

uint64_t BridgedNewsActivityData.activity.getter()
{
  return *(void *)(v0 + OBJC_IVAR___TSNewsActivityData_activity);
}

uint64_t BridgedNewsActivityData.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___TSNewsActivityData_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedNewsActivityData.object.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t BridgedNewsActivityData.traits.getter()
{
  return swift_bridgeObjectRetain();
}

id BridgedNewsActivityData.__allocating_init(activity:identifier:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  uint64_t v4 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  sub_1DEA69724();
  uint64_t v5 = (void *)sub_1DFDFE200();
  id v6 = objc_msgSend(v3, sel_initWithActivity_identifier_object_traits_, a1, v4, 0, v5);

  return v6;
}

id BridgedNewsActivityData.init(activity:identifier:)(uint64_t a1)
{
  id v3 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  sub_1DEA69724();
  uint64_t v4 = (void *)sub_1DFDFE200();
  id v5 = objc_msgSend(v1, sel_initWithActivity_identifier_object_traits_, a1, v3, 0, v4);

  return v5;
}

id BridgedNewsActivityData.__allocating_init(activity:identifier:object:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR___TSNewsActivityData_activity] = a1;
  v10 = &v9[OBJC_IVAR___TSNewsActivityData_identifier];
  *(void *)v10 = a2;
  *((void *)v10 + 1) = a3;
  *(void *)&v9[OBJC_IVAR___TSNewsActivityData_object] = a4;
  *(void *)&v9[OBJC_IVAR___TSNewsActivityData_traits] = MEMORY[0x1E4FBC860];
  v12.receiver = v9;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, sel_init);
}

id BridgedNewsActivityData.init(activity:identifier:object:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR___TSNewsActivityData_activity] = a1;
  v10 = &v4[OBJC_IVAR___TSNewsActivityData_identifier];
  *(void *)v10 = a2;
  *((void *)v10 + 1) = a3;
  *(void *)&v4[OBJC_IVAR___TSNewsActivityData_object] = a4;
  *(void *)&v4[OBJC_IVAR___TSNewsActivityData_traits] = MEMORY[0x1E4FBC860];
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

id BridgedNewsActivityData.__allocating_init(activity:identifier:object:traits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v11 = (char *)objc_allocWithZone(v5);
  *(void *)&v11[OBJC_IVAR___TSNewsActivityData_activity] = a1;
  objc_super v12 = &v11[OBJC_IVAR___TSNewsActivityData_identifier];
  *(void *)objc_super v12 = a2;
  *((void *)v12 + 1) = a3;
  *(void *)&v11[OBJC_IVAR___TSNewsActivityData_object] = a4;
  *(void *)&v11[OBJC_IVAR___TSNewsActivityData_traits] = a5;
  v14.receiver = v11;
  v14.super_class = v5;
  return objc_msgSendSuper2(&v14, sel_init);
}

id BridgedNewsActivityData.init(activity:identifier:object:traits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR___TSNewsActivityData_activity] = a1;
  objc_super v12 = &v5[OBJC_IVAR___TSNewsActivityData_identifier];
  *(void *)objc_super v12 = a2;
  *((void *)v12 + 1) = a3;
  *(void *)&v5[OBJC_IVAR___TSNewsActivityData_object] = a4;
  *(void *)&v5[OBJC_IVAR___TSNewsActivityData_traits] = a5;
  v14.receiver = v5;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, sel_init);
}

unint64_t static BridgedNewsActivityData.convertToArticleTrait(trait:)(unint64_t result)
{
  if (result >= 4)
  {
    result = sub_1DFDFFFD0();
    __break(1u);
  }
  return result;
}

id BridgedNewsActivityData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BridgedNewsActivityData.init()()
{
}

id BridgedNewsActivityData.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t BridgedNewsActivityData.description.getter()
{
  sub_1DFDFF9B0();
  sub_1DFDFDE90();
  BridgedNewsActivity2.description.getter(*(void *)(v0 + OBJC_IVAR___TSNewsActivityData_activity));
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DEAB90A4(0, &qword_1EAC20A30, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBB718]);
  swift_unknownObjectRetain();
  sub_1DFDFDD90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return 0;
}

uint64_t BridgedNewsActivityData.convertToNewsActivity2()@<X0>(void *a1@<X8>)
{
  v104 = a1;
  uint64_t v1 = sub_1DFDE7220();
  uint64_t v102 = *(void *)(v1 - 8);
  uint64_t v103 = v1;
  MEMORY[0x1F4188790](v1);
  v98 = (char *)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB5521C(0, (unint64_t *)&unk_1EBAD2150, MEMORY[0x1E4F7D4D0]);
  MEMORY[0x1F4188790](v3 - 8);
  v101 = (char *)&v98 - v4;
  sub_1DEB5521C(0, (unint64_t *)&unk_1EBAC1280, MEMORY[0x1E4F82550]);
  MEMORY[0x1F4188790](v5 - 8);
  v100 = (char *)&v98 - v6;
  sub_1DEB5521C(0, (unint64_t *)&unk_1EBAF7F10, MEMORY[0x1E4F7DB50]);
  MEMORY[0x1F4188790](v7 - 8);
  v9 = (char *)&v98 - v8;
  uint64_t v10 = type metadata accessor for CampaignRouteModel();
  MEMORY[0x1F4188790](v10);
  objc_super v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDE9720();
  uint64_t v99 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB5521C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  v19 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v21 = (char *)&v98 - v20;
  uint64_t v22 = sub_1DFDE8B80();
  uint64_t result = MEMORY[0x1F4188790](v22);
  v26 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(void *)(v106 + OBJC_IVAR___TSNewsActivityData_activity))
  {
    case 0:
      v101 = *(char **)(v102 + 56);
      uint64_t v106 = v24;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v101)(v21, 1, 1, v103);
      swift_bridgeObjectRetain();
      sub_1DFDE8B60();
      sub_1DEAE4654();
      uint64_t v28 = v27;
      uint64_t v102 = swift_allocBox();
      uint64_t v30 = v29;
      uint64_t v31 = *(int *)(v28 + 48);
      sub_1DE919EB0();
      uint64_t v33 = *(int *)(v32 + 48);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v101)(v21, 1, 1, v103);
      uint64_t v34 = v99;
      (*(void (**)(char *, void, uint64_t))(v99 + 104))(v15, *MEMORY[0x1E4F7D8E0], v13);
      sub_1DFDE8E60();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v13);
      sub_1DEB4B7AC((uint64_t)v21);
      *(void *)(v30 + v33) = MEMORY[0x1E4FBC860];
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v26, v22);
      *(void *)(v30 + v31) = &unk_1F3A64C18;
      uint64_t v35 = v102;
      goto LABEL_16;
    case 1:
      uint64_t v55 = *(void *)(v106 + OBJC_IVAR___TSNewsActivityData_identifier + 8);
      v105[0] = *(void *)(v106 + OBJC_IVAR___TSNewsActivityData_identifier);
      v105[1] = v55;
      uint64_t v56 = sub_1DFDE9BB0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v9, 1, 1, v56);
      uint64_t v57 = sub_1DFDEF170();
      uint64_t v58 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v100, 1, 1, v57);
      uint64_t v59 = sub_1DFDE8B20();
      uint64_t v60 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v101, 1, 1, v59);
      swift_bridgeObjectRetain();
      CampaignRouteModel.init(routeTarget:postPurchaseBehavior:purchaseTraits:sourceChannelID:purchaseSessionID:paywallType:postPurchaseDestination:hidePostPurchaseOnboarding:routeFromSubscriptionURL:delegate:anfOverrides:)(v105, (uint64_t)v9, MEMORY[0x1E4FBC860], 0, 0, 0, 0, 0, v12, v58, 0, 0, 0, 0, v60);
      uint64_t v61 = swift_allocBox();
      uint64_t result = sub_1DEB55348((uint64_t)v12, v62);
      unint64_t v38 = v61 | 0x1000000000000006;
      goto LABEL_24;
    case 2:
      if (!*(void *)(v106 + OBJC_IVAR___TSNewsActivityData_object)) {
        goto LABEL_35;
      }
      uint64_t v39 = v106;
      type metadata accessor for BridgedNewsActivitySender();
      swift_unknownObjectRetain();
      uint64_t v40 = swift_dynamicCastClass();
      if (v40)
      {
        uint64_t v42 = *(void *)(v39 + OBJC_IVAR___TSNewsActivityData_identifier);
        uint64_t v41 = *(void *)(v39 + OBJC_IVAR___TSNewsActivityData_identifier + 8);
        v43 = *(void **)(v40 + OBJC_IVAR___TSNewsActivitySender_viewController);
        swift_bridgeObjectRetain();
        id v44 = v43;
        swift_unknownObjectRelease();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v42;
        *(void *)(result + 24) = v41;
        uint64_t v45 = MEMORY[0x1E4FBC860];
        *(void *)(result + 32) = v44;
        *(void *)(result + 40) = v45;
        *(unsigned char *)(result + 48) = 2;
        *(_OWORD *)(result + 56) = 0u;
        *(_OWORD *)(result + 72) = 0u;
        *(void *)(result + 88) = 0;
        *(unsigned char *)(result + 96) = -1;
        unint64_t v38 = result | 0x2000000000000004;
        goto LABEL_24;
      }
      swift_unknownObjectRelease();
      type metadata accessor for FeedViewContext();
      swift_unknownObjectRetain();
      uint64_t v83 = swift_dynamicCastClass();
      if (!v83) {
        goto LABEL_34;
      }
      uint64_t v84 = v83;
      uint64_t v85 = v39 + OBJC_IVAR___TSNewsActivityData_identifier;
      uint64_t v87 = *(void *)(v39 + OBJC_IVAR___TSNewsActivityData_identifier);
      uint64_t v86 = *(void *)(v85 + 8);
      uint64_t v88 = swift_allocObject();
      *(void *)(v88 + 16) = v87;
      *(void *)(v88 + 24) = v86;
      uint64_t v89 = MEMORY[0x1E4FBC860];
      *(void *)(v88 + 32) = v84;
      *(void *)(v88 + 40) = v89;
      *(unsigned char *)(v88 + 48) = 1;
      *(_OWORD *)(v88 + 56) = 0u;
      *(_OWORD *)(v88 + 72) = 0u;
      *(void *)(v88 + 88) = 0;
      *(unsigned char *)(v88 + 96) = -1;
      uint64_t v90 = v88 | 0x2000000000000004;
      goto LABEL_32;
    case 3:
      if (!*(void *)(v106 + OBJC_IVAR___TSNewsActivityData_object)) {
        goto LABEL_35;
      }
      uint64_t v63 = v106;
      type metadata accessor for BridgedNewsActivitySender();
      swift_unknownObjectRetain();
      uint64_t v64 = swift_dynamicCastClass();
      if (v64)
      {
        uint64_t v66 = *(void *)(v63 + OBJC_IVAR___TSNewsActivityData_identifier);
        uint64_t v65 = *(void *)(v63 + OBJC_IVAR___TSNewsActivityData_identifier + 8);
        v67 = *(void **)(v64 + OBJC_IVAR___TSNewsActivitySender_viewController);
        swift_bridgeObjectRetain();
        id v68 = v67;
        swift_unknownObjectRelease();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v66;
        *(void *)(result + 24) = v65;
        uint64_t v69 = MEMORY[0x1E4FBC860];
        *(void *)(result + 32) = v68;
        *(void *)(result + 40) = v69;
        *(unsigned char *)(result + 48) = 2;
        *(_OWORD *)(result + 56) = 0u;
        *(_OWORD *)(result + 72) = 0u;
        *(void *)(result + 88) = 0;
        *(unsigned char *)(result + 96) = -1;
        uint64_t v35 = result | 0x2000000000000004;
LABEL_16:
        unint64_t v38 = v35 | 2;
        goto LABEL_24;
      }
      swift_unknownObjectRelease();
      type metadata accessor for FeedViewContext();
      swift_unknownObjectRetain();
      uint64_t v91 = swift_dynamicCastClass();
      if (!v91) {
        goto LABEL_34;
      }
      uint64_t v92 = v91;
      uint64_t v93 = v63 + OBJC_IVAR___TSNewsActivityData_identifier;
      uint64_t v95 = *(void *)(v63 + OBJC_IVAR___TSNewsActivityData_identifier);
      uint64_t v94 = *(void *)(v93 + 8);
      uint64_t v96 = swift_allocObject();
      *(void *)(v96 + 16) = v95;
      *(void *)(v96 + 24) = v94;
      uint64_t v97 = MEMORY[0x1E4FBC860];
      *(void *)(v96 + 32) = v92;
      *(void *)(v96 + 40) = v97;
      *(unsigned char *)(v96 + 48) = 1;
      *(_OWORD *)(v96 + 56) = 0u;
      *(_OWORD *)(v96 + 72) = 0u;
      *(void *)(v96 + 88) = 0;
      *(unsigned char *)(v96 + 96) = -1;
      uint64_t v90 = v96 | 0x2000000000000006;
LABEL_32:
      void *v104 = v90;
      goto LABEL_33;
    case 4:
      uint64_t result = swift_allocObject();
      unint64_t v38 = result | 0x3000000000000006;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      goto LABEL_24;
    case 5:
      unint64_t v38 = 0xD000000000000018;
      goto LABEL_24;
    case 6:
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      *(unsigned char *)(result + 32) = -1;
      unint64_t v38 = result | 0x6000000000000002;
      goto LABEL_24;
    case 7:
      unint64_t v38 = 0xD000000000000028;
      goto LABEL_24;
    case 8:
      type metadata accessor for FollowingNotificationsPrewarm();
      uint64_t v70 = swift_allocBox();
      uint64_t v72 = v71;
      uint64_t v73 = sub_1DFDFC870();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v72, 1, 1, v73);
      uint64_t result = swift_storeEnumTagMultiPayload();
      unint64_t v74 = 0x3000000000000004;
      goto LABEL_23;
    case 9:
      if (!*(void *)(v106 + OBJC_IVAR___TSNewsActivityData_object)) {
        goto LABEL_35;
      }
      uint64_t v46 = v106;
      type metadata accessor for BridgedNewsActivitySender();
      swift_unknownObjectRetain();
      uint64_t v47 = swift_dynamicCastClass();
      if (v47)
      {
        uint64_t v48 = v47;
        uint64_t v49 = swift_allocObject();
        uint64_t v51 = *(void *)(v46 + OBJC_IVAR___TSNewsActivityData_identifier);
        uint64_t v50 = *(void *)(v46 + OBJC_IVAR___TSNewsActivityData_identifier + 8);
        v52 = *(void **)(v48 + OBJC_IVAR___TSNewsActivitySender_viewController);
        swift_bridgeObjectRetain();
        id v53 = v52;
        uint64_t result = swift_unknownObjectRelease();
        *(void *)(v49 + 16) = v51;
        *(void *)(v49 + 24) = v50;
        uint64_t v54 = MEMORY[0x1E4FBC860];
        *(void *)(v49 + 32) = v53;
        *(void *)(v49 + 40) = v54;
        *(unsigned char *)(v49 + 48) = 2;
        unint64_t v38 = v49 | 0xA000000000000002;
        goto LABEL_24;
      }
      swift_unknownObjectRelease();
      type metadata accessor for FeedViewContext();
      swift_unknownObjectRetain();
      uint64_t v78 = swift_dynamicCastClass();
      if (!v78)
      {
LABEL_34:
        swift_unknownObjectRelease();
        goto LABEL_35;
      }
      uint64_t v79 = v78;
      uint64_t v80 = swift_allocObject();
      uint64_t v81 = *(void *)(v46 + OBJC_IVAR___TSNewsActivityData_identifier + 8);
      *(void *)(v80 + 16) = *(void *)(v46 + OBJC_IVAR___TSNewsActivityData_identifier);
      *(void *)(v80 + 24) = v81;
      uint64_t v82 = MEMORY[0x1E4FBC860];
      *(void *)(v80 + 32) = v79;
      *(void *)(v80 + 40) = v82;
      *(unsigned char *)(v80 + 48) = 1;
      void *v104 = v80 | 0xA000000000000002;
LABEL_33:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 0xALL:
      unint64_t v38 = 0xD000000000000040;
      goto LABEL_24;
    case 0xBLL:
      sub_1DFDE71E0();
      uint64_t v37 = v102;
      uint64_t v36 = v103;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v19, 1, v103) == 1)
      {
        sub_1DEB4B7AC((uint64_t)v19);
LABEL_35:
        sub_1DEB55270();
        swift_allocError();
        uint64_t result = swift_willThrow();
      }
      else
      {
        v75 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
        v76 = v98;
        v75(v98, v19, v36);
        type metadata accessor for WebLinkViewControllerType(0);
        uint64_t v70 = swift_allocBox();
        v75(v77, v76, v36);
        uint64_t result = swift_storeEnumTagMultiPayload();
        unint64_t v74 = 0x9000000000000000;
LABEL_23:
        unint64_t v38 = v70 | v74;
LABEL_24:
        void *v104 = v38;
      }
      break;
    default:
      v105[0] = *(void *)(v106 + OBJC_IVAR___TSNewsActivityData_activity);
      sub_1DFDFFFD0();
      __break(1u);
      JUMPOUT(0x1DEB551ECLL);
  }
  return result;
}

void sub_1DEB5521C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1DEB55270()
{
  unint64_t result = qword_1EAC20A38;
  if (!qword_1EAC20A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20A38);
  }
  return result;
}

uint64_t sub_1DEB552C4()
{
  sub_1DEB28744(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1DEB55304()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255) {
    sub_1DEB21B94(*(void *)(v0 + 16), *(void *)(v0 + 24), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1DEB55348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CampaignRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEB553AC()
{
  sub_1DEB28744(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_1DEB287CC(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1DEB55404()
{
  if (*(void *)(v0 + 24) != 1) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t type metadata accessor for BridgedNewsActivityData()
{
  return self;
}

uint64_t method lookup function for BridgedNewsActivityData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedNewsActivityData);
}

uint64_t dispatch thunk of BridgedNewsActivityData.__allocating_init(activity:identifier:object:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of BridgedNewsActivityData.__allocating_init(activity:identifier:object:traits:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for BridgedNewsActivityData.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DEB55544);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BridgedNewsActivityData.Errors()
{
  return &type metadata for BridgedNewsActivityData.Errors;
}

unint64_t sub_1DEB55580()
{
  unint64_t result = qword_1EAC20A40;
  if (!qword_1EAC20A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20A40);
  }
  return result;
}

uint64_t sub_1DEB55634()
{
  uint64_t v0 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v78 = (char *)&v62 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v2 - 8);
  v77 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v4 - 8);
  v76 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  v75 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v74 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v73 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for EngagementTodayFeedGroup();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v72 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v70);
  uint64_t v71 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SeenContentMarkTodayFeedGroup();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v69 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v17 - 8);
  id v68 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v19 - 8);
  v67 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v66 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v65 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v64 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v63 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v62 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v34 = (char *)&v62 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v37 = (char *)&v62 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)&v62 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v41 - 8);
  v43 = (char *)&v62 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v46 = (char *)&v62 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v49 = (char *)&v62 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v50 - 8);
  v52 = (char *)&v62 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)&v62 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v79, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v58 = type metadata accessor for NewspaperTodayFeedGroup;
      uint64_t v59 = (uint64_t)v49;
      goto LABEL_28;
    case 2u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v58 = type metadata accessor for LocalNewsTodayFeedGroup;
      uint64_t v59 = (uint64_t)v46;
      goto LABEL_28;
    case 3u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v58 = type metadata accessor for TrendingTodayFeedGroup;
      uint64_t v59 = (uint64_t)v43;
      goto LABEL_28;
    case 4u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v58 = type metadata accessor for ForYouTodayFeedGroup;
      uint64_t v59 = (uint64_t)v40;
      goto LABEL_28;
    case 5u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v60 = type metadata accessor for MissedStoriesTodayFeedGroup;
      goto LABEL_19;
    case 6u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v58 = type metadata accessor for LatestStoriesTodayFeedGroup;
      uint64_t v59 = (uint64_t)v34;
      goto LABEL_28;
    case 7u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v58 = type metadata accessor for MoreForYouTodayFeedGroup;
      uint64_t v59 = (uint64_t)v31;
      goto LABEL_28;
    case 8u:
      v52 = v63;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for TopicTodayFeedGroup;
      goto LABEL_27;
    case 9u:
      v52 = v64;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      uint64_t v56 = sub_1DEEA0DD8();
      uint64_t v57 = type metadata accessor for MagazineFeedGroup;
      goto LABEL_27;
    case 0xAu:
      v52 = v65;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_27;
    case 0xBu:
      v52 = v66;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for SubscriptionTodayFeedGroup;
      goto LABEL_27;
    case 0xCu:
      sub_1DEB61700((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
      return 0;
    case 0xDu:
      v52 = v67;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_27;
    case 0xEu:
      v52 = v68;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v68, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_27;
    case 0xFu:
      v52 = v69;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for SeenContentMarkTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for SeenContentMarkTodayFeedGroup;
      goto LABEL_27;
    case 0x10u:
      uint64_t v37 = v71;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v60 = type metadata accessor for SharedWithYouTodayFeedGroup;
LABEL_19:
      uint64_t v58 = v60;
      uint64_t v59 = (uint64_t)v37;
      goto LABEL_28;
    case 0x11u:
      v52 = v72;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for EngagementTodayFeedGroup);
      sub_1DEAC2768();
      uint64_t v56 = sub_1DFDF7350();
      uint64_t v57 = type metadata accessor for EngagementTodayFeedGroup;
      goto LABEL_27;
    case 0x12u:
      v52 = v73;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_27;
    case 0x13u:
      v52 = v74;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_27;
    case 0x14u:
      v52 = v75;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for ShortcutsTodayFeedGroup;
      goto LABEL_27;
    case 0x15u:
      v52 = v76;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_27;
    case 0x16u:
      v52 = v77;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for SavedStoriesTodayFeedGroup;
      goto LABEL_27;
    case 0x17u:
      v52 = v78;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for ChannelPickerTodayFeedGroup;
      goto LABEL_27;
    default:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      uint64_t v56 = sub_1DFDF6ED0();
      uint64_t v57 = type metadata accessor for CuratedTodayFeedGroup;
LABEL_27:
      uint64_t v58 = v57;
      uint64_t v59 = (uint64_t)v52;
LABEL_28:
      sub_1DEB61700(v59, (uint64_t (*)(void))v58);
      return v56;
  }
}

uint64_t sub_1DEB56474@<X0>(uint64_t a1@<X8>)
{
  uint64_t v86 = a1;
  uint64_t v1 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v85 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v84 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v83 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v82 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v81 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v80 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SeenContentMarkTodayFeedGroup();
  MEMORY[0x1F4188790](v14 - 8);
  v77 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v16 - 8);
  v76 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v18 - 8);
  v75 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DFDF6D40();
  uint64_t v73 = *(void *)(v20 - 8);
  uint64_t v74 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v72 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v71 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v70 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v69 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v28 - 8);
  id v68 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v67 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v67 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v38 = (char *)&v67 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v41 = (char *)&v67 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v44 = (char *)&v67 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v45 - 8);
  uint64_t v47 = (char *)&v67 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v48 - 8);
  uint64_t v50 = (char *)&v67 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v51 - 8);
  uint64_t v53 = (char *)&v67 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v54);
  uint64_t v56 = (char *)&v67 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v87, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v58 = type metadata accessor for NewspaperTodayFeedGroup;
      uint64_t v59 = (uint64_t)v50;
      return sub_1DEB61700(v59, (uint64_t (*)(void))v58);
    case 2u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v58 = type metadata accessor for LocalNewsTodayFeedGroup;
      uint64_t v59 = (uint64_t)v47;
      return sub_1DEB61700(v59, (uint64_t (*)(void))v58);
    case 3u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v58 = type metadata accessor for TrendingTodayFeedGroup;
      uint64_t v59 = (uint64_t)v44;
      return sub_1DEB61700(v59, (uint64_t (*)(void))v58);
    case 4u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v58 = type metadata accessor for ForYouTodayFeedGroup;
      uint64_t v59 = (uint64_t)v41;
      return sub_1DEB61700(v59, (uint64_t (*)(void))v58);
    case 5u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v58 = type metadata accessor for MissedStoriesTodayFeedGroup;
      uint64_t v59 = (uint64_t)v38;
      return sub_1DEB61700(v59, (uint64_t (*)(void))v58);
    case 6u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v60 = type metadata accessor for LatestStoriesTodayFeedGroup;
      goto LABEL_19;
    case 7u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v58 = type metadata accessor for MoreForYouTodayFeedGroup;
      uint64_t v59 = (uint64_t)v32;
      return sub_1DEB61700(v59, (uint64_t (*)(void))v58);
    case 8u:
      uint64_t v53 = v68;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v68, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for TopicTodayFeedGroup;
      goto LABEL_27;
    case 9u:
      uint64_t v53 = v69;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      sub_1DEEA169C(v86);
      uint64_t v57 = type metadata accessor for MagazineFeedGroup;
      goto LABEL_27;
    case 0xAu:
      uint64_t v53 = v70;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_27;
    case 0xBu:
      uint64_t v53 = v71;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for SubscriptionTodayFeedGroup;
      goto LABEL_27;
    case 0xCu:
      uint64_t v61 = v72;
      uint64_t v62 = v73;
      uint64_t v63 = v74;
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v56, v74);
      sub_1DFDF6CD0();
      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v61, v63);
    case 0xDu:
      uint64_t v53 = v75;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_27;
    case 0xEu:
      uint64_t v53 = v76;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_27;
    case 0xFu:
      uint64_t v53 = v77;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for SeenContentMarkTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for SeenContentMarkTodayFeedGroup;
      goto LABEL_27;
    case 0x10u:
      uint64_t v35 = v78;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v60 = type metadata accessor for SharedWithYouTodayFeedGroup;
LABEL_19:
      uint64_t v58 = v60;
      uint64_t v59 = (uint64_t)v35;
      return sub_1DEB61700(v59, (uint64_t (*)(void))v58);
    case 0x11u:
      sub_1DEB61700((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
      uint64_t v65 = *MEMORY[0x1E4F7FBE0];
      uint64_t v66 = sub_1DFDF8C20();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v86, v65, v66);
    case 0x12u:
      uint64_t v53 = v80;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_27;
    case 0x13u:
      uint64_t v53 = v81;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_27;
    case 0x14u:
      uint64_t v53 = v82;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for ShortcutsTodayFeedGroup;
      goto LABEL_27;
    case 0x15u:
      uint64_t v53 = v83;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_27;
    case 0x16u:
      uint64_t v53 = v84;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for SavedStoriesTodayFeedGroup;
      goto LABEL_27;
    case 0x17u:
      uint64_t v53 = v85;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for ChannelPickerTodayFeedGroup;
      goto LABEL_27;
    default:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      sub_1DFDF6EE0();
      uint64_t v57 = type metadata accessor for CuratedTodayFeedGroup;
LABEL_27:
      uint64_t v58 = v57;
      uint64_t v59 = (uint64_t)v53;
      return sub_1DEB61700(v59, (uint64_t (*)(void))v58);
  }
}

double sub_1DEB572C4()
{
  uint64_t v0 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v0 - 8);
  v104 = (char *)&v87 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v103 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v102 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  v101 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v8 - 8);
  v100 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v99 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v98);
  uint64_t v97 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SeenContentMarkTodayFeedGroup();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v96 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v95 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v94 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DFDF6D40();
  uint64_t v92 = *(void *)(v19 - 8);
  uint64_t v93 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v91 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v90 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v89 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v88 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v87 = (char *)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v34 = (char *)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v37 = (char *)&v87 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)&v87 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v43 = (char *)&v87 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v46 = (char *)&v87 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v49 = (char *)&v87 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v50 - 8);
  uint64_t v52 = (char *)&v87 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)&v87 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v105, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v59;
      uint64_t v60 = type metadata accessor for NewspaperTodayFeedGroup;
      uint64_t v61 = (uint64_t)v49;
      goto LABEL_28;
    case 2u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v62;
      uint64_t v60 = type metadata accessor for LocalNewsTodayFeedGroup;
      uint64_t v61 = (uint64_t)v46;
      goto LABEL_28;
    case 3u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v63;
      uint64_t v60 = type metadata accessor for TrendingTodayFeedGroup;
      uint64_t v61 = (uint64_t)v43;
      goto LABEL_28;
    case 4u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v64;
      uint64_t v60 = type metadata accessor for ForYouTodayFeedGroup;
      uint64_t v61 = (uint64_t)v40;
      goto LABEL_28;
    case 5u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v65;
      uint64_t v60 = type metadata accessor for MissedStoriesTodayFeedGroup;
      uint64_t v61 = (uint64_t)v37;
      goto LABEL_28;
    case 6u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v66;
      uint64_t v67 = type metadata accessor for LatestStoriesTodayFeedGroup;
      goto LABEL_19;
    case 7u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v68;
      uint64_t v60 = type metadata accessor for MoreForYouTodayFeedGroup;
      uint64_t v61 = (uint64_t)v31;
      goto LABEL_28;
    case 8u:
      uint64_t v52 = v87;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v87, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v69;
      uint64_t v58 = type metadata accessor for TopicTodayFeedGroup;
      goto LABEL_27;
    case 9u:
      uint64_t v52 = v88;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      double v57 = sub_1DEEA1F4C();
      uint64_t v58 = type metadata accessor for MagazineFeedGroup;
      goto LABEL_27;
    case 0xAu:
      uint64_t v52 = v89;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v70;
      uint64_t v58 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_27;
    case 0xBu:
      uint64_t v52 = v90;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v71;
      uint64_t v58 = type metadata accessor for SubscriptionTodayFeedGroup;
      goto LABEL_27;
    case 0xCu:
      uint64_t v72 = v91;
      uint64_t v73 = v92;
      uint64_t v74 = v93;
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v55, v93);
      sub_1DFDF6CE0();
      double v57 = v75;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v74);
      return v57;
    case 0xDu:
      uint64_t v52 = v94;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v76;
      uint64_t v58 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_27;
    case 0xEu:
      uint64_t v52 = v95;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v77;
      uint64_t v58 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_27;
    case 0xFu:
      uint64_t v52 = v96;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for SeenContentMarkTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v78;
      uint64_t v58 = type metadata accessor for SeenContentMarkTodayFeedGroup;
      goto LABEL_27;
    case 0x10u:
      uint64_t v34 = v97;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v97, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v79;
      uint64_t v67 = type metadata accessor for SharedWithYouTodayFeedGroup;
LABEL_19:
      uint64_t v60 = v67;
      uint64_t v61 = (uint64_t)v34;
      goto LABEL_28;
    case 0x11u:
      sub_1DEB61700((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
      return 1.0;
    case 0x12u:
      uint64_t v52 = v99;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v80;
      uint64_t v58 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_27;
    case 0x13u:
      uint64_t v52 = v100;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v100, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v81;
      uint64_t v58 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_27;
    case 0x14u:
      uint64_t v52 = v101;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v101, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v82;
      uint64_t v58 = type metadata accessor for ShortcutsTodayFeedGroup;
      goto LABEL_27;
    case 0x15u:
      uint64_t v52 = v102;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v102, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v83;
      uint64_t v58 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_27;
    case 0x16u:
      uint64_t v52 = v103;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v103, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v84;
      uint64_t v58 = type metadata accessor for SavedStoriesTodayFeedGroup;
      goto LABEL_27;
    case 0x17u:
      uint64_t v52 = v104;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v104, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v85;
      uint64_t v58 = type metadata accessor for ChannelPickerTodayFeedGroup;
      goto LABEL_27;
    default:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      sub_1DFDF6EF0();
      double v57 = v56;
      uint64_t v58 = type metadata accessor for CuratedTodayFeedGroup;
LABEL_27:
      uint64_t v60 = v58;
      uint64_t v61 = (uint64_t)v52;
LABEL_28:
      sub_1DEB61700(v61, (uint64_t (*)(void))v60);
      return v57;
  }
}

double sub_1DEB580DC(double (*a1)(uint64_t), double (*a2)(uint64_t), double (*a3)(uint64_t, uint64_t))
{
  v114 = a2;
  v115 = a3;
  v116 = a1;
  uint64_t v3 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v3 - 8);
  v113 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v5 - 8);
  v112 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v7 - 8);
  v111 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v9 - 8);
  v110 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v11 - 8);
  v109 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v13 - 8);
  v108 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for EngagementTodayFeedGroup();
  MEMORY[0x1F4188790](v107);
  uint64_t v106 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v105);
  v104 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SeenContentMarkTodayFeedGroup();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v103 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v102 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v99 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1DFDF6D40();
  uint64_t v100 = *(void *)(v23 - 8);
  uint64_t v101 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v98 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v97 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v96 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v95 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v94 = (char *)&v93 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v93 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v38 = (char *)&v93 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v41 = (char *)&v93 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v44 = (char *)&v93 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v45 - 8);
  uint64_t v47 = (char *)&v93 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v48 - 8);
  uint64_t v50 = (char *)&v93 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v51 - 8);
  uint64_t v53 = (char *)&v93 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v54 - 8);
  double v56 = (char *)&v93 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v57);
  double v59 = (char *)&v93 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v117, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v63 = sub_1DEB61760((uint64_t)v59, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      double v61 = v116(v63);
      double v64 = type metadata accessor for NewspaperTodayFeedGroup;
      goto LABEL_19;
    case 2u:
      uint64_t v65 = sub_1DEB61760((uint64_t)v59, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      double v61 = v116(v65);
      double v66 = type metadata accessor for LocalNewsTodayFeedGroup;
      uint64_t v67 = (uint64_t)v50;
      goto LABEL_28;
    case 3u:
      uint64_t v68 = sub_1DEB61760((uint64_t)v59, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      double v61 = v116(v68);
      double v66 = type metadata accessor for TrendingTodayFeedGroup;
      uint64_t v67 = (uint64_t)v47;
      goto LABEL_28;
    case 4u:
      uint64_t v69 = sub_1DEB61760((uint64_t)v59, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      double v61 = v116(v69);
      double v66 = type metadata accessor for ForYouTodayFeedGroup;
      uint64_t v67 = (uint64_t)v44;
      goto LABEL_28;
    case 5u:
      uint64_t v70 = sub_1DEB61760((uint64_t)v59, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      double v61 = v116(v70);
      double v66 = type metadata accessor for MissedStoriesTodayFeedGroup;
      uint64_t v67 = (uint64_t)v41;
      goto LABEL_28;
    case 6u:
      uint64_t v71 = sub_1DEB61760((uint64_t)v59, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      double v61 = v116(v71);
      double v66 = type metadata accessor for LatestStoriesTodayFeedGroup;
      uint64_t v67 = (uint64_t)v38;
      goto LABEL_28;
    case 7u:
      uint64_t v72 = sub_1DEB61760((uint64_t)v59, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      double v61 = v116(v72);
      double v66 = type metadata accessor for MoreForYouTodayFeedGroup;
      uint64_t v67 = (uint64_t)v35;
      goto LABEL_28;
    case 8u:
      double v56 = v94;
      uint64_t v73 = sub_1DEB61760((uint64_t)v59, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      double v61 = v116(v73);
      double v62 = type metadata accessor for TopicTodayFeedGroup;
      goto LABEL_27;
    case 9u:
      double v56 = v95;
      uint64_t v74 = sub_1DEB61760((uint64_t)v59, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      double v61 = v114(v74);
      double v62 = type metadata accessor for MagazineFeedGroup;
      goto LABEL_27;
    case 0xAu:
      double v56 = v96;
      uint64_t v75 = sub_1DEB61760((uint64_t)v59, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      double v61 = v116(v75);
      double v62 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_27;
    case 0xBu:
      double v56 = v97;
      uint64_t v76 = sub_1DEB61760((uint64_t)v59, (uint64_t)v97, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      double v61 = v116(v76);
      double v62 = type metadata accessor for SubscriptionTodayFeedGroup;
      goto LABEL_27;
    case 0xCu:
      uint64_t v78 = v100;
      uint64_t v77 = v101;
      double v79 = v98;
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v98, v59, v101);
      uint64_t v80 = sub_1DEA4D134(&qword_1EAC20B18, MEMORY[0x1E4F7F1B0]);
      double v61 = v115(v77, v80);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v77);
      return v61;
    case 0xDu:
      double v56 = v99;
      uint64_t v81 = sub_1DEB61760((uint64_t)v59, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      double v61 = v116(v81);
      double v62 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_27;
    case 0xEu:
      double v56 = v102;
      uint64_t v82 = sub_1DEB61760((uint64_t)v59, (uint64_t)v102, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      double v61 = v116(v82);
      double v62 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_27;
    case 0xFu:
      double v56 = v103;
      uint64_t v83 = sub_1DEB61760((uint64_t)v59, (uint64_t)v103, (uint64_t (*)(void))type metadata accessor for SeenContentMarkTodayFeedGroup);
      double v61 = v116(v83);
      double v62 = type metadata accessor for SeenContentMarkTodayFeedGroup;
      goto LABEL_27;
    case 0x10u:
      uint64_t v53 = v104;
      uint64_t v84 = sub_1DEB61760((uint64_t)v59, (uint64_t)v104, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      double v61 = v116(v84);
      double v64 = type metadata accessor for SharedWithYouTodayFeedGroup;
LABEL_19:
      double v66 = v64;
      uint64_t v67 = (uint64_t)v53;
      goto LABEL_28;
    case 0x11u:
      double v56 = v106;
      sub_1DEB61760((uint64_t)v59, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for EngagementTodayFeedGroup);
      uint64_t v85 = sub_1DEA4D134(&qword_1EBADAB30, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroup);
      double v61 = v115(v107, v85);
      double v62 = type metadata accessor for EngagementTodayFeedGroup;
      goto LABEL_27;
    case 0x12u:
      double v56 = v108;
      uint64_t v86 = sub_1DEB61760((uint64_t)v59, (uint64_t)v108, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      double v61 = v116(v86);
      double v62 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_27;
    case 0x13u:
      double v56 = v109;
      uint64_t v87 = sub_1DEB61760((uint64_t)v59, (uint64_t)v109, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      double v61 = v116(v87);
      double v62 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_27;
    case 0x14u:
      double v56 = v110;
      uint64_t v88 = sub_1DEB61760((uint64_t)v59, (uint64_t)v110, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      double v61 = v116(v88);
      double v62 = type metadata accessor for ShortcutsTodayFeedGroup;
      goto LABEL_27;
    case 0x15u:
      double v56 = v111;
      uint64_t v89 = sub_1DEB61760((uint64_t)v59, (uint64_t)v111, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      double v61 = v116(v89);
      double v62 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_27;
    case 0x16u:
      double v56 = v112;
      uint64_t v90 = sub_1DEB61760((uint64_t)v59, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      double v61 = v116(v90);
      double v62 = type metadata accessor for SavedStoriesTodayFeedGroup;
      goto LABEL_27;
    case 0x17u:
      double v56 = v113;
      uint64_t v91 = sub_1DEB61760((uint64_t)v59, (uint64_t)v113, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      double v61 = v116(v91);
      double v62 = type metadata accessor for ChannelPickerTodayFeedGroup;
      goto LABEL_27;
    default:
      uint64_t v60 = sub_1DEB61760((uint64_t)v59, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      double v61 = v116(v60);
      double v62 = type metadata accessor for CuratedTodayFeedGroup;
LABEL_27:
      double v66 = v62;
      uint64_t v67 = (uint64_t)v56;
LABEL_28:
      sub_1DEB61700(v67, (uint64_t (*)(void))v66);
      return v61;
  }
}

uint64_t sub_1DEB590C4()
{
  uint64_t v0 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v92 = (char *)&v79 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v91 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v90 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v89 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v87);
  uint64_t v88 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SeenContentMarkTodayFeedGroup();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v86 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v85 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v84 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v83 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v82 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v81 = (uint64_t)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v80 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v34 = (char *)&v79 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v37 = (char *)&v79 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)&v79 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v43 = (char *)&v79 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1DFDFA9F0();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v94 = v44;
  uint64_t v95 = v45;
  MEMORY[0x1F4188790](v44);
  uint64_t v93 = (char *)&v79 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v49 = (char *)&v79 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v50);
  uint64_t v52 = (char *)&v79 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v96, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEB61760((uint64_t)v52, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      double v56 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v56, v94);
      uint64_t v57 = type metadata accessor for NewspaperTodayFeedGroup;
      uint64_t v58 = (uint64_t)v43;
      goto LABEL_24;
    case 2u:
      sub_1DEB61760((uint64_t)v52, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      double v59 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v59, v94);
      uint64_t v57 = type metadata accessor for LocalNewsTodayFeedGroup;
      uint64_t v58 = (uint64_t)v40;
      goto LABEL_24;
    case 3u:
      sub_1DEB61760((uint64_t)v52, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      uint64_t v60 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v60, v94);
      uint64_t v57 = type metadata accessor for TrendingTodayFeedGroup;
      uint64_t v58 = (uint64_t)v37;
      goto LABEL_24;
    case 4u:
      sub_1DEB61760((uint64_t)v52, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      double v61 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v61, v94);
      uint64_t v57 = type metadata accessor for ForYouTodayFeedGroup;
      uint64_t v58 = (uint64_t)v34;
      goto LABEL_24;
    case 5u:
      sub_1DEB61760((uint64_t)v52, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      double v62 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v62, v94);
      uint64_t v57 = type metadata accessor for MissedStoriesTodayFeedGroup;
      uint64_t v58 = (uint64_t)v31;
      goto LABEL_24;
    case 6u:
      sub_1DEB61760((uint64_t)v52, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      uint64_t v63 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v63, v94);
      uint64_t v57 = type metadata accessor for LatestStoriesTodayFeedGroup;
      uint64_t v58 = (uint64_t)v28;
      goto LABEL_24;
    case 7u:
      sub_1DEB61760((uint64_t)v52, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      double v64 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v64, v94);
      uint64_t v57 = type metadata accessor for MoreForYouTodayFeedGroup;
      uint64_t v58 = (uint64_t)v25;
      goto LABEL_24;
    case 8u:
      uint64_t v49 = v80;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      uint64_t v65 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v65, v94);
      uint64_t v55 = type metadata accessor for TopicTodayFeedGroup;
      goto LABEL_23;
    case 9u:
      uint64_t v66 = (uint64_t)v52;
      uint64_t v67 = v81;
      sub_1DEB61760(v66, v81, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      uint64_t v53 = sub_1DEEA3CA4();
      uint64_t v57 = type metadata accessor for MagazineFeedGroup;
      uint64_t v58 = v67;
      goto LABEL_24;
    case 0xAu:
      uint64_t v49 = v82;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      uint64_t v68 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v68, v94);
      uint64_t v55 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_23;
    case 0xBu:
      uint64_t v49 = v83;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      uint64_t v69 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v69, v94);
      uint64_t v55 = type metadata accessor for SubscriptionTodayFeedGroup;
      goto LABEL_23;
    case 0xCu:
    case 0x11u:
    case 0x14u:
    case 0x16u:
      sub_1DEB61700((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
      return MEMORY[0x1E4FBC860];
    case 0xDu:
      uint64_t v49 = v84;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      uint64_t v70 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v70, v94);
      uint64_t v55 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_23;
    case 0xEu:
      uint64_t v49 = v85;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      uint64_t v71 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v71, v94);
      uint64_t v55 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_23;
    case 0xFu:
      uint64_t v49 = v86;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for SeenContentMarkTodayFeedGroup);
      uint64_t v72 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v72, v94);
      uint64_t v55 = type metadata accessor for SeenContentMarkTodayFeedGroup;
      goto LABEL_23;
    case 0x10u:
      uint64_t v49 = v88;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      uint64_t v73 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v73, v94);
      uint64_t v55 = type metadata accessor for SharedWithYouTodayFeedGroup;
      goto LABEL_23;
    case 0x12u:
      uint64_t v49 = v89;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      uint64_t v74 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v74, v94);
      uint64_t v55 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_23;
    case 0x13u:
      uint64_t v49 = v90;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      uint64_t v75 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v75, v94);
      uint64_t v55 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_23;
    case 0x15u:
      uint64_t v49 = v91;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      uint64_t v76 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v76, v94);
      uint64_t v55 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_23;
    case 0x17u:
      uint64_t v49 = v92;
      sub_1DEB61760((uint64_t)v52, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      uint64_t v77 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v77, v94);
      uint64_t v55 = type metadata accessor for ChannelPickerTodayFeedGroup;
      goto LABEL_23;
    default:
      sub_1DEB61760((uint64_t)v52, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      uint64_t v54 = v93;
      sub_1DFDF6FB0();
      uint64_t v53 = sub_1DFDFA9C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v54, v94);
      uint64_t v55 = type metadata accessor for CuratedTodayFeedGroup;
LABEL_23:
      uint64_t v57 = v55;
      uint64_t v58 = (uint64_t)v49;
LABEL_24:
      sub_1DEB61700(v58, (uint64_t (*)(void))v57);
      return v53;
  }
}

uint64_t sub_1DEB5A0AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MagazineFeedGroup();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 7u:
    case 8u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
      sub_1DEB61700((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
      uint64_t v13 = *MEMORY[0x1E4F7FFA8];
      uint64_t v14 = sub_1DFDF9170();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a1, v13, v14);
      uint64_t v15 = *MEMORY[0x1E4F7F6A8];
      uint64_t v16 = sub_1DFDF7DD0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a1, v15, v16);
    case 2u:
      uint64_t v18 = (unsigned int *)MEMORY[0x1E4F7FED8];
      goto LABEL_12;
    case 4u:
      uint64_t v18 = (unsigned int *)MEMORY[0x1E4F7FEF0];
      goto LABEL_12;
    case 5u:
      uint64_t v18 = (unsigned int *)MEMORY[0x1E4F7FF88];
      goto LABEL_12;
    case 6u:
      uint64_t v18 = (unsigned int *)MEMORY[0x1E4F7FF58];
      goto LABEL_12;
    case 9u:
      sub_1DEB61760((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      sub_1DEA882C4((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 9u:
        case 0xAu:
        case 0xCu:
          sub_1DEB61700((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
          uint64_t v26 = *MEMORY[0x1E4F7FEE8];
          uint64_t v27 = sub_1DFDF9170();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(a1, v26, v27);
          uint64_t v19 = (unsigned int *)MEMORY[0x1E4F7F6A8];
          goto LABEL_17;
        case 2u:
        case 6u:
        case 8u:
          sub_1DEB61700((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
          uint64_t v28 = *MEMORY[0x1E4F7FC18];
          uint64_t v29 = sub_1DFDF8C30();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(a1, v28, v29);
          uint64_t v19 = (unsigned int *)MEMORY[0x1E4F7F698];
          goto LABEL_17;
        case 3u:
          sub_1DEB61CF0(0, &qword_1EBABA278, MEMORY[0x1E4F7FFB8], MEMORY[0x1E4F7FC30]);
          uint64_t v33 = a1 + *(int *)(v32 + 48);
          uint64_t v34 = *MEMORY[0x1E4F7FEE8];
          uint64_t v35 = sub_1DFDF9170();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(a1, v34, v35);
          uint64_t v36 = *MEMORY[0x1E4F7FC18];
          uint64_t v37 = sub_1DFDF8C30();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v33, v36, v37);
          uint64_t v38 = (unsigned int *)MEMORY[0x1E4F7F690];
          goto LABEL_21;
        case 5u:
          uint64_t v39 = *MEMORY[0x1E4F7FC28];
          uint64_t v40 = sub_1DFDF8C30();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(a1, v39, v40);
          uint64_t v38 = (unsigned int *)MEMORY[0x1E4F7F698];
          goto LABEL_21;
        case 0xBu:
          uint64_t v41 = *MEMORY[0x1E4F7FF40];
          uint64_t v42 = sub_1DFDF9170();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(a1, v41, v42);
          uint64_t v38 = (unsigned int *)MEMORY[0x1E4F7F6A8];
LABEL_21:
          uint64_t v43 = *v38;
          uint64_t v44 = sub_1DFDF7DD0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(a1, v43, v44);
          sub_1DEB61700((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
          break;
        default:
          sub_1DEB61700((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
          uint64_t v19 = (unsigned int *)MEMORY[0x1E4F7F6A0];
LABEL_17:
          uint64_t v30 = *v19;
          uint64_t v31 = sub_1DFDF7DD0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(a1, v30, v31);
          break;
      }
      uint64_t v24 = type metadata accessor for MagazineFeedGroup;
      uint64_t v25 = (uint64_t)v9;
      return sub_1DEB61700(v25, (uint64_t (*)(void))v24);
    case 0x12u:
      uint64_t v18 = (unsigned int *)MEMORY[0x1E4F7FF10];
      goto LABEL_12;
    case 0x13u:
      uint64_t v18 = (unsigned int *)MEMORY[0x1E4F7FF50];
      goto LABEL_12;
    default:
      uint64_t v18 = (unsigned int *)MEMORY[0x1E4F7FFA0];
LABEL_12:
      uint64_t v20 = *v18;
      uint64_t v21 = sub_1DFDF9170();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(a1, v20, v21);
      uint64_t v22 = *MEMORY[0x1E4F7F6A8];
      uint64_t v23 = sub_1DFDF7DD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(a1, v22, v23);
      uint64_t v24 = type metadata accessor for TodayFeedGroup;
      uint64_t v25 = (uint64_t)v12;
      return sub_1DEB61700(v25, (uint64_t (*)(void))v24);
  }
}

unint64_t sub_1DEB5A840()
{
  uint64_t v0 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v82 = (char *)&v65 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v81 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v80 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v79 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v78 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v77 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v76);
  uint64_t v75 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v74 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v73 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SeenContentMarkTodayFeedGroup();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v72 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v71 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v70 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1DFDF6D40();
  uint64_t v68 = *(void *)(v23 - 8);
  uint64_t v69 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v67 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v66 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v65 = (char *)&v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v65 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v34 = (char *)&v65 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v37 = (char *)&v65 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)&v65 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v43 = (char *)&v65 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v46 = (char *)&v65 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v49 = (char *)&v65 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v50 - 8);
  uint64_t v52 = (char *)&v65 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)&v65 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v83, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v58 = type metadata accessor for NewspaperTodayFeedGroup;
      uint64_t v59 = (uint64_t)v49;
      goto LABEL_28;
    case 2u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v58 = type metadata accessor for LocalNewsTodayFeedGroup;
      uint64_t v59 = (uint64_t)v46;
      goto LABEL_28;
    case 3u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v58 = type metadata accessor for TrendingTodayFeedGroup;
      uint64_t v59 = (uint64_t)v43;
      goto LABEL_28;
    case 4u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v58 = type metadata accessor for ForYouTodayFeedGroup;
      uint64_t v59 = (uint64_t)v40;
      goto LABEL_28;
    case 5u:
      uint64_t v52 = v73;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for MissedStoriesTodayFeedGroup;
      goto LABEL_27;
    case 6u:
      uint64_t v52 = v74;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for LatestStoriesTodayFeedGroup;
      goto LABEL_27;
    case 7u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v58 = type metadata accessor for MoreForYouTodayFeedGroup;
      uint64_t v59 = (uint64_t)v37;
      goto LABEL_28;
    case 8u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v58 = type metadata accessor for TopicTodayFeedGroup;
      uint64_t v59 = (uint64_t)v34;
      goto LABEL_28;
    case 9u:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      unint64_t v56 = sub_1DEEA4934();
      uint64_t v60 = type metadata accessor for MagazineFeedGroup;
      goto LABEL_19;
    case 0xAu:
      uint64_t v52 = v65;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_27;
    case 0xBu:
      uint64_t v52 = v66;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for SubscriptionTodayFeedGroup;
      goto LABEL_27;
    case 0xCu:
      double v61 = v67;
      uint64_t v62 = v68;
      uint64_t v63 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v55, v69);
      unint64_t v56 = sub_1DFDF6D00();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
      return v56;
    case 0xDu:
      uint64_t v52 = v70;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_27;
    case 0xEu:
      uint64_t v52 = v71;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_27;
    case 0xFu:
      uint64_t v52 = v72;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for SeenContentMarkTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for SeenContentMarkTodayFeedGroup;
      goto LABEL_27;
    case 0x10u:
      uint64_t v31 = v75;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v60 = type metadata accessor for SharedWithYouTodayFeedGroup;
LABEL_19:
      uint64_t v58 = v60;
      uint64_t v59 = (uint64_t)v31;
      goto LABEL_28;
    case 0x11u:
      sub_1DEB61700((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
      return sub_1DF3496B8(MEMORY[0x1E4FBC860]);
    case 0x12u:
      uint64_t v52 = v77;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_27;
    case 0x13u:
      uint64_t v52 = v78;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_27;
    case 0x14u:
      uint64_t v52 = v79;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for ShortcutsTodayFeedGroup;
      goto LABEL_27;
    case 0x15u:
      uint64_t v52 = v80;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_27;
    case 0x16u:
      uint64_t v52 = v81;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for SavedStoriesTodayFeedGroup;
      goto LABEL_27;
    case 0x17u:
      uint64_t v52 = v82;
      sub_1DEB61760((uint64_t)v55, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for ChannelPickerTodayFeedGroup;
      goto LABEL_27;
    default:
      sub_1DEB61760((uint64_t)v55, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      unint64_t v56 = sub_1DFDF6F40();
      uint64_t v57 = type metadata accessor for CuratedTodayFeedGroup;
LABEL_27:
      uint64_t v58 = v57;
      uint64_t v59 = (uint64_t)v52;
LABEL_28:
      sub_1DEB61700(v59, (uint64_t (*)(void))v58);
      return v56;
  }
}

uint64_t sub_1DEB5B65C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v1 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v88 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v87 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v86 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v85 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v84 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v83 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v82);
  uint64_t v81 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB61C9C(0, &qword_1EBAA6330, MEMORY[0x1E4F7F5A0]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v89 = (char *)&v71 - v15;
  uint64_t v16 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v80 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v79 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DFDF6D40();
  uint64_t v77 = *(void *)(v20 - 8);
  uint64_t v78 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v76 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v75 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v74 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v73 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v72 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v38 = (char *)&v71 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v41 = (char *)&v71 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v44 = (char *)&v71 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v45 - 8);
  uint64_t v47 = (char *)&v71 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v48 - 8);
  uint64_t v50 = (char *)&v71 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v51 - 8);
  uint64_t v53 = (char *)&v71 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v54);
  unint64_t v56 = (char *)&v71 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v91, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      sub_1DFDF7000();
      uint64_t v65 = type metadata accessor for NewspaperTodayFeedGroup;
      uint64_t v66 = (uint64_t)v50;
      return sub_1DEB61700(v66, (uint64_t (*)(void))v65);
    case 2u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      sub_1DFDF7000();
      uint64_t v65 = type metadata accessor for LocalNewsTodayFeedGroup;
      uint64_t v66 = (uint64_t)v47;
      return sub_1DEB61700(v66, (uint64_t (*)(void))v65);
    case 3u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      sub_1DFDF7000();
      uint64_t v65 = type metadata accessor for TrendingTodayFeedGroup;
      uint64_t v66 = (uint64_t)v44;
      return sub_1DEB61700(v66, (uint64_t (*)(void))v65);
    case 4u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      sub_1DFDF7000();
      uint64_t v65 = type metadata accessor for ForYouTodayFeedGroup;
      uint64_t v66 = (uint64_t)v41;
      return sub_1DEB61700(v66, (uint64_t (*)(void))v65);
    case 5u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      sub_1DFDF7000();
      uint64_t v65 = type metadata accessor for MissedStoriesTodayFeedGroup;
      uint64_t v66 = (uint64_t)v38;
      return sub_1DEB61700(v66, (uint64_t (*)(void))v65);
    case 6u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      sub_1DFDF7000();
      uint64_t v65 = type metadata accessor for LatestStoriesTodayFeedGroup;
      uint64_t v66 = (uint64_t)v35;
      return sub_1DEB61700(v66, (uint64_t (*)(void))v65);
    case 7u:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      sub_1DFDF7000();
      uint64_t v67 = type metadata accessor for MoreForYouTodayFeedGroup;
      goto LABEL_19;
    case 8u:
      uint64_t v53 = v72;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for TopicTodayFeedGroup;
      goto LABEL_26;
    case 9u:
      uint64_t v53 = v73;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      sub_1DEEA503C(v90);
      double v64 = type metadata accessor for MagazineFeedGroup;
      goto LABEL_26;
    case 0xAu:
      uint64_t v53 = v74;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_26;
    case 0xBu:
      uint64_t v53 = v75;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for SubscriptionTodayFeedGroup;
      goto LABEL_26;
    case 0xCu:
      uint64_t v68 = v76;
      uint64_t v69 = v77;
      uint64_t v70 = v78;
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v56, v78);
      sub_1DFDF6D30();
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v68, v70);
    case 0xDu:
      uint64_t v53 = v79;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_26;
    case 0xEu:
      uint64_t v53 = v80;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_26;
    case 0xFu:
    case 0x11u:
      sub_1DEB61700((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
      uint64_t v57 = v89;
      sub_1DFDF9040();
      uint64_t v58 = *MEMORY[0x1E4F7F598];
      uint64_t v59 = sub_1DFDF7A80();
      uint64_t v60 = *(void *)(v59 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 104))(v57, v58, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      uint64_t v61 = v90;
      sub_1DFDF7CA0();
      uint64_t v62 = sub_1DFDF7CB0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
    case 0x10u:
      uint64_t v32 = v81;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      sub_1DFDF7000();
      uint64_t v67 = type metadata accessor for SharedWithYouTodayFeedGroup;
LABEL_19:
      uint64_t v65 = v67;
      uint64_t v66 = (uint64_t)v32;
      return sub_1DEB61700(v66, (uint64_t (*)(void))v65);
    case 0x12u:
      uint64_t v53 = v83;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_26;
    case 0x13u:
      uint64_t v53 = v84;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_26;
    case 0x14u:
      uint64_t v53 = v85;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for ShortcutsTodayFeedGroup;
      goto LABEL_26;
    case 0x15u:
      uint64_t v53 = v86;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_26;
    case 0x16u:
      uint64_t v53 = v87;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v87, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for SavedStoriesTodayFeedGroup;
      goto LABEL_26;
    case 0x17u:
      uint64_t v53 = v88;
      sub_1DEB61760((uint64_t)v56, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for ChannelPickerTodayFeedGroup;
      goto LABEL_26;
    default:
      sub_1DEB61760((uint64_t)v56, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      sub_1DFDF7000();
      double v64 = type metadata accessor for CuratedTodayFeedGroup;
LABEL_26:
      uint64_t v65 = v64;
      uint64_t v66 = (uint64_t)v53;
      return sub_1DEB61700(v66, (uint64_t (*)(void))v65);
  }
}

double sub_1DEB5C598()
{
  return sub_1DEB580DC(MEMORY[0x1E4F7F228], (double (*)(uint64_t))sub_1DEEA2878, MEMORY[0x1E4F806E8]);
}

double sub_1DEB5C5EC()
{
  return sub_1DEB580DC(MEMORY[0x1E4F7F210], (double (*)(uint64_t))sub_1DEEA3254, MEMORY[0x1E4F806E0]);
}

uint64_t sub_1DEB5C640()
{
  sub_1DEA4D134(&qword_1EBAAAF10, (void (*)(uint64_t))type metadata accessor for TodayFeedGroup);
  return sub_1DFDFA330();
}

uint64_t sub_1DEB5C6C4(uint64_t a1)
{
  uint64_t v2 = sub_1DEA4D134(&qword_1EBAAAF10, (void (*)(uint64_t))type metadata accessor for TodayFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DEB5C794()
{
  uint64_t v0 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v90 = (char *)&v69 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v89 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v88 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v87 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v86 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v85 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v83);
  uint64_t v84 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v82 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v81 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DFDF6D40();
  uint64_t v79 = *(void *)(v17 - 8);
  uint64_t v80 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v77 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DFDFA9F0();
  uint64_t v75 = *(void *)(v19 - 8);
  uint64_t v76 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v74 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v78 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v73 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v72 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v71 = (char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v70 = (char *)&v69 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v69 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v69 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v38 = (char *)&v69 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v41 = (char *)&v69 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (char *)&v69 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v45);
  uint64_t v47 = (char *)&v69 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v48 - 8);
  uint64_t v50 = (char *)&v69 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (char *)&v69 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v91, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEB61760((uint64_t)v53, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      id v56 = objc_msgSend(*(id *)&v47[*(int *)(v45 + 20)], sel_name);
      uint64_t v54 = sub_1DFDFDD20();

      uint64_t v57 = type metadata accessor for NewspaperTodayFeedGroup;
      uint64_t v58 = (uint64_t)v47;
      goto LABEL_28;
    case 2u:
      sub_1DEB61760((uint64_t)v53, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      id v59 = objc_msgSend(*(id *)&v44[*(int *)(v42 + 20)], sel_name);
      uint64_t v54 = sub_1DFDFDD20();

      uint64_t v57 = type metadata accessor for LocalNewsTodayFeedGroup;
      uint64_t v58 = (uint64_t)v44;
      goto LABEL_28;
    case 3u:
      sub_1DEB61760((uint64_t)v53, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v60 = type metadata accessor for TrendingTodayFeedGroup;
      goto LABEL_32;
    case 4u:
      sub_1DEB61760((uint64_t)v53, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v57 = type metadata accessor for ForYouTodayFeedGroup;
      uint64_t v58 = (uint64_t)v38;
      goto LABEL_28;
    case 5u:
      sub_1DEB61760((uint64_t)v53, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v61 = type metadata accessor for MissedStoriesTodayFeedGroup;
      goto LABEL_20;
    case 6u:
      uint64_t v50 = v69;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for LatestStoriesTodayFeedGroup;
      goto LABEL_27;
    case 7u:
      uint64_t v50 = v70;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for MoreForYouTodayFeedGroup;
      goto LABEL_27;
    case 8u:
      uint64_t v50 = v71;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for TopicTodayFeedGroup;
      goto LABEL_27;
    case 9u:
      uint64_t v50 = v72;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      uint64_t v54 = sub_1DEEA5F44();
      uint64_t v55 = type metadata accessor for MagazineFeedGroup;
      goto LABEL_27;
    case 0xAu:
      uint64_t v50 = v73;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_27;
    case 0xBu:
      uint64_t v41 = v78;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      uint64_t v62 = v74;
      sub_1DFDF6FB0();
      uint64_t v63 = (void *)sub_1DFDFA940();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v62, v76);
      if (v63)
      {
        id v64 = objc_msgSend(v63, sel_name);
        swift_unknownObjectRelease();
        uint64_t v54 = sub_1DFDFDD20();
      }
      else
      {
        uint64_t v54 = 0;
      }
      uint64_t v60 = type metadata accessor for SubscriptionTodayFeedGroup;
LABEL_32:
      uint64_t v57 = v60;
      uint64_t v58 = (uint64_t)v41;
      goto LABEL_28;
    case 0xCu:
      uint64_t v66 = v79;
      uint64_t v65 = v80;
      uint64_t v67 = v77;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v77, v53, v80);
      uint64_t v54 = sub_1DFDF6CA0();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v65);
      return v54;
    case 0xDu:
      uint64_t v50 = v81;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_27;
    case 0xEu:
      uint64_t v50 = v82;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_27;
    case 0xFu:
    case 0x11u:
      sub_1DEB61700((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
      return 0;
    case 0x10u:
      uint64_t v35 = v84;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v61 = type metadata accessor for SharedWithYouTodayFeedGroup;
LABEL_20:
      uint64_t v57 = v61;
      uint64_t v58 = (uint64_t)v35;
      goto LABEL_28;
    case 0x12u:
      uint64_t v50 = v85;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_27;
    case 0x13u:
      uint64_t v50 = v86;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_27;
    case 0x14u:
      uint64_t v50 = v87;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v87, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for ShortcutsTodayFeedGroup;
      goto LABEL_27;
    case 0x15u:
      uint64_t v50 = v88;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_27;
    case 0x16u:
      uint64_t v50 = v89;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for SavedStoriesTodayFeedGroup;
      goto LABEL_27;
    case 0x17u:
      uint64_t v50 = v90;
      sub_1DEB61760((uint64_t)v53, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for ChannelPickerTodayFeedGroup;
      goto LABEL_27;
    default:
      sub_1DEB61760((uint64_t)v53, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      uint64_t v54 = sub_1DFDF6EB0();
      uint64_t v55 = type metadata accessor for CuratedTodayFeedGroup;
LABEL_27:
      uint64_t v57 = v55;
      uint64_t v58 = (uint64_t)v50;
LABEL_28:
      sub_1DEB61700(v58, (uint64_t (*)(void))v57);
      return v54;
  }
}

uint64_t sub_1DEB5D6C0()
{
  uint64_t v83 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v83);
  uint64_t v82 = (char *)&v50 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v81);
  uint64_t v80 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v77);
  uint64_t v76 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v75);
  uint64_t v74 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v73 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for EngagementTodayFeedGroup();
  MEMORY[0x1F4188790](v72);
  uint64_t v71 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v70);
  uint64_t v69 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for SeenContentMarkTodayFeedGroup();
  MEMORY[0x1F4188790](v68);
  uint64_t v67 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v66);
  uint64_t v65 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1DFDF6D40();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v60 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v59);
  uint64_t v58 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v57);
  id v56 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v55 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v54);
  uint64_t v53 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v50 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v50 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v50 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v50 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v38 = (char *)&v50 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v50 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v84, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEB61760((uint64_t)v41, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      sub_1DEA4D134(&qword_1EBAB05F0, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v44 = type metadata accessor for NewspaperTodayFeedGroup;
      uint64_t v45 = (uint64_t)v35;
      goto LABEL_27;
    case 2u:
      sub_1DEB61760((uint64_t)v41, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      sub_1DEA4D134((unint64_t *)&unk_1EBABE710, (void (*)(uint64_t))type metadata accessor for LocalNewsTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v44 = type metadata accessor for LocalNewsTodayFeedGroup;
      uint64_t v45 = (uint64_t)v32;
      goto LABEL_27;
    case 3u:
      sub_1DEB61760((uint64_t)v41, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      uint64_t v42 = sub_1DFDF6F10();
      uint64_t v44 = type metadata accessor for TrendingTodayFeedGroup;
      uint64_t v45 = (uint64_t)v29;
      goto LABEL_27;
    case 4u:
      sub_1DEB61760((uint64_t)v41, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      uint64_t v42 = sub_1DFDF6F10();
      uint64_t v44 = type metadata accessor for ForYouTodayFeedGroup;
      uint64_t v45 = (uint64_t)v26;
      goto LABEL_27;
    case 5u:
      sub_1DEB61760((uint64_t)v41, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      uint64_t v42 = sub_1DFDF6F10();
      uint64_t v44 = type metadata accessor for MissedStoriesTodayFeedGroup;
      uint64_t v45 = (uint64_t)v23;
      goto LABEL_27;
    case 6u:
      uint64_t v38 = v50;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      uint64_t v42 = sub_1DFDF6F10();
      uint64_t v43 = type metadata accessor for LatestStoriesTodayFeedGroup;
      goto LABEL_26;
    case 7u:
      uint64_t v38 = v51;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      sub_1DEA4D134(&qword_1EBAA4EB0, (void (*)(uint64_t))type metadata accessor for MoreForYouTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for MoreForYouTodayFeedGroup;
      goto LABEL_26;
    case 8u:
      uint64_t v38 = v53;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      sub_1DEA4D134(&qword_1EBAADC10, (void (*)(uint64_t))type metadata accessor for TopicTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for TopicTodayFeedGroup;
      goto LABEL_26;
    case 9u:
      uint64_t v38 = v55;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      uint64_t v42 = sub_1DEEA6A74();
      uint64_t v43 = type metadata accessor for MagazineFeedGroup;
      goto LABEL_26;
    case 0xAu:
      uint64_t v38 = v56;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      sub_1DEA4D134(&qword_1EAC20B10, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_26;
    case 0xBu:
      uint64_t v38 = v58;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      sub_1DEA4D134(&qword_1EAC20B08, (void (*)(uint64_t))type metadata accessor for SubscriptionTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for SubscriptionTodayFeedGroup;
      goto LABEL_26;
    case 0xCu:
      uint64_t v46 = v61;
      uint64_t v47 = v60;
      uint64_t v48 = v62;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v60, v41, v62);
      uint64_t v42 = sub_1DFDF7FB0();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
      return v42;
    case 0xDu:
      uint64_t v38 = v63;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      sub_1DEA4D134(&qword_1EBAB0960, (void (*)(uint64_t))type metadata accessor for SpotlightTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_26;
    case 0xEu:
      uint64_t v38 = v65;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      sub_1DEA4D134(&qword_1EBAA4EE0, (void (*)(uint64_t))type metadata accessor for SuggestionTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_26;
    case 0xFu:
      uint64_t v38 = v67;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for SeenContentMarkTodayFeedGroup);
      sub_1DEA4D134(&qword_1EBABF6C0, (void (*)(uint64_t))type metadata accessor for SeenContentMarkTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for SeenContentMarkTodayFeedGroup;
      goto LABEL_26;
    case 0x10u:
      uint64_t v38 = v69;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      sub_1DEA4D134(&qword_1EAC20B00, (void (*)(uint64_t))type metadata accessor for SharedWithYouTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for SharedWithYouTodayFeedGroup;
      goto LABEL_26;
    case 0x11u:
      uint64_t v38 = v71;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for EngagementTodayFeedGroup);
      sub_1DEA4D134((unint64_t *)&unk_1EBACC4D0, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for EngagementTodayFeedGroup;
      goto LABEL_26;
    case 0x12u:
      uint64_t v38 = v73;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      uint64_t v42 = sub_1DFDF6F10();
      uint64_t v43 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_26;
    case 0x13u:
      uint64_t v38 = v74;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      sub_1DEA4D134(&qword_1EBACC628, (void (*)(uint64_t))type metadata accessor for IntroToSportsTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_26;
    case 0x14u:
      uint64_t v38 = v76;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      sub_1DEA4D134(&qword_1EBAF46B8, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for ShortcutsTodayFeedGroup;
      goto LABEL_26;
    case 0x15u:
      uint64_t v38 = v78;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      sub_1DEA4D134(&qword_1EBAF4238, (void (*)(uint64_t))type metadata accessor for ChannelTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_26;
    case 0x16u:
      uint64_t v38 = v80;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      sub_1DEA4D134(&qword_1EAC20AF8, (void (*)(uint64_t))type metadata accessor for SavedStoriesTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for SavedStoriesTodayFeedGroup;
      goto LABEL_26;
    case 0x17u:
      uint64_t v38 = v82;
      sub_1DEB61760((uint64_t)v41, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      sub_1DEA4D134(&qword_1EAC20AF0, (void (*)(uint64_t))type metadata accessor for ChannelPickerTodayFeedGroup);
      uint64_t v42 = sub_1DFDF7FB0();
      uint64_t v43 = type metadata accessor for ChannelPickerTodayFeedGroup;
      goto LABEL_26;
    default:
      sub_1DEB61760((uint64_t)v41, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      uint64_t v42 = sub_1DFDF6F10();
      uint64_t v43 = type metadata accessor for CuratedTodayFeedGroup;
LABEL_26:
      uint64_t v44 = v43;
      uint64_t v45 = (uint64_t)v38;
LABEL_27:
      sub_1DEB61700(v45, (uint64_t (*)(void))v44);
      return v42;
  }
}

uint64_t sub_1DEB5E9DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)(a1 + 24) = type metadata accessor for NewspaperTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134((unint64_t *)&unk_1EAC2FF80, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for NewspaperTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 2u:
      *(void *)(a1 + 24) = type metadata accessor for LocalNewsTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EBAD07A8, (void (*)(uint64_t))type metadata accessor for LocalNewsTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for LocalNewsTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 3u:
      *(void *)(a1 + 24) = type metadata accessor for TrendingTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EBACBA78, (void (*)(uint64_t))type metadata accessor for TrendingTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for TrendingTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 4u:
      *(void *)(a1 + 24) = type metadata accessor for ForYouTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134((unint64_t *)&unk_1EBACBA40, (void (*)(uint64_t))type metadata accessor for ForYouTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for ForYouTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 5u:
      *(void *)(a1 + 24) = type metadata accessor for MissedStoriesTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EBAD1010, (void (*)(uint64_t))type metadata accessor for MissedStoriesTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for MissedStoriesTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 6u:
      *(void *)(a1 + 24) = type metadata accessor for LatestStoriesTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EAC20618, (void (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for LatestStoriesTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 7u:
      *(void *)(a1 + 24) = type metadata accessor for MoreForYouTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EAC20A80, (void (*)(uint64_t))type metadata accessor for MoreForYouTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for MoreForYouTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 8u:
      *(void *)(a1 + 24) = type metadata accessor for TopicTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134((unint64_t *)&unk_1EBAD0B38, (void (*)(uint64_t))type metadata accessor for TopicTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for TopicTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 9u:
      sub_1DEB61760((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      sub_1DEEA57B0(a1);
      return sub_1DEB61700((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
    case 0xAu:
      *(void *)(a1 + 24) = type metadata accessor for NewFollowTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EAC20A78, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for NewFollowTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0xBu:
      *(void *)(a1 + 24) = type metadata accessor for SubscriptionTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EAC20A70, (void (*)(uint64_t))type metadata accessor for SubscriptionTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for SubscriptionTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0xCu:
    case 0x11u:
      uint64_t result = sub_1DEB61700((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 0;
      return result;
    case 0xDu:
      *(void *)(a1 + 24) = type metadata accessor for SpotlightTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134((unint64_t *)&unk_1EBAD0DA0, (void (*)(uint64_t))type metadata accessor for SpotlightTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for SpotlightTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0xEu:
      *(void *)(a1 + 24) = type metadata accessor for SuggestionTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134((unint64_t *)&unk_1EBAF80C0, (void (*)(uint64_t))type metadata accessor for SuggestionTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for SuggestionTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0xFu:
      *(void *)(a1 + 24) = type metadata accessor for SeenContentMarkTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EAC20A68, (void (*)(uint64_t))type metadata accessor for SeenContentMarkTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for SeenContentMarkTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0x10u:
      *(void *)(a1 + 24) = type metadata accessor for SharedWithYouTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EAC20A60, (void (*)(uint64_t))type metadata accessor for SharedWithYouTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for SharedWithYouTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0x12u:
      *(void *)(a1 + 24) = type metadata accessor for MySportsTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EAC20A58, (void (*)(uint64_t))type metadata accessor for MySportsTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for MySportsTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0x13u:
      *(void *)(a1 + 24) = type metadata accessor for IntroToSportsTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EBAD0FC8, (void (*)(uint64_t))type metadata accessor for IntroToSportsTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for IntroToSportsTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0x14u:
      *(void *)(a1 + 24) = type metadata accessor for ShortcutsTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EBAF46D0, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for ShortcutsTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0x15u:
      *(void *)(a1 + 24) = type metadata accessor for ChannelTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134((unint64_t *)&unk_1EBAF4260, (void (*)(uint64_t))type metadata accessor for ChannelTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for ChannelTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0x16u:
      *(void *)(a1 + 24) = type metadata accessor for SavedStoriesTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EAC20A50, (void (*)(uint64_t))type metadata accessor for SavedStoriesTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for SavedStoriesTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    case 0x17u:
      *(void *)(a1 + 24) = type metadata accessor for ChannelPickerTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EAC20A48, (void (*)(uint64_t))type metadata accessor for ChannelPickerTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for ChannelPickerTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
    default:
      *(void *)(a1 + 24) = type metadata accessor for CuratedTodayFeedGroup();
      *(void *)(a1 + 32) = sub_1DEA4D134(&qword_1EBAD0C18, (void (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroup);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t v12 = type metadata accessor for CuratedTodayFeedGroup;
      return sub_1DEB61760((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v12);
  }
}

uint64_t sub_1DEB5F470@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA882C4(v3, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) < 0x11 || ((1 << EnumCaseMultiPayload) & 0xF00000) != 0)
  {
    sub_1DEB61700((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    uint64_t v7 = sub_1DFDFC2F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
  else
  {
    sub_1DEB61700((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    uint64_t v9 = *MEMORY[0x1E4F81360];
    uint64_t v10 = sub_1DFDFC2F0();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104))(a1, v9, v10);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
  }
}

uint64_t sub_1DEB5F688(void *a1)
{
  uint64_t v91 = type metadata accessor for ChannelPickerTodayFeedGroup();
  MEMORY[0x1F4188790](v91);
  uint64_t v113 = (uint64_t)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v90);
  uint64_t v112 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for ChannelTodayFeedGroup();
  MEMORY[0x1F4188790](v89);
  uint64_t v111 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for ShortcutsTodayFeedGroup();
  MEMORY[0x1F4188790](v88);
  uint64_t v110 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for IntroToSportsTodayFeedGroup();
  MEMORY[0x1F4188790](v87);
  uint64_t v109 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for MySportsTodayFeedGroup();
  MEMORY[0x1F4188790](v86);
  uint64_t v108 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for EngagementTodayFeedGroup();
  MEMORY[0x1F4188790](v85);
  uint64_t v107 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for SharedWithYouTodayFeedGroup();
  MEMORY[0x1F4188790](v84);
  uint64_t v106 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for MagazineFeedGroup();
  MEMORY[0x1F4188790](v83);
  uint64_t v105 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for SeenContentMarkTodayFeedGroup();
  MEMORY[0x1F4188790](v82);
  uint64_t v104 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for SuggestionTodayFeedGroup();
  MEMORY[0x1F4188790](v81);
  uint64_t v103 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for SpotlightTodayFeedGroup();
  MEMORY[0x1F4188790](v80);
  uint64_t v102 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for SubscriptionTodayFeedGroup();
  MEMORY[0x1F4188790](v79);
  uint64_t v101 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v78);
  uint64_t v100 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for TopicTodayFeedGroup();
  MEMORY[0x1F4188790](v77);
  uint64_t v99 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for MoreForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v76);
  uint64_t v98 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for LatestStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v75);
  uint64_t v97 = (uint64_t)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for MissedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v74);
  uint64_t v96 = (uint64_t)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for ForYouTodayFeedGroup();
  MEMORY[0x1F4188790](v73);
  uint64_t v95 = (uint64_t)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for TrendingTodayFeedGroup();
  MEMORY[0x1F4188790](v72);
  uint64_t v94 = (uint64_t)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for LocalNewsTodayFeedGroup();
  MEMORY[0x1F4188790](v71);
  uint64_t v93 = (uint64_t)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for NewspaperTodayFeedGroup();
  MEMORY[0x1F4188790](v23);
  uint64_t v92 = (uint64_t)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CuratedTodayFeedGroup();
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TodayFeedGroup();
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9D4470(0, (unint64_t *)&unk_1EBAA67B8, MEMORY[0x1E4FBBDE0]);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v116 = v31;
  uint64_t v117 = v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v70 - v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9D4528();
  v115 = v34;
  sub_1DFE001A0();
  sub_1DEA882C4(v118, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v40 = v92;
      sub_1DEB61760((uint64_t)v30, v92, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      __int16 v119 = 256;
      sub_1DEADCB48();
      uint64_t v41 = v115;
      uint64_t v42 = v116;
      uint64_t v43 = v114;
      sub_1DFDFFE80();
      if (!v43)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EAC20AE8, (void (*)(uint64_t))type metadata accessor for NewspaperTodayFeedGroup);
        sub_1DFDFFE80();
      }
      sub_1DEB61700(v40, (uint64_t (*)(void))type metadata accessor for NewspaperTodayFeedGroup);
      return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v41, v42);
    case 2u:
      uint64_t v45 = v93;
      sub_1DEB61760((uint64_t)v30, v93, (uint64_t (*)(void))type metadata accessor for LocalNewsTodayFeedGroup);
      __int16 v119 = 512;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v46 = v114;
      sub_1DFDFFE80();
      if (!v46)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBABDB40, (void (*)(uint64_t))type metadata accessor for LocalNewsTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for LocalNewsTodayFeedGroup;
      goto LABEL_72;
    case 3u:
      uint64_t v45 = v94;
      sub_1DEB61760((uint64_t)v30, v94, (uint64_t (*)(void))type metadata accessor for TrendingTodayFeedGroup);
      __int16 v119 = 768;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v48 = v114;
      sub_1DFDFFE80();
      if (!v48)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAA49F0, (void (*)(uint64_t))type metadata accessor for TrendingTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for TrendingTodayFeedGroup;
      goto LABEL_72;
    case 4u:
      uint64_t v45 = v95;
      sub_1DEB61760((uint64_t)v30, v95, (uint64_t (*)(void))type metadata accessor for ForYouTodayFeedGroup);
      __int16 v119 = 1024;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v49 = v114;
      sub_1DFDFFE80();
      if (!v49)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAA4310, (void (*)(uint64_t))type metadata accessor for ForYouTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for ForYouTodayFeedGroup;
      goto LABEL_72;
    case 5u:
      uint64_t v45 = v96;
      sub_1DEB61760((uint64_t)v30, v96, (uint64_t (*)(void))type metadata accessor for MissedStoriesTodayFeedGroup);
      __int16 v119 = 1536;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v50 = v114;
      sub_1DFDFFE80();
      if (!v50)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAA5338, (void (*)(uint64_t))type metadata accessor for MissedStoriesTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for MissedStoriesTodayFeedGroup;
      goto LABEL_72;
    case 6u:
      uint64_t v45 = v97;
      sub_1DEB61760((uint64_t)v30, v97, (uint64_t (*)(void))type metadata accessor for LatestStoriesTodayFeedGroup);
      __int16 v119 = 1280;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v51 = v114;
      sub_1DFDFFE80();
      if (!v51)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAA5300, (void (*)(uint64_t))type metadata accessor for LatestStoriesTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for LatestStoriesTodayFeedGroup;
      goto LABEL_72;
    case 7u:
      uint64_t v45 = v98;
      sub_1DEB61760((uint64_t)v30, v98, (uint64_t (*)(void))type metadata accessor for MoreForYouTodayFeedGroup);
      __int16 v119 = 1792;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v52 = v114;
      sub_1DFDFFE80();
      if (!v52)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAA4EB8, (void (*)(uint64_t))type metadata accessor for MoreForYouTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for MoreForYouTodayFeedGroup;
      goto LABEL_72;
    case 8u:
      uint64_t v45 = v99;
      sub_1DEB61760((uint64_t)v30, v99, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroup);
      __int16 v119 = 2048;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v53 = v114;
      sub_1DFDFFE80();
      if (!v53)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAA4238, (void (*)(uint64_t))type metadata accessor for TopicTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for TopicTodayFeedGroup;
      goto LABEL_72;
    case 9u:
      uint64_t v45 = v105;
      sub_1DEB61760((uint64_t)v30, v105, (uint64_t (*)(void))type metadata accessor for MagazineFeedGroup);
      __int16 v119 = 2304;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v54 = v114;
      sub_1DFDFFE80();
      if (!v54)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134((unint64_t *)&unk_1EBAA4150, (void (*)(uint64_t))type metadata accessor for MagazineFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for MagazineFeedGroup;
      goto LABEL_72;
    case 0xAu:
      uint64_t v45 = v100;
      sub_1DEB61760((uint64_t)v30, v100, (uint64_t (*)(void))type metadata accessor for NewFollowTodayFeedGroup);
      __int16 v119 = 2560;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v55 = v114;
      sub_1DFDFFE80();
      if (!v55)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EAC20AE0, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for NewFollowTodayFeedGroup;
      goto LABEL_72;
    case 0xBu:
      uint64_t v45 = v101;
      sub_1DEB61760((uint64_t)v30, v101, (uint64_t (*)(void))type metadata accessor for SubscriptionTodayFeedGroup);
      __int16 v119 = 2816;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v56 = v114;
      sub_1DFDFFE80();
      if (!v56)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EAC20AD8, (void (*)(uint64_t))type metadata accessor for SubscriptionTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for SubscriptionTodayFeedGroup;
      goto LABEL_72;
    case 0xCu:
      uint64_t v57 = sub_1DFDF7A30();
      sub_1DEA4D134((unint64_t *)&unk_1EAC30C50, MEMORY[0x1E4F7F588]);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v57 - 8) + 104))(v58, *MEMORY[0x1E4F7F580], v57);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v115, v116);
      return sub_1DEB61700((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    case 0xDu:
      uint64_t v45 = v102;
      sub_1DEB61760((uint64_t)v30, v102, (uint64_t (*)(void))type metadata accessor for SpotlightTodayFeedGroup);
      __int16 v119 = 3328;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v59 = v114;
      sub_1DFDFFE80();
      if (!v59)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAA4B80, (void (*)(uint64_t))type metadata accessor for SpotlightTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for SpotlightTodayFeedGroup;
      goto LABEL_72;
    case 0xEu:
      uint64_t v45 = v103;
      sub_1DEB61760((uint64_t)v30, v103, (uint64_t (*)(void))type metadata accessor for SuggestionTodayFeedGroup);
      __int16 v119 = 3584;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v60 = v114;
      sub_1DFDFFE80();
      if (!v60)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAA4EE8, (void (*)(uint64_t))type metadata accessor for SuggestionTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for SuggestionTodayFeedGroup;
      goto LABEL_72;
    case 0xFu:
      uint64_t v45 = v104;
      sub_1DEB61760((uint64_t)v30, v104, (uint64_t (*)(void))type metadata accessor for SeenContentMarkTodayFeedGroup);
      __int16 v119 = 3840;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v61 = v114;
      sub_1DFDFFE80();
      if (!v61)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBABDE90, (void (*)(uint64_t))type metadata accessor for SeenContentMarkTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for SeenContentMarkTodayFeedGroup;
      goto LABEL_72;
    case 0x10u:
      uint64_t v45 = v106;
      sub_1DEB61760((uint64_t)v30, v106, (uint64_t (*)(void))type metadata accessor for SharedWithYouTodayFeedGroup);
      __int16 v119 = 4096;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v62 = v114;
      sub_1DFDFFE80();
      if (!v62)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EAC20AD0, (void (*)(uint64_t))type metadata accessor for SharedWithYouTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for SharedWithYouTodayFeedGroup;
      goto LABEL_72;
    case 0x11u:
      uint64_t v45 = v107;
      sub_1DEB61760((uint64_t)v30, v107, (uint64_t (*)(void))type metadata accessor for EngagementTodayFeedGroup);
      __int16 v119 = 4352;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v63 = v114;
      sub_1DFDFFE80();
      if (!v63)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAC3F10, (void (*)(uint64_t))type metadata accessor for EngagementTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for EngagementTodayFeedGroup;
      goto LABEL_72;
    case 0x12u:
      uint64_t v45 = v108;
      sub_1DEB61760((uint64_t)v30, v108, (uint64_t (*)(void))type metadata accessor for MySportsTodayFeedGroup);
      __int16 v119 = 4608;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v64 = v114;
      sub_1DFDFFE80();
      if (!v64)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EAC20AC8, (void (*)(uint64_t))type metadata accessor for MySportsTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for MySportsTodayFeedGroup;
      goto LABEL_72;
    case 0x13u:
      uint64_t v45 = v109;
      sub_1DEB61760((uint64_t)v30, v109, (uint64_t (*)(void))type metadata accessor for IntroToSportsTodayFeedGroup);
      __int16 v119 = 4864;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v65 = v114;
      sub_1DFDFFE80();
      if (!v65)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBADD670, (void (*)(uint64_t))type metadata accessor for IntroToSportsTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for IntroToSportsTodayFeedGroup;
      goto LABEL_72;
    case 0x14u:
      uint64_t v45 = v110;
      sub_1DEB61760((uint64_t)v30, v110, (uint64_t (*)(void))type metadata accessor for ShortcutsTodayFeedGroup);
      __int16 v119 = 5120;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v66 = v114;
      sub_1DFDFFE80();
      if (!v66)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBADA5F0, (void (*)(uint64_t))type metadata accessor for ShortcutsTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for ShortcutsTodayFeedGroup;
      goto LABEL_72;
    case 0x15u:
      uint64_t v45 = v111;
      sub_1DEB61760((uint64_t)v30, v111, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroup);
      __int16 v119 = 5376;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v67 = v114;
      sub_1DFDFFE80();
      if (!v67)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAF4248, (void (*)(uint64_t))type metadata accessor for ChannelTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for ChannelTodayFeedGroup;
      goto LABEL_72;
    case 0x16u:
      uint64_t v45 = v112;
      sub_1DEB61760((uint64_t)v30, v112, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      __int16 v119 = 5632;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v68 = v114;
      sub_1DFDFFE80();
      if (!v68)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EAC20AC0, (void (*)(uint64_t))type metadata accessor for SavedStoriesTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for SavedStoriesTodayFeedGroup;
      goto LABEL_72;
    case 0x17u:
      uint64_t v45 = v113;
      sub_1DEB61760((uint64_t)v30, v113, (uint64_t (*)(void))type metadata accessor for ChannelPickerTodayFeedGroup);
      __int16 v119 = 5888;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v69 = v114;
      sub_1DFDFFE80();
      if (!v69)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EAC20AB8, (void (*)(uint64_t))type metadata accessor for ChannelPickerTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v47 = type metadata accessor for ChannelPickerTodayFeedGroup;
LABEL_72:
      uint64_t v38 = v47;
      uint64_t v39 = v45;
      break;
    default:
      sub_1DEB61760((uint64_t)v30, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CuratedTodayFeedGroup);
      __int16 v119 = 0;
      sub_1DEADCB48();
      uint64_t v36 = v115;
      uint64_t v35 = v116;
      uint64_t v37 = v114;
      sub_1DFDFFE80();
      if (!v37)
      {
        HIBYTE(v119) = 1;
        sub_1DEA4D134(&qword_1EBAA43E8, (void (*)(uint64_t))type metadata accessor for CuratedTodayFeedGroup);
        sub_1DFDFFE80();
      }
      uint64_t v38 = type metadata accessor for CuratedTodayFeedGroup;
      uint64_t v39 = (uint64_t)v27;
      break;
  }
  sub_1DEB61700(v39, (uint64_t (*)(void))v38);
  return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v36, v35);
}

uint64_t sub_1DEB61460(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF29FCEC(*a1, *a2);
}

uint64_t sub_1DEB6146C()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEB614D4()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEB61520()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEB61584@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1DEB615E4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701869940;
  if (*v1) {
    uint64_t v2 = 1635017060;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1DEB6160C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DFDFFCA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DEB61670(uint64_t a1)
{
  unint64_t v2 = sub_1DE9D4528();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEB616AC(uint64_t a1)
{
  unint64_t v2 = sub_1DE9D4528();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEB616E8(void *a1)
{
  return sub_1DEB5F688(a1);
}

uint64_t sub_1DEB61700(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEB61760(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEB617C8(uint64_t a1)
{
  sub_1DEB61C9C(0, (unint64_t *)&unk_1EBACA420, MEMORY[0x1E4F80940]);
  MEMORY[0x1F4188790](v2 - 8);
  char v4 = (char *)&v21 - v3;
  uint64_t v5 = sub_1DFDFA9F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA77CD8((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    unint64_t v9 = sub_1DFDFA9C0();
    unint64_t v10 = v9;
    uint64_t v23 = v6;
    uint64_t v24 = v5;
    uint64_t v22 = v8;
    if (v9 >> 62) {
      goto LABEL_17;
    }
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v22, v24);
      return 1;
    }
LABEL_5:
    a1 = *(void *)(a1 + OBJC_IVAR____TtC7NewsUI213TodayFeedPool_headlines + 16);
    uint64_t v12 = 4;
    while (1)
    {
      uint64_t v13 = v12 - 4;
      if ((v10 & 0xC000000000000001) != 0)
      {
        uint64_t v14 = (void *)MEMORY[0x1E01EE240](v12 - 4, v10);
        uint64_t v15 = v12 - 3;
        if (__OFADD__(v13, 1)) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v14 = *(void **)(v10 + 8 * v12);
        swift_unknownObjectRetain();
        uint64_t v15 = v12 - 3;
        if (__OFADD__(v13, 1))
        {
LABEL_16:
          __break(1u);
LABEL_17:
          uint64_t v11 = sub_1DFDFFBE0();
          if (!v11) {
            goto LABEL_13;
          }
          goto LABEL_5;
        }
      }
      id v16 = objc_msgSend(v14, sel_identifier);
      uint64_t v17 = sub_1DFDFDD20();
      uint64_t v19 = v18;

      LOBYTE(v16) = sub_1DEAAB55C(v17, v19, a1);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if (v16)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v22, v24);
        return 0;
      }
      ++v12;
      if (v15 == v11) {
        goto LABEL_13;
      }
    }
  }
  sub_1DEB61A88((uint64_t)v4);
  return 0;
}

uint64_t sub_1DEB61A88(uint64_t a1)
{
  sub_1DEB61C9C(0, (unint64_t *)&unk_1EBACA420, MEMORY[0x1E4F80940]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for TodayFeedGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEB61BCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayFeedGroup.CodingKeys()
{
  return &type metadata for TodayFeedGroup.CodingKeys;
}

void sub_1DEB61C9C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1DEB61CF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void *sub_1DEB61E9C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DEB61700((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = (int *)type metadata accessor for NewspaperTodayFeedGroup();
        *(void *)((char *)a1 + v15[5]) = *(void *)((char *)a2 + v15[5]);
        *(void *)((char *)a1 + v15[6]) = *(void *)((char *)a2 + v15[6]);
        *(void *)((char *)a1 + v15[7]) = *(void *)((char *)a2 + v15[7]);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 2u:
        uint64_t v16 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = (int *)type metadata accessor for LocalNewsTodayFeedGroup();
        *(void *)((char *)a1 + v17[5]) = *(void *)((char *)a2 + v17[5]);
        *(void *)((char *)a1 + v17[6]) = *(void *)((char *)a2 + v17[6]);
        uint64_t v18 = v17[7];
        v410 = (char *)a1 + v18;
        uint64_t v19 = (char *)a2 + v18;
        uint64_t v20 = sub_1DFDF9EE0();
        uint64_t v21 = *(void *)(v20 - 8);
        uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        if (v22(v19, 1, v20))
        {
          sub_1DEB61C9C(0, (unint64_t *)&unk_1EBABA350, MEMORY[0x1E4F80520]);
          memcpy(v410, v19, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v410, v19, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v410, 0, 1, v20);
        }
        *(void *)((char *)a1 + v17[8]) = *(void *)((char *)a2 + v17[8]);
        uint64_t v45 = v17[9];
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        *(void *)uint64_t v46 = *(void *)v47;
        v46[8] = v47[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
        uint64_t v24 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        goto LABEL_59;
      case 8u:
        uint64_t v25 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = type metadata accessor for TopicTodayFeedGroup();
        *((unsigned char *)a1 + *(int *)(v26 + 20)) = *((unsigned char *)a2 + *(int *)(v26 + 20));
        goto LABEL_59;
      case 9u:
        type metadata accessor for MagazineFeedGroup();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1DEA530F0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(a1, a2, v48);
            uint64_t v49 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
            uint64_t v50 = (char *)a1 + v49;
            uint64_t v51 = (char *)a2 + v49;
            uint64_t v52 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
            goto LABEL_58;
          case 2u:
          case 0xAu:
          case 0xBu:
            uint64_t v126 = sub_1DFDF7010();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 16))(a1, a2, v126);
            goto LABEL_58;
          case 3u:
            sub_1DEA52F58();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
            uint64_t v54 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
            uint64_t v55 = (char *)a1 + v54;
            uint64_t v56 = (char *)a2 + v54;
            uint64_t v57 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
            goto LABEL_58;
          case 4u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            uint64_t v58 = (void *)a2[4];
            a1[4] = v58;
            a1[5] = a2[5];
            a1[6] = a2[6];
            a1[7] = a2[7];
            a1[8] = a2[8];
            a1[9] = a2[9];
            uint64_t v59 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
            uint64_t v60 = v59[10];
            v412 = (char *)a1 + v60;
            v409 = (char *)a2 + v60;
            uint64_t v61 = sub_1DFDF8C20();
            v404 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v62 = v58;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v404(v412, v409, v61);
            *(void *)((char *)a1 + v59[11]) = *(void *)((char *)a2 + v59[11]);
            *(void *)((char *)a1 + v59[12]) = *(void *)((char *)a2 + v59[12]);
            goto LABEL_58;
          case 5u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            uint64_t v63 = (void *)a2[4];
            a1[4] = v63;
            v413 = (void *)a2[5];
            a1[5] = v413;
            a1[6] = a2[6];
            a1[7] = a2[7];
            a1[8] = a2[8];
            a1[9] = a2[9];
            uint64_t v64 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
            uint64_t v65 = v64[10];
            v398 = (char *)a2 + v65;
            v405 = (char *)a1 + v65;
            uint64_t v66 = sub_1DFDF8C20();
            uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v68 = v63;
            id v69 = v413;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v67(v405, v398, v66);
            v67((char *)a1 + v64[11], (char *)a2 + v64[11], v66);
            *(void *)((char *)a1 + v64[12]) = *(void *)((char *)a2 + v64[12]);
            uint64_t v70 = v64[13];
            uint64_t v71 = (char *)a1 + v70;
            uint64_t v72 = (char *)a2 + v70;
            sub_1DEA82790(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
            uint64_t v74 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
            *(void *)&v71[*(int *)(v74 + 20)] = *(void *)&v72[*(int *)(v74 + 20)];
            uint64_t v75 = *(int *)(v74 + 24);
            uint64_t v76 = &v71[v75];
            uint64_t v77 = &v72[v75];
            sub_1DEA82790(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
            uint64_t v79 = v78;
            uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
            swift_retain();
            v80(v76, v77, v79);
            *(void *)((char *)a1 + v64[14]) = *(void *)((char *)a2 + v64[14]);
            *((unsigned char *)a1 + v64[15]) = *((unsigned char *)a2 + v64[15]);
            uint64_t v81 = v64[16];
            uint64_t v82 = (char *)a1 + v81;
            uint64_t v83 = (char *)a2 + v81;
            uint64_t v84 = sub_1DFDF8F10();
            uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
            swift_unknownObjectRetain();
            v85(v82, v83, v84);
            uint64_t v86 = v64[17];
            uint64_t v87 = (char *)a1 + v86;
            uint64_t v88 = (char *)a2 + v86;
            uint64_t v89 = sub_1DFDF7CB0();
            uint64_t v90 = *(void *)(v89 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
            {
              sub_1DEB61C9C(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0]);
              memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
            }
            *(void *)((char *)a1 + v64[18]) = *(void *)((char *)a2 + v64[18]);
            swift_bridgeObjectRetain();
            goto LABEL_58;
          case 6u:
            sub_1DEA536E4();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v92 - 8) + 16))(a1, a2, v92);
            uint64_t v93 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
            uint64_t v94 = (char *)a1 + v93;
            uint64_t v95 = (char *)a2 + v93;
            uint64_t v96 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
            goto LABEL_58;
          case 7u:
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v97 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
            uint64_t v98 = v97[5];
            uint64_t v99 = (char *)a1 + v98;
            uint64_t v100 = (char *)a2 + v98;
            uint64_t v101 = sub_1DFDF8C20();
            uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16);
            swift_bridgeObjectRetain();
            v102(v99, v100, v101);
            v102((char *)a1 + v97[6], (char *)a2 + v97[6], v101);
            *(void *)((char *)a1 + v97[7]) = *(void *)((char *)a2 + v97[7]);
            *(void *)((char *)a1 + v97[8]) = *(void *)((char *)a2 + v97[8]);
            uint64_t v103 = v97[9];
            uint64_t v104 = (void *)((char *)a1 + v103);
            uint64_t v105 = (char *)a2 + v103;
            type metadata accessor for FeedPaywallModel(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            *(unsigned char *)uint64_t v104 = *v105;
            v414 = v104;
            v406 = v105;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v107 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v108 = v107[5];
              uint64_t v109 = (char *)v104 + v108;
              uint64_t v110 = &v105[v108];
              uint64_t v111 = sub_1DFDE7220();
              uint64_t v112 = *(void *)(v111 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
              {
                sub_1DEB61C9C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
                memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v109, v110, v111);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
              }
              *(void *)((char *)v104 + v107[6]) = *(void *)&v105[v107[6]];
              *(void *)((char *)v104 + v107[7]) = *(void *)&v105[v107[7]];
              *(void *)((char *)v104 + v107[8]) = *(void *)&v105[v107[8]];
              uint64_t v163 = v107[9];
              v164 = *(void **)&v105[v163];
              *(void *)((char *)v104 + v163) = v164;
              uint64_t v165 = v107[10];
              v166 = *(void **)&v105[v165];
              *(void *)((char *)v104 + v165) = v166;
              uint64_t v167 = v107[11];
              v168 = *(void **)&v105[v167];
              *(void *)((char *)v104 + v167) = v168;
              uint64_t v169 = v107[12];
              v170 = *(void **)&v105[v169];
              *(void *)((char *)v104 + v169) = v170;
              uint64_t v171 = v107[13];
              v372 = *(void **)&v105[v171];
              *(void *)((char *)v104 + v171) = v372;
              uint64_t v172 = v107[14];
              v380 = *(void **)&v105[v172];
              *(void *)((char *)v104 + v172) = v380;
              uint64_t v173 = v107[15];
              v386 = *(void **)&v105[v173];
              *(void *)((char *)v104 + v173) = v386;
              uint64_t v174 = v107[16];
              v393 = *(void **)&v105[v174];
              *(void *)((char *)v104 + v174) = v393;
              uint64_t v175 = v107[17];
              v401 = *(void **)&v105[v175];
              *(void *)((char *)v104 + v175) = v401;
              uint64_t v176 = v107[18];
              v177 = *(void **)&v105[v176];
              *(void *)((char *)v104 + v176) = v177;
              uint64_t v178 = v107[19];
              v179 = (void *)((char *)v104 + v178);
              v180 = &v105[v178];
              void *v179 = *(void *)v180;
              v179[1] = *((void *)v180 + 1);
              uint64_t v181 = v107[20];
              v182 = (void *)((char *)v104 + v181);
              v183 = &v105[v181];
              void *v182 = *(void *)v183;
              v182[1] = *((void *)v183 + 1);
              uint64_t v184 = v107[21];
              v185 = (void *)((char *)v104 + v184);
              v186 = &v105[v184];
              void *v185 = *(void *)v186;
              v185[1] = *((void *)v186 + 1);
              uint64_t v187 = v107[22];
              v364 = &v105[v187];
              v367 = (char *)v104 + v187;
              uint64_t v188 = sub_1DFDEF360();
              v361 = *(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16);
              id v189 = v164;
              id v190 = v166;
              id v191 = v168;
              id v192 = v170;
              id v193 = v372;
              id v194 = v380;
              id v195 = v386;
              id v196 = v393;
              id v197 = v401;
              id v198 = v177;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v199 = v188;
              v152 = v406;
              v361(v367, v364, v199);
              uint64_t v200 = v107[23];
              v201 = (void *)((char *)v104 + v200);
              v202 = &v406[v200];
              void *v201 = *(void *)v202;
              v201[1] = *((void *)v202 + 1);
              uint64_t v203 = v107[24];
              v157 = (char *)v104 + v203;
              v158 = &v406[v203];
              uint64_t v159 = sub_1DFDEF130();
              uint64_t v160 = *(void *)(v159 - 8);
              v204 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48);
              swift_bridgeObjectRetain();
              if (!v204(v158, 1, v159)) {
                goto LABEL_38;
              }
            }
            else
            {
              v139 = (void *)*((void *)v105 + 1);
              v104[1] = v139;
              v140 = (void *)*((void *)v105 + 2);
              v414[2] = v140;
              v141 = (void *)*((void *)v105 + 3);
              v414[3] = v141;
              v400 = (void *)*((void *)v105 + 4);
              v414[4] = v400;
              v414[5] = *((void *)v105 + 5);
              v414[6] = *((void *)v105 + 6);
              v414[7] = *((void *)v105 + 7);
              v142 = (void *)*((void *)v105 + 8);
              v414[8] = v142;
              v414[9] = *((void *)v105 + 9);
              v414[10] = *((void *)v105 + 10);
              v414[11] = *((void *)v105 + 11);
              v414[12] = *((void *)v105 + 12);
              v414[13] = *((void *)v105 + 13);
              v414[14] = *((void *)v105 + 14);
              v143 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v144 = v143[16];
              v385 = &v105[v144];
              v392 = (char *)v414 + v144;
              uint64_t v145 = sub_1DFDEF360();
              v379 = *(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16);
              id v146 = v139;
              id v147 = v140;
              uint64_t v104 = v414;
              id v148 = v141;
              id v149 = v400;
              id v150 = v142;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v151 = v145;
              v152 = v406;
              v379(v392, v385, v151);
              uint64_t v153 = v143[17];
              v154 = (void *)((char *)v414 + v153);
              v155 = &v406[v153];
              void *v154 = *(void *)v155;
              v154[1] = *((void *)v155 + 1);
              uint64_t v156 = v143[18];
              v157 = (char *)v414 + v156;
              v158 = &v406[v156];
              uint64_t v159 = sub_1DFDEF130();
              uint64_t v160 = *(void *)(v159 - 8);
              v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48);
              swift_bridgeObjectRetain();
              if (!v161(v158, 1, v159))
              {
LABEL_38:
                (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v157, v158, v159);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
LABEL_39:
                swift_storeEnumTagMultiPayload();
                v402 = (int *)type metadata accessor for FeedPaywallConfig();
                uint64_t v205 = v402[5];
                v206 = (char *)v104 + v205;
                v207 = &v152[v205];
                int v208 = swift_getEnumCaseMultiPayload();
                char *v206 = *v207;
                if (v208 == 1)
                {
                  v209 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                  uint64_t v210 = v209[5];
                  v211 = &v206[v210];
                  v212 = &v207[v210];
                  uint64_t v213 = sub_1DFDE7220();
                  uint64_t v214 = *(void *)(v213 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48))(v212, 1, v213))
                  {
                    sub_1DEB61C9C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
                    memcpy(v211, v212, *(void *)(*(void *)(v215 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v211, v212, v213);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v214 + 56))(v211, 0, 1, v213);
                  }
                  *(void *)&v206[v209[6]] = *(void *)&v207[v209[6]];
                  *(void *)&v206[v209[7]] = *(void *)&v207[v209[7]];
                  *(void *)&v206[v209[8]] = *(void *)&v207[v209[8]];
                  uint64_t v236 = v209[9];
                  v237 = *(void **)&v207[v236];
                  *(void *)&v206[v236] = v237;
                  uint64_t v238 = v209[10];
                  v239 = *(void **)&v207[v238];
                  *(void *)&v206[v238] = v239;
                  uint64_t v240 = v209[11];
                  v362 = *(void **)&v207[v240];
                  *(void *)&v206[v240] = v362;
                  uint64_t v241 = v209[12];
                  v365 = *(void **)&v207[v241];
                  *(void *)&v206[v241] = v365;
                  uint64_t v242 = v209[13];
                  v369 = *(void **)&v207[v242];
                  *(void *)&v206[v242] = v369;
                  uint64_t v243 = v209[14];
                  v376 = *(void **)&v207[v243];
                  *(void *)&v206[v243] = v376;
                  uint64_t v244 = v209[15];
                  v382 = *(void **)&v207[v244];
                  *(void *)&v206[v244] = v382;
                  uint64_t v245 = v209[16];
                  v388 = *(void **)&v207[v245];
                  *(void *)&v206[v245] = v388;
                  uint64_t v246 = v209[17];
                  v395 = *(void **)&v207[v246];
                  *(void *)&v206[v246] = v395;
                  uint64_t v247 = v209[18];
                  v248 = *(void **)&v207[v247];
                  *(void *)&v206[v247] = v248;
                  uint64_t v249 = v209[19];
                  v250 = &v206[v249];
                  v251 = &v207[v249];
                  *(void *)v250 = *(void *)v251;
                  *((void *)v250 + 1) = *((void *)v251 + 1);
                  uint64_t v252 = v209[20];
                  v253 = &v206[v252];
                  v254 = &v207[v252];
                  *(void *)v253 = *(void *)v254;
                  *((void *)v253 + 1) = *((void *)v254 + 1);
                  uint64_t v255 = v209[21];
                  v256 = &v206[v255];
                  v257 = &v207[v255];
                  *(void *)v256 = *(void *)v257;
                  *((void *)v256 + 1) = *((void *)v257 + 1);
                  uint64_t v258 = v209[22];
                  v357 = &v207[v258];
                  v359 = &v206[v258];
                  uint64_t v259 = sub_1DFDEF360();
                  v355 = *(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16);
                  id v260 = v237;
                  id v261 = v239;
                  id v262 = v362;
                  id v263 = v365;
                  id v264 = v369;
                  id v265 = v376;
                  id v266 = v382;
                  id v267 = v388;
                  id v268 = v395;
                  id v269 = v248;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v355(v359, v357, v259);
                  uint64_t v270 = v209[23];
                  v271 = &v206[v270];
                  v272 = &v207[v270];
                  *(void *)v271 = *(void *)v272;
                  *((void *)v271 + 1) = *((void *)v272 + 1);
                  uint64_t v273 = v209[24];
                  v230 = &v206[v273];
                  v231 = &v207[v273];
                  uint64_t v232 = sub_1DFDEF130();
                  uint64_t v233 = *(void *)(v232 - 8);
                  v274 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v233 + 48);
                  swift_bridgeObjectRetain();
                  if (!v274(v231, 1, v232)) {
                    goto LABEL_46;
                  }
                }
                else
                {
                  v216 = (void *)*((void *)v207 + 1);
                  *((void *)v206 + 1) = v216;
                  v217 = (void *)*((void *)v207 + 2);
                  *((void *)v206 + 2) = v217;
                  v387 = (void *)*((void *)v207 + 3);
                  *((void *)v206 + 3) = v387;
                  v394 = (void *)*((void *)v207 + 4);
                  *((void *)v206 + 4) = v394;
                  *((void *)v206 + 5) = *((void *)v207 + 5);
                  *((void *)v206 + 6) = *((void *)v207 + 6);
                  *((void *)v206 + 7) = *((void *)v207 + 7);
                  v381 = (void *)*((void *)v207 + 8);
                  *((void *)v206 + 8) = v381;
                  *((void *)v206 + 9) = *((void *)v207 + 9);
                  *((void *)v206 + 10) = *((void *)v207 + 10);
                  *((void *)v206 + 11) = *((void *)v207 + 11);
                  *((void *)v206 + 12) = *((void *)v207 + 12);
                  *((void *)v206 + 13) = *((void *)v207 + 13);
                  *((void *)v206 + 14) = *((void *)v207 + 14);
                  v218 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                  uint64_t v219 = v218[16];
                  v373 = &v207[v219];
                  v375 = &v206[v219];
                  uint64_t v220 = sub_1DFDEF360();
                  v368 = *(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16);
                  id v221 = v216;
                  id v222 = v217;
                  id v223 = v387;
                  id v224 = v394;
                  id v225 = v381;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v368(v375, v373, v220);
                  uint64_t v226 = v218[17];
                  v227 = &v206[v226];
                  v228 = &v207[v226];
                  *(void *)v227 = *(void *)v228;
                  *((void *)v227 + 1) = *((void *)v228 + 1);
                  uint64_t v229 = v218[18];
                  v230 = &v206[v229];
                  v231 = &v207[v229];
                  uint64_t v232 = sub_1DFDEF130();
                  uint64_t v233 = *(void *)(v232 - 8);
                  v234 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v233 + 48);
                  swift_bridgeObjectRetain();
                  if (!v234(v231, 1, v232))
                  {
LABEL_46:
                    (*(void (**)(char *, char *, uint64_t))(v233 + 16))(v230, v231, v232);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v233 + 56))(v230, 0, 1, v232);
LABEL_47:
                    swift_storeEnumTagMultiPayload();
                    uint64_t v275 = v402[6];
                    v276 = (char *)v414 + v275;
                    v277 = &v406[v275];
                    int v278 = swift_getEnumCaseMultiPayload();
                    char *v276 = *v277;
                    if (v278 == 1)
                    {
                      v279 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                      uint64_t v280 = v279[5];
                      v281 = &v276[v280];
                      v282 = &v277[v280];
                      uint64_t v283 = sub_1DFDE7220();
                      uint64_t v284 = *(void *)(v283 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v282, 1, v283))
                      {
                        sub_1DEB61C9C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
                        memcpy(v281, v282, *(void *)(*(void *)(v285 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(v284 + 16))(v281, v282, v283);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v284 + 56))(v281, 0, 1, v283);
                      }
                      *(void *)&v276[v279[6]] = *(void *)&v277[v279[6]];
                      *(void *)&v276[v279[7]] = *(void *)&v277[v279[7]];
                      *(void *)&v276[v279[8]] = *(void *)&v277[v279[8]];
                      uint64_t v306 = v279[9];
                      v307 = *(void **)&v277[v306];
                      *(void *)&v276[v306] = v307;
                      uint64_t v308 = v279[10];
                      v309 = *(void **)&v277[v308];
                      *(void *)&v276[v308] = v309;
                      uint64_t v310 = v279[11];
                      v363 = *(void **)&v277[v310];
                      *(void *)&v276[v310] = v363;
                      uint64_t v311 = v279[12];
                      v366 = *(void **)&v277[v311];
                      *(void *)&v276[v311] = v366;
                      uint64_t v312 = v279[13];
                      v371 = *(void **)&v277[v312];
                      *(void *)&v276[v312] = v371;
                      uint64_t v313 = v279[14];
                      v378 = *(void **)&v277[v313];
                      *(void *)&v276[v313] = v378;
                      uint64_t v314 = v279[15];
                      v384 = *(void **)&v277[v314];
                      *(void *)&v276[v314] = v384;
                      uint64_t v315 = v279[16];
                      v390 = *(void **)&v277[v315];
                      *(void *)&v276[v315] = v390;
                      uint64_t v316 = v279[17];
                      v397 = *(void **)&v277[v316];
                      *(void *)&v276[v316] = v397;
                      uint64_t v317 = v279[18];
                      v318 = *(void **)&v277[v317];
                      *(void *)&v276[v317] = v318;
                      uint64_t v319 = v279[19];
                      v320 = &v276[v319];
                      v321 = &v277[v319];
                      *(void *)v320 = *(void *)v321;
                      *((void *)v320 + 1) = *((void *)v321 + 1);
                      uint64_t v322 = v279[20];
                      v323 = &v276[v322];
                      v324 = &v277[v322];
                      *(void *)v323 = *(void *)v324;
                      *((void *)v323 + 1) = *((void *)v324 + 1);
                      uint64_t v325 = v279[21];
                      v326 = &v276[v325];
                      v327 = &v277[v325];
                      *(void *)v326 = *(void *)v327;
                      *((void *)v326 + 1) = *((void *)v327 + 1);
                      uint64_t v328 = v279[22];
                      v358 = &v277[v328];
                      v360 = &v276[v328];
                      uint64_t v329 = sub_1DFDEF360();
                      v356 = *(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16);
                      id v330 = v307;
                      id v331 = v309;
                      id v332 = v363;
                      id v333 = v366;
                      id v334 = v371;
                      id v335 = v378;
                      id v336 = v384;
                      id v337 = v390;
                      id v338 = v397;
                      id v339 = v318;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v356(v360, v358, v329);
                      uint64_t v340 = v279[23];
                      v341 = &v276[v340];
                      v342 = &v277[v340];
                      *(void *)v341 = *(void *)v342;
                      *((void *)v341 + 1) = *((void *)v342 + 1);
                      uint64_t v343 = v279[24];
                      v300 = &v276[v343];
                      v301 = &v277[v343];
                      uint64_t v302 = sub_1DFDEF130();
                      uint64_t v303 = *(void *)(v302 - 8);
                      v344 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v303 + 48);
                      swift_bridgeObjectRetain();
                      if (!v344(v301, 1, v302)) {
                        goto LABEL_54;
                      }
                    }
                    else
                    {
                      v286 = (void *)*((void *)v277 + 1);
                      *((void *)v276 + 1) = v286;
                      v287 = (void *)*((void *)v277 + 2);
                      *((void *)v276 + 2) = v287;
                      v389 = (void *)*((void *)v277 + 3);
                      *((void *)v276 + 3) = v389;
                      v396 = (void *)*((void *)v277 + 4);
                      *((void *)v276 + 4) = v396;
                      *((void *)v276 + 5) = *((void *)v277 + 5);
                      *((void *)v276 + 6) = *((void *)v277 + 6);
                      *((void *)v276 + 7) = *((void *)v277 + 7);
                      v383 = (void *)*((void *)v277 + 8);
                      *((void *)v276 + 8) = v383;
                      *((void *)v276 + 9) = *((void *)v277 + 9);
                      *((void *)v276 + 10) = *((void *)v277 + 10);
                      *((void *)v276 + 11) = *((void *)v277 + 11);
                      *((void *)v276 + 12) = *((void *)v277 + 12);
                      *((void *)v276 + 13) = *((void *)v277 + 13);
                      *((void *)v276 + 14) = *((void *)v277 + 14);
                      v288 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                      uint64_t v289 = v288[16];
                      v374 = &v277[v289];
                      v377 = &v276[v289];
                      uint64_t v290 = sub_1DFDEF360();
                      v370 = *(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 16);
                      id v291 = v286;
                      id v292 = v287;
                      id v293 = v389;
                      id v294 = v396;
                      id v295 = v383;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v370(v377, v374, v290);
                      uint64_t v296 = v288[17];
                      v297 = &v276[v296];
                      v298 = &v277[v296];
                      *(void *)v297 = *(void *)v298;
                      *((void *)v297 + 1) = *((void *)v298 + 1);
                      uint64_t v299 = v288[18];
                      v300 = &v276[v299];
                      v301 = &v277[v299];
                      uint64_t v302 = sub_1DFDEF130();
                      uint64_t v303 = *(void *)(v302 - 8);
                      v304 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v303 + 48);
                      swift_bridgeObjectRetain();
                      if (!v304(v301, 1, v302))
                      {
LABEL_54:
                        (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v300, v301, v302);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v303 + 56))(v300, 0, 1, v302);
                        goto LABEL_55;
                      }
                    }
                    sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
                    memcpy(v300, v301, *(void *)(*(void *)(v305 - 8) + 64));
LABEL_55:
                    swift_storeEnumTagMultiPayload();
                    uint64_t v345 = v402[7];
                    v346 = (void *)((char *)v414 + v345);
                    v347 = &v406[v345];
                    uint64_t v348 = type metadata accessor for FeedPaywallType(0);
                    if (swift_getEnumCaseMultiPayload())
                    {
                      memcpy(v346, v347, *(void *)(*(void *)(v348 - 8) + 64));
                    }
                    else
                    {
                      void *v346 = *(void *)v347;
                      sub_1DEB61CF0(0, (unint64_t *)&qword_1EBAC0120, type metadata accessor for FCFeedPaywallSubtype, MEMORY[0x1E4F823C0]);
                      uint64_t v350 = *(int *)(v349 + 48);
                      v351 = (char *)v346 + v350;
                      v352 = &v347[v350];
                      uint64_t v353 = sub_1DFDEEE80();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v353 - 8) + 16))(v351, v352, v353);
                      swift_storeEnumTagMultiPayload();
                    }
LABEL_58:
                    swift_storeEnumTagMultiPayload();
LABEL_59:
                    swift_storeEnumTagMultiPayload();
                    return a1;
                  }
                }
                sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
                memcpy(v230, v231, *(void *)(*(void *)(v235 - 8) + 64));
                goto LABEL_47;
              }
            }
            sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
            memcpy(v157, v158, *(void *)(*(void *)(v162 - 8) + 64));
            goto LABEL_39;
          case 8u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            uint64_t v114 = (void *)a2[4];
            a1[4] = v114;
            v407 = (void *)a2[5];
            a1[5] = v407;
            a1[6] = a2[6];
            a1[7] = a2[7];
            a1[8] = a2[8];
            a1[9] = a2[9];
            a1[10] = a2[10];
            v115 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
            uint64_t v116 = v115[11];
            v391 = (char *)a2 + v116;
            v399 = (char *)a1 + v116;
            uint64_t v117 = sub_1DFDF8C20();
            uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v119 = v114;
            id v120 = v407;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v118(v399, v391, v117);
            v118((char *)a1 + v115[12], (char *)a2 + v115[12], v117);
            *(void *)((char *)a1 + v115[13]) = *(void *)((char *)a2 + v115[13]);
            goto LABEL_58;
          case 9u:
            sub_1DEA53948();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 16))(a1, a2, v121);
            uint64_t v122 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
            v123 = (char *)a1 + v122;
            v124 = (char *)a2 + v122;
            uint64_t v125 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
            goto LABEL_58;
          case 0xCu:
            uint64_t v127 = sub_1DFDF7010();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 16))(a1, a2, v127);
            uint64_t v128 = type metadata accessor for NewspaperMagazineFeedGroup();
            *(void *)((char *)a1 + *(int *)(v128 + 20)) = *(void *)((char *)a2 + *(int *)(v128 + 20));
            *(void *)((char *)a1 + *(int *)(v128 + 24)) = *(void *)((char *)a2 + *(int *)(v128 + 24));
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_58;
          case 0xDu:
            sub_1DEA5387C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v129 - 8) + 16))(a1, a2, v129);
            uint64_t v130 = type metadata accessor for CuratedMagazineFeedGroup();
            uint64_t v131 = *(int *)(v130 + 20);
            v132 = (char *)a1 + v131;
            v133 = (char *)a2 + v131;
            uint64_t v134 = sub_1DFDF7010();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
            uint64_t v135 = *(int *)(v130 + 24);
            v136 = (char *)a1 + v135;
            v137 = (char *)a2 + v135;
            uint64_t v138 = sub_1DFDF8F10();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
            goto LABEL_58;
          default:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            uint64_t v27 = (void *)a2[4];
            a1[4] = v27;
            a1[5] = a2[5];
            a1[6] = a2[6];
            a1[7] = a2[7];
            a1[8] = a2[8];
            a1[9] = a2[9];
            uint64_t v28 = type metadata accessor for CategoriesMagazineFeedGroup();
            uint64_t v29 = *(int *)(v28 + 40);
            v411 = (char *)a1 + v29;
            v408 = (char *)a2 + v29;
            uint64_t v30 = sub_1DFDF8C20();
            v403 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v31 = v27;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v403(v411, v408, v30);
            *(void *)((char *)a1 + *(int *)(v28 + 44)) = *(void *)((char *)a2 + *(int *)(v28 + 44));
            goto LABEL_58;
        }
      case 0xCu:
        uint64_t v32 = sub_1DFDF6D40();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
        goto LABEL_59;
      case 0x10u:
        sub_1DEA4B52C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        uint64_t v34 = *(int *)(type metadata accessor for SharedWithYouTodayFeedGroup() + 20);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_1DFDF7010();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        goto LABEL_59;
      case 0x11u:
        sub_1DEAC2768();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
        goto LABEL_59;
      case 0x16u:
        uint64_t v39 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
        uint64_t v40 = type metadata accessor for SavedStoriesTodayFeedGroup();
        *(void *)((char *)a1 + *(int *)(v40 + 20)) = *(void *)((char *)a2 + *(int *)(v40 + 20));
        goto LABEL_59;
      case 0x17u:
        uint64_t v41 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
        uint64_t v42 = *(int *)(type metadata accessor for ChannelPickerTodayFeedGroup() + 20);
        uint64_t v43 = (void *)((char *)a1 + v42);
        uint64_t v44 = (void *)((char *)a2 + v42);
        void *v43 = *v44;
        v43[1] = v44[1];
        swift_bridgeObjectRetain();
        goto LABEL_59;
      default:
        uint64_t v4 = sub_1DFDF7010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = (int *)type metadata accessor for CuratedTodayFeedGroup();
        uint64_t v6 = v5[5];
        uint64_t v7 = (void *)((char *)a1 + v6);
        uint64_t v8 = (void *)((char *)a2 + v6);
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        *(void *)((char *)a1 + v5[6]) = *(void *)((char *)a2 + v5[6]);
        uint64_t v9 = v5[7];
        unint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_1DFDF8F10();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        goto LABEL_59;
    }
  }
  return a1;
}

uint64_t sub_1DEB64A08(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = sub_1DFDF7010();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = (int *)type metadata accessor for NewspaperTodayFeedGroup();
      *(void *)(a1 + v11[5]) = *(void *)(a2 + v11[5]);
      *(void *)(a1 + v11[6]) = *(void *)(a2 + v11[6]);
      *(void *)(a1 + v11[7]) = *(void *)(a2 + v11[7]);
      goto LABEL_61;
    case 2u:
      uint64_t v12 = sub_1DFDF7010();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      uint64_t v13 = (int *)type metadata accessor for LocalNewsTodayFeedGroup();
      *(void *)(a1 + v13[5]) = *(void *)(a2 + v13[5]);
      *(void *)(a1 + v13[6]) = *(void *)(a2 + v13[6]);
      uint64_t v14 = v13[7];
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (const void *)(a2 + v14);
      uint64_t v17 = sub_1DFDF9EE0();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_1DEB61C9C(0, (unint64_t *)&unk_1EBABA350, MEMORY[0x1E4F80520]);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *(void *)(a1 + v13[8]) = *(void *)(a2 + v13[8]);
      uint64_t v40 = v13[9];
      uint64_t v41 = a1 + v40;
      uint64_t v42 = a2 + v40;
      *(void *)uint64_t v41 = *(void *)v42;
      *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
      goto LABEL_61;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
      uint64_t v20 = sub_1DFDF7010();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      goto LABEL_61;
    case 8u:
      uint64_t v21 = sub_1DFDF7010();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for TopicTodayFeedGroup();
      *(unsigned char *)(a1 + *(int *)(v22 + 20)) = *(unsigned char *)(a2 + *(int *)(v22 + 20));
      goto LABEL_61;
    case 9u:
      type metadata accessor for MagazineFeedGroup();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1DEA530F0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
          uint64_t v44 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
          uint64_t v45 = a1 + v44;
          uint64_t v46 = a2 + v44;
          uint64_t v47 = sub_1DFDF7010();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
          goto LABEL_60;
        case 2u:
        case 0xAu:
        case 0xBu:
          uint64_t v121 = sub_1DFDF7010();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 32))(a1, a2, v121);
          goto LABEL_60;
        case 3u:
          sub_1DEA52F58();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
          uint64_t v49 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
          uint64_t v50 = a1 + v49;
          uint64_t v51 = a2 + v49;
          uint64_t v52 = sub_1DFDF7010();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
          goto LABEL_60;
        case 4u:
          long long v53 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v53;
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          uint64_t v54 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
          uint64_t v55 = v54[10];
          uint64_t v56 = a1 + v55;
          uint64_t v57 = a2 + v55;
          uint64_t v58 = sub_1DFDF8C20();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          *(void *)(a1 + v54[11]) = *(void *)(a2 + v54[11]);
          *(void *)(a1 + v54[12]) = *(void *)(a2 + v54[12]);
          goto LABEL_60;
        case 5u:
          long long v59 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v59;
          long long v60 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v60;
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          uint64_t v61 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
          uint64_t v62 = v61[10];
          uint64_t v63 = a1 + v62;
          uint64_t v64 = a2 + v62;
          uint64_t v65 = sub_1DFDF8C20();
          uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 32);
          v66(v63, v64, v65);
          v66(a1 + v61[11], a2 + v61[11], v65);
          *(void *)(a1 + v61[12]) = *(void *)(a2 + v61[12]);
          uint64_t v67 = v61[13];
          uint64_t v68 = a1 + v67;
          uint64_t v69 = a2 + v67;
          sub_1DEA82790(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
          uint64_t v71 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
          *(void *)(v68 + *(int *)(v71 + 20)) = *(void *)(v69 + *(int *)(v71 + 20));
          uint64_t v72 = *(int *)(v71 + 24);
          uint64_t v73 = v68 + v72;
          uint64_t v74 = v69 + v72;
          sub_1DEA82790(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          *(void *)(a1 + v61[14]) = *(void *)(a2 + v61[14]);
          *(unsigned char *)(a1 + v61[15]) = *(unsigned char *)(a2 + v61[15]);
          uint64_t v76 = v61[16];
          uint64_t v77 = a1 + v76;
          uint64_t v78 = a2 + v76;
          uint64_t v79 = sub_1DFDF8F10();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
          uint64_t v80 = v61[17];
          uint64_t v81 = (void *)(a1 + v80);
          uint64_t v82 = (const void *)(a2 + v80);
          uint64_t v83 = sub_1DFDF7CB0();
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
          {
            sub_1DEB61C9C(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0]);
            memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v84 + 32))(v81, v82, v83);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
          }
          *(void *)(a1 + v61[18]) = *(void *)(a2 + v61[18]);
          goto LABEL_60;
        case 6u:
          sub_1DEA536E4();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 32))(a1, a2, v86);
          uint64_t v87 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
          uint64_t v88 = a1 + v87;
          uint64_t v89 = a2 + v87;
          uint64_t v90 = sub_1DFDF7010();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
          goto LABEL_60;
        case 7u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v91 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
          uint64_t v92 = v91[5];
          uint64_t v93 = a1 + v92;
          uint64_t v94 = a2 + v92;
          uint64_t v95 = sub_1DFDF8C20();
          uint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 32);
          v96(v93, v94, v95);
          v96(a1 + v91[6], a2 + v91[6], v95);
          *(void *)(a1 + v91[7]) = *(void *)(a2 + v91[7]);
          *(void *)(a1 + v91[8]) = *(void *)(a2 + v91[8]);
          uint64_t v97 = v91[9];
          uint64_t v98 = a1 + v97;
          uint64_t v99 = a2 + v97;
          type metadata accessor for FeedPaywallModel(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *(unsigned char *)uint64_t v98 = *(unsigned char *)v99;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v101 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
            uint64_t v102 = v101[5];
            uint64_t v103 = (void *)(v98 + v102);
            uint64_t v104 = (const void *)(v99 + v102);
            uint64_t v105 = sub_1DFDE7220();
            uint64_t v106 = *(void *)(v105 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
            {
              sub_1DEB61C9C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
              memcpy(v103, v104, *(void *)(*(void *)(v107 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v106 + 32))(v103, v104, v105);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
            }
            *(void *)(v98 + v101[6]) = *(void *)(v99 + v101[6]);
            *(void *)(v98 + v101[7]) = *(void *)(v99 + v101[7]);
            *(void *)(v98 + v101[8]) = *(void *)(v99 + v101[8]);
            *(void *)(v98 + v101[9]) = *(void *)(v99 + v101[9]);
            *(void *)(v98 + v101[10]) = *(void *)(v99 + v101[10]);
            *(void *)(v98 + v101[11]) = *(void *)(v99 + v101[11]);
            *(void *)(v98 + v101[12]) = *(void *)(v99 + v101[12]);
            *(void *)(v98 + v101[13]) = *(void *)(v99 + v101[13]);
            *(void *)(v98 + v101[14]) = *(void *)(v99 + v101[14]);
            *(void *)(v98 + v101[15]) = *(void *)(v99 + v101[15]);
            *(void *)(v98 + v101[16]) = *(void *)(v99 + v101[16]);
            *(void *)(v98 + v101[17]) = *(void *)(v99 + v101[17]);
            *(void *)(v98 + v101[18]) = *(void *)(v99 + v101[18]);
            *(_OWORD *)(v98 + v101[19]) = *(_OWORD *)(v99 + v101[19]);
            *(_OWORD *)(v98 + v101[20]) = *(_OWORD *)(v99 + v101[20]);
            *(_OWORD *)(v98 + v101[21]) = *(_OWORD *)(v99 + v101[21]);
            uint64_t v146 = v101[22];
            uint64_t v147 = v98 + v146;
            uint64_t v148 = v99 + v146;
            uint64_t v149 = sub_1DFDEF360();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
            *(_OWORD *)(v98 + v101[23]) = *(_OWORD *)(v99 + v101[23]);
            uint64_t v150 = v101[24];
            v141 = (void *)(v98 + v150);
            v142 = (const void *)(v99 + v150);
            uint64_t v143 = sub_1DFDEF130();
            uint64_t v144 = *(void *)(v143 - 8);
            if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143)) {
              goto LABEL_37;
            }
          }
          else
          {
            *(_OWORD *)(v98 + 8) = *(_OWORD *)(v99 + 8);
            *(_OWORD *)(v98 + 24) = *(_OWORD *)(v99 + 24);
            *(_OWORD *)(v98 + 40) = *(_OWORD *)(v99 + 40);
            uint64_t v134 = *(void *)(v99 + 64);
            *(void *)(v98 + 56) = *(void *)(v99 + 56);
            *(void *)(v98 + 64) = v134;
            *(_OWORD *)(v98 + 72) = *(_OWORD *)(v99 + 72);
            *(_OWORD *)(v98 + 88) = *(_OWORD *)(v99 + 88);
            *(_OWORD *)(v98 + 104) = *(_OWORD *)(v99 + 104);
            uint64_t v135 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
            uint64_t v136 = v135[16];
            uint64_t v137 = v98 + v136;
            uint64_t v138 = v99 + v136;
            uint64_t v139 = sub_1DFDEF360();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 32))(v137, v138, v139);
            *(_OWORD *)(v98 + v135[17]) = *(_OWORD *)(v99 + v135[17]);
            uint64_t v140 = v135[18];
            v141 = (void *)(v98 + v140);
            v142 = (const void *)(v99 + v140);
            uint64_t v143 = sub_1DFDEF130();
            uint64_t v144 = *(void *)(v143 - 8);
            if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
            {
LABEL_37:
              (*(void (**)(void *, const void *, uint64_t))(v144 + 32))(v141, v142, v143);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
LABEL_38:
              swift_storeEnumTagMultiPayload();
              id v223 = (int *)type metadata accessor for FeedPaywallConfig();
              uint64_t v151 = v223[5];
              uint64_t v152 = v98 + v151;
              uint64_t v153 = v99 + v151;
              int v154 = swift_getEnumCaseMultiPayload();
              *(unsigned char *)uint64_t v152 = *(unsigned char *)v153;
              uint64_t v222 = v98;
              if (v154 == 1)
              {
                v155 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                uint64_t v156 = v155[5];
                __dst = (void *)(v152 + v156);
                v157 = (const void *)(v153 + v156);
                uint64_t v158 = sub_1DFDE7220();
                uint64_t v159 = *(void *)(v158 - 8);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v159 + 48))(v157, 1, v158))
                {
                  sub_1DEB61C9C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
                  memcpy(__dst, v157, *(void *)(*(void *)(v160 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v159 + 32))(__dst, v157, v158);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v159 + 56))(__dst, 0, 1, v158);
                }
                *(void *)(v152 + v155[6]) = *(void *)(v153 + v155[6]);
                *(void *)(v152 + v155[7]) = *(void *)(v153 + v155[7]);
                *(void *)(v152 + v155[8]) = *(void *)(v153 + v155[8]);
                *(void *)(v152 + v155[9]) = *(void *)(v153 + v155[9]);
                *(void *)(v152 + v155[10]) = *(void *)(v153 + v155[10]);
                *(void *)(v152 + v155[11]) = *(void *)(v153 + v155[11]);
                *(void *)(v152 + v155[12]) = *(void *)(v153 + v155[12]);
                *(void *)(v152 + v155[13]) = *(void *)(v153 + v155[13]);
                *(void *)(v152 + v155[14]) = *(void *)(v153 + v155[14]);
                *(void *)(v152 + v155[15]) = *(void *)(v153 + v155[15]);
                *(void *)(v152 + v155[16]) = *(void *)(v153 + v155[16]);
                *(void *)(v152 + v155[17]) = *(void *)(v153 + v155[17]);
                *(void *)(v152 + v155[18]) = *(void *)(v153 + v155[18]);
                *(_OWORD *)(v152 + v155[19]) = *(_OWORD *)(v153 + v155[19]);
                *(_OWORD *)(v152 + v155[20]) = *(_OWORD *)(v153 + v155[20]);
                *(_OWORD *)(v152 + v155[21]) = *(_OWORD *)(v153 + v155[21]);
                uint64_t v173 = v155[22];
                uint64_t v174 = v152 + v173;
                uint64_t v175 = v153 + v173;
                uint64_t v176 = sub_1DFDEF360();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v176 - 8) + 32))(v174, v175, v176);
                *(_OWORD *)(v152 + v155[23]) = *(_OWORD *)(v153 + v155[23]);
                uint64_t v177 = v155[24];
                uint64_t v178 = (void *)(v152 + v177);
                v179 = (const void *)(v153 + v177);
                uint64_t v180 = sub_1DFDEF130();
                uint64_t v181 = *(void *)(v180 - 8);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v181 + 48))(v179, 1, v180))
                {
                  sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
                  memcpy(v178, v179, *(void *)(*(void *)(v182 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v181 + 32))(v178, v179, v180);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v181 + 56))(v178, 0, 1, v180);
                }
                uint64_t v98 = v222;
              }
              else
              {
                *(_OWORD *)(v152 + 8) = *(_OWORD *)(v153 + 8);
                *(_OWORD *)(v152 + 24) = *(_OWORD *)(v153 + 24);
                *(_OWORD *)(v152 + 40) = *(_OWORD *)(v153 + 40);
                uint64_t v161 = *(void *)(v153 + 64);
                *(void *)(v152 + 56) = *(void *)(v153 + 56);
                *(void *)(v152 + 64) = v161;
                *(_OWORD *)(v152 + 72) = *(_OWORD *)(v153 + 72);
                *(_OWORD *)(v152 + 88) = *(_OWORD *)(v153 + 88);
                *(_OWORD *)(v152 + 104) = *(_OWORD *)(v153 + 104);
                uint64_t v162 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                uint64_t v163 = v162[16];
                uint64_t v164 = v152 + v163;
                uint64_t v165 = v153 + v163;
                uint64_t v166 = sub_1DFDEF360();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 32))(v164, v165, v166);
                *(_OWORD *)(v152 + v162[17]) = *(_OWORD *)(v153 + v162[17]);
                uint64_t v167 = v162[18];
                v168 = (void *)(v152 + v167);
                uint64_t v169 = (const void *)(v153 + v167);
                uint64_t v170 = sub_1DFDEF130();
                uint64_t v171 = *(void *)(v170 - 8);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v171 + 48))(v169, 1, v170))
                {
                  sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
                  memcpy(v168, v169, *(void *)(*(void *)(v172 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v171 + 32))(v168, v169, v170);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v170);
                }
              }
              swift_storeEnumTagMultiPayload();
              uint64_t v183 = v223[6];
              uint64_t v184 = v98 + v183;
              uint64_t v185 = v99 + v183;
              int v186 = swift_getEnumCaseMultiPayload();
              *(unsigned char *)uint64_t v184 = *(unsigned char *)v185;
              if (v186 == 1)
              {
                uint64_t v187 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                uint64_t v188 = v187[5];
                __dsta = (void *)(v184 + v188);
                id v189 = (const void *)(v185 + v188);
                uint64_t v190 = sub_1DFDE7220();
                uint64_t v191 = *(void *)(v190 - 8);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
                {
                  sub_1DEB61C9C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
                  memcpy(__dsta, v189, *(void *)(*(void *)(v192 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v191 + 32))(__dsta, v189, v190);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v191 + 56))(__dsta, 0, 1, v190);
                }
                *(void *)(v184 + v187[6]) = *(void *)(v185 + v187[6]);
                *(void *)(v184 + v187[7]) = *(void *)(v185 + v187[7]);
                *(void *)(v184 + v187[8]) = *(void *)(v185 + v187[8]);
                *(void *)(v184 + v187[9]) = *(void *)(v185 + v187[9]);
                *(void *)(v184 + v187[10]) = *(void *)(v185 + v187[10]);
                *(void *)(v184 + v187[11]) = *(void *)(v185 + v187[11]);
                *(void *)(v184 + v187[12]) = *(void *)(v185 + v187[12]);
                *(void *)(v184 + v187[13]) = *(void *)(v185 + v187[13]);
                *(void *)(v184 + v187[14]) = *(void *)(v185 + v187[14]);
                *(void *)(v184 + v187[15]) = *(void *)(v185 + v187[15]);
                *(void *)(v184 + v187[16]) = *(void *)(v185 + v187[16]);
                *(void *)(v184 + v187[17]) = *(void *)(v185 + v187[17]);
                *(void *)(v184 + v187[18]) = *(void *)(v185 + v187[18]);
                *(_OWORD *)(v184 + v187[19]) = *(_OWORD *)(v185 + v187[19]);
                *(_OWORD *)(v184 + v187[20]) = *(_OWORD *)(v185 + v187[20]);
                *(_OWORD *)(v184 + v187[21]) = *(_OWORD *)(v185 + v187[21]);
                uint64_t v205 = v187[22];
                uint64_t v206 = v184 + v205;
                uint64_t v207 = v185 + v205;
                uint64_t v208 = sub_1DFDEF360();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v208 - 8) + 32))(v206, v207, v208);
                *(_OWORD *)(v184 + v187[23]) = *(_OWORD *)(v185 + v187[23]);
                uint64_t v209 = v187[24];
                uint64_t v200 = (void *)(v184 + v209);
                v201 = (const void *)(v185 + v209);
                uint64_t v202 = sub_1DFDEF130();
                uint64_t v203 = *(void *)(v202 - 8);
                if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202)) {
                  goto LABEL_56;
                }
              }
              else
              {
                *(_OWORD *)(v184 + 8) = *(_OWORD *)(v185 + 8);
                *(_OWORD *)(v184 + 24) = *(_OWORD *)(v185 + 24);
                *(_OWORD *)(v184 + 40) = *(_OWORD *)(v185 + 40);
                uint64_t v193 = *(void *)(v185 + 64);
                *(void *)(v184 + 56) = *(void *)(v185 + 56);
                *(void *)(v184 + 64) = v193;
                *(_OWORD *)(v184 + 72) = *(_OWORD *)(v185 + 72);
                *(_OWORD *)(v184 + 88) = *(_OWORD *)(v185 + 88);
                *(_OWORD *)(v184 + 104) = *(_OWORD *)(v185 + 104);
                id v194 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                uint64_t v195 = v194[16];
                uint64_t v196 = v184 + v195;
                uint64_t v197 = v185 + v195;
                uint64_t v198 = sub_1DFDEF360();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v198 - 8) + 32))(v196, v197, v198);
                *(_OWORD *)(v184 + v194[17]) = *(_OWORD *)(v185 + v194[17]);
                uint64_t v199 = v194[18];
                uint64_t v200 = (void *)(v184 + v199);
                v201 = (const void *)(v185 + v199);
                uint64_t v202 = sub_1DFDEF130();
                uint64_t v203 = *(void *)(v202 - 8);
                if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202))
                {
LABEL_56:
                  (*(void (**)(void *, const void *, uint64_t))(v203 + 32))(v200, v201, v202);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
LABEL_57:
                  swift_storeEnumTagMultiPayload();
                  uint64_t v210 = v223[7];
                  v211 = (void *)(v222 + v210);
                  v212 = (void *)(v99 + v210);
                  uint64_t v213 = type metadata accessor for FeedPaywallType(0);
                  if (swift_getEnumCaseMultiPayload())
                  {
                    memcpy(v211, v212, *(void *)(*(void *)(v213 - 8) + 64));
                  }
                  else
                  {
                    void *v211 = *v212;
                    sub_1DEB61CF0(0, (unint64_t *)&qword_1EBAC0120, type metadata accessor for FCFeedPaywallSubtype, MEMORY[0x1E4F823C0]);
                    uint64_t v215 = *(int *)(v214 + 48);
                    v216 = (char *)v211 + v215;
                    v217 = (char *)v212 + v215;
                    uint64_t v218 = sub_1DFDEEE80();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 32))(v216, v217, v218);
                    swift_storeEnumTagMultiPayload();
                  }
LABEL_60:
                  swift_storeEnumTagMultiPayload();
                  goto LABEL_61;
                }
              }
              sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
              memcpy(v200, v201, *(void *)(*(void *)(v204 - 8) + 64));
              goto LABEL_57;
            }
          }
          sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
          memcpy(v141, v142, *(void *)(*(void *)(v145 - 8) + 64));
          goto LABEL_38;
        case 8u:
          long long v108 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v108;
          long long v109 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v109;
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          uint64_t v110 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
          uint64_t v111 = v110[11];
          uint64_t v112 = a1 + v111;
          uint64_t v113 = a2 + v111;
          uint64_t v114 = sub_1DFDF8C20();
          v115 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 32);
          v115(v112, v113, v114);
          v115(a1 + v110[12], a2 + v110[12], v114);
          *(void *)(a1 + v110[13]) = *(void *)(a2 + v110[13]);
          goto LABEL_60;
        case 9u:
          sub_1DEA53948();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(a1, a2, v116);
          uint64_t v117 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
          uint64_t v118 = a1 + v117;
          uint64_t v119 = a2 + v117;
          uint64_t v120 = sub_1DFDF7010();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
          goto LABEL_60;
        case 0xCu:
          uint64_t v122 = sub_1DFDF7010();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 32))(a1, a2, v122);
          uint64_t v123 = type metadata accessor for NewspaperMagazineFeedGroup();
          *(void *)(a1 + *(int *)(v123 + 20)) = *(void *)(a2 + *(int *)(v123 + 20));
          *(void *)(a1 + *(int *)(v123 + 24)) = *(void *)(a2 + *(int *)(v123 + 24));
          goto LABEL_60;
        case 0xDu:
          sub_1DEA5387C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 32))(a1, a2, v124);
          uint64_t v125 = type metadata accessor for CuratedMagazineFeedGroup();
          uint64_t v126 = *(int *)(v125 + 20);
          uint64_t v127 = a1 + v126;
          uint64_t v128 = a2 + v126;
          uint64_t v129 = sub_1DFDF7010();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
          uint64_t v130 = *(int *)(v125 + 24);
          uint64_t v131 = a1 + v130;
          uint64_t v132 = a2 + v130;
          uint64_t v133 = sub_1DFDF8F10();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
          goto LABEL_60;
        default:
          long long v23 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v23;
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          uint64_t v24 = type metadata accessor for CategoriesMagazineFeedGroup();
          uint64_t v25 = *(int *)(v24 + 40);
          uint64_t v26 = a1 + v25;
          uint64_t v27 = a2 + v25;
          uint64_t v28 = sub_1DFDF8C20();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
          *(void *)(a1 + *(int *)(v24 + 44)) = *(void *)(a2 + *(int *)(v24 + 44));
          goto LABEL_60;
      }
    case 0xCu:
      uint64_t v29 = sub_1DFDF6D40();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
      goto LABEL_61;
    case 0x10u:
      sub_1DEA4B52C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
      uint64_t v31 = *(int *)(type metadata accessor for SharedWithYouTodayFeedGroup() + 20);
      uint64_t v32 = a1 + v31;
      uint64_t v33 = a2 + v31;
      uint64_t v34 = sub_1DFDF7010();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      goto LABEL_61;
    case 0x11u:
      sub_1DEAC2768();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
      goto LABEL_61;
    case 0x16u:
      uint64_t v36 = sub_1DFDF7010();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
      uint64_t v37 = type metadata accessor for SavedStoriesTodayFeedGroup();
      *(void *)(a1 + *(int *)(v37 + 20)) = *(void *)(a2 + *(int *)(v37 + 20));
      goto LABEL_61;
    case 0x17u:
      uint64_t v38 = sub_1DFDF7010();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(a1, a2, v38);
      uint64_t v39 = type metadata accessor for ChannelPickerTodayFeedGroup();
      *(_OWORD *)(a1 + *(int *)(v39 + 20)) = *(_OWORD *)(a2 + *(int *)(v39 + 20));
      goto LABEL_61;
    default:
      uint64_t v4 = sub_1DFDF7010();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = (int *)type metadata accessor for CuratedTodayFeedGroup();
      *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
      *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
      uint64_t v6 = v5[7];
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_1DFDF8F10();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_61:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t sub_1DEB66E50(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DEB61700(a1, (uint64_t (*)(void))type metadata accessor for TodayFeedGroup);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = sub_1DFDF7010();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v11 = (int *)type metadata accessor for NewspaperTodayFeedGroup();
        *(void *)(a1 + v11[5]) = *(void *)(a2 + v11[5]);
        *(void *)(a1 + v11[6]) = *(void *)(a2 + v11[6]);
        *(void *)(a1 + v11[7]) = *(void *)(a2 + v11[7]);
        goto LABEL_62;
      case 2u:
        uint64_t v12 = sub_1DFDF7010();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        uint64_t v13 = (int *)type metadata accessor for LocalNewsTodayFeedGroup();
        *(void *)(a1 + v13[5]) = *(void *)(a2 + v13[5]);
        *(void *)(a1 + v13[6]) = *(void *)(a2 + v13[6]);
        uint64_t v14 = v13[7];
        uint64_t v15 = (void *)(a1 + v14);
        uint64_t v16 = (const void *)(a2 + v14);
        uint64_t v17 = sub_1DFDF9EE0();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          sub_1DEB61C9C(0, (unint64_t *)&unk_1EBABA350, MEMORY[0x1E4F80520]);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        *(void *)(a1 + v13[8]) = *(void *)(a2 + v13[8]);
        uint64_t v40 = v13[9];
        uint64_t v41 = a1 + v40;
        uint64_t v42 = a2 + v40;
        *(void *)uint64_t v41 = *(void *)v42;
        *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
        goto LABEL_62;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
        uint64_t v20 = sub_1DFDF7010();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        goto LABEL_62;
      case 8u:
        uint64_t v21 = sub_1DFDF7010();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        uint64_t v22 = type metadata accessor for TopicTodayFeedGroup();
        *(unsigned char *)(a1 + *(int *)(v22 + 20)) = *(unsigned char *)(a2 + *(int *)(v22 + 20));
        goto LABEL_62;
      case 9u:
        type metadata accessor for MagazineFeedGroup();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1DEA530F0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
            uint64_t v44 = *(int *)(type metadata accessor for FeaturedArticleMagazineFeedGroup() + 20);
            uint64_t v45 = a1 + v44;
            uint64_t v46 = a2 + v44;
            uint64_t v47 = sub_1DFDF7010();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
            goto LABEL_61;
          case 2u:
          case 0xAu:
          case 0xBu:
            uint64_t v121 = sub_1DFDF7010();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 32))(a1, a2, v121);
            goto LABEL_61;
          case 3u:
            sub_1DEA52F58();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
            uint64_t v49 = *(int *)(type metadata accessor for FeaturedIssueArticleMagazineFeedGroup() + 20);
            uint64_t v50 = a1 + v49;
            uint64_t v51 = a2 + v49;
            uint64_t v52 = sub_1DFDF7010();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
            goto LABEL_61;
          case 4u:
            long long v53 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v53;
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
            uint64_t v54 = (int *)type metadata accessor for InlineCategoriesMagazineFeedGroup();
            uint64_t v55 = v54[10];
            uint64_t v56 = a1 + v55;
            uint64_t v57 = a2 + v55;
            uint64_t v58 = sub_1DFDF8C20();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
            *(void *)(a1 + v54[11]) = *(void *)(a2 + v54[11]);
            *(void *)(a1 + v54[12]) = *(void *)(a2 + v54[12]);
            goto LABEL_61;
          case 5u:
            long long v59 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v59;
            long long v60 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v60;
            *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
            uint64_t v61 = (int *)type metadata accessor for MyMagazinesMagazineFeedGroup();
            uint64_t v62 = v61[10];
            uint64_t v63 = a1 + v62;
            uint64_t v64 = a2 + v62;
            uint64_t v65 = sub_1DFDF8C20();
            uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 32);
            v66(v63, v64, v65);
            v66(a1 + v61[11], a2 + v61[11], v65);
            *(void *)(a1 + v61[12]) = *(void *)(a2 + v61[12]);
            uint64_t v67 = v61[13];
            uint64_t v68 = a1 + v67;
            uint64_t v69 = a2 + v67;
            sub_1DEA82790(0, (unint64_t *)&qword_1EBAE9610, MEMORY[0x1E4F7F760]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
            uint64_t v71 = type metadata accessor for MyMagazinesMagazineFeedGroupKnobs();
            *(void *)(v68 + *(int *)(v71 + 20)) = *(void *)(v69 + *(int *)(v71 + 20));
            uint64_t v72 = *(int *)(v71 + 24);
            uint64_t v73 = v68 + v72;
            uint64_t v74 = v69 + v72;
            sub_1DEA82790(0, (unint64_t *)&qword_1EBAE96C0, MEMORY[0x1E4F7F8F8]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
            *(void *)(a1 + v61[14]) = *(void *)(a2 + v61[14]);
            *(unsigned char *)(a1 + v61[15]) = *(unsigned char *)(a2 + v61[15]);
            uint64_t v76 = v61[16];
            uint64_t v77 = a1 + v76;
            uint64_t v78 = a2 + v76;
            uint64_t v79 = sub_1DFDF8F10();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
            uint64_t v80 = v61[17];
            uint64_t v81 = (void *)(a1 + v80);
            uint64_t v82 = (const void *)(a2 + v80);
            uint64_t v83 = sub_1DFDF7CB0();
            uint64_t v84 = *(void *)(v83 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
            {
              sub_1DEB61C9C(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0]);
              memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v84 + 32))(v81, v82, v83);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
            }
            *(void *)(a1 + v61[18]) = *(void *)(a2 + v61[18]);
            goto LABEL_61;
          case 6u:
            sub_1DEA536E4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 32))(a1, a2, v86);
            uint64_t v87 = *(int *)(type metadata accessor for NewIssueMagazineFeedGroup() + 20);
            uint64_t v88 = a1 + v87;
            uint64_t v89 = a2 + v87;
            uint64_t v90 = sub_1DFDF7010();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
            goto LABEL_61;
          case 7u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v91 = (int *)type metadata accessor for PaywallMagazineFeedGroup();
            uint64_t v92 = v91[5];
            uint64_t v93 = a1 + v92;
            uint64_t v94 = a2 + v92;
            uint64_t v95 = sub_1DFDF8C20();
            uint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 32);
            v96(v93, v94, v95);
            v96(a1 + v91[6], a2 + v91[6], v95);
            *(void *)(a1 + v91[7]) = *(void *)(a2 + v91[7]);
            *(void *)(a1 + v91[8]) = *(void *)(a2 + v91[8]);
            uint64_t v97 = v91[9];
            uint64_t v98 = a1 + v97;
            uint64_t v99 = a2 + v97;
            type metadata accessor for FeedPaywallModel(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            *(unsigned char *)uint64_t v98 = *(unsigned char *)v99;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v101 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
              uint64_t v102 = v101[5];
              uint64_t v103 = (void *)(v98 + v102);
              uint64_t v104 = (const void *)(v99 + v102);
              uint64_t v105 = sub_1DFDE7220();
              uint64_t v106 = *(void *)(v105 - 8);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
              {
                sub_1DEB61C9C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
                memcpy(v103, v104, *(void *)(*(void *)(v107 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v106 + 32))(v103, v104, v105);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
              }
              *(void *)(v98 + v101[6]) = *(void *)(v99 + v101[6]);
              *(void *)(v98 + v101[7]) = *(void *)(v99 + v101[7]);
              *(void *)(v98 + v101[8]) = *(void *)(v99 + v101[8]);
              *(void *)(v98 + v101[9]) = *(void *)(v99 + v101[9]);
              *(void *)(v98 + v101[10]) = *(void *)(v99 + v101[10]);
              *(void *)(v98 + v101[11]) = *(void *)(v99 + v101[11]);
              *(void *)(v98 + v101[12]) = *(void *)(v99 + v101[12]);
              *(void *)(v98 + v101[13]) = *(void *)(v99 + v101[13]);
              *(void *)(v98 + v101[14]) = *(void *)(v99 + v101[14]);
              *(void *)(v98 + v101[15]) = *(void *)(v99 + v101[15]);
              *(void *)(v98 + v101[16]) = *(void *)(v99 + v101[16]);
              *(void *)(v98 + v101[17]) = *(void *)(v99 + v101[17]);
              *(void *)(v98 + v101[18]) = *(void *)(v99 + v101[18]);
              *(_OWORD *)(v98 + v101[19]) = *(_OWORD *)(v99 + v101[19]);
              *(_OWORD *)(v98 + v101[20]) = *(_OWORD *)(v99 + v101[20]);
              *(_OWORD *)(v98 + v101[21]) = *(_OWORD *)(v99 + v101[21]);
              uint64_t v146 = v101[22];
              uint64_t v147 = v98 + v146;
              uint64_t v148 = v99 + v146;
              uint64_t v149 = sub_1DFDEF360();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
              *(_OWORD *)(v98 + v101[23]) = *(_OWORD *)(v99 + v101[23]);
              uint64_t v150 = v101[24];
              v141 = (void *)(v98 + v150);
              v142 = (const void *)(v99 + v150);
              uint64_t v143 = sub_1DFDEF130();
              uint64_t v144 = *(void *)(v143 - 8);
              if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143)) {
                goto LABEL_38;
              }
            }
            else
            {
              *(_OWORD *)(v98 + 8) = *(_OWORD *)(v99 + 8);
              *(_OWORD *)(v98 + 24) = *(_OWORD *)(v99 + 24);
              *(_OWORD *)(v98 + 40) = *(_OWORD *)(v99 + 40);
              uint64_t v134 = *(void *)(v99 + 64);
              *(void *)(v98 + 56) = *(void *)(v99 + 56);
              *(void *)(v98 + 64) = v134;
              *(_OWORD *)(v98 + 72) = *(_OWORD *)(v99 + 72);
              *(_OWORD *)(v98 + 88) = *(_OWORD *)(v99 + 88);
              *(_OWORD *)(v98 + 104) = *(_OWORD *)(v99 + 104);
              uint64_t v135 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
              uint64_t v136 = v135[16];
              uint64_t v137 = v98 + v136;
              uint64_t v138 = v99 + v136;
              uint64_t v139 = sub_1DFDEF360();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 32))(v137, v138, v139);
              *(_OWORD *)(v98 + v135[17]) = *(_OWORD *)(v99 + v135[17]);
              uint64_t v140 = v135[18];
              v141 = (void *)(v98 + v140);
              v142 = (const void *)(v99 + v140);
              uint64_t v143 = sub_1DFDEF130();
              uint64_t v144 = *(void *)(v143 - 8);
              if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
              {
LABEL_38:
                (*(void (**)(void *, const void *, uint64_t))(v144 + 32))(v141, v142, v143);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
LABEL_39:
                swift_storeEnumTagMultiPayload();
                id v223 = (int *)type metadata accessor for FeedPaywallConfig();
                uint64_t v151 = v223[5];
                uint64_t v152 = v98 + v151;
                uint64_t v153 = v99 + v151;
                int v154 = swift_getEnumCaseMultiPayload();
                *(unsigned char *)uint64_t v152 = *(unsigned char *)v153;
                uint64_t v222 = v98;
                if (v154 == 1)
                {
                  v155 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                  uint64_t v156 = v155[5];
                  __dst = (void *)(v152 + v156);
                  v157 = (const void *)(v153 + v156);
                  uint64_t v158 = sub_1DFDE7220();
                  uint64_t v159 = *(void *)(v158 - 8);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v159 + 48))(v157, 1, v158))
                  {
                    sub_1DEB61C9C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
                    memcpy(__dst, v157, *(void *)(*(void *)(v160 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v159 + 32))(__dst, v157, v158);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v159 + 56))(__dst, 0, 1, v158);
                  }
                  *(void *)(v152 + v155[6]) = *(void *)(v153 + v155[6]);
                  *(void *)(v152 + v155[7]) = *(void *)(v153 + v155[7]);
                  *(void *)(v152 + v155[8]) = *(void *)(v153 + v155[8]);
                  *(void *)(v152 + v155[9]) = *(void *)(v153 + v155[9]);
                  *(void *)(v152 + v155[10]) = *(void *)(v153 + v155[10]);
                  *(void *)(v152 + v155[11]) = *(void *)(v153 + v155[11]);
                  *(void *)(v152 + v155[12]) = *(void *)(v153 + v155[12]);
                  *(void *)(v152 + v155[13]) = *(void *)(v153 + v155[13]);
                  *(void *)(v152 + v155[14]) = *(void *)(v153 + v155[14]);
                  *(void *)(v152 + v155[15]) = *(void *)(v153 + v155[15]);
                  *(void *)(v152 + v155[16]) = *(void *)(v153 + v155[16]);
                  *(void *)(v152 + v155[17]) = *(void *)(v153 + v155[17]);
                  *(void *)(v152 + v155[18]) = *(void *)(v153 + v155[18]);
                  *(_OWORD *)(v152 + v155[19]) = *(_OWORD *)(v153 + v155[19]);
                  *(_OWORD *)(v152 + v155[20]) = *(_OWORD *)(v153 + v155[20]);
                  *(_OWORD *)(v152 + v155[21]) = *(_OWORD *)(v153 + v155[21]);
                  uint64_t v173 = v155[22];
                  uint64_t v174 = v152 + v173;
                  uint64_t v175 = v153 + v173;
                  uint64_t v176 = sub_1DFDEF360();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v176 - 8) + 32))(v174, v175, v176);
                  *(_OWORD *)(v152 + v155[23]) = *(_OWORD *)(v153 + v155[23]);
                  uint64_t v177 = v155[24];
                  uint64_t v178 = (void *)(v152 + v177);
                  v179 = (const void *)(v153 + v177);
                  uint64_t v180 = sub_1DFDEF130();
                  uint64_t v181 = *(void *)(v180 - 8);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v181 + 48))(v179, 1, v180))
                  {
                    sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
                    memcpy(v178, v179, *(void *)(*(void *)(v182 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v181 + 32))(v178, v179, v180);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v181 + 56))(v178, 0, 1, v180);
                  }
                  uint64_t v98 = v222;
                }
                else
                {
                  *(_OWORD *)(v152 + 8) = *(_OWORD *)(v153 + 8);
                  *(_OWORD *)(v152 + 24) = *(_OWORD *)(v153 + 24);
                  *(_OWORD *)(v152 + 40) = *(_OWORD *)(v153 + 40);
                  uint64_t v161 = *(void *)(v153 + 64);
                  *(void *)(v152 + 56) = *(void *)(v153 + 56);
                  *(void *)(v152 + 64) = v161;
                  *(_OWORD *)(v152 + 72) = *(_OWORD *)(v153 + 72);
                  *(_OWORD *)(v152 + 88) = *(_OWORD *)(v153 + 88);
                  *(_OWORD *)(v152 + 104) = *(_OWORD *)(v153 + 104);
                  uint64_t v162 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                  uint64_t v163 = v162[16];
                  uint64_t v164 = v152 + v163;
                  uint64_t v165 = v153 + v163;
                  uint64_t v166 = sub_1DFDEF360();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 32))(v164, v165, v166);
                  *(_OWORD *)(v152 + v162[17]) = *(_OWORD *)(v153 + v162[17]);
                  uint64_t v167 = v162[18];
                  v168 = (void *)(v152 + v167);
                  uint64_t v169 = (const void *)(v153 + v167);
                  uint64_t v170 = sub_1DFDEF130();
                  uint64_t v171 = *(void *)(v170 - 8);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v171 + 48))(v169, 1, v170))
                  {
                    sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
                    memcpy(v168, v169, *(void *)(*(void *)(v172 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v171 + 32))(v168, v169, v170);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v170);
                  }
                }
                swift_storeEnumTagMultiPayload();
                uint64_t v183 = v223[6];
                uint64_t v184 = v98 + v183;
                uint64_t v185 = v99 + v183;
                int v186 = swift_getEnumCaseMultiPayload();
                *(unsigned char *)uint64_t v184 = *(unsigned char *)v185;
                if (v186 == 1)
                {
                  uint64_t v187 = (int *)type metadata accessor for FeedVideoPaywallModel(0);
                  uint64_t v188 = v187[5];
                  __dsta = (void *)(v184 + v188);
                  id v189 = (const void *)(v185 + v188);
                  uint64_t v190 = sub_1DFDE7220();
                  uint64_t v191 = *(void *)(v190 - 8);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
                  {
                    sub_1DEB61C9C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
                    memcpy(__dsta, v189, *(void *)(*(void *)(v192 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v191 + 32))(__dsta, v189, v190);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v191 + 56))(__dsta, 0, 1, v190);
                  }
                  *(void *)(v184 + v187[6]) = *(void *)(v185 + v187[6]);
                  *(void *)(v184 + v187[7]) = *(void *)(v185 + v187[7]);
                  *(void *)(v184 + v187[8]) = *(void *)(v185 + v187[8]);
                  *(void *)(v184 + v187[9]) = *(void *)(v185 + v187[9]);
                  *(void *)(v184 + v187[10]) = *(void *)(v185 + v187[10]);
                  *(void *)(v184 + v187[11]) = *(void *)(v185 + v187[11]);
                  *(void *)(v184 + v187[12]) = *(void *)(v185 + v187[12]);
                  *(void *)(v184 + v187[13]) = *(void *)(v185 + v187[13]);
                  *(void *)(v184 + v187[14]) = *(void *)(v185 + v187[14]);
                  *(void *)(v184 + v187[15]) = *(void *)(v185 + v187[15]);
                  *(void *)(v184 + v187[16]) = *(void *)(v185 + v187[16]);
                  *(void *)(v184 + v187[17]) = *(void *)(v185 + v187[17]);
                  *(void *)(v184 + v187[18]) = *(void *)(v185 + v187[18]);
                  *(_OWORD *)(v184 + v187[19]) = *(_OWORD *)(v185 + v187[19]);
                  *(_OWORD *)(v184 + v187[20]) = *(_OWORD *)(v185 + v187[20]);
                  *(_OWORD *)(v184 + v187[21]) = *(_OWORD *)(v185 + v187[21]);
                  uint64_t v205 = v187[22];
                  uint64_t v206 = v184 + v205;
                  uint64_t v207 = v185 + v205;
                  uint64_t v208 = sub_1DFDEF360();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v208 - 8) + 32))(v206, v207, v208);
                  *(_OWORD *)(v184 + v187[23]) = *(_OWORD *)(v185 + v187[23]);
                  uint64_t v209 = v187[24];
                  uint64_t v200 = (void *)(v184 + v209);
                  v201 = (const void *)(v185 + v209);
                  uint64_t v202 = sub_1DFDEF130();
                  uint64_t v203 = *(void *)(v202 - 8);
                  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202)) {
                    goto LABEL_57;
                  }
                }
                else
                {
                  *(_OWORD *)(v184 + 8) = *(_OWORD *)(v185 + 8);
                  *(_OWORD *)(v184 + 24) = *(_OWORD *)(v185 + 24);
                  *(_OWORD *)(v184 + 40) = *(_OWORD *)(v185 + 40);
                  uint64_t v193 = *(void *)(v185 + 64);
                  *(void *)(v184 + 56) = *(void *)(v185 + 56);
                  *(void *)(v184 + 64) = v193;
                  *(_OWORD *)(v184 + 72) = *(_OWORD *)(v185 + 72);
                  *(_OWORD *)(v184 + 88) = *(_OWORD *)(v185 + 88);
                  *(_OWORD *)(v184 + 104) = *(_OWORD *)(v185 + 104);
                  id v194 = (int *)type metadata accessor for FeedRegularPaywallModel(0);
                  uint64_t v195 = v194[16];
                  uint64_t v196 = v184 + v195;
                  uint64_t v197 = v185 + v195;
                  uint64_t v198 = sub_1DFDEF360();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v198 - 8) + 32))(v196, v197, v198);
                  *(_OWORD *)(v184 + v194[17]) = *(_OWORD *)(v185 + v194[17]);
                  uint64_t v199 = v194[18];
                  uint64_t v200 = (void *)(v184 + v199);
                  v201 = (const void *)(v185 + v199);
                  uint64_t v202 = sub_1DFDEF130();
                  uint64_t v203 = *(void *)(v202 - 8);
                  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202))
                  {
LABEL_57:
                    (*(void (**)(void *, const void *, uint64_t))(v203 + 32))(v200, v201, v202);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
                    goto LABEL_58;
                  }
                }
                sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
                memcpy(v200, v201, *(void *)(*(void *)(v204 - 8) + 64));
LABEL_58:
                swift_storeEnumTagMultiPayload();
                uint64_t v210 = v223[7];
                v211 = (void *)(v222 + v210);
                v212 = (void *)(v99 + v210);
                uint64_t v213 = type metadata accessor for FeedPaywallType(0);
                if (swift_getEnumCaseMultiPayload())
                {
                  memcpy(v211, v212, *(void *)(*(void *)(v213 - 8) + 64));
                }
                else
                {
                  void *v211 = *v212;
                  sub_1DEB61CF0(0, (unint64_t *)&qword_1EBAC0120, type metadata accessor for FCFeedPaywallSubtype, MEMORY[0x1E4F823C0]);
                  uint64_t v215 = *(int *)(v214 + 48);
                  v216 = (char *)v211 + v215;
                  v217 = (char *)v212 + v215;
                  uint64_t v218 = sub_1DFDEEE80();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 32))(v216, v217, v218);
                  swift_storeEnumTagMultiPayload();
                }
LABEL_61:
                swift_storeEnumTagMultiPayload();
LABEL_62:
                swift_storeEnumTagMultiPayload();
                return a1;
              }
            }
            sub_1DEB61C9C(0, (unint64_t *)&unk_1EBAA7AA0, MEMORY[0x1E4F82530]);
            memcpy(v141, v142, *(void *)(*(void *)(v145 - 8) + 64));
            goto LABEL_39;
          case 8u:
            long long v108 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v108;
            long long v109 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v109;
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            uint64_t v110 = (int *)type metadata accessor for RecommendedIssuesMagazineFeedGroup();
            uint64_t v111 = v110[11];
            uint64_t v112 = a1 + v111;
            uint64_t v113 = a2 + v111;
            uint64_t v114 = sub_1DFDF8C20();
            v115 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 32);
            v115(v112, v113, v114);
            v115(a1 + v110[12], a2 + v110[12], v114);
            *(void *)(a1 + v110[13]) = *(void *)(a2 + v110[13]);
            goto LABEL_61;
          case 9u:
            sub_1DEA53948();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(a1, a2, v116);
            uint64_t v117 = *(int *)(type metadata accessor for TopicMagazineFeedGroup() + 20);
            uint64_t v118 = a1 + v117;
            uint64_t v119 = a2 + v117;
            uint64_t v120 = sub_1DFDF7010();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
            goto LABEL_61;
          case 0xCu:
            uint64_t v122 = sub_1DFDF7010();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 32))(a1, a2, v122);
            uint64_t v123 = type metadata accessor for NewspaperMagazineFeedGroup();
            *(void *)(a1 + *(int *)(v123 + 20)) = *(void *)(a2 + *(int *)(v123 + 20));
            *(void *)(a1 + *(int *)(v123 + 24)) = *(void *)(a2 + *(int *)(v123 + 24));
            goto LABEL_61;
          case 0xDu:
            sub_1DEA5387C();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 32))(a1, a2, v124);
            uint64_t v125 = type metadata accessor for CuratedMagazineFeedGroup();
            uint64_t v126 = *(int *)(v125 + 20);
            uint64_t v127 = a1 + v126;
            uint64_t v128 = a2 + v126;
            uint64_t v129 = sub_1DFDF7010();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
            uint64_t v130 = *(int *)(v125 + 24);
            uint64_t v131 = a1 + v130;
            uint64_t v132 = a2 + v130;
            uint64_t v133 = sub_1DFDF8F10();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
            goto LABEL_61;
          default:
            long long v23 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v23;
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
            uint64_t v24 = type metadata accessor for CategoriesMagazineFeedGroup();
            uint64_t v25 = *(int *)(v24 + 40);
            uint64_t v26 = a1 + v25;
            uint64_t v27 = a2 + v25;
            uint64_t v28 = sub_1DFDF8C20();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
            *(void *)(a1 + *(int *)(v24 + 44)) = *(void *)(a2 + *(int *)(v24 + 44));
            goto LABEL_61;
        }
      case 0xCu:
        uint64_t v29 = sub_1DFDF6D40();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
        goto LABEL_62;
      case 0x10u:
        sub_1DEA4B52C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
        uint64_t v31 = *(int *)(type metadata accessor for SharedWithYouTodayFeedGroup() + 20);
        uint64_t v32 = a1 + v31;
        uint64_t v33 = a2 + v31;
        uint64_t v34 = sub_1DFDF7010();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        goto LABEL_62;
      case 0x11u:
        sub_1DEAC2768();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
        goto LABEL_62;
      case 0x16u:
        uint64_t v36 = sub_1DFDF7010();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
        uint64_t v37 = type metadata accessor for SavedStoriesTodayFeedGroup();
        *(void *)(a1 + *(int *)(v37 + 20)) = *(void *)(a2 + *(int *)(v37 + 20));
        goto LABEL_62;
      case 0x17u:
        uint64_t v38 = sub_1DFDF7010();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(a1, a2, v38);
        uint64_t v39 = type metadata accessor for ChannelPickerTodayFeedGroup();
        *(_OWORD *)(a1 + *(int *)(v39 + 20)) = *(_OWORD *)(a2 + *(int *)(v39 + 20));
        goto LABEL_62;
      default:
        uint64_t v4 = sub_1DFDF7010();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        uint64_t v5 = (int *)type metadata accessor for CuratedTodayFeedGroup();
        *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
        *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
        uint64_t v6 = v5[7];
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = sub_1DFDF8F10();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        goto LABEL_62;
    }
  }
  return a1;
}

unint64_t sub_1DEB692C0()
{
  unint64_t result = qword_1EAC20B20;
  if (!qword_1EAC20B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20B20);
  }
  return result;
}

double sub_1DEB69314@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DFDF2AC0();
  uint64_t v4 = v3;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  sub_1DEA66C20();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  uint64_t v8 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v9 = self;
  double v10 = *MEMORY[0x1E4FB09D8];
  id v72 = v8;
  id v11 = objc_msgSend(v9, sel_systemFontOfSize_weight_, 27.0, v10, 0x80000001DFEBE300);
  unint64_t v12 = sub_1DEB69898();
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 40) = v11;
  sub_1DEA65870(inited);
  id v13 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DEA66BC8();
  uint64_t v15 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);
  swift_bridgeObjectRelease();

  sub_1DFDFEF40();
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;

  v79.origin.x = v18;
  v79.origin.y = v20;
  v79.size.double width = v22;
  v79.size.double height = v24;
  CGRect v80 = CGRectIntegral(v79);
  double width = v80.size.width;
  double height = v80.size.height;
  sub_1DEF9CC54(a1);
  double v26 = 0.0;
  double v27 = 0.0;
  double v28 = 0.0;
  if (v29)
  {
    id v30 = sub_1DFDB6A38();
    swift_bridgeObjectRelease();
    sub_1DFDFEF40();
    CGFloat v32 = v31;
    CGFloat v34 = v33;
    CGFloat v36 = v35;
    uint64_t v37 = v4;
    CGFloat v39 = v38;

    v81.origin.x = v32;
    v81.origin.y = v34;
    v81.size.double width = v36;
    v81.size.double height = v39;
    uint64_t v4 = v37;
    CGRect v82 = CGRectIntegral(v81);
    double v28 = v82.size.width;
    double v27 = v82.size.height;
  }
  sub_1DEF9CDCC(a1);
  uint64_t v75 = v4;
  if (v40)
  {
    uint64_t v41 = swift_initStackObject();
    *(_OWORD *)(v41 + 16) = xmmword_1DFE0B250;
    *(void *)(v41 + 32) = v72;
    id v42 = v72;
    id v43 = objc_msgSend(v9, sel_systemFontOfSize_weight_, 20.0, v10);
    *(void *)(v41 + 64) = v12;
    *(void *)(v41 + 40) = v43;
    sub_1DEA65870(v41);
    id v44 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    swift_bridgeObjectRetain();
    uint64_t v45 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    uint64_t v46 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v47 = objc_msgSend(v44, sel_initWithString_attributes_, v45, v46);
    swift_bridgeObjectRelease();

    sub_1DFDFEF40();
    CGFloat v49 = v48;
    CGFloat v51 = v50;
    CGFloat v53 = v52;
    CGFloat v55 = v54;

    v83.origin.x = v49;
    v83.origin.y = v51;
    v83.size.double width = v53;
    v83.size.double height = v55;
    CGRect v84 = CGRectIntegral(v83);
    double v26 = v84.size.width;
    double v56 = v84.size.height + 12.0;
  }
  else
  {
    double v56 = 12.0;
  }
  double v77 = v56;
  sub_1DFDF2BE0();
  double v73 = (v57 - width) * 0.5;
  sub_1DFDF2BE0();
  double v74 = v28;
  double v59 = (v58 - v28) * 0.5;
  double v60 = width;
  double v61 = height + 80.0 + 18.0;
  sub_1DFDF2BE0();
  double v63 = (v62 - v26) * 0.5;
  uint64_t v64 = *MEMORY[0x1E4FAD2B0];
  uint64_t v65 = sub_1DFDF4140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 104))(a2, v64, v65);
  uint64_t v66 = (int *)type metadata accessor for FollowingNotificationsDisabledViewLayoutAttributes();
  uint64_t v67 = (void *)(a2 + v66[5]);
  void *v67 = 0;
  v67[1] = 0;
  v67[2] = v75;
  v67[3] = 0x4074000000000000;
  uint64_t v68 = a2 + v66[6];
  *(double *)uint64_t v68 = v73;
  *(void *)(v68 + 8) = 0x4054000000000000;
  *(double *)(v68 + 16) = v60;
  *(double *)(v68 + 24) = height;
  uint64_t v69 = (double *)(a2 + v66[7]);
  *uint64_t v69 = v59;
  v69[1] = v61;
  v69[2] = v74;
  v69[3] = v27;
  uint64_t v70 = (double *)(a2 + v66[8]);
  *uint64_t v70 = v63;
  v70[1] = v61 + v27 + 45.0;
  double result = v77;
  v70[2] = v26;
  v70[3] = v77;
  return result;
}

uint64_t type metadata accessor for FollowingNotificationsDisabledViewLayoutAttributesFactory()
{
  return self;
}

unint64_t sub_1DEB69898()
{
  unint64_t result = qword_1EBABB020;
  if (!qword_1EBABB020)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBABB020);
  }
  return result;
}

uint64_t sub_1DEB698D8(uint64_t a1)
{
  uint64_t v3 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1DEA2007C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v11 - v5;
  sub_1DEA1F784(v1 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_publishDate, (uint64_t)&v11 - v5);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_background);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_theme);
  uint64_t v9 = swift_allocObject();
  sub_1DEA1F784((uint64_t)v6, v9 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_publishDate);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DEA08DF8((uint64_t)v6, (unint64_t *)&qword_1EBAA6DB0, v3);
  *(void *)(v9 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_groups) = a1;
  *(void *)(v9 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_background) = v7;
  *(void *)(v9 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_theme) = v8;
  return v9;
}

uint64_t sub_1DEB69A40()
{
  uint64_t result = 0x446873696C627570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7370756F7267;
      break;
    case 2:
      uint64_t result = 0x756F72676B636162;
      break;
    case 3:
      uint64_t result = 0x656D656874;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DEB69AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DEB6AB00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEB69AFC(uint64_t a1)
{
  unint64_t v2 = sub_1DEB6A72C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEB69B38(uint64_t a1)
{
  unint64_t v2 = sub_1DEB6A72C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEB69B74()
{
  sub_1DEA08DF8(v0 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_publishDate, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DEB69C24()
{
  return type metadata accessor for TagFeedConfig();
}

uint64_t sub_1DEB69C2C(void *a1)
{
  uint64_t v3 = v1;
  sub_1DEB6A780(0, &qword_1EAC20B28, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEB6A72C();
  sub_1DFE001A0();
  LOBYTE(v12) = 0;
  sub_1DFDE7600();
  sub_1DEB6A8AC(&qword_1EBAA6D78, MEMORY[0x1E4F27928]);
  sub_1DFDFFE30();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_groups);
    HIBYTE(v11) = 1;
    sub_1DEB6A7E4();
    sub_1DEB6A83C();
    sub_1DFDFFE80();
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_background);
    HIBYTE(v11) = 2;
    sub_1DFDFC0D0();
    sub_1DEB6A8AC(&qword_1EAC20B40, MEMORY[0x1E4F81230]);
    sub_1DFDFFE30();
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_theme);
    HIBYTE(v11) = 3;
    sub_1DFDFB350();
    sub_1DEB6A8AC(&qword_1EAC20B48, MEMORY[0x1E4F80C98]);
    sub_1DFDFFE30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DEB69F1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DEB6A078(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DEB69F48(void *a1)
{
  return sub_1DEB69C2C(a1);
}

uint64_t sub_1DEB69F6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEA1F784(*v1 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_publishDate, a1);
}

uint64_t sub_1DEB69F84()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DEB69F98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DEB698D8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DEB69FC4()
{
  return swift_retain();
}

unint64_t sub_1DEB69FDC()
{
  unint64_t result = qword_1EBAD6718;
  if (!qword_1EBAD6718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD6718);
  }
  return result;
}

uint64_t sub_1DEB6A030()
{
  return sub_1DEB6A8AC((unint64_t *)&qword_1EBAD9270, (void (*)(uint64_t))type metadata accessor for TagFeedServiceContext);
}

uint64_t sub_1DEB6A078(void *a1)
{
  sub_1DEA2007C(0, &qword_1EBAD2498, (void (*)(uint64_t))sub_1DEB6A61C);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - v3;
  sub_1DEA2007C(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - v6;
  sub_1DEB6A780(0, &qword_1EBAD2810, MEMORY[0x1E4FAAF08]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v26 - v11;
  id v13 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEB6A72C();
  uint64_t v14 = (uint64_t)v13;
  uint64_t v15 = v28;
  sub_1DFE00160();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v27 = v10;
    double v28 = a1;
    sub_1DFDE7600();
    LOBYTE(v30) = 0;
    sub_1DEB6A8AC((unint64_t *)&unk_1EBAA6D90, MEMORY[0x1E4F27928]);
    sub_1DFDEDB30();
    sub_1DEB6A61C();
    uint64_t v17 = v16;
    LOBYTE(v30) = 1;
    sub_1DEB6A8AC(&qword_1EBAD2488, (void (*)(uint64_t))sub_1DEB6A61C);
    uint64_t v18 = (uint64_t)v4;
    sub_1DFDEDB30();
    CGFloat v20 = v12;
    uint64_t v21 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v17) == 1)
    {
      sub_1DEA08DF8(v18, &qword_1EBAD2498, (void (*)(uint64_t))sub_1DEB6A61C);
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = sub_1DFDECCD0();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v17);
    }
    sub_1DFDFC0D0();
    char v29 = 2;
    sub_1DEB6A8AC(&qword_1EBAE9EB8, MEMORY[0x1E4F81230]);
    sub_1DFDEDB30();
    uint64_t v22 = v30;
    sub_1DFDFB350();
    char v29 = 3;
    sub_1DEB6A8AC((unint64_t *)&unk_1EBAE9D78, MEMORY[0x1E4F80C98]);
    sub_1DFDEDB30();
    uint64_t v23 = v30;
    uint64_t v24 = (uint64_t)v28;
    type metadata accessor for TagFeedConfig();
    uint64_t v14 = swift_allocObject();
    sub_1DEA1F784((uint64_t)v7, v14 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_publishDate);
    if (v26) {
      uint64_t v25 = v26;
    }
    else {
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
    sub_1DEA08DF8((uint64_t)v7, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    *(void *)(v14 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_groups) = v25;
    *(void *)(v14 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_background) = v22;
    *(void *)(v14 + OBJC_IVAR____TtC7NewsUI213TagFeedConfig_theme) = v23;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v9);
    __swift_destroy_boxed_opaque_existential_1(v24);
  }
  return v14;
}

void sub_1DEB6A61C()
{
  if (!qword_1EBAD2490)
  {
    sub_1DEB6A684();
    sub_1DEB6A6D8();
    unint64_t v0 = sub_1DFDECCE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAD2490);
    }
  }
}

unint64_t sub_1DEB6A684()
{
  unint64_t result = qword_1EBACC1B8;
  if (!qword_1EBACC1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBACC1B8);
  }
  return result;
}

unint64_t sub_1DEB6A6D8()
{
  unint64_t result = qword_1EBAD6728;
  if (!qword_1EBAD6728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD6728);
  }
  return result;
}

unint64_t sub_1DEB6A72C()
{
  unint64_t result = qword_1EBAD4280;
  if (!qword_1EBAD4280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD4280);
  }
  return result;
}

void sub_1DEB6A780(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEB6A72C();
    unint64_t v7 = a3(a1, &type metadata for TagFeedConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1DEB6A7E4()
{
  if (!qword_1EAC20B30)
  {
    unint64_t v0 = sub_1DFDFE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20B30);
    }
  }
}

unint64_t sub_1DEB6A83C()
{
  unint64_t result = qword_1EAC20B38;
  if (!qword_1EAC20B38)
  {
    sub_1DEB6A7E4();
    sub_1DEB6A6D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20B38);
  }
  return result;
}

uint64_t sub_1DEB6A8AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TagFeedConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEB6A9C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagFeedConfig.CodingKeys()
{
  return &type metadata for TagFeedConfig.CodingKeys;
}

unint64_t sub_1DEB6A9FC()
{
  unint64_t result = qword_1EAC20B50;
  if (!qword_1EAC20B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20B50);
  }
  return result;
}

unint64_t sub_1DEB6AA54()
{
  unint64_t result = qword_1EBAD4290;
  if (!qword_1EBAD4290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD4290);
  }
  return result;
}

unint64_t sub_1DEB6AAAC()
{
  unint64_t result = qword_1EBAD4288;
  if (!qword_1EBAD4288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD4288);
  }
  return result;
}

uint64_t sub_1DEB6AB00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446873696C627570 && a2 == 0xEB00000000657461;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7370756F7267 && a2 == 0xE600000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D656874 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DEB6ACD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEB6ACE4);
}

uint64_t sub_1DEB6ACE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DEB6AD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEB6AD64);
}

uint64_t sub_1DEB6AD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDFAA20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1DEB6ADD4(uint64_t a1)
{
  unint64_t v2 = sub_1DEAC3C58();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEB6AE10(uint64_t a1)
{
  unint64_t v2 = sub_1DEAC3C58();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEB6AE4C(void *a1)
{
  sub_1DEABA3BC(0, &qword_1EBAA6990, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEAC3C58();
  sub_1DFE001A0();
  sub_1DFDFAA20();
  sub_1DE9CB07C(&qword_1EBABA3B0);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unsigned char *storeEnumTagSinglePayload for SeenContentMarkTodayFeedGroupConfigData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DEB6B05CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SeenContentMarkTodayFeedGroupConfigData.CodingKeys()
{
  return &type metadata for SeenContentMarkTodayFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DEB6B098()
{
  unint64_t result = qword_1EAC20B58;
  if (!qword_1EAC20B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20B58);
  }
  return result;
}

uint64_t sub_1DEB6B0EC(uint64_t a1)
{
  sub_1DE9E1360();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (id *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (objc_msgSend(*(id *)(a1 + 24), sel_useOfflineMode)
    && (__swift_project_boxed_opaque_existential_1((void *)(a1 + 32), *(void *)(a1 + 56)), (sub_1DFDF8460() & 1) != 0))
  {
    swift_retain();
    sub_1DFDECF80();
    swift_release();
    uint64_t v5 = type metadata accessor for AudioFeedTrack(0);
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    {
      sub_1DEB6B360((uint64_t)v4, (uint64_t (*)(void))sub_1DE9E1360);
      char v6 = 0;
    }
    else
    {
      id v8 = objc_msgSend(*v4, sel_identifier);
      uint64_t v9 = sub_1DFDFDD20();
      uint64_t v11 = v10;

      sub_1DEB6B360((uint64_t)v4, type metadata accessor for AudioFeedTrack);
      id v12 = objc_msgSend(*(id *)(a1 + 72), sel_listenableArticleIDs);
      uint64_t v13 = sub_1DFDFE5D0();

      char v6 = sub_1DEAAB55C(v9, v11, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    char v6 = 1;
  }
  return v6 & 1;
}

uint64_t sub_1DEB6B2E4()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioFeedMastheadModelProvider()
{
  return self;
}

uint64_t sub_1DEB6B360(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEB6B3C0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1DEB6B400(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (qword_1EBAC0370 != -1) {
    swift_once();
  }
  sub_1DEB6B648(&qword_1EBAC9800);
  sub_1DFDE7EB0();
  uint64_t v4 = *(int *)(v3 + OBJC_IVAR___TSNotificationSettings_scheduledDeliverySetting);
  if (v6 != v4) {
    objc_msgSend(*(id *)(a2 + 16), sel_deviceDigestModeDidUpdateToDigestMode_, v4);
  }
  sub_1DEB6B648((unint64_t *)&unk_1EBAC9808);
  return sub_1DFDE8120();
}

uint64_t sub_1DEB6B538()
{
  return sub_1DFDED310();
}

uint64_t sub_1DEB6B564()
{
  return sub_1DFDED340();
}

uint64_t sub_1DEB6B590()
{
  return sub_1DFDED310();
}

uint64_t sub_1DEB6B5BC()
{
  return sub_1DFDED340();
}

uint64_t sub_1DEB6B5E8()
{
  return sub_1DFDED310();
}

uint64_t sub_1DEB6B614()
{
  return sub_1DEB6B648(&qword_1EBAC9800);
}

uint64_t sub_1DEB6B648(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NotificationScheduledDeliveryModeReporter();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for SportsFavoritesPrewarmBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SportsFavoritesPrewarmBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  id v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SportsFavoritesPrewarmBlueprintModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SportsFavoritesPrewarmBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsFavoritesPrewarmBlueprintModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsFavoritesPrewarmBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsFavoritesPrewarmBlueprintModifier()
{
  return &type metadata for SportsFavoritesPrewarmBlueprintModifier;
}

uint64_t sub_1DEB6B93C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v71 = a3;
  uint64_t v80 = type metadata accessor for SportsFavoritesModel();
  MEMORY[0x1F4188790](v80);
  double v77 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB2F808();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB6C32C();
  uint64_t v79 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v78 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB6C4EC(0, &qword_1EAC20B78, MEMORY[0x1E4FACA00]);
  uint64_t v69 = *(void *)(v15 - 8);
  uint64_t v70 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v68 = (char *)v59 - v16;
  sub_1DEB6C3C0();
  MEMORY[0x1F4188790](v17 - 8);
  double v62 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB6C4EC(0, &qword_1EAC20BA0, MEMORY[0x1E4FAD830]);
  uint64_t v66 = *(void *)(v19 - 8);
  uint64_t v67 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v65 = (char *)v59 - v20;
  sub_1DEB6C5AC();
  MEMORY[0x1F4188790](v21 - 8);
  double v61 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB6C4EC(0, &qword_1EAC20B88, MEMORY[0x1E4FAC180]);
  uint64_t v63 = *(void *)(v23 - 8);
  uint64_t v64 = v23;
  MEMORY[0x1F4188790](v23);
  double v73 = (char *)v59 - v24;
  uint64_t v25 = *(void *)(v3 + 56);
  uint64_t v26 = *(void *)(v3 + 64);
  uint64_t v27 = sub_1DFDFA9D0();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v28 = sub_1DEE7E030(v27, v25, v26);
  swift_bridgeObjectRelease();
  uint64_t v29 = v26;
  swift_bridgeObjectRelease();
  swift_release();
  int64_t v30 = *(void *)(v28 + 16);
  id v72 = a2;
  if (v30)
  {
    uint64_t v60 = v4;
    uint64_t v81 = MEMORY[0x1E4FBC860];
    sub_1DEDF6424(0, v30, 0);
    uint64_t v31 = v9 + 16;
    CGFloat v32 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    unint64_t v33 = (*(unsigned __int8 *)(v31 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 64);
    v59[1] = v28;
    unint64_t v34 = v28 + v33;
    uint64_t v75 = *(void *)(v31 + 56);
    uint64_t v76 = v31;
    double v35 = (void (**)(char *, uint64_t))(v31 - 8);
    uint64_t v74 = v13 + 32;
    do
    {
      v32(v11, v34, v8);
      v32(v77, (unint64_t)v11, v8);
      sub_1DEB6C678((unint64_t *)&qword_1EAC24780, (void (*)(uint64_t))type metadata accessor for SportsFavoritesModel);
      sub_1DFDF0B40();
      (*v35)(v11, v8);
      uint64_t v36 = v81;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF6424(0, *(void *)(v36 + 16) + 1, 1);
        uint64_t v36 = v81;
      }
      unint64_t v38 = *(void *)(v36 + 16);
      unint64_t v37 = *(void *)(v36 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1DEDF6424(v37 > 1, v38 + 1, 1);
        uint64_t v36 = v81;
      }
      *(void *)(v36 + 16) = v38 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v36+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v38, v78, v79);
      uint64_t v81 = v36;
      v34 += v75;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void *)(v60 + 64);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x1E4FBC860];
  }
  uint64_t v81 = v29;
  uint64_t v39 = sub_1DEB6C678(&qword_1EAC20BB0, (void (*)(uint64_t))sub_1DEB6C32C);
  uint64_t v40 = sub_1DEB6C678(&qword_1EAC20BB8, (void (*)(uint64_t))sub_1DEB6C32C);
  swift_retain();
  MEMORY[0x1E01DBA90](v36, v79, v39, v40);
  sub_1DEB6C290();
  sub_1DEB6C678((unint64_t *)&qword_1EAC24780, (void (*)(uint64_t))type metadata accessor for SportsFavoritesModel);
  uint64_t v41 = v73;
  sub_1DFDF14C0();
  sub_1DEB6C6C0();
  uint64_t v42 = v63;
  unint64_t v43 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1DFE0B250;
  uint64_t v45 = v64;
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 16))(v44 + v43, v41, v64);
  uint64_t v46 = sub_1DEB6C48C(&qword_1EAC20B90);
  uint64_t v47 = sub_1DEB6C48C(&qword_1EAC20B98);
  MEMORY[0x1E01DBA70](v44, v45, v46, v47);
  double v48 = v65;
  sub_1DFDF5A70();
  sub_1DEB6C734();
  uint64_t v51 = v67;
  double v50 = v68;
  double v52 = &v68[*(int *)(v49 + 48)];
  uint64_t v53 = v66;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v68, v48, v67);
  uint64_t v54 = *MEMORY[0x1E4FAC298];
  uint64_t v55 = sub_1DFDF1930();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 104))(v52, v54, v55);
  uint64_t v57 = v69;
  uint64_t v56 = v70;
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v50, *MEMORY[0x1E4FAC9E8], v70);
  v72(v50);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v50, v56);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v73, v45);
}

unint64_t sub_1DEB6C238()
{
  unint64_t result = qword_1EAC20B60;
  if (!qword_1EAC20B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20B60);
  }
  return result;
}

unint64_t sub_1DEB6C290()
{
  unint64_t result = qword_1EAC20B68;
  if (!qword_1EAC20B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20B68);
  }
  return result;
}

uint64_t sub_1DEB6C2E4()
{
  return sub_1DEB6C678((unint64_t *)&qword_1EAC24780, (void (*)(uint64_t))type metadata accessor for SportsFavoritesModel);
}

void sub_1DEB6C32C()
{
  if (!qword_1EAC20B70)
  {
    type metadata accessor for SportsFavoritesModel();
    sub_1DEB6C678((unint64_t *)&qword_1EAC24780, (void (*)(uint64_t))type metadata accessor for SportsFavoritesModel);
    unint64_t v0 = sub_1DFDF0B70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20B70);
    }
  }
}

void sub_1DEB6C3C0()
{
  if (!qword_1EAC20B80)
  {
    sub_1DEB6C4EC(255, &qword_1EAC20B88, MEMORY[0x1E4FAC180]);
    sub_1DEB6C48C(&qword_1EAC20B90);
    sub_1DEB6C48C(&qword_1EAC20B98);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20B80);
    }
  }
}

uint64_t sub_1DEB6C48C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEB6C4EC(255, &qword_1EAC20B88, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEB6C4EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for SportsFavoritesSectionDescriptor;
    v8[1] = type metadata accessor for SportsFavoritesModel();
    v8[2] = sub_1DEB6C290();
    v8[3] = sub_1DEB6C678((unint64_t *)&qword_1EAC24780, (void (*)(uint64_t))type metadata accessor for SportsFavoritesModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DEB6C5AC()
{
  if (!qword_1EAC20BA8)
  {
    sub_1DEB6C32C();
    sub_1DEB6C678(&qword_1EAC20BB0, (void (*)(uint64_t))sub_1DEB6C32C);
    sub_1DEB6C678(&qword_1EAC20BB8, (void (*)(uint64_t))sub_1DEB6C32C);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20BA8);
    }
  }
}

uint64_t sub_1DEB6C678(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEB6C6C0()
{
  if (!qword_1EAC20BC0)
  {
    sub_1DEB6C4EC(255, &qword_1EAC20B88, MEMORY[0x1E4FAC180]);
    unint64_t v0 = sub_1DFDFFEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20BC0);
    }
  }
}

void sub_1DEB6C734()
{
  if (!qword_1EAC20BC8)
  {
    sub_1DEB6C4EC(255, &qword_1EAC20BA0, MEMORY[0x1E4FAD830]);
    sub_1DFDF1930();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC20BC8);
    }
  }
}

uint64_t sub_1DEB6C894()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DEB6C8CC(void *a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  unint64_t v6 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a1, sel_objectForKey_, v6);

  if (v7)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
    sub_1DEA6FDEC(&v12, &v13);
    type metadata accessor for TagFeedViewController();
    swift_dynamicCast();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a2;
    *(void *)(v8 + 24) = a3;
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v11;
    v9[3] = sub_1DEB6CA7C;
    v9[4] = v8;
    swift_retain();
    id v10 = v11;
    swift_retain();
    sub_1DFDEE310();

    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DEB6CA44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEB6CA7C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1DEB6CAA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEB6CAE8()
{
  return sub_1DEEC7200(v0[2], v0[3], v0[4]);
}

uint64_t sub_1DEB6CAF4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI225SportsScoreSortingContext_nowDate;
  uint64_t v2 = sub_1DFDE7600();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DEB6CBC4()
{
  return type metadata accessor for SportsScoreSortingContext();
}

uint64_t type metadata accessor for SportsScoreSortingContext()
{
  uint64_t result = qword_1EBADC098;
  if (!qword_1EBADC098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEB6CC18()
{
  uint64_t result = sub_1DFDE7600();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DEB6CCB8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAD2DD8);
  uint64_t result = sub_1DFDECCC0();
  if (v9)
  {
    uint64_t v4 = (objc_class *)type metadata accessor for LiveActivityWebEmbedAttributesProvider();
    id v5 = objc_allocWithZone(v4);
    sub_1DE94F204((uint64_t)v8, (uint64_t)v5 + OBJC_IVAR____TtC7NewsUI238LiveActivityWebEmbedAttributesProvider_liveActivityManager);
    v7.receiver = v5;
    v7.super_class = v4;
    id v6 = objc_msgSendSuper2(&v7, sel_init);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
    a2[1] = &off_1F3A811C8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEB6CD88(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAE8B80);
  sub_1DFDECCC0();
  uint64_t result = v2;
  if (!v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEB6CE00()
{
  type metadata accessor for LiveActivityWebEmbedMessageHandler();
  sub_1DFDED7B0();
  return swift_release();
}

uint64_t sub_1DEB6CE60(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAD2DD8);
  uint64_t result = sub_1DFDECCC0();
  if (v7)
  {
    uint64_t v2 = (objc_class *)type metadata accessor for LiveActivityWebEmbedMessageHandler();
    id v3 = objc_allocWithZone(v2);
    sub_1DE94F204((uint64_t)v6, (uint64_t)v3 + OBJC_IVAR____TtC7NewsUI234LiveActivityWebEmbedMessageHandler_liveActivityManager);
    v5.receiver = v3;
    v5.super_class = v2;
    id v4 = objc_msgSendSuper2(&v5, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DEB6CF24(void *a1, void *a2)
{
  type metadata accessor for LiveActivityWebEmbedMessageHandler();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v3 = sub_1DFDECCB0();
  if (!v3) {
    goto LABEL_6;
  }
  id v4 = (void *)v3;
  objc_super v5 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_addMessageHandler_name_, v4, v5);

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v6 = sub_1DFDECCB0();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = (id)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_addMessageHandler_name_, v7, v8);
  }
  else
  {
LABEL_6:
    __break(1u);
  }
}

uint64_t sub_1DEB6D0A8(uint64_t a1)
{
  sub_1DEB6D104();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DEB6D104()
{
  if (!qword_1EAC20D78)
  {
    sub_1DE925C98(255, (unint64_t *)&unk_1EBAD3B20);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20D78);
    }
  }
}

uint64_t sub_1DEB6D170()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

char *keypath_get_selector_liveActivityFollowedAlertsThreshold()
{
  return sel_liveActivityFollowedAlertsThreshold;
}

id sub_1DEB6D1B4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, (SEL *)&selRef_liveActivityFollowedAlertsThreshold, a2);
}

char *keypath_get_selector_liveActivityScheduledAlertsThreshold()
{
  return sel_liveActivityScheduledAlertsThreshold;
}

id sub_1DEB6D1CC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, (SEL *)&selRef_liveActivityScheduledAlertsThreshold, a2);
}

id keypath_getTm@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v5 = *a1;
  unsigned __int8 v6 = objc_msgSend(*a1, sel_respondsToSelector_, *a2);
  if (v6) {
    id result = [v5 *a2];
  }
  else {
    id result = 0;
  }
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = (v6 & 1) == 0;
  return result;
}

uint64_t sub_1DEB6D248()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for DislikeButtonRenderer()
{
  return self;
}

uint64_t sub_1DEB6D2A4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI220OnboardingInteractor_personalizedAdsExposureStart;
  uint64_t v2 = sub_1DFDE7600();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DEB6D34C()
{
  return type metadata accessor for OnboardingInteractor();
}

uint64_t type metadata accessor for OnboardingInteractor()
{
  uint64_t result = qword_1EBAC2F10;
  if (!qword_1EBAC2F10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEB6D3A0()
{
  uint64_t result = sub_1DFDE7600();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DEB6D43C(uint64_t a1)
{
  uint64_t v3 = sub_1DFDE7600();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned __int8 v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DE94F204(a1, (uint64_t)v10);
  sub_1DEAE7550();
  type metadata accessor for OnboardingPersonalizedAdsStep();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_release();
    sub_1DFDE75F0();
    uint64_t v8 = v1 + OBJC_IVAR____TtC7NewsUI220OnboardingInteractor_personalizedAdsExposureStart;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v8, v6, v3);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1DEB6D57C(uint64_t a1)
{
  uint64_t v89 = sub_1DFDE7600();
  uint64_t v92 = *(void *)(v89 - 8);
  uint64_t v2 = *(void *)(v92 + 64);
  uint64_t v3 = MEMORY[0x1F4188790](v89);
  uint64_t v98 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v93 = (char *)&v82 - v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v97 = (char *)&v82 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v82 - v8;
  uint64_t v91 = sub_1DFDEC1C0();
  uint64_t v94 = *(void *)(v91 - 8);
  uint64_t v10 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v91);
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)&v82 - v12;
  uint64_t v14 = sub_1DFDEC1D0();
  uint64_t v96 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v82 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v82 - v21;
  sub_1DE94F204(a1, (uint64_t)v100);
  sub_1DEAE7550();
  type metadata accessor for OnboardingPersonalizedAdsStep();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v24 = v22;
    uint64_t v25 = v20;
    uint64_t v88 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v95 = v9;
    uint64_t v26 = v14;
    uint64_t v27 = v98;
    uint64_t v86 = v10;
    uint64_t v87 = v99;
    int v28 = *(unsigned __int8 *)(v99 + 56);
    uint64_t v29 = v96;
    uint64_t v30 = v89;
    uint64_t v31 = v90;
    CGFloat v32 = v13;
    CGRect v84 = v13;
    uint64_t v85 = v14;
    if (v28 == 2)
    {
      uint64_t v33 = *MEMORY[0x1E4F7CC78];
      unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 104);
      CGRect v83 = v25;
      v34(v25, v33, v14);
      CGRect v82 = __swift_project_boxed_opaque_existential_1((void *)(v31 + 16), *(void *)(v31 + 40));
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v25, v14);
      sub_1DFDEC1B0();
      uint64_t v35 = v31 + OBJC_IVAR____TtC7NewsUI220OnboardingInteractor_personalizedAdsExposureStart;
      swift_beginAccess();
      uint64_t v36 = v92;
      unint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
      unint64_t v38 = v95;
      v37(v95, v35, v30);
      uint64_t v39 = v97;
      sub_1DFDE75F0();
      uint64_t v90 = *(void *)(*v82 + 16);
      uint64_t v40 = v93;
      v37(v93, (uint64_t)v38, v30);
      v37(v27, (uint64_t)v39, v30);
      uint64_t v41 = v94;
      uint64_t v42 = v88;
      uint64_t v43 = v91;
      (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v88, v32, v91);
      uint64_t v44 = *(unsigned __int8 *)(v36 + 80);
      uint64_t v45 = (v44 + 16) & ~v44;
      uint64_t v46 = (v2 + v44 + v45) & ~v44;
      uint64_t v47 = *(unsigned __int8 *)(v41 + 80);
      uint64_t v48 = v2 + v47 + v46;
      uint64_t v49 = v43;
      uint64_t v50 = v48 & ~v47;
      uint64_t v51 = swift_allocObject();
      double v52 = v40;
      uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
      v53(v51 + v45, v52, v30);
      v53(v51 + v46, v98, v30);
      (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v51 + v50, v42, v49);
      sub_1DFDE87E0();
      swift_release();
      uint64_t v54 = *(void (**)(char *, uint64_t))(v36 + 8);
      v54(v97, v30);
      v54(v95, v30);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v84, v49);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v83, v85);
    }
    else
    {
      uint64_t v55 = *(void (**)(void *, uint64_t, uint64_t))(v96 + 104);
      if (v28) {
        uint64_t v56 = (unsigned int *)MEMORY[0x1E4F7CC70];
      }
      else {
        uint64_t v56 = (unsigned int *)MEMORY[0x1E4F7CC80];
      }
      uint64_t v57 = *v56;
      double v58 = v24;
      CGRect v82 = v24;
      uint64_t v59 = v26;
      v55(v24, v57, v26);
      uint64_t v60 = v31;
      double v61 = __swift_project_boxed_opaque_existential_1((void *)(v31 + 16), *(void *)(v31 + 40));
      (*(void (**)(char *, void *, uint64_t))(v29 + 16))(v25, v58, v59);
      sub_1DFDEC1B0();
      uint64_t v62 = v60 + OBJC_IVAR____TtC7NewsUI220OnboardingInteractor_personalizedAdsExposureStart;
      swift_beginAccess();
      uint64_t v63 = v92;
      uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
      uint64_t v65 = v95;
      v64(v95, v62, v30);
      uint64_t v66 = v97;
      sub_1DFDE75F0();
      uint64_t v90 = *(void *)(*v61 + 16);
      uint64_t v67 = v93;
      v64(v93, (uint64_t)v65, v30);
      v64(v98, (uint64_t)v66, v30);
      uint64_t v68 = v94;
      uint64_t v69 = v88;
      uint64_t v70 = v91;
      (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v88, v13, v91);
      uint64_t v71 = *(unsigned __int8 *)(v63 + 80);
      uint64_t v72 = (v71 + 16) & ~v71;
      uint64_t v73 = (v2 + v71 + v72) & ~v71;
      uint64_t v74 = *(unsigned __int8 *)(v68 + 80);
      uint64_t v75 = v2 + v74 + v73;
      uint64_t v76 = v70;
      uint64_t v77 = v75 & ~v74;
      uint64_t v78 = swift_allocObject();
      uint64_t v79 = v67;
      uint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v63 + 32);
      v80(v78 + v72, v79, v30);
      v80(v78 + v73, v98, v30);
      (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v78 + v77, v69, v76);
      sub_1DFDE87E0();
      swift_release();
      uint64_t v81 = *(void (**)(char *, uint64_t))(v63 + 8);
      v81(v97, v30);
      v81(v95, v30);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v84, v76);
      swift_release();
      return (*(uint64_t (**)(void *, uint64_t))(v96 + 8))(v82, v85);
    }
  }
  return result;
}

unint64_t sub_1DEB6DD5C(uint64_t a1)
{
  unint64_t result = sub_1DEB6DD84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DEB6DD84()
{
  unint64_t result = qword_1EBAC2F00;
  if (!qword_1EBAC2F00)
  {
    type metadata accessor for OnboardingInteractor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC2F00);
  }
  return result;
}

uint64_t sub_1DEB6DDE8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1DFDE7600() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = (v6 + v4 + v5) & ~v4;
  uint64_t v8 = *(void *)(sub_1DFDEC1C0() - 8);
  uint64_t v9 = v1 + ((v7 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_1DFC548B4(a1, v1 + v5, v1 + v7, v9);
}

id sub_1DEB6DED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v31 = a7;
  uint64_t v32 = a5;
  uint64_t v34 = a10;
  uint64_t v33 = sub_1DFDE6A60();
  uint64_t v13 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_allocWithZone(v10);
  uint64_t v17 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithIdentifier_title_image_, v17, v18, a9, v31);

  id v20 = v19;
  if (a8)
  {
    uint64_t v21 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = 0;
  }
  uint64_t v22 = v34;
  objc_msgSend(v19, sel_setSubtitle_, v21);

  objc_msgSend(v19, sel__setTabBarPlacement_, v22);
  if (a6)
  {
    uint64_t v35 = v32;
    uint64_t v36 = a6;
    sub_1DFDE6A40();
    sub_1DEA4DB08();
    uint64_t v23 = sub_1DFDFF6F0();
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v33);
    swift_bridgeObjectRelease();
    uint64_t v26 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0) {
      uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
    }
    if (v26)
    {
      id v27 = objc_allocWithZone(MEMORY[0x1E4FB23A8]);
      int v28 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v27, sel_initWithTitle_image_, v28, 0);

      objc_msgSend(v19, sel__setCompactRepresentation_, v29);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {
  }
  return v19;
}

unint64_t sub_1DEB6E190()
{
  uint64_t v1 = v0;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel__identifier);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v3 = objc_msgSend(v1, sel_title);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return 0xD000000000000016;
}

uint64_t type metadata accessor for FloatingTabElement()
{
  return self;
}

id sub_1DEB6E3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  v7[OBJC_IVAR____TtC7NewsUI216FloatingTabGroup_allowsReorderingWhileOnline] = a7;
  uint64_t v11 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  sub_1DEB6EDFC();
  uint64_t v13 = (void *)sub_1DFDFE200();
  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for FloatingTabGroup();
  id v14 = objc_msgSendSuper2(&v18, sel_initWithIdentifier_title_image_children_, v11, v12, a5, v13);

  id v15 = v14;
  objc_msgSend(v15, sel__setTabBarPlacement_, a6);
  id v16 = v15;
  objc_msgSend(v16, sel__setAllowsReordering_, a7 & 1);

  return v16;
}

unint64_t sub_1DEB6E4F0()
{
  uint64_t v1 = v0;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel__identifier);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v3 = objc_msgSend(v1, sel_title);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v4 = objc_msgSend(v1, sel__children);
  unint64_t v5 = sub_1DEB6EDFC();
  uint64_t v6 = sub_1DFDFE220();

  MEMORY[0x1E01ECA60](v6, v5);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return 0xD000000000000014;
}

id sub_1DEB6E6D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FloatingTabGroup();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FloatingTabGroup()
{
  return self;
}

id sub_1DEB6E728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  id v12 = objc_allocWithZone(v8);
  uint64_t v13 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v14 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a6;
  *(void *)(v15 + 24) = a7;
  v20[4] = sub_1DEB6EDF4;
  v20[5] = v15;
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 1107296256;
  v20[2] = sub_1DE9263D8;
  v20[3] = &block_descriptor_3;
  id v16 = _Block_copy(v20);
  swift_retain();
  swift_release();
  id v17 = objc_msgSend(v12, sel_initWithIdentifier_title_image_handler_, v13, v14, 0, v16);
  _Block_release(v16);

  id v18 = v17;
  objc_msgSend(v18, sel__setTabBarPlacement_, a5);

  swift_release();
  return v18;
}

void sub_1DEB6E8AC(void *a1, void (*a2)(uint64_t))
{
  type metadata accessor for FloatingTabAction();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4;
    if (*(unsigned char *)(v4 + OBJC_IVAR____TtC7NewsUI217FloatingTabAction_isEnabled) == 1)
    {
      id v6 = a1;
      a2(v5);
    }
  }
  else
  {
    a2((uint64_t)a1);
  }
}

id sub_1DEB6E970(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1DEB6E9E0()
{
  uint64_t v1 = v0;
  sub_1DFDFF9B0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel__identifier);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v3 = objc_msgSend(v1, sel_title);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  return 0xD000000000000015;
}

id sub_1DEB6EB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  ObjectType = (objc_class *)swift_getObjectType();
  v8[OBJC_IVAR____TtC7NewsUI217FloatingTabAction_isEnabled] = 1;
  uint64_t v13 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v14 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  aBlock[4] = a6;
  aBlock[5] = a7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9263D8;
  aBlock[3] = &block_descriptor_10_0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v18.receiver = v8;
  v18.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v18, sel_initWithIdentifier_title_image_handler_, v13, v14, a5, v15);

  swift_release();
  _Block_release(v15);

  return v16;
}

uint64_t type metadata accessor for FloatingTabAction()
{
  return self;
}

uint64_t sub_1DEB6EDBC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DEB6EDF4(void *a1)
{
  sub_1DEB6E8AC(a1, *(void (**)(uint64_t))(v1 + 16));
}

unint64_t sub_1DEB6EDFC()
{
  unint64_t result = qword_1EBAF59C0;
  if (!qword_1EBAF59C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAF59C0);
  }
  return result;
}

uint64_t sub_1DEB6EE3C()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DEB6EE74()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1DEB6EE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v4 = v3;
  uint64_t v30 = a2;
  uint64_t v31 = a1;
  uint64_t v32 = a3;
  uint64_t v5 = sub_1DFDF5830();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEB6F590(0, (unint64_t *)&qword_1EBACB8F8, MEMORY[0x1E4FABE20]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v29 = sub_1DFDF2780();
  uint64_t v11 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDFC5A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MagazineSectionBarLayoutOptions();
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB6F5E4(v30, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = v29;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v20, v29);
    sub_1DFDF9F60();
    sub_1DEB6F284((uint64_t)v10);
    sub_1DFDFE900();
    *uint64_t v7 = v22;
    v7[1] = v23;
    v7[2] = v24;
    v7[3] = v25;
    (*(void (**)(void *, void, uint64_t))(v27 + 104))(v7, *MEMORY[0x1E4FAD7F8], v28);
    sub_1DFDF0C20();
    swift_allocObject();
    sub_1DFDF0C00();
    __swift_project_boxed_opaque_existential_1(v4 + 7, v4[10]);
    sub_1DFDF49C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
    __swift_project_boxed_opaque_existential_1(v4 + 2, v4[5]);
    sub_1DFDFD870();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  type metadata accessor for MagazineSectionBarLayoutAttributes();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DEB6F284@<X0>(uint64_t a1@<X8>)
{
  sub_1DFDF9F70();
  if (v15)
  {
    sub_1DE942EC4(&v14, (uint64_t)v16);
    sub_1DFDF9F80();
    if (v13)
    {
      sub_1DE942EC4(&v12, (uint64_t)&v14);
      sub_1DFDF9F90();
      if (v11)
      {
        sub_1DE942EC4(&v10, (uint64_t)&v12);
        sub_1DE94F204((uint64_t)v16, (uint64_t)&v10);
        sub_1DE94F204((uint64_t)&v14, (uint64_t)v9);
        sub_1DE94F204((uint64_t)&v12, (uint64_t)&v8);
        sub_1DFDF24D0();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        uint64_t v2 = *MEMORY[0x1E4FABE10];
        uint64_t v3 = sub_1DFDF0BF0();
        uint64_t v4 = *(void *)(v3 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(a1, v2, v3);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      uint64_t v6 = &v10;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      uint64_t v6 = &v12;
    }
  }
  else
  {
    uint64_t v6 = &v14;
  }
  sub_1DEB6F4C0((uint64_t)v6);
  uint64_t v7 = sub_1DFDF0BF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 1, v7);
}

uint64_t sub_1DEB6F45C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MagazineSectionBarLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_1DEB6F4C0(uint64_t a1)
{
  sub_1DEB6F590(0, (unint64_t *)&qword_1EBAA7CC8, (void (*)(uint64_t))sub_1DEB6F538);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DEB6F538()
{
  unint64_t result = qword_1EBAA7CC0;
  if (!qword_1EBAA7CC0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAA7CC0);
  }
  return result;
}

void sub_1DEB6F590(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DEB6F5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagazineSectionBarLayoutOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEB6F648()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAB410]);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v8[1] = 0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA7000);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC20D90 = result;
  return result;
}

uint64_t static Settings.Notifications.lastTargetDeliveryTime.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CAF0);
}

uint64_t static Settings.Notifications.lastDeclinedNotificationAlertDate.getter()
{
  return sub_1DEB702E0(&qword_1EBABE3B8);
}

uint64_t static Settings.Notifications.initialNotificationPromptShown.getter()
{
  return sub_1DEB702E0(&qword_1EBABE3B0);
}

uint64_t static Settings.Notifications.notificationAlertFrequency.getter()
{
  return sub_1DEB702E0(&qword_1EBABE3A8);
}

uint64_t sub_1DEB6F89C(uint64_t a1)
{
  return sub_1DE9437A0(a1, 0xD000000000000025, 0x80000001DFEBE8F0, &qword_1EBAC0CF0);
}

uint64_t static Settings.Notifications.lastKnownDigestModeSetting.getter()
{
  return sub_1DEB702E0(&qword_1EBAC0370);
}

uint64_t static Settings.Notifications.lastTCCPresentedDate.getter()
{
  return sub_1DEB702E0(&qword_1EBAD1DD8);
}

uint64_t sub_1DEB6F908(uint64_t a1)
{
  return sub_1DE93DA94(a1, 0xD00000000000002ELL, 0x80000001DFEBE890, &qword_1EBAF5DF0);
}

uint64_t static Settings.Notifications.userCancelledAuthorizationRequest.getter()
{
  return sub_1DEB702E0(&qword_1EBAF5E00);
}

uint64_t sub_1DEB6F950()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DFDFDD20();
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[15] = 0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF8);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC20D98 = result;
  return result;
}

uint64_t static Settings.Notifications.simulatePoolWithESL.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CAF8);
}

uint64_t sub_1DEB6FB68()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DE9834AC(0, (unint64_t *)&unk_1EBAA7008);
  sub_1DFDFDD20();
  v10[1] = 0;
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  sub_1DEB7033C();
  sub_1DEB70394();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0FB10;
  v10[0] = 0;
  sub_1DFDE8020();
  v10[0] = 300;
  sub_1DFDE8020();
  v10[0] = 3600;
  sub_1DFDE8020();
  v10[0] = 0x7FFFFFFFLL;
  sub_1DFDE8020();
  uint64_t result = sub_1DFDE8080();
  qword_1EAC20DA0 = result;
  return result;
}

uint64_t static Settings.Notifications.poolAutoRefreshInterval.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CB00);
}

uint64_t sub_1DEB6FED4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DE9834AC(0, (unint64_t *)&unk_1EBAA7008);
  v11[1] = v8;
  sub_1DFDFDD20();
  uint64_t v13 = 0;
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  sub_1DEB7033C();
  sub_1DEB70394();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0FB20;
  uint64_t v12 = 0;
  sub_1DFDE8020();
  uint64_t v12 = 60;
  sub_1DFDE8020();
  uint64_t v12 = 300;
  sub_1DFDE8020();
  uint64_t v12 = 1800;
  sub_1DFDE8020();
  uint64_t v12 = 3600;
  sub_1DFDE8020();
  uint64_t v12 = 21600;
  sub_1DFDE8020();
  uint64_t v12 = 0x7FFFFFFFLL;
  sub_1DFDE8020();
  uint64_t result = sub_1DFDE8080();
  qword_1EAC20DA8 = result;
  return result;
}

uint64_t static Settings.Notifications.delayedNotificationFrequency.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CB08);
}

uint64_t sub_1DEB702E0(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.Notifications()
{
  return &type metadata for Settings.Notifications;
}

void sub_1DEB7033C()
{
  if (!qword_1EAC20DB0)
  {
    sub_1DEB70394();
    unint64_t v0 = sub_1DFDFFEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20DB0);
    }
  }
}

void sub_1DEB70394()
{
  if (!qword_1EAC20DB8)
  {
    unint64_t v0 = sub_1DFDE8030();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20DB8);
    }
  }
}

uint64_t sub_1DEB703EC@<X0>(uint64_t a1@<X1>, void (*a2)(char *, char *, uint64_t)@<X2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  v359 = a3;
  v375 = a2;
  uint64_t v376 = a4;
  uint64_t v373 = a1;
  uint64_t v347 = _s14PuzzleFeedDataVMa(0);
  MEMORY[0x1F4188790](v347);
  uint64_t v372 = (uint64_t)&v326 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = _s10PuzzleDataVMa(0);
  MEMORY[0x1F4188790](v346);
  uint64_t v357 = (uint64_t)&v326 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v365 = _s8ResolvedVMa();
  MEMORY[0x1F4188790](v365);
  uint64_t v360 = (uint64_t)&v326 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s7URLDataVMa();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  v358 = (char *)&v326 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v370 = (char *)&v326 - v10;
  uint64_t v11 = sub_1DFDE7220();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v366 = v11;
  uint64_t v367 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v331 = (char *)&v326 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v340 = (char *)&v326 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  id v330 = (char *)&v326 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  id v339 = (char *)&v326 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v329 = (char *)&v326 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  id v338 = (char *)&v326 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v350 = (char *)&v326 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v328 = (char *)&v326 - v28;
  MEMORY[0x1F4188790](v27);
  id v337 = (char *)&v326 - v29;
  uint64_t v345 = _s9IssueDataVMa(0);
  MEMORY[0x1F4188790](v345);
  uint64_t v356 = (uint64_t)&v326 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v344 = _s7TagDataVMa(0);
  uint64_t v31 = MEMORY[0x1F4188790](v344);
  uint64_t v355 = (uint64_t)&v326 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  v354 = (uint64_t *)((char *)&v326 - v33);
  sub_1DEB74A7C(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  uint64_t v35 = MEMORY[0x1F4188790](v34 - 8);
  id v335 = (char *)&v326 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  v369 = (char *)&v326 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  id v334 = (char *)&v326 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v343 = (uint64_t)&v326 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  id v333 = (char *)&v326 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v342 = (uint64_t)&v326 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  id v332 = (char *)&v326 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  uint64_t v341 = (uint64_t)&v326 - v50;
  MEMORY[0x1F4188790](v49);
  uint64_t v348 = (uint64_t)&v326 - v51;
  uint64_t v364 = _s13ResolvedModelOMa();
  MEMORY[0x1F4188790](v364);
  uint64_t v349 = (uint64_t *)((char *)&v326 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = type metadata accessor for CuratedShortcut.Identifier(0);
  MEMORY[0x1F4188790](v53 - 8);
  v363 = (char *)&v326 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB74A7C(0, (unint64_t *)&qword_1EBACA3B0, MEMORY[0x1E4F804E0]);
  MEMORY[0x1F4188790](v55 - 8);
  id v336 = (char *)&v326 - v56;
  uint64_t v57 = _s12HeadlineDataVMa(0);
  MEMORY[0x1F4188790](v57 - 8);
  uint64_t v353 = (uint64_t)&v326 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v368 = _s5ModelOMa();
  MEMORY[0x1F4188790](v368);
  uint64_t v60 = (char *)&v326 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB74A7C(0, &qword_1EAC23130, (void (*)(uint64_t))type metadata accessor for ShortcutCategory);
  MEMORY[0x1F4188790](v61 - 8);
  uint64_t v63 = (char *)&v326 - v62;
  uint64_t v64 = type metadata accessor for ShortcutCategory();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  uint64_t v361 = (uint64_t)&v326 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  uint64_t v352 = (uint64_t)&v326 - v69;
  MEMORY[0x1F4188790](v68);
  uint64_t v374 = (uint64_t)&v326 - v70;
  sub_1DEB74A7C(0, (unint64_t *)&unk_1EAC230F0, (void (*)(uint64_t))type metadata accessor for CuratedShortcut);
  MEMORY[0x1F4188790](v71 - 8);
  uint64_t v73 = (char *)&v326 - v72;
  uint64_t v74 = type metadata accessor for CuratedShortcut(0);
  uint64_t v75 = *(void *)(v74 - 8);
  uint64_t v76 = MEMORY[0x1F4188790](v74);
  uint64_t v362 = (uint64_t)&v326 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = MEMORY[0x1F4188790](v76);
  uint64_t v351 = (uint64_t)&v326 - v79;
  MEMORY[0x1F4188790](v78);
  uint64_t v81 = (uint64_t *)((char *)&v326 - v80);
  swift_bridgeObjectRetain();
  sub_1DFB14F00((uint64_t)v73);
  CGRect v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
  uint64_t v371 = v74;
  if (v82(v73, 1, v74) == 1)
  {
    sub_1DEA93EF4((uint64_t)v73, (unint64_t *)&unk_1EAC230F0, (void (*)(uint64_t))type metadata accessor for CuratedShortcut);
    if (qword_1EBAD0640 != -1) {
      swift_once();
    }
    uint64_t v83 = sub_1DFDF01D0();
    __swift_project_value_buffer(v83, (uint64_t)qword_1EBB62A40);
    CGRect v84 = sub_1DFDF01B0();
    os_log_type_t v85 = sub_1DFDFEA30();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v86 = 0;
      _os_log_impl(&dword_1DE913000, v84, v85, "Unable to convert cached string data to curation shortcut", v86, 2u);
      MEMORY[0x1E01EFA10](v86, -1, -1);
    }

LABEL_19:
    uint64_t v99 = type metadata accessor for Shortcut();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v376, 1, 1, v99);
  }
  sub_1DEB74A14((uint64_t)v73, (uint64_t)v81, type metadata accessor for CuratedShortcut);
  uint64_t v87 = v375;
  uint64_t v88 = (uint64_t)v81;
  if (!*((void *)v375 + 2))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v63, 1, 1, v64);
    goto LABEL_13;
  }
  uint64_t v89 = *v81;
  uint64_t v90 = v81[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v91 = sub_1DEA6D930(v89, v90);
  if (v92)
  {
    sub_1DEB74964(*((void *)v87 + 7) + *(void *)(v65 + 72) * v91, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
    uint64_t v93 = 0;
  }
  else
  {
    uint64_t v93 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v63, v93, 1, v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64) == 1)
  {
LABEL_13:
    sub_1DEA93EF4((uint64_t)v63, &qword_1EAC23130, (void (*)(uint64_t))type metadata accessor for ShortcutCategory);
    if (qword_1EBAD0640 != -1) {
      swift_once();
    }
    uint64_t v94 = sub_1DFDF01D0();
    __swift_project_value_buffer(v94, (uint64_t)qword_1EBB62A40);
    uint64_t v95 = sub_1DFDF01B0();
    os_log_type_t v96 = sub_1DFDFEA30();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v97 = 0;
      _os_log_impl(&dword_1DE913000, v95, v96, "Unable to determine category for shortcut from cached config resource", v97, 2u);
      uint64_t v98 = v97;
      uint64_t v88 = (uint64_t)v81;
      MEMORY[0x1E01EFA10](v98, -1, -1);
    }

LABEL_18:
    sub_1DEB74904(v88, type metadata accessor for CuratedShortcut);
    goto LABEL_19;
  }
  uint64_t v101 = v374;
  sub_1DEB74A14((uint64_t)v63, v374, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
  sub_1DEB74964(v88 + *(int *)(v371 + 20), (uint64_t)v60, (uint64_t (*)(void))_s5ModelOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v103 = v372;
  uint64_t v104 = (uint64_t)v369;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v114 = v88;
      v115 = v354;
      sub_1DEB74A14((uint64_t)v60, (uint64_t)v354, _s7TagDataVMa);
      uint64_t v116 = v359[17];
      sub_1DEAB957C();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
      uint64_t v118 = v115[1];
      *(void *)(inited + 32) = *v115;
      *(void *)(inited + 40) = v118;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v119 = sub_1DFB86ABC(inited, v116);
      swift_unknownObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      if (v119 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v325 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        if (v325) {
          goto LABEL_26;
        }
      }
      else if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_26:
        if ((v119 & 0xC000000000000001) != 0)
        {
          uint64_t v120 = MEMORY[0x1E01EE240](0, v119);
        }
        else
        {
          if (!*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x1DEB73218);
          }
          uint64_t v120 = *(void *)(v119 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        uint64_t v327 = v114;
        uint64_t v121 = v362;
        sub_1DEB74964(v114, v362, type metadata accessor for CuratedShortcut);
        uint64_t v122 = v361;
        sub_1DEB74964(v101, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        uint64_t v123 = v376;
        sub_1DEB74964(v122, v376, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        uint64_t v124 = v363;
        sub_1DFB15204(v363);
        uint64_t v125 = sub_1DFB15EC8();
        uint64_t v127 = v126;
        sub_1DEB74904((uint64_t)v124, type metadata accessor for CuratedShortcut.Identifier);
        uint64_t v128 = v365;
        uint64_t v129 = (uint64_t *)(v123 + *(int *)(v365 + 24));
        *uint64_t v129 = v125;
        v129[1] = v127;
        uint64_t v130 = v348;
        sub_1DFB07BA8(v348);
        sub_1DEB74904(v122, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        sub_1DEB74904(v121, type metadata accessor for CuratedShortcut);
        uint64_t v131 = (uint64_t)v349;
        *uint64_t v349 = v120;
        uint64_t v132 = _s3TagVMa(0);
        sub_1DEAEAEA0(v130, v131 + *(int *)(v132 + 20));
        swift_storeEnumTagMultiPayload();
        sub_1DEB74A14(v131, v123 + *(int *)(v128 + 20), (uint64_t (*)(void))_s13ResolvedModelOMa);
        sub_1DEB74904((uint64_t)v354, _s7TagDataVMa);
        sub_1DEB74904(v374, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        sub_1DEB74904(v327, type metadata accessor for CuratedShortcut);
        uint64_t v133 = type metadata accessor for Shortcut();
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v123, 0, 1, v133);
      }
      uint64_t v88 = v114;
      swift_bridgeObjectRelease();
      sub_1DEB74904((uint64_t)v354, _s7TagDataVMa);
      sub_1DEB74904(v101, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      goto LABEL_18;
    case 2:
      uint64_t v134 = v356;
      sub_1DEB74A14((uint64_t)v60, v356, _s9IssueDataVMa);
      uint64_t v135 = v341;
      sub_1DEAEAE20(v134 + *(int *)(v345 + 20), v341);
      uint64_t v137 = v366;
      uint64_t v136 = v367;
      uint64_t v138 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v367 + 48);
      if (v138(v135, 1, v366) != 1)
      {
        uint64_t v258 = v136;
        v375 = *(void (**)(char *, char *, uint64_t))(v136 + 32);
        uint64_t v259 = v337;
        v375(v337, (char *)v135, v137);
        uint64_t v260 = v362;
        sub_1DEB74964(v88, v362, type metadata accessor for CuratedShortcut);
        uint64_t v261 = v361;
        sub_1DEB74964(v374, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v370, v259, v137);
        uint64_t v262 = v360;
        sub_1DEB74964(v261, v360, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        id v263 = v363;
        sub_1DFB15204(v363);
        uint64_t v264 = sub_1DFB15EC8();
        uint64_t v327 = v88;
        uint64_t v265 = v264;
        uint64_t v267 = v266;
        sub_1DEB74904(v261, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        sub_1DEB74904(v260, type metadata accessor for CuratedShortcut);
        sub_1DEB74904((uint64_t)v263, type metadata accessor for CuratedShortcut.Identifier);
        uint64_t v268 = v365;
        id v269 = (uint64_t *)(v262 + *(int *)(v365 + 24));
        *id v269 = v265;
        v269[1] = v267;
        v375((char *)(v262 + *(int *)(v268 + 20)), v370, v137);
        swift_storeEnumTagMultiPayload();
        uint64_t v162 = v376;
        sub_1DEB74A14(v262, v376, (uint64_t (*)(void))_s8ResolvedVMa);
        (*(void (**)(char *, uint64_t))(v367 + 8))(v337, v137);
        uint64_t v163 = _s9IssueDataVMa;
        uint64_t v270 = &v378;
        goto LABEL_53;
      }
      uint64_t v139 = v88;
      sub_1DEA93EF4(v135, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      uint64_t v140 = self;
      swift_bridgeObjectRetain();
      v141 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      id v142 = objc_msgSend(v140, sel_fc_NewsURLForTagID_, v141);

      if (v142)
      {
        uint64_t v143 = v350;
        sub_1DFDE7190();

        uint64_t v144 = *(void (**)(char *, char *, uint64_t))(v136 + 32);
        uint64_t v145 = (uint64_t)v332;
        uint64_t v146 = v366;
        v144(v332, v143, v366);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v136 + 56))(v145, 0, 1, v146);
        unsigned int v147 = v138(v145, 1, v146);
        uint64_t v148 = v139;
        uint64_t v149 = v374;
        if (v147 != 1)
        {
          uint64_t v150 = v328;
          v144(v328, (char *)v145, v146);
          uint64_t v151 = v362;
          sub_1DEB74964(v148, v362, type metadata accessor for CuratedShortcut);
          v375 = v144;
          uint64_t v152 = v361;
          sub_1DEB74964(v149, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v370, v150, v146);
          uint64_t v153 = v360;
          sub_1DEB74964(v152, v360, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          int v154 = v363;
          sub_1DFB15204(v363);
          uint64_t v155 = sub_1DFB15EC8();
          uint64_t v327 = v148;
          uint64_t v156 = v146;
          uint64_t v157 = v155;
          uint64_t v159 = v158;
          sub_1DEB74904(v152, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          sub_1DEB74904(v151, type metadata accessor for CuratedShortcut);
          sub_1DEB74904((uint64_t)v154, type metadata accessor for CuratedShortcut.Identifier);
          uint64_t v160 = v365;
          uint64_t v161 = (uint64_t *)(v153 + *(int *)(v365 + 24));
          *uint64_t v161 = v157;
          v161[1] = v159;
          v375((char *)(v153 + *(int *)(v160 + 20)), v370, v156);
          swift_storeEnumTagMultiPayload();
          uint64_t v162 = v376;
          sub_1DEB74A14(v153, v376, (uint64_t (*)(void))_s8ResolvedVMa);
          (*(void (**)(char *, uint64_t))(v136 + 8))(v328, v156);
          uint64_t v163 = _s9IssueDataVMa;
          uint64_t v164 = &v378;
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v145 = (uint64_t)v332;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(v332, 1, 1, v366);
        uint64_t v148 = v139;
        uint64_t v149 = v374;
      }
      uint64_t v322 = _s9IssueDataVMa;
      v323 = &v378;
      goto LABEL_67;
    case 3:
      uint64_t v165 = v355;
      sub_1DEB74A14((uint64_t)v60, v355, _s7TagDataVMa);
      uint64_t v166 = v342;
      sub_1DEAEAE20(v165 + *(int *)(v344 + 20), v342);
      uint64_t v168 = v366;
      uint64_t v167 = v367;
      uint64_t v169 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v367 + 48);
      if (v169(v166, 1, v366) != 1)
      {
        uint64_t v271 = v167;
        v375 = *(void (**)(char *, char *, uint64_t))(v167 + 32);
        v272 = v338;
        v375(v338, (char *)v166, v168);
        uint64_t v273 = v362;
        sub_1DEB74964(v88, v362, type metadata accessor for CuratedShortcut);
        uint64_t v274 = v361;
        sub_1DEB74964(v374, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        (*(void (**)(char *, char *, uint64_t))(v271 + 16))(v370, v272, v168);
        uint64_t v275 = v360;
        sub_1DEB74964(v274, v360, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        v276 = v363;
        sub_1DFB15204(v363);
        uint64_t v277 = sub_1DFB15EC8();
        uint64_t v327 = v88;
        uint64_t v278 = v277;
        uint64_t v280 = v279;
        sub_1DEB74904(v274, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        sub_1DEB74904(v273, type metadata accessor for CuratedShortcut);
        sub_1DEB74904((uint64_t)v276, type metadata accessor for CuratedShortcut.Identifier);
        uint64_t v281 = v365;
        v282 = (uint64_t *)(v275 + *(int *)(v365 + 24));
        uint64_t *v282 = v278;
        v282[1] = v280;
        v375((char *)(v275 + *(int *)(v281 + 20)), v370, v168);
        swift_storeEnumTagMultiPayload();
        uint64_t v162 = v376;
        sub_1DEB74A14(v275, v376, (uint64_t (*)(void))_s8ResolvedVMa);
        (*(void (**)(char *, uint64_t))(v367 + 8))(v338, v168);
        uint64_t v163 = _s7TagDataVMa;
        uint64_t v270 = &v377;
        goto LABEL_53;
      }
      uint64_t v170 = v88;
      sub_1DEA93EF4(v166, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      uint64_t v171 = self;
      swift_bridgeObjectRetain();
      uint64_t v172 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      id v173 = objc_msgSend(v171, sel_fc_NewsURLForTagID_, v172);

      if (v173)
      {
        uint64_t v174 = v350;
        sub_1DFDE7190();

        uint64_t v175 = *(void (**)(char *, char *, uint64_t))(v167 + 32);
        uint64_t v145 = (uint64_t)v333;
        uint64_t v176 = v366;
        v175(v333, v174, v366);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v167 + 56))(v145, 0, 1, v176);
        unsigned int v177 = v169(v145, 1, v176);
        uint64_t v148 = v170;
        uint64_t v149 = v374;
        if (v177 != 1)
        {
          uint64_t v178 = v329;
          v175(v329, (char *)v145, v176);
          uint64_t v179 = v362;
          sub_1DEB74964(v148, v362, type metadata accessor for CuratedShortcut);
          v375 = v175;
          uint64_t v180 = v361;
          sub_1DEB74964(v149, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v370, v178, v176);
          uint64_t v181 = v360;
          sub_1DEB74964(v180, v360, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          uint64_t v182 = v363;
          sub_1DFB15204(v363);
          uint64_t v183 = sub_1DFB15EC8();
          uint64_t v327 = v148;
          uint64_t v184 = v176;
          uint64_t v185 = v183;
          uint64_t v187 = v186;
          sub_1DEB74904(v180, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          sub_1DEB74904(v179, type metadata accessor for CuratedShortcut);
          sub_1DEB74904((uint64_t)v182, type metadata accessor for CuratedShortcut.Identifier);
          uint64_t v188 = v365;
          id v189 = (uint64_t *)(v181 + *(int *)(v365 + 24));
          *id v189 = v185;
          v189[1] = v187;
          v375((char *)(v181 + *(int *)(v188 + 20)), v370, v184);
          swift_storeEnumTagMultiPayload();
          uint64_t v162 = v376;
          sub_1DEB74A14(v181, v376, (uint64_t (*)(void))_s8ResolvedVMa);
          (*(void (**)(char *, uint64_t))(v167 + 8))(v329, v184);
          uint64_t v163 = _s7TagDataVMa;
          uint64_t v164 = &v377;
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v145 = (uint64_t)v333;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v167 + 56))(v333, 1, 1, v366);
        uint64_t v148 = v170;
        uint64_t v149 = v374;
      }
      uint64_t v322 = _s7TagDataVMa;
      v323 = &v377;
      goto LABEL_67;
    case 4:
      sub_1DEB74A14((uint64_t)v60, v372, _s14PuzzleFeedDataVMa);
      sub_1DEAEAE20(v103 + *(int *)(v347 + 20), v104);
      uint64_t v191 = v366;
      uint64_t v190 = v367;
      uint64_t v192 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v367 + 48);
      if (v192(v104, 1, v366) != 1)
      {
        uint64_t v283 = v190;
        v375 = *(void (**)(char *, char *, uint64_t))(v190 + 32);
        uint64_t v284 = v340;
        v375(v340, (char *)v104, v191);
        uint64_t v285 = v362;
        sub_1DEB74964(v88, v362, type metadata accessor for CuratedShortcut);
        uint64_t v286 = v361;
        sub_1DEB74964(v374, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v370, v284, v191);
        uint64_t v287 = v360;
        sub_1DEB74964(v286, v360, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        v288 = v363;
        sub_1DFB15204(v363);
        uint64_t v289 = sub_1DFB15EC8();
        uint64_t v327 = v88;
        uint64_t v290 = v289;
        uint64_t v292 = v291;
        sub_1DEB74904(v286, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        sub_1DEB74904(v285, type metadata accessor for CuratedShortcut);
        sub_1DEB74904((uint64_t)v288, type metadata accessor for CuratedShortcut.Identifier);
        uint64_t v293 = v365;
        id v294 = (uint64_t *)(v287 + *(int *)(v365 + 24));
        *id v294 = v290;
        v294[1] = v292;
        v375((char *)(v287 + *(int *)(v293 + 20)), v370, v191);
        swift_storeEnumTagMultiPayload();
        uint64_t v162 = v376;
        sub_1DEB74A14(v287, v376, (uint64_t (*)(void))_s8ResolvedVMa);
        (*(void (**)(char *, uint64_t))(v367 + 8))(v340, v191);
        uint64_t v163 = _s14PuzzleFeedDataVMa;
        uint64_t v213 = v372;
        goto LABEL_47;
      }
      uint64_t v193 = v88;
      sub_1DEA93EF4(v104, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      id v194 = self;
      swift_bridgeObjectRetain();
      uint64_t v195 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      id v196 = objc_msgSend(v194, sel_fc_NewsURLForTagID_, v195);

      if (v196)
      {
        uint64_t v197 = v350;
        sub_1DFDE7190();

        uint64_t v198 = *(void (**)(char *, char *, uint64_t))(v190 + 32);
        uint64_t v145 = (uint64_t)v335;
        uint64_t v199 = v366;
        v198(v335, v197, v366);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v190 + 56))(v145, 0, 1, v199);
        unsigned int v200 = v192(v145, 1, v199);
        uint64_t v148 = v193;
        uint64_t v149 = v374;
        if (v200 != 1)
        {
          v201 = v331;
          v198(v331, (char *)v145, v199);
          uint64_t v202 = v362;
          sub_1DEB74964(v148, v362, type metadata accessor for CuratedShortcut);
          v375 = v198;
          uint64_t v203 = v361;
          sub_1DEB74964(v149, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v370, v201, v199);
          uint64_t v204 = v360;
          sub_1DEB74964(v203, v360, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          uint64_t v205 = v363;
          sub_1DFB15204(v363);
          uint64_t v206 = sub_1DFB15EC8();
          uint64_t v327 = v148;
          uint64_t v207 = v199;
          uint64_t v208 = v206;
          uint64_t v210 = v209;
          sub_1DEB74904(v203, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          sub_1DEB74904(v202, type metadata accessor for CuratedShortcut);
          sub_1DEB74904((uint64_t)v205, type metadata accessor for CuratedShortcut.Identifier);
          uint64_t v211 = v365;
          v212 = (uint64_t *)(v204 + *(int *)(v365 + 24));
          uint64_t *v212 = v208;
          v212[1] = v210;
          v375((char *)(v204 + *(int *)(v211 + 20)), v370, v207);
          swift_storeEnumTagMultiPayload();
          uint64_t v162 = v376;
          sub_1DEB74A14(v204, v376, (uint64_t (*)(void))_s8ResolvedVMa);
          (*(void (**)(char *, uint64_t))(v190 + 8))(v331, v207);
          uint64_t v163 = _s14PuzzleFeedDataVMa;
          uint64_t v213 = v372;
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v145 = (uint64_t)v335;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 56))(v335, 1, 1, v366);
        uint64_t v148 = v193;
        uint64_t v149 = v374;
      }
      uint64_t v322 = _s14PuzzleFeedDataVMa;
      uint64_t v324 = v372;
      goto LABEL_68;
    case 5:
      uint64_t v214 = v357;
      sub_1DEB74A14((uint64_t)v60, v357, _s10PuzzleDataVMa);
      uint64_t v215 = v343;
      sub_1DEAEAE20(v214 + *(int *)(v346 + 20), v343);
      uint64_t v217 = v366;
      uint64_t v216 = v367;
      uint64_t v218 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v367 + 48);
      if (v218(v215, 1, v366) != 1)
      {
        uint64_t v295 = v216;
        v375 = *(void (**)(char *, char *, uint64_t))(v216 + 32);
        uint64_t v296 = v339;
        v375(v339, (char *)v215, v217);
        uint64_t v297 = v362;
        sub_1DEB74964(v88, v362, type metadata accessor for CuratedShortcut);
        uint64_t v298 = v361;
        sub_1DEB74964(v374, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v370, v296, v217);
        uint64_t v299 = v360;
        sub_1DEB74964(v298, v360, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        v300 = v363;
        sub_1DFB15204(v363);
        uint64_t v301 = sub_1DFB15EC8();
        uint64_t v327 = v88;
        uint64_t v302 = v301;
        uint64_t v304 = v303;
        sub_1DEB74904(v298, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        sub_1DEB74904(v297, type metadata accessor for CuratedShortcut);
        sub_1DEB74904((uint64_t)v300, type metadata accessor for CuratedShortcut.Identifier);
        uint64_t v305 = v365;
        uint64_t v306 = (uint64_t *)(v299 + *(int *)(v365 + 24));
        *uint64_t v306 = v302;
        v306[1] = v304;
        v375((char *)(v299 + *(int *)(v305 + 20)), v370, v217);
        swift_storeEnumTagMultiPayload();
        uint64_t v162 = v376;
        sub_1DEB74A14(v299, v376, (uint64_t (*)(void))_s8ResolvedVMa);
        (*(void (**)(char *, uint64_t))(v367 + 8))(v339, v217);
        uint64_t v163 = _s10PuzzleDataVMa;
        uint64_t v270 = &v379;
LABEL_53:
        uint64_t v213 = *(v270 - 32);
        goto LABEL_47;
      }
      uint64_t v219 = v88;
      sub_1DEA93EF4(v215, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      uint64_t v220 = self;
      swift_bridgeObjectRetain();
      id v221 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      id v222 = objc_msgSend(v220, sel_fc_NewsURLForTagID_, v221);

      if (v222)
      {
        id v223 = v350;
        sub_1DFDE7190();

        id v224 = *(void (**)(char *, char *, uint64_t))(v216 + 32);
        uint64_t v145 = (uint64_t)v334;
        uint64_t v225 = v366;
        v224(v334, v223, v366);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v216 + 56))(v145, 0, 1, v225);
        unsigned int v226 = v218(v145, 1, v225);
        uint64_t v148 = v219;
        uint64_t v149 = v374;
        if (v226 != 1)
        {
          v227 = v330;
          v224(v330, (char *)v145, v225);
          uint64_t v228 = v362;
          sub_1DEB74964(v148, v362, type metadata accessor for CuratedShortcut);
          v375 = v224;
          uint64_t v229 = v361;
          sub_1DEB74964(v149, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          (*(void (**)(char *, char *, uint64_t))(v216 + 16))(v370, v227, v225);
          uint64_t v230 = v360;
          sub_1DEB74964(v229, v360, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          v231 = v363;
          sub_1DFB15204(v363);
          uint64_t v232 = sub_1DFB15EC8();
          uint64_t v327 = v148;
          uint64_t v233 = v225;
          uint64_t v234 = v232;
          uint64_t v236 = v235;
          sub_1DEB74904(v229, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          sub_1DEB74904(v228, type metadata accessor for CuratedShortcut);
          sub_1DEB74904((uint64_t)v231, type metadata accessor for CuratedShortcut.Identifier);
          uint64_t v237 = v365;
          uint64_t v238 = (uint64_t *)(v230 + *(int *)(v365 + 24));
          *uint64_t v238 = v234;
          v238[1] = v236;
          v375((char *)(v230 + *(int *)(v237 + 20)), v370, v233);
          swift_storeEnumTagMultiPayload();
          uint64_t v162 = v376;
          sub_1DEB74A14(v230, v376, (uint64_t (*)(void))_s8ResolvedVMa);
          (*(void (**)(char *, uint64_t))(v216 + 8))(v330, v233);
          uint64_t v163 = _s10PuzzleDataVMa;
          uint64_t v164 = &v379;
LABEL_46:
          uint64_t v213 = *(v164 - 32);
LABEL_47:
          sub_1DEB74904(v213, v163);
          sub_1DEB74904(v374, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
          uint64_t v239 = v327;
          uint64_t v240 = type metadata accessor for CuratedShortcut;
          goto LABEL_57;
        }
      }
      else
      {
        uint64_t v145 = (uint64_t)v334;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v216 + 56))(v334, 1, 1, v366);
        uint64_t v148 = v219;
        uint64_t v149 = v374;
      }
      uint64_t v322 = _s10PuzzleDataVMa;
      v323 = &v379;
LABEL_67:
      uint64_t v324 = *(v323 - 32);
LABEL_68:
      sub_1DEB74904(v324, v322);
      sub_1DEB74904(v149, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      sub_1DEB74904(v148, type metadata accessor for CuratedShortcut);
      sub_1DEA93EF4(v145, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
LABEL_69:
      uint64_t v321 = type metadata accessor for Shortcut();
      v256 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v321 - 8) + 56);
      uint64_t v257 = v376;
      uint64_t v320 = 1;
      return v256(v257, v320, 1, v321);
    case 6:
      uint64_t v241 = (uint64_t)v370;
      sub_1DEB74A14((uint64_t)v60, (uint64_t)v370, (uint64_t (*)(void))_s7URLDataVMa);
      uint64_t v242 = v362;
      sub_1DEB74964(v88, v362, type metadata accessor for CuratedShortcut);
      uint64_t v243 = v101;
      uint64_t v244 = v361;
      sub_1DEB74964(v243, v361, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      uint64_t v246 = v366;
      uint64_t v245 = v367;
      (*(void (**)(char *, uint64_t, uint64_t))(v367 + 16))(v358, v241, v366);
      uint64_t v247 = v360;
      sub_1DEB74964(v244, v360, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      v248 = v363;
      sub_1DFB15204(v363);
      uint64_t v249 = sub_1DFB15EC8();
      uint64_t v251 = v250;
      uint64_t v327 = v88;
      sub_1DEB74904(v244, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      sub_1DEB74904(v242, type metadata accessor for CuratedShortcut);
      sub_1DEB74904((uint64_t)v248, type metadata accessor for CuratedShortcut.Identifier);
      uint64_t v252 = v365;
      v253 = (uint64_t *)(v247 + *(int *)(v365 + 24));
      uint64_t *v253 = v249;
      v253[1] = v251;
      (*(void (**)(uint64_t, char *, uint64_t))(v245 + 32))(v247 + *(int *)(v252 + 20), v358, v246);
      swift_storeEnumTagMultiPayload();
      uint64_t v254 = v376;
      sub_1DEB74A14(v247, v376, (uint64_t (*)(void))_s8ResolvedVMa);
      sub_1DEB74904((uint64_t)v370, (uint64_t (*)(void))_s7URLDataVMa);
      sub_1DEB74904(v374, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      sub_1DEB74904(v327, type metadata accessor for CuratedShortcut);
      uint64_t v255 = type metadata accessor for Shortcut();
      swift_storeEnumTagMultiPayload();
      v256 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v255 - 8) + 56);
      uint64_t v257 = v254;
      goto LABEL_58;
    default:
      uint64_t v105 = (uint64_t)v60;
      uint64_t v106 = v353;
      sub_1DEB74A14(v105, v353, _s12HeadlineDataVMa);
      uint64_t v107 = v359;
      __swift_project_boxed_opaque_existential_1(v359 + 2, v359[5]);
      uint64_t v108 = sub_1DFDFB6A0();
      if (!v108)
      {
        sub_1DEB74904(v101, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
        sub_1DEB74904(v88, type metadata accessor for CuratedShortcut);
        sub_1DEB74904(v106, _s12HeadlineDataVMa);
        goto LABEL_69;
      }
      long long v109 = (void *)v108;
      sub_1DEB74964(v88, v351, type metadata accessor for CuratedShortcut);
      sub_1DEB74964(v101, v352, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      uint64_t v110 = *__swift_project_boxed_opaque_existential_1(v107 + 7, v107[10]);
      uint64_t v111 = MEMORY[0x1E01EFB70](v110 + 136);
      uint64_t v327 = v88;
      if (v111)
      {
        swift_getObjectType();
        uint64_t v112 = (uint64_t)v336;
        sub_1DFDF86F0();
        swift_unknownObjectRelease();
        uint64_t v113 = sub_1DFDF9D80();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v112, 0, 1, v113);
      }
      else
      {
        uint64_t v307 = sub_1DFDF9D80();
        uint64_t v112 = (uint64_t)v336;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v307 - 8) + 56))(v336, 1, 1, v307);
      }
      uint64_t v308 = sub_1DFA12E4C(v109, v112);
      sub_1DEA93EF4(v112, (unint64_t *)&qword_1EBACA3B0, MEMORY[0x1E4F804E0]);
      uint64_t v309 = v352;
      uint64_t v162 = v376;
      sub_1DEB74964(v352, v376, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      uint64_t v310 = v363;
      v375 = (void (*)(char *, char *, uint64_t))v109;
      uint64_t v311 = v351;
      sub_1DFB15204(v363);
      uint64_t v312 = sub_1DFB15EC8();
      uint64_t v314 = v313;
      sub_1DEB74904((uint64_t)v310, type metadata accessor for CuratedShortcut.Identifier);
      uint64_t v315 = v365;
      uint64_t v316 = (uint64_t *)(v162 + *(int *)(v365 + 24));
      *uint64_t v316 = v312;
      v316[1] = v314;
      uint64_t v317 = v348;
      sub_1DFB07BA8(v348);
      sub_1DEB74904(v309, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      sub_1DEB74904(v311, type metadata accessor for CuratedShortcut);
      uint64_t v318 = (uint64_t)v349;
      *uint64_t v349 = v308;
      uint64_t v319 = _s8HeadlineVMa(0);
      sub_1DEAEAEA0(v317, v318 + *(int *)(v319 + 20));
      swift_storeEnumTagMultiPayload();
      sub_1DEB74A14(v318, v162 + *(int *)(v315 + 20), (uint64_t (*)(void))_s13ResolvedModelOMa);
      swift_unknownObjectRelease();
      sub_1DEB74904(v374, (uint64_t (*)(void))type metadata accessor for ShortcutCategory);
      sub_1DEB74904(v327, type metadata accessor for CuratedShortcut);
      uint64_t v240 = _s12HeadlineDataVMa;
      uint64_t v239 = v353;
LABEL_57:
      sub_1DEB74904(v239, v240);
      uint64_t v255 = type metadata accessor for Shortcut();
      swift_storeEnumTagMultiPayload();
      v256 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v255 - 8) + 56);
      uint64_t v257 = v162;
LABEL_58:
      uint64_t v320 = 0;
      uint64_t v321 = v255;
      return v256(v257, v320, 1, v321);
  }
}

uint64_t sub_1DEB73234()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Shortcut();
  uint64_t v39 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(v0 + 96), *(void *)(v0 + 120));
  unint64_t v6 = sub_1DEE11448();
  id v7 = v5;
  unint64_t v8 = 0;
  unint64_t v9 = sub_1DED3351C(v6, (uint64_t)v7);
  swift_bridgeObjectRelease();

  if (v9 >> 62) {
    uint64_t v10 = sub_1DFDFFBE0();
  }
  else {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1DEA9B358(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
    {
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v36 = 0;
    uint64_t v37 = v1;
    uint64_t v38 = v2;
    uint64_t v12 = 0;
    uint64_t v13 = v40;
    uint64_t v14 = v4;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v15 = (id)MEMORY[0x1E01EE240](v12, v9);
      }
      else {
        id v15 = *(id *)(v9 + 8 * v12 + 32);
      }
      uint64_t v16 = v15;
      id v17 = objc_msgSend(v15, sel_identifier, v36);
      uint64_t v18 = sub_1DFDFDD20();
      uint64_t v20 = v19;

      uint64_t v40 = v13;
      unint64_t v22 = *(void *)(v13 + 16);
      unint64_t v21 = *(void *)(v13 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1DEA9B358(v21 > 1, v22 + 1, 1);
        uint64_t v13 = v40;
      }
      ++v12;
      *(void *)(v13 + 16) = v22 + 1;
      uint64_t v23 = v13 + 16 * v22;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v20;
    }
    while (v10 != v12);
    uint64_t v4 = v14;
    swift_bridgeObjectRelease();
    uint64_t v1 = v37;
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = v39;
  if (!*(void *)(v13 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1EBAD0640 == -1)
    {
LABEL_27:
      uint64_t v31 = sub_1DFDF01D0();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EBB62A40);
      uint64_t v32 = sub_1DFDF01B0();
      os_log_type_t v33 = sub_1DFDFEA60();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_1DE913000, v32, v33, "No cached favorited shortcuts", v34, 2u);
        MEMORY[0x1E01EFA10](v34, -1, -1);
      }

      return MEMORY[0x1E4FBC860];
    }
LABEL_37:
    swift_once();
    goto LABEL_27;
  }
  uint64_t v24 = *(void *)(v1 + 136);
  swift_unknownObjectRetain();
  unint64_t v8 = sub_1DFB86ABC(v13, v24);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!(v8 >> 62))
  {
    uint64_t v25 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v25) {
      goto LABEL_17;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_33;
  }
LABEL_17:
  uint64_t v40 = v11;
  sub_1DEDF646C(0, v25 & ~(v25 >> 63), 0);
  if (v25 < 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v26 = 0;
  uint64_t v27 = v40;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v28 = MEMORY[0x1E01EE240](v26, v8);
    }
    else
    {
      uint64_t v28 = *(void *)(v8 + 8 * v26 + 32);
      swift_retain();
    }
    *uint64_t v4 = *(void *)(v28 + 16);
    swift_storeEnumTagMultiPayload();
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v40 = v27;
    unint64_t v30 = *(void *)(v27 + 16);
    unint64_t v29 = *(void *)(v27 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_1DEDF646C(v29 > 1, v30 + 1, 1);
      uint64_t v27 = v40;
    }
    ++v26;
    *(void *)(v27 + 16) = v30 + 1;
    sub_1DEB74A14((uint64_t)v4, v27+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v30, (uint64_t (*)(void))type metadata accessor for Shortcut);
  }
  while (v25 != v26);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1DEB736C0()
{
  uint64_t v1 = type metadata accessor for Shortcut();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EAC1D390 != -1) {
    swift_once();
  }
  sub_1DEB749CC(&qword_1EAC20DC0, v3, (void (*)(uint64_t))type metadata accessor for CachedShortcutsManager);
  sub_1DFDE7EB0();
  uint64_t v6 = v21;
  if (!*(void *)(v21 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1EBAD0640 == -1)
    {
LABEL_16:
      uint64_t v15 = sub_1DFDF01D0();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EBB62A40);
      uint64_t v16 = sub_1DFDF01B0();
      os_log_type_t v17 = sub_1DFDFEA60();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_1DE913000, v16, v17, "No cached suggested shortcuts", v18, 2u);
        MEMORY[0x1E01EFA10](v18, -1, -1);
      }

      return MEMORY[0x1E4FBC860];
    }
LABEL_24:
    swift_once();
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)(v0 + 136);
  swift_unknownObjectRetain();
  unint64_t v8 = sub_1DFB86ABC(v6, v7);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_6;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_20;
  }
LABEL_6:
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1DEDF646C(0, v9 & ~(v9 >> 63), 0);
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 0;
  uint64_t v11 = v21;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = MEMORY[0x1E01EE240](v10, v8);
    }
    else
    {
      uint64_t v12 = *(void *)(v8 + 8 * v10 + 32);
      swift_retain();
    }
    *uint64_t v5 = *(void *)(v12 + 16);
    swift_storeEnumTagMultiPayload();
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v21 = v11;
    unint64_t v14 = *(void *)(v11 + 16);
    unint64_t v13 = *(void *)(v11 + 24);
    if (v14 >= v13 >> 1)
    {
      sub_1DEDF646C(v13 > 1, v14 + 1, 1);
      uint64_t v11 = v21;
    }
    ++v10;
    *(void *)(v11 + 16) = v14 + 1;
    sub_1DEB74A14((uint64_t)v5, v11+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v14, (uint64_t (*)(void))type metadata accessor for Shortcut);
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1DEB73A80(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v2 = sub_1DFDE7220();
  uint64_t v27 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CuratedShortcut.Identifier(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB74A7C(0, (unint64_t *)&unk_1EAC230F0, (void (*)(uint64_t))type metadata accessor for CuratedShortcut);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for CuratedShortcut(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1DFB14F00((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DEA93EF4((uint64_t)v10, (unint64_t *)&unk_1EAC230F0, (void (*)(uint64_t))type metadata accessor for CuratedShortcut);
    char v15 = 0;
  }
  else
  {
    sub_1DEB74A14((uint64_t)v10, (uint64_t)v14, type metadata accessor for CuratedShortcut);
    sub_1DFB15204(v7);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v4, v7, v2);
      uint64_t v21 = sub_1DFDE70E0();
      uint64_t v23 = v22;
      uint64_t v24 = (void *)(v28 + *(int *)(_s8ResolvedVMa() + 24));
      if (v21 == *v24 && v23 == v24[1])
      {
        swift_bridgeObjectRelease();
        char v15 = 0;
      }
      else
      {
        char v25 = sub_1DFDFFF50();
        swift_bridgeObjectRelease();
        char v15 = v25 ^ 1;
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v2);
    }
    else
    {
      uint64_t v17 = *(void *)v7;
      uint64_t v16 = *((void *)v7 + 1);
      uint64_t v18 = (void *)(v28 + *(int *)(_s8ResolvedVMa() + 24));
      if (v17 == *v18 && v16 == v18[1])
      {
        swift_bridgeObjectRelease();
        char v15 = 0;
      }
      else
      {
        char v20 = sub_1DFDFFF50();
        swift_bridgeObjectRelease();
        char v15 = v20 ^ 1;
      }
    }
    sub_1DEB74904((uint64_t)v14, type metadata accessor for CuratedShortcut);
  }
  return v15 & 1;
}

uint64_t sub_1DEB73E70(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DFDFDD80();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v32 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for CuratedShortcut(0);
  uint64_t v6 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EAC1D380 != -1) {
    swift_once();
  }
  v30[3] = qword_1EAC2D080;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    v30[1] = v3;
    v30[2] = v1;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v33 = *(void *)(v6 + 72);
    v30[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    *(void *)&long long v13 = 138412290;
    long long v31 = v13;
    do
    {
      sub_1DEB74964(v11, (uint64_t)v9, type metadata accessor for CuratedShortcut);
      sub_1DFDE6A00();
      swift_allocObject();
      sub_1DFDE69F0();
      sub_1DEB749CC(&qword_1EAC20DC8, 255, (void (*)(uint64_t))type metadata accessor for CuratedShortcut);
      uint64_t v14 = sub_1DFDE69E0();
      uint64_t v16 = v15;
      swift_release();
      uint64_t v39 = MEMORY[0x1E4F277C0];
      uint64_t v37 = (void *)v14;
      uint64_t v38 = v16;
      if (swift_dynamicCast())
      {
        uint64_t v17 = v35;
        unint64_t v18 = v36;
        sub_1DFDFDD70();
        uint64_t v19 = sub_1DFDFDD40();
        uint64_t v21 = v20;
        sub_1DEA5E6E4(v17, v18);
        sub_1DEB74904((uint64_t)v9, type metadata accessor for CuratedShortcut);
        if (v21)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = sub_1DEA8C6EC(0, v12[2] + 1, 1, v12);
          }
          unint64_t v23 = v12[2];
          unint64_t v22 = v12[3];
          if (v23 >= v22 >> 1) {
            uint64_t v12 = sub_1DEA8C6EC((void *)(v22 > 1), v23 + 1, 1, v12);
          }
          v12[2] = v23 + 1;
          uint64_t v24 = &v12[2 * v23];
          v24[4] = v19;
          v24[5] = v21;
        }
      }
      else
      {
        if (qword_1EBAD0640 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_1DFDF01D0();
        __swift_project_value_buffer(v25, (uint64_t)qword_1EBB62A40);
        uint64_t v26 = sub_1DFDF01B0();
        os_log_type_t v27 = sub_1DFDFEA40();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v28 = 0;
          _os_log_impl(&dword_1DE913000, v26, v27, "Failed to convert resolved shortcut to data for string conversion", v28, 2u);
          MEMORY[0x1E01EFA10](v28, -1, -1);
        }

        sub_1DEB74904((uint64_t)v9, type metadata accessor for CuratedShortcut);
      }
      v11 += v33;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v37 = v12;
  sub_1DEB749CC(&qword_1EAC230E0, v7, (void (*)(uint64_t))type metadata accessor for CachedShortcutsManager);
  sub_1DFDE8120();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEB74484(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v27 = _s8ResolvedVMa();
  MEMORY[0x1F4188790](v27);
  uint64_t v26 = (uint64_t)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Shortcut();
  uint64_t v5 = *(void *)(v29 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v29);
  uint64_t v8 = (id *)((char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)v25 - v10;
  if (qword_1EAC1D390 != -1) {
    swift_once();
  }
  v25[2] = qword_1EAC2D090;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    v25[0] = v3;
    v25[1] = v1;
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1DEA9B358(0, v12, 0);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v28 = *(void *)(v5 + 72);
    do
    {
      sub_1DEB74964(v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Shortcut);
      sub_1DEB74964((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Shortcut);
      if (swift_getEnumCaseMultiPayload())
      {
        id v17 = objc_msgSend(*v8, sel_identifier);
        uint64_t v18 = sub_1DFDFDD20();
        uint64_t v20 = v19;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v15 = v26;
        sub_1DEB74A14((uint64_t)v8, v26, (uint64_t (*)(void))_s8ResolvedVMa);
        uint64_t v16 = (uint64_t *)(v15 + *(int *)(v27 + 24));
        uint64_t v18 = *v16;
        uint64_t v20 = v16[1];
        swift_bridgeObjectRetain();
        sub_1DEB74904(v15, (uint64_t (*)(void))_s8ResolvedVMa);
      }
      sub_1DEB74904((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Shortcut);
      uint64_t v13 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEA9B358(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v30;
      }
      unint64_t v22 = *(void *)(v13 + 16);
      unint64_t v21 = *(void *)(v13 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1DEA9B358(v21 > 1, v22 + 1, 1);
        uint64_t v13 = v30;
      }
      *(void *)(v13 + 16) = v22 + 1;
      uint64_t v23 = v13 + 16 * v22;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v20;
      v14 += v28;
      --v12;
    }
    while (v12);
  }
  uint64_t v30 = v13;
  sub_1DEB749CC(&qword_1EAC230E0, v9, (void (*)(uint64_t))type metadata accessor for CachedShortcutsManager);
  sub_1DFDE8120();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEB74848()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CachedShortcutsManager()
{
  return self;
}

uint64_t sub_1DEB748BC(uint64_t a1, uint64_t a2)
{
  return sub_1DEB749CC(&qword_1EAC20DC0, a2, (void (*)(uint64_t))type metadata accessor for CachedShortcutsManager);
}

uint64_t sub_1DEB74904(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEB74964(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEB749CC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEB74A14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1DEB74A7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for NewsWebArchiveURLSchemeHandlerFactory()
{
  return self;
}

uint64_t sub_1DEB74C0C()
{
  return sub_1DEB74D68(&OBJC_IVAR____TtC7NewsUI29AdContext_qToken);
}

uint64_t sub_1DEB74C18(uint64_t a1, uint64_t a2)
{
  return sub_1DEB74DC8(a1, a2, &OBJC_IVAR____TtC7NewsUI29AdContext_qToken);
}

uint64_t (*sub_1DEB74C24())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DEB74C80()
{
  return sub_1DEB74D68(&OBJC_IVAR____TtC7NewsUI29AdContext_previewID);
}

uint64_t sub_1DEB74C8C(uint64_t a1, uint64_t a2)
{
  return sub_1DEB74DC8(a1, a2, &OBJC_IVAR____TtC7NewsUI29AdContext_previewID);
}

uint64_t (*sub_1DEB74C98())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DEB74CF4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEB74D5C()
{
  return sub_1DEB74D68(&OBJC_IVAR____TtC7NewsUI29AdContext_previewSessionID);
}

uint64_t sub_1DEB74D68(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1DEB74DBC(uint64_t a1, uint64_t a2)
{
  return sub_1DEB74DC8(a1, a2, &OBJC_IVAR____TtC7NewsUI29AdContext_previewSessionID);
}

uint64_t sub_1DEB74DC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DEB74E24())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DEB74E80()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7NewsUI29AdContext_maximumAdRequestsForCurrentAdPreviewID;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1DEB74ECC(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC7NewsUI29AdContext_maximumAdRequestsForCurrentAdPreviewID;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_1DEB74F2C())()
{
  return j__swift_endAccess;
}

id AdContext.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id AdContext.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC7NewsUI29AdContext_qToken];
  *(void *)id v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7NewsUI29AdContext_previewID];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC7NewsUI29AdContext_previewSessionID];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  unint64_t v4 = &v0[OBJC_IVAR____TtC7NewsUI29AdContext_maximumAdRequestsForCurrentAdPreviewID];
  *(void *)unint64_t v4 = 0;
  v4[8] = 1;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for AdContext();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for AdContext()
{
  return self;
}

id AdContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DEB7511C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC7NewsUI29AdContext_qToken, a2);
}

uint64_t sub_1DEB75128(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEB74CF4(a1, a2, a3, a4, &OBJC_IVAR____TtC7NewsUI29AdContext_qToken);
}

uint64_t sub_1DEB75148@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC7NewsUI29AdContext_previewID, a2);
}

uint64_t sub_1DEB75154(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEB74CF4(a1, a2, a3, a4, &OBJC_IVAR____TtC7NewsUI29AdContext_previewID);
}

uint64_t sub_1DEB75174@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC7NewsUI29AdContext_previewSessionID, a2);
}

uint64_t keypath_getTm_0@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  unint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DEB751D4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEB74CF4(a1, a2, a3, a4, &OBJC_IVAR____TtC7NewsUI29AdContext_previewSessionID);
}

uint64_t sub_1DEB751F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC7NewsUI29AdContext_maximumAdRequestsForCurrentAdPreviewID;
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 8);
  *(void *)a2 = *(void *)v3;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1DEB75250(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *a2 + OBJC_IVAR____TtC7NewsUI29AdContext_maximumAdRequestsForCurrentAdPreviewID;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v4 = v2;
  *(unsigned char *)(v4 + 8) = v3;
  return result;
}

uint64_t method lookup function for AdContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AdContext);
}

uint64_t dispatch thunk of AdContext.qToken.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AdContext.qToken.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AdContext.qToken.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AdContext.previewID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AdContext.previewID.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AdContext.previewID.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AdContext.previewSessionID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AdContext.previewSessionID.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AdContext.previewSessionID.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AdContext.maximumAdRequestsForCurrentAdPreviewID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AdContext.maximumAdRequestsForCurrentAdPreviewID.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0xC0))(a1, a2 & 1);
}

uint64_t dispatch thunk of AdContext.maximumAdRequestsForCurrentAdPreviewID.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t *sub_1DEB755C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1DEB75708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEB757F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEB758E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEB759D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DEB75B08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1DEB75C44(void *a1)
{
  sub_1DEAB9DD4(0, &qword_1EBAA6890, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v11[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEACDC84();
  sub_1DFE001A0();
  v11[15] = 0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F7F760];
  sub_1DEA81684(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  sub_1DEA0F284(&qword_1EBAA6348, (unint64_t *)&unk_1EBABA120, v8);
  sub_1DFDFFE80();
  if (!v1)
  {
    type metadata accessor for SpotlightTodayFeedGroupKnobs();
    v11[14] = 1;
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F7F8F8];
    sub_1DEA81684(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    sub_1DEA0F284((unint64_t *)&unk_1EBAA6368, &qword_1EBABA160, v9);
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DEB75E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DEB760FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEB75EB0(uint64_t a1)
{
  unint64_t v2 = sub_1DEACDC84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEB75EEC(uint64_t a1)
{
  unint64_t v2 = sub_1DEACDC84();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEB75F28(void *a1)
{
  return sub_1DEB75C44(a1);
}

uint64_t sub_1DEB75F40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SpotlightTodayFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEB7606CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpotlightTodayFeedGroupKnobs.CodingKeys()
{
  return &type metadata for SpotlightTodayFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DEB760A8()
{
  unint64_t result = qword_1EAC20E60;
  if (!qword_1EAC20E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20E60);
  }
  return result;
}

uint64_t sub_1DEB760FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F6F706572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1DEB761E0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = *(void **)(Strong + 16);
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v11 = (void *)sub_1DFDFDCE0();
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = a3;
    v12[3] = a4;
    v12[4] = sub_1DEAB8D3C;
    v12[5] = v8;
    aBlock[4] = sub_1DEB765E8;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DEB7639C;
    aBlock[3] = &block_descriptor_4;
    uint64_t v13 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_prefetchArticleID_headline_completion_, v11, 0, v13);
    _Block_release(v13);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_retain();
    uint64_t v14 = swift_release();
    a1(v14);
  }
}

void sub_1DEB7639C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_1DEB76428()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArticlePrefetcher()
{
  return self;
}

uint64_t sub_1DEB76484()
{
  swift_allocObject();
  swift_weakInit();
  sub_1DEAE8198();
  swift_allocObject();
  uint64_t v0 = sub_1DFDEDF30();
  swift_release();
  return v0;
}

uint64_t sub_1DEB7652C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1DEB76564(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1DEB76570()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEB765A8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DEB765E8(int a1, id a2)
{
  if (a2)
  {
    unsigned int v4 = *(void (**)(id))(v2 + 16);
    id v5 = a2;
    v4(a2);
  }
  else
  {
    (*(void (**)(void))(v2 + 32))();
  }
}

uint64_t type metadata accessor for FollowingDislikedModifierFactory()
{
  return self;
}

uint64_t sub_1DEB76690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DEB766D0(a1, a2, a3, (void (*)(void))sub_1DEB7681C);
}

uint64_t sub_1DEB766B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DEB766D0(a1, a2, a3, (void (*)(void))sub_1DEB767C8);
}

uint64_t sub_1DEB766D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return sub_1DFDF19A0();
}

void sub_1DEB7674C()
{
  if (!qword_1EAC20E68)
  {
    sub_1DEB0CC84();
    sub_1DEB0CCD8();
    unint64_t v0 = sub_1DFDF19B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20E68);
    }
  }
}

unint64_t sub_1DEB767C8()
{
  unint64_t result = qword_1EAC20E70;
  if (!qword_1EAC20E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20E70);
  }
  return result;
}

unint64_t sub_1DEB7681C()
{
  unint64_t result = qword_1EAC20E78;
  if (!qword_1EAC20E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20E78);
  }
  return result;
}

uint64_t sub_1DEB76870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a2;
  uint64_t v35 = a5;
  sub_1DEA0F94C(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v31 - v12;
  sub_1DEA0F974(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v21 = (char *)&v31 - v20;
  sub_1DEA0F744(a1, (uint64_t)v16, (uint64_t (*)(void))sub_1DEA0F974);
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18);
  uint64_t v34 = a1;
  if (v22 == 1)
  {
    type metadata accessor for TodayFeedServiceConfig();
    sub_1DEA4ADBC((unint64_t *)&qword_1EBAAF9B0, (void (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig);
    sub_1DFDF8040();
    sub_1DEB75F40((uint64_t)v16, (uint64_t (*)(void))sub_1DEA0F974);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v23(v21, v16, v18);
  }
  uint64_t v24 = v35;
  uint64_t v25 = v33;
  v23(v35, v21, v18);
  sub_1DEA0F744(v25, (uint64_t)v8, (uint64_t (*)(void))sub_1DEA0F94C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    type metadata accessor for TodayFeedServiceConfig();
    sub_1DEA4ADBC((unint64_t *)&qword_1EBAAF9B0, (void (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig);
    sub_1DFDF8390();
    sub_1DEB75F40((uint64_t)v8, (uint64_t (*)(void))sub_1DEA0F94C);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v8, v10);
  }
  uint64_t v26 = v34;
  uint64_t v27 = v31;
  uint64_t v28 = v32;
  uint64_t v29 = (int *)type metadata accessor for ChannelPickerTodayFeedGroupSubtypeKnobs();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v24[v29[5]], v13, v10);
  if (!v27)
  {
    uint64_t v36 = 1;
    sub_1DEA0F99C();
    swift_allocObject();
    uint64_t v27 = sub_1DFDF8C00();
  }
  *(void *)&v24[v29[6]] = v27;
  if (!v28)
  {
    uint64_t v36 = 6;
    sub_1DEA0F99C();
    swift_allocObject();
    uint64_t v28 = sub_1DFDF8C00();
  }
  sub_1DEB75F40(v25, (uint64_t (*)(void))sub_1DEA0F94C);
  uint64_t result = sub_1DEB75F40(v26, (uint64_t (*)(void))sub_1DEA0F974);
  *(void *)&v24[v29[7]] = v28;
  return result;
}

uint64_t type metadata accessor for ChannelPickerTodayFeedGroupSubtypeKnobs()
{
  uint64_t result = qword_1EBAF85A8;
  if (!qword_1EBAF85A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEB76DC8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1DEA0F94C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA0F974(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB78194(0, &qword_1EAC20E90, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v19 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v18 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEB78140();
  sub_1DFE00190();
  if (!v2)
  {
    v18[1] = 0;
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F760];
    sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
    LOBYTE(v23) = 0;
    sub_1DEA0F2C8(&qword_1EBABA118, (unint64_t *)&unk_1EBABA120, v14);
    sub_1DFDFFCD0();
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F8F8];
    sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    LOBYTE(v23) = 1;
    sub_1DEA0F2C8(&qword_1EBABA158, &qword_1EBABA160, v15);
    sub_1DFDFFCD0();
    sub_1DEA0F99C();
    LOBYTE(v22) = 2;
    sub_1DEA4ADBC(&qword_1EBAE9920, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFCD0();
    uint64_t v16 = v23;
    char v21 = 3;
    sub_1DFDFFCD0();
    sub_1DEB76870((uint64_t)v9, (uint64_t)v6, v16, v22, v20);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DEB7714C(void *a1)
{
  uint64_t v3 = v1;
  sub_1DEB78194(0, &qword_1EAC20E80, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEB78140();
  sub_1DFE001A0();
  LOBYTE(v17) = 0;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F760];
  sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  sub_1DEA0F2C8(&qword_1EBAA6348, (unint64_t *)&unk_1EBABA120, v10);
  sub_1DFDFFE80();
  if (!v2)
  {
    uint64_t v11 = type metadata accessor for ChannelPickerTodayFeedGroupSubtypeKnobs();
    uint64_t v15 = v3;
    LOBYTE(v17) = 1;
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F7F8F8];
    sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    sub_1DEA0F2C8((unint64_t *)&unk_1EBAA6368, &qword_1EBABA160, v12);
    sub_1DFDFFE80();
    uint64_t v13 = v15;
    uint64_t v17 = *(void *)(v15 + *(int *)(v11 + 24));
    char v16 = 2;
    sub_1DEA0F99C();
    sub_1DEA4ADBC(&qword_1EBAE9918, (void (*)(uint64_t))sub_1DEA0F99C);
    sub_1DFDFFE80();
    uint64_t v17 = *(void *)(v13 + *(int *)(v11 + 28));
    char v16 = 3;
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DEB77460()
{
  unint64_t result = 0x73656C7572;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C6F6F706572;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DEB774E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DEB78404(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEB77508(uint64_t a1)
{
  unint64_t v2 = sub_1DEB78140();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEB77544(uint64_t a1)
{
  unint64_t v2 = sub_1DEB78140();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEB77580@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1DEB76DC8(a1, a2);
}

uint64_t sub_1DEB77598(void *a1)
{
  return sub_1DEB7714C(a1);
}

uint64_t sub_1DEB775B0()
{
  if (sub_1DFDF80C0() & 1) != 0 && (sub_1DFDF8380() & 1) != 0 && (sub_1DEA0F99C(), (sub_1DFDF8BE0())) {
    return sub_1DFDF8BE0() & 1;
  }
  else {
    return 0;
  }
}

uint64_t *sub_1DEB7769C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DEB77800(uint64_t a1, uint64_t a2)
{
  sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  return swift_release();
}

uint64_t sub_1DEB77900(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1DEB77A18(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DEB77B48(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t sub_1DEB77C54(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_1DEB77D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEB77D88);
}

uint64_t sub_1DEB77D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DEB77ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEB77EE8);
}

void sub_1DEB77EE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA4C5E4(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_1DEA4C5E4(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_1DEB78030()
{
  sub_1DEA4C5E4(319, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  if (v0 <= 0x3F)
  {
    sub_1DEA4C5E4(319, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1DEB78140()
{
  unint64_t result = qword_1EAC20E88;
  if (!qword_1EAC20E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20E88);
  }
  return result;
}

void sub_1DEB78194(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEB78140();
    unint64_t v7 = a3(a1, &type metadata for ChannelPickerTodayFeedGroupSubtypeKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ChannelPickerTodayFeedGroupSubtypeKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEB782C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelPickerTodayFeedGroupSubtypeKnobs.CodingKeys()
{
  return &type metadata for ChannelPickerTodayFeedGroupSubtypeKnobs.CodingKeys;
}

unint64_t sub_1DEB78300()
{
  unint64_t result = qword_1EAC20E98;
  if (!qword_1EAC20E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20E98);
  }
  return result;
}

unint64_t sub_1DEB78358()
{
  unint64_t result = qword_1EAC20EA0;
  if (!qword_1EAC20EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20EA0);
  }
  return result;
}

unint64_t sub_1DEB783B0()
{
  unint64_t result = qword_1EAC20EA8;
  if (!qword_1EAC20EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20EA8);
  }
  return result;
}

uint64_t sub_1DEB78404(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F6F706572 && a2 == 0xE600000000000000 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEBEBC0 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DFEBEBE0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DEB785A4(uint64_t a1)
{
  return sub_1DEB786D8(a1, 0x61635F7261656C63, 0xEB00000000656863, (uint64_t)sub_1DEB785E0, &qword_1EAC20EB0);
}

uint64_t sub_1DEB785E0()
{
  if (qword_1EAC1D100 != -1) {
    swift_once();
  }
  return sub_1DFDE8110();
}

uint64_t static SettingActions.clearCache.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CB10);
}

uint64_t sub_1DEB786A0(uint64_t a1)
{
  return sub_1DEB786D8(a1, 0x65665F7261656C63, 0xEA00000000006465, (uint64_t)sub_1DEB78824, &qword_1EAC20EB8);
}

uint64_t sub_1DEB786D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = sub_1DFDE7F20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDE7F40();
  swift_allocObject();
  sub_1DFDE7F50();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAB2C0], v6);
  uint64_t v10 = sub_1DFDE7F30();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a5 = v10;
  return result;
}

uint64_t sub_1DEB78824()
{
  return swift_release();
}

uint64_t static SettingActions.clearFeed.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CB18);
}

unint64_t sub_1DEB788BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DE94F204((uint64_t)a1, (uint64_t)v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  unint64_t result = sub_1DFDECCB0();
  if (result)
  {
    unint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DEB789B4();
    unint64_t result = sub_1DFDECCB0();
    if (result)
    {
      unint64_t v6 = result;
      uint64_t v7 = type metadata accessor for PaywallRouter();
      uint64_t v8 = (void *)swift_allocObject();
      sub_1DE942EC4(v9, (uint64_t)(v8 + 2));
      v8[7] = v5;
      v8[8] = v6;
      v8[9] = 3;
      a2[3] = v7;
      unint64_t result = sub_1DEB78A0C();
      a2[4] = result;
      *a2 = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1DEB789B4()
{
  unint64_t result = qword_1EBABAF90;
  if (!qword_1EBABAF90)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBABAF90);
  }
  return result;
}

unint64_t sub_1DEB78A0C()
{
  unint64_t result = qword_1EBABDB48;
  if (!qword_1EBABDB48)
  {
    type metadata accessor for PaywallRouter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABDB48);
  }
  return result;
}

uint64_t *sub_1DEB78A64(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDEE390();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_1DFDEE5F0();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1DFDEE610();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t sub_1DEB78C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDEE390();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_1DFDEE5F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = sub_1DFDEE610();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t sub_1DEB78D14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDEE390();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1DFDEE5F0();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1DFDEE610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

uint64_t sub_1DEB78E64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDEE390();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1DFDEE5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1DFDEE610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t sub_1DEB78FC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDEE390();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DFDEE5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1DFDEE610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t sub_1DEB790E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDEE390();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1DFDEE5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1DFDEE610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t sub_1DEB79220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEB79234);
}

uint64_t sub_1DEB79234(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DFDEE390();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_1DFDEE5F0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[7];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = sub_1DFDEE610();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_1DEB793B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEB793CC);
}

uint64_t sub_1DEB793CC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1DFDEE390();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_1DFDEE5F0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[7];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_1DFDEE610();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[8];
  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for EngagementPresentationFailure()
{
  uint64_t result = qword_1EBADF898;
  if (!qword_1EBADF898) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEB7959C()
{
  uint64_t result = sub_1DFDEE390();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DFDEE5F0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1DFDEE610();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t destroy for SportsNavigationPrewarmFetchResult()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SportsNavigationPrewarmFetchResult(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsNavigationPrewarmFetchResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SportsNavigationPrewarmFetchResult(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsNavigationPrewarmFetchResult(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsNavigationPrewarmFetchResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsNavigationPrewarmFetchResult()
{
  return &type metadata for SportsNavigationPrewarmFetchResult;
}

uint64_t sub_1DEB7990C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DEB79964()
{
  sub_1DEB7990C();
  return swift_deallocClassInstance();
}

uint64_t sub_1DEB79998(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)(v1 + 136);
  swift_beginAccess();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *(void *)(v2 + 136);
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1DEBF3C20(0, *(void *)(v6 + 16));
  }
  else
  {
    *uint64_t v4 = sub_1DEB7BC3C(0, *(void *)(v6 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  if (!(a1 >> 62))
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_6;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DFDFFBE0();
  uint64_t v7 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_6:
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = *(void **)(v2 + 64);
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = (void *)MEMORY[0x1E01EE240](v9, a1);
      }
      else
      {
        uint64_t v12 = *(void **)(a1 + 8 * v9 + 32);
        swift_unknownObjectRetain();
      }
      id v13 = objc_msgSend(v12, sel_identifier);
      sub_1DFDFDD20();

      uint64_t v14 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      id v15 = objc_msgSend(v10, sel_lastSeenPuzzleIDsForPuzzleTypeID_, v14);

      if (v15)
      {
        sub_1DFDFE220();
      }
      ++v9;
      swift_beginAccess();
      uint64_t v11 = swift_bridgeObjectRetain();
      sub_1DEA8C598(v11);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v7 != v9);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEB79BA0()
{
  unint64_t v1 = *(void *)(v0 + 128);
  if (v1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_1DFDFFBE0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v2)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v4 = i - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = (void *)MEMORY[0x1E01EE240](i - 4, v1);
          uint64_t v6 = i - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v5 = *(void **)(v1 + 8 * i);
          swift_unknownObjectRetain();
          uint64_t v6 = i - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        id v7 = objc_msgSend(v5, sel_latestPuzzleIDs);
        if (v7)
        {
          uint64_t v8 = v7;
          sub_1DFDFE220();

          uint64_t v9 = *(void **)(v14 + 64);
          uint64_t v10 = (void *)sub_1DFDFE200();
          swift_bridgeObjectRelease();
          id v11 = objc_msgSend(v5, sel_identifier);
          sub_1DFDFDD20();

          uint64_t v12 = (void *)sub_1DFDFDCE0();
          swift_bridgeObjectRelease();
          objc_msgSend(v9, sel_setLastSeenPuzzleIDs_puzzleTypeID_, v10, v12);
          swift_unknownObjectRelease();

          if (v6 == v2) {
            return swift_bridgeObjectRelease_n();
          }
        }
        else
        {
          swift_unknownObjectRelease();
          if (v6 == v2) {
            return swift_bridgeObjectRelease_n();
          }
        }
      }
    }
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1DEB79D74(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 376) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1DEB7AC3C;
  }
  else
  {
    *(void *)(v4 + 384) = a1;
    uint64_t v5 = sub_1DEB79E9C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DEB79E9C()
{
  *(void *)(v0[37] + 128) = v0[48];
  swift_bridgeObjectRelease();
  v0[49] = sub_1DFDFE490();
  v0[50] = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEB79F48, v2, v1);
}

uint64_t sub_1DEB79F48()
{
  swift_release();
  unint64_t v0 = swift_bridgeObjectRetain();
  sub_1DEB79998(v0);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1DEB79FCC, 0, 0);
}

uint64_t sub_1DEB79FCC()
{
  uint64_t v67 = v0;
  unint64_t v1 = *(void *)(v0[37] + 128);
  uint64_t v64 = MEMORY[0x1E4FBC860];
  if (v1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_1DFDFFBE0();
    uint64_t v63 = v0;
    if (v2) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease_n();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    goto LABEL_22;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  uint64_t v63 = v0;
  if (!v2) {
    goto LABEL_21;
  }
LABEL_3:
  uint64_t v3 = v0[47];
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = (void *)MEMORY[0x1E01EE240](0, v1);
  }
  else
  {
    uint64_t v4 = *(void **)(v1 + 32);
    swift_unknownObjectRetain();
  }
  id v65 = v4;
  sub_1DEB7ADFC(&v65, v66);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  sub_1DEA8C598(v66[0]);
  if (v2 != 1)
  {
    uint64_t v6 = 5;
    do
    {
      uint64_t v7 = v6 - 4;
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = (void *)MEMORY[0x1E01EE240](v6 - 4, v1);
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v7, 1)) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v8 = *(void **)(v1 + 8 * v6);
        swift_unknownObjectRetain();
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v7, 1))
        {
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
      }
      id v65 = v8;
      sub_1DEB7ADFC(&v65, v66);
      swift_unknownObjectRelease();
      sub_1DEA8C598(v66[0]);
      ++v6;
    }
    while (v9 != v2);
  }
  swift_bridgeObjectRelease_n();
  unint64_t v0 = v63;
  uint64_t v10 = v64;
LABEL_22:
  uint64_t v62 = v0 + 29;
  id v11 = (void (*)(uint64_t, uint64_t))v0[44];
  uint64_t v12 = v0[42];
  uint64_t v13 = v0[39];
  uint64_t v14 = v0[37];
  uint64_t v15 = sub_1DE9DB9D8(v10);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(v14 + 72), *(void *)(v14 + 96));
  sub_1DFDE7480();
  uint64_t v16 = sub_1DFDFC4F0();
  v11(v12, v13);
  uint64_t v17 = sub_1DE9DB9D8(v16);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1DE9DB9D8(v18);
  swift_bridgeObjectRelease();
  if (NFInternalBuild())
  {
    uint64_t v20 = v15;
    uint64_t v21 = v63;
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1DFDF01B0();
    os_log_type_t v23 = sub_1DFDFEA60();
    uint64_t v61 = v20;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      v66[0] = v60;
      *(_DWORD *)uint64_t v24 = 134218242;
      v63[33] = *(void *)(v20 + 16);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1DFDFE5E0();
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      v63[34] = sub_1DEA5CAB8(v25, v27, v66);
      uint64_t v21 = v63;
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DE913000, v22, v23, "PuzzleBadgingCoordinator: %ld Combined Fetched Latest Puzzle IDs: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v60, -1, -1);
      MEMORY[0x1E01EFA10](v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_1DFDF01B0();
    os_log_type_t v29 = sub_1DFDFEA60();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v66[0] = v59;
      *(_DWORD *)uint64_t v30 = 134218242;
      v21[31] = *(void *)(v17 + 16);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1DFDFE5E0();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      v63[32] = sub_1DEA5CAB8(v31, v33, v66);
      uint64_t v21 = v63;
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DE913000, v28, v29, "PuzzleBadgingCoordinator: %ld History Puzzle IDs: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v59, -1, -1);
      MEMORY[0x1E01EFA10](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRetain_n();
    uint64_t v34 = sub_1DFDF01B0();
    os_log_type_t v35 = sub_1DFDFEA60();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = v21 + 30;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v66[0] = v38;
      *(_DWORD *)uint64_t v37 = 134218242;
      *uint64_t v62 = *(void *)(v19 + 16);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1DFDFE5E0();
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      *uint64_t v36 = sub_1DEA5CAB8(v39, v41, v66);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DE913000, v34, v35, "PuzzleBadgingCoordinator: %ld Previously Seen Puzzle IDs: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v38, -1, -1);
      MEMORY[0x1E01EFA10](v37, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v15 = v61;
  }
  if (*(void *)(v17 + 16) <= *(void *)(v15 + 16) >> 3)
  {
    v66[0] = v15;
    sub_1DF0A7600(v17);
    swift_bridgeObjectRelease();
    uint64_t v42 = v66[0];
  }
  else
  {
    uint64_t v42 = sub_1DF0A7D40(v17, v15);
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = v63;
  if (*(void *)(v19 + 16) <= *(void *)(v42 + 16) >> 3)
  {
    v66[0] = v42;
    sub_1DF0A7600(v19);
    swift_bridgeObjectRelease();
    uint64_t v44 = v66[0];
  }
  else
  {
    uint64_t v44 = sub_1DF0A7D40(v19, v42);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v45 = sub_1DFDF01B0();
  os_log_type_t v46 = sub_1DFDFEA60();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v66[0] = v48;
    *(_DWORD *)uint64_t v47 = 134218242;
    v63[27] = *(void *)(v44 + 16);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1DFDFE5E0();
    unint64_t v51 = v50;
    swift_bridgeObjectRelease();
    v63[28] = sub_1DEA5CAB8(v49, v51, v66);
    uint64_t v43 = v63;
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DE913000, v45, v46, "PuzzleBadgingCoordinator: %ld New Puzzle IDs: %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v48, -1, -1);
    MEMORY[0x1E01EFA10](v47, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v52 = *(void *)(v44 + 16);
  v43[51] = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = sub_1DFDFE480();
  if (v52)
  {
    v43[52] = v53;
    uint64_t v54 = sub_1DFDFE430();
    uint64_t v56 = v55;
    uint64_t v57 = sub_1DEB7A9B4;
  }
  else
  {
    v43[53] = v53;
    uint64_t v54 = sub_1DFDFE430();
    uint64_t v56 = v58;
    uint64_t v57 = sub_1DEB7AB4C;
  }
  return MEMORY[0x1F4188298](v57, v54, v56);
}

uint64_t sub_1DEB7A9B4()
{
  uint64_t v1 = v0[51];
  swift_release();
  uint64_t v2 = sub_1DFDECF80();
  uint64_t v5 = v0[24];
  uint64_t v6 = v5 + v1;
  if (__OFADD__(v5, v1))
  {
    __break(1u);
  }
  else
  {
    v0[25] = v6;
    sub_1DFDECFB0();
    sub_1DFDE7DC0();
    v0[26] = v6;
    sub_1DEAD3E10((unint64_t *)&unk_1EAC20F20);
    sub_1DFDE8120();
    swift_release();
    sub_1DEB79BA0();
    uint64_t v2 = (uint64_t)sub_1DEB7AAC0;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DEB7AAC0()
{
  *(void *)(v0 + 424) = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEB7AB4C, v2, v1);
}

uint64_t sub_1DEB7AB4C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[44];
  uint64_t v2 = v0[42];
  uint64_t v3 = v0[39];
  swift_release();
  sub_1DFDE7E30();
  sub_1DFDE75F0();
  sub_1DEAD3E10((unint64_t *)&unk_1EAC20F20);
  sub_1DFDE8120();
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1DEB7AC3C()
{
  uint64_t v1 = (void *)v0[47];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1DFDF01B0();
  os_log_type_t v5 = sub_1DFDFEA40();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[47];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[22] = v10;
    sub_1DFDFF680();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1DE913000, v4, v5, "PuzzleBadgingCoordinator: Failed to update puzzle badge count:  %@", v7, 0xCu);
    sub_1DEB7BBD4();
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v8, -1, -1);
    MEMORY[0x1E01EFA10](v7, -1, -1);
  }
  else
  {
    id v11 = (void *)v0[47];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

void sub_1DEB7ADFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(*a1, sel_latestPuzzleIDs);
  if (v4)
  {
    os_log_type_t v5 = v4;
    uint64_t v6 = sub_1DFDFE220();

    if (!NFInternalBuild()) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (!NFInternalBuild()) {
      goto LABEL_10;
    }
  }
  if (qword_1EBACBF20 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1DFDF01D0();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBB62BD0);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v8 = sub_1DFDF01B0();
  os_log_type_t v9 = sub_1DFDFEA60();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t type = v9;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v23 = v20;
    *(_DWORD *)uint64_t v10 = 134218498;
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    id v11 = objc_msgSend(v3, sel_name);
    uint64_t v22 = a2;
    uint64_t v12 = sub_1DFDFDD20();
    unint64_t v14 = v13;

    sub_1DEA5CAB8(v12, v14, &v23);
    sub_1DFDFF680();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2080;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = MEMORY[0x1E01ECA60](v15, MEMORY[0x1E4FBB1A0]);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = v16;
    a2 = v22;
    sub_1DEA5CAB8(v19, v18, &v23);
    sub_1DFDFF680();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DE913000, v8, type, "PuzzleBadgingCoordinator: %ld Latest Puzzle IDs (%s): %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v20, -1, -1);
    MEMORY[0x1E01EFA10](v10, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
LABEL_10:
  *a2 = v6;
}

uint64_t sub_1DEB7B0F8()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1DEB7B118, 0, 0);
}

uint64_t sub_1DEB7B118()
{
  unint64_t v1 = *(void *)(v0[3] + 128);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_1DFDFE490();
    v0[7] = sub_1DFDFE480();
    uint64_t v3 = sub_1DFDFE430();
    return MEMORY[0x1F4188298](sub_1DEB7B458, v3, v2);
  }
  os_log_type_t v5 = (void *)v0[3];
  uint64_t v6 = v5[6];
  uint64_t v7 = v5[7];
  __swift_project_boxed_opaque_existential_1(v5 + 3, v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[4] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1DEB7B288;
  return MEMORY[0x1F41347E0](v6, v7);
}

uint64_t sub_1DEB7B288(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    os_log_type_t v5 = sub_1DEB7B4C0;
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    os_log_type_t v5 = sub_1DEB7B3B0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DEB7B3B0()
{
  *(void *)(v0[3] + 128) = v0[6];
  swift_bridgeObjectRelease();
  sub_1DFDFE490();
  v0[7] = sub_1DFDFE480();
  uint64_t v2 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEB7B458, v2, v1);
}

uint64_t sub_1DEB7B458()
{
  swift_release();
  sub_1DEB79BA0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEB7B4C0()
{
  if (qword_1EBACBF20 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = sub_1DFDF01D0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB62BD0);
  id v3 = v1;
  id v4 = v1;
  os_log_type_t v5 = sub_1DFDF01B0();
  os_log_type_t v6 = sub_1DFDFEA40();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[5];
  if (v7)
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v12;
    sub_1DFDFF680();
    void *v10 = v12;

    _os_log_impl(&dword_1DE913000, v5, v6, "PuzzleBadgingCoordinator: Failed update puzzle badging coordinator for initial puzzle play:  %@", v9, 0xCu);
    sub_1DEB7BBD4();
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v10, -1, -1);
    MEMORY[0x1E01EFA10](v9, -1, -1);
  }
  else
  {
  }
  sub_1DFDFE490();
  v0[7] = sub_1DFDFE480();
  uint64_t v14 = sub_1DFDFE430();
  return MEMORY[0x1F4188298](sub_1DEB7B458, v14, v13);
}

uint64_t sub_1DEB7B6FC()
{
  return swift_release();
}

uint64_t sub_1DEB7B7A4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DEB7BED8;
  return sub_1DE918408();
}

uint64_t sub_1DEB7B834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *os_log_type_t v6 = v4;
  v6[1] = sub_1DEB7BED8;
  v6[3] = a4;
  return MEMORY[0x1F4188298](sub_1DEB7B118, 0, 0);
}

uint64_t sub_1DEB7B8E4()
{
  return sub_1DEAD3E10(&qword_1EBADACF8);
}

uint64_t sub_1DEB7B91C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DEB7BED8;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DEB7BED8;
  return sub_1DE918408();
}

uint64_t sub_1DEB7B9F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEB7BA28(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *os_log_type_t v5 = v2;
  v5[1] = sub_1DEB7BAE0;
  os_log_type_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAC35558 + dword_1EAC35558);
  return v6(a1, v4);
}

uint64_t sub_1DEB7BAE0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_1DEB7BBD4()
{
  if (!qword_1EBAEA670)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBABB090);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA670);
    }
  }
}

void *sub_1DEB7BC3C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1DEA696D8(0, (unint64_t *)&qword_1EBABB6F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_1DEB7BCD4()
{
  uint64_t v1 = v0;
  sub_1DE91D200();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v0[17] + 16))
  {
    __swift_project_boxed_opaque_existential_1(v0 + 9, v0[12]);
    uint64_t result = sub_1DFDFC4B0();
    if ((result & 1) == 0)
    {
      uint64_t v6 = sub_1DFDFE4B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
      BOOL v7 = (void *)swift_allocObject();
      v7[2] = 0;
      v7[3] = 0;
      v7[4] = v1;
      swift_retain();
      sub_1DFAF37C4((uint64_t)v4, (uint64_t)&unk_1EAC20F60, (uint64_t)v7);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DEB7BE24(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *BOOL v7 = v2;
  v7[1] = sub_1DEB7BAE0;
  return sub_1DEB7B834(a1, v4, v5, v6);
}

uint64_t sub_1DEB7BEDC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v40 = sub_1DFDE7600();
  uint64_t v5 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v38 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v36 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v39 = (char *)v36 - v11;
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  int v14 = *((unsigned __int8 *)a1 + 16);
  uint64_t v15 = v2[5];
  uint64_t v37 = v2 + 2;
  __swift_project_boxed_opaque_existential_1(v2 + 2, v15);
  sub_1DE925C98(0, &qword_1EBAE8D00);
  sub_1DFDECCC0();
  uint64_t v16 = v43[0];
  if (v43[0])
  {
    if (v14)
    {
      if (v14 == 1) {
        *(unsigned char *)(v43[0] + 152) = v12 & 1;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      *(void *)(v43[0] + 136) = v12;
      *(void *)(v16 + 144) = v13;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v17 = v39;
  uint64_t v18 = v40;
  if (qword_1EBAD1DD8 != -1) {
    swift_once();
  }
  sub_1DEB7CB6C(&qword_1EAC20F70, (void (*)(uint64_t))type metadata accessor for Router);
  sub_1DFDE7EB0();
  if (qword_1EBAD2E00 != -1) {
    swift_once();
  }
  v36[1] = v4;
  uint64_t v19 = sub_1DFDF01D0();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBB62B88);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v17, v18);
  uint64_t v20 = sub_1DFDF01B0();
  os_log_type_t v21 = sub_1DFDFEA60();
  uint64_t v22 = v9;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v43[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    sub_1DEB7CB6C((unint64_t *)&qword_1EBAA6DA0, MEMORY[0x1E4F27928]);
    uint64_t v25 = sub_1DFDFFEE0();
    *(void *)&long long v41 = sub_1DEA5CAB8(v25, v26, v43);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    unint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v22, v40);
    _os_log_impl(&dword_1DE913000, v20, v21, "handleSystemNotifications: lastTCCPresentedDate = %s", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v24;
    uint64_t v18 = v40;
    MEMORY[0x1E01EFA10](v28, -1, -1);
    os_log_type_t v29 = v23;
    unint64_t v17 = v39;
    MEMORY[0x1E01EFA10](v29, -1, -1);
  }
  else
  {
    unint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v22, v18);
  }

  uint64_t v30 = v38;
  sub_1DFDE7480();
  char v31 = sub_1DFDE74E0();
  v27(v30, v18);
  if (v31)
  {
    objc_msgSend(self, sel_openNewsSystemNotificationSettings);
    unint64_t v32 = v17;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v37, v2[5]);
    sub_1DE925C98(0, &qword_1EBAB0740);
    sub_1DFDECCC0();
    if (v42)
    {
      uint64_t v33 = sub_1DE942EC4(&v41, (uint64_t)v43);
      MEMORY[0x1F4188790](v33);
      v36[-2] = v43;
      type metadata accessor for NotificationSettings();
      sub_1DFDEE090();
      sub_1DEAA29D0();
      uint64_t v34 = (void *)sub_1DFDFEE60();
      sub_1DFDEDE20();
      swift_release();
      swift_release();

      v27(v39, v18);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    }
    sub_1DEB7CA48((uint64_t)&v41);
    objc_msgSend(self, sel_openNewsSystemNotificationSettings);
    unint64_t v32 = v39;
  }
  return ((uint64_t (*)(char *, uint64_t))v27)(v32, v18);
}

id sub_1DEB7C4B8(void **a1, uint64_t a2)
{
  v21[2] = a2;
  uint64_t v4 = sub_1DFDF01D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  if (qword_1EBAD2E00 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBB62B88);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  uint64_t v10 = v8;
  uint64_t v11 = sub_1DFDF01B0();
  os_log_type_t v12 = sub_1DFDFEA60();
  if (os_log_type_enabled(v11, v12))
  {
    v21[1] = v2;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v15 = *(void *)&v10[OBJC_IVAR___TSNotificationSettings_authorizationStatus];
    v21[0] = v14;
    if (v15)
    {
      if (v15 == 2)
      {
        unint64_t v16 = 0xEA00000000006465;
        uint64_t v17 = 0x7A69726F68747561;
      }
      else
      {
        if (v15 != 1)
        {

          uint64_t v22 = v15;
          goto LABEL_18;
        }
        unint64_t v16 = 0xE600000000000000;
        uint64_t v17 = 0x6465696E6564;
      }
    }
    else
    {
      unint64_t v16 = 0xED000064656E696DLL;
      uint64_t v17 = 0x7265746544746F6ELL;
    }
    uint64_t v22 = sub_1DEA5CAB8(v17, v16, &v23);
    sub_1DFDFF680();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DE913000, v11, v12, "handleSystemNotifications: authorizationStatus = %s", v13, 0xCu);
    uint64_t v18 = v21[0];
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v18, -1, -1);
    MEMORY[0x1E01EFA10](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v19 = *(void *)&v10[OBJC_IVAR___TSNotificationSettings_authorizationStatus];
  if ((unint64_t)(v19 - 1) < 2) {
    return objc_msgSend(self, sel_openNewsSystemNotificationSettings);
  }
  if (!v19) {
    return sub_1DEB7C828();
  }
  uint64_t v23 = *(void *)&v10[OBJC_IVAR___TSNotificationSettings_authorizationStatus];
LABEL_18:
  id result = (id)sub_1DFDFFFD0();
  __break(1u);
  return result;
}

id sub_1DEB7C828()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1DE925C98(0, &qword_1EBAB0740);
  sub_1DFDECCC0();
  if (v5)
  {
    uint64_t v1 = sub_1DE942EC4(&v4, (uint64_t)v6);
    MEMORY[0x1F4188790](v1);
    sub_1DFDEE090();
    uint64_t v2 = (void *)sub_1DFDEDCE0();
    sub_1DFDEDEA0();
    swift_release();
    swift_release();

    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    sub_1DEB7CA48((uint64_t)&v4);
    return objc_msgSend(self, sel_openNewsSystemNotificationSettings);
  }
}

void sub_1DEB7C960()
{
  if (qword_1EBAD2E00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DFDF01D0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62B88);
  oslog = sub_1DFDF01B0();
  os_log_type_t v1 = sub_1DFDFEA60();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_1DE913000, oslog, v1, "handleSystemNotifications: authorization requested.", v2, 2u);
    MEMORY[0x1E01EFA10](v2, -1, -1);
  }
}

uint64_t sub_1DEB7CA48(uint64_t a1)
{
  sub_1DEB7CAA4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DEB7CAA4()
{
  if (!qword_1EAC20F78)
  {
    sub_1DE925C98(255, &qword_1EBAB0740);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC20F78);
    }
  }
}

uint64_t sub_1DEB7CB10()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
}

uint64_t sub_1DEB7CB6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEB7CBB4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(1, v2, v3);
}

uint64_t destroy for SearchMoreFeedContentChunk(uint64_t a1)
{
  return sub_1DEB1EA64(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for SearchMoreFeedContentChunk(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1DEB1EA58(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for SearchMoreFeedContentChunk(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1DEB1EA58(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1DEB1EA64(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SearchMoreFeedContentChunk(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1DEB1EA64(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchMoreFeedContentChunk(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchMoreFeedContentChunk(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 2 * -a2;
      *(void *)(result + 24) = 0;
      *(unsigned char *)(result + 32) = 0;
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1DEB7CE00(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1DEB7CE20(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0x3Fu;
  return result;
}

uint64_t sub_1DEB7CE30(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    char v2 = *(unsigned char *)(result + 32) & 1 | ((_BYTE)a2 << 6);
    *(void *)(result + 16) &= 1uLL;
    *(unsigned char *)(result + 32) = v2;
  }
  else
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMoreFeedContentChunk()
{
  return &type metadata for SearchMoreFeedContentChunk;
}

uint64_t sub_1DEB7CE7C()
{
  id v1 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v0 + 2, v0[5])+ OBJC_IVAR____TtC7NewsUI216EditorialService_editorialItemProvider), sel_cachedEditorialItems);
  type metadata accessor for EditorialItem();
  unint64_t v2 = sub_1DFDFE220();

  swift_retain();
  uint64_t v3 = sub_1DEB7D7C0(v2, v0);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      if (*(void *)(v3 + 8 * i + 32))
      {
        uint64_t v7 = swift_retain();
        MEMORY[0x1E01ECA20](v7);
        if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DFDFE320();
        }
        sub_1DFDFE370();
        sub_1DFDFE250();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = v9;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1DEB7CFE0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FollowingEditorialService()
{
  return self;
}

void sub_1DEB7D04C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, a2, a3, a4, a5);
  swift_beginAccess();
  uint64_t v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v6;
}

uint64_t sub_1DEB7D0EC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v9 = *(void (**)(uint64_t, double, double, double, double))(a1 + 32);
  uint64_t v10 = swift_retain();
  v9(v10, a2, a3, a4, a5);
  return swift_release();
}

uint64_t sub_1DEB7D160(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v66 = a4;
  sub_1DEA3C638();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v65 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = (void **)(a1 + OBJC_IVAR___TSEditorialItem_thumbnailImage);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*v8)
  {
    uint64_t v10 = a1 + OBJC_IVAR___TSEditorialItem_identifier;
    swift_beginAccess();
    uint64_t v11 = *(void **)v10;
    uint64_t v62 = *(void *)(v10 + 8);
    uint64_t v63 = v11;
    swift_bridgeObjectRetain();
    int v61 = 0;
  }
  else
  {
    char v12 = (void **)(a1 + OBJC_IVAR___TSEditorialItem_backingTag);
    swift_beginAccess();
    if (*v12)
    {
      uint64_t v63 = *v12;
      swift_unknownObjectRetain();
      uint64_t v62 = 0;
      int v13 = 1;
    }
    else
    {
      uint64_t v62 = 0;
      uint64_t v63 = 0;
      int v13 = 255;
    }
    int v61 = v13;
  }
  uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR___TSEditorialItem_attributes);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = *(void *)(*v14 + 16);
  uint64_t v64 = v9;
  if (v16)
  {
    id v17 = v9;
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      if (!*(void *)(v15 + 8 * v18 + 32))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1DEE178AC(0, *((void *)v19 + 2) + 1, 1, v19);
        }
        unint64_t v21 = *((void *)v19 + 2);
        unint64_t v20 = *((void *)v19 + 3);
        unint64_t v22 = v21 + 1;
        if (v21 >= v20 >> 1) {
          uint64_t v19 = sub_1DEE178AC((char *)(v20 > 1), v21 + 1, 1, v19);
        }
        *((void *)v19 + 2) = v22;
      }
      ++v18;
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v23 = v9;
    uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  uint64_t v25 = a1 + OBJC_IVAR___TSEditorialItem_subtitleColor;
  swift_beginAccess();
  if (*(void *)(v25 + 8))
  {
    swift_bridgeObjectRetain();
    unint64_t v26 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1DEB7D7B8;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DEB7D0EC;
    aBlock[3] = &block_descriptor_5;
    unint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    FCDeconstructHexStringWithBlock();
    _Block_release(v27);
  }
  uint64_t v28 = (void *)(a1 + OBJC_IVAR___TSEditorialItem_backingTag);
  swift_beginAccess();
  if (*v28)
  {
    swift_getObjectType();
    os_log_type_t v29 = (void *)swift_unknownObjectRetain();
    id v30 = sub_1DF089C68(v29, 0, a2);
    swift_unknownObjectRelease();
    type metadata accessor for FollowingTagModel();
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = 0;
    *(void *)(v31 + 24) = v30;
    *(unsigned char *)(v31 + 32) = v66 & 1;
  }
  else
  {
    uint64_t v31 = 0;
  }
  sub_1DF9BA2D0(aBlock);
  swift_bridgeObjectRetain();
  sub_1DEB22304((uint64_t)aBlock);
  uint64_t v32 = sub_1DFDFDDA0();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a1 + OBJC_IVAR___TSEditorialItem_subtitle;
  swift_beginAccess();
  uint64_t v36 = *(void *)(v35 + 8);
  uint64_t v60 = v31;
  if (v36)
  {
    if (v32 == sub_1DFDFDDA0() && v34 == v37)
    {
      uint64_t v40 = v24;
      swift_bridgeObjectRelease_n();
      goto LABEL_33;
    }
    char v39 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v39)
    {
      uint64_t v40 = v24;
LABEL_33:
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      goto LABEL_34;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v40 = v24;
  long long v41 = *(void **)v35;
  uint64_t v57 = *(void **)(v35 + 8);
  uint64_t v58 = v41;
  swift_bridgeObjectRetain();
LABEL_34:
  uint64_t v42 = (uint64_t *)(a1 + OBJC_IVAR___TSEditorialItem_identifier);
  swift_beginAccess();
  uint64_t v43 = *v42;
  uint64_t v44 = v42[1];
  uint64_t v59 = v43;
  uint64_t v45 = a1 + OBJC_IVAR___TSEditorialItem_title;
  swift_beginAccess();
  uint64_t v47 = *(char **)v45;
  uint64_t v46 = *(void *)(v45 + 8);
  swift_beginAccess();
  uint64_t v48 = *(void **)(v40 + 16);
  uint64_t v49 = a1 + OBJC_IVAR___TSEditorialItem_actionURL;
  swift_beginAccess();
  uint64_t v50 = v65;
  sub_1DEAEAE20(v49, v65);
  unint64_t v51 = (void **)(a1 + OBJC_IVAR___TSEditorialItem_headline);
  swift_beginAccess();
  uint64_t v52 = *v51;
  type metadata accessor for EditorialModel(0);
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v53 = v48;
  uint64_t v54 = sub_1DEFB4EAC(v59, v44, v47, v46, v58, v57, (uint64_t)v48, v50, (uint64_t)v19, v63, v62, v64, v61, v60, v52);
  swift_release();
  type metadata accessor for FollowingEditorialModel();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v54;
  *(unsigned char *)(result + 24) = v66 & 1;
  return result;
}

uint64_t sub_1DEB7D780()
{
  return swift_deallocObject();
}

void sub_1DEB7D7B8(double a1, double a2, double a3, double a4)
{
  sub_1DEB7D04C(v4, a1, a2, a3, a4);
}

uint64_t sub_1DEB7D7C0(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = a2;
  uint64_t v33 = sub_1DFDFBB00();
  uint64_t v5 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v7 = (void *)((char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = sub_1DFDFB530();
  uint64_t v8 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v11) {
      break;
    }
    uint64_t v35 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DFDFFA70();
    if (v11 < 0)
    {
      __break(1u);
      return result;
    }
    v21[1] = v3;
    uint64_t v3 = 0;
    uint64_t v13 = v33;
    uint64_t v28 = v34 + 9;
    unint64_t v29 = a1 & 0xC000000000000001;
    uint64_t v14 = v34[7];
    uint64_t v26 = v34[8];
    uint64_t v27 = v14;
    unsigned int v25 = *MEMORY[0x1E4F81000];
    id v23 = (void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v24 = (void (**)(void *, void, uint64_t))(v5 + 104);
    unint64_t v22 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v30 = v11;
    unint64_t v31 = a1;
    while (v11 != v3)
    {
      if (v29) {
        uint64_t v15 = (char *)MEMORY[0x1E01EE240](v3, a1);
      }
      else {
        uint64_t v15 = (char *)*(id *)(a1 + 8 * v3 + 32);
      }
      uint64_t v16 = v15;
      ++v3;
      uint64_t v5 = v34[12];
      __swift_project_boxed_opaque_existential_1(v28, v5);
      id v17 = &v16[OBJC_IVAR___TSEditorialItem_identifier];
      swift_beginAccess();
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *((void *)v17 + 1);
      *uint64_t v7 = v18;
      v7[1] = v19;
      (*v24)(v7, v25, v13);
      swift_bridgeObjectRetain();
      sub_1DFDFD2A0();
      (*v23)(v7, v13);
      char v20 = sub_1DFDFB510();
      (*v22)(v10, v32);
      sub_1DEB7D160((uint64_t)v16, v27, v26, v20 & 1);

      sub_1DFDFFA50();
      uint64_t v8 = *(void *)(v35 + 16);
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
      uint64_t v11 = v30;
      a1 = v31;
      if (v30 == v3) {
        return v35;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t dispatch thunk of SportsSyncServiceObserver.didFetchRemoteFavorites(umcIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SportsSyncServiceObserver.didAddToRemoteFavorites(umcIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SportsSyncServiceObserver.didRemoveFromRemoteFavorites(umcIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

id sub_1DEB7DB3C()
{
  id v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = objc_msgSend(self, sel_defaultManager);
    uint64_t v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    id v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void sub_1DEB7DBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = sub_1DEB7DB3C();
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = a3;
  v9[3] = a4;
  v9[4] = a1;
  v9[5] = a2;
  v11[4] = sub_1DEB802F8;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1DEB7DEB0;
  v11[3] = &block_descriptor_36;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_isOnboarded_, v10);
  _Block_release(v10);
}

void sub_1DEB7DCBC(char a1, uint64_t a2, void *a3, void (*a4)(void *), uint64_t a5, void (*a6)(char *))
{
  unint64_t v22 = a6;
  sub_1DEAE85BC(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  char v12 = (char *)&v21 - v11;
  uint64_t v13 = type metadata accessor for SportsSyncSetting();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v21 - v17;
  if (a3)
  {
    id v19 = a3;
    a4(a3);
  }
  else
  {
    sub_1DEA1F784(a2, (uint64_t)v12);
    v16[8] = 0;
    uint64_t v20 = 2;
    if ((a1 & 1) == 0) {
      uint64_t v20 = 3;
    }
    *(void *)uint64_t v16 = v20;
    sub_1DEB80304((uint64_t)v12, (uint64_t)&v16[*(int *)(v13 + 24)]);
    sub_1DEB80398((uint64_t)v16, (uint64_t)v18);
    v22(v18);
    sub_1DEB8027C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SportsSyncSetting);
  }
}

uint64_t sub_1DEB7DEB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1DEAE85BC(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void (**)(uint64_t, char *, void *))(a1 + 32);
  if (a3)
  {
    sub_1DFDE7570();
    uint64_t v12 = sub_1DFDE7600();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = sub_1DFDE7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  id v14 = a4;
  v11(a2, v10, a4);
  swift_release();

  return sub_1DEAEA868((uint64_t)v10);
}

void sub_1DEB7E024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for SportsSyncSetting();
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (void *)((char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = qword_1EBAF36B0;
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1DFDF01D0();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBB63458);
  sub_1DEB80218((uint64_t)a5, (uint64_t)v14);
  uint64_t v18 = sub_1DFDF01B0();
  os_log_type_t v19 = sub_1DFDFEA60();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v33 = a3;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    v32[0] = v15;
    uint64_t v23 = v22;
    aBlock[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    v32[1] = a6;
    uint64_t v24 = FCSportsSyncState.description.getter(*v14);
    uint64_t v34 = sub_1DEA5CAB8(v24, v25, aBlock);
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    sub_1DEB8027C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SportsSyncSetting);
    _os_log_impl(&dword_1DE913000, v18, v19, "Sync service set optin state to '%{public}s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v23;
    uint64_t v15 = v32[0];
    MEMORY[0x1E01EFA10](v26, -1, -1);
    uint64_t v27 = v21;
    a3 = v33;
    MEMORY[0x1E01EFA10](v27, -1, -1);
  }
  else
  {
    sub_1DEB8027C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SportsSyncSetting);
  }

  id v28 = sub_1DEB7DB3C();
  BOOL v29 = *a5 == 2;
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = a3;
  v30[3] = a4;
  void v30[4] = sub_1DEB80558;
  v30[5] = v15;
  aBlock[4] = (uint64_t)sub_1DEB802E0;
  aBlock[5] = (uint64_t)v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1DF75CEC8;
  aBlock[3] = (uint64_t)&block_descriptor_30;
  unint64_t v31 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v28, sel_setOptInStatus_completion_, v29, v31);
  _Block_release(v31);
}

void sub_1DEB7E374(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void))
{
  if (a1)
  {
    id v6 = a1;
    a2(a1);
  }
  else
  {
    a4();
  }
}

void sub_1DEB7E3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EBAF36B0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DFDF01D0();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBB63458);
  uint64_t v9 = sub_1DFDF01B0();
  os_log_type_t v10 = sub_1DFDFEA60();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_1DE913000, v9, v10, "Service syncing favorites", v11, 2u);
    MEMORY[0x1E01EFA10](v11, -1, -1);
  }

  CFTimeInterval v12 = CACurrentMediaTime();
  id v13 = sub_1DEB7DB3C();
  swift_weakInit();
  swift_weakDestroy();
  id v14 = (CFTimeInterval *)swift_allocObject();
  v14[2] = v12;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a4;
  *((void *)v14 + 5) = a1;
  *((void *)v14 + 6) = a2;
  aBlock[4] = sub_1DEB801AC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DEB7ECCC;
  aBlock[3] = &block_descriptor_20;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_favoritesWithCompletion_, v15);
  _Block_release(v15);
}

void sub_1DEB7E5DC(unint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t Result = type metadata accessor for SportsSyncFavoritesFetchResult();
  uint64_t v14 = MEMORY[0x1F4188790](Result);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v17 = a3;
    if (qword_1EBAF36B0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1DFDF01D0();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBB63458);
    id v19 = a3;
    id v20 = a3;
    uint64_t v21 = sub_1DFDF01B0();
    os_log_type_t v22 = sub_1DFDFEA40();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v65 = v24;
      *(_DWORD *)uint64_t v23 = 136446466;
      swift_getErrorValue();
      uint64_t v25 = sub_1DFE00060();
      uint64_t v64 = sub_1DEA5CAB8(v25, v26, &v65);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();

      *(_WORD *)(v23 + 12) = 2050;
      sub_1DFDFE560();
      uint64_t v64 = v27;
      sub_1DFDFF680();
      _os_log_impl(&dword_1DE913000, v21, v22, "Service syncing favorites failed, error=%{public}s, visible duration=%{public}f", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v24, -1, -1);
      MEMORY[0x1E01EFA10](v23, -1, -1);
    }
    else
    {
    }
    ((void (*)(void *))a4)(a3);

    return;
  }
  if (a1)
  {
    uint64_t v60 = v14;
    int v61 = v16;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1DFDFFBE0();
    }
    else
    {
      uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v59 = a6;
    uint64_t v62 = a2;
    uint64_t v63 = a7;
    if (!v28)
    {
      uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
LABEL_28:
      swift_bridgeObjectRelease();
      if (qword_1EBAF36B0 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1DFDF01D0();
      __swift_project_value_buffer(v46, (uint64_t)qword_1EBB63458);
      swift_bridgeObjectRetain_n();
      uint64_t v47 = sub_1DFDF01B0();
      os_log_type_t v48 = sub_1DFDFEA60();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        uint64_t v65 = v50;
        *(_DWORD *)uint64_t v49 = 134349314;
        sub_1DFDFE560();
        uint64_t v64 = v51;
        sub_1DFDFF680();
        *(_WORD *)(v49 + 12) = 2082;
        uint64_t v52 = swift_bridgeObjectRetain();
        uint64_t v53 = MEMORY[0x1E01ECA60](v52, MEMORY[0x1E4FBB1A0]);
        unint64_t v55 = v54;
        swift_bridgeObjectRelease();
        uint64_t v64 = sub_1DEA5CAB8(v53, v55, &v65);
        sub_1DFDFF680();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DE913000, v47, v48, "Service syncing favorites successful, visible duration=%{public}f, umcIDs=%{public}s", (uint8_t *)v49, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E01EFA10](v50, -1, -1);
        MEMORY[0x1E01EFA10](v49, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v56 = v59;
      uint64_t v57 = v61;
      sub_1DEA1F784(v62, (uint64_t)v61 + *(int *)(v60 + 20));
      *uint64_t v57 = v30;
      v56(v57);
      sub_1DEB8027C((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for SportsSyncFavoritesFetchResult);
      return;
    }
    if (v28 >= 1)
    {
      uint64_t v29 = 0;
      uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          unint64_t v31 = (void *)MEMORY[0x1E01EE240](v29, a1);
        }
        else
        {
          unint64_t v31 = *(void **)(a1 + 8 * v29 + 32);
          swift_unknownObjectRetain();
        }
        id v32 = objc_msgSend(v31, sel_ID);
        uint64_t v33 = sub_1DFDFDD20();
        uint64_t v35 = v34;
        swift_unknownObjectRelease();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v30 = sub_1DEA8C6EC(0, v30[2] + 1, 1, v30);
        }
        unint64_t v37 = v30[2];
        unint64_t v36 = v30[3];
        if (v37 >= v36 >> 1) {
          uint64_t v30 = sub_1DEA8C6EC((void *)(v36 > 1), v37 + 1, 1, v30);
        }
        ++v29;
        v30[2] = v37 + 1;
        uint64_t v38 = &v30[2 * v37];
        v38[4] = v33;
        v38[5] = v35;
      }
      while (v28 != v29);
      goto LABEL_28;
    }
    __break(1u);
    goto LABEL_36;
  }
  if (qword_1EBAF36B0 != -1) {
LABEL_36:
  }
    swift_once();
  uint64_t v39 = sub_1DFDF01D0();
  __swift_project_value_buffer(v39, (uint64_t)qword_1EBB63458);
  uint64_t v40 = sub_1DFDF01B0();
  os_log_type_t v41 = sub_1DFDFEA40();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134349056;
    sub_1DFDFE560();
    uint64_t v65 = v43;
    sub_1DFDFF680();
    _os_log_impl(&dword_1DE913000, v40, v41, "Service syncing favorites failed resulted in unexpected error, visible duration=%{public}f", v42, 0xCu);
    MEMORY[0x1E01EFA10](v42, -1, -1);
  }

  sub_1DEB801BC();
  uint64_t v44 = (void *)swift_allocError();
  *uint64_t v45 = 0;
  a4();
}

uint64_t sub_1DEB7ECCC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1DEAE85BC(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  os_log_type_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void (**)(uint64_t, char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1DEB800E0();
    a2 = sub_1DFDFE220();
  }
  if (a3)
  {
    sub_1DFDE7570();
    uint64_t v12 = sub_1DFDE7600();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = sub_1DFDE7600();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  id v14 = a4;
  v11(a2, v10, a4);
  swift_release();

  swift_bridgeObjectRelease();
  return sub_1DEAEA868((uint64_t)v10);
}

uint64_t sub_1DEB7EE60(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v2 = MEMORY[0x1E4FBC848];
  if (*(void *)(*(void *)a1 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1DE9CF628(0, (unint64_t *)&qword_1EBAA79E0, v2 + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1DFDEDF30();
    MEMORY[0x1E01ECA20]();
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1DFDFE320();
    }
    sub_1DFDFE370();
    a1 = sub_1DFDFE250();
  }
  if (*(void *)(*(void *)(v1 + 8) + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1DE9CF628(0, (unint64_t *)&qword_1EBAA79E0, v2 + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1DFDEDF30();
    MEMORY[0x1E01ECA20]();
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1DFDFE320();
    }
    sub_1DFDFE370();
    a1 = sub_1DFDFE250();
  }
  MEMORY[0x1F4188790](a1);
  sub_1DE9CF628(0, (unint64_t *)&unk_1EAC36A20, v2 + 8, MEMORY[0x1E4FBB320]);
  sub_1DFDEE090();
  id v3 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDDF0();
  swift_release();

  uint64_t v4 = (void *)sub_1DFDEDCE0();
  uint64_t v5 = sub_1DFDEDED0();
  swift_release();

  swift_bridgeObjectRelease();
  return v5;
}

void sub_1DEB7F15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = qword_1EBAF36B0;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1DFDF01D0();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBB63458);
  sub_1DEB80004(a5, (uint64_t)aBlock);
  uint64_t v13 = sub_1DFDF01B0();
  os_log_type_t v14 = sub_1DFDFEA60();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v29 = a3;
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = v10;
    uint64_t v19 = a4;
    uint64_t v20 = MEMORY[0x1E01ECA60](v17, MEMORY[0x1E4FBB1A0]);
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v23 = v20;
    a4 = v19;
    uint64_t v10 = v18;
    sub_1DEA5CAB8(v23, v22, &v30);
    a3 = v29;
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    sub_1DEB80060((uint64_t)aBlock);
    _os_log_impl(&dword_1DE913000, v13, v14, "Service syncing added favorites, ids=%{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v16, -1, -1);
    MEMORY[0x1E01EFA10](v15, -1, -1);
  }
  else
  {
    sub_1DEB80060((uint64_t)aBlock);
  }

  CFTimeInterval v24 = CACurrentMediaTime();
  id v25 = sub_1DEB7DB3C();
  unint64_t v26 = (void *)sub_1DFDFE200();
  swift_weakInit();
  swift_weakDestroy();
  uint64_t v27 = (CFTimeInterval *)swift_allocObject();
  v27[2] = v24;
  *((void *)v27 + 3) = a3;
  *((void *)v27 + 4) = a4;
  *((void *)v27 + 5) = sub_1DEB80558;
  *((void *)v27 + 6) = v10;
  aBlock[4] = sub_1DEB8013C;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DEB7F49C;
  aBlock[3] = &block_descriptor_14;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v25, sel_addFavorites_completion_, v26, v28);
  _Block_release(v28);
}

uint64_t sub_1DEB7F49C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1DEB800E0();
    uint64_t v4 = sub_1DFDFE220();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1DEB7F530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = qword_1EBAF36B0;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1DFDF01D0();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBB63458);
  sub_1DEB80004(a5, (uint64_t)aBlock);
  uint64_t v13 = sub_1DFDF01B0();
  os_log_type_t v14 = sub_1DFDFEA60();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v29 = a3;
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = v10;
    uint64_t v19 = a4;
    uint64_t v20 = MEMORY[0x1E01ECA60](v17, MEMORY[0x1E4FBB1A0]);
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v23 = v20;
    a4 = v19;
    uint64_t v10 = v18;
    sub_1DEA5CAB8(v23, v22, &v30);
    a3 = v29;
    sub_1DFDFF680();
    swift_bridgeObjectRelease();
    sub_1DEB80060((uint64_t)aBlock);
    _os_log_impl(&dword_1DE913000, v13, v14, "Service syncing removed favorites, ids=%{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01EFA10](v16, -1, -1);
    MEMORY[0x1E01EFA10](v15, -1, -1);
  }
  else
  {
    sub_1DEB80060((uint64_t)aBlock);
  }

  CFTimeInterval v24 = CACurrentMediaTime();
  id v25 = sub_1DEB7DB3C();
  unint64_t v26 = (void *)sub_1DFDFE200();
  swift_weakInit();
  swift_weakDestroy();
  uint64_t v27 = (CFTimeInterval *)swift_allocObject();
  v27[2] = v24;
  *((void *)v27 + 3) = a3;
  *((void *)v27 + 4) = a4;
  *((void *)v27 + 5) = sub_1DEAB8D3C;
  *((void *)v27 + 6) = v10;
  aBlock[4] = sub_1DEB800B8;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DEB7F49C;
  aBlock[3] = &block_descriptor_6;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v25, sel_removeFavorites_completion_, v26, v28);
  _Block_release(v28);
}

void sub_1DEB7F870(int a1, id a2, void (*a3)(id), int a4, void (*a5)(void), int a6, uint64_t (*a7)(void), const char *a8, const char *a9)
{
  if (a2)
  {
    id v13 = a2;
    if (qword_1EBAF36B0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1DFDF01D0();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBB63458);
    id v15 = a2;
    id v16 = a2;
    uint64_t v17 = sub_1DFDF01B0();
    os_log_type_t v18 = a7();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = v20;
      *(_DWORD *)uint64_t v19 = 136446466;
      swift_getErrorValue();
      uint64_t v21 = sub_1DFE00060();
      sub_1DEA5CAB8(v21, v22, &v29);
      sub_1DFDFF680();
      swift_bridgeObjectRelease();

      *(_WORD *)(v19 + 12) = 2050;
      sub_1DFDFE560();
      sub_1DFDFF680();
      _os_log_impl(&dword_1DE913000, v17, v18, a8, (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v20, -1, -1);
      MEMORY[0x1E01EFA10](v19, -1, -1);
    }
    else
    {
    }
    a3(a2);
  }
  else
  {
    if (qword_1EBAF36B0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1DFDF01D0();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EBB63458);
    id v25 = sub_1DFDF01B0();
    os_log_type_t v26 = sub_1DFDFEA60();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 134349056;
      sub_1DFDFE560();
      uint64_t v29 = v28;
      sub_1DFDFF680();
      _os_log_impl(&dword_1DE913000, v25, v26, a9, v27, 0xCu);
      MEMORY[0x1E01EFA10](v27, -1, -1);
    }

    a5();
  }
}

uint64_t sub_1DEB7FBB8()
{
  sub_1DE9CF628(0, (unint64_t *)&qword_1EBAA79E0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_1DFDEDCE0();
  sub_1DEB7FEF4();
  sub_1DEB7FF74();
  uint64_t v1 = sub_1DFDEDDC0();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1DEB7FC78()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DEB7FCE0()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DEB7FD4C(uint64_t a1, uint64_t a2)
{
  return sub_1DEB7FE3C(a1, a2, &qword_1EBAD2A00, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncSetting);
}

uint64_t sub_1DEB7FD80()
{
  return sub_1DFDEDF30();
}

uint64_t sub_1DEB7FE08(uint64_t a1, uint64_t a2)
{
  return sub_1DEB7FE3C(a1, a2, &qword_1EBAF5EA0, (uint64_t (*)(uint64_t))type metadata accessor for SportsSyncFavoritesFetchResult);
}

uint64_t sub_1DEB7FE3C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  return sub_1DFDEDF30();
}

uint64_t sub_1DEB7FEA4(uint64_t a1)
{
  return sub_1DEB7EE60(a1);
}

void sub_1DEB7FEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DEB7F15C(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void sub_1DEB7FED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DEB7F530(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1DEB7FED8()
{
  return sub_1DEB7FBB8();
}

void sub_1DEB7FEF4()
{
  if (!qword_1EBABA720)
  {
    sub_1DE9CF628(255, (unint64_t *)&qword_1EBAA79E0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    unint64_t v0 = sub_1DFDFE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABA720);
    }
  }
}

unint64_t sub_1DEB7FF74()
{
  unint64_t result = qword_1EBABA730;
  if (!qword_1EBABA730)
  {
    sub_1DEB7FEF4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABA730);
  }
  return result;
}

uint64_t sub_1DEB7FFCC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEB80004(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DEB80060(uint64_t a1)
{
  return a1;
}

void sub_1DEB800B8(int a1, void *a2)
{
  sub_1DEB80164(a1, a2, MEMORY[0x1E4FBD390], "Service sync removed favorites resulted in error=%{public}s, visible duration=%{public}f", "Service sync removed favorites successfully, visible duration=%{public}f");
}

unint64_t sub_1DEB800E0()
{
  unint64_t result = qword_1EBAF5D60;
  if (!qword_1EBAF5D60)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAF5D60);
  }
  return result;
}

void sub_1DEB8013C(int a1, void *a2)
{
  sub_1DEB80164(a1, a2, MEMORY[0x1E4FBD380], "Service sync added favorites resulted in error=%{public}s, visible duration=%{public}f", "Service sync added favorites updated successfully, visible duration=%{public}f");
}

void sub_1DEB80164(int a1, void *a2, uint64_t (*a3)(void), const char *a4, const char *a5)
{
  sub_1DEB7F870(a1, a2, *(void (**)(id))(v5 + 24), *(void *)(v5 + 32), *(void (**)(void))(v5 + 40), *(void *)(v5 + 48), a3, a4, a5);
}

void sub_1DEB801A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1DEB801AC(unint64_t a1, uint64_t a2, void *a3)
{
  sub_1DEB7E5DC(a1, a2, a3, *(void (**)(void))(v3 + 24), *(void *)(v3 + 32), *(void (**)(void *))(v3 + 40), *(void *)(v3 + 48));
}

unint64_t sub_1DEB801BC()
{
  unint64_t result = qword_1EBAF8C88;
  if (!qword_1EBAF8C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF8C88);
  }
  return result;
}

void sub_1DEB80210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DEB7E024(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1DEB80218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsSyncSetting();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEB8027C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DEB802E0(void *a1)
{
  sub_1DEB7E374(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_1DEB802EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1DEB802F8(char a1, uint64_t a2, void *a3)
{
  sub_1DEB7DCBC(a1, a2, a3, *(void (**)(void *))(v3 + 16), *(void *)(v3 + 24), *(void (**)(char *))(v3 + 32));
}

uint64_t sub_1DEB80304(uint64_t a1, uint64_t a2)
{
  sub_1DEAE85BC(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEB80398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsSyncSetting();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SportsSyncService.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEB804C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsSyncService.Errors()
{
  return &type metadata for SportsSyncService.Errors;
}

unint64_t sub_1DEB80504()
{
  unint64_t result = qword_1EAC20F80;
  if (!qword_1EAC20F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20F80);
  }
  return result;
}

uint64_t *sub_1DEB8057C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1DEB806EC();
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v8, 1, v10))
    {
      uint64_t v13 = type metadata accessor for SavedFeedGapLocation(0);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
  }
  return v3;
}

void sub_1DEB806EC()
{
  if (!qword_1EBAF2970)
  {
    type metadata accessor for SavedFeedServiceConfig();
    sub_1DEB80750();
    unint64_t v0 = sub_1DFDFA160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF2970);
    }
  }
}

unint64_t sub_1DEB80750()
{
  unint64_t result = qword_1EBAC3860;
  if (!qword_1EBAC3860)
  {
    type metadata accessor for SavedFeedServiceConfig();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC3860);
  }
  return result;
}

uint64_t sub_1DEB807A8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1DEB806EC();
  uint64_t v6 = v5;
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v4, v6);
  }
  return result;
}

void *sub_1DEB80878(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_1DEB806EC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v7, 1, v9))
  {
    uint64_t v12 = type metadata accessor for SavedFeedGapLocation(0);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  return a1;
}

void *sub_1DEB80998(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DEB806EC();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v7, 1, v9);
  int v14 = v12(v8, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v7, v8, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = type metadata accessor for SavedFeedGapLocation(0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  return a1;
}

_OWORD *sub_1DEB80B2C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  sub_1DEB806EC();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7))
  {
    uint64_t v10 = type metadata accessor for SavedFeedGapLocation(0);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  }
  return a1;
}

void *sub_1DEB80C3C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DEB806EC();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v8, 1, v10);
  int v15 = v13(v9, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v8, v9, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = type metadata accessor for SavedFeedGapLocation(0);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  return a1;
}

uint64_t sub_1DEB80DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEB80DD4);
}

uint64_t sub_1DEB80DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SavedFeedGapLocation(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DEB80E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEB80E98);
}

uint64_t sub_1DEB80E98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SavedFeedGapLocation(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SavedFeedExpandRequest()
{
  uint64_t result = qword_1EBAEF830;
  if (!qword_1EBAEF830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEB80F8C()
{
  uint64_t result = type metadata accessor for SavedFeedGapLocation(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DEB81024(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DEB25C28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_1DEB810D4(uint64_t a1)
{
  sub_1DEB25C28();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1DEB81138(uint64_t a1, uint64_t a2)
{
  sub_1DEB25C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DEB8119C(uint64_t a1, uint64_t a2)
{
  sub_1DEB25C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DEB81200(uint64_t a1, uint64_t a2)
{
  sub_1DEB25C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DEB81264(uint64_t a1, uint64_t a2)
{
  sub_1DEB25C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DEB812C8(uint64_t a1, uint64_t a2)
{
  sub_1DEB25C28();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DEB81334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEB25C28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t type metadata accessor for PuzzleContinuePlayingModel()
{
  uint64_t result = qword_1EAC20F90;
  if (!qword_1EAC20F90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DEB813FC(uint64_t a1)
{
  sub_1DEB25C28();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8);
    swift_initEnumMetadataSingleCase();
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
}

uint64_t sub_1DEB814A0()
{
  sub_1DEB25C28();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB8229C(v0, (uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
  uint64_t v9 = sub_1DFDF9A60();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v9;
}

uint64_t sub_1DEB815E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DEB81930(&qword_1EAC20FB8);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1DEB81650(uint64_t a1, uint64_t a2)
{
  sub_1DEB25C28();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v20 - v10;
  sub_1DEB82300();
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  int v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1DEB8229C(a1, (uint64_t)v15);
  sub_1DEB8229C(a2, v16);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v11, v15, v5);
  v17(v9, (char *)v16, v5);
  sub_1DEB25CA8();
  sub_1DEB25CFC();
  LOBYTE(a2) = sub_1DFDF9A70();
  os_log_type_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  v18(v11, v5);
  return a2 & 1;
}

uint64_t sub_1DEB8182C()
{
  return sub_1DEB81930(&qword_1EAC20FA0);
}

uint64_t sub_1DEB81860()
{
  return sub_1DEB81930(&qword_1EAC20FA8);
}

uint64_t sub_1DEB81894()
{
  return sub_1DEB81930(&qword_1EAC20FB0);
}

uint64_t sub_1DEB818C8()
{
  return sub_1DEB81930(&qword_1EAC20FB8);
}

uint64_t sub_1DEB818FC()
{
  return sub_1DEB81930(&qword_1EAC20FC0);
}

uint64_t sub_1DEB81930(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PuzzleContinuePlayingModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEB81974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  sub_1DEA3C638();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v31[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDE7220();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v31[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v31[-1] - v10;
  sub_1DEB25C28();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v31[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PuzzleContinuePlayingModel();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v31[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB8229C(v1, (uint64_t)v19);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
  sub_1DFDF9A80();
  uint64_t v20 = (void *)v31[0];
  swift_unknownObjectRetain();
  sub_1DEB25D50((uint64_t)v31);
  id v21 = objc_msgSend(v20, sel_identifier);
  swift_unknownObjectRelease();
  if (!v21)
  {
    sub_1DFDFDD20();
    id v21 = (id)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
  }
  id v22 = objc_msgSend(self, sel_nss_NewsURLForPuzzleID_, v21);

  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_8;
  }
  sub_1DFDE7190();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v23(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    sub_1DEB4B7AC((uint64_t)v4);
    uint64_t v26 = sub_1DFDF5740();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v30, 1, 1, v26);
  }
  v23(v11, v4, v5);
  sub_1DFDE7130();
  sub_1DFDF9A80();
  uint64_t v24 = (void *)v31[0];
  swift_unknownObjectRetain();
  sub_1DEB25D50((uint64_t)v31);
  id v25 = objc_msgSend(v24, sel_title);
  swift_unknownObjectRelease();
  if (v25)
  {
    sub_1DFDFDD20();
  }
  uint64_t v28 = v30;
  sub_1DFDF5730();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v29 = sub_1DFDF5740();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
}

uint64_t sub_1DEB81E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1DEB25C28();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v18 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB8229C(v2, (uint64_t)v14);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v14, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  sub_1DEB259A4((uint64_t)v9, a1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  uint64_t v15 = *MEMORY[0x1E4F80308];
  uint64_t v16 = sub_1DFDF98C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a1, v15, v16);
}

uint64_t sub_1DEB81FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  v30[0] = a2;
  v30[1] = a3;
  v30[2] = a4;
  v30[3] = a5;
  void v30[4] = a6;
  v30[5] = a7;
  v30[6] = a8;
  v30[7] = a9;
  uint64_t v12 = sub_1DFDF0370();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v30 - v14;
  sub_1DEB25C28();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  id v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v30 - v22;
  uint64_t v24 = type metadata accessor for PuzzleContinuePlayingModel();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB8229C(v10, (uint64_t)v26);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v26, v17);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v28 = sub_1DFA470C4((uint64_t)v21, (uint64_t)v15, v12, WitnessTable);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
  return v28;
}

uint64_t sub_1DEB82260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1DEB81FF4(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1DEB8226C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return MEMORY[0x1F4161238](a1, a10, a2, a3, a4, a5, a11, a6, a7, a8, a9);
}

uint64_t sub_1DEB8229C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleContinuePlayingModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DEB82300()
{
  if (!qword_1EAC20FC8)
  {
    type metadata accessor for PuzzleContinuePlayingModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC20FC8);
    }
  }
}

uint64_t sub_1DEB82364()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DEB823A8(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_1DEB82480(*a4);
}

uint64_t sub_1DEB823D0@<X0>(void **a1@<X3>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1DEB827F0(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1DEB82404(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v5 = *a4;
  uint64_t v6 = *(void *)(*(void *)v4 + 32);
  uint64_t v7 = *(void *)(*(void *)v4 + 16);
  swift_getObjectType();
  LODWORD(v7) = objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC7NewsUI219SubscriptionService_subscriptionController), sel_hasSubscriptionToTag_, *((void *)sub_1DF089C58(v5, v7) + 2));
  swift_release();
  return v7 ^ 1;
}

uint64_t sub_1DEB82480(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_getObjectType();
  uint64_t v4 = (id *)sub_1DF089C58(a1, v3);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = OBJC_IVAR____TtC7NewsUI219SubscriptionService_subscriptionController;
  uint64_t v7 = *(void **)(v5 + OBJC_IVAR____TtC7NewsUI219SubscriptionService_subscriptionController);
  id v8 = objc_msgSend(v4[2], sel_identifier);
  sub_1DFDFDD20();

  uint64_t v9 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  LODWORD(v7) = objc_msgSend(v7, sel_hasIgnoredSubscriptionForTagID_, v9);

  if (v7)
  {
    sub_1DFCD8634((uint64_t)v4, 0, v5);
    return swift_release();
  }
  else
  {
    sub_1DEA086BC();
    uint64_t v11 = swift_allocObject();
    long long v27 = xmmword_1DFE0B250;
    *(_OWORD *)(v11 + 16) = xmmword_1DFE0B250;
    uint64_t v12 = TagModel.description.getter();
    uint64_t v14 = v13;
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v16 = sub_1DEA08668();
    *(void *)(v11 + 64) = v16;
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v14;
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB0D0);
    uint64_t v17 = (void *)sub_1DFDFF5F0();
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();

    if (objc_msgSend(self, sel_isMainThread))
    {
      uint64_t v18 = *(void **)(v5 + v6);
      id v19 = objc_msgSend(v4[2], sel_identifier);
      if (!v19)
      {
        sub_1DFDFDD20();
        id v19 = (id)sub_1DFDFDCE0();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v18, sel_addIgnoredSubscriptionForTagID_, v19, 1, 2);
    }
    else
    {
      sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
      uint64_t v20 = (void *)sub_1DFDFEE60();
      MEMORY[0x1F4188790](v20);
      sub_1DFDFEE70();
    }
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v27;
    uint64_t v22 = TagModel.description.getter();
    *(void *)(v21 + 56) = v15;
    *(void *)(v21 + 64) = v16;
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v23;
    uint64_t v24 = (void *)sub_1DFDFF5F0();
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();

    uint64_t v25 = *(void *)(v5 + OBJC_IVAR____TtC7NewsUI219SubscriptionService_tagService);
    id v26 = v4[2];
    swift_getObjectType();
    sub_1DF089C68(v26, 0, v25);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1DEB827F0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 16);
  swift_getObjectType();
  uint64_t v5 = (id *)sub_1DF089C58(a1, v4);
  uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC7NewsUI219SubscriptionService_subscriptionController);
  id v7 = objc_msgSend(v5[2], sel_identifier);
  sub_1DFDFDD20();

  id v8 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  LODWORD(v6) = objc_msgSend(v6, sel_hasIgnoredSubscriptionForTagID_, v8);
  swift_release();

  return v6 ^ 1;
}

void sub_1DEB828B8(unsigned __int8 *a1@<X8>)
{
  sub_1DFCD8614(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t *sub_1DEB828D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDE7600();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DEA200D0(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *sub_1DEB82A7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA200D0(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1DEB82BD4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA200D0(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1DEB82D9C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DEA200D0(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1DEB82EF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1DEA200D0(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DEB830B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEB830C4);
}

uint64_t sub_1DEB830C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA200D0(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DEB831B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEB831C8);
}

void sub_1DEB831C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEA200D0(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1DEB832B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v35 = type metadata accessor for HistoryFeedConfig();
  MEMORY[0x1F4188790](v35);
  unint64_t v36 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA200D0(0, &qword_1EBAEBA20, (uint64_t (*)(uint64_t))sub_1DEB83BDC, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v32 - v6;
  sub_1DEA200D0(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], v4);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v32 - v9;
  sub_1DEB83D60(0, &qword_1EBAEBA90, MEMORY[0x1E4FAAF08]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v32 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEB83CA8();
  uint64_t v16 = (uint64_t)v37;
  sub_1DFE00160();
  if (!v16)
  {
    uint64_t v17 = v13;
    uint64_t v18 = (uint64_t)v36;
    sub_1DFDE7600();
    char v39 = 0;
    sub_1DEB83DC4((unint64_t *)&unk_1EBAA6D90, MEMORY[0x1E4F27928]);
    sub_1DFDEDB30();
    unint64_t v37 = v10;
    sub_1DEB83BDC();
    uint64_t v20 = v19;
    char v38 = 1;
    sub_1DEB83DC4(&qword_1EBAEBA10, (void (*)(uint64_t))sub_1DEB83BDC);
    uint64_t v21 = (uint64_t)v7;
    uint64_t v22 = v20;
    sub_1DFDEDB30();
    uint64_t v33 = v15;
    uint64_t v24 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v20) == 1)
    {
      sub_1DEA08E54(v21, &qword_1EBAEBA20, (uint64_t (*)(uint64_t))sub_1DEB83BDC);
      uint64_t v25 = (uint64_t)v37;
      uint64_t v26 = v18;
      sub_1DEA1F784((uint64_t)v37, v18);
      uint64_t v27 = v25;
      uint64_t v29 = v34;
      uint64_t v28 = v35;
    }
    else
    {
      uint64_t v30 = sub_1DFDECCD0();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v22);
      uint64_t v31 = (uint64_t)v37;
      uint64_t v26 = v18;
      sub_1DEA1F784((uint64_t)v37, v18);
      uint64_t v27 = v31;
      uint64_t v29 = v34;
      uint64_t v28 = v35;
      if (v30)
      {
LABEL_8:
        sub_1DEA08E54(v27, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
        *(void *)(v26 + *(int *)(v28 + 20)) = v30;
        sub_1DEB83CFC(v26, v29);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v12);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
    }
    uint64_t v30 = MEMORY[0x1E4FBC860];
    goto LABEL_8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DEB837A0(void *a1)
{
  uint64_t v3 = v1;
  sub_1DEB83D60(0, &qword_1EAC20FD0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEB83CA8();
  sub_1DFE001A0();
  char v13 = 0;
  sub_1DFDE7600();
  sub_1DEB83DC4(&qword_1EBAA6D78, MEMORY[0x1E4F27928]);
  sub_1DFDFFE30();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + *(int *)(type metadata accessor for HistoryFeedConfig() + 20));
    v11[15] = 1;
    sub_1DEA200D0(0, &qword_1EAC20FD8, (uint64_t (*)(uint64_t))type metadata accessor for HistoryFeedGroupConfig, MEMORY[0x1E4FBB320]);
    sub_1DEB83E0C();
    sub_1DFDFFE80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DEB839B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DEB840E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEB839E0(uint64_t a1)
{
  unint64_t v2 = sub_1DEB83CA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEB83A1C(uint64_t a1)
{
  unint64_t v2 = sub_1DEB83CA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEB83A58@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEA1F784(v1, a1);
}

uint64_t sub_1DEB83A64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DEB83A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1DEA200D0(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v12 - v9;
  sub_1DEA1F784(v3, (uint64_t)&v12 - v9);
  sub_1DEA1F784((uint64_t)v10, a3);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DEA08E54((uint64_t)v10, (unint64_t *)&qword_1EBAA6DB0, v7);
  *(void *)(a3 + *(int *)(a2 + 20)) = a1;
  return result;
}

uint64_t sub_1DEB83B64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEB832B4(a1, a2);
}

uint64_t sub_1DEB83B7C(void *a1)
{
  return sub_1DEB837A0(a1);
}

uint64_t sub_1DEB83B94()
{
  return sub_1DEB83DC4(&qword_1EBAEF690, (void (*)(uint64_t))type metadata accessor for HistoryFeedGroupConfig);
}

void sub_1DEB83BDC()
{
  if (!qword_1EBAEBA18)
  {
    type metadata accessor for HistoryFeedGroupConfig();
    sub_1DEB83DC4(&qword_1EBAEF6B0, (void (*)(uint64_t))type metadata accessor for HistoryFeedGroupConfig);
    sub_1DEB83DC4(&qword_1EBAEF6A0, (void (*)(uint64_t))type metadata accessor for HistoryFeedGroupConfig);
    unint64_t v0 = sub_1DFDECCE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEBA18);
    }
  }
}

unint64_t sub_1DEB83CA8()
{
  unint64_t result = qword_1EBAEDB00;
  if (!qword_1EBAEDB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAEDB00);
  }
  return result;
}

uint64_t sub_1DEB83CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HistoryFeedConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DEB83D60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEB83CA8();
    unint64_t v7 = a3(a1, &type metadata for HistoryFeedConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DEB83DC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DEB83E0C()
{
  unint64_t result = qword_1EAC20FE0;
  if (!qword_1EAC20FE0)
  {
    sub_1DEA200D0(255, &qword_1EAC20FD8, (uint64_t (*)(uint64_t))type metadata accessor for HistoryFeedGroupConfig, MEMORY[0x1E4FBB320]);
    sub_1DEB83DC4(&qword_1EBAEF6A0, (void (*)(uint64_t))type metadata accessor for HistoryFeedGroupConfig);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20FE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HistoryFeedConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEB83FA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryFeedConfig.CodingKeys()
{
  return &type metadata for HistoryFeedConfig.CodingKeys;
}

unint64_t sub_1DEB83FE4()
{
  unint64_t result = qword_1EAC20FE8;
  if (!qword_1EAC20FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC20FE8);
  }
  return result;
}

unint64_t sub_1DEB8403C()
{
  unint64_t result = qword_1EBAEDB10;
  if (!qword_1EBAEDB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAEDB10);
  }
  return result;
}

unint64_t sub_1DEB84094()
{
  unint64_t result = qword_1EBAEDB08;
  if (!qword_1EBAEDB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAEDB08);
  }
  return result;
}

uint64_t sub_1DEB840E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446873696C627570 && a2 == 0xEB00000000657461;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7370756F7267 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DEB841EC()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioHistoryFeedBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_1DEB84250()
{
  return sub_1DEAC844C(&qword_1EAC24EB0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedSectionDescriptor);
}

uint64_t sub_1DEB84298()
{
  return sub_1DEAC844C((unint64_t *)&unk_1EAC240B0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor);
}

uint64_t sub_1DEB842E0()
{
  return sub_1DEAC844C(&qword_1EAC20FF0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
}

uint64_t sub_1DEB84328()
{
  return sub_1DEAC844C((unint64_t *)&unk_1EAC22910, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedModel);
}

uint64_t sub_1DEB84370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v66 = a3;
  sub_1DEB86A70(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v64 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDF3330();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  MEMORY[0x1F4188790](v7);
  int v61 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1DFDF2BF0();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v58 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1DFDF8D50();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v54 = (uint64_t)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDE81B0();
  MEMORY[0x1F4188790](v11 - 8);
  os_log_type_t v48 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1DFDE81A0();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v49 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDE8170();
  uint64_t v44 = v14;
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v15 = v45;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v17;
  uint64_t v51 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F804E0];
  uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA944D4(0, (unint64_t *)&qword_1EBACA3B0, MEMORY[0x1E4F804E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)v42 - v19;
  uint64_t v47 = sub_1DFDF98E0();
  uint64_t v21 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v23 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *(void *)(v3 + 16);
  (*(void (**)(char *, void))(v21 + 104))(v23, *MEMORY[0x1E4F803A0]);
  uint64_t v24 = sub_1DFDF9D80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v20, 1, 1, v24);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FAB6D8], v14);
  sub_1DFDF2AC0();
  sub_1DFDFF2F0();
  v42[9] = v25;
  v42[8] = v26;
  sub_1DFDF2AC0();
  v42[7] = v27;
  v42[6] = v28;
  sub_1DFDF2B00();
  v42[5] = v29;
  v42[4] = v30;
  sub_1DFDF2A90();
  v42[3] = v31;
  v42[2] = v32;
  sub_1DFDF2B10();
  v42[1] = v33;
  v42[0] = v34;
  sub_1DFDF2AF0();
  sub_1DFDF2AB0();
  sub_1DFDF2AE0();
  sub_1DFDF2B30();
  sub_1DFDF2AD0();
  sub_1DFDF7D50();
  sub_1DFDF7D40();
  sub_1DFDF7D30();
  swift_release();
  uint64_t v35 = v49;
  sub_1DFDE8180();
  uint64_t v36 = v54;
  sub_1DEB84CC0(v54);
  unint64_t v37 = v43;
  uint64_t v38 = sub_1DFDF7770();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v36, v57);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v55);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v44);
  sub_1DEA93F50((uint64_t)v20, (unint64_t *)&qword_1EBACA3B0, v51, v50);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v47);
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, a2, v60);
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, *MEMORY[0x1E4FACB00], v63);
  sub_1DEB87338(0, (unint64_t *)&qword_1EAC22930, MEMORY[0x1E4FAD830]);
  uint64_t v40 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v64, v65, v39);
  uint64_t v68 = v52;
  uint64_t v69 = v38;
  sub_1DEB86B14(v40, (void (*)(void, char *))sub_1DEB86B0C, (uint64_t)v67);
  sub_1DEB875F4(v40, (uint64_t (*)(void))sub_1DEB86A70);
  type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor(0);
  type metadata accessor for AudioHistoryFeedLayoutModel();
  sub_1DEAC844C(&qword_1EAC21008, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor);
  sub_1DEAC844C(&qword_1EAC21010, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
  sub_1DFDF1110();
  return swift_release();
}

uint64_t sub_1DEB84CC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1DFDF8D40();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v21 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DFDF8C60();
  uint64_t v3 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF8C80();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1DFDF8CA0();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1DFDF8CE0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1DFDF8D00();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1DFDF8D10();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA944D4(0, (unint64_t *)&unk_1EBAF57C8, MEMORY[0x1E4F7FC48], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v17 = sub_1DFDF8CC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4F7FC50], v10);
  sub_1DFDF8CF0();
  sub_1DFDF8C90();
  sub_1DFDF8C90();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F7FC38], v20);
  sub_1DFDF8C70();
  sub_1DFDF8D30();
  return sub_1DFDF8D20();
}

uint64_t sub_1DEB850B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AudioHistoryFeedSectionDescriptor();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB87338(0, (unint64_t *)&qword_1EAC22940, MEMORY[0x1E4FAC180]);
  sub_1DFDF14D0();
  sub_1DEB8777C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ArticleListAudioHistoryFeedGroup);
  sub_1DEB85218(a1, a2, (uint64_t)&v9[*(int *)(v7 + 28)], MEMORY[0x1E4FBC870], a3);
  return sub_1DEB875F4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ArticleListAudioHistoryFeedGroup);
}

uint64_t sub_1DEB85218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v91 = a4;
  uint64_t v103 = a2;
  uint64_t v92 = a1;
  uint64_t v96 = a5;
  uint64_t v110 = type metadata accessor for AudioHistoryFeedLayoutModel();
  MEMORY[0x1F4188790](v110);
  uint64_t v108 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1DFDF8FD0();
  uint64_t v111 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v106 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB87654();
  uint64_t v105 = v8;
  uint64_t v74 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v109 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1DFDF4820();
  uint64_t v94 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v98 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v95);
  uint64_t v97 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA944D4(0, (unint64_t *)&qword_1EAC21048, MEMORY[0x1E4F7F240], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Data);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v102 = (uint64_t)&v74 - v13;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA944D4(0, (unint64_t *)&unk_1EBAD2098, MEMORY[0x1E4FAB878], MEMORY[0x1E4FBB718]);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v89 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v88 = (char *)&v74 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v87 = (char *)&v74 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v86 = (char *)&v74 - v22;
  uint64_t v23 = sub_1DFDF7710();
  uint64_t v100 = *(void *)(v23 - 8);
  uint64_t v101 = v23;
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v90 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v99 = (char *)&v74 - v26;
  uint64_t v81 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7F7D8];
  sub_1DEA944D4(0, &qword_1EBABA138, MEMORY[0x1E4F7F7D8], v14);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v74 - v28;
  uint64_t v30 = sub_1DFDF7010();
  uint64_t v84 = v30;
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v74 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7FBB0];
  sub_1DEA944D4(0, &qword_1EBABA218, MEMORY[0x1E4F7FBB0], v14);
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v36 = (char *)&v74 - v35;
  uint64_t v79 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7F3A0];
  sub_1DEA944D4(0, &qword_1EBAE9278, MEMORY[0x1E4F7F3A0], v14);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v39 = (char *)&v74 - v38;
  uint64_t v78 = sub_1DFDFA9F0();
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  os_log_type_t v41 = (char *)&v74 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF6FB0();
  uint64_t v42 = sub_1DFDF7210();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v39, 1, 1, v42);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  uint64_t v83 = v31 + 16;
  os_log_type_t v85 = v43;
  CGRect v82 = v33;
  uint64_t v75 = a3;
  v43(v33, a3, v30);
  sub_1DFDF8BB0();
  uint64_t v44 = sub_1DFDF8BC0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v36, 0, 1, v44);
  uint64_t v45 = sub_1DFDF8130();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v29, 1, 1, v45);
  sub_1DEB87338(0, (unint64_t *)&qword_1EAC22940, MEMORY[0x1E4FAC180]);
  sub_1DEAC844C(&qword_1EAC21050, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedSectionDescriptor);
  sub_1DEAC844C(&qword_1EAC21058, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedModel);
  sub_1DFDF1590();
  uint64_t v76 = v14;
  sub_1DEA93F50((uint64_t)v29, &qword_1EBABA138, v81, v14);
  sub_1DEA93F50((uint64_t)v36, &qword_1EBABA218, v80, v14);
  sub_1DEA93F50((uint64_t)v39, &qword_1EBAE9278, v79, v14);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v77 + 8);
  uint64_t v47 = v78;
  v46(v41, v78);
  sub_1DFDF6FB0();
  uint64_t v48 = sub_1DFDFD080();
  uint64_t v49 = v41;
  uint64_t v50 = (uint64_t)v97;
  v46(v49, v47);
  v112[3] = sub_1DFDFC300();
  v112[4] = MEMORY[0x1E4F81368];
  v112[0] = v48;
  uint64_t v51 = sub_1DFDE81E0();
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56);
  v52(v86, 1, 1, v51);
  v52(v87, 1, 1, v51);
  v52(v88, 1, 1, v51);
  v52(v89, 1, 1, v51);
  sub_1DFDE81D0();
  swift_allocObject();
  uint64_t v93 = v48;
  swift_retain();
  uint64_t v53 = v98;
  sub_1DFDE81C0();
  uint64_t v54 = v99;
  sub_1DFDF7760();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1DEA93F50((uint64_t)v112, &qword_1EBABA290, (uint64_t (*)(uint64_t))sub_1DEAC0498, v76);
  uint64_t v55 = (uint64_t)v82;
  v85(v82, v75, v84);
  uint64_t v56 = (uint64_t)v90;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v90, v54, v101);
  uint64_t v57 = v102;
  sub_1DEB86108(v55, v56, v102);
  sub_1DEB876E8(v57, v50);
  uint64_t v58 = *MEMORY[0x1E4FAD538];
  uint64_t v59 = sub_1DFDF4800();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 104))(v53, v58, v59);
  (*(void (**)(char *, void, uint64_t))(v94 + 104))(v53, *MEMORY[0x1E4FAD540], v104);
  uint64_t v60 = sub_1DFDF76A0();
  int64_t v61 = *(void *)(v60 + 16);
  if (v61)
  {
    v112[0] = MEMORY[0x1E4FBC860];
    sub_1DEDF65D4(0, v61, 0);
    uint64_t v62 = *(void (**)(char *, unint64_t, uint64_t))(v111 + 16);
    unint64_t v63 = (*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
    uint64_t v94 = v60;
    unint64_t v64 = v60 + v63;
    uint64_t v104 = *(void *)(v111 + 72);
    v111 += 16;
    uint64_t v65 = (void (**)(char *, uint64_t))(v111 - 8);
    uint64_t v66 = v74;
    uint64_t v103 = v74 + 32;
    uint64_t v67 = v106;
    do
    {
      uint64_t v68 = v107;
      v62(v67, v64, v107);
      v62(v108, (unint64_t)v67, v68);
      sub_1DEAC844C(&qword_1EAC20FF0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
      sub_1DFDF2110();
      (*v65)(v67, v68);
      uint64_t v69 = v112[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF65D4(0, *(void *)(v69 + 16) + 1, 1);
        uint64_t v69 = v112[0];
      }
      unint64_t v71 = *(void *)(v69 + 16);
      unint64_t v70 = *(void *)(v69 + 24);
      uint64_t v72 = v109;
      if (v71 >= v70 >> 1)
      {
        sub_1DEDF65D4(v70 > 1, v71 + 1, 1);
        uint64_t v69 = v112[0];
      }
      *(void *)(v69 + 16) = v71 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v69+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v71, v72, v105);
      v112[0] = v69;
      v64 += v104;
      --v61;
    }
    while (v61);
  }
  swift_bridgeObjectRelease();
  sub_1DEAC844C(&qword_1EAC21008, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor);
  sub_1DEAC844C(&qword_1EAC21010, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
  sub_1DFDF2C30();
  swift_release();
  sub_1DEA93F50(v102, (unint64_t *)&qword_1EAC21048, MEMORY[0x1E4F7F240], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Data);
  return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v99, v101);
}

uint64_t sub_1DEB86108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Header(0);
  uint64_t v81 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1DFDF94D0();
  uint64_t v9 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v11 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Footer(0);
  uint64_t v82 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v78 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1DFDF7FE0();
  uint64_t v68 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v84 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Decoration(0);
  uint64_t v83 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v86 = (char *)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DFDF4140();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DFDF7010();
  uint64_t v73 = *(void *)(v21 - 8);
  uint64_t v74 = v21;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v73 + 16);
  uint64_t v75 = a1;
  v22(a3, a1);
  uint64_t v23 = *MEMORY[0x1E4FAD2B0];
  unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
  uint64_t v71 = v18 + 104;
  v70(v20, v23, v17);
  uint64_t v24 = sub_1DFDF76F0();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v25 = v18 + 8;
  uint64_t v72 = v20;
  uint64_t v69 = v26;
  v26(v20, v17);
  int64_t v27 = *(void *)(v24 + 16);
  uint64_t v76 = a2;
  uint64_t v77 = a3;
  uint64_t v67 = v9;
  if (v27)
  {
    v65[1] = v25;
    uint64_t v66 = v17;
    uint64_t v88 = MEMORY[0x1E4FBC860];
    sub_1DEDF658C(0, v27, 0);
    uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v28 = v9 + 16;
    uint64_t v29 = v30;
    unint64_t v31 = (*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64);
    v65[0] = v24;
    unint64_t v32 = v24 + v31;
    uint64_t v79 = *(void *)(v28 + 56);
    uint64_t v80 = v8;
    do
    {
      uint64_t v33 = v87;
      v29(v11, v32, v87);
      v29(v8, (unint64_t)v11, v33);
      (*(void (**)(char *, uint64_t))(v28 - 8))(v11, v33);
      uint64_t v34 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF658C(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v88;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1DEDF658C(v35 > 1, v36 + 1, 1);
        uint64_t v34 = v88;
      }
      *(void *)(v34 + 16) = v36 + 1;
      uint64_t v8 = v80;
      sub_1DEB8777C((uint64_t)v80, v34+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v36, type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Header);
      v32 += v79;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    a2 = v76;
    a3 = v77;
    uint64_t v17 = v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  sub_1DEA944D4(0, (unint64_t *)&qword_1EAC21048, MEMORY[0x1E4F7F240], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Data);
  uint64_t v38 = v37;
  *(void *)(a3 + *(int *)(v37 + 28)) = v34;
  uint64_t v39 = v72;
  v70(v72, *MEMORY[0x1E4FAD2A8], v17);
  uint64_t v40 = sub_1DFDF76F0();
  v69(v39, v17);
  int64_t v41 = *(void *)(v40 + 16);
  uint64_t v80 = (char *)v38;
  if (v41)
  {
    uint64_t v88 = MEMORY[0x1E4FBC860];
    sub_1DEDF6544(0, v41, 0);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v43 = *(unsigned __int8 *)(v67 + 80);
    uint64_t v79 = v40;
    uint64_t v44 = v40 + ((v43 + 32) & ~v43);
    uint64_t v81 = *(void *)(v67 + 72);
    uint64_t v45 = (void (**)(char *, uint64_t))(v67 + 8);
    uint64_t v46 = (uint64_t)v78;
    do
    {
      uint64_t v47 = v87;
      v42(v11, v44, v87);
      v42((char *)v46, (uint64_t)v11, v47);
      (*v45)(v11, v47);
      uint64_t v48 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF6544(0, *(void *)(v48 + 16) + 1, 1);
        uint64_t v46 = (uint64_t)v78;
        uint64_t v48 = v88;
      }
      unint64_t v50 = *(void *)(v48 + 16);
      unint64_t v49 = *(void *)(v48 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1DEDF6544(v49 > 1, v50 + 1, 1);
        uint64_t v46 = (uint64_t)v78;
        uint64_t v48 = v88;
      }
      *(void *)(v48 + 16) = v50 + 1;
      sub_1DEB8777C(v46, v48+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v50, type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Footer);
      v44 += v81;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
    a2 = v76;
    a3 = v77;
    uint64_t v38 = (uint64_t)v80;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x1E4FBC860];
  }
  *(void *)(a3 + *(int *)(v38 + 32)) = v48;
  uint64_t v51 = sub_1DFDF76E0();
  int64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = MEMORY[0x1E4FBC860];
  if (v52)
  {
    uint64_t v88 = MEMORY[0x1E4FBC860];
    sub_1DEDF64FC(0, v52, 0);
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    uint64_t v55 = *(unsigned __int8 *)(v68 + 80);
    uint64_t v82 = v51;
    uint64_t v56 = v51 + ((v55 + 32) & ~v55);
    uint64_t v87 = *(void *)(v68 + 72);
    uint64_t v57 = (void (**)(char *, uint64_t))(v68 + 8);
    uint64_t v58 = (uint64_t)v86;
    do
    {
      uint64_t v60 = v84;
      uint64_t v59 = v85;
      v54(v84, v56, v85);
      v54((char *)v58, (uint64_t)v60, v59);
      (*v57)(v60, v59);
      uint64_t v53 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF64FC(0, *(void *)(v53 + 16) + 1, 1);
        uint64_t v53 = v88;
      }
      unint64_t v62 = *(void *)(v53 + 16);
      unint64_t v61 = *(void *)(v53 + 24);
      uint64_t v58 = (uint64_t)v86;
      if (v62 >= v61 >> 1)
      {
        sub_1DEDF64FC(v61 > 1, v62 + 1, 1);
        uint64_t v58 = (uint64_t)v86;
        uint64_t v53 = v88;
      }
      *(void *)(v53 + 16) = v62 + 1;
      sub_1DEB8777C(v58, v53+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v83 + 72) * v62, type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Decoration);
      v56 += v87;
      --v52;
    }
    while (v52);
    a2 = v76;
    a3 = v77;
    uint64_t v38 = (uint64_t)v80;
  }
  uint64_t v63 = sub_1DFDF7710();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(a2, v63);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v75, v74);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + *(int *)(v38 + 36)) = v53;
  return result;
}

uint64_t sub_1DEB86A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DEB84370(a1, a2, a3);
}

void sub_1DEB86A70(uint64_t a1)
{
}

uint64_t sub_1DEB86AAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEB87338(255, (unint64_t *)&qword_1EAC22930, MEMORY[0x1E4FAD830]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEB86B0C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1DEB850B8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1DEB86B14(uint64_t a1, void (*a2)(void, char *), uint64_t a3)
{
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  sub_1DEB8724C();
  uint64_t v64 = v4;
  uint64_t v73 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v74 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB87338(0, (unint64_t *)&qword_1EAC22940, MEMORY[0x1E4FAC180]);
  uint64_t v7 = v6;
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v72 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v71 = (char *)v53 - v10;
  sub_1DEB8742C();
  uint64_t v70 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v69 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v63 = (void *)((char *)v53 - v15);
  MEMORY[0x1F4188790](v14);
  unint64_t v62 = (void *)((char *)v53 - v16);
  sub_1DEB87338(0, (unint64_t *)&qword_1EAC22930, MEMORY[0x1E4FAD830]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v53 - v20;
  sub_1DEB86A70(0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB874B4(0);
  uint64_t v26 = v25 - 8;
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = MEMORY[0x1E4FBC860];
  sub_1DEDF64B4(0, 0, 0);
  sub_1DEB874F0(a1, (uint64_t)v24);
  uint64_t v59 = (void (**)(char *, uint64_t))v19;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v24, v18);
  sub_1DEB86AAC(&qword_1EAC21000);
  uint64_t v68 = v21;
  sub_1DFDFDFB0();
  uint64_t v67 = *(int *)(v26 + 44);
  *(void *)&v28[v67] = 0;
  sub_1DEB87554(0, &qword_1EAC21030, &qword_1EAC21038, MEMORY[0x1E4FAD840], MEMORY[0x1E4FBBC18]);
  uint64_t v30 = &v28[*(int *)(v29 + 36)];
  uint64_t v31 = sub_1DEB86AAC(&qword_1EAC21038);
  uint64_t v32 = *(void *)v30;
  sub_1DFDFE720();
  if (v32 == v75[0])
  {
LABEL_2:
    sub_1DEB875F4((uint64_t)v28, (uint64_t (*)(void))sub_1DEB874B4);
    return v76;
  }
  else
  {
    uint64_t v60 = (void (**)(char *, char *, uint64_t))(v59 + 2);
    unint64_t v61 = (void (**)(char *))(v58 + 16);
    ++v59;
    uint64_t v34 = (uint64_t (**)(char *, char *, uint64_t))(v58 + 32);
    v53[1] = v73 + 32;
    uint64_t v58 = v7;
    uint64_t v57 = v28;
    uint64_t v56 = v30;
    uint64_t v55 = v31;
    uint64_t v54 = v18;
    while (1)
    {
      unint64_t v35 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      unint64_t v36 = v72;
      (*v61)(v72);
      v35(v75, 0);
      uint64_t v37 = v68;
      (*v60)(v68, v28, v18);
      sub_1DFDFE730();
      (*v59)(v37, v18);
      uint64_t v38 = *v34;
      uint64_t v39 = v71;
      (*v34)(v71, v36, v7);
      uint64_t v40 = v70;
      int64_t v41 = &v69[*(int *)(v70 + 48)];
      uint64_t v42 = v7;
      uint64_t v43 = v67;
      uint64_t v44 = *(void *)&v28[v67];
      uint64_t result = v38(v41, v39, v42);
      if (__OFADD__(v44, 1)) {
        break;
      }
      *(void *)&v28[v43] = v44 + 1;
      uint64_t v45 = (uint64_t)v63;
      uint64_t v46 = (char *)v63 + *(int *)(v40 + 48);
      *uint64_t v63 = v44;
      v38(v46, v41, v42);
      uint64_t v47 = (char *)v62;
      sub_1DEB8777C(v45, (uint64_t)v62, (uint64_t (*)(void))sub_1DEB8742C);
      v65(*(void *)v47, &v47[*(int *)(v40 + 48)]);
      sub_1DEB875F4((uint64_t)v47, (uint64_t (*)(void))sub_1DEB8742C);
      uint64_t v48 = v76;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF64B4(0, *(void *)(v48 + 16) + 1, 1);
        uint64_t v48 = v76;
      }
      uint64_t v18 = v54;
      unint64_t v49 = v56;
      unint64_t v51 = *(void *)(v48 + 16);
      unint64_t v50 = *(void *)(v48 + 24);
      uint64_t v28 = v57;
      if (v51 >= v50 >> 1)
      {
        sub_1DEDF64B4(v50 > 1, v51 + 1, 1);
        uint64_t v48 = v76;
      }
      *(void *)(v48 + 16) = v51 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))(v48+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v51, v74, v64);
      uint64_t v76 = v48;
      uint64_t v52 = *(void *)v49;
      sub_1DFDFE720();
      uint64_t v7 = v58;
      if (v52 == v75[0]) {
        goto LABEL_2;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1DEB8724C()
{
  if (!qword_1EAC21018)
  {
    type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor(255);
    type metadata accessor for AudioHistoryFeedLayoutModel();
    sub_1DEAC844C((unint64_t *)&unk_1EAC240B0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor);
    sub_1DEAC844C(&qword_1EAC20FF0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
    unint64_t v0 = sub_1DFDF2C40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21018);
    }
  }
}

void sub_1DEB87338(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for AudioHistoryFeedSectionDescriptor();
    v8[1] = type metadata accessor for AudioHistoryFeedModel();
    void v8[2] = sub_1DEAC844C(&qword_1EAC24EB0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedSectionDescriptor);
    v8[3] = sub_1DEAC844C((unint64_t *)&unk_1EAC22910, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DEB8742C()
{
  if (!qword_1EAC21020)
  {
    sub_1DEB87338(255, (unint64_t *)&qword_1EAC22940, MEMORY[0x1E4FAC180]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC21020);
    }
  }
}

void sub_1DEB874B4(uint64_t a1)
{
}

uint64_t sub_1DEB874F0(uint64_t a1, uint64_t a2)
{
  sub_1DEB86A70(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DEB87554(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1DEB87338(255, (unint64_t *)&qword_1EAC22930, MEMORY[0x1E4FAD830]);
    uint64_t v10 = v9;
    uint64_t v11 = sub_1DEB86AAC(a3);
    unint64_t v12 = a5(a1, v10, v11);
    if (!v13) {
      atomic_store(v12, a2);
    }
  }
}

uint64_t sub_1DEB875F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DEB87654()
{
  if (!qword_1EAC21040)
  {
    type metadata accessor for AudioHistoryFeedLayoutModel();
    sub_1DEAC844C(&qword_1EAC20FF0, (void (*)(uint64_t))type metadata accessor for AudioHistoryFeedLayoutModel);
    unint64_t v0 = sub_1DFDF2130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21040);
    }
  }
}

uint64_t sub_1DEB876E8(uint64_t a1, uint64_t a2)
{
  sub_1DEA944D4(0, (unint64_t *)&qword_1EAC21048, MEMORY[0x1E4F7F240], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for AudioHistoryFeedLayoutSectionDescriptor.Data);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEB8777C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEB877E4(uint64_t a1)
{
  return sub_1DEB87DB4(a1, (uint64_t)sub_1DEB87804, &qword_1EAC21060);
}

uint64_t sub_1DEB87804(void *a1)
{
  uint64_t v2 = sub_1DFDF70A0();
  uint64_t v19 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v18 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE7A80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDE7ED0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  if (qword_1EBABD9D0 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB280], v8);
  sub_1DEB87EC4((unint64_t *)&qword_1EBAA6FA8, MEMORY[0x1E4FAB298]);
  sub_1DFDE7FF0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7A90();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FABAB0], v4);
  sub_1DEB87EC4(&qword_1EAC21070, MEMORY[0x1E4FABAC0]);
  sub_1DFDE7FF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1CC88 != -1) {
    swift_once();
  }
  unint64_t v21 = 0xD000000000000018;
  unint64_t v22 = 0x80000001DFEBEF80;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE7CB0();
  uint64_t v14 = v18;
  uint64_t v13 = v19;
  uint64_t v15 = v20;
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v18, *MEMORY[0x1E4F7F290], v20);
  sub_1DEB87EC4(&qword_1EAC21078, MEMORY[0x1E4F7F2C0]);
  sub_1DFDE7FF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1D6C0 != -1) {
    swift_once();
  }
  LOBYTE(v21) = 1;
  sub_1DFDE7FF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAC1D6C8 != -1) {
    swift_once();
  }
  LOBYTE(v21) = 1;
  return sub_1DFDE7FF0();
}

uint64_t static Presets.Subscriptions.iCloud2Testing.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CB20);
}

uint64_t sub_1DEB87D94(uint64_t a1)
{
  return sub_1DEB87DB4(a1, (uint64_t)sub_1DEB87E0C, &qword_1EAC21068);
}

uint64_t sub_1DEB87DB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1DFDE8050();
  swift_allocObject();
  uint64_t result = sub_1DFDE8040();
  *a3 = result;
  return result;
}

uint64_t sub_1DEB87E0C(void *a1)
{
  return swift_release();
}

uint64_t static Presets.Puzzles.resetProgressInPuzzleHistory.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CB28);
}

ValueMetadata *type metadata accessor for Presets.Subscriptions()
{
  return &type metadata for Presets.Subscriptions;
}

ValueMetadata *type metadata accessor for Presets.Puzzles()
{
  return &type metadata for Presets.Puzzles;
}

uint64_t sub_1DEB87EC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TagRouteModel()
{
  return &type metadata for TagRouteModel;
}

uint64_t sub_1DEB87F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v33 = a1;
  sub_1DEB0D9F8(0);
  uint64_t v32 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v31 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1DFDF8C50();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1DFDF8A10();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF8FD0();
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SearchLayoutModel();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB8874C();
  sub_1DFDF2120();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
  uint64_t v29 = *(void *)(v4 + 40);
  uint64_t ObjectType = swift_getObjectType();
  sub_1DFDF8C40();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = v31;
  uint64_t v19 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v31, v33, v32);
  unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v22 + v21, v20, v19);
  swift_retain();
  uint64_t v23 = v27;
  sub_1DFDF83F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v37);
  swift_release();
  uint64_t v24 = sub_1DFDF8A00();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v36);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  return v24;
}

uint64_t sub_1DEB88328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1DFDF9B40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DFDF75E0();
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v5 + 88))(v7, v4) != *MEMORY[0x1E4F804B0]) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(unsigned char *, uint64_t))(v5 + 96))(v7, v4);
  uint64_t v8 = sub_1DFDFA540();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v9 + 88))(v7, v8) != *MEMORY[0x1E4F80838]) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = MEMORY[0x1E01EFB70](result + 16);
    if (v11)
    {
      uint64_t v12 = (void *)MEMORY[0x1E01EFB70](v11 + OBJC_IVAR____TtC7NewsUI220SearchViewController_searchBar);
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = objc_msgSend(v12, sel_text);

        if (v14)
        {
          sub_1DFDFDD20();
        }
      }
      sub_1DF73091C(a3);
      swift_release();
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DEB88598()
{
  sub_1DEB1DDEC(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchBlueprintViewCellProvider()
{
  return self;
}

uint64_t sub_1DEB885FC()
{
  return sub_1DEB8868C(&qword_1EBAEDE90, (void (*)(uint64_t))type metadata accessor for SearchLayoutModel);
}

uint64_t sub_1DEB88644()
{
  return sub_1DEB8868C(&qword_1EBAEC6F0, (void (*)(uint64_t))type metadata accessor for SearchModel);
}

uint64_t sub_1DEB8868C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEB886D4()
{
  return sub_1DFDF8400();
}

uint64_t sub_1DEB8871C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1DEB87F1C(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

void sub_1DEB8874C()
{
  if (!qword_1EAC21080)
  {
    type metadata accessor for SearchLayoutModel();
    sub_1DEB8868C(&qword_1EBAEDE90, (void (*)(uint64_t))type metadata accessor for SearchLayoutModel);
    unint64_t v0 = sub_1DFDF2130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21080);
    }
  }
}

uint64_t sub_1DEB887E0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DEB88818()
{
  sub_1DEB0D9F8(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DEB888E4(uint64_t a1)
{
  sub_1DEB0D9F8(0);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  return sub_1DEB88328(a1, v4, v5);
}

uint64_t sub_1DEB88958()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DEB88A28(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  sub_1DE9B46A4();
  sub_1DFDEE090();
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
  uint64_t v4 = (void *)sub_1DFDFEE60();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  sub_1DEABEEE0(a1);
  sub_1DFDEDE20();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1DEB88B48(void *a1)
{
  uint64_t v1 = *(void *)((char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x78));
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  return sub_1DFDFAE80();
}

uint64_t sub_1DEB88BF0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (uint64_t *)(*(void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x90))
                 + OBJC_IVAR___TSChannelIssuesGroupConfig_title);
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x58);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 40);
  uint64_t v11 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x50);
  swift_bridgeObjectRetain();
  v10(v5, v8, v7, v11, v9);
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  sub_1DEABEEE0(a3);
  sub_1DEB8A04C(0, (unint64_t *)&qword_1EAC21178, MEMORY[0x1E4FAC2B8]);
  sub_1DEB89FD8();
  sub_1DFDF1A20();
  swift_release();
  return swift_release();
}

uint64_t sub_1DEB88DB8(uint64_t a1, uint64_t (*a2)(void))
{
  if (a2) {
    return a2();
  }
  return result;
}

uint64_t sub_1DEB88DE8(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return sub_1DFDF1A40();
  }
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain_n();
  sub_1DFDF1A40();
  swift_release();
  return sub_1DEABEEF0(a1);
}

uint64_t sub_1DEB88ED8(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v1;
  sub_1DEB8A04C(0, &qword_1EAC21198, MEMORY[0x1E4FAC4C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v14 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v14 - v8, a1, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = *(void *)(v3 + 80);
  *(void *)(v11 + 24) = *(void *)(v3 + 88);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, v9, v5);
  *(void *)(v11 + ((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  uint64_t v12 = v1;
  sub_1DFDE87E0();
  return swift_release();
}

uint64_t sub_1DEB890A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v70 = a3;
  uint64_t v91 = a2;
  uint64_t v93 = a1;
  uint64_t v76 = sub_1DFDE7600();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v74 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1DFDEA9D0();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v71 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1DFDEA320();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v67 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1DFDEADA0();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v64 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1DFDE7630();
  uint64_t v85 = *(void (***)(char *, uint64_t))(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v79 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDEB030();
  uint64_t v9 = *(char **)(v8 - 8);
  unint64_t v82 = v8;
  uint64_t v83 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v80 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDEC630();
  uint64_t v78 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ChannelIssuesModel();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0D750(0);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB8A04C(0, &qword_1EAC21198, MEMORY[0x1E4FAC4C0]);
  uint64_t v92 = v22;
  sub_1DFDF20A0();
  sub_1DFDF0B50();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v23 = *(void **)v16;
  uint64_t v63 = v16;
  id v89 = (id)*((void *)v16 + 2);
  sub_1DEB8A284();
  uint64_t v62 = *(int *)(v24 + 48);
  id v90 = v23;
  sub_1DF535DAC();
  sub_1DE9E4900();
  uint64_t v95 = v25;
  uint64_t v26 = sub_1DFDE8410();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = (v28 + 32) & ~v28;
  uint64_t v94 = v29 + *(void *)(v27 + 72);
  uint64_t v30 = v28 | 7;
  uint64_t v31 = swift_allocObject();
  long long v96 = xmmword_1DFE0B250;
  *(_OWORD *)(v31 + 16) = xmmword_1DFE0B250;
  uint64_t v32 = *MEMORY[0x1E4F4AA18];
  uint64_t v33 = *(void (***)(char *, uint64_t))(v27 + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v31 + v29, v32, v26);
  sub_1DEB8A2F0((unint64_t *)&unk_1EBAA73B0, MEMORY[0x1E4F7D3A0]);
  unint64_t v61 = (unint64_t)"model issueTraits ";
  unint64_t v77 = 0x80000001DFEBF020;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v13, v11);
  uint64_t v34 = v79;
  sub_1DFDE7620();
  sub_1DFDE7610();
  v85[1](v34, v81);
  uint64_t v35 = v80;
  sub_1DFDEB020();
  uint64_t v87 = v30;
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v96;
  uint64_t v88 = v29;
  unsigned int v86 = v32;
  uint64_t v84 = v26;
  uint64_t v85 = v33;
  uint64_t v37 = v26;
  uint64_t v38 = v27 + 104;
  ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v36 + v29, v32, v37);
  sub_1DEB8A2F0((unint64_t *)&unk_1EBAA7290, MEMORY[0x1E4F7BDD8]);
  unint64_t v39 = v82;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*((void (**)(char *, unint64_t))v83 + 1))(v35, v39);
  sub_1DEB8A2F0(&qword_1EAC211B8, (void (*)(uint64_t))type metadata accessor for ChannelIssuesModel);
  uint64_t result = sub_1DFDF20F0();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    uint64_t v83 = &v63[v62];
    int64_t v41 = v64;
    sub_1DFDEAD90();
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = v96;
    uint64_t v43 = v88;
    uint64_t v44 = v86;
    uint64_t v45 = v84;
    uint64_t v60 = v38;
    ((void (*)(uint64_t, void, uint64_t))v85)(v42 + v88, v86, v84);
    sub_1DEB8A2F0((unint64_t *)&unk_1EBAA7270, MEMORY[0x1E4F7BAF0]);
    unint64_t v82 = v61 | 0x8000000000000000;
    uint64_t v46 = v66;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v46);
    uint64_t v47 = v67;
    sub_1DFDFF240();
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v96;
    unint64_t v49 = v85;
    ((void (*)(uint64_t, uint64_t, uint64_t))v85)(v48 + v43, v44, v45);
    sub_1DEB8A2F0((unint64_t *)&unk_1EBAA71C0, MEMORY[0x1E4F7B400]);
    uint64_t v50 = v69;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v47, v50);
    unint64_t v51 = (void *)((char *)v70 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v70) + 0x98));
    __swift_project_boxed_opaque_existential_1(v51, v51[3]);
    id v52 = objc_msgSend(v90, sel_identifier);
    sub_1DFDFDD20();

    sub_1DFDFD280();
    swift_bridgeObjectRelease();
    uint64_t v53 = v71;
    sub_1DFDEA9C0();
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = v96;
    ((void (*)(uint64_t, void, uint64_t))v49)(v54 + v88, v86, v84);
    sub_1DEB8A2F0(&qword_1EBACB870, MEMORY[0x1E4F7B8D8]);
    uint64_t v55 = v73;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v53, v55);
    sub_1DFDEB2D0();
    uint64_t v56 = v74;
    sub_1DFDF20E0();
    sub_1DEB8A2F0((unint64_t *)&unk_1EBAA72B0, MEMORY[0x1E4F7BFA0]);
    sub_1DFDE8330();
    uint64_t v57 = *(void (**)(char *, uint64_t))(v75 + 8);
    uint64_t v58 = v76;
    v57(v56, v76);
    sub_1DFDF20B0();
    sub_1DFDE8340();

    v57(v56, v58);
    uint64_t v59 = sub_1DFDF99F0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v59 - 8) + 8))(v83, v59);
  }
  __break(1u);
  return result;
}

void sub_1DEB89D38(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1DEB8A370();
}

void sub_1DEB89D98()
{
}

uint64_t sub_1DEB89DDC(char *a1)
{
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *(void *)a1;
  sub_1DEB1DDEC((uint64_t)&a1[*(void *)(v3 + 0x60)]);
  swift_release();
  (*(void (**)(char *))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(&a1[*(void *)((*v2 & *(void *)a1)
                                                                                                 + 0x70)]);
  swift_unknownObjectRelease();

  swift_release();
  uint64_t v4 = (uint64_t)&a1[*(void *)((*v2 & *(void *)a1) + 0x98)];
  return __swift_destroy_boxed_opaque_existential_1(v4);
}

uint64_t type metadata accessor for ChannelIssuesInteractor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DEB89F98()
{
  return sub_1DEB88B48(*(void **)(v0 + 16));
}

uint64_t sub_1DEB89FB8(uint64_t *a1, void *a2)
{
  return sub_1DEB88BF0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1DEB89FD8()
{
  unint64_t result = qword_1EAC21190;
  if (!qword_1EAC21190)
  {
    sub_1DEB8A04C(255, (unint64_t *)&qword_1EAC21178, MEMORY[0x1E4FAC2B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21190);
  }
  return result;
}

void sub_1DEB8A04C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for ChannelIssuesSectionDescriptor;
    v8[1] = type metadata accessor for ChannelIssuesModel();
    void v8[2] = sub_1DEB0D28C();
    v8[3] = sub_1DEB8A2F0(&qword_1EAC203F0, (void (*)(uint64_t))type metadata accessor for ChannelIssuesModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DEB8A10C()
{
  sub_1DEB8A04C(0, &qword_1EAC21198, MEMORY[0x1E4FAC4C0]);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1DEB8A1CC(uint64_t a1)
{
  sub_1DEB8A04C(0, &qword_1EAC21198, MEMORY[0x1E4FAC4C0]);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = *(void **)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DEB890A8(a1, v1 + v5, v6);
}

void sub_1DEB8A284()
{
  if (!qword_1EAC211A8)
  {
    sub_1DFDF99F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC211A8);
    }
  }
}

uint64_t sub_1DEB8A2F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEB8A338()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEB8A370()
{
  uint64_t result = MEMORY[0x1E01EFB70]((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60));
  if (result)
  {
    uint64_t v2 = result;
    if (MEMORY[0x1E01EFB70](result + 16))
    {
      uint64_t v3 = *(void *)(v2 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void, void, uint64_t, uint64_t))(v3 + 32))(0, 0, ObjectType, v3);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1DEB8A438()
{
}

uint64_t sub_1DEB8A468()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1DEB8A4C0()
{
  sub_1DEB8A468();
  return swift_deallocClassInstance();
}

uint64_t sub_1DEB8A4F8()
{
  return sub_1DE9372B4((unint64_t *)&unk_1EBAB6310, (void (*)(uint64_t))type metadata accessor for FollowingSectionLayoutDescriptor);
}

uint64_t sub_1DEB8A540()
{
  return sub_1DE9372B4(&qword_1EBAADF30, (void (*)(uint64_t))type metadata accessor for FollowingLayoutModel);
}

uint64_t sub_1DEB8A588()
{
  return sub_1DE9372B4(&qword_1EBAD4970, (void (*)(uint64_t))type metadata accessor for FollowingModel);
}

uint64_t sub_1DEB8A5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FollowingSectionLayoutDescriptor();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v13[-v10];
  sub_1DEB0B398();
  sub_1DFDF14D0();
  sub_1DEB8DF54((uint64_t)v17, (uint64_t)v18);
  sub_1DEB8A7F0((uint64_t)v18, a3, v11);
  sub_1DEB8DFB0((uint64_t)v18);
  uint64_t v14 = a2;
  uint64_t v15 = a1;
  uint64_t v16 = a3;
  sub_1DEB01184((void (*)(char *))sub_1DEB8E0B4, (uint64_t)v13);
  sub_1DEB9BFF0((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FollowingSectionLayoutDescriptor);
  type metadata accessor for FollowingLayoutModel();
  sub_1DE9372B4((unint64_t *)&unk_1EBAB6310, (void (*)(uint64_t))type metadata accessor for FollowingSectionLayoutDescriptor);
  sub_1DE9372B4(&qword_1EBAADF30, (void (*)(uint64_t))type metadata accessor for FollowingLayoutModel);
  sub_1DFDF2C00();
  return sub_1DEB9C058((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FollowingSectionLayoutDescriptor);
}

uint64_t sub_1DEB8A7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v88 = a2;
  sub_1DEB8DF54(a1, (uint64_t)v89);
  uint64_t v84 = v90;
  uint64_t v85 = v91;
  uint64_t v86 = v92;
  id v87 = v93;
  uint64_t v83 = v94;
  uint64_t v7 = (int *)type metadata accessor for TitleViewLayoutOptions(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for TitleViewLayoutAttributes(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v73 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v73 - v17;
  sub_1DEB8DF54(a1, (uint64_t)&v95);
  switch(v101)
  {
    case 1:
      uint64_t v25 = *((void *)&v95 + 1);
      unint64_t v26 = *((void *)&v96 + 1);
      uint64_t v27 = *((void *)&v97 + 1);
      uint64_t v28 = (void *)v98;
      uint64_t v79 = v95;
      long long v102 = v95;
      uint64_t v77 = v96;
      long long v103 = v96;
      uint64_t v76 = v97;
      long long v104 = v97;
      long long v105 = v98;
      uint64_t v74 = *((void *)&v98 + 1);
      uint64_t v106 = v99;
      uint64_t v80 = v99;
      swift_bridgeObjectRetain();
      uint64_t v78 = v25;
      swift_bridgeObjectRetain();
      unint64_t v82 = v26;
      swift_bridgeObjectRetain();
      uint64_t v75 = v27;
      swift_bridgeObjectRetain();
      uint64_t v81 = v28;
      id v29 = v28;
      uint64_t v30 = (void *)sub_1DFDF2B20();
      id v31 = objc_msgSend(v30, sel_horizontalSizeClass);

      __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
      uint64_t v32 = sub_1DFDF2BF0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v9, v88, v32);
      if (v31 == (id)1)
      {
        *(void *)&v9[v7[5]] = 0;
        *(void *)&v9[v7[6]] = 0;
        *(void *)&v9[v7[7]] = 0x4038000000000000;
        v9[v7[8]] = 0;
        uint64_t v33 = v78;
        swift_bridgeObjectRetain();
        uint64_t v34 = 0;
        uint64_t v35 = 0;
        uint64_t v36 = 0;
        uint64_t v81 = 0;
        uint64_t v37 = 0;
        uint64_t v80 = 0;
        unint64_t v82 = 0xE000000000000000;
      }
      else
      {
        *(void *)&v9[v7[5]] = 0x4035000000000000;
        *(void *)&v9[v7[6]] = 0x4026000000000000;
        *(void *)&v9[v7[7]] = 0x4038000000000000;
        v9[v7[8]] = 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v54 = v87;
        uint64_t v33 = v78;
        uint64_t v34 = v77;
        uint64_t v35 = v76;
        uint64_t v36 = v75;
        uint64_t v37 = v74;
      }
      sub_1DF6958E4((double *)&v102, *(double *)&v9, (uint64_t)v16);
      sub_1DEB8DFB0(a1);
      sub_1DEB9C058((uint64_t)v9, type metadata accessor for TitleViewLayoutOptions);
      sub_1DEB9C0B8();
      uint64_t v56 = (uint64_t)a3 + *(int *)(v55 + 48);
      *a3 = v79;
      a3[1] = v33;
      unint64_t v57 = v82;
      a3[2] = v34;
      a3[3] = v57;
      a3[4] = v35;
      a3[5] = v36;
      a3[6] = v81;
      a3[7] = v37;
      a3[8] = v80;
      sub_1DEB99D64((uint64_t)v16, v56, type metadata accessor for TitleViewLayoutAttributes);
      type metadata accessor for FollowingSectionLayoutDescriptor();
      return swift_storeEnumTagMultiPayload();
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 9:
      long long v102 = v95;
      long long v103 = v96;
      long long v104 = v97;
      long long v105 = v98;
      uint64_t v106 = v99;
      __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
      uint64_t v38 = sub_1DFDF2BF0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v9, v88, v38);
      *(void *)&v9[v7[5]] = 0x4028000000000000;
      *(void *)&v9[v7[6]] = 0x4026000000000000;
      *(void *)&v9[v7[7]] = 0x4038000000000000;
      v9[v7[8]] = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v39 = v87;
      sub_1DF6958E4((double *)&v102, *(double *)&v9, (uint64_t)v18);
      sub_1DEB9C058((uint64_t)v9, type metadata accessor for TitleViewLayoutOptions);
      sub_1DEB9C0B8();
      uint64_t v41 = (uint64_t)a3 + *(int *)(v40 + 48);
      long long v42 = v105;
      *((_OWORD *)a3 + 2) = v104;
      *((_OWORD *)a3 + 3) = v42;
      a3[8] = v106;
      long long v43 = v103;
      *(_OWORD *)a3 = v102;
      *((_OWORD *)a3 + 1) = v43;
      sub_1DEB99D64((uint64_t)v18, v41, type metadata accessor for TitleViewLayoutAttributes);
      type metadata accessor for FollowingSectionLayoutDescriptor();
      return swift_storeEnumTagMultiPayload();
    case 8:
      long long v102 = v95;
      long long v103 = v96;
      long long v104 = v97;
      id v87 = (id)*((void *)&v97 + 1);
      long long v105 = v98;
      uint64_t v44 = (void *)v98;
      uint64_t v106 = v99;
      if ((unint64_t)v100 >> 62)
      {
        uint64_t v58 = v100 & 0xFFFFFFFFFFFFFF8;
        if (v100 < 0) {
          uint64_t v58 = v100;
        }
        uint64_t v86 = v58;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v59 = v44;
        uint64_t v60 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        if (v60) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v45 = *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v46 = v44;
        if (v45)
        {
LABEL_8:
          __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
          uint64_t v47 = sub_1DFDF2BF0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v9, v88, v47);
          *(void *)&v9[v7[5]] = 0x4028000000000000;
          *(void *)&v9[v7[6]] = 0x4026000000000000;
          *(void *)&v9[v7[7]] = 0x4038000000000000;
          v9[v7[8]] = 0;
          sub_1DF6958E4((double *)&v102, *(double *)&v9, (uint64_t)v13);
          sub_1DEB9C058((uint64_t)v9, type metadata accessor for TitleViewLayoutOptions);
LABEL_16:
          sub_1DEB9C0B8();
          uint64_t v69 = (uint64_t)a3 + *(int *)(v68 + 48);
          long long v70 = v105;
          *((_OWORD *)a3 + 2) = v104;
          *((_OWORD *)a3 + 3) = v70;
          a3[8] = v106;
          long long v71 = v103;
          *(_OWORD *)a3 = v102;
          *((_OWORD *)a3 + 1) = v71;
          sub_1DEB99D64((uint64_t)v13, v69, type metadata accessor for TitleViewLayoutAttributes);
          type metadata accessor for FollowingSectionLayoutDescriptor();
          return swift_storeEnumTagMultiPayload();
        }
      }
      uint64_t v61 = *MEMORY[0x1E4FAD2B0];
      uint64_t v62 = sub_1DFDF4140();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 104))(v13, v61, v62);
      uint64_t v63 = &v13[v10[5]];
      *(void *)uint64_t v63 = 0;
      *((void *)v63 + 1) = 0;
      *((void *)v63 + 2) = 0;
      *((void *)v63 + 3) = 0x10000000000000;
      uint64_t v64 = &v13[v10[6]];
      *(_OWORD *)uint64_t v64 = 0u;
      *((_OWORD *)v64 + 1) = 0u;
      uint64_t v65 = &v13[v10[7]];
      *(_OWORD *)uint64_t v65 = 0u;
      *((_OWORD *)v65 + 1) = 0u;
      uint64_t v66 = &v13[v10[8]];
      v66[32] = 0;
      *(_OWORD *)uint64_t v66 = 0u;
      *((_OWORD *)v66 + 1) = 0u;
      uint64_t v67 = &v13[v10[9]];
      *(_OWORD *)uint64_t v67 = 0u;
      *((_OWORD *)v67 + 1) = 0u;
      v67[32] = 1;
      v13[v10[10]] = 0;
      v13[v10[11]] = 0;
      goto LABEL_16;
    case 10:
      long long v102 = v95;
      long long v103 = v96;
      long long v104 = v97;
      long long v105 = v98;
      uint64_t v106 = v99;
      __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
      uint64_t v48 = sub_1DFDF2BF0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v9, v88, v48);
      *(void *)&v9[v7[5]] = 0;
      *(void *)&v9[v7[6]] = 0;
      *(void *)&v9[v7[7]] = 0x4038000000000000;
      v9[v7[8]] = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v49 = v87;
      sub_1DF6958E4((double *)&v102, *(double *)&v9, (uint64_t)v18);
      sub_1DEB9C058((uint64_t)v9, type metadata accessor for TitleViewLayoutOptions);
      sub_1DEB9C0B8();
      uint64_t v51 = (uint64_t)a3 + *(int *)(v50 + 48);
      long long v52 = v105;
      *((_OWORD *)a3 + 2) = v104;
      *((_OWORD *)a3 + 3) = v52;
      a3[8] = v106;
      long long v53 = v103;
      *(_OWORD *)a3 = v102;
      *((_OWORD *)a3 + 1) = v53;
      sub_1DEB99D64((uint64_t)v18, v51, type metadata accessor for TitleViewLayoutAttributes);
      type metadata accessor for FollowingSectionLayoutDescriptor();
      return swift_storeEnumTagMultiPayload();
    default:
      long long v102 = v95;
      long long v103 = v96;
      long long v104 = v97;
      long long v105 = v98;
      uint64_t v106 = v99;
      __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
      uint64_t v19 = sub_1DFDF2BF0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v9, v88, v19);
      *(void *)&v9[v7[5]] = 0x4010000000000000;
      *(void *)&v9[v7[6]] = 0x4010000000000000;
      *(void *)&v9[v7[7]] = 0x4038000000000000;
      v9[v7[8]] = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v20 = v87;
      sub_1DF6958E4((double *)&v102, *(double *)&v9, (uint64_t)v18);
      sub_1DEB9C058((uint64_t)v9, type metadata accessor for TitleViewLayoutOptions);
      sub_1DEB9C0B8();
      uint64_t v22 = (uint64_t)a3 + *(int *)(v21 + 48);
      long long v23 = v105;
      *((_OWORD *)a3 + 2) = v104;
      *((_OWORD *)a3 + 3) = v23;
      a3[8] = v106;
      long long v24 = v103;
      *(_OWORD *)a3 = v102;
      *((_OWORD *)a3 + 1) = v24;
      sub_1DEB99D64((uint64_t)v18, v22, type metadata accessor for TitleViewLayoutAttributes);
      type metadata accessor for FollowingSectionLayoutDescriptor();
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1DEB8BC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for FollowingModel();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = type metadata accessor for FollowingLayoutModel();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)&v16[-v12 - 8];
  sub_1DEB0B398();
  sub_1DFDF14D0();
  sub_1DEB8DF54((uint64_t)v16, (uint64_t)v17);
  sub_1DEB0B564(0);
  sub_1DFDF0B50();
  sub_1DEB8BE2C((uint64_t)v17, (uint64_t)v7, a4, v13);
  sub_1DEB8DFB0((uint64_t)v17);
  sub_1DEB9C058((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  sub_1DEB9BFF0((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FollowingLayoutModel);
  sub_1DE9372B4(&qword_1EBAADF30, (void (*)(uint64_t))type metadata accessor for FollowingLayoutModel);
  sub_1DFDF2110();
  return sub_1DEB9C058((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FollowingLayoutModel);
}

void sub_1DEB8BE2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v306 = a4;
  uint64_t v307 = a3;
  sub_1DEB8DF54(a1, (uint64_t)v310);
  uint64_t v298 = v310[5];
  id v299 = (id)v310[6];
  uint64_t v300 = v310[8];
  uint64_t v301 = v310[9];
  uint64_t v6 = type metadata accessor for FollowingAudioModel();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v298 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FollowingPuzzleHubModel();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v298 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FollowingMySportsModel();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v298 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DFDF2BF0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v302 = v15;
  uint64_t v303 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v304 = (char *)&v298 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB8E0D8();
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v298 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  uint64_t v23 = a1;
  sub_1DEB8DF54(a1, (uint64_t)v21);
  sub_1DEB9BFF0(a2, v22, (uint64_t (*)(void))type metadata accessor for FollowingModel);
  type metadata accessor for FollowingModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v30 = *(_OWORD *)(v22 + 16);
      long long v313 = *(_OWORD *)v22;
      long long v314 = v30;
      char v31 = *(unsigned char *)(v22 + 32);
      LOBYTE(v315) = v31;
      uint64_t v32 = *(void *)v22;
      uint64_t v33 = *(void *)(v22 + 8);
      uint64_t v35 = *(void *)(v22 + 16);
      uint64_t v34 = *(void *)(v22 + 24);
      uint64_t v36 = v307;
      uint64_t v37 = (void *)sub_1DFDF2B20();
      id v38 = objc_msgSend(v37, sel_horizontalSizeClass, v298, v299, v300, v301);

      if (v38 != (id)1)
      {
        sub_1DEB8DF54(v23, (uint64_t)v311);
        int v187 = v312;
        uint64_t v188 = (uint64_t)v304;
        (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v304, v36, v302);
        double v189 = *MEMORY[0x1E4FB2848];
        double v190 = *(double *)(MEMORY[0x1E4FB2848] + 8);
        double v191 = *(double *)(MEMORY[0x1E4FB2848] + 16);
        double v192 = *(double *)(MEMORY[0x1E4FB2848] + 24);
        type metadata accessor for TagViewLayoutOptions();
        swift_allocObject();
        if (v187 == 1)
        {
          double v193 = 44.0;
          double v194 = 8.0;
        }
        else
        {
          double v193 = 50.0;
          double v194 = 11.0;
        }
        uint64_t v245 = sub_1DF00C128(v188, (uint64_t)&unk_1F3A64CE0, 1, 2, v189, v190, v191, v192, v193, v194, 12.0);
        uint64_t v246 = __swift_project_boxed_opaque_existential_1(v305 + 10, v305[13]);
        sub_1DEB9BE28((uint64_t)&v313 + 8, (uint64_t)v317, (unint64_t *)&qword_1EBABA650, MEMORY[0x1E4FBB1A0]);
        sub_1DEB99D64((uint64_t)&v314 + 8, (uint64_t)&v316, (uint64_t (*)(void))sub_1DEB9BEA8);
        uint64_t v247 = *v246;
        sub_1DEB9BF10((uint64_t)v317);
        sub_1DEB9BF3C(&v316);
        sub_1DEB8F6F8((uint64_t *)&v313, v245, v247, (uint64_t)v309);
        swift_release();
        sub_1DEB9BF68((uint64_t)v317);
        sub_1DEB9BF94(&v316);
        memcpy((char *)v308 + 7, v309, 0x1EAuLL);
        v248 = v306;
        *uint64_t v306 = v32;
        v248[1] = v33;
        v248[2] = v35;
        v248[3] = v34;
        *((unsigned char *)v248 + 32) = v31;
        memcpy((char *)v248 + 33, v308, 0x1F1uLL);
        type metadata accessor for FollowingLayoutModel();
        goto LABEL_113;
      }
      type metadata accessor for FollowingLayoutModel();
      swift_storeEnumTagMultiPayload();
      sub_1DEB9BE28((uint64_t)&v313 + 8, (uint64_t)v308, (unint64_t *)&qword_1EBABA650, MEMORY[0x1E4FBB1A0]);
      sub_1DEB9BF68((uint64_t)v308);
      sub_1DEB99D64((uint64_t)&v314 + 8, (uint64_t)v309, (uint64_t (*)(void))sub_1DEB9BEA8);
      sub_1DEB9BF94(v309);
      return;
    case 2u:
      sub_1DEB99D64(v22, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
      uint64_t v39 = v307;
      uint64_t v40 = (void *)sub_1DFDF2B20();
      id v41 = objc_msgSend(v40, sel_horizontalSizeClass, v298, v299, v300, v301);

      if (v41 == (id)1)
      {
        long long v42 = type metadata accessor for FollowingAudioModel;
        uint64_t v43 = (uint64_t)v8;
        goto LABEL_49;
      }
      sub_1DEB8DF54(v23, (uint64_t)v309);
      int v195 = LOBYTE(v309[10]);
      uint64_t v196 = (uint64_t)v304;
      (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v304, v39, v302);
      double v197 = *MEMORY[0x1E4FB2848];
      double v198 = *(double *)(MEMORY[0x1E4FB2848] + 8);
      double v199 = *(double *)(MEMORY[0x1E4FB2848] + 16);
      double v200 = *(double *)(MEMORY[0x1E4FB2848] + 24);
      type metadata accessor for TagViewLayoutOptions();
      swift_allocObject();
      BOOL v201 = v195 == 1;
      uint64_t v202 = (uint64_t)v306;
      if (v201)
      {
        double v249 = 44.0;
        double v250 = 8.0;
      }
      else
      {
        double v249 = 50.0;
        double v250 = 11.0;
      }
      uint64_t v251 = sub_1DF00C128(v196, MEMORY[0x1E4FBC860], 0, 2, v197, v198, v199, v200, v249, v250, 12.0);
      uint64_t v252 = (double *)__swift_project_boxed_opaque_existential_1(v305 + 10, v305[13]);
      sub_1DEB973E4((uint64_t)v8, v251, *v252, (uint64_t)v308);
      swift_release();
      sub_1DEB99DCC(0, (unint64_t *)&unk_1EAC211E0, (void (*)(uint64_t))type metadata accessor for FollowingAudioModel);
      uint64_t v254 = (void *)(v202 + *(int *)(v253 + 48));
      sub_1DEB99D64((uint64_t)v8, v202, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
      memcpy(v254, v308, 0x1EAuLL);
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    case 3u:
      uint64_t v44 = *(void *)v22;
      sub_1DEB8DF54(a1, (uint64_t)v309);
      int v45 = LOBYTE(v309[10]);
      uint64_t v46 = (uint64_t)v304;
      (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v304, v307, v302);
      double v47 = *MEMORY[0x1E4FB2848];
      double v48 = *(double *)(MEMORY[0x1E4FB2848] + 8);
      double v49 = *(double *)(MEMORY[0x1E4FB2848] + 16);
      double v50 = *(double *)(MEMORY[0x1E4FB2848] + 24);
      type metadata accessor for TagViewLayoutOptions();
      swift_allocObject();
      if (v45 == 1)
      {
        double v51 = 44.0;
        double v52 = 8.0;
      }
      else
      {
        double v51 = 50.0;
        double v52 = 11.0;
      }
      uint64_t v203 = sub_1DF00C128(v46, MEMORY[0x1E4FBC860], 1, 2, v47, v48, v49, v50, v51, v52, 12.0);
      uint64_t v204 = v306;
      uint64_t v205 = *__swift_project_boxed_opaque_existential_1(v305 + 10, v305[13]);
      uint64_t v206 = swift_retain();
      sub_1DEB90C7C(v206, v203, v205, (uint64_t)v308);
      swift_release();
      swift_release();
      *uint64_t v204 = v44;
      memcpy(v204 + 1, v308, 0x1EAuLL);
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    case 4u:
      long long v53 = *(_OWORD *)(v22 + 16);
      long long v313 = *(_OWORD *)v22;
      long long v314 = v53;
      char v54 = *(unsigned char *)(v22 + 32);
      LOBYTE(v315) = v54;
      uint64_t v55 = *(void *)v22;
      uint64_t v56 = *(void *)(v22 + 8);
      uint64_t v58 = *(void *)(v22 + 16);
      uint64_t v57 = *(void *)(v22 + 24);
      sub_1DEB8DF54(v23, (uint64_t)v311);
      int v59 = v312;
      uint64_t v60 = (uint64_t)v304;
      (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v304, v307, v302);
      double v61 = *MEMORY[0x1E4FB2848];
      double v62 = *(double *)(MEMORY[0x1E4FB2848] + 8);
      double v63 = *(double *)(MEMORY[0x1E4FB2848] + 16);
      double v64 = *(double *)(MEMORY[0x1E4FB2848] + 24);
      type metadata accessor for TagViewLayoutOptions();
      swift_allocObject();
      if (v59 == 1)
      {
        double v65 = 44.0;
        double v66 = 8.0;
      }
      else
      {
        double v65 = 50.0;
        double v66 = 11.0;
      }
      uint64_t v207 = sub_1DF00C128(v60, MEMORY[0x1E4FBC860], 0, 2, v61, v62, v63, v64, v65, v66, 12.0);
      uint64_t v208 = __swift_project_boxed_opaque_existential_1(v305 + 10, v305[13]);
      sub_1DEB9BE28((uint64_t)&v313 + 8, (uint64_t)v317, (unint64_t *)&qword_1EBABA650, MEMORY[0x1E4FBB1A0]);
      sub_1DEB99D64((uint64_t)&v314 + 8, (uint64_t)&v316, (uint64_t (*)(void))sub_1DEB9BEA8);
      uint64_t v209 = *v208;
      sub_1DEB9BF10((uint64_t)v317);
      sub_1DEB9BF3C(&v316);
      sub_1DEB92054((uint64_t *)&v313, v207, v209, (uint64_t)v309);
      swift_release();
      sub_1DEB9BF68((uint64_t)v317);
      sub_1DEB9BF94(&v316);
      memcpy((char *)v308 + 7, v309, 0x1EAuLL);
      uint64_t v210 = v306;
      *uint64_t v306 = v55;
      v210[1] = v56;
      v210[2] = v58;
      v210[3] = v57;
      *((unsigned char *)v210 + 32) = v54;
      memcpy((char *)v210 + 33, v308, 0x1F1uLL);
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    case 5u:
      uint64_t v67 = *(void *)v22;
      unint64_t v68 = *(void *)(v22 + 8);
      uint64_t v69 = *(void **)(v22 + 16);
      char v70 = *(unsigned char *)(v22 + 24);
      sub_1DEB8DF54(v23, (uint64_t)v311);
      int v71 = v312;
      uint64_t v72 = (uint64_t)v304;
      (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v304, v307, v302);
      double v73 = *MEMORY[0x1E4FB2848];
      double v74 = *(double *)(MEMORY[0x1E4FB2848] + 8);
      double v75 = *(double *)(MEMORY[0x1E4FB2848] + 16);
      double v76 = *(double *)(MEMORY[0x1E4FB2848] + 24);
      type metadata accessor for TagViewLayoutOptions();
      swift_allocObject();
      if (v71 == 1)
      {
        double v77 = 44.0;
        double v78 = 8.0;
      }
      else
      {
        double v77 = 50.0;
        double v78 = 11.0;
      }
      uint64_t v211 = sub_1DF00C128(v72, MEMORY[0x1E4FBC860], 0, 2, v73, v74, v75, v76, v77, v78, 12.0);
      uint64_t v212 = *__swift_project_boxed_opaque_existential_1(v305 + 10, v305[13]);
      id v213 = v69;
      swift_bridgeObjectRetain();
      sub_1DEB9A954(v67, v68, v69, v211, v212, (uint64_t)v309);

      swift_bridgeObjectRelease();
      swift_release();
      memcpy((char *)v308 + 7, v309, 0x1EAuLL);
      uint64_t v214 = v306;
      *uint64_t v306 = v67;
      v214[1] = v68;
      v214[2] = (uint64_t)v69;
      *((unsigned char *)v214 + 24) = v70;
      memcpy((char *)v214 + 25, v308, 0x1F1uLL);
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    case 6u:
      uint64_t v79 = *(void *)v22;
      uint64_t v80 = a1;
      sub_1DEB8DF54(a1, (uint64_t)v309);
      if (LOBYTE(v309[10]) == 8)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v81 = v299;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v82 = sub_1DEE17A10(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v84 = *((void *)v82 + 2);
        unint64_t v83 = *((void *)v82 + 3);
        uint64_t v85 = (uint64_t)v304;
        uint64_t v86 = v307;
        if (v84 >= v83 >> 1) {
          unint64_t v82 = sub_1DEE17A10((char *)(v83 > 1), v84 + 1, 1, v82);
        }
        uint64_t v88 = v305;
        id v87 = v306;
        *((void *)v82 + 2) = v84 + 1;
        v82[v84 + 32] = 6;
        id v89 = (void *)v88[16];
        if (!objc_msgSend(v89, sel_useFeedDifferentiationMode, v298)
          || objc_msgSend(v89, sel_useFeedDifferentiationMode)
          && (id v90 = objc_msgSend((id)v88[17], sel_cachedSubscription),
              unsigned int v91 = objc_msgSend(v90, sel_isSubscribed),
              v90,
              v91))
        {
          unint64_t v93 = *((void *)v82 + 2);
          unint64_t v92 = *((void *)v82 + 3);
          if (v93 >= v92 >> 1) {
            unint64_t v82 = sub_1DEE17A10((char *)(v92 > 1), v93 + 1, 1, v82);
          }
          *((void *)v82 + 2) = v93 + 1;
          v82[v93 + 32] = 2;
        }
        unint64_t v95 = *((void *)v82 + 2);
        unint64_t v94 = *((void *)v82 + 3);
        if (v95 >= v94 >> 1) {
          unint64_t v82 = sub_1DEE17A10((char *)(v94 > 1), v95 + 1, 1, v82);
        }
        *((void *)v82 + 2) = v95 + 1;
        v82[v95 + 32] = 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v303 + 16))(v85, v86, v302);
        double v96 = *MEMORY[0x1E4FB2848];
        double v97 = *(double *)(MEMORY[0x1E4FB2848] + 8);
        double v98 = *(double *)(MEMORY[0x1E4FB2848] + 16);
        double v99 = *(double *)(MEMORY[0x1E4FB2848] + 24);
        type metadata accessor for TagViewLayoutOptions();
        swift_allocObject();
        uint64_t v100 = sub_1DF00C128(v85, (uint64_t)v82, 0, 2, v96, v97, v98, v99, 50.0, 11.0, 12.0);
        uint64_t v101 = *__swift_project_boxed_opaque_existential_1(v88 + 10, v88[13]);
        uint64_t v102 = swift_retain();
        sub_1DEB988C8(v102, v100, v101, (uint64_t)v308);
        swift_release();
        sub_1DEB8DFB0(v80);
        swift_release();
        *id v87 = v79;
        memcpy(v87 + 1, v308, 0x1EAuLL);
        type metadata accessor for FollowingLayoutModel();
      }
      else
      {
        sub_1DEA9B504(0, &qword_1EBAF2BA8, (uint64_t)&type metadata for TagViewLayoutOptions.AccessoryOptions.Item, MEMORY[0x1E4FBBE00]);
        uint64_t v215 = swift_allocObject();
        *(_OWORD *)(v215 + 16) = xmmword_1DFE0B250;
        *(unsigned char *)(v215 + 32) = 5;
        uint64_t v217 = (uint64_t)v304;
        uint64_t v216 = v305;
        uint64_t v218 = v306;
        uint64_t v219 = v307;
        uint64_t v220 = (char *)v215;
        switch(*(unsigned char *)(v79 + 16))
        {
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            char v261 = sub_1DFDFFF50();
            swift_bridgeObjectRelease();
            if ((v261 & 1) == 0)
            {
              unint64_t v263 = *((void *)v220 + 2);
              unint64_t v262 = *((void *)v220 + 3);
              if (v263 >= v262 >> 1) {
                uint64_t v220 = sub_1DEE17A10((char *)(v262 > 1), v263 + 1, 1, v220);
              }
              *((void *)v220 + 2) = v263 + 1;
              v220[v263 + 32] = 6;
            }
            break;
        }
        uint64_t v264 = (void *)v216[16];
        if (!objc_msgSend(v264, sel_useFeedDifferentiationMode, v298, v299, v300, v301)
          || objc_msgSend(v264, sel_useFeedDifferentiationMode)
          && (id v265 = objc_msgSend((id)v216[17], sel_cachedSubscription),
              unsigned int v266 = objc_msgSend(v265, sel_isSubscribed),
              v265,
              v266))
        {
          unint64_t v268 = *((void *)v220 + 2);
          unint64_t v267 = *((void *)v220 + 3);
          if (v268 >= v267 >> 1) {
            uint64_t v220 = sub_1DEE17A10((char *)(v267 > 1), v268 + 1, 1, v220);
          }
          *((void *)v220 + 2) = v268 + 1;
          v220[v268 + 32] = 2;
        }
        sub_1DEB8DF54(v80, (uint64_t)v311);
        int v269 = v312;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v303 + 16))(v217, v219, v302);
        double v270 = *MEMORY[0x1E4FB2848];
        double v271 = *(double *)(MEMORY[0x1E4FB2848] + 8);
        double v272 = *(double *)(MEMORY[0x1E4FB2848] + 16);
        double v273 = *(double *)(MEMORY[0x1E4FB2848] + 24);
        type metadata accessor for TagViewLayoutOptions();
        swift_allocObject();
        if (v269 == 1)
        {
          double v274 = 44.0;
          double v275 = 8.0;
        }
        else
        {
          double v274 = 50.0;
          double v275 = 11.0;
        }
        uint64_t v276 = sub_1DF00C128(v217, (uint64_t)v220, 1, 2, v270, v271, v272, v273, v274, v275, 12.0);
        uint64_t v277 = *__swift_project_boxed_opaque_existential_1(v216 + 10, v216[13]);
        uint64_t v278 = swift_retain();
        sub_1DEB988C8(v278, v276, v277, (uint64_t)v308);
        swift_release();
        swift_release();
        uint64_t *v218 = v79;
        memcpy(v218 + 1, v308, 0x1EAuLL);
        type metadata accessor for FollowingLayoutModel();
      }
      goto LABEL_113;
    case 7u:
      uint64_t v103 = *(void *)v22;
      uint64_t v104 = a1;
      sub_1DEB8DF54(a1, (uint64_t)v309);
      if (LOBYTE(v309[10]) == 8)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v105 = v299;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v106 = sub_1DEE17A10(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v108 = *((void *)v106 + 2);
        unint64_t v107 = *((void *)v106 + 3);
        uint64_t v109 = (uint64_t)v304;
        uint64_t v110 = v307;
        if (v108 >= v107 >> 1) {
          uint64_t v106 = sub_1DEE17A10((char *)(v107 > 1), v108 + 1, 1, v106);
        }
        uint64_t v112 = v305;
        uint64_t v111 = v306;
        *((void *)v106 + 2) = v108 + 1;
        v106[v108 + 32] = 6;
        uint64_t v113 = (void *)v112[16];
        if (!objc_msgSend(v113, sel_useFeedDifferentiationMode, v298)
          || objc_msgSend(v113, sel_useFeedDifferentiationMode)
          && (id v114 = objc_msgSend((id)v112[17], sel_cachedSubscription),
              unsigned int v115 = objc_msgSend(v114, sel_isSubscribed),
              v114,
              v115))
        {
          unint64_t v117 = *((void *)v106 + 2);
          unint64_t v116 = *((void *)v106 + 3);
          if (v117 >= v116 >> 1) {
            uint64_t v106 = sub_1DEE17A10((char *)(v116 > 1), v117 + 1, 1, v106);
          }
          *((void *)v106 + 2) = v117 + 1;
          v106[v117 + 32] = 2;
        }
        unint64_t v119 = *((void *)v106 + 2);
        unint64_t v118 = *((void *)v106 + 3);
        if (v119 >= v118 >> 1) {
          uint64_t v106 = sub_1DEE17A10((char *)(v118 > 1), v119 + 1, 1, v106);
        }
        *((void *)v106 + 2) = v119 + 1;
        v106[v119 + 32] = 0;
        id v120 = objc_msgSend(*(id *)(*(void *)(v103 + 24) + 16), sel_asSports);
        if (v120) {
          swift_unknownObjectRelease();
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v303 + 16))(v109, v110, v302);
        double v121 = *MEMORY[0x1E4FB2848];
        double v122 = *(double *)(MEMORY[0x1E4FB2848] + 8);
        double v123 = *(double *)(MEMORY[0x1E4FB2848] + 16);
        double v124 = *(double *)(MEMORY[0x1E4FB2848] + 24);
        type metadata accessor for TagViewLayoutOptions();
        swift_allocObject();
        uint64_t v125 = sub_1DF00C128(v109, (uint64_t)v106, v120 != 0, 2, v121, v122, v123, v124, 50.0, 11.0, 12.0);
        uint64_t v126 = *__swift_project_boxed_opaque_existential_1(v112 + 10, v112[13]);
        uint64_t v127 = swift_retain();
        sub_1DEB988C8(v127, v125, v126, (uint64_t)v308);
        swift_release();
        sub_1DEB8DFB0(v104);
      }
      else
      {
        sub_1DEA9B504(0, &qword_1EBAF2BA8, (uint64_t)&type metadata for TagViewLayoutOptions.AccessoryOptions.Item, MEMORY[0x1E4FBBE00]);
        uint64_t v221 = swift_allocObject();
        *(_OWORD *)(v221 + 16) = xmmword_1DFE0B250;
        *(unsigned char *)(v221 + 32) = 5;
        uint64_t v223 = (uint64_t)v304;
        id v222 = v305;
        uint64_t v111 = v306;
        uint64_t v224 = v307;
        uint64_t v225 = (char *)v221;
        switch(*(unsigned char *)(v103 + 16))
        {
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            char v279 = sub_1DFDFFF50();
            swift_bridgeObjectRelease();
            if ((v279 & 1) == 0)
            {
              unint64_t v281 = *((void *)v225 + 2);
              unint64_t v280 = *((void *)v225 + 3);
              if (v281 >= v280 >> 1) {
                uint64_t v225 = sub_1DEE17A10((char *)(v280 > 1), v281 + 1, 1, v225);
              }
              *((void *)v225 + 2) = v281 + 1;
              v225[v281 + 32] = 6;
            }
            break;
        }
        v282 = (void *)v222[16];
        if (!objc_msgSend(v282, sel_useFeedDifferentiationMode, v298, v299, v300, v301)
          || objc_msgSend(v282, sel_useFeedDifferentiationMode)
          && (id v283 = objc_msgSend((id)v222[17], sel_cachedSubscription),
              unsigned int v284 = objc_msgSend(v283, sel_isSubscribed),
              v283,
              v284))
        {
          unint64_t v286 = *((void *)v225 + 2);
          unint64_t v285 = *((void *)v225 + 3);
          if (v286 >= v285 >> 1) {
            uint64_t v225 = sub_1DEE17A10((char *)(v285 > 1), v286 + 1, 1, v225);
          }
          *((void *)v225 + 2) = v286 + 1;
          v225[v286 + 32] = 2;
        }
        id v287 = objc_msgSend(*(id *)(*(void *)(v103 + 24) + 16), sel_asSports);
        if (v287) {
          swift_unknownObjectRelease();
        }
        sub_1DEB8DF54(v104, (uint64_t)v311);
        int v288 = v312;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v303 + 16))(v223, v224, v302);
        double v289 = *MEMORY[0x1E4FB2848];
        double v290 = *(double *)(MEMORY[0x1E4FB2848] + 8);
        double v291 = *(double *)(MEMORY[0x1E4FB2848] + 16);
        double v292 = *(double *)(MEMORY[0x1E4FB2848] + 24);
        type metadata accessor for TagViewLayoutOptions();
        swift_allocObject();
        if (v288 == 1)
        {
          double v293 = 44.0;
          double v294 = 8.0;
        }
        else
        {
          double v293 = 50.0;
          double v294 = 11.0;
        }
        uint64_t v295 = sub_1DF00C128(v223, (uint64_t)v225, v287 != 0, 2, v289, v290, v291, v292, v293, v294, 12.0);
        uint64_t v296 = *__swift_project_boxed_opaque_existential_1(v222 + 10, v222[13]);
        uint64_t v297 = swift_retain();
        sub_1DEB988C8(v297, v295, v296, (uint64_t)v308);
        swift_release();
      }
      swift_release();
      uint64_t *v111 = v103;
      memcpy(v111 + 1, v308, 0x1EAuLL);
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
      uint64_t v139 = *(void *)v22;
      sub_1DFD7FCD8((uint64_t)v308);
      uint64_t v140 = *(void *)&v308[2];
      char v141 = BYTE8(v308[2]);
      id v142 = v306;
      *uint64_t v306 = v139;
      long long v143 = v308[1];
      *(_OWORD *)(v142 + 1) = v308[0];
      *(_OWORD *)(v142 + 3) = v143;
      v142[5] = v140;
      *((unsigned char *)v142 + 48) = v141;
      long long v144 = v308[4];
      *(_OWORD *)(v142 + 7) = v308[3];
      *(_OWORD *)(v142 + 9) = v144;
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    case 0xBu:
      uint64_t v128 = *(void *)v22;
      sub_1DEB8E140();
      uint64_t v130 = v22 + *(int *)(v129 + 48);
      sub_1DEB8E1B4();
      uint64_t v132 = v131;
      uint64_t v133 = v306;
      uint64_t v134 = (char *)v306 + *(int *)(v131 + 48);
      sub_1DE9371E8();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v135 - 8) + 32))(v134, v130, v135);
      sub_1DFD7FCD8((uint64_t)v308);
      uint64_t v136 = (_OWORD *)((char *)v133 + *(int *)(v132 + 64));
      uint64_t *v133 = v128;
      long long v137 = v308[3];
      v136[2] = v308[2];
      v136[3] = v137;
      v136[4] = v308[4];
      long long v138 = v308[1];
      _OWORD *v136 = v308[0];
      v136[1] = v138;
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    case 0xEu:
      long long v145 = *(_OWORD *)(v22 + 16);
      long long v313 = *(_OWORD *)v22;
      long long v314 = v145;
      int v315 = *(_DWORD *)(v22 + 32);
      uint64_t v146 = *(void *)v22;
      uint64_t v147 = *(void *)(v22 + 8);
      uint64_t v148 = *(void *)(v22 + 16);
      uint64_t v149 = *(void *)(v22 + 24);
      int v150 = *(unsigned __int16 *)(v22 + 32) | (*(unsigned __int8 *)(v22 + 34) << 16);
      char v151 = *(unsigned char *)(v22 + 35);
      sub_1DEB8DF54(v23, (uint64_t)v311);
      int v152 = v312;
      uint64_t v153 = (uint64_t)v304;
      (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v304, v307, v302);
      double v154 = *MEMORY[0x1E4FB2848];
      double v155 = *(double *)(MEMORY[0x1E4FB2848] + 8);
      double v156 = *(double *)(MEMORY[0x1E4FB2848] + 16);
      double v157 = *(double *)(MEMORY[0x1E4FB2848] + 24);
      type metadata accessor for TagViewLayoutOptions();
      swift_allocObject();
      if (v152 == 1)
      {
        double v158 = 44.0;
        double v159 = 8.0;
      }
      else
      {
        double v158 = 50.0;
        double v159 = 11.0;
      }
      uint64_t v226 = sub_1DF00C128(v153, MEMORY[0x1E4FBC860], 0, 2, v154, v155, v156, v157, v158, v159, 12.0);
      uint64_t v227 = *__swift_project_boxed_opaque_existential_1(v305 + 10, v305[13]);
      sub_1DEB99E3C((uint64_t)&v313);
      sub_1DEB935D8((uint64_t)&v313, v226, v227, (uint64_t)v309);
      swift_release();
      sub_1DEB99E70((uint64_t)&v313);
      memcpy((char *)v308 + 4, v309, 0x1EAuLL);
      uint64_t v228 = v306;
      *uint64_t v306 = v146;
      v228[1] = v147;
      v228[2] = v148;
      v228[3] = v149;
      *((unsigned char *)v228 + 34) = BYTE2(v150);
      *((_WORD *)v228 + 16) = v150;
      *((unsigned char *)v228 + 35) = v151;
      memcpy((char *)v228 + 36, v308, 0x1EEuLL);
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    case 0xFu:
      uint64_t v160 = *(void *)v22;
      uint64_t v161 = v305[15];
      sub_1DFDF2AC0();
      uint64_t v163 = v162;
      double v164 = sub_1DF2BA530(v160, v161);
      double v165 = sub_1DF2BA530(v160, v161);
      double v166 = 0.0;
      if (v165 > 0.0) {
        double v166 = sub_1DF2BA530(v160, v161) + 16.0;
      }
      uint64_t v167 = v306;
      *uint64_t v306 = v160;
      *((double *)v167 + 1) = v166;
      *((_OWORD *)v167 + 1) = xmmword_1DFE10D50;
      v167[4] = v163;
      *((double *)v167 + 5) = v164;
      v167[6] = 0;
      v167[7] = 0;
      v167[8] = v163;
      *((double *)v167 + 9) = v166;
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    case 0x10u:
      sub_1DEB99D64(v22, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
      uint64_t v168 = v307;
      uint64_t v169 = (void *)sub_1DFDF2B20();
      id v170 = objc_msgSend(v169, sel_horizontalSizeClass, v298, v299, v300, v301);

      if (v170 == (id)1)
      {
        long long v42 = type metadata accessor for FollowingMySportsModel;
        uint64_t v43 = (uint64_t)v14;
LABEL_49:
        sub_1DEB9C058(v43, (uint64_t (*)(void))v42);
        type metadata accessor for FollowingLayoutModel();
      }
      else
      {
        sub_1DEB8DF54(v23, (uint64_t)v309);
        int v229 = LOBYTE(v309[10]);
        uint64_t v230 = (uint64_t)v304;
        (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v304, v168, v302);
        double v231 = *MEMORY[0x1E4FB2848];
        double v232 = *(double *)(MEMORY[0x1E4FB2848] + 8);
        double v233 = *(double *)(MEMORY[0x1E4FB2848] + 16);
        double v234 = *(double *)(MEMORY[0x1E4FB2848] + 24);
        type metadata accessor for TagViewLayoutOptions();
        swift_allocObject();
        BOOL v201 = v229 == 1;
        uint64_t v235 = (uint64_t)v306;
        if (v201)
        {
          double v255 = 44.0;
          double v256 = 8.0;
        }
        else
        {
          double v255 = 50.0;
          double v256 = 11.0;
        }
        uint64_t v257 = sub_1DF00C128(v230, MEMORY[0x1E4FBC860], 0, 2, v231, v232, v233, v234, v255, v256, 12.0);
        uint64_t v258 = (double *)__swift_project_boxed_opaque_existential_1(v305 + 10, v305[13]);
        sub_1DEB94A18((uint64_t)v14, v257, *v258, (uint64_t)v308);
        swift_release();
        sub_1DEB99DCC(0, &qword_1EBAEF5E0, (void (*)(uint64_t))type metadata accessor for FollowingMySportsModel);
        uint64_t v260 = (void *)(v235 + *(int *)(v259 + 48));
        sub_1DEB99D64((uint64_t)v14, v235, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
        memcpy(v260, v308, 0x1EAuLL);
        type metadata accessor for FollowingLayoutModel();
      }
      goto LABEL_113;
    case 0x11u:
      sub_1DEB99D64(v22, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
      sub_1DEB8DF54(a1, (uint64_t)v309);
      int v171 = LOBYTE(v309[10]);
      uint64_t v172 = (uint64_t)v304;
      (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v304, v307, v302);
      double v173 = *MEMORY[0x1E4FB2848];
      double v174 = *(double *)(MEMORY[0x1E4FB2848] + 8);
      double v175 = *(double *)(MEMORY[0x1E4FB2848] + 16);
      double v176 = *(double *)(MEMORY[0x1E4FB2848] + 24);
      type metadata accessor for TagViewLayoutOptions();
      swift_allocObject();
      if (v171 == 1)
      {
        double v177 = 44.0;
        double v178 = 8.0;
      }
      else
      {
        double v177 = 50.0;
        double v178 = 11.0;
      }
      uint64_t v236 = sub_1DF00C128(v172, MEMORY[0x1E4FBC860], 0, 2, v173, v174, v175, v176, v177, v178, 12.0);
      uint64_t v237 = (uint64_t)v306;
      uint64_t v238 = (double *)__swift_project_boxed_opaque_existential_1(v305 + 10, v305[13]);
      sub_1DEB95EF8((uint64_t)v11, v236, *v238, (uint64_t)v308);
      swift_release();
      sub_1DEB99DCC(0, (unint64_t *)&unk_1EBAEFC18, (void (*)(uint64_t))type metadata accessor for FollowingPuzzleHubModel);
      uint64_t v240 = (void *)(v237 + *(int *)(v239 + 48));
      sub_1DEB99D64((uint64_t)v11, v237, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
      memcpy(v240, v308, 0x1EAuLL);
      type metadata accessor for FollowingLayoutModel();
      goto LABEL_113;
    default:
      uint64_t v25 = *(void *)v22;
      unint64_t v24 = *(void *)(v22 + 8);
      unint64_t v26 = *(void **)(v22 + 16);
      uint64_t v27 = v307;
      uint64_t v28 = (void *)sub_1DFDF2B20();
      id v29 = objc_msgSend(v28, sel_horizontalSizeClass, v298, v299, v300, v301);

      if (v29 == (id)1)
      {
        type metadata accessor for FollowingLayoutModel();
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1DEB8DF54(v23, (uint64_t)v309);
        int v179 = LOBYTE(v309[10]);
        uint64_t v180 = (uint64_t)v304;
        (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v304, v27, v302);
        double v181 = *MEMORY[0x1E4FB2848];
        double v182 = *(double *)(MEMORY[0x1E4FB2848] + 8);
        double v183 = *(double *)(MEMORY[0x1E4FB2848] + 16);
        double v184 = *(double *)(MEMORY[0x1E4FB2848] + 24);
        type metadata accessor for TagViewLayoutOptions();
        swift_allocObject();
        if (v179 == 1)
        {
          double v185 = 44.0;
          double v186 = 8.0;
        }
        else
        {
          double v185 = 50.0;
          double v186 = 11.0;
        }
        uint64_t v241 = sub_1DF00C128(v180, MEMORY[0x1E4FBC860], 0, 2, v181, v182, v183, v184, v185, v186, 12.0);
        uint64_t v242 = *__swift_project_boxed_opaque_existential_1(v305 + 10, v305[13]);
        id v243 = v26;
        swift_bridgeObjectRetain();
        sub_1DEB8E230(v25, v24, v26, v241, v242, (uint64_t)v308);

        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v244 = v306;
        *uint64_t v306 = v25;
        v244[1] = v24;
        v244[2] = (uint64_t)v26;
        memcpy(v244 + 3, v308, 0x1EAuLL);
        type metadata accessor for FollowingLayoutModel();
LABEL_113:
        swift_storeEnumTagMultiPayload();
      }
      return;
  }
}

uint64_t sub_1DEB8DD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF2BF0();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = *v2;
  (*(void (**)(unsigned char *, uint64_t))(v7 + 16))(&v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], a2);
  uint64_t v10 = v6;
  uint64_t v11 = a2;
  sub_1DEB00E0C((void (*)(char *))sub_1DEB8DF34, (uint64_t)v9);
  type metadata accessor for FollowingSectionLayoutDescriptor();
  type metadata accessor for FollowingLayoutModel();
  sub_1DE9372B4((unint64_t *)&unk_1EBAB6310, (void (*)(uint64_t))type metadata accessor for FollowingSectionLayoutDescriptor);
  sub_1DE9372B4(&qword_1EBAADF30, (void (*)(uint64_t))type metadata accessor for FollowingLayoutModel);
  return sub_1DFDF10D0();
}

uint64_t sub_1DEB8DF34(uint64_t a1)
{
  return sub_1DEB8A5D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DEB8DF54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DEB8DFB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DEB8E004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t result = a2;
  if (a11 >= 8u && a11 - 9 >= 2)
  {
    if (a11 != 8) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEB8E0B4(uint64_t a1)
{
  return sub_1DEB8BC2C(a1, v1[2], v1[3], v1[4]);
}

void sub_1DEB8E0D8()
{
  if (!qword_1EBAEE4A8[0])
  {
    type metadata accessor for FollowingModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, qword_1EBAEE4A8);
    }
  }
}

void sub_1DEB8E140()
{
  if (!qword_1EAC211C0)
  {
    type metadata accessor for FollowingButtonModel();
    sub_1DE9371E8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC211C0);
    }
  }
}

void sub_1DEB8E1B4()
{
  if (!qword_1EAC211D0)
  {
    type metadata accessor for FollowingButtonModel();
    sub_1DE9371E8();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAC211D0);
    }
  }
}

double sub_1DEB8E230@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = (void *)(a5 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(a5 + 16), *(void *)(a5 + 40));
  int v12 = *(unsigned __int8 *)(a4 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  swift_bridgeObjectRetain();
  id v214 = a3;
  id v13 = sub_1DF733364(v12);
  uint64_t v14 = *(void **)(*__swift_project_boxed_opaque_existential_1(v11, *(void *)(a5 + 40)) + 24);
  id v15 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  id v16 = objc_msgSend(v14, sel_scaledFontForFont_, v15);

  uint64_t v17 = (void *)sub_1DFDF2AF0();
  id v18 = objc_msgSend(v17, sel_preferredContentSizeCategory);

  char v256 = sub_1DFDFF0C0();
  *(void *)&long long v309 = 0;
  *((void *)&v309 + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  long long v372 = v309;
  double v19 = *(double *)(a4 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v13, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v16, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  LOWORD(v310) = 256;
  sub_1DFDFFB10();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v260, (uint64_t)v308, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v308, (uint64_t)&v309, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v309) != 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    long long v25 = v309;
    double v258 = v310;
    double v26 = v311;
    CGFloat v27 = v312;
    CGFloat v28 = v313;
    CGFloat v29 = v314;
    CGFloat v30 = v315;
    CGFloat v31 = v316;
    CGFloat v32 = v317;
    CGFloat v33 = v318;
    CGFloat v34 = v319;
    uint64_t v35 = v320;
    uint64_t v36 = v321;
    float v37 = v322;
    float v38 = v323;
    CGFloat v39 = v324;
    CGFloat v40 = v325;
    CGFloat v41 = v326;
    CGFloat v42 = v327;
    CGFloat v43 = v328;
    CGFloat v44 = v329;
    CGFloat v45 = v330;
    CGFloat v46 = v331;
    CGFloat v47 = v332;
    CGFloat v48 = v333;
    CGFloat v49 = v334;
    CGFloat v50 = v335;
    CGFloat v51 = v336;
    double v254 = v337;
    CGFloat v52 = v338;
    double v242 = v339;
    CGFloat v251 = v340;
    CGFloat v238 = v341;
    uint64_t v53 = v368;
    char v54 = v370;
    char v55 = v371;
    CGFloat v248 = v342;
    CGFloat v233 = v343;
    CGFloat v246 = v344;
    CGFloat v229 = v345;
    CGFloat rect = v346;
    CGFloat v224 = v347;
    CGFloat v240 = v348;
    CGFloat v222 = v349;
    CGFloat v236 = v350;
    CGFloat v219 = v351;
    CGFloat v231 = v352;
    CGFloat v217 = v353;
    CGFloat v227 = v354;
    CGFloat v215 = v355;
    CGFloat v257 = v356;
    CGFloat v56 = v357;
    CGFloat v213 = v358;
    CGFloat v57 = v359;
    CGFloat v211 = v360;
    CGFloat v58 = v361;
    CGFloat v209 = v362;
    CGFloat v207 = v363;
    CGFloat v205 = v364;
    CGFloat v203 = v365;
    CGFloat v201 = v366;
    double v198 = v367;
    double v59 = v369;
    goto LABEL_80;
  }
  id v250 = v13;
  int v195 = v12;
  id v174 = v16;
  if (v12)
  {
    double v20 = *(double *)(a4 + 56);
    double v21 = 6.0;
    double v22 = 16.0;
    double v23 = 4.0;
    unint64_t v24 = a2;
    if (v256) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v60 = 56;
  if (v256) {
    uint64_t v60 = 64;
  }
  double v20 = *(double *)(a4 + v60);
  double v22 = *(double *)(a4 + 48) - (v20 + v20);
  double v21 = 10.0;
  unint64_t v24 = a2;
  if ((v256 & 1) == 0)
  {
LABEL_10:
    double v23 = 1.0;
    goto LABEL_11;
  }
  double v21 = 12.0;
  double v23 = 4.0;
LABEL_11:
  double v61 = *(double *)(a4 + 24);
  double v62 = *(double *)(a4 + 40);
  double v63 = sub_1DEDE98D0(a4);
  uint64_t v53 = *(void *)(a4 + 72);
  uint64_t v64 = *(void *)(v53 + 16);
  uint64_t v65 = *(void *)(v64 + 16);
  if (v65)
  {
    uint64_t v66 = 0;
    uint64_t v67 = (unsigned __int8 *)(v64 + 32);
    double v68 = 0.0;
    uint64_t v69 = *(void *)(v64 + 16);
    while (1)
    {
      int v70 = *v67++;
      switch(v70)
      {
        case 1:
        case 4:
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72) {
            goto LABEL_82;
          }
          double v68 = v68 + *(double *)(v53 + 32);
          goto LABEL_14;
        case 3:
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72) {
            goto LABEL_83;
          }
          double v68 = v68 + *(double *)(v53 + 64);
          goto LABEL_14;
        case 5:
          double v68 = v68 + 11.0;
          goto LABEL_14;
        case 6:
        case 7:
        case 8:
          goto LABEL_14;
        default:
          if (*(unsigned char *)(v53 + 24)) {
            uint64_t v71 = 48;
          }
          else {
            uint64_t v71 = 32;
          }
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72)
          {
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          double v68 = v68 + *(double *)(v53 + v71);
LABEL_14:
          if (!--v69) {
            goto LABEL_26;
          }
          break;
      }
    }
  }
  uint64_t v66 = 0;
  double v68 = 0.0;
LABEL_26:
  BOOL v72 = __OFSUB__(v66, 1);
  uint64_t v73 = v66 - 1;
  if (v72)
  {
LABEL_84:
    __break(1u);
    JUMPOUT(0x1DEB8F6D4);
  }
  double v74 = v61 + 8.0;
  double v220 = v62 + 8.0;
  uint64_t v75 = v73 & ~(v73 >> 63);
  double v76 = 20.0;
  if (v195) {
    double v76 = 10.0;
  }
  double v241 = v68 + v76 * (double)v75;
  double v77 = v19 - (v74 + v62 + 8.0) - v22 - v21 - v241;
  double v78 = sub_1DF00C07C();
  if (v65)
  {
    uint64_t v79 = (unsigned __int8 *)(v64 + 32);
    double v80 = 0.0;
    do
    {
      int v81 = *v79++;
      if (v81 == 8) {
        double v80 = v80 + 35.0;
      }
      --v65;
    }
    while (v65);
  }
  else
  {
    double v80 = 0.0;
  }
  double v258 = v19;
  double v223 = v63;
  double v237 = v22 + v21 + v74;
  double v239 = v77 - v78 - v80 - v63;
  CGFloat v243 = v74;
  CGFloat recta = v77;
  if (!v24) {
    goto LABEL_53;
  }
  uint64_t v82 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v82 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v82 && (*(unsigned char *)(a4 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    objc_msgSend(v16, sel_lineHeight);
    double v84 = v83;
    sub_1DEA66C20();
    uint64_t v85 = swift_allocObject();
    *(_OWORD *)(v85 + 16) = xmmword_1DFE0B250;
    uint64_t v86 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v85 + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v87 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v85 + 64) = v87;
    *(void *)(v85 + 40) = v174;
    id v234 = v86;
    id v88 = v174;
    sub_1DEA65870(v85);
    id v89 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v90 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    unsigned int v91 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v92 = objc_msgSend(v89, sel_initWithString_attributes_, v90, v91);

    float v93 = 0.1;
    if (v256) {
      uint64_t v35 = 3;
    }
    else {
      uint64_t v35 = 1;
    }
    if ((v256 & 1) == 0) {
      float v93 = 0.0;
    }
    float v196 = v93;
    if (v256) {
      uint64_t v94 = 3;
    }
    else {
      uint64_t v94 = 2;
    }
    objc_msgSend(v92, sel_boundingRectWithSize_options_context_, v94, 0, v77, v84 * (double)v35);
    CGFloat v96 = v95;
    CGFloat v98 = v97;
    double v225 = v23;
    CGFloat v99 = v77;
    CGFloat v101 = v100;
    CGFloat v103 = v102;

    v373.origin.CGFloat x = v96;
    v373.origin.CGFloat y = v98;
    v373.size.CGFloat width = v101;
    v373.size.CGFloat height = v103;
    double v255 = ceil(CGRectGetHeight(v373));
    objc_msgSend(v250, sel_lineHeight);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v105 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    uint64_t v106 = swift_allocObject();
    *(_OWORD *)(v106 + 16) = xmmword_1DFE0B250;
    *(void *)(v106 + 64) = v87;
    *(void *)(v106 + 32) = v234;
    *(void *)(v106 + 40) = v250;
    id v107 = v250;
    id v108 = v234;
    sub_1DEA65870(v106);
    id v109 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v110 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    uint64_t v111 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v112 = objc_msgSend(v109, sel_initWithString_attributes_, v110, v111, 0x80000001DFEBF2F0);

    sub_1DFDFEF40();
    CGFloat v114 = v113;
    CGFloat v116 = v115;
    CGFloat v118 = v117;
    CGFloat v120 = v119;

    v374.origin.CGFloat x = v114;
    v374.origin.CGFloat y = v116;
    double v74 = v243;
    v374.size.CGFloat width = v118;
    v374.size.CGFloat height = v120;
    double v121 = ceil(CGRectGetHeight(v374));
    double v122 = v255 + v225 + v121;
    if (*(double *)(a4 + 48) > v20 + v20 + v122) {
      double v123 = *(double *)(a4 + 48);
    }
    else {
      double v123 = v20 + v20 + v122;
    }
    double v232 = v123 * 0.5;
    v375.origin.CGFloat x = v237;
    v375.origin.CGFloat y = v123 * 0.5 - v122 * 0.5;
    CGFloat y = v375.origin.y;
    v375.size.CGFloat width = v99;
    v375.size.CGFloat height = v121;
    double v228 = v225 + CGRectGetMaxY(v375);
    v376.origin.CGFloat x = v237;
    double v249 = y;
    v376.origin.CGFloat y = y;
    v376.size.CGFloat width = v99;
    v376.size.CGFloat height = v121;
    float v194 = v196;
    double v230 = v225 + CGRectGetMaxY(v376);
    uint64_t v125 = v35;
    CGFloat v235 = v239;
    CGFloat v226 = v237;
    CGFloat v247 = v99;
  }
  else
  {
LABEL_53:
    float v126 = 0.1;
    float v196 = 0.0;
    if ((v256 & 1) == 0) {
      float v126 = 0.0;
    }
    float v194 = v126;
    if (v256) {
      uint64_t v35 = 3;
    }
    else {
      uint64_t v35 = 2;
    }
    type metadata accessor for Localized();
    uint64_t v127 = swift_getObjCClassFromMetadata();
    id v128 = objc_msgSend(self, sel_bundleForClass_, v127);
    sub_1DFDE6ED0();

    sub_1DEA66C20();
    uint64_t v129 = swift_allocObject();
    *(_OWORD *)(v129 + 16) = xmmword_1DFE0B250;
    uint64_t v130 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v129 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v129 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v129 + 40) = v250;
    id v131 = v250;
    id v132 = v130;
    sub_1DEA65870(v129);
    id v133 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v134 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    uint64_t v135 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v136 = objc_msgSend(v133, sel_initWithString_attributes_, v134, v135, 0x80000001DFEBF2F0);

    sub_1DFDFEF60();
    double v138 = v137;

    uint64_t v125 = 0;
    double v121 = ceil(v138);
    if (*(double *)(a4 + 48) > v20 + v20 + v121) {
      double v123 = *(double *)(a4 + 48);
    }
    else {
      double v123 = v20 + v20 + v121;
    }
    double v249 = (v123 - v121) * 0.5;
    double v232 = v123 * 0.5;
    CGFloat v235 = 0.0;
    double v255 = 0.0;
    CGFloat v226 = 0.0;
    double v228 = 0.0;
    double v230 = 0.0;
    CGFloat v247 = 0.0;
  }
  double v139 = ceil((v123 - v22) * 0.5);
  v377.origin.CGFloat x = v74;
  v377.origin.CGFloat y = v139;
  v377.size.CGFloat width = v22;
  v377.size.CGFloat height = v22;
  double MinX = CGRectGetMinX(v377);
  double v221 = v258 - v220;
  CGFloat v140 = -sub_1DF00C07C() - v223;
  double v141 = 0.0;
  v378.origin.CGFloat y = 0.0;
  v378.origin.CGFloat x = v221 - v241;
  v378.size.CGFloat width = v241;
  v378.size.CGFloat height = v123;
  CGRect v379 = CGRectOffset(v378, v140, 0.0);
  CGFloat v216 = v379.origin.y;
  CGFloat x = v379.origin.x;
  CGFloat height = v379.size.height;
  CGFloat width = v379.size.width;
  uint64_t v142 = *(void *)(v53 + 16);
  uint64_t v143 = *(void *)(v142 + 16);
  char v55 = v195;
  if (v143)
  {
    long long v144 = (unsigned __int8 *)(v142 + 32);
    long long v145 = v250;
    uint64_t v36 = v125;
    CGFloat v146 = v237;
    do
    {
      int v147 = *v144++;
      if (v147 == 8) {
        double v141 = v141 + 35.0;
      }
      --v143;
    }
    while (v143);
  }
  else
  {
    long long v145 = v250;
    uint64_t v36 = v125;
    CGFloat v146 = v237;
  }
  double v148 = 0.0;
  v380.origin.CGFloat x = v146;
  v380.origin.CGFloat y = v249;
  v380.size.CGFloat width = recta;
  v380.size.CGFloat height = v121;
  CGRect v381 = CGRectOffset(v380, v141, 0.0);
  CGFloat v202 = v381.origin.x;
  CGFloat v204 = v381.origin.y;
  CGFloat v206 = v381.size.height;
  CGFloat v208 = v381.size.width;
  uint64_t v149 = *(void *)(v142 + 16);
  double v150 = 0.0;
  if (v149)
  {
    char v151 = (unsigned __int8 *)(v142 + 32);
    do
    {
      int v152 = *v151++;
      if (v152 == 8) {
        double v150 = v150 + 35.0;
      }
      --v149;
    }
    while (v149);
  }
  double v252 = MinX + -12.0;
  double v197 = ceil(v123);
  v382.origin.CGFloat x = v226;
  v382.origin.CGFloat y = v228;
  v382.size.CGFloat width = v247;
  v382.size.CGFloat height = v255;
  CGRect v383 = CGRectOffset(v382, v150, 0.0);
  CGFloat v170 = v383.origin.x;
  CGFloat v171 = v383.origin.y;
  CGFloat v200 = v383.size.width;
  CGFloat v172 = v383.size.height;
  uint64_t v153 = *(void *)(v142 + 16);
  if (v153)
  {
    double v154 = (unsigned __int8 *)(v142 + 32);
    double v148 = 0.0;
    do
    {
      int v155 = *v154++;
      if (v155 == 8) {
        double v148 = v148 + 35.0;
      }
      --v153;
    }
    while (v153);
  }
  v384.origin.CGFloat x = v243;
  v384.origin.CGFloat y = v139;
  v384.size.CGFloat width = v22;
  v384.size.CGFloat height = v22;
  CGRect v385 = CGRectOffset(v384, v148, 0.0);
  CGFloat v166 = v385.origin.x;
  CGFloat v167 = v385.origin.y;
  CGFloat v168 = v385.size.height;
  CGFloat v169 = v385.size.width;
  v385.origin.CGFloat x = v146;
  v385.origin.CGFloat y = v249;
  v385.size.CGFloat width = recta;
  v385.size.CGFloat height = v121;
  CGRect v386 = CGRectIntegral(v385);
  CGFloat v192 = v386.origin.y;
  CGFloat v193 = v386.origin.x;
  CGFloat v190 = v386.size.height;
  CGFloat v191 = v386.size.width;
  v386.origin.CGFloat x = v146;
  v386.origin.CGFloat y = v249;
  v386.size.CGFloat width = v239;
  v386.size.CGFloat height = v121;
  CGRect v387 = CGRectIntegral(v386);
  CGFloat v188 = v387.origin.y;
  CGFloat v189 = v387.origin.x;
  CGFloat v186 = v387.size.height;
  CGFloat v187 = v387.size.width;
  v387.origin.CGFloat x = v226;
  v387.origin.CGFloat y = v228;
  v387.size.CGFloat width = v247;
  v387.size.CGFloat height = v255;
  CGRect v388 = CGRectIntegral(v387);
  CGFloat v184 = v388.origin.y;
  CGFloat v185 = v388.origin.x;
  CGFloat v182 = v388.size.height;
  CGFloat v183 = v388.size.width;
  v388.origin.CGFloat x = v226;
  v388.origin.CGFloat y = v230;
  v388.size.CGFloat width = v235;
  v388.size.CGFloat height = v255;
  CGRect v389 = CGRectIntegral(v388);
  CGFloat v180 = v389.origin.y;
  CGFloat v181 = v389.origin.x;
  CGFloat v177 = v389.size.height;
  CGFloat v178 = v389.size.width;
  v389.origin.CGFloat x = v243;
  v389.origin.CGFloat y = v139;
  v389.size.CGFloat width = v22;
  v389.size.CGFloat height = v22;
  CGRect v390 = CGRectIntegral(v389);
  CGFloat v47 = v390.origin.x;
  CGFloat v163 = v390.size.width;
  CGFloat v164 = v390.origin.y;
  CGFloat v179 = v390.size.height;
  v390.origin.CGFloat x = v243;
  v390.origin.CGFloat y = v139;
  v390.size.CGFloat width = v22;
  v390.size.CGFloat height = v22;
  CGFloat v176 = CGRectGetMinX(v390) + -1.0;
  v391.origin.CGFloat x = v243;
  v391.origin.CGFloat y = v139;
  v391.size.CGFloat width = v22;
  v391.size.CGFloat height = v22;
  double v254 = CGRectGetMinY(v391) + -1.0;
  v392.origin.CGFloat x = v243;
  v392.origin.CGFloat y = v139;
  v392.size.CGFloat width = v22;
  v392.size.CGFloat height = v22;
  CGFloat v175 = CGRectGetWidth(v392) + 2.0;
  v393.origin.CGFloat x = v243;
  v393.origin.CGFloat y = v139;
  v393.size.CGFloat width = v22;
  v393.size.CGFloat height = v22;
  double v242 = CGRectGetHeight(v393) + 2.0;
  v394.size.CGFloat width = 8.0;
  v394.size.CGFloat height = 8.0;
  v394.origin.CGFloat x = v252;
  v394.origin.CGFloat y = (v22 + -8.0) * 0.5 + v139;
  CGRect v395 = CGRectIntegral(v394);
  CGFloat v248 = v395.size.width;
  CGFloat v251 = v395.origin.x;
  CGFloat v238 = v395.origin.y;
  CGFloat v233 = v395.size.height;
  v395.size.CGFloat width = 0.0;
  v395.size.CGFloat height = 0.0;
  v395.origin.CGFloat x = v221;
  v395.origin.CGFloat y = v232;
  CGRect v396 = CGRectIntegral(v395);
  CGFloat rect = v396.size.width;
  CGFloat v246 = v396.origin.x;
  CGFloat v229 = v396.origin.y;
  CGFloat v224 = v396.size.height;
  v396.origin.CGFloat y = 0.0;
  v396.origin.CGFloat x = v221 - v241;
  v396.size.CGFloat width = v241;
  v396.size.CGFloat height = v123;
  CGRect v397 = CGRectIntegral(v396);
  CGFloat v240 = v397.origin.x;
  CGFloat v219 = v397.size.height;
  CGFloat v222 = v397.origin.y;
  CGFloat v236 = v397.size.width;
  v397.origin.CGFloat y = v216;
  v397.origin.CGFloat x = x;
  v397.size.CGFloat height = height;
  v397.size.CGFloat width = width;
  CGRect v398 = CGRectIntegral(v397);
  CGFloat v231 = v398.origin.x;
  CGFloat v215 = v398.size.height;
  CGFloat v217 = v398.origin.y;
  CGFloat v227 = v398.size.width;
  v398.origin.CGFloat x = v202;
  v398.origin.CGFloat y = v204;
  v398.size.CGFloat height = v206;
  v398.size.CGFloat width = v208;
  CGRect v399 = CGRectIntegral(v398);
  CGFloat v156 = v399.origin.x;
  CGFloat v165 = v399.origin.y;
  CGFloat v157 = v399.size.width;
  CGFloat v162 = v399.size.height;
  v399.origin.CGFloat x = v170;
  v399.origin.CGFloat y = v171;
  v399.size.CGFloat width = v200;
  v399.size.CGFloat height = v172;
  CGRect v400 = CGRectIntegral(v399);
  CGFloat v158 = v400.origin.x;
  CGFloat v173 = v400.origin.y;
  CGFloat v159 = v400.size.width;
  CGFloat v160 = v400.size.height;
  v400.origin.CGFloat x = v166;
  v400.origin.CGFloat y = v167;
  v400.size.CGFloat height = v168;
  v400.size.CGFloat width = v169;
  CGRect v401 = CGRectIntegral(v400);
  char v54 = v256 & 1;
  v260[1] = 0;
  v260[0] = 0;
  *(double *)&v260[2] = v258;
  *(double *)&v260[3] = v197;
  *(CGFloat *)&v260[4] = v193;
  *(CGFloat *)&v260[5] = v192;
  *(CGFloat *)&v260[6] = v191;
  *(CGFloat *)&v260[7] = v190;
  *(CGFloat *)&v260[8] = v189;
  *(CGFloat *)&v260[9] = v188;
  *(CGFloat *)&v260[10] = v187;
  *(CGFloat *)&v260[11] = v186;
  v260[12] = v35;
  v260[13] = v36;
  float v261 = v194;
  float v262 = v196;
  CGFloat v263 = v185;
  CGFloat v264 = v184;
  CGFloat v265 = v183;
  CGFloat v266 = v182;
  CGFloat v267 = v181;
  CGFloat v268 = v180;
  CGFloat v269 = v178;
  CGFloat v270 = v177;
  CGFloat v271 = v47;
  CGFloat v48 = v164;
  CGFloat v272 = v164;
  CGFloat v273 = v163;
  CGFloat v274 = v179;
  CGFloat v275 = v176;
  double v276 = v254;
  CGFloat v277 = v175;
  double v278 = v242;
  CGFloat v279 = v251;
  CGFloat v280 = v238;
  CGFloat v281 = v248;
  CGFloat v282 = v233;
  CGFloat v283 = v246;
  CGFloat v284 = v229;
  CGFloat v285 = rect;
  CGFloat v286 = v224;
  CGFloat v287 = v240;
  CGFloat v288 = v222;
  CGFloat v289 = v236;
  CGFloat v290 = v219;
  CGFloat v291 = v231;
  CGFloat v292 = v217;
  CGFloat v293 = v227;
  CGFloat v294 = v215;
  CGFloat v257 = v156;
  CGFloat v295 = v156;
  CGFloat v56 = v165;
  CGFloat v296 = v165;
  CGFloat v211 = v158;
  CGFloat v213 = v157;
  CGFloat v297 = v157;
  CGFloat v57 = v162;
  CGFloat v298 = v162;
  CGFloat v299 = v158;
  CGFloat v58 = v173;
  CGFloat v300 = v173;
  CGFloat v207 = v160;
  CGFloat v209 = v159;
  CGFloat v301 = v159;
  CGFloat v302 = v160;
  CGFloat v203 = v401.origin.y;
  CGFloat v205 = v401.origin.x;
  CGRect v303 = v401;
  double v198 = v401.size.height;
  CGFloat v201 = v401.size.width;
  uint64_t v304 = v53;
  double v305 = v197;
  char v306 = v54;
  char v307 = v195;
  nullsub_1(v260);
  sub_1DEB9BE28((uint64_t)v260, (uint64_t)v259, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();

  swift_bridgeObjectRelease();
  swift_release();

  CGFloat v49 = v163;
  CGFloat v46 = v177;
  CGFloat v45 = v178;
  CGFloat v44 = v180;
  CGFloat v43 = v181;
  CGFloat v42 = v182;
  CGFloat v41 = v183;
  CGFloat v40 = v184;
  CGFloat v39 = v185;
  CGFloat v34 = v186;
  CGFloat v33 = v187;
  CGFloat v32 = v188;
  CGFloat v31 = v189;
  CGFloat v30 = v190;
  CGFloat v29 = v191;
  CGFloat v28 = v192;
  CGFloat v27 = v193;
  float v37 = v194;
  CGFloat v52 = v175;
  CGFloat v51 = v176;
  double v26 = v197;
  CGFloat v50 = v179;
  float v38 = v196;
  long long v25 = 0uLL;
  double v59 = v197;
LABEL_80:
  *(_OWORD *)a6 = v25;
  *(double *)(a6 + 16) = v258;
  *(double *)(a6 + 24) = v26;
  *(CGFloat *)(a6 + 32) = v27;
  *(CGFloat *)(a6 + 40) = v28;
  *(CGFloat *)(a6 + 48) = v29;
  *(CGFloat *)(a6 + 56) = v30;
  *(CGFloat *)(a6 + 64) = v31;
  *(CGFloat *)(a6 + 72) = v32;
  *(CGFloat *)(a6 + 80) = v33;
  *(CGFloat *)(a6 + 88) = v34;
  *(float *)(a6 + 112) = v37;
  *(float *)(a6 + 116) = v38;
  *(CGFloat *)(a6 + 120) = v39;
  *(CGFloat *)(a6 + 128) = v40;
  *(CGFloat *)(a6 + 136) = v41;
  *(CGFloat *)(a6 + 144) = v42;
  *(CGFloat *)(a6 + 152) = v43;
  *(CGFloat *)(a6 + 160) = v44;
  *(CGFloat *)(a6 + 168) = v45;
  *(CGFloat *)(a6 + 176) = v46;
  *(CGFloat *)(a6 + 184) = v47;
  *(CGFloat *)(a6 + 192) = v48;
  *(CGFloat *)(a6 + 200) = v49;
  *(CGFloat *)(a6 + 208) = v50;
  *(CGFloat *)(a6 + 216) = v51;
  *(double *)(a6 + 224) = v254;
  *(void *)(a6 + 96) = v35;
  *(void *)(a6 + 104) = v36;
  *(CGFloat *)(a6 + 232) = v52;
  *(double *)(a6 + 240) = v242;
  *(CGFloat *)(a6 + 248) = v251;
  *(CGFloat *)(a6 + 256) = v238;
  *(CGFloat *)(a6 + 264) = v248;
  *(CGFloat *)(a6 + 272) = v233;
  *(CGFloat *)(a6 + 280) = v246;
  *(CGFloat *)(a6 + 288) = v229;
  *(CGFloat *)(a6 + 296) = rect;
  *(CGFloat *)(a6 + 304) = v224;
  *(CGFloat *)(a6 + 312) = v240;
  *(CGFloat *)(a6 + 320) = v222;
  *(CGFloat *)(a6 + 328) = v236;
  *(CGFloat *)(a6 + 336) = v219;
  *(CGFloat *)(a6 + 344) = v231;
  *(CGFloat *)(a6 + 352) = v217;
  *(CGFloat *)(a6 + 360) = v227;
  *(CGFloat *)(a6 + 368) = v215;
  *(CGFloat *)(a6 + 376) = v257;
  *(CGFloat *)(a6 + 384) = v56;
  *(CGFloat *)(a6 + 392) = v213;
  *(CGFloat *)(a6 + 400) = v57;
  *(CGFloat *)(a6 + 408) = v211;
  *(CGFloat *)(a6 + 416) = v58;
  *(CGFloat *)(a6 + 424) = v209;
  *(CGFloat *)(a6 + 432) = v207;
  *(CGFloat *)(a6 + 440) = v205;
  *(CGFloat *)(a6 + 448) = v203;
  *(CGFloat *)(a6 + 456) = v201;
  double result = v198;
  *(double *)(a6 + 464) = v198;
  *(void *)(a6 + 472) = v53;
  *(double *)(a6 + 480) = v59;
  *(unsigned char *)(a6 + 488) = v54;
  *(unsigned char *)(a6 + 489) = v55;
  return result;
}

double sub_1DEB8F6F8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1[2];
  uint64_t v247 = a1[1];
  sub_1DEB99D64((uint64_t)(a1 + 3), (uint64_t)v380, (uint64_t (*)(void))sub_1DEB9BEA8);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  int v9 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  swift_bridgeObjectRetain();
  sub_1DEB9BF3C(v380);
  id v10 = sub_1DF733364(v9);
  uint64_t v11 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40)) + 24);
  id v12 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  id v13 = objc_msgSend(v11, sel_scaledFontForFont_, v12);

  uint64_t v14 = (void *)sub_1DFDF2AF0();
  id v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

  char v260 = sub_1DFDFF0C0();
  *(void *)&long long v316 = 0;
  *((void *)&v316 + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  long long v379 = v316;
  uint64_t v262 = a2;
  double v16 = *(double *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v10, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v13, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  BOOL v17 = *a1 == 0;
  LOBYTE(v317) = *a1 != 0;
  BYTE1(v317) = v17;
  sub_1DFDFFB10();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v267, (uint64_t)v315, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v315, (uint64_t)&v316, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v316) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1DEB9BF94(v380);
    long long v23 = v316;
    double v265 = v317;
    double v24 = v318;
    CGFloat v25 = v319;
    CGFloat v26 = v320;
    CGFloat v27 = v321;
    CGFloat v28 = v322;
    CGFloat v29 = v323;
    CGFloat v30 = v324;
    CGFloat v31 = v325;
    CGFloat v32 = v326;
    uint64_t v33 = v327;
    uint64_t v34 = v328;
    float v35 = v329;
    float v36 = v330;
    CGFloat v37 = v331;
    CGFloat v38 = v332;
    CGFloat v39 = v333;
    CGFloat v40 = v334;
    CGFloat v41 = v335;
    CGFloat v42 = v336;
    CGFloat v43 = v337;
    CGFloat v44 = v338;
    CGFloat v45 = v339;
    CGFloat v46 = v340;
    CGFloat v47 = v341;
    CGFloat v48 = v342;
    CGFloat v49 = v343;
    double v263 = v344;
    CGFloat v50 = v345;
    double v252 = v346;
    CGFloat v258 = v347;
    CGFloat v248 = v348;
    uint64_t v51 = v375;
    char v52 = v377;
    LOBYTE(v9) = v378;
    CGFloat v256 = v349;
    CGFloat v242 = v350;
    CGFloat v254 = v351;
    CGFloat v234 = v352;
    CGFloat rect = v353;
    CGFloat v250 = v354;
    CGFloat v230 = v355;
    CGFloat v245 = v356;
    CGFloat v227 = v357;
    CGFloat v240 = v358;
    CGFloat v224 = v359;
    CGFloat v237 = v360;
    CGFloat v222 = v361;
    CGFloat v232 = v362;
    CGFloat v219 = v363;
    CGFloat v261 = v364;
    CGFloat v53 = v365;
    CGFloat v217 = v366;
    CGFloat v54 = v367;
    CGFloat v215 = v368;
    CGFloat v55 = v369;
    CGFloat v213 = v370;
    CGFloat v211 = v371;
    CGFloat v209 = v372;
    CGFloat v207 = v373;
    double v205 = v374;
    double v56 = v376;
    goto LABEL_83;
  }
  id v236 = v13;
  id v218 = v10;
  if (v9)
  {
    double v244 = *(double *)(a2 + 56);
    double v18 = 6.0;
    double v19 = 16.0;
    double v20 = 4.0;
    unint64_t v21 = v8;
    double v22 = v10;
    if (v260) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v57 = 56;
  if (v260) {
    uint64_t v57 = 64;
  }
  double v244 = *(double *)(a2 + v57);
  double v19 = *(double *)(a2 + 48) - (v244 + v244);
  double v18 = 10.0;
  unint64_t v21 = v8;
  double v22 = v10;
  if ((v260 & 1) == 0)
  {
LABEL_10:
    double v20 = 1.0;
    goto LABEL_11;
  }
  double v18 = 12.0;
  double v20 = 4.0;
LABEL_11:
  double v228 = v20;
  double v58 = *(double *)(a2 + 24);
  double v59 = *(double *)(a2 + 40);
  double v60 = sub_1DEB9A6FC(a1, v22, (uint64_t)&type metadata for FollowingMagazineModel, (uint64_t)&off_1F3AB8458);
  double v251 = v61;
  double v255 = v60;
  double v62 = 0.0;
  if (v60 == 0.0) {
    double v63 = 0.0;
  }
  else {
    double v63 = 8.0;
  }
  double v253 = sub_1DEDE98D0(a2);
  uint64_t v51 = *(void *)(a2 + 72);
  uint64_t v64 = *(void *)(v51 + 16);
  uint64_t v65 = *(void *)(v64 + 16);
  if (v65)
  {
    uint64_t v66 = 0;
    uint64_t v67 = (unsigned __int8 *)(v64 + 32);
    uint64_t v68 = *(void *)(v64 + 16);
    while (1)
    {
      int v69 = *v67++;
      switch(v69)
      {
        case 1:
        case 4:
          BOOL v71 = __OFADD__(v66++, 1);
          if (v71) {
            goto LABEL_85;
          }
          double v62 = v62 + *(double *)(v51 + 32);
          goto LABEL_17;
        case 3:
          BOOL v71 = __OFADD__(v66++, 1);
          if (v71) {
            goto LABEL_86;
          }
          double v62 = v62 + *(double *)(v51 + 64);
          goto LABEL_17;
        case 5:
          double v62 = v62 + 11.0;
          goto LABEL_17;
        case 6:
        case 7:
        case 8:
          goto LABEL_17;
        default:
          if (*(unsigned char *)(v51 + 24)) {
            uint64_t v70 = 48;
          }
          else {
            uint64_t v70 = 32;
          }
          BOOL v71 = __OFADD__(v66++, 1);
          if (v71)
          {
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
            goto LABEL_87;
          }
          double v62 = v62 + *(double *)(v51 + v70);
LABEL_17:
          if (!--v68) {
            goto LABEL_29;
          }
          break;
      }
    }
  }
  uint64_t v66 = 0;
LABEL_29:
  BOOL v71 = __OFSUB__(v66, 1);
  uint64_t v72 = v66 - 1;
  if (v71)
  {
LABEL_87:
    __break(1u);
    JUMPOUT(0x1DEB90C58);
  }
  double v73 = v59 + 8.0;
  double v74 = v58 + 8.0;
  double v220 = v73;
  double v75 = v58 + 8.0 + v73;
  uint64_t v76 = v72 & ~(v72 >> 63);
  double v77 = 20.0;
  if (v9) {
    double v77 = 10.0;
  }
  double v241 = v62 + v77 * (double)v76;
  double v78 = v16 - v75 - v19 - v18 - v63 - v255 - v241;
  double v79 = sub_1DF00C07C();
  if (v65)
  {
    double v80 = (unsigned __int8 *)(v64 + 32);
    double v81 = 0.0;
    double v82 = v253;
    do
    {
      int v83 = *v80++;
      if (v83 == 8) {
        double v81 = v81 + 35.0;
      }
      --v65;
    }
    while (v65);
  }
  else
  {
    double v81 = 0.0;
    double v82 = v253;
  }
  double v265 = v16;
  double v233 = v78 - v79 - v81 - v82;
  double v235 = v58 + 8.0;
  double v259 = v19 + v18 + v74;
  if (!v21) {
    goto LABEL_56;
  }
  uint64_t v84 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v84 = v247 & 0xFFFFFFFFFFFFLL;
  }
  if (v84 && (*(unsigned char *)(v262 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    objc_msgSend(v13, sel_lineHeight);
    double v86 = v85;
    sub_1DEA66C20();
    uint64_t v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = xmmword_1DFE0B250;
    id v88 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v87 + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v89 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v87 + 64) = v89;
    *(void *)(v87 + 40) = v236;
    id v225 = v88;
    id v90 = v236;
    sub_1DEA65870(v87);
    id v91 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v92 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    float v93 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v94 = objc_msgSend(v91, sel_initWithString_attributes_, v92, v93);

    float v95 = 0.1;
    if (v260) {
      uint64_t v33 = 3;
    }
    else {
      uint64_t v33 = 1;
    }
    if ((v260 & 1) == 0) {
      float v95 = 0.0;
    }
    float v202 = v95;
    if (v260) {
      uint64_t v96 = 3;
    }
    else {
      uint64_t v96 = 2;
    }
    objc_msgSend(v94, sel_boundingRectWithSize_options_context_, v96, 0, v78, v86 * (double)v33);
    CGFloat v98 = v97;
    CGFloat v100 = v99;
    CGFloat v102 = v101;
    CGFloat v104 = v103;

    v381.origin.CGFloat x = v98;
    v381.origin.CGFloat y = v100;
    v381.size.CGFloat width = v102;
    v381.size.CGFloat height = v104;
    CGFloat v105 = ceil(CGRectGetHeight(v381));
    objc_msgSend(v218, sel_lineHeight);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v107 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    uint64_t v108 = swift_allocObject();
    *(_OWORD *)(v108 + 16) = xmmword_1DFE0B250;
    *(void *)(v108 + 64) = v89;
    *(void *)(v108 + 32) = v225;
    *(void *)(v108 + 40) = v218;
    id v109 = v218;
    id v110 = v225;
    sub_1DEA65870(v108);
    id v111 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v112 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    double v113 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    CGFloat v114 = v111;
    uint64_t v34 = v33;
    id v115 = objc_msgSend(v114, sel_initWithString_attributes_, v112, v113, 0x80000001DFEBF340);

    sub_1DFDFEF40();
    CGFloat v117 = v116;
    CGFloat v119 = v118;
    CGFloat v121 = v120;
    CGFloat v123 = v122;

    v382.origin.CGFloat x = v117;
    v382.origin.CGFloat y = v119;
    v382.size.CGFloat width = v121;
    v382.size.CGFloat height = v123;
    double v74 = v235;
    double v124 = ceil(CGRectGetHeight(v382));
    CGFloat v231 = v105;
    double v125 = v105 + v228 + v124;
    if (*(double *)(v262 + 48) > v244 + v244 + v125) {
      double v126 = *(double *)(v262 + 48);
    }
    else {
      double v126 = v244 + v244 + v125;
    }
    v383.origin.CGFloat x = v259;
    v383.origin.CGFloat y = v126 * 0.5 - v125 * 0.5;
    CGFloat y = v383.origin.y;
    v383.size.CGFloat width = v78;
    v383.size.CGFloat height = v124;
    double v243 = v228 + CGRectGetMaxY(v383);
    v384.origin.CGFloat x = v259;
    double v264 = y;
    v384.origin.CGFloat y = y;
    v384.size.CGFloat width = v78;
    v384.size.CGFloat height = v124;
    float v201 = v202;
    double v226 = v228 + CGRectGetMaxY(v384);
    CGFloat v229 = v233;
    CGFloat v249 = v259;
    double v128 = v126;
    CGFloat v223 = v78;
  }
  else
  {
LABEL_56:
    float v129 = 0.1;
    float v202 = 0.0;
    if ((v260 & 1) == 0) {
      float v129 = 0.0;
    }
    float v201 = v129;
    if (v260) {
      uint64_t v33 = 3;
    }
    else {
      uint64_t v33 = 2;
    }
    type metadata accessor for Localized();
    uint64_t v130 = swift_getObjCClassFromMetadata();
    id v131 = objc_msgSend(self, sel_bundleForClass_, v130);
    sub_1DFDE6ED0();

    sub_1DEA66C20();
    uint64_t v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = xmmword_1DFE0B250;
    id v133 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v132 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v132 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v132 + 40) = v218;
    id v134 = v218;
    id v135 = v133;
    sub_1DEA65870(v132);
    id v136 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    double v137 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    double v138 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v139 = objc_msgSend(v136, sel_initWithString_attributes_, v137, v138, 0x80000001DFEBF340);

    sub_1DFDFEF60();
    double v141 = v140;

    uint64_t v34 = 0;
    double v124 = ceil(v141);
    if (*(double *)(v262 + 48) > v244 + v244 + v124) {
      double v128 = *(double *)(v262 + 48);
    }
    else {
      double v128 = v244 + v244 + v124;
    }
    double v264 = (v128 - v124) * 0.5;
    CGFloat v229 = 0.0;
    CGFloat v231 = 0.0;
    CGFloat v249 = 0.0;
    CGFloat v223 = 0.0;
    double v226 = 0.0;
    double v243 = 0.0;
  }
  double v246 = v128;
  double v142 = ceil((v128 - v19) * 0.5);
  v385.origin.CGFloat x = v74;
  v385.origin.CGFloat y = v142;
  v385.size.CGFloat width = v19;
  v385.size.CGFloat height = v19;
  double MinX = CGRectGetMinX(v385);
  double v143 = v265 - v220;
  CGFloat v144 = -sub_1DF00C07C() - v253;
  double v145 = 0.0;
  v386.origin.CGFloat y = 0.0;
  double v221 = v265 - v220 - v241;
  v386.origin.CGFloat x = v221;
  v386.size.CGFloat width = v241;
  v386.size.CGFloat height = v246;
  CGRect v387 = CGRectOffset(v386, v144, 0.0);
  CGFloat v214 = v387.origin.y;
  CGFloat x = v387.origin.x;
  CGFloat height = v387.size.height;
  CGFloat width = v387.size.width;
  uint64_t v146 = *(void *)(v51 + 16);
  uint64_t v147 = *(void *)(v146 + 16);
  if (v147)
  {
    double v148 = (unsigned __int8 *)(v146 + 32);
    uint64_t v149 = v236;
    do
    {
      int v150 = *v148++;
      if (v150 == 8) {
        double v145 = v145 + 35.0;
      }
      --v147;
    }
    while (v147);
  }
  else
  {
    uint64_t v149 = v236;
  }
  double v151 = 0.0;
  v388.origin.CGFloat x = v259;
  v388.origin.CGFloat y = v264;
  v388.size.CGFloat width = v78;
  v388.size.CGFloat height = v124;
  CGRect v389 = CGRectOffset(v388, v145, 0.0);
  CGFloat v180 = v389.origin.x;
  CGFloat v182 = v389.origin.y;
  CGFloat v206 = v389.size.height;
  CGFloat v208 = v389.size.width;
  uint64_t v152 = *(void *)(v146 + 16);
  double v153 = 0.0;
  if (v152)
  {
    double v154 = (unsigned __int8 *)(v146 + 32);
    do
    {
      int v155 = *v154++;
      if (v155 == 8) {
        double v153 = v153 + 35.0;
      }
      --v152;
    }
    while (v152);
  }
  double v257 = MinX + -12.0;
  double v238 = v143 - v255;
  v390.origin.CGFloat y = v243;
  double v204 = ceil(v246);
  v390.origin.CGFloat x = v249;
  v390.size.CGFloat width = v223;
  v390.size.CGFloat height = v231;
  CGRect v391 = CGRectOffset(v390, v153, 0.0);
  CGFloat v175 = v391.origin.x;
  CGFloat v176 = v391.origin.y;
  CGFloat v177 = v391.size.height;
  CGFloat v178 = v391.size.width;
  uint64_t v156 = *(void *)(v146 + 16);
  if (v156)
  {
    CGFloat v157 = (unsigned __int8 *)(v146 + 32);
    double v151 = 0.0;
    do
    {
      int v158 = *v157++;
      if (v158 == 8) {
        double v151 = v151 + 35.0;
      }
      --v156;
    }
    while (v156);
  }
  v392.origin.CGFloat x = v235;
  v392.origin.CGFloat y = v142;
  v392.size.CGFloat width = v19;
  v392.size.CGFloat height = v19;
  CGRect v393 = CGRectOffset(v392, v151, 0.0);
  CGFloat v171 = v393.origin.x;
  CGFloat v172 = v393.origin.y;
  CGFloat v173 = v393.size.height;
  CGFloat v174 = v393.size.width;
  v393.origin.CGFloat x = v259;
  v393.origin.CGFloat y = v264;
  v393.size.CGFloat width = v78;
  v393.size.CGFloat height = v124;
  CGRect v394 = CGRectIntegral(v393);
  CGFloat v197 = v394.origin.x;
  CGFloat v198 = v394.size.height;
  CGFloat v199 = v394.size.width;
  CGFloat v200 = v394.origin.y;
  v394.origin.CGFloat x = v259;
  v394.origin.CGFloat y = v264;
  v394.size.CGFloat width = v233;
  v394.size.CGFloat height = v124;
  CGRect v395 = CGRectIntegral(v394);
  CGFloat v188 = v395.origin.x;
  CGFloat v159 = v395.origin.y;
  CGFloat v168 = v395.origin.y;
  CGFloat v195 = v395.size.height;
  CGFloat v196 = v395.size.width;
  v395.origin.CGFloat x = v249;
  v395.origin.CGFloat y = v243;
  v395.size.CGFloat width = v223;
  v395.size.CGFloat height = v231;
  CGRect v396 = CGRectIntegral(v395);
  CGFloat v193 = v396.origin.y;
  CGFloat v194 = v396.origin.x;
  CGFloat v191 = v396.size.height;
  CGFloat v192 = v396.size.width;
  v396.origin.CGFloat x = v249;
  v396.origin.CGFloat y = v226;
  v396.size.CGFloat width = v229;
  v396.size.CGFloat height = v231;
  CGRect v397 = CGRectIntegral(v396);
  CGFloat v189 = v397.origin.y;
  CGFloat v190 = v397.origin.x;
  CGFloat v186 = v397.size.width;
  CGFloat v160 = v397.size.height;
  v397.origin.CGFloat x = v235;
  v397.origin.CGFloat y = v142;
  v397.size.CGFloat width = v19;
  v397.size.CGFloat height = v19;
  CGRect v398 = CGRectIntegral(v397);
  CGFloat v161 = v398.origin.x;
  CGFloat v169 = v398.size.width;
  CGFloat v170 = v398.origin.y;
  CGFloat v187 = v398.size.height;
  v398.origin.CGFloat x = v235;
  v398.origin.CGFloat y = v142;
  v398.size.CGFloat width = v19;
  v398.size.CGFloat height = v19;
  CGFloat v185 = CGRectGetMinX(v398) + -1.0;
  v399.origin.CGFloat x = v235;
  v399.origin.CGFloat y = v142;
  v399.size.CGFloat width = v19;
  v399.size.CGFloat height = v19;
  double v263 = CGRectGetMinY(v399) + -1.0;
  v400.origin.CGFloat x = v235;
  v400.origin.CGFloat y = v142;
  v400.size.CGFloat width = v19;
  v400.size.CGFloat height = v19;
  CGFloat v184 = CGRectGetWidth(v400) + 2.0;
  v401.origin.CGFloat x = v235;
  v401.origin.CGFloat y = v142;
  v401.size.CGFloat width = v19;
  v401.size.CGFloat height = v19;
  double v252 = CGRectGetHeight(v401) + 2.0;
  v402.size.CGFloat width = 8.0;
  v402.size.CGFloat height = 8.0;
  v402.origin.CGFloat x = v257;
  v402.origin.CGFloat y = (v19 + -8.0) * 0.5 + v142;
  CGRect v403 = CGRectIntegral(v402);
  CGFloat v256 = v403.size.width;
  CGFloat v258 = v403.origin.x;
  CGFloat v248 = v403.origin.y;
  CGFloat v242 = v403.size.height;
  v403.origin.CGFloat x = v238;
  v403.origin.CGFloat y = (v246 - v251) * 0.5;
  v403.size.CGFloat width = v255;
  v403.size.CGFloat height = v251;
  CGRect v404 = CGRectIntegral(v403);
  CGFloat v254 = v404.origin.x;
  CGFloat v234 = v404.origin.y;
  CGFloat rect = v404.size.width;
  CGFloat v250 = v404.size.height;
  v404.origin.CGFloat y = 0.0;
  v404.origin.CGFloat x = v221;
  v404.size.CGFloat width = v241;
  v404.size.CGFloat height = v246;
  CGRect v405 = CGRectIntegral(v404);
  CGFloat v227 = v405.size.width;
  CGFloat v230 = v405.origin.x;
  CGFloat v245 = v405.origin.y;
  CGFloat v240 = v405.size.height;
  v405.origin.CGFloat y = v214;
  v405.origin.CGFloat x = x;
  v405.size.CGFloat height = height;
  v405.size.CGFloat width = width;
  CGRect v406 = CGRectIntegral(v405);
  CGFloat v222 = v406.size.width;
  CGFloat v224 = v406.origin.x;
  CGFloat v237 = v406.origin.y;
  CGFloat v232 = v406.size.height;
  v406.origin.CGFloat x = v180;
  v406.origin.CGFloat y = v182;
  v406.size.CGFloat height = v206;
  v406.size.CGFloat width = v208;
  CGRect v407 = CGRectIntegral(v406);
  CGFloat v219 = v407.origin.x;
  CGFloat v162 = v407.origin.y;
  CGFloat v183 = v407.size.width;
  CGFloat v163 = v407.size.height;
  v407.origin.CGFloat x = v175;
  v407.origin.CGFloat y = v176;
  v407.size.CGFloat height = v177;
  v407.size.CGFloat width = v178;
  CGRect v408 = CGRectIntegral(v407);
  CGFloat v179 = v408.size.width;
  CGFloat v181 = v408.origin.x;
  CGFloat v164 = v408.origin.y;
  CGFloat v165 = v408.size.height;
  v408.origin.CGFloat x = v171;
  v408.origin.CGFloat y = v172;
  v408.size.CGFloat height = v173;
  v408.size.CGFloat width = v174;
  CGRect v409 = CGRectIntegral(v408);
  char v52 = v260 & 1;
  v267[1] = 0;
  v267[0] = 0;
  *(double *)&v267[2] = v265;
  *(double *)&v267[3] = v204;
  *(CGFloat *)&v267[4] = v197;
  *(CGFloat *)&v267[5] = v200;
  *(CGFloat *)&v267[6] = v199;
  *(CGFloat *)&v267[7] = v198;
  *(CGFloat *)&v267[8] = v188;
  *(CGFloat *)&v267[9] = v159;
  *(CGFloat *)&v267[10] = v196;
  *(CGFloat *)&v267[11] = v195;
  v267[12] = v33;
  v267[13] = v34;
  float v268 = v201;
  float v269 = v202;
  CGFloat v270 = v194;
  CGFloat v271 = v193;
  CGFloat v272 = v192;
  CGFloat v273 = v191;
  CGFloat v274 = v190;
  CGFloat v275 = v189;
  CGFloat v276 = v186;
  CGFloat v166 = v160;
  CGFloat v277 = v160;
  CGFloat v45 = v161;
  CGFloat v278 = v161;
  CGFloat v46 = v170;
  CGFloat v279 = v170;
  CGFloat v280 = v169;
  CGFloat v281 = v187;
  CGFloat v282 = v185;
  double v283 = v263;
  CGFloat v284 = v184;
  double v285 = v252;
  CGFloat v286 = v258;
  CGFloat v287 = v248;
  CGFloat v288 = v256;
  CGFloat v289 = v242;
  CGFloat v290 = v254;
  CGFloat v291 = v234;
  CGFloat v292 = rect;
  CGFloat v293 = v250;
  CGFloat v294 = v230;
  CGFloat v295 = v245;
  CGFloat v296 = v227;
  CGFloat v297 = v240;
  CGFloat v298 = v224;
  CGFloat v299 = v237;
  CGFloat v300 = v222;
  CGFloat v301 = v232;
  CGFloat v302 = v219;
  CGFloat v261 = v162;
  CGFloat v303 = v162;
  CGFloat v53 = v183;
  CGFloat v304 = v183;
  CGFloat v215 = v164;
  CGFloat v217 = v163;
  CGFloat v305 = v163;
  CGFloat v54 = v181;
  CGFloat v306 = v181;
  CGFloat v307 = v164;
  CGFloat v55 = v179;
  CGFloat v308 = v179;
  CGFloat v211 = v409.origin.x;
  CGFloat v213 = v165;
  CGFloat v309 = v165;
  CGRect v310 = v409;
  CGFloat v207 = v409.size.width;
  CGFloat v209 = v409.origin.y;
  double v205 = v409.size.height;
  uint64_t v311 = v51;
  double v312 = v204;
  char v313 = v52;
  char v314 = v9;
  nullsub_1(v267);
  sub_1DEB9BE28((uint64_t)v267, (uint64_t)v266, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1DEB9BF94(v380);
  CGFloat v47 = v169;
  CGFloat v44 = v166;
  CGFloat v43 = v186;
  CGFloat v48 = v187;
  CGFloat v42 = v189;
  CGFloat v41 = v190;
  CGFloat v40 = v191;
  CGFloat v39 = v192;
  CGFloat v38 = v193;
  CGFloat v37 = v194;
  CGFloat v32 = v195;
  CGFloat v31 = v196;
  CGFloat v30 = v168;
  CGFloat v29 = v188;
  CGFloat v28 = v198;
  CGFloat v27 = v199;
  CGFloat v26 = v200;
  CGFloat v25 = v197;
  float v35 = v201;
  CGFloat v50 = v184;
  CGFloat v49 = v185;
  double v24 = v204;
  float v36 = v202;
  long long v23 = 0uLL;
  double v56 = v204;
LABEL_83:
  *(_OWORD *)a4 = v23;
  *(double *)(a4 + 16) = v265;
  *(double *)(a4 + 24) = v24;
  *(CGFloat *)(a4 + 32) = v25;
  *(CGFloat *)(a4 + 40) = v26;
  *(CGFloat *)(a4 + 48) = v27;
  *(CGFloat *)(a4 + 56) = v28;
  *(CGFloat *)(a4 + 64) = v29;
  *(CGFloat *)(a4 + 72) = v30;
  *(CGFloat *)(a4 + 80) = v31;
  *(CGFloat *)(a4 + 88) = v32;
  *(float *)(a4 + 112) = v35;
  *(float *)(a4 + 116) = v36;
  *(CGFloat *)(a4 + 120) = v37;
  *(CGFloat *)(a4 + 128) = v38;
  *(CGFloat *)(a4 + 136) = v39;
  *(CGFloat *)(a4 + 144) = v40;
  *(CGFloat *)(a4 + 152) = v41;
  *(CGFloat *)(a4 + 160) = v42;
  *(CGFloat *)(a4 + 168) = v43;
  *(CGFloat *)(a4 + 176) = v44;
  *(CGFloat *)(a4 + 184) = v45;
  *(CGFloat *)(a4 + 192) = v46;
  *(CGFloat *)(a4 + 200) = v47;
  *(CGFloat *)(a4 + 208) = v48;
  *(CGFloat *)(a4 + 216) = v49;
  *(double *)(a4 + 224) = v263;
  *(void *)(a4 + 96) = v33;
  *(void *)(a4 + 104) = v34;
  *(CGFloat *)(a4 + 232) = v50;
  *(double *)(a4 + 240) = v252;
  *(CGFloat *)(a4 + 248) = v258;
  *(CGFloat *)(a4 + 256) = v248;
  *(CGFloat *)(a4 + 264) = v256;
  *(CGFloat *)(a4 + 272) = v242;
  *(CGFloat *)(a4 + 280) = v254;
  *(CGFloat *)(a4 + 288) = v234;
  *(CGFloat *)(a4 + 296) = rect;
  *(CGFloat *)(a4 + 304) = v250;
  *(CGFloat *)(a4 + 312) = v230;
  *(CGFloat *)(a4 + 320) = v245;
  *(CGFloat *)(a4 + 328) = v227;
  *(CGFloat *)(a4 + 336) = v240;
  *(CGFloat *)(a4 + 344) = v224;
  *(CGFloat *)(a4 + 352) = v237;
  *(CGFloat *)(a4 + 360) = v222;
  *(CGFloat *)(a4 + 368) = v232;
  *(CGFloat *)(a4 + 376) = v219;
  *(CGFloat *)(a4 + 384) = v261;
  *(CGFloat *)(a4 + 392) = v53;
  *(CGFloat *)(a4 + 400) = v217;
  *(CGFloat *)(a4 + 408) = v54;
  *(CGFloat *)(a4 + 416) = v215;
  *(CGFloat *)(a4 + 424) = v55;
  *(CGFloat *)(a4 + 432) = v213;
  *(CGFloat *)(a4 + 440) = v211;
  *(CGFloat *)(a4 + 448) = v209;
  *(CGFloat *)(a4 + 456) = v207;
  double result = v205;
  *(double *)(a4 + 464) = v205;
  *(void *)(a4 + 472) = v51;
  *(double *)(a4 + 480) = v56;
  *(unsigned char *)(a4 + 488) = v52;
  *(unsigned char *)(a4 + 489) = v9;
  return result;
}

double sub_1DEB90C7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (void *)(a3 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  int v9 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  swift_retain();
  id v10 = sub_1DF733364(v9);
  uint64_t v11 = *(void **)(*__swift_project_boxed_opaque_existential_1(v8, *(void *)(a3 + 40)) + 24);
  id v12 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  id v13 = objc_msgSend(v11, sel_scaledFontForFont_, v12);

  uint64_t v14 = (void *)sub_1DFDF2AF0();
  id v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

  char v258 = sub_1DFDFF0C0();
  *(void *)&long long v310 = 0;
  *((void *)&v310 + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  long long v373 = v310;
  uint64_t rect = a2;
  double v16 = *(double *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v10, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v13, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v17 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  LOWORD(v311) = 256;
  sub_1DFDFFB10();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v261, (uint64_t)v309, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v309, (uint64_t)&v310, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v310) != 1)
  {
    swift_release();
    swift_bridgeObjectRelease();

    long long v24 = v310;
    double v259 = v311;
    double v25 = v312;
    CGFloat v26 = v313;
    CGFloat v27 = v314;
    CGFloat v28 = v315;
    CGFloat v29 = v316;
    CGFloat v30 = v317;
    CGFloat v31 = v318;
    CGFloat v32 = v319;
    CGFloat v33 = v320;
    uint64_t v34 = v321;
    uint64_t v35 = v322;
    float v36 = v323;
    float v37 = v324;
    CGFloat v38 = v325;
    CGFloat v39 = v326;
    CGFloat v40 = v327;
    CGFloat v41 = v328;
    CGFloat v42 = v329;
    CGFloat v43 = v330;
    CGFloat v44 = v331;
    CGFloat v45 = v332;
    CGFloat v46 = v333;
    CGFloat v47 = v334;
    CGFloat v48 = v335;
    CGFloat v49 = v336;
    CGFloat v50 = v337;
    double recta = v338;
    CGFloat v51 = v339;
    double v246 = v340;
    CGFloat v253 = v341;
    CGFloat v241 = v342;
    uint64_t v52 = v369;
    char v53 = v371;
    char v54 = v372;
    CGFloat v250 = v343;
    CGFloat v237 = v344;
    CGFloat v248 = v345;
    CGFloat v227 = v346;
    CGFloat v232 = v347;
    CGFloat v244 = v348;
    CGFloat v223 = v349;
    CGFloat v239 = v350;
    CGFloat v220 = v351;
    CGFloat v235 = v352;
    CGFloat v218 = v353;
    CGFloat v230 = v354;
    CGFloat v216 = v355;
    CGFloat v225 = v356;
    CGFloat v214 = v357;
    CGFloat v213 = v358;
    CGFloat v55 = v359;
    CGFloat v211 = v360;
    CGFloat v56 = v361;
    CGFloat v209 = v362;
    CGFloat v57 = v363;
    CGFloat v207 = v364;
    CGFloat v205 = v365;
    CGFloat v203 = v366;
    double v200 = v367;
    CGFloat v58 = v368;
    double v59 = v370;
    goto LABEL_79;
  }
  id v243 = v13;
  int v198 = v9;
  if (v9)
  {
    uint64_t v18 = rect;
    double v19 = *(double *)(rect + 56);
    double v20 = 6.0;
    double v21 = 16.0;
    double v22 = 4.0;
    char v23 = v258;
    if (v258) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  char v23 = v258;
  uint64_t v60 = 56;
  if (v258) {
    uint64_t v60 = 64;
  }
  uint64_t v18 = rect;
  double v19 = *(double *)(rect + v60);
  double v21 = *(double *)(rect + 48) - (v19 + v19);
  double v20 = 10.0;
  if ((v258 & 1) == 0)
  {
LABEL_10:
    double v22 = 1.0;
    goto LABEL_11;
  }
  double v20 = 12.0;
  double v22 = 4.0;
LABEL_11:
  double v61 = *(double *)(v18 + 24);
  double v62 = *(double *)(v18 + 40);
  double v63 = sub_1DEDE98D0(v18);
  uint64_t v52 = *(void *)(v18 + 72);
  uint64_t v64 = *(void *)(v52 + 16);
  uint64_t v65 = *(void *)(v64 + 16);
  if (v65)
  {
    uint64_t v66 = 0;
    uint64_t v67 = (unsigned __int8 *)(v64 + 32);
    double v68 = 0.0;
    uint64_t v69 = *(void *)(v64 + 16);
    while (1)
    {
      int v70 = *v67++;
      switch(v70)
      {
        case 1:
        case 4:
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72) {
            goto LABEL_81;
          }
          double v68 = v68 + *(double *)(v52 + 32);
          goto LABEL_14;
        case 3:
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72) {
            goto LABEL_82;
          }
          double v68 = v68 + *(double *)(v52 + 64);
          goto LABEL_14;
        case 5:
          double v68 = v68 + 11.0;
          goto LABEL_14;
        case 6:
        case 7:
        case 8:
          goto LABEL_14;
        default:
          if (*(unsigned char *)(v52 + 24)) {
            uint64_t v71 = 48;
          }
          else {
            uint64_t v71 = 32;
          }
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72)
          {
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
            goto LABEL_83;
          }
          double v68 = v68 + *(double *)(v52 + v71);
LABEL_14:
          if (!--v69) {
            goto LABEL_26;
          }
          break;
      }
    }
  }
  uint64_t v66 = 0;
  double v68 = 0.0;
LABEL_26:
  BOOL v72 = __OFSUB__(v66, 1);
  uint64_t v73 = v66 - 1;
  if (v72)
  {
LABEL_83:
    __break(1u);
    JUMPOUT(0x1DEB92030);
  }
  double v74 = v61 + 8.0;
  double v221 = v62 + 8.0;
  uint64_t v75 = v73 & ~(v73 >> 63);
  double v76 = 20.0;
  if (v198) {
    double v76 = 10.0;
  }
  double v240 = v68 + v76 * (double)v75;
  double v77 = v16 - (v74 + v62 + 8.0) - v21 - v20 - v240;
  double v78 = sub_1DF00C07C();
  double v251 = v22;
  if (v65)
  {
    double v79 = (unsigned __int8 *)(v64 + 32);
    double v80 = 0.0;
    do
    {
      int v81 = *v79++;
      if (v81 == 8) {
        double v80 = v80 + 35.0;
      }
      --v65;
    }
    while (v65);
  }
  else
  {
    double v80 = 0.0;
  }
  double v259 = v16;
  double v224 = v63;
  unint64_t v82 = *(void *)(v17 + 56);
  CGFloat v242 = v74;
  double v236 = v21 + v20 + v74;
  double v238 = v77 - v78 - v80 - v63;
  CGFloat v247 = v77;
  if (!v82) {
    goto LABEL_53;
  }
  uint64_t v83 = HIBYTE(v82) & 0xF;
  if ((v82 & 0x2000000000000000) == 0) {
    uint64_t v83 = *(void *)(v17 + 48) & 0xFFFFFFFFFFFFLL;
  }
  if (v83 && (*(unsigned char *)(v18 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    objc_msgSend(v243, sel_lineHeight);
    double v85 = v84;
    sub_1DEA66C20();
    uint64_t v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = xmmword_1DFE0B250;
    uint64_t v87 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v86 + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v233 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v86 + 64) = v233;
    *(void *)(v86 + 40) = v243;
    id v228 = v87;
    id v88 = v243;
    sub_1DEA65870(v86);
    id v89 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v90 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    id v91 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v92 = objc_msgSend(v89, sel_initWithString_attributes_, v90, v91);

    float v93 = 0.1;
    if (v23) {
      uint64_t v35 = 3;
    }
    else {
      uint64_t v35 = 1;
    }
    if ((v23 & 1) == 0) {
      float v93 = 0.0;
    }
    float v199 = v93;
    if (v23) {
      uint64_t v94 = 3;
    }
    else {
      uint64_t v94 = 2;
    }
    objc_msgSend(v92, sel_boundingRectWithSize_options_context_, v94, 0, v77, v85 * (double)v35);
    CGFloat v96 = v95;
    CGFloat v98 = v97;
    CGFloat v99 = v77;
    CGFloat v101 = v100;
    CGFloat v103 = v102;

    v374.origin.CGFloat x = v96;
    v374.origin.CGFloat y = v98;
    v374.size.CGFloat width = v101;
    v374.size.CGFloat height = v103;
    double v104 = ceil(CGRectGetHeight(v374));
    objc_msgSend(v10, sel_lineHeight);
    uint64_t v105 = swift_allocObject();
    *(_OWORD *)(v105 + 16) = xmmword_1DFE0B250;
    *(void *)(v105 + 64) = v233;
    *(void *)(v105 + 32) = v228;
    *(void *)(v105 + 40) = v10;
    id v106 = v10;
    swift_bridgeObjectRetain();
    id v107 = v228;
    sub_1DEA65870(v105);
    id v108 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v109 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    id v110 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v111 = objc_msgSend(v108, sel_initWithString_attributes_, v109, v110);

    sub_1DFDFEF40();
    CGFloat v113 = v112;
    CGFloat v115 = v114;
    CGFloat v117 = v116;
    CGFloat v119 = v118;

    v375.origin.CGFloat x = v113;
    v375.origin.CGFloat y = v115;
    double v74 = v242;
    v375.size.CGFloat width = v117;
    v375.size.CGFloat height = v119;
    double v120 = ceil(CGRectGetHeight(v375));
    double v121 = v104 + v251 + v120;
    if (*(double *)(rect + 48) > v19 + v19 + v121) {
      double v122 = *(double *)(rect + 48);
    }
    else {
      double v122 = v19 + v19 + v121;
    }
    double v231 = v122 * 0.5;
    CGFloat v234 = v104;
    v376.origin.CGFloat x = v236;
    v376.origin.CGFloat y = v122 * 0.5 - v121 * 0.5;
    CGFloat y = v376.origin.y;
    v376.size.CGFloat width = v99;
    v376.size.CGFloat height = v120;
    double v254 = v251 + CGRectGetMaxY(v376);
    double rectb = y;
    v377.origin.CGFloat x = v236;
    v377.origin.CGFloat y = y;
    v377.size.CGFloat width = v99;
    v377.size.CGFloat height = v120;
    float v197 = v199;
    uint64_t v178 = v35;
    double v226 = v251 + CGRectGetMaxY(v377);
    CGFloat v229 = v238;
    CGFloat v252 = v236;
    CGFloat v249 = v99;
  }
  else
  {
LABEL_53:
    float v124 = 0.1;
    float v199 = 0.0;
    if ((v23 & 1) == 0) {
      float v124 = 0.0;
    }
    float v197 = v124;
    uint64_t v125 = 2;
    if (v23) {
      uint64_t v125 = 3;
    }
    uint64_t v178 = v125;
    sub_1DEA66C20();
    uint64_t v126 = swift_allocObject();
    *(_OWORD *)(v126 + 16) = xmmword_1DFE0B250;
    uint64_t v127 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v126 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v126 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v126 + 40) = v10;
    swift_bridgeObjectRetain();
    id v128 = v10;
    id v129 = v127;
    sub_1DEA65870(v126);
    id v130 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v131 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    uint64_t v132 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v133 = objc_msgSend(v130, sel_initWithString_attributes_, v131, v132);

    sub_1DFDFEF60();
    double v135 = v134;

    uint64_t v136 = v18;
    uint64_t v35 = 0;
    double v120 = ceil(v135);
    if (*(double *)(v136 + 48) > v19 + v19 + v120) {
      double v122 = *(double *)(v136 + 48);
    }
    else {
      double v122 = v19 + v19 + v120;
    }
    CGFloat v229 = 0.0;
    double v231 = v122 * 0.5;
    CGFloat v234 = 0.0;
    CGFloat v252 = 0.0;
    double v226 = 0.0;
    CGFloat v249 = 0.0;
    double v254 = 0.0;
    double rectb = (v122 - v120) * 0.5;
  }
  double v137 = ceil((v122 - v21) * 0.5);
  v378.origin.CGFloat x = v74;
  v378.origin.CGFloat y = v137;
  v378.size.CGFloat width = v21;
  v378.size.CGFloat height = v21;
  double MinX = CGRectGetMinX(v378);
  double v222 = v259 - v221;
  CGFloat v138 = -sub_1DF00C07C() - v224;
  double v139 = 0.0;
  v379.origin.CGFloat y = 0.0;
  v379.origin.CGFloat x = v222 - v240;
  v379.size.CGFloat width = v240;
  v379.size.CGFloat height = v122;
  CGRect v380 = CGRectOffset(v379, v138, 0.0);
  CGFloat v217 = v380.origin.y;
  CGFloat x = v380.origin.x;
  CGFloat width = v380.size.width;
  CGFloat height = v380.size.height;
  uint64_t v140 = *(void *)(v52 + 16);
  uint64_t v141 = *(void *)(v140 + 16);
  char v54 = v198;
  if (v141)
  {
    double v142 = (unsigned __int8 *)(v140 + 32);
    double v143 = v243;
    CGFloat v144 = v247;
    do
    {
      int v145 = *v142++;
      if (v145 == 8) {
        double v139 = v139 + 35.0;
      }
      --v141;
    }
    while (v141);
  }
  else
  {
    double v143 = v243;
    CGFloat v144 = v247;
  }
  double v146 = 0.0;
  double v147 = v236;
  double v148 = rectb;
  double v149 = v120;
  CGRect v381 = CGRectOffset(*(CGRect *)(&v144 - 2), v139, 0.0);
  CGFloat v204 = v381.origin.x;
  CGFloat v206 = v381.origin.y;
  CGFloat v208 = v381.size.height;
  CGFloat v210 = v381.size.width;
  uint64_t v150 = *(void *)(v140 + 16);
  double v151 = 0.0;
  if (v150)
  {
    uint64_t v152 = (unsigned __int8 *)(v140 + 32);
    do
    {
      int v153 = *v152++;
      if (v153 == 8) {
        double v151 = v151 + 35.0;
      }
      --v150;
    }
    while (v150);
  }
  double v245 = MinX + -12.0;
  double v177 = ceil(v122);
  v382.origin.CGFloat x = v252;
  v382.origin.CGFloat y = v254;
  v382.size.CGFloat width = v249;
  v382.size.CGFloat height = v234;
  CGRect v383 = CGRectOffset(v382, v151, 0.0);
  CGFloat v172 = v383.origin.x;
  CGFloat v173 = v383.origin.y;
  CGFloat v202 = v383.size.width;
  CGFloat v175 = v383.size.height;
  uint64_t v154 = *(void *)(v140 + 16);
  if (v154)
  {
    int v155 = (unsigned __int8 *)(v140 + 32);
    double v146 = 0.0;
    do
    {
      int v156 = *v155++;
      if (v156 == 8) {
        double v146 = v146 + 35.0;
      }
      --v154;
    }
    while (v154);
  }
  v384.origin.CGFloat x = v242;
  v384.origin.CGFloat y = v137;
  v384.size.CGFloat width = v21;
  v384.size.CGFloat height = v21;
  CGRect v385 = CGRectOffset(v384, v146, 0.0);
  CGFloat v167 = v385.origin.x;
  CGFloat v168 = v385.origin.y;
  CGFloat v169 = v385.size.height;
  CGFloat v170 = v385.size.width;
  v385.origin.CGFloat x = v236;
  v385.origin.CGFloat y = rectb;
  v385.size.CGFloat width = v247;
  v385.size.CGFloat height = v120;
  CGRect v386 = CGRectIntegral(v385);
  CGFloat v193 = v386.origin.x;
  CGFloat v194 = v386.size.height;
  CGFloat v195 = v386.size.width;
  CGFloat v196 = v386.origin.y;
  v386.origin.CGFloat x = v236;
  v386.origin.CGFloat y = rectb;
  v386.size.CGFloat width = v238;
  v386.size.CGFloat height = v120;
  CGRect v387 = CGRectIntegral(v386);
  CGFloat v157 = v387.origin.x;
  CGFloat v164 = v387.origin.x;
  CGFloat v191 = v387.size.width;
  CGFloat v192 = v387.origin.y;
  CGFloat v190 = v387.size.height;
  v387.origin.CGFloat y = v254;
  v387.origin.CGFloat x = v252;
  v387.size.CGFloat width = v249;
  v387.size.CGFloat height = v234;
  CGRect v388 = CGRectIntegral(v387);
  CGFloat v188 = v388.origin.y;
  CGFloat v189 = v388.origin.x;
  CGFloat v186 = v388.size.height;
  CGFloat v187 = v388.size.width;
  v388.origin.CGFloat x = v252;
  v388.origin.CGFloat y = v226;
  v388.size.CGFloat width = v229;
  v388.size.CGFloat height = v234;
  CGRect v389 = CGRectIntegral(v388);
  CGFloat v185 = v389.origin.x;
  CGFloat v182 = v389.size.width;
  CGFloat v183 = v389.origin.y;
  CGFloat v181 = v389.size.height;
  v389.origin.CGFloat x = v242;
  v389.origin.CGFloat y = v137;
  v389.size.CGFloat width = v21;
  v389.size.CGFloat height = v21;
  CGRect v390 = CGRectIntegral(v389);
  CGFloat v158 = v390.origin.x;
  CGFloat v165 = v390.size.width;
  CGFloat v166 = v390.origin.y;
  CGFloat v184 = v390.size.height;
  v390.origin.CGFloat x = v242;
  v390.origin.CGFloat y = v137;
  v390.size.CGFloat width = v21;
  v390.size.CGFloat height = v21;
  CGFloat v180 = CGRectGetMinX(v390) + -1.0;
  v391.origin.CGFloat x = v242;
  v391.origin.CGFloat y = v137;
  v391.size.CGFloat width = v21;
  v391.size.CGFloat height = v21;
  double recta = CGRectGetMinY(v391) + -1.0;
  v392.origin.CGFloat x = v242;
  v392.origin.CGFloat y = v137;
  v392.size.CGFloat width = v21;
  v392.size.CGFloat height = v21;
  CGFloat v179 = CGRectGetWidth(v392) + 2.0;
  v393.origin.CGFloat x = v242;
  v393.origin.CGFloat y = v137;
  v393.size.CGFloat width = v21;
  v393.size.CGFloat height = v21;
  double v246 = CGRectGetHeight(v393) + 2.0;
  v394.size.CGFloat width = 8.0;
  v394.size.CGFloat height = 8.0;
  v394.origin.CGFloat x = v245;
  v394.origin.CGFloat y = (v21 + -8.0) * 0.5 + v137;
  CGRect v395 = CGRectIntegral(v394);
  CGFloat v250 = v395.size.width;
  CGFloat v253 = v395.origin.x;
  CGFloat v241 = v395.origin.y;
  CGFloat v237 = v395.size.height;
  v395.size.CGFloat width = 0.0;
  v395.size.CGFloat height = 0.0;
  v395.origin.CGFloat x = v222;
  v395.origin.CGFloat y = v231;
  CGRect v396 = CGRectIntegral(v395);
  CGFloat v248 = v396.origin.x;
  CGFloat v227 = v396.origin.y;
  CGFloat v232 = v396.size.width;
  CGFloat v244 = v396.size.height;
  v396.origin.CGFloat y = 0.0;
  v396.origin.CGFloat x = v222 - v240;
  v396.size.CGFloat width = v240;
  v396.size.CGFloat height = v122;
  CGRect v397 = CGRectIntegral(v396);
  CGFloat v220 = v397.size.width;
  CGFloat v223 = v397.origin.x;
  CGFloat v239 = v397.origin.y;
  CGFloat v235 = v397.size.height;
  v397.origin.CGFloat y = v217;
  v397.origin.CGFloat x = x;
  v397.size.CGFloat width = width;
  v397.size.CGFloat height = height;
  CGRect v398 = CGRectIntegral(v397);
  CGFloat v216 = v398.size.width;
  CGFloat v218 = v398.origin.x;
  CGFloat v230 = v398.origin.y;
  CGFloat v225 = v398.size.height;
  v398.origin.CGFloat x = v204;
  v398.origin.CGFloat y = v206;
  v398.size.CGFloat height = v208;
  v398.size.CGFloat width = v210;
  CGRect v399 = CGRectIntegral(v398);
  CGFloat v214 = v399.origin.x;
  CGFloat v159 = v399.origin.y;
  CGFloat v171 = v399.size.width;
  CGFloat v160 = v399.size.height;
  v399.origin.CGFloat x = v172;
  v399.origin.CGFloat y = v173;
  v399.size.CGFloat width = v202;
  v399.size.CGFloat height = v175;
  CGRect v400 = CGRectIntegral(v399);
  CGFloat v174 = v400.size.width;
  CGFloat v176 = v400.origin.x;
  CGFloat v161 = v400.origin.y;
  CGFloat v162 = v400.size.height;
  v400.origin.CGFloat x = v167;
  v400.origin.CGFloat y = v168;
  v400.size.CGFloat height = v169;
  v400.size.CGFloat width = v170;
  CGRect v401 = CGRectIntegral(v400);
  char v53 = v23 & 1;
  v261[1] = 0;
  v261[0] = 0;
  *(double *)&v261[2] = v259;
  *(double *)&v261[3] = v177;
  *(CGFloat *)&v261[4] = v193;
  *(CGFloat *)&v261[5] = v196;
  *(CGFloat *)&v261[6] = v195;
  *(CGFloat *)&v261[7] = v194;
  *(CGFloat *)&v261[8] = v157;
  *(CGFloat *)&v261[9] = v192;
  *(CGFloat *)&v261[10] = v191;
  *(CGFloat *)&v261[11] = v190;
  uint64_t v34 = v178;
  v261[12] = v178;
  v261[13] = v35;
  float v262 = v197;
  float v263 = v199;
  CGFloat v264 = v189;
  CGFloat v265 = v188;
  CGFloat v266 = v187;
  CGFloat v267 = v186;
  CGFloat v268 = v185;
  CGFloat v269 = v183;
  CGFloat v270 = v182;
  CGFloat v271 = v181;
  CGFloat v272 = v158;
  CGFloat v48 = v165;
  CGFloat v273 = v166;
  CGFloat v274 = v165;
  CGFloat v275 = v184;
  CGFloat v276 = v180;
  double v277 = recta;
  CGFloat v278 = v179;
  double v279 = v246;
  CGFloat v280 = v253;
  CGFloat v281 = v241;
  CGFloat v282 = v250;
  CGFloat v283 = v237;
  CGFloat v284 = v248;
  CGFloat v285 = v227;
  CGFloat v286 = v232;
  CGFloat v287 = v244;
  CGFloat v288 = v223;
  CGFloat v289 = v239;
  CGFloat v290 = v220;
  CGFloat v291 = v235;
  CGFloat v292 = v218;
  CGFloat v293 = v230;
  CGFloat v294 = v216;
  CGFloat v295 = v225;
  CGFloat v296 = v214;
  CGFloat v211 = v160;
  CGFloat v213 = v159;
  CGFloat v297 = v159;
  CGFloat v55 = v171;
  CGFloat v298 = v171;
  CGFloat v299 = v160;
  CGFloat v56 = v176;
  CGFloat v300 = v176;
  CGFloat v207 = v162;
  CGFloat v209 = v161;
  CGFloat v301 = v161;
  CGFloat v57 = v174;
  CGFloat v302 = v174;
  CGFloat v303 = v162;
  CGFloat v203 = v401.origin.y;
  CGFloat v205 = v401.origin.x;
  CGRect v304 = v401;
  double v200 = v401.size.width;
  CGFloat v58 = v401.size.height;
  uint64_t v305 = v52;
  double v306 = v177;
  char v307 = v53;
  char v308 = v198;
  nullsub_1(v261);
  sub_1DEB9BE28((uint64_t)v261, (uint64_t)v260, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();
  swift_release();
  swift_release();

  CGFloat v47 = v166;
  CGFloat v46 = v158;
  CGFloat v45 = v181;
  CGFloat v44 = v182;
  CGFloat v42 = v185;
  CGFloat v41 = v186;
  CGFloat v40 = v187;
  CGFloat v39 = v188;
  CGFloat v38 = v189;
  CGFloat v33 = v190;
  CGFloat v32 = v191;
  CGFloat v31 = v192;
  CGFloat v30 = v164;
  CGFloat v29 = v194;
  CGFloat v28 = v195;
  CGFloat v27 = v196;
  CGFloat v26 = v193;
  double v25 = v177;
  CGFloat v43 = v183;
  CGFloat v49 = v184;
  float v36 = v197;
  CGFloat v51 = v179;
  CGFloat v50 = v180;
  float v37 = v199;
  long long v24 = 0uLL;
  double v59 = v177;
LABEL_79:
  *(_OWORD *)a4 = v24;
  *(double *)(a4 + 16) = v259;
  *(double *)(a4 + 24) = v25;
  *(CGFloat *)(a4 + 32) = v26;
  *(CGFloat *)(a4 + 40) = v27;
  *(CGFloat *)(a4 + 48) = v28;
  *(CGFloat *)(a4 + 56) = v29;
  *(CGFloat *)(a4 + 64) = v30;
  *(CGFloat *)(a4 + 72) = v31;
  *(CGFloat *)(a4 + 80) = v32;
  *(CGFloat *)(a4 + 88) = v33;
  *(float *)(a4 + 112) = v36;
  *(float *)(a4 + 116) = v37;
  *(CGFloat *)(a4 + 120) = v38;
  *(CGFloat *)(a4 + 128) = v39;
  *(CGFloat *)(a4 + 136) = v40;
  *(CGFloat *)(a4 + 144) = v41;
  *(CGFloat *)(a4 + 152) = v42;
  *(CGFloat *)(a4 + 160) = v43;
  *(CGFloat *)(a4 + 168) = v44;
  *(CGFloat *)(a4 + 176) = v45;
  *(CGFloat *)(a4 + 184) = v46;
  *(CGFloat *)(a4 + 192) = v47;
  *(CGFloat *)(a4 + 200) = v48;
  *(CGFloat *)(a4 + 208) = v49;
  *(CGFloat *)(a4 + 216) = v50;
  *(double *)(a4 + 224) = recta;
  *(void *)(a4 + 96) = v34;
  *(void *)(a4 + 104) = v35;
  *(CGFloat *)(a4 + 232) = v51;
  *(double *)(a4 + 240) = v246;
  *(CGFloat *)(a4 + 248) = v253;
  *(CGFloat *)(a4 + 256) = v241;
  *(CGFloat *)(a4 + 264) = v250;
  *(CGFloat *)(a4 + 272) = v237;
  *(CGFloat *)(a4 + 280) = v248;
  *(CGFloat *)(a4 + 288) = v227;
  *(CGFloat *)(a4 + 296) = v232;
  *(CGFloat *)(a4 + 304) = v244;
  *(CGFloat *)(a4 + 312) = v223;
  *(CGFloat *)(a4 + 320) = v239;
  *(CGFloat *)(a4 + 328) = v220;
  *(CGFloat *)(a4 + 336) = v235;
  *(CGFloat *)(a4 + 344) = v218;
  *(CGFloat *)(a4 + 352) = v230;
  *(CGFloat *)(a4 + 360) = v216;
  *(CGFloat *)(a4 + 368) = v225;
  *(CGFloat *)(a4 + 376) = v214;
  *(CGFloat *)(a4 + 384) = v213;
  *(CGFloat *)(a4 + 392) = v55;
  *(CGFloat *)(a4 + 400) = v211;
  *(CGFloat *)(a4 + 408) = v56;
  *(CGFloat *)(a4 + 416) = v209;
  *(CGFloat *)(a4 + 424) = v57;
  *(CGFloat *)(a4 + 432) = v207;
  *(CGFloat *)(a4 + 440) = v205;
  *(CGFloat *)(a4 + 448) = v203;
  double result = v200;
  *(double *)(a4 + 456) = v200;
  *(CGFloat *)(a4 + 464) = v58;
  *(void *)(a4 + 472) = v52;
  *(double *)(a4 + 480) = v59;
  *(unsigned char *)(a4 + 488) = v53;
  *(unsigned char *)(a4 + 489) = v54;
  return result;
}

double sub_1DEB92054@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1[2];
  uint64_t v253 = a1[1];
  sub_1DEB99D64((uint64_t)(a1 + 3), (uint64_t)v383, (uint64_t (*)(void))sub_1DEB9BEA8);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  int v9 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  swift_bridgeObjectRetain();
  sub_1DEB9BF3C(v383);
  id v10 = sub_1DF733364(v9);
  uint64_t v11 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40)) + 24);
  id v12 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  id v13 = objc_msgSend(v11, sel_scaledFontForFont_, v12);

  uint64_t v14 = (void *)sub_1DFDF2AF0();
  id v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

  char v266 = sub_1DFDFF0C0();
  *(void *)&long long v319 = 0;
  *((void *)&v319 + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  long long v382 = v319;
  uint64_t v263 = a2;
  double v16 = *(double *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v10, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v13, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  BOOL v17 = *a1 == 0;
  LOBYTE(v320) = *a1 != 0;
  BYTE1(v320) = v17;
  sub_1DFDFFB10();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v270, (uint64_t)v318, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v318, (uint64_t)&v319, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v319) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1DEB9BF94(v383);
    long long v24 = v319;
    double v268 = v320;
    double v25 = v321;
    CGFloat v26 = v322;
    CGFloat v27 = v323;
    CGFloat v28 = v324;
    CGFloat v29 = v325;
    CGFloat v30 = v326;
    CGFloat v31 = v327;
    CGFloat v32 = v328;
    CGFloat v33 = v329;
    uint64_t v34 = v330;
    uint64_t v35 = v331;
    float v36 = v332;
    float v37 = v333;
    CGFloat v38 = v334;
    CGFloat v39 = v335;
    CGFloat v40 = v336;
    CGFloat v41 = v337;
    CGFloat v42 = v338;
    CGFloat v43 = v339;
    CGFloat v44 = v340;
    CGFloat v45 = v341;
    CGFloat v46 = v342;
    CGFloat v47 = v343;
    CGFloat v48 = v344;
    CGFloat v49 = v345;
    CGFloat v50 = v346;
    double v264 = v347;
    CGFloat v51 = v348;
    double v254 = v349;
    CGFloat v261 = v350;
    CGFloat v249 = v351;
    uint64_t v52 = v378;
    char v53 = v380;
    char v54 = v381;
    CGFloat v258 = v352;
    CGFloat rect = v353;
    CGFloat v256 = v354;
    CGFloat v236 = v355;
    CGFloat v240 = v356;
    CGFloat v251 = v357;
    CGFloat v231 = v358;
    CGFloat v245 = v359;
    CGFloat v228 = v360;
    CGFloat v242 = v361;
    CGFloat v225 = v362;
    CGFloat v238 = v363;
    CGFloat v223 = v364;
    CGFloat v234 = v365;
    CGFloat v221 = v366;
    CGFloat v267 = v367;
    CGFloat v55 = v368;
    CGFloat v219 = v369;
    CGFloat v56 = v370;
    CGFloat v217 = v371;
    CGFloat v57 = v372;
    CGFloat v215 = v373;
    CGFloat v213 = v374;
    CGFloat v211 = v375;
    CGFloat v209 = v376;
    double v207 = v377;
    double v58 = v379;
    goto LABEL_81;
  }
  id v184 = v13;
  id v220 = v10;
  int v203 = v9;
  if (v9)
  {
    uint64_t v18 = a2;
    double v248 = *(double *)(a2 + 56);
    double v19 = 6.0;
    double v20 = 16.0;
    double v21 = 4.0;
    double v22 = v10;
    unint64_t v23 = v8;
    if (v266) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v59 = 56;
  if (v266) {
    uint64_t v59 = 64;
  }
  uint64_t v18 = a2;
  double v248 = *(double *)(a2 + v59);
  double v20 = *(double *)(a2 + 48) - (v248 + v248);
  double v19 = 10.0;
  double v22 = v10;
  unint64_t v23 = v8;
  if ((v266 & 1) == 0)
  {
LABEL_10:
    double v21 = 1.0;
    goto LABEL_11;
  }
  double v19 = 12.0;
  double v21 = 4.0;
LABEL_11:
  double v246 = v21;
  double v60 = *(double *)(v18 + 24);
  double v61 = *(double *)(v18 + 40);
  double v62 = sub_1DEB9A6FC(a1, v22, (uint64_t)&type metadata for FollowingSavedModel, (uint64_t)&off_1F3ACA130);
  double v252 = v63;
  double v257 = v62;
  double v64 = 0.0;
  if (v62 == 0.0) {
    double v65 = 0.0;
  }
  else {
    double v65 = 8.0;
  }
  double v259 = sub_1DEDE98D0(v18);
  uint64_t v52 = *(void *)(v18 + 72);
  uint64_t v66 = *(void *)(v52 + 16);
  uint64_t v67 = *(void *)(v66 + 16);
  if (v67)
  {
    uint64_t v68 = 0;
    uint64_t v69 = (unsigned __int8 *)(v66 + 32);
    uint64_t v70 = *(void *)(v66 + 16);
    while (1)
    {
      int v71 = *v69++;
      switch(v71)
      {
        case 1:
        case 4:
          BOOL v73 = __OFADD__(v68++, 1);
          if (v73) {
            goto LABEL_83;
          }
          double v64 = v64 + *(double *)(v52 + 32);
          goto LABEL_17;
        case 3:
          BOOL v73 = __OFADD__(v68++, 1);
          if (v73) {
            goto LABEL_84;
          }
          double v64 = v64 + *(double *)(v52 + 64);
          goto LABEL_17;
        case 5:
          double v64 = v64 + 11.0;
          goto LABEL_17;
        case 6:
        case 7:
        case 8:
          goto LABEL_17;
        default:
          if (*(unsigned char *)(v52 + 24)) {
            uint64_t v72 = 48;
          }
          else {
            uint64_t v72 = 32;
          }
          BOOL v73 = __OFADD__(v68++, 1);
          if (v73)
          {
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
            goto LABEL_85;
          }
          double v64 = v64 + *(double *)(v52 + v72);
LABEL_17:
          if (!--v70) {
            goto LABEL_29;
          }
          break;
      }
    }
  }
  uint64_t v68 = 0;
LABEL_29:
  BOOL v73 = __OFSUB__(v68, 1);
  uint64_t v74 = v68 - 1;
  if (v73)
  {
LABEL_85:
    __break(1u);
    JUMPOUT(0x1DEB935B4);
  }
  double v75 = v61 + 8.0;
  double v76 = v60 + 8.0;
  double v226 = v75;
  double v77 = v60 + 8.0 + v75;
  uint64_t v78 = v74 & ~(v74 >> 63);
  double v79 = 20.0;
  if (v203) {
    double v79 = 10.0;
  }
  double v243 = v64 + v79 * (double)v78;
  double v80 = v16 - v77 - v20 - v19 - v65 - v257 - v243;
  double v81 = sub_1DF00C07C();
  if (v67)
  {
    unint64_t v82 = (unsigned __int8 *)(v66 + 32);
    double v83 = 0.0;
    double v84 = v259;
    do
    {
      int v85 = *v82++;
      if (v85 == 8) {
        double v83 = v83 + 35.0;
      }
      --v67;
    }
    while (v67);
  }
  else
  {
    double v83 = 0.0;
    double v84 = v259;
  }
  double v268 = v16;
  double v239 = v80 - v81 - v83 - v84;
  double v241 = v60 + 8.0;
  double v262 = v20 + v19 + v76;
  if (!v23) {
    goto LABEL_56;
  }
  uint64_t v86 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v86 = v253 & 0xFFFFFFFFFFFFLL;
  }
  if (v86 && (*(unsigned char *)(v18 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    objc_msgSend(v13, sel_lineHeight);
    double v88 = v87;
    sub_1DEA66C20();
    uint64_t v89 = swift_allocObject();
    *(_OWORD *)(v89 + 16) = xmmword_1DFE0B250;
    id v90 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v89 + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v232 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v89 + 64) = v232;
    *(void *)(v89 + 40) = v13;
    id v229 = v90;
    id v91 = v13;
    sub_1DEA65870(v89);
    id v92 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    float v93 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    uint64_t v94 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v95 = objc_msgSend(v92, sel_initWithString_attributes_, v93, v94);

    float v96 = 0.1;
    if (v266) {
      uint64_t v34 = 3;
    }
    else {
      uint64_t v34 = 1;
    }
    if ((v266 & 1) == 0) {
      float v96 = 0.0;
    }
    float v204 = v96;
    if (v266) {
      uint64_t v97 = 3;
    }
    else {
      uint64_t v97 = 2;
    }
    objc_msgSend(v95, sel_boundingRectWithSize_options_context_, v97, 0, v80, v88 * (double)v34);
    CGFloat v99 = v98;
    CGFloat v101 = v100;
    CGFloat v103 = v102;
    CGFloat v105 = v104;

    v384.origin.CGFloat x = v99;
    v384.origin.CGFloat y = v101;
    v384.size.CGFloat width = v103;
    v384.size.CGFloat height = v105;
    CGFloat v106 = ceil(CGRectGetHeight(v384));
    objc_msgSend(v220, sel_lineHeight);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v108 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    uint64_t v109 = swift_allocObject();
    *(_OWORD *)(v109 + 16) = xmmword_1DFE0B250;
    *(void *)(v109 + 64) = v232;
    *(void *)(v109 + 32) = v229;
    *(void *)(v109 + 40) = v220;
    id v110 = v220;
    id v111 = v229;
    sub_1DEA65870(v109);
    id v112 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    CGFloat v113 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    double v114 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    CGFloat v115 = v112;
    uint64_t v35 = v34;
    id v116 = objc_msgSend(v115, sel_initWithString_attributes_, v113, v114, 0x80000001DFEBF370);

    sub_1DFDFEF40();
    CGFloat v118 = v117;
    CGFloat v120 = v119;
    CGFloat v122 = v121;
    CGFloat v124 = v123;

    v385.origin.CGFloat x = v118;
    v385.origin.CGFloat y = v120;
    v385.size.CGFloat width = v122;
    v385.size.CGFloat height = v124;
    double v76 = v241;
    double v125 = ceil(CGRectGetHeight(v385));
    CGFloat v237 = v106;
    double v126 = v106 + v246 + v125;
    if (*(double *)(v263 + 48) > v248 + v248 + v126) {
      double v127 = *(double *)(v263 + 48);
    }
    else {
      double v127 = v248 + v248 + v126;
    }
    v386.origin.CGFloat x = v262;
    v386.origin.CGFloat y = v127 * 0.5 - v126 * 0.5;
    CGFloat y = v386.origin.y;
    v386.size.CGFloat width = v80;
    v386.size.CGFloat height = v125;
    double v250 = v246 + CGRectGetMaxY(v386);
    v387.origin.CGFloat x = v262;
    double v265 = y;
    v387.origin.CGFloat y = y;
    v387.size.CGFloat width = v80;
    v387.size.CGFloat height = v125;
    float v202 = v204;
    double v233 = v246 + CGRectGetMaxY(v387);
    CGFloat v235 = v239;
    CGFloat v255 = v262;
    double v129 = v127;
    CGFloat v230 = v80;
  }
  else
  {
LABEL_56:
    float v130 = 0.1;
    float v204 = 0.0;
    if ((v266 & 1) == 0) {
      float v130 = 0.0;
    }
    float v202 = v130;
    if (v266) {
      uint64_t v34 = 3;
    }
    else {
      uint64_t v34 = 2;
    }
    type metadata accessor for Localized();
    uint64_t v131 = swift_getObjCClassFromMetadata();
    id v132 = objc_msgSend(self, sel_bundleForClass_, v131);
    sub_1DFDE6ED0();
    uint64_t v133 = v18;

    sub_1DEA66C20();
    uint64_t v134 = swift_allocObject();
    *(_OWORD *)(v134 + 16) = xmmword_1DFE0B250;
    double v135 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v134 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v134 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v134 + 40) = v220;
    id v136 = v220;
    id v137 = v135;
    sub_1DEA65870(v134);
    id v138 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    double v139 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    uint64_t v140 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v141 = objc_msgSend(v138, sel_initWithString_attributes_, v139, v140, 0x80000001DFEBF370);

    sub_1DFDFEF60();
    double v143 = v142;

    uint64_t v35 = 0;
    double v125 = ceil(v143);
    if (*(double *)(v133 + 48) > v248 + v248 + v125) {
      double v129 = *(double *)(v133 + 48);
    }
    else {
      double v129 = v248 + v248 + v125;
    }
    double v265 = (v129 - v125) * 0.5;
    double v233 = 0.0;
    CGFloat v235 = 0.0;
    CGFloat v237 = 0.0;
    CGFloat v255 = 0.0;
    CGFloat v230 = 0.0;
    double v250 = 0.0;
  }
  double v247 = v129;
  double v144 = ceil((v129 - v20) * 0.5);
  v388.origin.CGFloat x = v76;
  v388.origin.CGFloat y = v144;
  v388.size.CGFloat width = v20;
  v388.size.CGFloat height = v20;
  double MinX = CGRectGetMinX(v388);
  double v145 = v268 - v226;
  CGFloat v146 = -sub_1DF00C07C() - v259;
  double v147 = 0.0;
  v389.origin.CGFloat y = 0.0;
  double v227 = v268 - v226 - v243;
  v389.origin.CGFloat x = v227;
  v389.size.CGFloat width = v243;
  v389.size.CGFloat height = v247;
  CGRect v390 = CGRectOffset(v389, v146, 0.0);
  CGFloat v222 = v390.origin.y;
  CGFloat x = v390.origin.x;
  CGFloat height = v390.size.height;
  CGFloat width = v390.size.width;
  uint64_t v148 = *(void *)(v52 + 16);
  uint64_t v149 = *(void *)(v148 + 16);
  char v54 = v203;
  if (v149)
  {
    uint64_t v150 = (unsigned __int8 *)(v148 + 32);
    do
    {
      int v151 = *v150++;
      if (v151 == 8) {
        double v147 = v147 + 35.0;
      }
      --v149;
    }
    while (v149);
  }
  double v152 = 0.0;
  v391.origin.CGFloat x = v262;
  v391.origin.CGFloat y = v265;
  v391.size.CGFloat width = v80;
  v391.size.CGFloat height = v125;
  CGRect v392 = CGRectOffset(v391, v147, 0.0);
  CGFloat v208 = v392.origin.x;
  CGFloat v210 = v392.origin.y;
  CGFloat v212 = v392.size.height;
  CGFloat v214 = v392.size.width;
  uint64_t v153 = *(void *)(v148 + 16);
  double v154 = 0.0;
  if (v153)
  {
    int v155 = (unsigned __int8 *)(v148 + 32);
    do
    {
      int v156 = *v155++;
      if (v156 == 8) {
        double v154 = v154 + 35.0;
      }
      --v153;
    }
    while (v153);
  }
  double v260 = MinX + -12.0;
  double v176 = v145 - v257;
  v393.origin.CGFloat y = v250;
  double v206 = ceil(v247);
  v393.origin.CGFloat x = v255;
  v393.size.CGFloat width = v230;
  v393.size.CGFloat height = v237;
  CGRect v394 = CGRectOffset(v393, v154, 0.0);
  CGFloat v178 = v394.origin.x;
  CGFloat v179 = v394.origin.y;
  CGFloat v180 = v394.size.height;
  CGFloat v182 = v394.size.width;
  uint64_t v157 = *(void *)(v148 + 16);
  if (v157)
  {
    CGFloat v158 = (unsigned __int8 *)(v148 + 32);
    double v152 = 0.0;
    do
    {
      int v159 = *v158++;
      if (v159 == 8) {
        double v152 = v152 + 35.0;
      }
      --v157;
    }
    while (v157);
  }
  v395.origin.CGFloat x = v241;
  v395.origin.CGFloat y = v144;
  v395.size.CGFloat width = v20;
  v395.size.CGFloat height = v20;
  CGRect v396 = CGRectOffset(v395, v152, 0.0);
  CGFloat v172 = v396.origin.x;
  CGFloat v173 = v396.origin.y;
  CGFloat v174 = v396.size.height;
  CGFloat v175 = v396.size.width;
  v396.origin.CGFloat x = v262;
  v396.origin.CGFloat y = v265;
  v396.size.CGFloat width = v80;
  v396.size.CGFloat height = v125;
  CGRect v397 = CGRectIntegral(v396);
  CGFloat v198 = v397.origin.x;
  CGFloat v199 = v397.size.height;
  CGFloat v200 = v397.size.width;
  CGFloat v201 = v397.origin.y;
  v397.origin.CGFloat x = v262;
  v397.origin.CGFloat y = v265;
  v397.size.CGFloat width = v239;
  v397.size.CGFloat height = v125;
  CGRect v398 = CGRectIntegral(v397);
  CGFloat v189 = v398.origin.x;
  CGFloat v160 = v398.origin.y;
  CGFloat v169 = v398.origin.y;
  CGFloat v196 = v398.size.height;
  CGFloat v197 = v398.size.width;
  v398.origin.CGFloat x = v255;
  v398.origin.CGFloat y = v250;
  v398.size.CGFloat width = v230;
  v398.size.CGFloat height = v237;
  CGRect v399 = CGRectIntegral(v398);
  CGFloat v194 = v399.origin.y;
  CGFloat v195 = v399.origin.x;
  CGFloat v192 = v399.size.height;
  CGFloat v193 = v399.size.width;
  v399.origin.CGFloat x = v255;
  v399.origin.CGFloat y = v233;
  v399.size.CGFloat width = v235;
  v399.size.CGFloat height = v237;
  CGRect v400 = CGRectIntegral(v399);
  CGFloat v190 = v400.origin.y;
  CGFloat v191 = v400.origin.x;
  CGFloat v187 = v400.size.width;
  CGFloat v161 = v400.size.height;
  v400.origin.CGFloat x = v241;
  v400.origin.CGFloat y = v144;
  v400.size.CGFloat width = v20;
  v400.size.CGFloat height = v20;
  CGRect v401 = CGRectIntegral(v400);
  CGFloat v162 = v401.origin.x;
  CGFloat v170 = v401.size.width;
  CGFloat v171 = v401.origin.y;
  CGFloat v188 = v401.size.height;
  v401.origin.CGFloat x = v241;
  v401.origin.CGFloat y = v144;
  v401.size.CGFloat width = v20;
  v401.size.CGFloat height = v20;
  CGFloat v186 = CGRectGetMinX(v401) + -1.0;
  v402.origin.CGFloat x = v241;
  v402.origin.CGFloat y = v144;
  v402.size.CGFloat width = v20;
  v402.size.CGFloat height = v20;
  double v264 = CGRectGetMinY(v402) + -1.0;
  v403.origin.CGFloat x = v241;
  v403.origin.CGFloat y = v144;
  v403.size.CGFloat width = v20;
  v403.size.CGFloat height = v20;
  CGFloat v185 = CGRectGetWidth(v403) + 2.0;
  v404.origin.CGFloat x = v241;
  v404.origin.CGFloat y = v144;
  v404.size.CGFloat width = v20;
  v404.size.CGFloat height = v20;
  double v254 = CGRectGetHeight(v404) + 2.0;
  v405.size.CGFloat width = 8.0;
  v405.size.CGFloat height = 8.0;
  v405.origin.CGFloat x = v260;
  v405.origin.CGFloat y = (v20 + -8.0) * 0.5 + v144;
  CGRect v406 = CGRectIntegral(v405);
  CGFloat v258 = v406.size.width;
  CGFloat v261 = v406.origin.x;
  CGFloat v249 = v406.origin.y;
  CGFloat rect = v406.size.height;
  v406.origin.CGFloat y = (v247 - v252) * 0.5;
  v406.origin.CGFloat x = v176;
  v406.size.CGFloat width = v257;
  v406.size.CGFloat height = v252;
  CGRect v407 = CGRectIntegral(v406);
  CGFloat v256 = v407.origin.x;
  CGFloat v236 = v407.origin.y;
  CGFloat v240 = v407.size.width;
  CGFloat v251 = v407.size.height;
  v407.origin.CGFloat y = 0.0;
  v407.origin.CGFloat x = v227;
  v407.size.CGFloat width = v243;
  v407.size.CGFloat height = v247;
  CGRect v408 = CGRectIntegral(v407);
  CGFloat v228 = v408.size.width;
  CGFloat v231 = v408.origin.x;
  CGFloat v245 = v408.origin.y;
  CGFloat v242 = v408.size.height;
  v408.origin.CGFloat y = v222;
  v408.origin.CGFloat x = x;
  v408.size.CGFloat height = height;
  v408.size.CGFloat width = width;
  CGRect v409 = CGRectIntegral(v408);
  CGFloat v223 = v409.size.width;
  CGFloat v225 = v409.origin.x;
  CGFloat v238 = v409.origin.y;
  CGFloat v234 = v409.size.height;
  v409.origin.CGFloat x = v208;
  v409.origin.CGFloat y = v210;
  v409.size.CGFloat height = v212;
  v409.size.CGFloat width = v214;
  CGRect v410 = CGRectIntegral(v409);
  CGFloat v221 = v410.origin.x;
  CGFloat v163 = v410.origin.y;
  CGFloat v177 = v410.size.width;
  CGFloat v164 = v410.size.height;
  v410.origin.CGFloat x = v178;
  v410.origin.CGFloat y = v179;
  v410.size.CGFloat height = v180;
  v410.size.CGFloat width = v182;
  CGRect v411 = CGRectIntegral(v410);
  CGFloat v181 = v411.size.width;
  CGFloat v183 = v411.origin.x;
  CGFloat v165 = v411.origin.y;
  CGFloat v166 = v411.size.height;
  v411.origin.CGFloat x = v172;
  v411.origin.CGFloat y = v173;
  v411.size.CGFloat height = v174;
  v411.size.CGFloat width = v175;
  CGRect v412 = CGRectIntegral(v411);
  char v53 = v266 & 1;
  v270[1] = 0;
  v270[0] = 0;
  *(double *)&v270[2] = v268;
  *(double *)&v270[3] = v206;
  *(CGFloat *)&v270[4] = v198;
  *(CGFloat *)&v270[5] = v201;
  *(CGFloat *)&v270[6] = v200;
  *(CGFloat *)&v270[7] = v199;
  *(CGFloat *)&v270[8] = v189;
  *(CGFloat *)&v270[9] = v160;
  *(CGFloat *)&v270[10] = v197;
  *(CGFloat *)&v270[11] = v196;
  v270[12] = v34;
  v270[13] = v35;
  float v271 = v202;
  float v272 = v204;
  CGFloat v273 = v195;
  CGFloat v274 = v194;
  CGFloat v275 = v193;
  CGFloat v276 = v192;
  CGFloat v277 = v191;
  CGFloat v278 = v190;
  CGFloat v279 = v187;
  CGFloat v167 = v161;
  CGFloat v280 = v161;
  CGFloat v46 = v162;
  CGFloat v281 = v162;
  CGFloat v47 = v171;
  CGFloat v282 = v171;
  CGFloat v283 = v170;
  CGFloat v284 = v188;
  CGFloat v285 = v186;
  double v286 = v264;
  CGFloat v287 = v185;
  double v288 = v254;
  CGFloat v289 = v261;
  CGFloat v290 = v249;
  CGFloat v291 = v258;
  CGFloat v292 = rect;
  CGFloat v293 = v256;
  CGFloat v294 = v236;
  CGFloat v295 = v240;
  CGFloat v296 = v251;
  CGFloat v297 = v231;
  CGFloat v298 = v245;
  CGFloat v299 = v228;
  CGFloat v300 = v242;
  CGFloat v301 = v225;
  CGFloat v302 = v238;
  CGFloat v303 = v223;
  CGFloat v304 = v234;
  CGFloat v305 = v221;
  CGFloat v267 = v163;
  CGFloat v306 = v163;
  CGFloat v55 = v177;
  CGFloat v307 = v177;
  CGFloat v217 = v165;
  CGFloat v219 = v164;
  CGFloat v308 = v164;
  CGFloat v56 = v183;
  CGFloat v309 = v183;
  CGFloat v310 = v165;
  CGFloat v57 = v181;
  CGFloat v311 = v181;
  CGFloat v213 = v412.origin.x;
  CGFloat v215 = v166;
  CGFloat v312 = v166;
  CGRect v313 = v412;
  CGFloat v209 = v412.size.width;
  CGFloat v211 = v412.origin.y;
  double v207 = v412.size.height;
  uint64_t v314 = v52;
  double v315 = v206;
  char v316 = v53;
  char v317 = v203;
  nullsub_1(v270);
  sub_1DEB9BE28((uint64_t)v270, (uint64_t)v269, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1DEB9BF94(v383);
  CGFloat v48 = v170;
  CGFloat v45 = v167;
  CGFloat v44 = v187;
  CGFloat v49 = v188;
  CGFloat v43 = v190;
  CGFloat v42 = v191;
  CGFloat v41 = v192;
  CGFloat v40 = v193;
  CGFloat v39 = v194;
  CGFloat v38 = v195;
  CGFloat v33 = v196;
  CGFloat v32 = v197;
  CGFloat v31 = v169;
  CGFloat v30 = v189;
  CGFloat v29 = v199;
  CGFloat v28 = v200;
  CGFloat v27 = v201;
  CGFloat v26 = v198;
  float v36 = v202;
  CGFloat v51 = v185;
  CGFloat v50 = v186;
  double v25 = v206;
  float v37 = v204;
  long long v24 = 0uLL;
  double v58 = v206;
LABEL_81:
  *(_OWORD *)a4 = v24;
  *(double *)(a4 + 16) = v268;
  *(double *)(a4 + 24) = v25;
  *(CGFloat *)(a4 + 32) = v26;
  *(CGFloat *)(a4 + 40) = v27;
  *(CGFloat *)(a4 + 48) = v28;
  *(CGFloat *)(a4 + 56) = v29;
  *(CGFloat *)(a4 + 64) = v30;
  *(CGFloat *)(a4 + 72) = v31;
  *(CGFloat *)(a4 + 80) = v32;
  *(CGFloat *)(a4 + 88) = v33;
  *(float *)(a4 + 112) = v36;
  *(float *)(a4 + 116) = v37;
  *(CGFloat *)(a4 + 120) = v38;
  *(CGFloat *)(a4 + 128) = v39;
  *(CGFloat *)(a4 + 136) = v40;
  *(CGFloat *)(a4 + 144) = v41;
  *(CGFloat *)(a4 + 152) = v42;
  *(CGFloat *)(a4 + 160) = v43;
  *(CGFloat *)(a4 + 168) = v44;
  *(CGFloat *)(a4 + 176) = v45;
  *(CGFloat *)(a4 + 184) = v46;
  *(CGFloat *)(a4 + 192) = v47;
  *(CGFloat *)(a4 + 200) = v48;
  *(CGFloat *)(a4 + 208) = v49;
  *(CGFloat *)(a4 + 216) = v50;
  *(double *)(a4 + 224) = v264;
  *(void *)(a4 + 96) = v34;
  *(void *)(a4 + 104) = v35;
  *(CGFloat *)(a4 + 232) = v51;
  *(double *)(a4 + 240) = v254;
  *(CGFloat *)(a4 + 248) = v261;
  *(CGFloat *)(a4 + 256) = v249;
  *(CGFloat *)(a4 + 264) = v258;
  *(CGFloat *)(a4 + 272) = rect;
  *(CGFloat *)(a4 + 280) = v256;
  *(CGFloat *)(a4 + 288) = v236;
  *(CGFloat *)(a4 + 296) = v240;
  *(CGFloat *)(a4 + 304) = v251;
  *(CGFloat *)(a4 + 312) = v231;
  *(CGFloat *)(a4 + 320) = v245;
  *(CGFloat *)(a4 + 328) = v228;
  *(CGFloat *)(a4 + 336) = v242;
  *(CGFloat *)(a4 + 344) = v225;
  *(CGFloat *)(a4 + 352) = v238;
  *(CGFloat *)(a4 + 360) = v223;
  *(CGFloat *)(a4 + 368) = v234;
  *(CGFloat *)(a4 + 376) = v221;
  *(CGFloat *)(a4 + 384) = v267;
  *(CGFloat *)(a4 + 392) = v55;
  *(CGFloat *)(a4 + 400) = v219;
  *(CGFloat *)(a4 + 408) = v56;
  *(CGFloat *)(a4 + 416) = v217;
  *(CGFloat *)(a4 + 424) = v57;
  *(CGFloat *)(a4 + 432) = v215;
  *(CGFloat *)(a4 + 440) = v213;
  *(CGFloat *)(a4 + 448) = v211;
  *(CGFloat *)(a4 + 456) = v209;
  double result = v207;
  *(double *)(a4 + 464) = v207;
  *(void *)(a4 + 472) = v52;
  *(double *)(a4 + 480) = v58;
  *(unsigned char *)(a4 + 488) = v53;
  *(unsigned char *)(a4 + 489) = v54;
  return result;
}

double sub_1DEB935D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (void *)(a3 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  int v9 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  sub_1DEB99E3C(a1);
  id v10 = sub_1DF733364(v9);
  uint64_t v11 = *(void **)(*__swift_project_boxed_opaque_existential_1(v8, *(void *)(a3 + 40)) + 24);
  id v12 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  double v13 = COERCE_DOUBLE(objc_msgSend(v11, sel_scaledFontForFont_, v12));

  uint64_t v14 = (void *)sub_1DFDF2AF0();
  id v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

  LOBYTE(v234.origin.y) = sub_1DFDFF0C0();
  *(void *)&long long v285 = 0;
  *((void *)&v285 + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  long long v348 = v285;
  CGFloat v16 = *(double *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v10, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  double v17 = v13;
  objc_msgSend(*(id *)&v13, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  unint64_t v18 = *(void *)(a1 + 16);
  double rect = *(double *)(a1 + 8);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  BOOL v19 = *(void *)a1 == 0;
  LOBYTE(v286) = *(void *)a1 != 0;
  BYTE1(v286) = v19;
  sub_1DFDFFB10();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v236, (uint64_t)v284, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v284, (uint64_t)&v285, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v285) != 1)
  {
    swift_bridgeObjectRelease();

    sub_1DEB99E70(a1);
    long long v24 = v285;
    v234.size.CGFloat width = v286;
    double v25 = v287;
    CGFloat v26 = v288;
    CGFloat v27 = v289;
    CGFloat v28 = v290;
    CGFloat v29 = v291;
    CGFloat v30 = v292;
    CGFloat v31 = v293;
    CGFloat v32 = v294;
    CGFloat v33 = v295;
    uint64_t v34 = v296;
    uint64_t v35 = v297;
    float v36 = v298;
    float v37 = v299;
    CGFloat v38 = v300;
    CGFloat v39 = v301;
    CGFloat v40 = v302;
    CGFloat v41 = v303;
    CGFloat v42 = v304;
    CGFloat v43 = v305;
    CGFloat v44 = v306;
    CGFloat v45 = v307;
    CGFloat v46 = v308;
    CGFloat v47 = v309;
    CGFloat v48 = v310;
    CGFloat v49 = v311;
    CGFloat v50 = v312;
    v234.origin.CGFloat x = v313;
    CGFloat v51 = v314;
    double v230 = v315;
    double rect = v316;
    CGFloat v228 = v317;
    uint64_t v52 = v344;
    char v53 = v346;
    char v54 = v347;
    double v232 = v318;
    id v226 = v319;
    double v231 = v320;
    v222.size.CGFloat height = v321;
    double v224 = v322;
    double v229 = v323;
    v222.origin.CGFloat y = v324;
    double v227 = v325;
    v222.origin.CGFloat x = v326;
    double v225 = v327;
    CGFloat v221 = v328;
    double v223 = v329;
    CGFloat v218 = v330;
    v222.size.CGFloat width = v331;
    CGFloat v216 = v332;
    v234.origin.CGFloat y = v333;
    CGFloat v55 = v334;
    CGFloat v215 = v335;
    CGFloat v56 = v336;
    CGFloat v213 = v337;
    CGFloat v57 = v338;
    CGFloat v211 = v339;
    CGFloat v209 = v340;
    CGFloat v207 = v341;
    double v205 = v342;
    CGFloat v58 = v343;
    double v59 = v345;
    goto LABEL_83;
  }
  v234.size.CGFloat width = v16;
  *(double *)&id v226 = v17;
  if (v9)
  {
    double v232 = *(double *)(a2 + 56);
    double v20 = 6.0;
    double v21 = 16.0;
    double v22 = 4.0;
    unint64_t v23 = v10;
    if (LOBYTE(v234.origin.y)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v60 = 56;
  if (LOBYTE(v234.origin.y)) {
    uint64_t v60 = 64;
  }
  double v232 = *(double *)(a2 + v60);
  double v21 = *(double *)(a2 + 48) - (v232 + v232);
  double v20 = 10.0;
  unint64_t v23 = v10;
  if ((LOBYTE(v234.origin.y) & 1) == 0)
  {
LABEL_10:
    double v22 = 1.0;
    goto LABEL_11;
  }
  double v20 = 12.0;
  double v22 = 4.0;
LABEL_11:
  double v230 = v22;
  double v61 = *(double *)(a2 + 24);
  double v62 = *(double *)(a2 + 40);
  uint64_t v183 = a1;
  double v63 = sub_1DEB9A4E4(a1, v23);
  double v229 = v64;
  double v231 = v63;
  double v65 = 0.0;
  if (v63 == 0.0) {
    double v66 = 0.0;
  }
  else {
    double v66 = 8.0;
  }
  double v67 = sub_1DEDE98D0(a2);
  uint64_t v52 = *(void *)(a2 + 72);
  uint64_t v68 = *(void *)(v52 + 16);
  uint64_t v69 = *(void *)(v68 + 16);
  if (v69)
  {
    uint64_t v70 = 0;
    int v71 = (unsigned __int8 *)(v68 + 32);
    uint64_t v72 = *(void *)(v68 + 16);
    while (1)
    {
      int v73 = *v71++;
      switch(v73)
      {
        case 1:
        case 4:
          BOOL v75 = __OFADD__(v70++, 1);
          if (v75) {
            goto LABEL_85;
          }
          double v65 = v65 + *(double *)(v52 + 32);
          goto LABEL_17;
        case 3:
          BOOL v75 = __OFADD__(v70++, 1);
          if (v75) {
            goto LABEL_86;
          }
          double v65 = v65 + *(double *)(v52 + 64);
          goto LABEL_17;
        case 5:
          double v65 = v65 + 11.0;
          goto LABEL_17;
        case 6:
        case 7:
        case 8:
          goto LABEL_17;
        default:
          if (*(unsigned char *)(v52 + 24)) {
            uint64_t v74 = 48;
          }
          else {
            uint64_t v74 = 32;
          }
          BOOL v75 = __OFADD__(v70++, 1);
          if (v75)
          {
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
            goto LABEL_87;
          }
          double v65 = v65 + *(double *)(v52 + v74);
LABEL_17:
          if (!--v72) {
            goto LABEL_29;
          }
          break;
      }
    }
  }
  uint64_t v70 = 0;
LABEL_29:
  BOOL v75 = __OFSUB__(v70, 1);
  uint64_t v76 = v70 - 1;
  if (v75)
  {
LABEL_87:
    __break(1u);
    JUMPOUT(0x1DEB949F4);
  }
  double v77 = v61 + 8.0;
  double v219 = v62 + 8.0;
  uint64_t v78 = v76 & ~(v76 >> 63);
  char v182 = v9;
  double v79 = 20.0;
  if (v9) {
    double v79 = 10.0;
  }
  double v225 = v65 + v79 * (double)v78;
  double v80 = v234.size.width - (v61 + 8.0 + v62 + 8.0) - v21 - v20 - v66 - v231 - v225;
  double v81 = sub_1DF00C07C();
  if (v69)
  {
    unint64_t v82 = (unsigned __int8 *)(v68 + 32);
    double v83 = 0.0;
    do
    {
      int v84 = *v82++;
      if (v84 == 8) {
        double v83 = v83 + 35.0;
      }
      --v69;
    }
    while (v69);
  }
  else
  {
    double v83 = 0.0;
  }
  CGFloat v221 = v67;
  double v223 = v80 - v81 - v83 - v67;
  double v224 = v61 + 8.0;
  v234.origin.CGFloat x = v21 + v20 + v77;
  CGFloat v228 = v80;
  if (!v18) {
    goto LABEL_56;
  }
  uint64_t v85 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v85 = *(void *)&rect & 0xFFFFFFFFFFFFLL;
  }
  if (v85 && (*(unsigned char *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    objc_msgSend(v226, sel_lineHeight);
    double v87 = v86;
    sub_1DEA66C20();
    uint64_t v88 = swift_allocObject();
    *(_OWORD *)(v88 + 16) = xmmword_1DFE0B250;
    uint64_t v89 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v88 + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v90 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v88 + 64) = v90;
    *(double *)(v88 + 40) = *(double *)&v226;
    *(void *)&v222.size.CGFloat width = v89;
    id v91 = v226;
    sub_1DEA65870(v88);
    id v92 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    float v93 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    uint64_t v94 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v95 = objc_msgSend(v92, sel_initWithString_attributes_, v93, v94);

    float v96 = 0.1;
    if (LOBYTE(v234.origin.y)) {
      uint64_t v34 = 3;
    }
    else {
      uint64_t v34 = 1;
    }
    if ((LOBYTE(v234.origin.y) & 1) == 0) {
      float v96 = 0.0;
    }
    float v202 = v96;
    if (LOBYTE(v234.origin.y)) {
      uint64_t v97 = 3;
    }
    else {
      uint64_t v97 = 2;
    }
    objc_msgSend(v95, sel_boundingRectWithSize_options_context_, v97, 0, v80, v87 * (double)v34);
    CGFloat v99 = v98;
    CGFloat v100 = v80;
    CGFloat v102 = v101;
    CGFloat v104 = v103;
    CGFloat v106 = v105;

    v349.origin.CGFloat x = v99;
    v349.origin.CGFloat y = v102;
    v349.size.CGFloat width = v104;
    v349.size.CGFloat height = v106;
    CGFloat v107 = ceil(CGRectGetHeight(v349));
    objc_msgSend(v10, sel_lineHeight);
    sub_1DFDFB2C0();
    id v108 = (void *)sub_1DFDFB290();
    MEMORY[0x1E01E9AD0]();

    uint64_t v109 = swift_allocObject();
    *(_OWORD *)(v109 + 16) = xmmword_1DFE0B250;
    *(void *)(v109 + 64) = v90;
    *(CGFloat *)(v109 + 32) = v222.size.width;
    *(void *)(v109 + 40) = v10;
    id v110 = v10;
    id v111 = *(id *)&v222.size.width;
    sub_1DEA65870(v109);
    id v112 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    CGFloat v113 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    double v114 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    CGFloat v115 = v112;
    uint64_t v35 = v34;
    id v116 = objc_msgSend(v115, sel_initWithString_attributes_, v113, v114);

    sub_1DFDFEF40();
    CGFloat v118 = v117;
    CGFloat v120 = v119;
    CGFloat v122 = v121;
    CGFloat v124 = v123;

    v350.origin.CGFloat x = v118;
    v350.origin.CGFloat y = v120;
    v350.size.CGFloat width = v122;
    v350.size.CGFloat height = v124;
    double v77 = v224;
    double v125 = ceil(CGRectGetHeight(v350));
    v222.size.CGFloat height = v107;
    double v126 = v107 + v230 + v125;
    if (*(double *)(a2 + 48) > v232 + v232 + v126) {
      double v127 = *(double *)(a2 + 48);
    }
    else {
      double v127 = v232 + v232 + v126;
    }
    v351.origin.CGFloat x = v234.origin.x;
    v351.origin.CGFloat y = v127 * 0.5 - v126 * 0.5;
    CGFloat y = v351.origin.y;
    v351.size.CGFloat width = v100;
    v351.size.CGFloat height = v125;
    double v232 = v230 + CGRectGetMaxY(v351);
    double rect = y;
    v352.origin.CGFloat x = v234.origin.x;
    v352.origin.CGFloat y = y;
    v352.size.CGFloat width = v100;
    v352.size.CGFloat height = v125;
    float v201 = v202;
    v222.origin.CGFloat y = v230 + CGRectGetMaxY(v352);
    v222.size.CGFloat width = v223;
    v222.origin.CGFloat x = v234.origin.x;
    double v230 = v100;
  }
  else
  {
LABEL_56:
    float v129 = 0.1;
    float v202 = 0.0;
    if ((LOBYTE(v234.origin.y) & 1) == 0) {
      float v129 = 0.0;
    }
    float v201 = v129;
    if (LOBYTE(v234.origin.y)) {
      uint64_t v34 = 3;
    }
    else {
      uint64_t v34 = 2;
    }
    sub_1DFDFB2C0();
    float v130 = (void *)sub_1DFDFB290();
    MEMORY[0x1E01E9AD0]();

    sub_1DEA66C20();
    uint64_t v131 = swift_allocObject();
    *(_OWORD *)(v131 + 16) = xmmword_1DFE0B250;
    id v132 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v131 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v131 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v131 + 40) = v10;
    id v133 = v10;
    id v134 = v132;
    sub_1DEA65870(v131);
    id v135 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v136 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    id v137 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v138 = objc_msgSend(v135, sel_initWithString_attributes_, v136, v137);

    sub_1DFDFEF60();
    double v140 = v139;

    uint64_t v35 = 0;
    double v125 = ceil(v140);
    if (*(double *)(a2 + 48) > v232 + v232 + v125) {
      double v127 = *(double *)(a2 + 48);
    }
    else {
      double v127 = v232 + v232 + v125;
    }
    memset(&v222, 0, sizeof(v222));
    double v230 = 0.0;
    double v232 = 0.0;
    double rect = (v127 - v125) * 0.5;
  }
  double v227 = v127;
  double v141 = ceil((v127 - v21) * 0.5);
  v353.origin.CGFloat x = v77;
  v353.origin.CGFloat y = v141;
  v353.size.CGFloat width = v21;
  v353.size.CGFloat height = v21;
  double MinX = CGRectGetMinX(v353);
  double v142 = v234.size.width - v219;
  CGFloat v143 = -sub_1DF00C07C() - v221;
  double v144 = 0.0;
  v354.origin.CGFloat y = 0.0;
  CGFloat v221 = v234.size.width - v219 - v225;
  v354.origin.CGFloat x = v221;
  v354.size.CGFloat width = v225;
  v354.size.CGFloat height = v227;
  CGRect v355 = CGRectOffset(v354, v143, 0.0);
  CGFloat v217 = v355.origin.y;
  CGFloat x = v355.origin.x;
  CGFloat height = v355.size.height;
  CGFloat width = v355.size.width;
  uint64_t v145 = *(void *)(v52 + 16);
  uint64_t v146 = *(void *)(v145 + 16);
  if (v146)
  {
    double v147 = (unsigned __int8 *)(v145 + 32);
    id v148 = v226;
    do
    {
      int v149 = *v147++;
      if (v149 == 8) {
        double v144 = v144 + 35.0;
      }
      --v146;
    }
    while (v146);
  }
  else
  {
    id v148 = v226;
  }
  v356.size.CGFloat width = v228;
  double v150 = 0.0;
  v356.origin.CGFloat x = v234.origin.x;
  v356.origin.CGFloat y = rect;
  v356.size.CGFloat height = v125;
  CGRect v357 = CGRectOffset(v356, v144, 0.0);
  CGFloat v180 = v357.origin.x;
  CGFloat v206 = v357.origin.y;
  CGFloat v208 = v357.size.height;
  CGFloat v210 = v357.size.width;
  uint64_t v151 = *(void *)(v145 + 16);
  double v152 = 0.0;
  if (v151)
  {
    uint64_t v153 = (unsigned __int8 *)(v145 + 32);
    do
    {
      int v154 = *v153++;
      if (v154 == 8) {
        double v152 = v152 + 35.0;
      }
      --v151;
    }
    while (v151);
  }
  *(double *)&id v226 = MinX + -12.0;
  v358.origin.CGFloat y = v232;
  double v173 = v142 - v231;
  double v204 = ceil(v227);
  v358.origin.CGFloat x = v222.origin.x;
  v358.size.CGFloat width = v230;
  v358.size.CGFloat height = v222.size.height;
  CGRect v359 = CGRectOffset(v358, v152, 0.0);
  CGFloat v174 = v359.origin.x;
  CGFloat v175 = v359.origin.y;
  CGFloat v176 = v359.size.height;
  CGFloat v178 = v359.size.width;
  uint64_t v155 = *(void *)(v145 + 16);
  if (v155)
  {
    int v156 = (unsigned __int8 *)(v145 + 32);
    double v150 = 0.0;
    do
    {
      int v157 = *v156++;
      if (v157 == 8) {
        double v150 = v150 + 35.0;
      }
      --v155;
    }
    while (v155);
  }
  v360.origin.CGFloat x = v224;
  v360.origin.CGFloat y = v141;
  v360.size.CGFloat width = v21;
  v360.size.CGFloat height = v21;
  CGRect v361 = CGRectOffset(v360, v150, 0.0);
  CGFloat v169 = v361.origin.x;
  CGFloat v170 = v361.origin.y;
  CGFloat v171 = v361.size.height;
  CGFloat v172 = v361.size.width;
  v361.origin.CGFloat x = v234.origin.x;
  v361.origin.CGFloat y = rect;
  v361.size.CGFloat width = v228;
  v361.size.CGFloat height = v125;
  CGRect v362 = CGRectIntegral(v361);
  CGFloat v197 = v362.origin.x;
  CGFloat v198 = v362.size.height;
  CGFloat v199 = v362.size.width;
  CGFloat v200 = v362.origin.y;
  v362.origin.CGFloat x = v234.origin.x;
  v362.origin.CGFloat y = rect;
  v362.size.CGFloat width = v223;
  v362.size.CGFloat height = v125;
  CGRect v363 = CGRectIntegral(v362);
  CGFloat v158 = v363.origin.x;
  CGFloat v165 = v363.origin.x;
  CGFloat v195 = v363.size.width;
  CGFloat v196 = v363.origin.y;
  CGFloat v194 = v363.size.height;
  v363.origin.CGFloat x = v222.origin.x;
  v363.origin.CGFloat y = v232;
  v363.size.CGFloat width = v230;
  v363.size.CGFloat height = v222.size.height;
  CGRect v364 = CGRectIntegral(v363);
  CGFloat v192 = v364.origin.y;
  CGFloat v193 = v364.origin.x;
  CGFloat v190 = v364.size.height;
  CGFloat v191 = v364.size.width;
  CGRect v365 = CGRectIntegral(v222);
  CGFloat v187 = v365.origin.y;
  CGFloat v188 = v365.origin.x;
  CGFloat v186 = v365.size.width;
  CGFloat v159 = v365.size.height;
  v365.origin.CGFloat x = v224;
  v365.origin.CGFloat y = v141;
  v365.size.CGFloat width = v21;
  v365.size.CGFloat height = v21;
  CGRect v366 = CGRectIntegral(v365);
  CGFloat v167 = v366.origin.y;
  CGFloat v168 = v366.origin.x;
  CGFloat v166 = v366.size.width;
  CGFloat v189 = v366.size.height;
  v366.origin.CGFloat x = v224;
  v366.origin.CGFloat y = v141;
  v366.size.CGFloat width = v21;
  v366.size.CGFloat height = v21;
  CGFloat v185 = CGRectGetMinX(v366) + -1.0;
  v367.origin.CGFloat x = v224;
  v367.origin.CGFloat y = v141;
  v367.size.CGFloat width = v21;
  v367.size.CGFloat height = v21;
  v234.origin.CGFloat x = CGRectGetMinY(v367) + -1.0;
  v368.origin.CGFloat x = v224;
  v368.origin.CGFloat y = v141;
  v368.size.CGFloat width = v21;
  v368.size.CGFloat height = v21;
  CGFloat v184 = CGRectGetWidth(v368) + 2.0;
  v369.origin.CGFloat x = v224;
  v369.origin.CGFloat y = v141;
  v369.size.CGFloat width = v21;
  v369.size.CGFloat height = v21;
  double v230 = CGRectGetHeight(v369) + 2.0;
  v370.size.CGFloat width = 8.0;
  v370.size.CGFloat height = 8.0;
  *(void *)&v370.origin.CGFloat x = v226;
  v370.origin.CGFloat y = (v21 + -8.0) * 0.5 + v141;
  CGRect v371 = CGRectIntegral(v370);
  double v232 = v371.size.width;
  double rect = v371.origin.x;
  CGFloat v228 = v371.origin.y;
  id v226 = *(id *)&v371.size.height;
  v371.origin.CGFloat y = (v227 - v229) * 0.5;
  v371.origin.CGFloat x = v173;
  v371.size.CGFloat width = v231;
  v371.size.CGFloat height = v229;
  CGRect v372 = CGRectIntegral(v371);
  double v231 = v372.origin.x;
  v222.size.CGFloat height = v372.origin.y;
  double v224 = v372.size.width;
  double v229 = v372.size.height;
  v372.origin.CGFloat y = 0.0;
  v372.origin.CGFloat x = v221;
  v372.size.CGFloat width = v225;
  v372.size.CGFloat height = v227;
  CGRect v373 = CGRectIntegral(v372);
  v222.origin.CGFloat x = v373.size.width;
  v222.origin.CGFloat y = v373.origin.x;
  double v227 = v373.origin.y;
  double v225 = v373.size.height;
  v373.origin.CGFloat y = v217;
  v373.origin.CGFloat x = x;
  v373.size.CGFloat height = height;
  v373.size.CGFloat width = width;
  CGRect v374 = CGRectIntegral(v373);
  CGFloat v218 = v374.size.width;
  CGFloat v221 = v374.origin.x;
  double v223 = v374.origin.y;
  v222.size.CGFloat width = v374.size.height;
  v374.origin.CGFloat x = v180;
  v374.origin.CGFloat y = v206;
  v374.size.CGFloat height = v208;
  v374.size.CGFloat width = v210;
  CGRect v375 = CGRectIntegral(v374);
  CGFloat v216 = v375.origin.x;
  CGFloat v160 = v375.origin.y;
  CGFloat v181 = v375.size.width;
  CGFloat v161 = v375.size.height;
  v375.origin.CGFloat x = v174;
  v375.origin.CGFloat y = v175;
  v375.size.CGFloat height = v176;
  v375.size.CGFloat width = v178;
  CGRect v376 = CGRectIntegral(v375);
  CGFloat v177 = v376.size.width;
  CGFloat v179 = v376.origin.x;
  CGFloat v162 = v376.origin.y;
  CGFloat v163 = v376.size.height;
  v376.origin.CGFloat x = v169;
  v376.origin.CGFloat y = v170;
  v376.size.CGFloat height = v171;
  v376.size.CGFloat width = v172;
  CGRect v377 = CGRectIntegral(v376);
  char v53 = LOBYTE(v234.origin.y) & 1;
  v236[1] = 0;
  v236[0] = 0;
  v236[2] = *(void *)&v234.size.width;
  *(double *)&v236[3] = v204;
  *(CGFloat *)&v236[4] = v197;
  *(CGFloat *)&v236[5] = v200;
  *(CGFloat *)&v236[6] = v199;
  *(CGFloat *)&v236[7] = v198;
  *(CGFloat *)&v236[8] = v158;
  *(CGFloat *)&v236[9] = v196;
  *(CGFloat *)&v236[10] = v195;
  *(CGFloat *)&v236[11] = v194;
  v236[12] = v34;
  v236[13] = v35;
  float v237 = v201;
  float v238 = v202;
  CGFloat v239 = v193;
  CGFloat v240 = v192;
  CGFloat v241 = v191;
  CGFloat v242 = v190;
  CGFloat v243 = v188;
  CGFloat v244 = v187;
  CGFloat v245 = v186;
  CGFloat v246 = v159;
  CGFloat v46 = v168;
  CGFloat v247 = v168;
  CGFloat v248 = v167;
  CGFloat v249 = v166;
  CGFloat v250 = v189;
  CGFloat v251 = v185;
  CGFloat v252 = v234.origin.x;
  CGFloat v253 = v184;
  double v254 = v230;
  double v255 = rect;
  CGFloat v256 = v228;
  double v257 = v232;
  id v258 = v226;
  double v259 = v231;
  CGFloat v260 = v222.size.height;
  double v261 = v224;
  double v262 = v229;
  CGFloat v263 = v222.origin.y;
  double v264 = v227;
  CGFloat v265 = v222.origin.x;
  double v266 = v225;
  CGFloat v267 = v221;
  double v268 = v223;
  CGFloat v269 = v218;
  CGFloat v270 = v222.size.width;
  CGFloat v271 = v216;
  v234.origin.CGFloat y = v160;
  CGFloat v272 = v160;
  CGFloat v55 = v181;
  CGFloat v273 = v181;
  CGFloat v213 = v162;
  CGFloat v215 = v161;
  CGFloat v274 = v161;
  CGFloat v56 = v179;
  CGFloat v275 = v179;
  CGFloat v276 = v162;
  CGFloat v57 = v177;
  CGFloat v277 = v177;
  CGFloat v209 = v377.origin.x;
  CGFloat v211 = v163;
  CGFloat v278 = v163;
  CGRect v279 = v377;
  double v205 = v377.size.width;
  CGFloat v207 = v377.origin.y;
  CGFloat v58 = v377.size.height;
  uint64_t v280 = v52;
  double v281 = v204;
  char v282 = v53;
  char v283 = v182;
  nullsub_1(v236);
  sub_1DEB9BE28((uint64_t)v236, (uint64_t)v235, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();
  char v54 = v182;
  swift_release();

  sub_1DEB99E70(v183);
  CGFloat v48 = v166;
  CGFloat v47 = v167;
  CGFloat v45 = v159;
  CGFloat v44 = v186;
  CGFloat v43 = v187;
  CGFloat v42 = v188;
  CGFloat v49 = v189;
  CGFloat v41 = v190;
  CGFloat v40 = v191;
  CGFloat v39 = v192;
  CGFloat v38 = v193;
  CGFloat v33 = v194;
  CGFloat v32 = v195;
  CGFloat v31 = v196;
  CGFloat v26 = v197;
  CGFloat v30 = v165;
  CGFloat v29 = v198;
  CGFloat v28 = v199;
  CGFloat v27 = v200;
  float v36 = v201;
  CGFloat v51 = v184;
  CGFloat v50 = v185;
  double v25 = v204;
  float v37 = v202;
  long long v24 = 0uLL;
  double v59 = v204;
LABEL_83:
  *(_OWORD *)a4 = v24;
  *(CGFloat *)(a4 + 16) = v234.size.width;
  *(double *)(a4 + 24) = v25;
  *(CGFloat *)(a4 + 32) = v26;
  *(CGFloat *)(a4 + 40) = v27;
  *(CGFloat *)(a4 + 48) = v28;
  *(CGFloat *)(a4 + 56) = v29;
  *(CGFloat *)(a4 + 64) = v30;
  *(CGFloat *)(a4 + 72) = v31;
  *(CGFloat *)(a4 + 80) = v32;
  *(CGFloat *)(a4 + 88) = v33;
  *(float *)(a4 + 112) = v36;
  *(float *)(a4 + 116) = v37;
  *(CGFloat *)(a4 + 120) = v38;
  *(CGFloat *)(a4 + 128) = v39;
  *(CGFloat *)(a4 + 136) = v40;
  *(CGFloat *)(a4 + 144) = v41;
  *(CGFloat *)(a4 + 152) = v42;
  *(CGFloat *)(a4 + 160) = v43;
  *(CGFloat *)(a4 + 168) = v44;
  *(CGFloat *)(a4 + 176) = v45;
  *(CGFloat *)(a4 + 184) = v46;
  *(CGFloat *)(a4 + 192) = v47;
  *(CGFloat *)(a4 + 200) = v48;
  *(CGFloat *)(a4 + 208) = v49;
  *(CGFloat *)(a4 + 216) = v50;
  *(CGFloat *)(a4 + 224) = v234.origin.x;
  *(void *)(a4 + 96) = v34;
  *(void *)(a4 + 104) = v35;
  *(CGFloat *)(a4 + 232) = v51;
  *(double *)(a4 + 240) = v230;
  *(double *)(a4 + 248) = rect;
  *(CGFloat *)(a4 + 256) = v228;
  *(double *)(a4 + 264) = v232;
  *(double *)(a4 + 272) = *(double *)&v226;
  *(double *)(a4 + 280) = v231;
  *(CGFloat *)(a4 + 288) = v222.size.height;
  *(double *)(a4 + 296) = v224;
  *(double *)(a4 + 304) = v229;
  *(CGFloat *)(a4 + 312) = v222.origin.y;
  *(double *)(a4 + 320) = v227;
  *(CGFloat *)(a4 + 328) = v222.origin.x;
  *(double *)(a4 + 336) = v225;
  *(CGFloat *)(a4 + 344) = v221;
  *(double *)(a4 + 352) = v223;
  *(CGFloat *)(a4 + 360) = v218;
  *(CGFloat *)(a4 + 368) = v222.size.width;
  *(CGFloat *)(a4 + 376) = v216;
  *(CGFloat *)(a4 + 384) = v234.origin.y;
  *(CGFloat *)(a4 + 392) = v55;
  *(CGFloat *)(a4 + 400) = v215;
  *(CGFloat *)(a4 + 408) = v56;
  *(CGFloat *)(a4 + 416) = v213;
  *(CGFloat *)(a4 + 424) = v57;
  *(CGFloat *)(a4 + 432) = v211;
  *(CGFloat *)(a4 + 440) = v209;
  *(CGFloat *)(a4 + 448) = v207;
  double result = v205;
  *(double *)(a4 + 456) = v205;
  *(CGFloat *)(a4 + 464) = v58;
  *(void *)(a4 + 472) = v52;
  *(double *)(a4 + 480) = v59;
  *(unsigned char *)(a4 + 488) = v53;
  *(unsigned char *)(a4 + 489) = v54;
  return result;
}

double sub_1DEB94A18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for FollowingMySportsModel();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v192 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB9BFF0(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)&a3 + 16), *(void *)(*(void *)&a3 + 40));
  int v255 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  id v12 = sub_1DF733364(v255);
  double v13 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(*(void *)&a3 + 16), *(void *)(*(void *)&a3 + 40))+ 24);
  id v14 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  id v15 = objc_msgSend(v13, sel_scaledFontForFont_, v14);

  CGFloat v16 = (void *)sub_1DFDF2AF0();
  id v17 = objc_msgSend(v16, sel_preferredContentSizeCategory);

  LODWORD(v254) = sub_1DFDFF0C0();
  *(void *)&long long v312 = 0;
  *((void *)&v312 + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  long long v375 = v312;
  uint64_t v256 = a2;
  double v18 = *(double *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v258 = v12;
  objc_msgSend(v12, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v15, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  unint64_t v19 = *((void *)v11 + 3);
  CGFloat MinX = *((double *)v11 + 2);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v20 = *(int *)(v9 + 48);
  double v257 = v11;
  double v21 = &v11[v20];
  char v22 = v21[16];
  char v23 = v21[17];
  long long v312 = *(_OWORD *)v21;
  LOBYTE(v313) = v22;
  BYTE1(v313) = v23;
  sub_1DFDFFB10();
  long long v24 = v375;
  CGFloat v217 = a3;
  long long v312 = v375;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v263, (uint64_t)v311, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v311, (uint64_t)&v312, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v312) != 1)
  {
    swift_bridgeObjectRelease();

    id v258 = (id)*((void *)&v312 + 1);
    uint64_t v218 = v312;
    double v259 = v313;
    double v31 = v314;
    CGFloat MinX = v316;
    CGFloat v253 = v315;
    CGFloat v250 = v318;
    CGFloat v251 = v317;
    double v249 = v319;
    double v247 = v321;
    *(void *)&long long v248 = v320;
    uint64_t v32 = v323;
    uint64_t v33 = v324;
    float v219 = v325;
    LODWORD(v256) = v326;
    CGFloat v245 = v322;
    double v246 = v327;
    double v243 = v331;
    double v244 = v329;
    double v242 = v333;
    CGFloat v240 = v328;
    double v241 = v335;
    CGFloat v228 = v336;
    CGFloat v239 = v337;
    CGFloat v237 = v330;
    CGFloat v238 = v339;
    CGFloat v235 = v332;
    CGFloat v236 = v340;
    double v234 = v343;
    CGFloat v232 = v334;
    double v233 = v344;
    uint64_t v34 = v371;
    char v35 = v373;
    char v36 = v374;
    CGFloat v230 = v338;
    double v231 = v345;
    CGFloat v223 = v346;
    CGFloat v224 = v342;
    double v229 = v347;
    CGFloat v226 = v341;
    double v227 = v349;
    double v221 = v350;
    double v222 = v348;
    CGFloat v254 = v351;
    double v220 = v352;
    double v225 = v353;
    CGFloat v37 = v354;
    CGFloat v38 = v356;
    CGFloat v216 = v357;
    CGFloat v217 = v355;
    CGFloat v214 = v359;
    CGFloat x = v358;
    CGFloat v39 = v360;
    CGFloat v40 = v362;
    CGFloat height = v363;
    CGFloat width = v361;
    CGFloat v41 = v364;
    CGFloat v42 = v366;
    CGFloat v210 = v367;
    CGFloat v211 = v365;
    CGFloat v208 = v369;
    CGFloat v209 = v368;
    double v207 = v370;
    double v43 = v372;
    goto LABEL_83;
  }
  double v259 = v18;
  uint64_t v206 = v24;
  if (v255)
  {
    uint64_t v25 = v256;
    CGFloat v251 = *(double *)(v256 + 56);
    double v26 = 6.0;
    double v27 = 16.0;
    double v28 = 4.0;
    id v29 = v258;
    CGFloat v30 = v15;
    if (LOBYTE(v254)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v44 = 56;
  if (LOBYTE(v254)) {
    uint64_t v44 = 64;
  }
  uint64_t v25 = v256;
  double v45 = *(double *)(v256 + 48);
  CGFloat v251 = *(double *)(v256 + v44);
  double v27 = v45 - (v251 + v251);
  double v26 = 10.0;
  id v29 = v258;
  CGFloat v30 = v15;
  if ((LOBYTE(v254) & 1) == 0)
  {
LABEL_10:
    double v28 = 1.0;
    goto LABEL_11;
  }
  double v26 = 12.0;
  double v28 = 4.0;
LABEL_11:
  double v244 = v28;
  double v46 = *(double *)(v25 + 24);
  double v47 = *(double *)(v25 + 40);
  double v48 = sub_1DEB9A2D0((uint64_t)v257, v29);
  double v227 = v49;
  double v229 = v48;
  double v50 = 0.0;
  if (v48 == 0.0) {
    double v51 = 0.0;
  }
  else {
    double v51 = 8.0;
  }
  double v52 = sub_1DEDE98D0(v25);
  uint64_t v34 = *(void *)(v25 + 72);
  uint64_t v53 = *(void *)(v34 + 16);
  uint64_t v54 = *(void *)(v53 + 16);
  if (v54)
  {
    uint64_t v55 = 0;
    CGFloat v56 = (unsigned __int8 *)(v53 + 32);
    uint64_t v57 = *(void *)(v53 + 16);
    while (1)
    {
      int v58 = *v56++;
      switch(v58)
      {
        case 1:
        case 4:
          BOOL v60 = __OFADD__(v55++, 1);
          if (v60) {
            goto LABEL_85;
          }
          double v50 = v50 + *(double *)(v34 + 32);
          goto LABEL_17;
        case 3:
          BOOL v60 = __OFADD__(v55++, 1);
          if (v60) {
            goto LABEL_86;
          }
          double v50 = v50 + *(double *)(v34 + 64);
          goto LABEL_17;
        case 5:
          double v50 = v50 + 11.0;
          goto LABEL_17;
        case 6:
        case 7:
        case 8:
          goto LABEL_17;
        default:
          if (*(unsigned char *)(v34 + 24)) {
            uint64_t v59 = 48;
          }
          else {
            uint64_t v59 = 32;
          }
          BOOL v60 = __OFADD__(v55++, 1);
          if (v60)
          {
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
            goto LABEL_87;
          }
          double v50 = v50 + *(double *)(v34 + v59);
LABEL_17:
          if (!--v57) {
            goto LABEL_29;
          }
          break;
      }
    }
  }
  uint64_t v55 = 0;
LABEL_29:
  BOOL v60 = __OFSUB__(v55, 1);
  uint64_t v61 = v55 - 1;
  if (v60)
  {
LABEL_87:
    __break(1u);
    JUMPOUT(0x1DEB95ED4);
  }
  double v62 = v46 + 8.0;
  CGFloat v245 = v47 + 8.0;
  uint64_t v63 = v61 & ~(v61 >> 63);
  double v64 = 20.0;
  if (v255) {
    double v64 = 10.0;
  }
  double v220 = v50 + v64 * (double)v63;
  double v65 = v259 - (v46 + 8.0 + v47 + 8.0) - v27 - v26 - v51 - v229 - v220;
  double v66 = sub_1DF00C07C();
  if (v54)
  {
    double v67 = (unsigned __int8 *)(v53 + 32);
    double v68 = 0.0;
    do
    {
      int v69 = *v67++;
      if (v69 == 8) {
        double v68 = v68 + 35.0;
      }
      --v54;
    }
    while (v54);
  }
  else
  {
    double v68 = 0.0;
  }
  uint64_t v205 = *((void *)&v24 + 1);
  double v247 = v65 - v66 - v68 - v52;
  double v249 = v27 + v26 + v62;
  CGFloat v250 = v52;
  CGFloat v192 = v30;
  double v234 = v46 + 8.0;
  CGFloat v253 = v65;
  if (!v19) {
    goto LABEL_56;
  }
  uint64_t v70 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v70 = *(void *)&MinX & 0xFFFFFFFFFFFFLL;
  }
  if (v70 && (*(unsigned char *)(v25 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    objc_msgSend(v30, sel_lineHeight);
    double v72 = v71;
    sub_1DEA66C20();
    double v246 = v73;
    uint64_t v74 = swift_allocObject();
    long long v248 = xmmword_1DFE0B250;
    *(_OWORD *)(v74 + 16) = xmmword_1DFE0B250;
    BOOL v75 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v74 + 32) = *MEMORY[0x1E4FB06F8];
    double v243 = COERCE_DOUBLE(sub_1DE919914(0, (unint64_t *)&qword_1EBABB020));
    *(double *)(v74 + 64) = v243;
    *(void *)(v74 + 40) = v30;
    id v76 = v75;
    id v77 = v30;
    sub_1DEA65870(v74);
    id v78 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    double v79 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    CGFloat MinX = v80;
    double v242 = COERCE_DOUBLE(sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key));
    *(void *)&double v241 = MEMORY[0x1E4FBC840] + 8;
    double v81 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v82 = objc_msgSend(v78, sel_initWithString_attributes_, v79, v81);

    float v83 = 0.1;
    if (LOBYTE(v254)) {
      uint64_t v84 = 3;
    }
    else {
      uint64_t v84 = 1;
    }
    if ((LOBYTE(v254) & 1) == 0) {
      float v83 = 0.0;
    }
    *(float *)&uint64_t v256 = v83;
    if (LOBYTE(v254)) {
      uint64_t v85 = 3;
    }
    else {
      uint64_t v85 = 2;
    }
    objc_msgSend(v82, sel_boundingRectWithSize_options_context_, v85, 0, v65, v72 * (double)v84, v192);
    CGFloat v87 = v86;
    double v88 = v65;
    CGFloat v90 = v89;
    CGFloat v92 = v91;
    CGFloat v94 = v93;

    v376.origin.CGFloat x = v87;
    v376.origin.double y = v90;
    v376.size.CGFloat width = v92;
    v376.size.CGFloat height = v94;
    double v95 = ceil(CGRectGetHeight(v376));
    uint64_t v96 = v25;
    id v97 = v258;
    objc_msgSend(v258, sel_lineHeight);
    uint64_t v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = v248;
    *(double *)(v98 + 64) = v243;
    *(void *)(v98 + 32) = v76;
    *(void *)(v98 + 40) = v97;
    id v99 = v97;
    uint64_t v33 = v84;
    swift_bridgeObjectRetain();
    id v100 = v76;
    sub_1DEA65870(v98);
    id v101 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    CGFloat v102 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    double v103 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v104 = objc_msgSend(v101, sel_initWithString_attributes_, v102, v103);

    sub_1DFDFEF40();
    CGFloat v106 = v105;
    CGFloat v108 = v107;
    CGFloat v110 = v109;
    CGFloat v112 = v111;

    v377.origin.CGFloat x = v106;
    v377.origin.double y = v108;
    v377.size.CGFloat width = v110;
    v377.size.CGFloat height = v112;
    double v62 = v234;
    double v113 = ceil(CGRectGetHeight(v377));
    double v114 = *(double *)(v96 + 48);
    double v115 = v244;
    double v243 = v95;
    double v116 = v95 + v244 + v113;
    if (v114 > v251 + v251 + v116) {
      double v117 = v114;
    }
    else {
      double v117 = v251 + v251 + v116;
    }
    CGFloat v119 = v249;
    v378.origin.CGFloat x = v249;
    v378.origin.double y = v117 * 0.5 - v116 * 0.5;
    double y = v378.origin.y;
    v378.size.CGFloat width = v88;
    v378.size.CGFloat height = v113;
    double v246 = v115 + CGRectGetMaxY(v378);
    v379.origin.CGFloat x = v119;
    *(double *)&long long v248 = y;
    v379.origin.double y = y;
    v379.size.CGFloat width = v88;
    v379.size.CGFloat height = v113;
    CGFloat MaxY = CGRectGetMaxY(v379);
    float v219 = *(float *)&v256;
    uint64_t v121 = v33;
    double v241 = v115 + MaxY;
    double v242 = v247;
    CGFloat v239 = v119;
    double v244 = v88;
  }
  else
  {
LABEL_56:
    float v122 = 0.1;
    LODWORD(v256) = 0;
    if ((LOBYTE(v254) & 1) == 0) {
      float v122 = 0.0;
    }
    float v219 = v122;
    if (LOBYTE(v254)) {
      uint64_t v121 = 3;
    }
    else {
      uint64_t v121 = 2;
    }
    sub_1DEA66C20();
    uint64_t v123 = swift_allocObject();
    *(_OWORD *)(v123 + 16) = xmmword_1DFE0B250;
    CGFloat v124 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v123 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v123 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    uint64_t v125 = v25;
    id v126 = v258;
    *(void *)(v123 + 40) = v258;
    swift_bridgeObjectRetain();
    id v127 = v126;
    id v128 = v124;
    sub_1DEA65870(v123);
    id v129 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    float v130 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    uint64_t v131 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v132 = objc_msgSend(v129, sel_initWithString_attributes_, v130, v131);

    sub_1DFDFEF60();
    double v134 = v133;

    uint64_t v33 = 0;
    double v113 = ceil(v134);
    if (*(double *)(v125 + 48) > v251 + v251 + v113) {
      double v117 = *(double *)(v125 + 48);
    }
    else {
      double v117 = v251 + v251 + v113;
    }
    *(double *)&long long v248 = (v117 - v113) * 0.5;
    double v242 = 0.0;
    double v243 = 0.0;
    CGFloat v239 = 0.0;
    double v241 = 0.0;
    double v244 = 0.0;
    double v246 = 0.0;
  }
  double v225 = v117;
  double v135 = ceil((v117 - v27) * 0.5);
  v380.origin.CGFloat x = v62;
  v380.origin.double y = v135;
  v380.size.CGFloat width = v27;
  v380.size.CGFloat height = v27;
  CGFloat MinX = CGRectGetMinX(v380);
  double v136 = v259 - v245;
  CGFloat v137 = v220;
  CGFloat v138 = v259 - v245 - v220;
  CGFloat v139 = -sub_1DF00C07C() - v250;
  double v140 = 0.0;
  v381.origin.double y = 0.0;
  CGFloat v216 = v138;
  v381.origin.CGFloat x = v138;
  v381.size.CGFloat width = v137;
  double v141 = v225;
  v381.size.CGFloat height = v225;
  CGRect v382 = CGRectOffset(v381, v139, 0.0);
  CGFloat v214 = v382.origin.y;
  CGFloat x = v382.origin.x;
  CGFloat height = v382.size.height;
  CGFloat width = v382.size.width;
  uint64_t v142 = *(void *)(v34 + 16);
  uint64_t v143 = *(void *)(v142 + 16);
  char v36 = v255;
  if (v143)
  {
    double v144 = (unsigned __int8 *)(v142 + 32);
    uint64_t v145 = v192;
    uint64_t v32 = v121;
    do
    {
      int v146 = *v144++;
      if (v146 == 8) {
        double v140 = v140 + 35.0;
      }
      --v143;
    }
    while (v143);
  }
  else
  {
    uint64_t v145 = v192;
    uint64_t v32 = v121;
  }
  double v147 = v141 - v227;
  double v148 = 0.0;
  v383.origin.CGFloat x = v249;
  *(void *)&v383.origin.double y = v248;
  v383.size.CGFloat width = v253;
  v383.size.CGFloat height = v113;
  CGRect v384 = CGRectOffset(v383, v140, 0.0);
  CGFloat v208 = v384.origin.x;
  CGFloat v209 = v384.origin.y;
  CGFloat v210 = v384.size.height;
  CGFloat v211 = v384.size.width;
  uint64_t v149 = *(void *)(v142 + 16);
  double v150 = 0.0;
  uint64_t v151 = v205;
  if (v149)
  {
    double v152 = (unsigned __int8 *)(v142 + 32);
    do
    {
      int v153 = *v152++;
      if (v153 == 8) {
        double v150 = v150 + 35.0;
      }
      --v149;
    }
    while (v149);
  }
  double v233 = MinX + -12.0;
  double v231 = (v27 + -8.0) * 0.5 + v135;
  double v221 = v147 * 0.5;
  double v222 = v136 - v229;
  double v204 = ceil(v225);
  CGFloat v154 = v239;
  v385.origin.CGFloat x = v239;
  v385.origin.double y = v246;
  CGFloat v155 = v243;
  v385.size.CGFloat width = v244;
  v385.size.CGFloat height = v243;
  CGRect v386 = CGRectOffset(v385, v150, 0.0);
  CGFloat v201 = v386.origin.x;
  CGFloat v202 = v386.origin.y;
  double v207 = v386.size.width;
  CGFloat v203 = v386.size.height;
  uint64_t v156 = *(void *)(v142 + 16);
  CGFloat v157 = v234;
  if (v156)
  {
    CGFloat v158 = (unsigned __int8 *)(v142 + 32);
    double v148 = 0.0;
    do
    {
      int v159 = *v158++;
      if (v159 == 8) {
        double v148 = v148 + 35.0;
      }
      --v156;
    }
    while (v156);
  }
  uint64_t v218 = 0;
  v387.origin.CGFloat x = v234;
  v387.origin.double y = v135;
  v387.size.CGFloat width = v27;
  v387.size.CGFloat height = v27;
  CGRect v388 = CGRectOffset(v387, v148, 0.0);
  CGFloat v197 = v388.origin.x;
  CGFloat v198 = v388.origin.y;
  CGFloat v199 = v388.size.height;
  CGFloat v200 = v388.size.width;
  CGFloat v160 = v249;
  v388.origin.CGFloat x = v249;
  CGFloat v161 = *(double *)&v248;
  *(void *)&v388.origin.double y = v248;
  v388.size.CGFloat width = v253;
  v388.size.CGFloat height = v113;
  CGRect v389 = CGRectIntegral(v388);
  CGFloat MinX = v389.origin.y;
  CGFloat v253 = v389.origin.x;
  CGFloat v250 = v389.size.height;
  CGFloat v251 = v389.size.width;
  v389.origin.CGFloat x = v160;
  v389.origin.double y = v161;
  v389.size.CGFloat width = v247;
  v389.size.CGFloat height = v113;
  CGRect v390 = CGRectIntegral(v389);
  double v249 = v390.origin.x;
  double v247 = v390.size.width;
  *(CGFloat *)&long long v248 = v390.origin.y;
  CGFloat v245 = v390.size.height;
  v390.origin.CGFloat x = v154;
  v390.origin.double y = v246;
  v390.size.CGFloat width = v244;
  v390.size.CGFloat height = v155;
  CGRect v391 = CGRectIntegral(v390);
  double v246 = v391.origin.x;
  CGFloat v240 = v391.origin.y;
  double v244 = v391.size.width;
  CGFloat v237 = v391.size.height;
  v391.origin.CGFloat x = v154;
  v391.origin.double y = v241;
  v391.size.CGFloat width = v242;
  v391.size.CGFloat height = v155;
  CGRect v392 = CGRectIntegral(v391);
  double v242 = v392.size.width;
  double v243 = v392.origin.x;
  CGFloat v235 = v392.origin.y;
  CGFloat v232 = v392.size.height;
  v392.origin.CGFloat x = v157;
  v392.origin.double y = v135;
  v392.size.CGFloat width = v27;
  v392.size.CGFloat height = v27;
  CGRect v393 = CGRectIntegral(v392);
  double v241 = v393.origin.x;
  CGFloat v228 = v393.origin.y;
  CGFloat v239 = v393.size.width;
  CGFloat v230 = v393.size.height;
  v393.origin.CGFloat x = v157;
  v393.origin.double y = v135;
  v393.size.CGFloat width = v27;
  v393.size.CGFloat height = v27;
  CGFloat v238 = CGRectGetMinX(v393) + -1.0;
  v394.origin.CGFloat x = v157;
  v394.origin.double y = v135;
  v394.size.CGFloat width = v27;
  v394.size.CGFloat height = v27;
  CGFloat v236 = CGRectGetMinY(v394) + -1.0;
  v395.origin.CGFloat x = v157;
  v395.origin.double y = v135;
  v395.size.CGFloat width = v27;
  v395.size.CGFloat height = v27;
  CGFloat v226 = CGRectGetWidth(v395) + 2.0;
  v396.origin.CGFloat x = v157;
  v396.origin.double y = v135;
  v396.size.CGFloat width = v27;
  v396.size.CGFloat height = v27;
  CGFloat v224 = CGRectGetHeight(v396) + 2.0;
  v397.size.CGFloat width = 8.0;
  v397.size.CGFloat height = 8.0;
  v397.origin.CGFloat x = v233;
  v397.origin.double y = v231;
  CGRect v398 = CGRectIntegral(v397);
  double v233 = v398.origin.y;
  double v234 = v398.origin.x;
  double v231 = v398.size.width;
  CGFloat v223 = v398.size.height;
  v398.origin.double y = v221;
  v398.origin.CGFloat x = v222;
  v398.size.CGFloat width = v229;
  v398.size.CGFloat height = v227;
  CGRect v399 = CGRectIntegral(v398);
  double v229 = v399.origin.x;
  double v221 = v399.size.height;
  double v222 = v399.origin.y;
  double v227 = v399.size.width;
  v399.origin.double y = 0.0;
  v399.origin.CGFloat x = v216;
  v399.size.CGFloat width = v220;
  v399.size.CGFloat height = v225;
  CGRect v400 = CGRectIntegral(v399);
  CGFloat v162 = v400.origin.x;
  double v220 = v400.origin.y;
  double v225 = v400.size.width;
  CGFloat v196 = v400.size.height;
  v400.origin.double y = v214;
  v400.origin.CGFloat x = x;
  v400.size.CGFloat height = height;
  v400.size.CGFloat width = width;
  CGRect v401 = CGRectIntegral(v400);
  CGFloat v163 = v401.origin.x;
  CGFloat v195 = v401.origin.y;
  CGFloat v164 = v401.size.width;
  CGFloat v165 = v401.size.height;
  v401.origin.CGFloat x = v208;
  v401.origin.double y = v209;
  v401.size.CGFloat height = v210;
  v401.size.CGFloat width = v211;
  CGRect v402 = CGRectIntegral(v401);
  CGFloat v166 = v402.origin.x;
  CGFloat v193 = v402.size.height;
  CGFloat v194 = v402.origin.y;
  CGFloat v167 = v402.size.width;
  v402.origin.CGFloat x = v201;
  v402.origin.double y = v202;
  v402.size.CGFloat width = v207;
  v402.size.CGFloat height = v203;
  CGRect v403 = CGRectIntegral(v402);
  CGFloat v168 = v403.origin.x;
  CGFloat v202 = v403.size.height;
  CGFloat v203 = v403.origin.y;
  CGFloat v169 = v403.size.width;
  v403.origin.CGFloat x = v197;
  v403.origin.double y = v198;
  v403.size.CGFloat height = v199;
  v403.size.CGFloat width = v200;
  CGRect v404 = CGRectIntegral(v403);
  char v170 = LOBYTE(v254);
  char v35 = LOBYTE(v254) & 1;
  v263[1] = 0;
  v263[0] = 0;
  *(double *)&v263[2] = v259;
  *(double *)&v263[3] = v204;
  *(CGFloat *)&v263[4] = v253;
  *(CGFloat *)&v263[5] = MinX;
  *(CGFloat *)&v263[6] = v251;
  *(CGFloat *)&v263[7] = v250;
  *(double *)&v263[8] = v249;
  v263[9] = v248;
  *(double *)&v263[10] = v247;
  *(CGFloat *)&v263[11] = v245;
  v263[12] = v32;
  v263[13] = v33;
  float v264 = v219;
  int v265 = v256;
  double v266 = v246;
  CGFloat v267 = v240;
  double v268 = v244;
  CGFloat v269 = v237;
  double v270 = v243;
  CGFloat v271 = v235;
  double v272 = v242;
  CGFloat v273 = v232;
  double v274 = v241;
  CGFloat v275 = v228;
  CGFloat v276 = v239;
  CGFloat v277 = v230;
  CGFloat v278 = v238;
  CGFloat v279 = v236;
  CGFloat v280 = v226;
  CGFloat v281 = v224;
  double v282 = v234;
  double v283 = v233;
  double v284 = v231;
  CGFloat v285 = v223;
  double v286 = v229;
  double v287 = v222;
  double v288 = v227;
  double v289 = v221;
  CGFloat v254 = v162;
  CGFloat v290 = v162;
  double v291 = v220;
  double v292 = v225;
  CGFloat v37 = v196;
  CGFloat v293 = v196;
  CGFloat v216 = v164;
  CGFloat v217 = v163;
  CGFloat v294 = v163;
  CGFloat v38 = v195;
  CGFloat v295 = v195;
  CGFloat v296 = v164;
  CGFloat v214 = v166;
  CGFloat x = v165;
  CGFloat v297 = v165;
  CGFloat v298 = v166;
  CGFloat v39 = v194;
  CGFloat v299 = v194;
  CGFloat height = v168;
  CGFloat width = v167;
  CGFloat v300 = v167;
  CGFloat v40 = v193;
  CGFloat v301 = v193;
  CGFloat v302 = v168;
  CGFloat v41 = v203;
  CGFloat v303 = v203;
  CGFloat v210 = v404.origin.x;
  CGFloat v211 = v169;
  CGFloat v304 = v169;
  CGFloat v42 = v202;
  CGFloat v305 = v202;
  CGRect v306 = v404;
  CGFloat v208 = v404.size.width;
  CGFloat v209 = v404.origin.y;
  double v207 = v404.size.height;
  uint64_t v307 = v34;
  double v308 = v204;
  double v43 = v204;
  char v309 = v170 & 1;
  char v310 = v36;
  nullsub_1(v263);
  sub_1DEB9BE28((uint64_t)v263, (uint64_t)&v262, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  uint64_t v260 = v206;
  uint64_t v261 = v151;
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();
  swift_release();

  id v258 = 0;
  double v31 = v43;
LABEL_83:
  sub_1DEB9C058((uint64_t)v257, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
  id v171 = v258;
  *(void *)a4 = v218;
  *(void *)(a4 + 8) = v171;
  *(double *)(a4 + 16) = v259;
  *(double *)(a4 + 24) = v31;
  CGFloat v172 = MinX;
  *(CGFloat *)(a4 + 32) = v253;
  *(CGFloat *)(a4 + 40) = v172;
  CGFloat v173 = v250;
  *(CGFloat *)(a4 + 48) = v251;
  *(CGFloat *)(a4 + 56) = v173;
  uint64_t v174 = v248;
  *(double *)(a4 + 64) = v249;
  *(void *)(a4 + 72) = v174;
  CGFloat v175 = v245;
  *(double *)(a4 + 80) = v247;
  *(CGFloat *)(a4 + 88) = v175;
  LODWORD(v175) = v256;
  *(float *)(a4 + 112) = v219;
  *(_DWORD *)(a4 + 116) = LODWORD(v175);
  CGFloat v176 = v240;
  *(double *)(a4 + 120) = v246;
  *(CGFloat *)(a4 + 128) = v176;
  CGFloat v177 = v237;
  *(double *)(a4 + 136) = v244;
  *(CGFloat *)(a4 + 144) = v177;
  CGFloat v178 = v235;
  *(double *)(a4 + 152) = v243;
  *(CGFloat *)(a4 + 160) = v178;
  CGFloat v179 = v232;
  *(double *)(a4 + 168) = v242;
  *(CGFloat *)(a4 + 176) = v179;
  CGFloat v180 = v228;
  *(double *)(a4 + 184) = v241;
  *(CGFloat *)(a4 + 192) = v180;
  CGFloat v181 = v230;
  *(CGFloat *)(a4 + 200) = v239;
  *(CGFloat *)(a4 + 208) = v181;
  CGFloat v182 = v236;
  *(CGFloat *)(a4 + 216) = v238;
  *(CGFloat *)(a4 + 224) = v182;
  *(void *)(a4 + 96) = v32;
  *(void *)(a4 + 104) = v33;
  CGFloat v183 = v224;
  *(CGFloat *)(a4 + 232) = v226;
  *(CGFloat *)(a4 + 240) = v183;
  double v184 = v233;
  *(double *)(a4 + 248) = v234;
  *(double *)(a4 + 256) = v184;
  CGFloat v185 = v223;
  *(double *)(a4 + 264) = v231;
  *(CGFloat *)(a4 + 272) = v185;
  double v186 = v222;
  *(double *)(a4 + 280) = v229;
  *(double *)(a4 + 288) = v186;
  double v187 = v221;
  *(double *)(a4 + 296) = v227;
  *(double *)(a4 + 304) = v187;
  double v188 = v220;
  *(CGFloat *)(a4 + 312) = v254;
  *(double *)(a4 + 320) = v188;
  *(double *)(a4 + 328) = v225;
  *(CGFloat *)(a4 + 336) = v37;
  *(CGFloat *)(a4 + 344) = v217;
  *(CGFloat *)(a4 + 352) = v38;
  CGFloat v189 = x;
  *(CGFloat *)(a4 + 360) = v216;
  *(CGFloat *)(a4 + 368) = v189;
  *(CGFloat *)(a4 + 376) = v214;
  *(CGFloat *)(a4 + 384) = v39;
  *(CGFloat *)(a4 + 392) = width;
  *(CGFloat *)(a4 + 400) = v40;
  *(CGFloat *)(a4 + 408) = height;
  *(CGFloat *)(a4 + 416) = v41;
  *(CGFloat *)(a4 + 424) = v211;
  *(CGFloat *)(a4 + 432) = v42;
  CGFloat v190 = v209;
  *(CGFloat *)(a4 + 440) = v210;
  *(CGFloat *)(a4 + 448) = v190;
  double result = v207;
  *(CGFloat *)(a4 + 456) = v208;
  *(double *)(a4 + 464) = result;
  *(void *)(a4 + 472) = v34;
  *(double *)(a4 + 480) = v43;
  *(unsigned char *)(a4 + 488) = v35;
  *(unsigned char *)(a4 + 489) = v36;
  return result;
}

double sub_1DEB95EF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for FollowingPuzzleHubModel();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v192 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB9BFF0(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)&a3 + 16), *(void *)(*(void *)&a3 + 40));
  int v255 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  id v12 = sub_1DF733364(v255);
  double v13 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(*(void *)&a3 + 16), *(void *)(*(void *)&a3 + 40))+ 24);
  id v14 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  id v15 = objc_msgSend(v13, sel_scaledFontForFont_, v14);

  CGFloat v16 = (void *)sub_1DFDF2AF0();
  id v17 = objc_msgSend(v16, sel_preferredContentSizeCategory);

  LODWORD(v254) = sub_1DFDFF0C0();
  uint64_t v312 = 0;
  double v313 = (void *)0xE000000000000000;
  sub_1DFDFF9B0();
  uint64_t v376 = v312;
  CGRect v377 = v313;
  uint64_t v256 = a2;
  double v18 = *(double *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v258 = v12;
  objc_msgSend(v12, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v15, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  unint64_t v19 = *((void *)v11 + 3);
  CGFloat MinX = *((double *)v11 + 2);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v20 = *(int *)(v9 + 44);
  uint64_t v21 = *(void *)&v11[*(int *)(v9 + 48)];
  double v257 = v11;
  char v22 = *(void **)&v11[v20];
  if (!v21) {
    char v22 = 0;
  }
  uint64_t v312 = v21;
  double v313 = v22;
  LOBYTE(v314) = 0;
  BYTE1(v314) = v21 == 0;
  sub_1DFDFFB10();
  uint64_t v23 = v376;
  long long v24 = v377;
  CGFloat v217 = a3;
  uint64_t v312 = v376;
  double v313 = v377;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v263, (uint64_t)v311, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v311, (uint64_t)&v312, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v312) != 1)
  {
    swift_bridgeObjectRelease();

    uint64_t v218 = v312;
    id v258 = v313;
    double v259 = v314;
    double v31 = v315;
    CGFloat MinX = v317;
    CGFloat v253 = v316;
    CGFloat v250 = v319;
    CGFloat v251 = v318;
    double v249 = v320;
    double v247 = v322;
    *(void *)&long long v248 = v321;
    uint64_t v32 = v324;
    uint64_t v33 = v325;
    float v219 = v326;
    LODWORD(v256) = v327;
    CGFloat v245 = v323;
    double v246 = v328;
    double v243 = v332;
    double v244 = v330;
    double v242 = v334;
    CGFloat v240 = v329;
    double v241 = v336;
    CGFloat v228 = v337;
    CGFloat v239 = v338;
    CGFloat v237 = v331;
    CGFloat v238 = v340;
    CGFloat v235 = v333;
    CGFloat v236 = v341;
    double v234 = v344;
    CGFloat v232 = v335;
    double v233 = v345;
    uint64_t v34 = v372;
    char v35 = v374;
    char v36 = v375;
    CGFloat v230 = v339;
    double v231 = v346;
    CGFloat v223 = v347;
    CGFloat v224 = v343;
    double v229 = v348;
    CGFloat v226 = v342;
    double v227 = v350;
    double v221 = v351;
    double v222 = v349;
    CGFloat v254 = v352;
    double v220 = v353;
    double v225 = v354;
    CGFloat v37 = v355;
    CGFloat v38 = v357;
    CGFloat v216 = v358;
    CGFloat v217 = v356;
    CGFloat v214 = v360;
    CGFloat x = v359;
    CGFloat v39 = v361;
    CGFloat v40 = v363;
    CGFloat height = v364;
    CGFloat width = v362;
    CGFloat v41 = v365;
    CGFloat v42 = v367;
    CGFloat v210 = v368;
    CGFloat v211 = v366;
    CGFloat v208 = v370;
    CGFloat v209 = v369;
    double v207 = v371;
    double v43 = v373;
    goto LABEL_85;
  }
  double v259 = v18;
  uint64_t v206 = v23;
  if (v255)
  {
    uint64_t v25 = v256;
    CGFloat v251 = *(double *)(v256 + 56);
    double v26 = 6.0;
    double v27 = 16.0;
    double v28 = 4.0;
    id v29 = v258;
    CGFloat v30 = v15;
    if (LOBYTE(v254)) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v44 = 56;
  if (LOBYTE(v254)) {
    uint64_t v44 = 64;
  }
  uint64_t v25 = v256;
  double v45 = *(double *)(v256 + 48);
  CGFloat v251 = *(double *)(v256 + v44);
  double v27 = v45 - (v251 + v251);
  double v26 = 10.0;
  id v29 = v258;
  CGFloat v30 = v15;
  if ((LOBYTE(v254) & 1) == 0)
  {
LABEL_12:
    double v28 = 1.0;
    goto LABEL_13;
  }
  double v26 = 12.0;
  double v28 = 4.0;
LABEL_13:
  double v244 = v28;
  double v46 = *(double *)(v25 + 24);
  double v47 = *(double *)(v25 + 40);
  double v48 = sub_1DEB9A0B8((uint64_t)v257, v29);
  double v227 = v49;
  double v229 = v48;
  double v50 = 0.0;
  if (v48 == 0.0) {
    double v51 = 0.0;
  }
  else {
    double v51 = 8.0;
  }
  double v52 = sub_1DEDE98D0(v25);
  uint64_t v34 = *(void *)(v25 + 72);
  uint64_t v53 = *(void *)(v34 + 16);
  uint64_t v54 = *(void *)(v53 + 16);
  if (v54)
  {
    uint64_t v55 = 0;
    CGFloat v56 = (unsigned __int8 *)(v53 + 32);
    uint64_t v57 = *(void *)(v53 + 16);
    while (1)
    {
      int v58 = *v56++;
      switch(v58)
      {
        case 1:
        case 4:
          BOOL v60 = __OFADD__(v55++, 1);
          if (v60) {
            goto LABEL_87;
          }
          double v50 = v50 + *(double *)(v34 + 32);
          goto LABEL_19;
        case 3:
          BOOL v60 = __OFADD__(v55++, 1);
          if (v60) {
            goto LABEL_88;
          }
          double v50 = v50 + *(double *)(v34 + 64);
          goto LABEL_19;
        case 5:
          double v50 = v50 + 11.0;
          goto LABEL_19;
        case 6:
        case 7:
        case 8:
          goto LABEL_19;
        default:
          if (*(unsigned char *)(v34 + 24)) {
            uint64_t v59 = 48;
          }
          else {
            uint64_t v59 = 32;
          }
          BOOL v60 = __OFADD__(v55++, 1);
          if (v60)
          {
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
            goto LABEL_89;
          }
          double v50 = v50 + *(double *)(v34 + v59);
LABEL_19:
          if (!--v57) {
            goto LABEL_31;
          }
          break;
      }
    }
  }
  uint64_t v55 = 0;
LABEL_31:
  BOOL v60 = __OFSUB__(v55, 1);
  uint64_t v61 = v55 - 1;
  if (v60)
  {
LABEL_89:
    __break(1u);
    JUMPOUT(0x1DEB973C0);
  }
  double v62 = v46 + 8.0;
  CGFloat v245 = v47 + 8.0;
  uint64_t v63 = v61 & ~(v61 >> 63);
  double v64 = 20.0;
  if (v255) {
    double v64 = 10.0;
  }
  double v220 = v50 + v64 * (double)v63;
  double v65 = v259 - (v46 + 8.0 + v47 + 8.0) - v27 - v26 - v51 - v229 - v220;
  double v66 = sub_1DF00C07C();
  if (v54)
  {
    double v67 = (unsigned __int8 *)(v53 + 32);
    double v68 = 0.0;
    do
    {
      int v69 = *v67++;
      if (v69 == 8) {
        double v68 = v68 + 35.0;
      }
      --v54;
    }
    while (v54);
  }
  else
  {
    double v68 = 0.0;
  }
  uint64_t v205 = v24;
  double v247 = v65 - v66 - v68 - v52;
  double v249 = v27 + v26 + v62;
  CGFloat v250 = v52;
  CGFloat v192 = v30;
  double v234 = v46 + 8.0;
  CGFloat v253 = v65;
  if (!v19) {
    goto LABEL_58;
  }
  uint64_t v70 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v70 = *(void *)&MinX & 0xFFFFFFFFFFFFLL;
  }
  if (v70 && (*(unsigned char *)(v25 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    objc_msgSend(v30, sel_lineHeight);
    double v72 = v71;
    sub_1DEA66C20();
    double v246 = v73;
    uint64_t v74 = swift_allocObject();
    long long v248 = xmmword_1DFE0B250;
    *(_OWORD *)(v74 + 16) = xmmword_1DFE0B250;
    BOOL v75 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v74 + 32) = *MEMORY[0x1E4FB06F8];
    double v243 = COERCE_DOUBLE(sub_1DE919914(0, (unint64_t *)&qword_1EBABB020));
    *(double *)(v74 + 64) = v243;
    *(void *)(v74 + 40) = v30;
    id v76 = v75;
    id v77 = v30;
    sub_1DEA65870(v74);
    id v78 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    double v79 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    CGFloat MinX = v80;
    double v242 = COERCE_DOUBLE(sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key));
    *(void *)&double v241 = MEMORY[0x1E4FBC840] + 8;
    double v81 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v82 = objc_msgSend(v78, sel_initWithString_attributes_, v79, v81);

    float v83 = 0.1;
    if (LOBYTE(v254)) {
      uint64_t v84 = 3;
    }
    else {
      uint64_t v84 = 1;
    }
    if ((LOBYTE(v254) & 1) == 0) {
      float v83 = 0.0;
    }
    *(float *)&uint64_t v256 = v83;
    if (LOBYTE(v254)) {
      uint64_t v85 = 3;
    }
    else {
      uint64_t v85 = 2;
    }
    objc_msgSend(v82, sel_boundingRectWithSize_options_context_, v85, 0, v65, v72 * (double)v84, v192);
    CGFloat v87 = v86;
    double v88 = v65;
    CGFloat v90 = v89;
    CGFloat v92 = v91;
    CGFloat v94 = v93;

    v378.origin.CGFloat x = v87;
    v378.origin.double y = v90;
    v378.size.CGFloat width = v92;
    v378.size.CGFloat height = v94;
    double v95 = ceil(CGRectGetHeight(v378));
    uint64_t v96 = v25;
    id v97 = v258;
    objc_msgSend(v258, sel_lineHeight);
    uint64_t v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = v248;
    *(double *)(v98 + 64) = v243;
    *(void *)(v98 + 32) = v76;
    *(void *)(v98 + 40) = v97;
    id v99 = v97;
    uint64_t v33 = v84;
    swift_bridgeObjectRetain();
    id v100 = v76;
    sub_1DEA65870(v98);
    id v101 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    CGFloat v102 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    double v103 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v104 = objc_msgSend(v101, sel_initWithString_attributes_, v102, v103);

    sub_1DFDFEF40();
    CGFloat v106 = v105;
    CGFloat v108 = v107;
    CGFloat v110 = v109;
    CGFloat v112 = v111;

    v379.origin.CGFloat x = v106;
    v379.origin.double y = v108;
    v379.size.CGFloat width = v110;
    v379.size.CGFloat height = v112;
    double v62 = v234;
    double v113 = ceil(CGRectGetHeight(v379));
    double v114 = *(double *)(v96 + 48);
    double v115 = v244;
    double v243 = v95;
    double v116 = v95 + v244 + v113;
    if (v114 > v251 + v251 + v116) {
      double v117 = v114;
    }
    else {
      double v117 = v251 + v251 + v116;
    }
    CGFloat v119 = v249;
    v380.origin.CGFloat x = v249;
    v380.origin.double y = v117 * 0.5 - v116 * 0.5;
    double y = v380.origin.y;
    v380.size.CGFloat width = v88;
    v380.size.CGFloat height = v113;
    double v246 = v115 + CGRectGetMaxY(v380);
    v381.origin.CGFloat x = v119;
    *(double *)&long long v248 = y;
    v381.origin.double y = y;
    v381.size.CGFloat width = v88;
    v381.size.CGFloat height = v113;
    CGFloat MaxY = CGRectGetMaxY(v381);
    float v219 = *(float *)&v256;
    uint64_t v121 = v33;
    double v241 = v115 + MaxY;
    double v242 = v247;
    CGFloat v239 = v119;
    double v244 = v88;
  }
  else
  {
LABEL_58:
    float v122 = 0.1;
    LODWORD(v256) = 0;
    if ((LOBYTE(v254) & 1) == 0) {
      float v122 = 0.0;
    }
    float v219 = v122;
    if (LOBYTE(v254)) {
      uint64_t v121 = 3;
    }
    else {
      uint64_t v121 = 2;
    }
    sub_1DEA66C20();
    uint64_t v123 = swift_allocObject();
    *(_OWORD *)(v123 + 16) = xmmword_1DFE0B250;
    CGFloat v124 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v123 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v123 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    uint64_t v125 = v25;
    id v126 = v258;
    *(void *)(v123 + 40) = v258;
    swift_bridgeObjectRetain();
    id v127 = v126;
    id v128 = v124;
    sub_1DEA65870(v123);
    id v129 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    float v130 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    uint64_t v131 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v132 = objc_msgSend(v129, sel_initWithString_attributes_, v130, v131);

    sub_1DFDFEF60();
    double v134 = v133;

    uint64_t v33 = 0;
    double v113 = ceil(v134);
    if (*(double *)(v125 + 48) > v251 + v251 + v113) {
      double v117 = *(double *)(v125 + 48);
    }
    else {
      double v117 = v251 + v251 + v113;
    }
    *(double *)&long long v248 = (v117 - v113) * 0.5;
    double v242 = 0.0;
    double v243 = 0.0;
    CGFloat v239 = 0.0;
    double v241 = 0.0;
    double v244 = 0.0;
    double v246 = 0.0;
  }
  double v225 = v117;
  double v135 = ceil((v117 - v27) * 0.5);
  v382.origin.CGFloat x = v62;
  v382.origin.double y = v135;
  v382.size.CGFloat width = v27;
  v382.size.CGFloat height = v27;
  CGFloat MinX = CGRectGetMinX(v382);
  double v136 = v259 - v245;
  CGFloat v137 = v220;
  CGFloat v138 = v259 - v245 - v220;
  CGFloat v139 = -sub_1DF00C07C() - v250;
  double v140 = 0.0;
  v383.origin.double y = 0.0;
  CGFloat v216 = v138;
  v383.origin.CGFloat x = v138;
  v383.size.CGFloat width = v137;
  double v141 = v225;
  v383.size.CGFloat height = v225;
  CGRect v384 = CGRectOffset(v383, v139, 0.0);
  CGFloat v214 = v384.origin.y;
  CGFloat x = v384.origin.x;
  CGFloat height = v384.size.height;
  CGFloat width = v384.size.width;
  uint64_t v142 = *(void *)(v34 + 16);
  uint64_t v143 = *(void *)(v142 + 16);
  char v36 = v255;
  if (v143)
  {
    double v144 = (unsigned __int8 *)(v142 + 32);
    uint64_t v145 = v192;
    uint64_t v32 = v121;
    do
    {
      int v146 = *v144++;
      if (v146 == 8) {
        double v140 = v140 + 35.0;
      }
      --v143;
    }
    while (v143);
  }
  else
  {
    uint64_t v145 = v192;
    uint64_t v32 = v121;
  }
  double v147 = v141 - v227;
  double v148 = 0.0;
  v385.origin.CGFloat x = v249;
  *(void *)&v385.origin.double y = v248;
  v385.size.CGFloat width = v253;
  v385.size.CGFloat height = v113;
  CGRect v386 = CGRectOffset(v385, v140, 0.0);
  CGFloat v208 = v386.origin.x;
  CGFloat v209 = v386.origin.y;
  CGFloat v210 = v386.size.height;
  CGFloat v211 = v386.size.width;
  uint64_t v149 = *(void *)(v142 + 16);
  double v150 = 0.0;
  uint64_t v151 = v205;
  if (v149)
  {
    double v152 = (unsigned __int8 *)(v142 + 32);
    do
    {
      int v153 = *v152++;
      if (v153 == 8) {
        double v150 = v150 + 35.0;
      }
      --v149;
    }
    while (v149);
  }
  double v233 = MinX + -12.0;
  double v231 = (v27 + -8.0) * 0.5 + v135;
  double v221 = v147 * 0.5;
  double v222 = v136 - v229;
  double v204 = ceil(v225);
  CGFloat v154 = v239;
  v387.origin.CGFloat x = v239;
  v387.origin.double y = v246;
  CGFloat v155 = v243;
  v387.size.CGFloat width = v244;
  v387.size.CGFloat height = v243;
  CGRect v388 = CGRectOffset(v387, v150, 0.0);
  CGFloat v201 = v388.origin.x;
  CGFloat v202 = v388.origin.y;
  double v207 = v388.size.width;
  CGFloat v203 = v388.size.height;
  uint64_t v156 = *(void *)(v142 + 16);
  CGFloat v157 = v234;
  if (v156)
  {
    CGFloat v158 = (unsigned __int8 *)(v142 + 32);
    double v148 = 0.0;
    do
    {
      int v159 = *v158++;
      if (v159 == 8) {
        double v148 = v148 + 35.0;
      }
      --v156;
    }
    while (v156);
  }
  uint64_t v218 = 0;
  v389.origin.CGFloat x = v234;
  v389.origin.double y = v135;
  v389.size.CGFloat width = v27;
  v389.size.CGFloat height = v27;
  CGRect v390 = CGRectOffset(v389, v148, 0.0);
  CGFloat v197 = v390.origin.x;
  CGFloat v198 = v390.origin.y;
  CGFloat v199 = v390.size.height;
  CGFloat v200 = v390.size.width;
  CGFloat v160 = v249;
  v390.origin.CGFloat x = v249;
  CGFloat v161 = *(double *)&v248;
  *(void *)&v390.origin.double y = v248;
  v390.size.CGFloat width = v253;
  v390.size.CGFloat height = v113;
  CGRect v391 = CGRectIntegral(v390);
  CGFloat MinX = v391.origin.y;
  CGFloat v253 = v391.origin.x;
  CGFloat v250 = v391.size.height;
  CGFloat v251 = v391.size.width;
  v391.origin.CGFloat x = v160;
  v391.origin.double y = v161;
  v391.size.CGFloat width = v247;
  v391.size.CGFloat height = v113;
  CGRect v392 = CGRectIntegral(v391);
  double v249 = v392.origin.x;
  double v247 = v392.size.width;
  *(CGFloat *)&long long v248 = v392.origin.y;
  CGFloat v245 = v392.size.height;
  v392.origin.CGFloat x = v154;
  v392.origin.double y = v246;
  v392.size.CGFloat width = v244;
  v392.size.CGFloat height = v155;
  CGRect v393 = CGRectIntegral(v392);
  double v246 = v393.origin.x;
  CGFloat v240 = v393.origin.y;
  double v244 = v393.size.width;
  CGFloat v237 = v393.size.height;
  v393.origin.CGFloat x = v154;
  v393.origin.double y = v241;
  v393.size.CGFloat width = v242;
  v393.size.CGFloat height = v155;
  CGRect v394 = CGRectIntegral(v393);
  double v242 = v394.size.width;
  double v243 = v394.origin.x;
  CGFloat v235 = v394.origin.y;
  CGFloat v232 = v394.size.height;
  v394.origin.CGFloat x = v157;
  v394.origin.double y = v135;
  v394.size.CGFloat width = v27;
  v394.size.CGFloat height = v27;
  CGRect v395 = CGRectIntegral(v394);
  double v241 = v395.origin.x;
  CGFloat v228 = v395.origin.y;
  CGFloat v239 = v395.size.width;
  CGFloat v230 = v395.size.height;
  v395.origin.CGFloat x = v157;
  v395.origin.double y = v135;
  v395.size.CGFloat width = v27;
  v395.size.CGFloat height = v27;
  CGFloat v238 = CGRectGetMinX(v395) + -1.0;
  v396.origin.CGFloat x = v157;
  v396.origin.double y = v135;
  v396.size.CGFloat width = v27;
  v396.size.CGFloat height = v27;
  CGFloat v236 = CGRectGetMinY(v396) + -1.0;
  v397.origin.CGFloat x = v157;
  v397.origin.double y = v135;
  v397.size.CGFloat width = v27;
  v397.size.CGFloat height = v27;
  CGFloat v226 = CGRectGetWidth(v397) + 2.0;
  v398.origin.CGFloat x = v157;
  v398.origin.double y = v135;
  v398.size.CGFloat width = v27;
  v398.size.CGFloat height = v27;
  CGFloat v224 = CGRectGetHeight(v398) + 2.0;
  v399.size.CGFloat width = 8.0;
  v399.size.CGFloat height = 8.0;
  v399.origin.CGFloat x = v233;
  v399.origin.double y = v231;
  CGRect v400 = CGRectIntegral(v399);
  double v233 = v400.origin.y;
  double v234 = v400.origin.x;
  double v231 = v400.size.width;
  CGFloat v223 = v400.size.height;
  v400.origin.double y = v221;
  v400.origin.CGFloat x = v222;
  v400.size.CGFloat width = v229;
  v400.size.CGFloat height = v227;
  CGRect v401 = CGRectIntegral(v400);
  double v229 = v401.origin.x;
  double v221 = v401.size.height;
  double v222 = v401.origin.y;
  double v227 = v401.size.width;
  v401.origin.double y = 0.0;
  v401.origin.CGFloat x = v216;
  v401.size.CGFloat width = v220;
  v401.size.CGFloat height = v225;
  CGRect v402 = CGRectIntegral(v401);
  CGFloat v162 = v402.origin.x;
  double v220 = v402.origin.y;
  double v225 = v402.size.width;
  CGFloat v196 = v402.size.height;
  v402.origin.double y = v214;
  v402.origin.CGFloat x = x;
  v402.size.CGFloat height = height;
  v402.size.CGFloat width = width;
  CGRect v403 = CGRectIntegral(v402);
  CGFloat v163 = v403.origin.x;
  CGFloat v195 = v403.origin.y;
  CGFloat v164 = v403.size.width;
  CGFloat v165 = v403.size.height;
  v403.origin.CGFloat x = v208;
  v403.origin.double y = v209;
  v403.size.CGFloat height = v210;
  v403.size.CGFloat width = v211;
  CGRect v404 = CGRectIntegral(v403);
  CGFloat v166 = v404.origin.x;
  CGFloat v193 = v404.size.height;
  CGFloat v194 = v404.origin.y;
  CGFloat v167 = v404.size.width;
  v404.origin.CGFloat x = v201;
  v404.origin.double y = v202;
  v404.size.CGFloat width = v207;
  v404.size.CGFloat height = v203;
  CGRect v405 = CGRectIntegral(v404);
  CGFloat v168 = v405.origin.x;
  CGFloat v202 = v405.size.height;
  CGFloat v203 = v405.origin.y;
  CGFloat v169 = v405.size.width;
  v405.origin.CGFloat x = v197;
  v405.origin.double y = v198;
  v405.size.CGFloat height = v199;
  v405.size.CGFloat width = v200;
  CGRect v406 = CGRectIntegral(v405);
  char v170 = LOBYTE(v254);
  char v35 = LOBYTE(v254) & 1;
  v263[1] = 0;
  v263[0] = 0;
  *(double *)&v263[2] = v259;
  *(double *)&v263[3] = v204;
  *(CGFloat *)&v263[4] = v253;
  *(CGFloat *)&v263[5] = MinX;
  *(CGFloat *)&v263[6] = v251;
  *(CGFloat *)&v263[7] = v250;
  *(double *)&v263[8] = v249;
  v263[9] = v248;
  *(double *)&v263[10] = v247;
  *(CGFloat *)&v263[11] = v245;
  v263[12] = v32;
  v263[13] = v33;
  float v264 = v219;
  int v265 = v256;
  double v266 = v246;
  CGFloat v267 = v240;
  double v268 = v244;
  CGFloat v269 = v237;
  double v270 = v243;
  CGFloat v271 = v235;
  double v272 = v242;
  CGFloat v273 = v232;
  double v274 = v241;
  CGFloat v275 = v228;
  CGFloat v276 = v239;
  CGFloat v277 = v230;
  CGFloat v278 = v238;
  CGFloat v279 = v236;
  CGFloat v280 = v226;
  CGFloat v281 = v224;
  double v282 = v234;
  double v283 = v233;
  double v284 = v231;
  CGFloat v285 = v223;
  double v286 = v229;
  double v287 = v222;
  double v288 = v227;
  double v289 = v221;
  CGFloat v254 = v162;
  CGFloat v290 = v162;
  double v291 = v220;
  double v292 = v225;
  CGFloat v37 = v196;
  CGFloat v293 = v196;
  CGFloat v216 = v164;
  CGFloat v217 = v163;
  CGFloat v294 = v163;
  CGFloat v38 = v195;
  CGFloat v295 = v195;
  CGFloat v296 = v164;
  CGFloat v214 = v166;
  CGFloat x = v165;
  CGFloat v297 = v165;
  CGFloat v298 = v166;
  CGFloat v39 = v194;
  CGFloat v299 = v194;
  CGFloat height = v168;
  CGFloat width = v167;
  CGFloat v300 = v167;
  CGFloat v40 = v193;
  CGFloat v301 = v193;
  CGFloat v302 = v168;
  CGFloat v41 = v203;
  CGFloat v303 = v203;
  CGFloat v210 = v406.origin.x;
  CGFloat v211 = v169;
  CGFloat v304 = v169;
  CGFloat v42 = v202;
  CGFloat v305 = v202;
  CGRect v306 = v406;
  CGFloat v208 = v406.size.width;
  CGFloat v209 = v406.origin.y;
  double v207 = v406.size.height;
  uint64_t v307 = v34;
  double v308 = v204;
  double v43 = v204;
  char v309 = v170 & 1;
  char v310 = v36;
  nullsub_1(v263);
  sub_1DEB9BE28((uint64_t)v263, (uint64_t)&v262, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  uint64_t v260 = v206;
  uint64_t v261 = v151;
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();
  swift_release();

  id v258 = 0;
  double v31 = v43;
LABEL_85:
  sub_1DEB9C058((uint64_t)v257, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
  id v171 = v258;
  *(void *)a4 = v218;
  *(void *)(a4 + 8) = v171;
  *(double *)(a4 + 16) = v259;
  *(double *)(a4 + 24) = v31;
  CGFloat v172 = MinX;
  *(CGFloat *)(a4 + 32) = v253;
  *(CGFloat *)(a4 + 40) = v172;
  CGFloat v173 = v250;
  *(CGFloat *)(a4 + 48) = v251;
  *(CGFloat *)(a4 + 56) = v173;
  uint64_t v174 = v248;
  *(double *)(a4 + 64) = v249;
  *(void *)(a4 + 72) = v174;
  CGFloat v175 = v245;
  *(double *)(a4 + 80) = v247;
  *(CGFloat *)(a4 + 88) = v175;
  LODWORD(v175) = v256;
  *(float *)(a4 + 112) = v219;
  *(_DWORD *)(a4 + 116) = LODWORD(v175);
  CGFloat v176 = v240;
  *(double *)(a4 + 120) = v246;
  *(CGFloat *)(a4 + 128) = v176;
  CGFloat v177 = v237;
  *(double *)(a4 + 136) = v244;
  *(CGFloat *)(a4 + 144) = v177;
  CGFloat v178 = v235;
  *(double *)(a4 + 152) = v243;
  *(CGFloat *)(a4 + 160) = v178;
  CGFloat v179 = v232;
  *(double *)(a4 + 168) = v242;
  *(CGFloat *)(a4 + 176) = v179;
  CGFloat v180 = v228;
  *(double *)(a4 + 184) = v241;
  *(CGFloat *)(a4 + 192) = v180;
  CGFloat v181 = v230;
  *(CGFloat *)(a4 + 200) = v239;
  *(CGFloat *)(a4 + 208) = v181;
  CGFloat v182 = v236;
  *(CGFloat *)(a4 + 216) = v238;
  *(CGFloat *)(a4 + 224) = v182;
  *(void *)(a4 + 96) = v32;
  *(void *)(a4 + 104) = v33;
  CGFloat v183 = v224;
  *(CGFloat *)(a4 + 232) = v226;
  *(CGFloat *)(a4 + 240) = v183;
  double v184 = v233;
  *(double *)(a4 + 248) = v234;
  *(double *)(a4 + 256) = v184;
  CGFloat v185 = v223;
  *(double *)(a4 + 264) = v231;
  *(CGFloat *)(a4 + 272) = v185;
  double v186 = v222;
  *(double *)(a4 + 280) = v229;
  *(double *)(a4 + 288) = v186;
  double v187 = v221;
  *(double *)(a4 + 296) = v227;
  *(double *)(a4 + 304) = v187;
  double v188 = v220;
  *(CGFloat *)(a4 + 312) = v254;
  *(double *)(a4 + 320) = v188;
  *(double *)(a4 + 328) = v225;
  *(CGFloat *)(a4 + 336) = v37;
  *(CGFloat *)(a4 + 344) = v217;
  *(CGFloat *)(a4 + 352) = v38;
  CGFloat v189 = x;
  *(CGFloat *)(a4 + 360) = v216;
  *(CGFloat *)(a4 + 368) = v189;
  *(CGFloat *)(a4 + 376) = v214;
  *(CGFloat *)(a4 + 384) = v39;
  *(CGFloat *)(a4 + 392) = width;
  *(CGFloat *)(a4 + 400) = v40;
  *(CGFloat *)(a4 + 408) = height;
  *(CGFloat *)(a4 + 416) = v41;
  *(CGFloat *)(a4 + 424) = v211;
  *(CGFloat *)(a4 + 432) = v42;
  CGFloat v190 = v209;
  *(CGFloat *)(a4 + 440) = v210;
  *(CGFloat *)(a4 + 448) = v190;
  double result = v207;
  *(CGFloat *)(a4 + 456) = v208;
  *(double *)(a4 + 464) = result;
  *(void *)(a4 + 472) = v34;
  *(double *)(a4 + 480) = v43;
  *(unsigned char *)(a4 + 488) = v35;
  *(unsigned char *)(a4 + 489) = v36;
  return result;
}

double sub_1DEB973E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for FollowingAudioModel();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v192 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB9BFF0(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)&a3 + 16), *(void *)(*(void *)&a3 + 40));
  int v255 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  id v12 = sub_1DF733364(v255);
  double v13 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(*(void *)&a3 + 16), *(void *)(*(void *)&a3 + 40))+ 24);
  id v14 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  id v15 = objc_msgSend(v13, sel_scaledFontForFont_, v14);

  CGFloat v16 = (void *)sub_1DFDF2AF0();
  id v17 = objc_msgSend(v16, sel_preferredContentSizeCategory);

  LODWORD(v254) = sub_1DFDFF0C0();
  *(void *)&long long v312 = 0;
  *((void *)&v312 + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  long long v375 = v312;
  uint64_t v256 = a2;
  double v18 = *(double *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v258 = v12;
  objc_msgSend(v12, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v15, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  unint64_t v19 = *((void *)v11 + 3);
  CGFloat MinX = *((double *)v11 + 2);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v20 = *(int *)(v9 + 48);
  double v257 = v11;
  uint64_t v21 = &v11[v20];
  char v22 = v21[16];
  char v23 = v21[17];
  long long v312 = *(_OWORD *)v21;
  LOBYTE(v313) = v22;
  BYTE1(v313) = v23;
  sub_1DFDFFB10();
  long long v24 = v375;
  CGFloat v217 = a3;
  long long v312 = v375;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v263, (uint64_t)v311, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v311, (uint64_t)&v312, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v312) != 1)
  {
    swift_bridgeObjectRelease();

    id v258 = (id)*((void *)&v312 + 1);
    uint64_t v218 = v312;
    double v259 = v313;
    double v31 = v314;
    CGFloat MinX = v316;
    CGFloat v253 = v315;
    CGFloat v250 = v318;
    CGFloat v251 = v317;
    double v249 = v319;
    double v247 = v321;
    *(void *)&long long v248 = v320;
    uint64_t v32 = v323;
    uint64_t v33 = v324;
    float v219 = v325;
    LODWORD(v256) = v326;
    CGFloat v245 = v322;
    double v246 = v327;
    double v243 = v331;
    double v244 = v329;
    double v242 = v333;
    CGFloat v240 = v328;
    double v241 = v335;
    CGFloat v228 = v336;
    CGFloat v239 = v337;
    CGFloat v237 = v330;
    CGFloat v238 = v339;
    CGFloat v235 = v332;
    CGFloat v236 = v340;
    double v234 = v343;
    CGFloat v232 = v334;
    double v233 = v344;
    uint64_t v34 = v371;
    char v35 = v373;
    char v36 = v374;
    CGFloat v230 = v338;
    double v231 = v345;
    CGFloat v223 = v346;
    CGFloat v224 = v342;
    double v229 = v347;
    CGFloat v226 = v341;
    double v227 = v349;
    double v221 = v350;
    double v222 = v348;
    CGFloat v254 = v351;
    double v220 = v352;
    double v225 = v353;
    CGFloat v37 = v354;
    CGFloat v38 = v356;
    CGFloat v216 = v357;
    CGFloat v217 = v355;
    CGFloat v214 = v359;
    CGFloat x = v358;
    CGFloat v39 = v360;
    CGFloat v40 = v362;
    CGFloat height = v363;
    CGFloat width = v361;
    CGFloat v41 = v364;
    CGFloat v42 = v366;
    CGFloat v210 = v367;
    CGFloat v211 = v365;
    CGFloat v208 = v369;
    CGFloat v209 = v368;
    double v207 = v370;
    double v43 = v372;
    goto LABEL_83;
  }
  double v259 = v18;
  uint64_t v206 = v24;
  if (v255)
  {
    uint64_t v25 = v256;
    CGFloat v251 = *(double *)(v256 + 56);
    double v26 = 6.0;
    double v27 = 16.0;
    double v28 = 4.0;
    id v29 = v258;
    CGFloat v30 = v15;
    if (LOBYTE(v254)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v44 = 56;
  if (LOBYTE(v254)) {
    uint64_t v44 = 64;
  }
  uint64_t v25 = v256;
  double v45 = *(double *)(v256 + 48);
  CGFloat v251 = *(double *)(v256 + v44);
  double v27 = v45 - (v251 + v251);
  double v26 = 10.0;
  id v29 = v258;
  CGFloat v30 = v15;
  if ((LOBYTE(v254) & 1) == 0)
  {
LABEL_10:
    double v28 = 1.0;
    goto LABEL_11;
  }
  double v26 = 12.0;
  double v28 = 4.0;
LABEL_11:
  double v244 = v28;
  double v46 = *(double *)(v25 + 24);
  double v47 = *(double *)(v25 + 40);
  double v48 = sub_1DEB99EA4((uint64_t)v257, v29);
  double v227 = v49;
  double v229 = v48;
  double v50 = 0.0;
  if (v48 == 0.0) {
    double v51 = 0.0;
  }
  else {
    double v51 = 8.0;
  }
  double v52 = sub_1DEDE98D0(v25);
  uint64_t v34 = *(void *)(v25 + 72);
  uint64_t v53 = *(void *)(v34 + 16);
  uint64_t v54 = *(void *)(v53 + 16);
  if (v54)
  {
    uint64_t v55 = 0;
    CGFloat v56 = (unsigned __int8 *)(v53 + 32);
    uint64_t v57 = *(void *)(v53 + 16);
    while (1)
    {
      int v58 = *v56++;
      switch(v58)
      {
        case 1:
        case 4:
          BOOL v60 = __OFADD__(v55++, 1);
          if (v60) {
            goto LABEL_85;
          }
          double v50 = v50 + *(double *)(v34 + 32);
          goto LABEL_17;
        case 3:
          BOOL v60 = __OFADD__(v55++, 1);
          if (v60) {
            goto LABEL_86;
          }
          double v50 = v50 + *(double *)(v34 + 64);
          goto LABEL_17;
        case 5:
          double v50 = v50 + 11.0;
          goto LABEL_17;
        case 6:
        case 7:
        case 8:
          goto LABEL_17;
        default:
          if (*(unsigned char *)(v34 + 24)) {
            uint64_t v59 = 48;
          }
          else {
            uint64_t v59 = 32;
          }
          BOOL v60 = __OFADD__(v55++, 1);
          if (v60)
          {
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
            goto LABEL_87;
          }
          double v50 = v50 + *(double *)(v34 + v59);
LABEL_17:
          if (!--v57) {
            goto LABEL_29;
          }
          break;
      }
    }
  }
  uint64_t v55 = 0;
LABEL_29:
  BOOL v60 = __OFSUB__(v55, 1);
  uint64_t v61 = v55 - 1;
  if (v60)
  {
LABEL_87:
    __break(1u);
    JUMPOUT(0x1DEB988A4);
  }
  double v62 = v46 + 8.0;
  CGFloat v245 = v47 + 8.0;
  uint64_t v63 = v61 & ~(v61 >> 63);
  double v64 = 20.0;
  if (v255) {
    double v64 = 10.0;
  }
  double v220 = v50 + v64 * (double)v63;
  double v65 = v259 - (v46 + 8.0 + v47 + 8.0) - v27 - v26 - v51 - v229 - v220;
  double v66 = sub_1DF00C07C();
  if (v54)
  {
    double v67 = (unsigned __int8 *)(v53 + 32);
    double v68 = 0.0;
    do
    {
      int v69 = *v67++;
      if (v69 == 8) {
        double v68 = v68 + 35.0;
      }
      --v54;
    }
    while (v54);
  }
  else
  {
    double v68 = 0.0;
  }
  uint64_t v205 = *((void *)&v24 + 1);
  double v247 = v65 - v66 - v68 - v52;
  double v249 = v27 + v26 + v62;
  CGFloat v250 = v52;
  CGFloat v192 = v30;
  double v234 = v46 + 8.0;
  CGFloat v253 = v65;
  if (!v19) {
    goto LABEL_56;
  }
  uint64_t v70 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v70 = *(void *)&MinX & 0xFFFFFFFFFFFFLL;
  }
  if (v70 && (*(unsigned char *)(v25 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    objc_msgSend(v30, sel_lineHeight);
    double v72 = v71;
    sub_1DEA66C20();
    double v246 = v73;
    uint64_t v74 = swift_allocObject();
    long long v248 = xmmword_1DFE0B250;
    *(_OWORD *)(v74 + 16) = xmmword_1DFE0B250;
    BOOL v75 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v74 + 32) = *MEMORY[0x1E4FB06F8];
    double v243 = COERCE_DOUBLE(sub_1DE919914(0, (unint64_t *)&qword_1EBABB020));
    *(double *)(v74 + 64) = v243;
    *(void *)(v74 + 40) = v30;
    id v76 = v75;
    id v77 = v30;
    sub_1DEA65870(v74);
    id v78 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    double v79 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    CGFloat MinX = v80;
    double v242 = COERCE_DOUBLE(sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key));
    *(void *)&double v241 = MEMORY[0x1E4FBC840] + 8;
    double v81 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v82 = objc_msgSend(v78, sel_initWithString_attributes_, v79, v81);

    float v83 = 0.1;
    if (LOBYTE(v254)) {
      uint64_t v84 = 3;
    }
    else {
      uint64_t v84 = 1;
    }
    if ((LOBYTE(v254) & 1) == 0) {
      float v83 = 0.0;
    }
    *(float *)&uint64_t v256 = v83;
    if (LOBYTE(v254)) {
      uint64_t v85 = 3;
    }
    else {
      uint64_t v85 = 2;
    }
    objc_msgSend(v82, sel_boundingRectWithSize_options_context_, v85, 0, v65, v72 * (double)v84, v192);
    CGFloat v87 = v86;
    double v88 = v65;
    CGFloat v90 = v89;
    CGFloat v92 = v91;
    CGFloat v94 = v93;

    v376.origin.CGFloat x = v87;
    v376.origin.double y = v90;
    v376.size.CGFloat width = v92;
    v376.size.CGFloat height = v94;
    double v95 = ceil(CGRectGetHeight(v376));
    uint64_t v96 = v25;
    id v97 = v258;
    objc_msgSend(v258, sel_lineHeight);
    uint64_t v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = v248;
    *(double *)(v98 + 64) = v243;
    *(void *)(v98 + 32) = v76;
    *(void *)(v98 + 40) = v97;
    id v99 = v97;
    uint64_t v33 = v84;
    swift_bridgeObjectRetain();
    id v100 = v76;
    sub_1DEA65870(v98);
    id v101 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    CGFloat v102 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    double v103 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v104 = objc_msgSend(v101, sel_initWithString_attributes_, v102, v103);

    sub_1DFDFEF40();
    CGFloat v106 = v105;
    CGFloat v108 = v107;
    CGFloat v110 = v109;
    CGFloat v112 = v111;

    v377.origin.CGFloat x = v106;
    v377.origin.double y = v108;
    v377.size.CGFloat width = v110;
    v377.size.CGFloat height = v112;
    double v62 = v234;
    double v113 = ceil(CGRectGetHeight(v377));
    double v114 = *(double *)(v96 + 48);
    double v115 = v244;
    double v243 = v95;
    double v116 = v95 + v244 + v113;
    if (v114 > v251 + v251 + v116) {
      double v117 = v114;
    }
    else {
      double v117 = v251 + v251 + v116;
    }
    CGFloat v119 = v249;
    v378.origin.CGFloat x = v249;
    v378.origin.double y = v117 * 0.5 - v116 * 0.5;
    double y = v378.origin.y;
    v378.size.CGFloat width = v88;
    v378.size.CGFloat height = v113;
    double v246 = v115 + CGRectGetMaxY(v378);
    v379.origin.CGFloat x = v119;
    *(double *)&long long v248 = y;
    v379.origin.double y = y;
    v379.size.CGFloat width = v88;
    v379.size.CGFloat height = v113;
    CGFloat MaxY = CGRectGetMaxY(v379);
    float v219 = *(float *)&v256;
    uint64_t v121 = v33;
    double v241 = v115 + MaxY;
    double v242 = v247;
    CGFloat v239 = v119;
    double v244 = v88;
  }
  else
  {
LABEL_56:
    float v122 = 0.1;
    LODWORD(v256) = 0;
    if ((LOBYTE(v254) & 1) == 0) {
      float v122 = 0.0;
    }
    float v219 = v122;
    if (LOBYTE(v254)) {
      uint64_t v121 = 3;
    }
    else {
      uint64_t v121 = 2;
    }
    sub_1DEA66C20();
    uint64_t v123 = swift_allocObject();
    *(_OWORD *)(v123 + 16) = xmmword_1DFE0B250;
    CGFloat v124 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v123 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v123 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    uint64_t v125 = v25;
    id v126 = v258;
    *(void *)(v123 + 40) = v258;
    swift_bridgeObjectRetain();
    id v127 = v126;
    id v128 = v124;
    sub_1DEA65870(v123);
    id v129 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    float v130 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    uint64_t v131 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v132 = objc_msgSend(v129, sel_initWithString_attributes_, v130, v131);

    sub_1DFDFEF60();
    double v134 = v133;

    uint64_t v33 = 0;
    double v113 = ceil(v134);
    if (*(double *)(v125 + 48) > v251 + v251 + v113) {
      double v117 = *(double *)(v125 + 48);
    }
    else {
      double v117 = v251 + v251 + v113;
    }
    *(double *)&long long v248 = (v117 - v113) * 0.5;
    double v242 = 0.0;
    double v243 = 0.0;
    CGFloat v239 = 0.0;
    double v241 = 0.0;
    double v244 = 0.0;
    double v246 = 0.0;
  }
  double v225 = v117;
  double v135 = ceil((v117 - v27) * 0.5);
  v380.origin.CGFloat x = v62;
  v380.origin.double y = v135;
  v380.size.CGFloat width = v27;
  v380.size.CGFloat height = v27;
  CGFloat MinX = CGRectGetMinX(v380);
  double v136 = v259 - v245;
  CGFloat v137 = v220;
  CGFloat v138 = v259 - v245 - v220;
  CGFloat v139 = -sub_1DF00C07C() - v250;
  double v140 = 0.0;
  v381.origin.double y = 0.0;
  CGFloat v216 = v138;
  v381.origin.CGFloat x = v138;
  v381.size.CGFloat width = v137;
  double v141 = v225;
  v381.size.CGFloat height = v225;
  CGRect v382 = CGRectOffset(v381, v139, 0.0);
  CGFloat v214 = v382.origin.y;
  CGFloat x = v382.origin.x;
  CGFloat height = v382.size.height;
  CGFloat width = v382.size.width;
  uint64_t v142 = *(void *)(v34 + 16);
  uint64_t v143 = *(void *)(v142 + 16);
  char v36 = v255;
  if (v143)
  {
    double v144 = (unsigned __int8 *)(v142 + 32);
    uint64_t v145 = v192;
    uint64_t v32 = v121;
    do
    {
      int v146 = *v144++;
      if (v146 == 8) {
        double v140 = v140 + 35.0;
      }
      --v143;
    }
    while (v143);
  }
  else
  {
    uint64_t v145 = v192;
    uint64_t v32 = v121;
  }
  double v147 = v141 - v227;
  double v148 = 0.0;
  v383.origin.CGFloat x = v249;
  *(void *)&v383.origin.double y = v248;
  v383.size.CGFloat width = v253;
  v383.size.CGFloat height = v113;
  CGRect v384 = CGRectOffset(v383, v140, 0.0);
  CGFloat v208 = v384.origin.x;
  CGFloat v209 = v384.origin.y;
  CGFloat v210 = v384.size.height;
  CGFloat v211 = v384.size.width;
  uint64_t v149 = *(void *)(v142 + 16);
  double v150 = 0.0;
  uint64_t v151 = v205;
  if (v149)
  {
    double v152 = (unsigned __int8 *)(v142 + 32);
    do
    {
      int v153 = *v152++;
      if (v153 == 8) {
        double v150 = v150 + 35.0;
      }
      --v149;
    }
    while (v149);
  }
  double v233 = MinX + -12.0;
  double v231 = (v27 + -8.0) * 0.5 + v135;
  double v221 = v147 * 0.5;
  double v222 = v136 - v229;
  double v204 = ceil(v225);
  CGFloat v154 = v239;
  v385.origin.CGFloat x = v239;
  v385.origin.double y = v246;
  CGFloat v155 = v243;
  v385.size.CGFloat width = v244;
  v385.size.CGFloat height = v243;
  CGRect v386 = CGRectOffset(v385, v150, 0.0);
  CGFloat v201 = v386.origin.x;
  CGFloat v202 = v386.origin.y;
  double v207 = v386.size.width;
  CGFloat v203 = v386.size.height;
  uint64_t v156 = *(void *)(v142 + 16);
  CGFloat v157 = v234;
  if (v156)
  {
    CGFloat v158 = (unsigned __int8 *)(v142 + 32);
    double v148 = 0.0;
    do
    {
      int v159 = *v158++;
      if (v159 == 8) {
        double v148 = v148 + 35.0;
      }
      --v156;
    }
    while (v156);
  }
  uint64_t v218 = 0;
  v387.origin.CGFloat x = v234;
  v387.origin.double y = v135;
  v387.size.CGFloat width = v27;
  v387.size.CGFloat height = v27;
  CGRect v388 = CGRectOffset(v387, v148, 0.0);
  CGFloat v197 = v388.origin.x;
  CGFloat v198 = v388.origin.y;
  CGFloat v199 = v388.size.height;
  CGFloat v200 = v388.size.width;
  CGFloat v160 = v249;
  v388.origin.CGFloat x = v249;
  CGFloat v161 = *(double *)&v248;
  *(void *)&v388.origin.double y = v248;
  v388.size.CGFloat width = v253;
  v388.size.CGFloat height = v113;
  CGRect v389 = CGRectIntegral(v388);
  CGFloat MinX = v389.origin.y;
  CGFloat v253 = v389.origin.x;
  CGFloat v250 = v389.size.height;
  CGFloat v251 = v389.size.width;
  v389.origin.CGFloat x = v160;
  v389.origin.double y = v161;
  v389.size.CGFloat width = v247;
  v389.size.CGFloat height = v113;
  CGRect v390 = CGRectIntegral(v389);
  double v249 = v390.origin.x;
  double v247 = v390.size.width;
  *(CGFloat *)&long long v248 = v390.origin.y;
  CGFloat v245 = v390.size.height;
  v390.origin.CGFloat x = v154;
  v390.origin.double y = v246;
  v390.size.CGFloat width = v244;
  v390.size.CGFloat height = v155;
  CGRect v391 = CGRectIntegral(v390);
  double v246 = v391.origin.x;
  CGFloat v240 = v391.origin.y;
  double v244 = v391.size.width;
  CGFloat v237 = v391.size.height;
  v391.origin.CGFloat x = v154;
  v391.origin.double y = v241;
  v391.size.CGFloat width = v242;
  v391.size.CGFloat height = v155;
  CGRect v392 = CGRectIntegral(v391);
  double v242 = v392.size.width;
  double v243 = v392.origin.x;
  CGFloat v235 = v392.origin.y;
  CGFloat v232 = v392.size.height;
  v392.origin.CGFloat x = v157;
  v392.origin.double y = v135;
  v392.size.CGFloat width = v27;
  v392.size.CGFloat height = v27;
  CGRect v393 = CGRectIntegral(v392);
  double v241 = v393.origin.x;
  CGFloat v228 = v393.origin.y;
  CGFloat v239 = v393.size.width;
  CGFloat v230 = v393.size.height;
  v393.origin.CGFloat x = v157;
  v393.origin.double y = v135;
  v393.size.CGFloat width = v27;
  v393.size.CGFloat height = v27;
  CGFloat v238 = CGRectGetMinX(v393) + -1.0;
  v394.origin.CGFloat x = v157;
  v394.origin.double y = v135;
  v394.size.CGFloat width = v27;
  v394.size.CGFloat height = v27;
  CGFloat v236 = CGRectGetMinY(v394) + -1.0;
  v395.origin.CGFloat x = v157;
  v395.origin.double y = v135;
  v395.size.CGFloat width = v27;
  v395.size.CGFloat height = v27;
  CGFloat v226 = CGRectGetWidth(v395) + 2.0;
  v396.origin.CGFloat x = v157;
  v396.origin.double y = v135;
  v396.size.CGFloat width = v27;
  v396.size.CGFloat height = v27;
  CGFloat v224 = CGRectGetHeight(v396) + 2.0;
  v397.size.CGFloat width = 8.0;
  v397.size.CGFloat height = 8.0;
  v397.origin.CGFloat x = v233;
  v397.origin.double y = v231;
  CGRect v398 = CGRectIntegral(v397);
  double v233 = v398.origin.y;
  double v234 = v398.origin.x;
  double v231 = v398.size.width;
  CGFloat v223 = v398.size.height;
  v398.origin.double y = v221;
  v398.origin.CGFloat x = v222;
  v398.size.CGFloat width = v229;
  v398.size.CGFloat height = v227;
  CGRect v399 = CGRectIntegral(v398);
  double v229 = v399.origin.x;
  double v221 = v399.size.height;
  double v222 = v399.origin.y;
  double v227 = v399.size.width;
  v399.origin.double y = 0.0;
  v399.origin.CGFloat x = v216;
  v399.size.CGFloat width = v220;
  v399.size.CGFloat height = v225;
  CGRect v400 = CGRectIntegral(v399);
  CGFloat v162 = v400.origin.x;
  double v220 = v400.origin.y;
  double v225 = v400.size.width;
  CGFloat v196 = v400.size.height;
  v400.origin.double y = v214;
  v400.origin.CGFloat x = x;
  v400.size.CGFloat height = height;
  v400.size.CGFloat width = width;
  CGRect v401 = CGRectIntegral(v400);
  CGFloat v163 = v401.origin.x;
  CGFloat v195 = v401.origin.y;
  CGFloat v164 = v401.size.width;
  CGFloat v165 = v401.size.height;
  v401.origin.CGFloat x = v208;
  v401.origin.double y = v209;
  v401.size.CGFloat height = v210;
  v401.size.CGFloat width = v211;
  CGRect v402 = CGRectIntegral(v401);
  CGFloat v166 = v402.origin.x;
  CGFloat v193 = v402.size.height;
  CGFloat v194 = v402.origin.y;
  CGFloat v167 = v402.size.width;
  v402.origin.CGFloat x = v201;
  v402.origin.double y = v202;
  v402.size.CGFloat width = v207;
  v402.size.CGFloat height = v203;
  CGRect v403 = CGRectIntegral(v402);
  CGFloat v168 = v403.origin.x;
  CGFloat v202 = v403.size.height;
  CGFloat v203 = v403.origin.y;
  CGFloat v169 = v403.size.width;
  v403.origin.CGFloat x = v197;
  v403.origin.double y = v198;
  v403.size.CGFloat height = v199;
  v403.size.CGFloat width = v200;
  CGRect v404 = CGRectIntegral(v403);
  char v170 = LOBYTE(v254);
  char v35 = LOBYTE(v254) & 1;
  v263[1] = 0;
  v263[0] = 0;
  *(double *)&v263[2] = v259;
  *(double *)&v263[3] = v204;
  *(CGFloat *)&v263[4] = v253;
  *(CGFloat *)&v263[5] = MinX;
  *(CGFloat *)&v263[6] = v251;
  *(CGFloat *)&v263[7] = v250;
  *(double *)&v263[8] = v249;
  v263[9] = v248;
  *(double *)&v263[10] = v247;
  *(CGFloat *)&v263[11] = v245;
  v263[12] = v32;
  v263[13] = v33;
  float v264 = v219;
  int v265 = v256;
  double v266 = v246;
  CGFloat v267 = v240;
  double v268 = v244;
  CGFloat v269 = v237;
  double v270 = v243;
  CGFloat v271 = v235;
  double v272 = v242;
  CGFloat v273 = v232;
  double v274 = v241;
  CGFloat v275 = v228;
  CGFloat v276 = v239;
  CGFloat v277 = v230;
  CGFloat v278 = v238;
  CGFloat v279 = v236;
  CGFloat v280 = v226;
  CGFloat v281 = v224;
  double v282 = v234;
  double v283 = v233;
  double v284 = v231;
  CGFloat v285 = v223;
  double v286 = v229;
  double v287 = v222;
  double v288 = v227;
  double v289 = v221;
  CGFloat v254 = v162;
  CGFloat v290 = v162;
  double v291 = v220;
  double v292 = v225;
  CGFloat v37 = v196;
  CGFloat v293 = v196;
  CGFloat v216 = v164;
  CGFloat v217 = v163;
  CGFloat v294 = v163;
  CGFloat v38 = v195;
  CGFloat v295 = v195;
  CGFloat v296 = v164;
  CGFloat v214 = v166;
  CGFloat x = v165;
  CGFloat v297 = v165;
  CGFloat v298 = v166;
  CGFloat v39 = v194;
  CGFloat v299 = v194;
  CGFloat height = v168;
  CGFloat width = v167;
  CGFloat v300 = v167;
  CGFloat v40 = v193;
  CGFloat v301 = v193;
  CGFloat v302 = v168;
  CGFloat v41 = v203;
  CGFloat v303 = v203;
  CGFloat v210 = v404.origin.x;
  CGFloat v211 = v169;
  CGFloat v304 = v169;
  CGFloat v42 = v202;
  CGFloat v305 = v202;
  CGRect v306 = v404;
  CGFloat v208 = v404.size.width;
  CGFloat v209 = v404.origin.y;
  double v207 = v404.size.height;
  uint64_t v307 = v34;
  double v308 = v204;
  double v43 = v204;
  char v309 = v170 & 1;
  char v310 = v36;
  nullsub_1(v263);
  sub_1DEB9BE28((uint64_t)v263, (uint64_t)&v262, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  uint64_t v260 = v206;
  uint64_t v261 = v151;
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();
  swift_release();

  id v258 = 0;
  double v31 = v43;
LABEL_83:
  sub_1DEB9C058((uint64_t)v257, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
  id v171 = v258;
  *(void *)a4 = v218;
  *(void *)(a4 + 8) = v171;
  *(double *)(a4 + 16) = v259;
  *(double *)(a4 + 24) = v31;
  CGFloat v172 = MinX;
  *(CGFloat *)(a4 + 32) = v253;
  *(CGFloat *)(a4 + 40) = v172;
  CGFloat v173 = v250;
  *(CGFloat *)(a4 + 48) = v251;
  *(CGFloat *)(a4 + 56) = v173;
  uint64_t v174 = v248;
  *(double *)(a4 + 64) = v249;
  *(void *)(a4 + 72) = v174;
  CGFloat v175 = v245;
  *(double *)(a4 + 80) = v247;
  *(CGFloat *)(a4 + 88) = v175;
  LODWORD(v175) = v256;
  *(float *)(a4 + 112) = v219;
  *(_DWORD *)(a4 + 116) = LODWORD(v175);
  CGFloat v176 = v240;
  *(double *)(a4 + 120) = v246;
  *(CGFloat *)(a4 + 128) = v176;
  CGFloat v177 = v237;
  *(double *)(a4 + 136) = v244;
  *(CGFloat *)(a4 + 144) = v177;
  CGFloat v178 = v235;
  *(double *)(a4 + 152) = v243;
  *(CGFloat *)(a4 + 160) = v178;
  CGFloat v179 = v232;
  *(double *)(a4 + 168) = v242;
  *(CGFloat *)(a4 + 176) = v179;
  CGFloat v180 = v228;
  *(double *)(a4 + 184) = v241;
  *(CGFloat *)(a4 + 192) = v180;
  CGFloat v181 = v230;
  *(CGFloat *)(a4 + 200) = v239;
  *(CGFloat *)(a4 + 208) = v181;
  CGFloat v182 = v236;
  *(CGFloat *)(a4 + 216) = v238;
  *(CGFloat *)(a4 + 224) = v182;
  *(void *)(a4 + 96) = v32;
  *(void *)(a4 + 104) = v33;
  CGFloat v183 = v224;
  *(CGFloat *)(a4 + 232) = v226;
  *(CGFloat *)(a4 + 240) = v183;
  double v184 = v233;
  *(double *)(a4 + 248) = v234;
  *(double *)(a4 + 256) = v184;
  CGFloat v185 = v223;
  *(double *)(a4 + 264) = v231;
  *(CGFloat *)(a4 + 272) = v185;
  double v186 = v222;
  *(double *)(a4 + 280) = v229;
  *(double *)(a4 + 288) = v186;
  double v187 = v221;
  *(double *)(a4 + 296) = v227;
  *(double *)(a4 + 304) = v187;
  double v188 = v220;
  *(CGFloat *)(a4 + 312) = v254;
  *(double *)(a4 + 320) = v188;
  *(double *)(a4 + 328) = v225;
  *(CGFloat *)(a4 + 336) = v37;
  *(CGFloat *)(a4 + 344) = v217;
  *(CGFloat *)(a4 + 352) = v38;
  CGFloat v189 = x;
  *(CGFloat *)(a4 + 360) = v216;
  *(CGFloat *)(a4 + 368) = v189;
  *(CGFloat *)(a4 + 376) = v214;
  *(CGFloat *)(a4 + 384) = v39;
  *(CGFloat *)(a4 + 392) = width;
  *(CGFloat *)(a4 + 400) = v40;
  *(CGFloat *)(a4 + 408) = height;
  *(CGFloat *)(a4 + 416) = v41;
  *(CGFloat *)(a4 + 424) = v211;
  *(CGFloat *)(a4 + 432) = v42;
  CGFloat v190 = v209;
  *(CGFloat *)(a4 + 440) = v210;
  *(CGFloat *)(a4 + 448) = v190;
  double result = v207;
  *(CGFloat *)(a4 + 456) = v208;
  *(double *)(a4 + 464) = result;
  *(void *)(a4 + 472) = v34;
  *(double *)(a4 + 480) = v43;
  *(unsigned char *)(a4 + 488) = v35;
  *(unsigned char *)(a4 + 489) = v36;
  return result;
}

double sub_1DEB988C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (void *)(a3 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  LODWORD(v9) = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  swift_retain();
  id v10 = sub_1DF733364((char)v9);
  uint64_t v11 = *(void **)(*__swift_project_boxed_opaque_existential_1(v8, *(void *)(a3 + 40)) + 24);
  id v12 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  id v13 = objc_msgSend(v11, sel_scaledFontForFont_, v12);

  id v14 = (void *)sub_1DFDF2AF0();
  id v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

  char v257 = sub_1DFDFF0C0();
  *(void *)&long long v312 = 0;
  *((void *)&v312 + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  long long v375 = v312;
  double v16 = *(double *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v259 = v10;
  objc_msgSend(v10, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  id v212 = v13;
  objc_msgSend(v13, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  char v17 = *(unsigned char *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  *(void *)&long long v312 = 0;
  *((void *)&v312 + 1) = 0xE000000000000000;
  v311[0] = v17;
  sub_1DFDFFB10();
  sub_1DFDFDE90();
  id v19 = objc_msgSend(*(id *)(v18 + 16), sel_identifier);
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DF67424C();
  if (v20) {
    swift_bridgeObjectRelease();
  }
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  LOWORD(v313) = 256;
  sub_1DFDFFB10();
  long long v312 = v375;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v263, (uint64_t)v311, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v311, (uint64_t)&v312, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v312) != 1)
  {
    swift_release();
    swift_bridgeObjectRelease();

    long long v25 = v312;
    double v261 = v313;
    double v26 = v314;
    CGFloat v27 = v315;
    CGFloat v28 = v316;
    CGFloat v29 = v317;
    CGFloat v30 = v318;
    CGFloat v31 = v319;
    CGFloat v32 = v320;
    CGFloat v33 = v321;
    CGFloat v34 = v322;
    uint64_t v35 = v323;
    uint64_t v36 = v324;
    float v37 = v325;
    float v38 = v326;
    CGFloat v39 = v327;
    CGFloat v40 = v328;
    CGFloat v41 = v329;
    CGFloat v42 = v330;
    CGFloat v43 = v331;
    CGFloat v44 = v332;
    CGFloat v45 = v333;
    CGFloat v46 = v334;
    CGFloat v47 = v335;
    CGFloat v48 = v336;
    CGFloat v49 = v337;
    CGFloat v50 = v338;
    CGFloat v51 = v339;
    double v255 = v340;
    CGFloat v52 = v341;
    double v245 = v342;
    CGFloat v253 = v343;
    CGFloat v241 = v344;
    uint64_t v53 = v371;
    char v54 = v373;
    LOBYTE(v9) = v374;
    CGFloat v251 = v345;
    CGFloat v237 = v346;
    CGFloat v248 = v347;
    CGFloat v227 = v348;
    CGFloat v232 = v349;
    CGFloat rect = v350;
    CGFloat v222 = v351;
    CGFloat v239 = v352;
    CGFloat v220 = v353;
    CGFloat v234 = v354;
    CGFloat v218 = v355;
    CGFloat v229 = v356;
    CGFloat v215 = v357;
    CGFloat v225 = v358;
    CGFloat v213 = v359;
    CGFloat v260 = v360;
    CGFloat v55 = v361;
    CGFloat v258 = v362;
    CGFloat v56 = v363;
    CGFloat v210 = v364;
    CGFloat v57 = v365;
    CGFloat v208 = v366;
    CGFloat v206 = v367;
    CGFloat v204 = v368;
    double v202 = v369;
    CGFloat v58 = v370;
    double v59 = v372;
    goto LABEL_80;
  }
  if ((v9 & 1) == 0)
  {
    uint64_t v60 = 56;
    if (v257) {
      uint64_t v60 = 64;
    }
    double v21 = *(double *)(a2 + v60);
    double v23 = *(double *)(a2 + 48) - (v21 + v21);
    double v22 = 10.0;
    if (v257)
    {
      double v22 = 12.0;
      double v24 = 4.0;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  double v21 = *(double *)(a2 + 56);
  double v22 = 6.0;
  double v23 = 16.0;
  double v24 = 4.0;
  if ((v257 & 1) == 0) {
LABEL_12:
  }
    double v24 = 1.0;
LABEL_13:
  double v61 = *(double *)(a2 + 24);
  double v62 = *(double *)(a2 + 40);
  double v63 = sub_1DEDE98D0(a2);
  uint64_t v53 = *(void *)(a2 + 72);
  uint64_t v64 = *(void *)(v53 + 16);
  uint64_t v65 = *(void *)(v64 + 16);
  if (v65)
  {
    uint64_t v66 = 0;
    double v67 = (unsigned __int8 *)(v64 + 32);
    double v68 = 0.0;
    uint64_t v69 = *(void *)(v64 + 16);
    while (1)
    {
      int v70 = *v67++;
      switch(v70)
      {
        case 1:
        case 4:
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72) {
            goto LABEL_82;
          }
          double v68 = v68 + *(double *)(v53 + 32);
          goto LABEL_16;
        case 3:
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72) {
            goto LABEL_83;
          }
          double v68 = v68 + *(double *)(v53 + 64);
          goto LABEL_16;
        case 5:
          double v68 = v68 + 11.0;
          goto LABEL_16;
        case 6:
        case 7:
        case 8:
          goto LABEL_16;
        default:
          if (*(unsigned char *)(v53 + 24)) {
            uint64_t v71 = 48;
          }
          else {
            uint64_t v71 = 32;
          }
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72)
          {
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          double v68 = v68 + *(double *)(v53 + v71);
LABEL_16:
          if (!--v69) {
            goto LABEL_28;
          }
          break;
      }
    }
  }
  uint64_t v66 = 0;
  double v68 = 0.0;
LABEL_28:
  BOOL v72 = __OFSUB__(v66, 1);
  uint64_t v73 = v66 - 1;
  if (v72)
  {
LABEL_84:
    __break(1u);
    JUMPOUT(0x1DEB99D40);
  }
  double v74 = v62 + 8.0;
  double v75 = v61 + 8.0;
  double v223 = v74;
  double v76 = v61 + 8.0 + v74;
  uint64_t v77 = v73 & ~(v73 >> 63);
  double v78 = 20.0;
  if (v9) {
    double v78 = 10.0;
  }
  double v240 = v68 + v78 * (double)v77;
  double v79 = v16 - v76 - v23 - v22 - v240;
  double v80 = sub_1DF00C07C();
  if (v65)
  {
    double v81 = (unsigned __int8 *)(v64 + 32);
    double v82 = 0.0;
    do
    {
      int v83 = *v81++;
      if (v83 == 8) {
        double v82 = v82 + 35.0;
      }
      --v65;
    }
    while (v65);
  }
  else
  {
    double v82 = 0.0;
  }
  double v233 = v79 - v80 - v82 - v63;
  double v256 = v23 + v22 + v75;
  uint64_t v84 = sub_1DF67424C();
  double v261 = v16;
  double v235 = v63;
  CGFloat v238 = v75;
  CGFloat recta = v79;
  if (!v85) {
    goto LABEL_55;
  }
  uint64_t v86 = HIBYTE(v85) & 0xF;
  if ((v85 & 0x2000000000000000) == 0) {
    uint64_t v86 = v84 & 0xFFFFFFFFFFFFLL;
  }
  if (!v86 || (*(unsigned char *)(a2 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_55:
    float v130 = 0.1;
    float v201 = 0.0;
    if ((v257 & 1) == 0) {
      float v130 = 0.0;
    }
    float v200 = v130;
    if (v257) {
      uint64_t v35 = 3;
    }
    else {
      uint64_t v35 = 2;
    }
    id v131 = objc_msgSend(*(id *)(v18 + 16), sel_displayName);
    sub_1DFDFDD20();

    sub_1DEA66C20();
    uint64_t v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = xmmword_1DFE0B250;
    double v133 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v132 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v132 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v132 + 40) = v259;
    id v134 = v259;
    id v135 = v133;
    sub_1DEA65870(v132);
    id v136 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    CGFloat v137 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    CGFloat v138 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v139 = objc_msgSend(v136, sel_initWithString_attributes_, v137, v138);

    sub_1DFDFEF60();
    double v141 = v140;

    uint64_t v36 = 0;
    double v126 = ceil(v141);
    if (*(double *)(a2 + 48) > v21 + v21 + v126) {
      double v128 = *(double *)(a2 + 48);
    }
    else {
      double v128 = v21 + v21 + v126;
    }
    double v254 = (v128 - v126) * 0.5;
    CGFloat v228 = 0.0;
    double v231 = v128 * 0.5;
    double v242 = 0.0;
    CGFloat v247 = 0.0;
    CGFloat v250 = 0.0;
    double v226 = 0.0;
    double v252 = 0.0;
    goto LABEL_64;
  }
  objc_msgSend(v212, sel_lineHeight);
  double v88 = v87;
  sub_1DEA66C20();
  uint64_t v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = xmmword_1DFE0B250;
  char v90 = (char)v9;
  uint64_t v9 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(v89 + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v249 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
  *(void *)(v89 + 64) = v249;
  *(void *)(v89 + 40) = v212;
  id v91 = v9;
  LOBYTE(v9) = v90;
  id v246 = v91;
  id v92 = v212;
  sub_1DEA65870(v89);
  id v93 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  CGFloat v94 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
  double v95 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v96 = objc_msgSend(v93, sel_initWithString_attributes_, v94, v95);

  float v97 = 0.1;
  uint64_t v98 = 3;
  if ((v257 & 1) == 0) {
    uint64_t v98 = 1;
  }
  uint64_t v216 = v98;
  if ((v257 & 1) == 0) {
    float v97 = 0.0;
  }
  float v201 = v97;
  if (v257) {
    uint64_t v99 = 3;
  }
  else {
    uint64_t v99 = 2;
  }
  objc_msgSend(v96, sel_boundingRectWithSize_options_context_, v99, 0, v79, v88 * (double)v98);
  CGFloat v101 = v100;
  double v230 = v21;
  double v102 = v24;
  CGFloat v103 = v79;
  CGFloat v105 = v104;
  CGFloat v107 = v106;
  CGFloat v109 = v108;

  v376.origin.CGFloat x = v101;
  v376.origin.CGFloat y = v105;
  v376.size.CGFloat width = v107;
  v376.size.CGFloat height = v109;
  double v242 = ceil(CGRectGetHeight(v376));
  objc_msgSend(v259, sel_lineHeight);
  id v110 = objc_msgSend(*(id *)(v18 + 16), sel_displayName);
  sub_1DFDFDD20();

  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_1DFE0B250;
  *(void *)(v111 + 64) = v249;
  *(void *)(v111 + 32) = v246;
  *(void *)(v111 + 40) = v259;
  id v112 = v259;
  id v113 = v246;
  sub_1DEA65870(v111);
  id v114 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  double v115 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  double v116 = (void *)sub_1DFDFDAE0();
  swift_bridgeObjectRelease();
  id v117 = objc_msgSend(v114, sel_initWithString_attributes_, v115, v116);

  uint64_t v36 = v216;
  sub_1DFDFEF40();
  CGFloat v119 = v118;
  CGFloat v121 = v120;
  CGFloat v123 = v122;
  CGFloat v125 = v124;

  v377.origin.CGFloat x = v119;
  v377.origin.CGFloat y = v121;
  v377.size.CGFloat width = v123;
  double v75 = v238;
  v377.size.CGFloat height = v125;
  double v126 = ceil(CGRectGetHeight(v377));
  double v127 = v242 + v102 + v126;
  if (*(double *)(a2 + 48) > v230 + v230 + v127) {
    double v128 = *(double *)(a2 + 48);
  }
  else {
    double v128 = v230 + v230 + v127;
  }
  double v231 = v128 * 0.5;
  v378.origin.CGFloat x = v256;
  v378.origin.CGFloat y = v128 * 0.5 - v127 * 0.5;
  CGFloat y = v378.origin.y;
  v378.size.CGFloat width = v103;
  v378.size.CGFloat height = v126;
  double v252 = v102 + CGRectGetMaxY(v378);
  v379.origin.CGFloat x = v256;
  double v254 = y;
  v379.origin.CGFloat y = y;
  v379.size.CGFloat width = v103;
  v379.size.CGFloat height = v126;
  float v200 = v201;
  uint64_t v35 = v216;
  double v226 = v102 + CGRectGetMaxY(v379);
  CGFloat v228 = v233;
  CGFloat v247 = v103;
  CGFloat v250 = v256;
LABEL_64:
  CGFloat v142 = v128;
  double v143 = ceil((v128 - v23) * 0.5);
  v380.origin.CGFloat x = v75;
  v380.origin.CGFloat y = v143;
  v380.size.CGFloat width = v23;
  v380.size.CGFloat height = v23;
  double MinX = CGRectGetMinX(v380);
  double v221 = v261 - v223;
  CGFloat v144 = -sub_1DF00C07C() - v235;
  double v145 = 0.0;
  v381.origin.CGFloat y = 0.0;
  double v224 = v261 - v223 - v240;
  v381.origin.CGFloat x = v224;
  v381.size.CGFloat width = v240;
  double v236 = v142;
  v381.size.CGFloat height = v142;
  CGRect v382 = CGRectOffset(v381, v144, 0.0);
  CGFloat v217 = v382.origin.y;
  CGFloat x = v382.origin.x;
  CGFloat width = v382.size.width;
  CGFloat height = v382.size.height;
  uint64_t v146 = *(void *)(v53 + 16);
  uint64_t v147 = *(void *)(v146 + 16);
  if (v147)
  {
    double v148 = (unsigned __int8 *)(v146 + 32);
    do
    {
      int v149 = *v148++;
      if (v149 == 8) {
        double v145 = v145 + 35.0;
      }
      --v147;
    }
    while (v147);
  }
  double v150 = 0.0;
  v383.origin.CGFloat y = v254;
  v383.origin.CGFloat x = v256;
  v383.size.CGFloat width = recta;
  v383.size.CGFloat height = v126;
  CGRect v384 = CGRectOffset(v383, v145, 0.0);
  CGFloat v203 = v384.origin.x;
  CGFloat v205 = v384.origin.y;
  CGFloat v207 = v384.size.height;
  CGFloat v209 = v384.size.width;
  uint64_t v151 = *(void *)(v146 + 16);
  double v152 = 0.0;
  if (v151)
  {
    int v153 = (unsigned __int8 *)(v146 + 32);
    do
    {
      int v154 = *v153++;
      if (v154 == 8) {
        double v152 = v152 + 35.0;
      }
      --v151;
    }
    while (v151);
  }
  double v168 = MinX + -12.0;
  double v180 = ceil(v236);
  v385.origin.CGFloat x = v250;
  v385.origin.CGFloat y = v252;
  v385.size.CGFloat width = v247;
  v385.size.CGFloat height = v242;
  CGRect v386 = CGRectOffset(v385, v152, 0.0);
  CGFloat v174 = v386.origin.x;
  CGFloat v175 = v386.origin.y;
  CGFloat v176 = v386.size.height;
  CGFloat v178 = v386.size.width;
  uint64_t v155 = *(void *)(v146 + 16);
  if (v155)
  {
    uint64_t v156 = (unsigned __int8 *)(v146 + 32);
    double v150 = 0.0;
    do
    {
      int v157 = *v156++;
      if (v157 == 8) {
        double v150 = v150 + 35.0;
      }
      --v155;
    }
    while (v155);
  }
  v387.origin.CGFloat x = v238;
  v387.origin.CGFloat y = v143;
  v387.size.CGFloat width = v23;
  v387.size.CGFloat height = v23;
  CGRect v388 = CGRectOffset(v387, v150, 0.0);
  CGFloat v170 = v388.origin.x;
  CGFloat v171 = v388.origin.y;
  CGFloat v172 = v388.size.height;
  CGFloat v173 = v388.size.width;
  v388.origin.CGFloat x = v256;
  v388.origin.CGFloat y = v254;
  v388.size.CGFloat width = recta;
  v388.size.CGFloat height = v126;
  CGRect v389 = CGRectIntegral(v388);
  CGFloat v195 = v389.origin.x;
  CGFloat v196 = v389.size.height;
  CGFloat v197 = v389.size.width;
  CGFloat v199 = v389.origin.y;
  v389.origin.CGFloat x = v256;
  v389.origin.CGFloat y = v254;
  v389.size.CGFloat width = v233;
  v389.size.CGFloat height = v126;
  CGRect v390 = CGRectIntegral(v389);
  CGFloat v158 = v390.origin.x;
  CGFloat v164 = v390.origin.x;
  CGFloat v193 = v390.size.width;
  CGFloat v194 = v390.origin.y;
  CGFloat v192 = v390.size.height;
  v390.origin.CGFloat y = v252;
  v390.origin.CGFloat x = v250;
  v390.size.CGFloat width = v247;
  v390.size.CGFloat height = v242;
  CGRect v391 = CGRectIntegral(v390);
  CGFloat v190 = v391.origin.y;
  CGFloat v191 = v391.origin.x;
  CGFloat v188 = v391.size.height;
  CGFloat v189 = v391.size.width;
  v391.origin.CGFloat x = v250;
  v391.origin.CGFloat y = v226;
  v391.size.CGFloat width = v228;
  v391.size.CGFloat height = v242;
  CGRect v392 = CGRectIntegral(v391);
  CGFloat v187 = v392.origin.x;
  CGFloat v184 = v392.size.width;
  CGFloat v185 = v392.origin.y;
  CGFloat v183 = v392.size.height;
  v392.origin.CGFloat x = v238;
  v392.origin.CGFloat y = v143;
  v392.size.CGFloat width = v23;
  v392.size.CGFloat height = v23;
  CGRect v393 = CGRectIntegral(v392);
  CGFloat v166 = v393.origin.y;
  CGFloat v167 = v393.origin.x;
  CGFloat v165 = v393.size.width;
  CGFloat v186 = v393.size.height;
  v393.origin.CGFloat x = v238;
  v393.origin.CGFloat y = v143;
  v393.size.CGFloat width = v23;
  v393.size.CGFloat height = v23;
  CGFloat v182 = CGRectGetMinX(v393) + -1.0;
  v394.origin.CGFloat x = v238;
  v394.origin.CGFloat y = v143;
  v394.size.CGFloat width = v23;
  v394.size.CGFloat height = v23;
  double v255 = CGRectGetMinY(v394) + -1.0;
  v395.origin.CGFloat x = v238;
  v395.origin.CGFloat y = v143;
  v395.size.CGFloat width = v23;
  v395.size.CGFloat height = v23;
  CGFloat v181 = CGRectGetWidth(v395) + 2.0;
  v396.origin.CGFloat x = v238;
  v396.origin.CGFloat y = v143;
  v396.size.CGFloat width = v23;
  v396.size.CGFloat height = v23;
  double v245 = CGRectGetHeight(v396) + 2.0;
  v397.size.CGFloat width = 8.0;
  v397.size.CGFloat height = 8.0;
  v397.origin.CGFloat y = (v23 + -8.0) * 0.5 + v143;
  v397.origin.CGFloat x = v168;
  CGRect v398 = CGRectIntegral(v397);
  CGFloat v253 = v398.origin.x;
  CGFloat v241 = v398.origin.y;
  CGFloat v251 = v398.size.width;
  CGFloat v237 = v398.size.height;
  v398.size.CGFloat width = 0.0;
  v398.size.CGFloat height = 0.0;
  v398.origin.CGFloat x = v221;
  v398.origin.CGFloat y = v231;
  CGRect v399 = CGRectIntegral(v398);
  CGFloat v248 = v399.origin.x;
  CGFloat v227 = v399.origin.y;
  CGFloat v232 = v399.size.width;
  CGFloat rect = v399.size.height;
  v399.origin.CGFloat y = 0.0;
  v399.origin.CGFloat x = v224;
  v399.size.CGFloat width = v240;
  v399.size.CGFloat height = v236;
  CGRect v400 = CGRectIntegral(v399);
  CGFloat v220 = v400.size.width;
  CGFloat v222 = v400.origin.x;
  CGFloat v239 = v400.origin.y;
  CGFloat v234 = v400.size.height;
  v400.origin.CGFloat y = v217;
  v400.origin.CGFloat x = x;
  v400.size.CGFloat width = width;
  v400.size.CGFloat height = height;
  CGRect v401 = CGRectIntegral(v400);
  CGFloat v215 = v401.size.width;
  CGFloat v218 = v401.origin.x;
  CGFloat v229 = v401.origin.y;
  CGFloat v225 = v401.size.height;
  v401.origin.CGFloat x = v203;
  v401.origin.CGFloat y = v205;
  v401.size.CGFloat height = v207;
  v401.size.CGFloat width = v209;
  CGRect v402 = CGRectIntegral(v401);
  CGFloat v213 = v402.origin.x;
  CGFloat v159 = v402.origin.y;
  CGFloat v169 = v402.size.width;
  CGFloat v160 = v402.size.height;
  v402.origin.CGFloat x = v174;
  v402.origin.CGFloat y = v175;
  v402.size.CGFloat height = v176;
  v402.size.CGFloat width = v178;
  CGRect v403 = CGRectIntegral(v402);
  CGFloat v177 = v403.size.width;
  CGFloat v179 = v403.origin.x;
  CGFloat v161 = v403.origin.y;
  CGFloat v162 = v403.size.height;
  v403.origin.CGFloat x = v170;
  v403.origin.CGFloat y = v171;
  v403.size.CGFloat height = v172;
  v403.size.CGFloat width = v173;
  CGRect v404 = CGRectIntegral(v403);
  char v54 = v257 & 1;
  v263[1] = 0;
  v263[0] = 0;
  *(double *)&v263[2] = v261;
  *(double *)&v263[3] = v180;
  *(CGFloat *)&v263[4] = v195;
  *(CGFloat *)&v263[5] = v199;
  *(CGFloat *)&v263[6] = v197;
  *(CGFloat *)&v263[7] = v196;
  *(CGFloat *)&v263[8] = v158;
  *(CGFloat *)&v263[9] = v194;
  *(CGFloat *)&v263[10] = v193;
  *(CGFloat *)&v263[11] = v192;
  v263[12] = v35;
  v263[13] = v36;
  float v264 = v200;
  float v265 = v201;
  CGFloat v266 = v191;
  CGFloat v267 = v190;
  CGFloat v268 = v189;
  CGFloat v269 = v188;
  CGFloat v270 = v187;
  CGFloat v271 = v185;
  CGFloat v272 = v184;
  CGFloat v273 = v183;
  CGFloat v274 = v167;
  CGFloat v275 = v166;
  CGFloat v49 = v165;
  CGFloat v276 = v165;
  CGFloat v277 = v186;
  CGFloat v278 = v182;
  double v279 = v255;
  CGFloat v280 = v181;
  double v281 = v245;
  CGFloat v282 = v253;
  CGFloat v283 = v241;
  CGFloat v284 = v251;
  CGFloat v285 = v237;
  CGFloat v286 = v248;
  CGFloat v287 = v227;
  CGFloat v288 = v232;
  CGFloat v289 = rect;
  CGFloat v290 = v222;
  CGFloat v291 = v239;
  CGFloat v292 = v220;
  CGFloat v293 = v234;
  CGFloat v294 = v218;
  CGFloat v295 = v229;
  CGFloat v296 = v215;
  CGFloat v297 = v225;
  CGFloat v298 = v213;
  CGFloat v260 = v159;
  CGFloat v299 = v159;
  CGFloat v55 = v169;
  CGFloat v300 = v169;
  CGFloat v258 = v160;
  CGFloat v301 = v160;
  CGFloat v56 = v179;
  CGFloat v302 = v179;
  CGFloat v208 = v162;
  CGFloat v210 = v161;
  CGFloat v303 = v161;
  CGFloat v57 = v177;
  CGFloat v304 = v177;
  CGFloat v305 = v162;
  CGFloat v204 = v404.origin.y;
  CGFloat v206 = v404.origin.x;
  CGRect v306 = v404;
  double v202 = v404.size.width;
  CGFloat v58 = v404.size.height;
  uint64_t v307 = v53;
  double v308 = v180;
  char v309 = v54;
  char v310 = (char)v9;
  nullsub_1(v263);
  sub_1DEB9BE28((uint64_t)v263, (uint64_t)v262, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();
  swift_release();
  swift_release();

  CGFloat v48 = v166;
  CGFloat v47 = v167;
  CGFloat v46 = v183;
  CGFloat v45 = v184;
  CGFloat v43 = v187;
  CGFloat v42 = v188;
  CGFloat v41 = v189;
  CGFloat v40 = v190;
  CGFloat v39 = v191;
  CGFloat v34 = v192;
  CGFloat v33 = v193;
  CGFloat v32 = v194;
  CGFloat v31 = v164;
  CGFloat v30 = v196;
  CGFloat v29 = v197;
  CGFloat v28 = v199;
  CGFloat v27 = v195;
  double v26 = v180;
  CGFloat v44 = v185;
  CGFloat v50 = v186;
  float v37 = v200;
  CGFloat v52 = v181;
  CGFloat v51 = v182;
  float v38 = v201;
  long long v25 = 0uLL;
  double v59 = v180;
LABEL_80:
  *(_OWORD *)a4 = v25;
  *(double *)(a4 + 16) = v261;
  *(double *)(a4 + 24) = v26;
  *(CGFloat *)(a4 + 32) = v27;
  *(CGFloat *)(a4 + 40) = v28;
  *(CGFloat *)(a4 + 48) = v29;
  *(CGFloat *)(a4 + 56) = v30;
  *(CGFloat *)(a4 + 64) = v31;
  *(CGFloat *)(a4 + 72) = v32;
  *(CGFloat *)(a4 + 80) = v33;
  *(CGFloat *)(a4 + 88) = v34;
  *(float *)(a4 + 112) = v37;
  *(float *)(a4 + 116) = v38;
  *(CGFloat *)(a4 + 120) = v39;
  *(CGFloat *)(a4 + 128) = v40;
  *(CGFloat *)(a4 + 136) = v41;
  *(CGFloat *)(a4 + 144) = v42;
  *(CGFloat *)(a4 + 152) = v43;
  *(CGFloat *)(a4 + 160) = v44;
  *(CGFloat *)(a4 + 168) = v45;
  *(CGFloat *)(a4 + 176) = v46;
  *(CGFloat *)(a4 + 184) = v47;
  *(CGFloat *)(a4 + 192) = v48;
  *(CGFloat *)(a4 + 200) = v49;
  *(CGFloat *)(a4 + 208) = v50;
  *(CGFloat *)(a4 + 216) = v51;
  *(double *)(a4 + 224) = v255;
  *(void *)(a4 + 96) = v35;
  *(void *)(a4 + 104) = v36;
  *(CGFloat *)(a4 + 232) = v52;
  *(double *)(a4 + 240) = v245;
  *(CGFloat *)(a4 + 248) = v253;
  *(CGFloat *)(a4 + 256) = v241;
  *(CGFloat *)(a4 + 264) = v251;
  *(CGFloat *)(a4 + 272) = v237;
  *(CGFloat *)(a4 + 280) = v248;
  *(CGFloat *)(a4 + 288) = v227;
  *(CGFloat *)(a4 + 296) = v232;
  *(CGFloat *)(a4 + 304) = rect;
  *(CGFloat *)(a4 + 312) = v222;
  *(CGFloat *)(a4 + 320) = v239;
  *(CGFloat *)(a4 + 328) = v220;
  *(CGFloat *)(a4 + 336) = v234;
  *(CGFloat *)(a4 + 344) = v218;
  *(CGFloat *)(a4 + 352) = v229;
  *(CGFloat *)(a4 + 360) = v215;
  *(CGFloat *)(a4 + 368) = v225;
  *(CGFloat *)(a4 + 376) = v213;
  *(CGFloat *)(a4 + 384) = v260;
  *(CGFloat *)(a4 + 392) = v55;
  *(CGFloat *)(a4 + 400) = v258;
  *(CGFloat *)(a4 + 408) = v56;
  *(CGFloat *)(a4 + 416) = v210;
  *(CGFloat *)(a4 + 424) = v57;
  *(CGFloat *)(a4 + 432) = v208;
  *(CGFloat *)(a4 + 440) = v206;
  *(CGFloat *)(a4 + 448) = v204;
  double result = v202;
  *(double *)(a4 + 456) = v202;
  *(CGFloat *)(a4 + 464) = v58;
  *(void *)(a4 + 472) = v53;
  *(double *)(a4 + 480) = v59;
  *(unsigned char *)(a4 + 488) = v54;
  *(unsigned char *)(a4 + 489) = (_BYTE)v9;
  return result;
}

uint64_t sub_1DEB99D64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1DEB99DCC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1DEB99E3C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DEB99E70(uint64_t a1)
{
  id v2 = *(void **)(a1 + 24);
  swift_bridgeObjectRelease();

  return a1;
}

double sub_1DEB99EA4(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FollowingAudioModel();
  uint64_t v20 = v4;
  double v21 = &off_1F3A80F28;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  sub_1DEB9BFF0(a1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FollowingAudioModel);
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(v19, v20);
  uint64_t v7 = *(int *)(v4 + 40);
  if (*((unsigned char *)boxed_opaque_existential_1 + v7 + 17) == 1)
  {
    double v8 = 0.0;
  }
  else
  {
    sub_1DF2F5600(*(void *)((char *)v6 + v7), *(void *)((char *)v6 + v7 + 8), *((unsigned __int8 *)v6 + v7 + 16) | (*((unsigned __int8 *)v6 + v7 + 17) << 8));
    sub_1DEA66C20();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
    id v10 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(inited + 40) = a2;
    id v11 = v10;
    id v12 = a2;
    sub_1DEA65870(inited);
    id v13 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v14 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    id v15 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

    sub_1DFDFF310();
    sub_1DFDFEF40();
    double v8 = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return v8;
}

double sub_1DEB9A0B8(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FollowingPuzzleHubModel();
  uint64_t v22 = v4;
  double v23 = &off_1F3AA8FA0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  sub_1DEB9BFF0(a1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FollowingPuzzleHubModel);
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(v21, v22);
  uint64_t v7 = *(int *)(v4 + 40);
  if (*(uint64_t *)((char *)boxed_opaque_existential_1 + v7))
  {
    uint64_t v8 = *(void *)((char *)v6 + v7);
    if (v8) {
      uint64_t v9 = *(void *)((char *)v6 + *(int *)(v4 + 36));
    }
    else {
      uint64_t v9 = 0;
    }
    sub_1DF2F5600(v8, v9, (v8 == 0) << 8);
    sub_1DEA66C20();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
    id v11 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(inited + 40) = a2;
    id v12 = v11;
    id v13 = a2;
    sub_1DEA65870(inited);
    id v14 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v15 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    id v16 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

    sub_1DFDFF310();
    sub_1DFDFEF40();
    double v19 = v18;
  }
  else
  {
    double v19 = 0.0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v19;
}

double sub_1DEB9A2D0(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FollowingMySportsModel();
  uint64_t v20 = v4;
  double v21 = &off_1F3A91098;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  sub_1DEB9BFF0(a1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FollowingMySportsModel);
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(v19, v20);
  uint64_t v7 = *(int *)(v4 + 40);
  if (*((unsigned char *)boxed_opaque_existential_1 + v7 + 17) == 1)
  {
    double v8 = 0.0;
  }
  else
  {
    sub_1DF2F5600(*(void *)((char *)v6 + v7), *(void *)((char *)v6 + v7 + 8), *((unsigned __int8 *)v6 + v7 + 16) | (*((unsigned __int8 *)v6 + v7 + 17) << 8));
    sub_1DEA66C20();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
    id v10 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(inited + 40) = a2;
    id v11 = v10;
    id v12 = a2;
    sub_1DEA65870(inited);
    id v13 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v14 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    id v15 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

    sub_1DFDFF310();
    sub_1DFDFEF40();
    double v8 = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return v8;
}

double sub_1DEB9A4E4(uint64_t a1, void *a2)
{
  v22[3] = &type metadata for FollowingSharedWithYouModel;
  v22[4] = &off_1F3AC4F30;
  uint64_t v4 = swift_allocObject();
  v22[0] = v4;
  uint64_t v5 = *(void *)a1;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v6;
  *(_DWORD *)(v4 + 48) = *(_DWORD *)(a1 + 32);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(v22, (uint64_t)&type metadata for FollowingSharedWithYouModel);
  if (v5)
  {
    uint64_t v8 = *v7;
    __int16 v9 = *v7 == 0;
    __int16 v10 = *v7 != 0;
    sub_1DEB99E3C(a1);
    sub_1DF2F5600(v8, 0, v10 | (v9 << 8));
    sub_1DEA66C20();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
    id v12 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(inited + 40) = a2;
    id v13 = v12;
    id v14 = a2;
    sub_1DEA65870(inited);
    id v15 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v16 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    double v17 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

    sub_1DFDFF310();
    sub_1DFDFEF40();
    double v20 = v19;
  }
  else
  {
    sub_1DEB99E3C(a1);
    double v20 = 0.0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v20;
}

double sub_1DEB9A6FC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void v25[3] = a3;
  v25[4] = a4;
  uint64_t v7 = swift_allocObject();
  v25[0] = v7;
  sub_1DEB9BE28((uint64_t)(a1 + 1), (uint64_t)v27, (unint64_t *)&qword_1EBABA650, MEMORY[0x1E4FBB1A0]);
  sub_1DEB99D64((uint64_t)(a1 + 3), (uint64_t)&v26, (uint64_t (*)(void))sub_1DEB9BEA8);
  uint64_t v8 = *a1;
  long long v9 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v9;
  *(unsigned char *)(v7 + 48) = *((unsigned char *)a1 + 32);
  __int16 v10 = __swift_project_boxed_opaque_existential_1(v25, a3);
  if (v8)
  {
    uint64_t v11 = *v10;
    __int16 v12 = *v10 == 0;
    __int16 v13 = *v10 != 0;
    sub_1DEB9BF10((uint64_t)v27);
    sub_1DEB9BF3C(&v26);
    sub_1DF2F5600(v11, 0, v13 | (v12 << 8));
    sub_1DEA66C20();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
    id v15 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(inited + 40) = a2;
    id v16 = v15;
    id v17 = a2;
    sub_1DEA65870(inited);
    id v18 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    double v19 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    double v20 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

    sub_1DFDFF310();
    sub_1DFDFEF40();
    double v23 = v22;
  }
  else
  {
    sub_1DEB9BF10((uint64_t)v27);
    sub_1DEB9BF3C(&v26);
    double v23 = 0.0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v23;
}

double sub_1DEB9A954@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = (void *)(a5 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(a5 + 16), *(void *)(a5 + 40));
  int v12 = *(unsigned __int8 *)(a4 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_context);
  swift_bridgeObjectRetain();
  id v214 = a3;
  id v13 = sub_1DF733364(v12);
  id v14 = *(void **)(*__swift_project_boxed_opaque_existential_1(v11, *(void *)(a5 + 40)) + 24);
  id v15 = objc_msgSend(self, sel_systemFontOfSize_weight_, 13.0, *MEMORY[0x1E4FB09D8]);
  id v16 = objc_msgSend(v14, sel_scaledFontForFont_, v15);

  id v17 = (void *)sub_1DFDF2AF0();
  id v18 = objc_msgSend(v17, sel_preferredContentSizeCategory);

  char v256 = sub_1DFDFF0C0();
  *(void *)&long long v309 = 0;
  *((void *)&v309 + 1) = 0xE000000000000000;
  sub_1DFDFF9B0();
  long long v372 = v309;
  double v19 = *(double *)(a4 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_width);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v13, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  objc_msgSend(v16, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  LOWORD(v310) = 256;
  sub_1DFDFFB10();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEB9BE28((uint64_t)v260, (uint64_t)v308, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  sub_1DEB9BE28((uint64_t)v308, (uint64_t)&v309, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  if (sub_1DEB9BFC0((uint64_t)&v309) != 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    long long v25 = v309;
    double v258 = v310;
    double v26 = v311;
    CGFloat v27 = v312;
    CGFloat v28 = v313;
    CGFloat v29 = v314;
    CGFloat v30 = v315;
    CGFloat v31 = v316;
    CGFloat v32 = v317;
    CGFloat v33 = v318;
    CGFloat v34 = v319;
    uint64_t v35 = v320;
    uint64_t v36 = v321;
    float v37 = v322;
    float v38 = v323;
    CGFloat v39 = v324;
    CGFloat v40 = v325;
    CGFloat v41 = v326;
    CGFloat v42 = v327;
    CGFloat v43 = v328;
    CGFloat v44 = v329;
    CGFloat v45 = v330;
    CGFloat v46 = v331;
    CGFloat v47 = v332;
    CGFloat v48 = v333;
    CGFloat v49 = v334;
    CGFloat v50 = v335;
    CGFloat v51 = v336;
    double v254 = v337;
    CGFloat v52 = v338;
    double v242 = v339;
    CGFloat v251 = v340;
    CGFloat v238 = v341;
    uint64_t v53 = v368;
    char v54 = v370;
    char v55 = v371;
    CGFloat v248 = v342;
    CGFloat v233 = v343;
    CGFloat v246 = v344;
    CGFloat v229 = v345;
    CGFloat rect = v346;
    CGFloat v224 = v347;
    CGFloat v240 = v348;
    CGFloat v222 = v349;
    CGFloat v236 = v350;
    CGFloat v219 = v351;
    CGFloat v231 = v352;
    CGFloat v217 = v353;
    CGFloat v227 = v354;
    CGFloat v215 = v355;
    CGFloat v257 = v356;
    CGFloat v56 = v357;
    CGFloat v213 = v358;
    CGFloat v57 = v359;
    CGFloat v211 = v360;
    CGFloat v58 = v361;
    CGFloat v209 = v362;
    CGFloat v207 = v363;
    CGFloat v205 = v364;
    CGFloat v203 = v365;
    CGFloat v201 = v366;
    double v198 = v367;
    double v59 = v369;
    goto LABEL_80;
  }
  id v250 = v13;
  int v195 = v12;
  id v174 = v16;
  if (v12)
  {
    double v20 = *(double *)(a4 + 56);
    double v21 = 6.0;
    double v22 = 16.0;
    double v23 = 4.0;
    unint64_t v24 = a2;
    if (v256) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v60 = 56;
  if (v256) {
    uint64_t v60 = 64;
  }
  double v20 = *(double *)(a4 + v60);
  double v22 = *(double *)(a4 + 48) - (v20 + v20);
  double v21 = 10.0;
  unint64_t v24 = a2;
  if ((v256 & 1) == 0)
  {
LABEL_10:
    double v23 = 1.0;
    goto LABEL_11;
  }
  double v21 = 12.0;
  double v23 = 4.0;
LABEL_11:
  double v61 = *(double *)(a4 + 24);
  double v62 = *(double *)(a4 + 40);
  double v63 = sub_1DEDE98D0(a4);
  uint64_t v53 = *(void *)(a4 + 72);
  uint64_t v64 = *(void *)(v53 + 16);
  uint64_t v65 = *(void *)(v64 + 16);
  if (v65)
  {
    uint64_t v66 = 0;
    double v67 = (unsigned __int8 *)(v64 + 32);
    double v68 = 0.0;
    uint64_t v69 = *(void *)(v64 + 16);
    while (1)
    {
      int v70 = *v67++;
      switch(v70)
      {
        case 1:
        case 4:
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72) {
            goto LABEL_82;
          }
          double v68 = v68 + *(double *)(v53 + 32);
          goto LABEL_14;
        case 3:
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72) {
            goto LABEL_83;
          }
          double v68 = v68 + *(double *)(v53 + 64);
          goto LABEL_14;
        case 5:
          double v68 = v68 + 11.0;
          goto LABEL_14;
        case 6:
        case 7:
        case 8:
          goto LABEL_14;
        default:
          if (*(unsigned char *)(v53 + 24)) {
            uint64_t v71 = 48;
          }
          else {
            uint64_t v71 = 32;
          }
          BOOL v72 = __OFADD__(v66++, 1);
          if (v72)
          {
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          double v68 = v68 + *(double *)(v53 + v71);
LABEL_14:
          if (!--v69) {
            goto LABEL_26;
          }
          break;
      }
    }
  }
  uint64_t v66 = 0;
  double v68 = 0.0;
LABEL_26:
  BOOL v72 = __OFSUB__(v66, 1);
  uint64_t v73 = v66 - 1;
  if (v72)
  {
LABEL_84:
    __break(1u);
    JUMPOUT(0x1DEB9BE04);
  }
  double v74 = v61 + 8.0;
  double v220 = v62 + 8.0;
  uint64_t v75 = v73 & ~(v73 >> 63);
  double v76 = 20.0;
  if (v195) {
    double v76 = 10.0;
  }
  double v241 = v68 + v76 * (double)v75;
  double v77 = v19 - (v74 + v62 + 8.0) - v22 - v21 - v241;
  double v78 = sub_1DF00C07C();
  if (v65)
  {
    double v79 = (unsigned __int8 *)(v64 + 32);
    double v80 = 0.0;
    do
    {
      int v81 = *v79++;
      if (v81 == 8) {
        double v80 = v80 + 35.0;
      }
      --v65;
    }
    while (v65);
  }
  else
  {
    double v80 = 0.0;
  }
  double v258 = v19;
  double v223 = v63;
  double v237 = v22 + v21 + v74;
  double v239 = v77 - v78 - v80 - v63;
  CGFloat v243 = v74;
  CGFloat recta = v77;
  if (!v24) {
    goto LABEL_53;
  }
  uint64_t v82 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v82 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v82 && (*(unsigned char *)(a4 + OBJC_IVAR____TtC7NewsUI220TagViewLayoutOptions_allowSuggestedDescription) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    objc_msgSend(v16, sel_lineHeight);
    double v84 = v83;
    sub_1DEA66C20();
    uint64_t v85 = swift_allocObject();
    *(_OWORD *)(v85 + 16) = xmmword_1DFE0B250;
    uint64_t v86 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v85 + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v87 = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v85 + 64) = v87;
    *(void *)(v85 + 40) = v174;
    id v234 = v86;
    id v88 = v174;
    sub_1DEA65870(v85);
    id v89 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    char v90 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    id v91 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v92 = objc_msgSend(v89, sel_initWithString_attributes_, v90, v91);

    float v93 = 0.1;
    if (v256) {
      uint64_t v35 = 3;
    }
    else {
      uint64_t v35 = 1;
    }
    if ((v256 & 1) == 0) {
      float v93 = 0.0;
    }
    float v196 = v93;
    if (v256) {
      uint64_t v94 = 3;
    }
    else {
      uint64_t v94 = 2;
    }
    objc_msgSend(v92, sel_boundingRectWithSize_options_context_, v94, 0, v77, v84 * (double)v35);
    CGFloat v96 = v95;
    CGFloat v98 = v97;
    double v225 = v23;
    CGFloat v99 = v77;
    CGFloat v101 = v100;
    CGFloat v103 = v102;

    v373.origin.CGFloat x = v96;
    v373.origin.CGFloat y = v98;
    v373.size.CGFloat width = v101;
    v373.size.CGFloat height = v103;
    double v255 = ceil(CGRectGetHeight(v373));
    objc_msgSend(v250, sel_lineHeight);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v105 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    uint64_t v106 = swift_allocObject();
    *(_OWORD *)(v106 + 16) = xmmword_1DFE0B250;
    *(void *)(v106 + 64) = v87;
    *(void *)(v106 + 32) = v234;
    *(void *)(v106 + 40) = v250;
    id v107 = v250;
    id v108 = v234;
    sub_1DEA65870(v106);
    id v109 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v110 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    uint64_t v111 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v112 = objc_msgSend(v109, sel_initWithString_attributes_, v110, v111, 0x80000001DFEBF3A0);

    sub_1DFDFEF40();
    CGFloat v114 = v113;
    CGFloat v116 = v115;
    CGFloat v118 = v117;
    CGFloat v120 = v119;

    v374.origin.CGFloat x = v114;
    v374.origin.CGFloat y = v116;
    double v74 = v243;
    v374.size.CGFloat width = v118;
    v374.size.CGFloat height = v120;
    double v121 = ceil(CGRectGetHeight(v374));
    double v122 = v255 + v225 + v121;
    if (*(double *)(a4 + 48) > v20 + v20 + v122) {
      double v123 = *(double *)(a4 + 48);
    }
    else {
      double v123 = v20 + v20 + v122;
    }
    double v232 = v123 * 0.5;
    v375.origin.CGFloat x = v237;
    v375.origin.CGFloat y = v123 * 0.5 - v122 * 0.5;
    CGFloat y = v375.origin.y;
    v375.size.CGFloat width = v99;
    v375.size.CGFloat height = v121;
    double v228 = v225 + CGRectGetMaxY(v375);
    v376.origin.CGFloat x = v237;
    double v249 = y;
    v376.origin.CGFloat y = y;
    v376.size.CGFloat width = v99;
    v376.size.CGFloat height = v121;
    float v194 = v196;
    double v230 = v225 + CGRectGetMaxY(v376);
    uint64_t v125 = v35;
    CGFloat v235 = v239;
    CGFloat v226 = v237;
    CGFloat v247 = v99;
  }
  else
  {
LABEL_53:
    float v126 = 0.1;
    float v196 = 0.0;
    if ((v256 & 1) == 0) {
      float v126 = 0.0;
    }
    float v194 = v126;
    if (v256) {
      uint64_t v35 = 3;
    }
    else {
      uint64_t v35 = 2;
    }
    type metadata accessor for Localized();
    uint64_t v127 = swift_getObjCClassFromMetadata();
    id v128 = objc_msgSend(self, sel_bundleForClass_, v127);
    sub_1DFDE6ED0();

    sub_1DEA66C20();
    uint64_t v129 = swift_allocObject();
    *(_OWORD *)(v129 + 16) = xmmword_1DFE0B250;
    float v130 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v129 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v129 + 64) = sub_1DE919914(0, (unint64_t *)&qword_1EBABB020);
    *(void *)(v129 + 40) = v250;
    id v131 = v250;
    id v132 = v130;
    sub_1DEA65870(v129);
    id v133 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v134 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DE9372B4((unint64_t *)&qword_1EBABADD0, type metadata accessor for Key);
    id v135 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v136 = objc_msgSend(v133, sel_initWithString_attributes_, v134, v135, 0x80000001DFEBF3A0);

    sub_1DFDFEF60();
    double v138 = v137;

    uint64_t v125 = 0;
    double v121 = ceil(v138);
    if (*(double *)(a4 + 48) > v20 + v20 + v121) {
      double v123 = *(double *)(a4 + 48);
    }
    else {
      double v123 = v20 + v20 + v121;
    }
    double v249 = (v123 - v121) * 0.5;
    double v232 = v123 * 0.5;
    CGFloat v235 = 0.0;
    double v255 = 0.0;
    CGFloat v226 = 0.0;
    double v228 = 0.0;
    double v230 = 0.0;
    CGFloat v247 = 0.0;
  }
  double v139 = ceil((v123 - v22) * 0.5);
  v377.origin.CGFloat x = v74;
  v377.origin.CGFloat y = v139;
  v377.size.CGFloat width = v22;
  v377.size.CGFloat height = v22;
  double MinX = CGRectGetMinX(v377);
  double v221 = v258 - v220;
  CGFloat v140 = -sub_1DF00C07C() - v223;
  double v141 = 0.0;
  v378.origin.CGFloat y = 0.0;
  v378.origin.CGFloat x = v221 - v241;
  v378.size.CGFloat width = v241;
  v378.size.CGFloat height = v123;
  CGRect v379 = CGRectOffset(v378, v140, 0.0);
  CGFloat v216 = v379.origin.y;
  CGFloat x = v379.origin.x;
  CGFloat height = v379.size.height;
  CGFloat width = v379.size.width;
  uint64_t v142 = *(void *)(v53 + 16);
  uint64_t v143 = *(void *)(v142 + 16);
  char v55 = v195;
  if (v143)
  {
    CGFloat v144 = (unsigned __int8 *)(v142 + 32);
    double v145 = v250;
    uint64_t v36 = v125;
    CGFloat v146 = v237;
    do
    {
      int v147 = *v144++;
      if (v147 == 8) {
        double v141 = v141 + 35.0;
      }
      --v143;
    }
    while (v143);
  }
  else
  {
    double v145 = v250;
    uint64_t v36 = v125;
    CGFloat v146 = v237;
  }
  double v148 = 0.0;
  v380.origin.CGFloat x = v146;
  v380.origin.CGFloat y = v249;
  v380.size.CGFloat width = recta;
  v380.size.CGFloat height = v121;
  CGRect v381 = CGRectOffset(v380, v141, 0.0);
  CGFloat v202 = v381.origin.x;
  CGFloat v204 = v381.origin.y;
  CGFloat v206 = v381.size.height;
  CGFloat v208 = v381.size.width;
  uint64_t v149 = *(void *)(v142 + 16);
  double v150 = 0.0;
  if (v149)
  {
    uint64_t v151 = (unsigned __int8 *)(v142 + 32);
    do
    {
      int v152 = *v151++;
      if (v152 == 8) {
        double v150 = v150 + 35.0;
      }
      --v149;
    }
    while (v149);
  }
  double v252 = MinX + -12.0;
  double v197 = ceil(v123);
  v382.origin.CGFloat x = v226;
  v382.origin.CGFloat y = v228;
  v382.size.CGFloat width = v247;
  v382.size.CGFloat height = v255;
  CGRect v383 = CGRectOffset(v382, v150, 0.0);
  CGFloat v170 = v383.origin.x;
  CGFloat v171 = v383.origin.y;
  CGFloat v200 = v383.size.width;
  CGFloat v172 = v383.size.height;
  uint64_t v153 = *(void *)(v142 + 16);
  if (v153)
  {
    int v154 = (unsigned __int8 *)(v142 + 32);
    double v148 = 0.0;
    do
    {
      int v155 = *v154++;
      if (v155 == 8) {
        double v148 = v148 + 35.0;
      }
      --v153;
    }
    while (v153);
  }
  v384.origin.CGFloat x = v243;
  v384.origin.CGFloat y = v139;
  v384.size.CGFloat width = v22;
  v384.size.CGFloat height = v22;
  CGRect v385 = CGRectOffset(v384, v148, 0.0);
  CGFloat v166 = v385.origin.x;
  CGFloat v167 = v385.origin.y;
  CGFloat v168 = v385.size.height;
  CGFloat v169 = v385.size.width;
  v385.origin.CGFloat x = v146;
  v385.origin.CGFloat y = v249;
  v385.size.CGFloat width = recta;
  v385.size.CGFloat height = v121;
  CGRect v386 = CGRectIntegral(v385);
  CGFloat v192 = v386.origin.y;
  CGFloat v193 = v386.origin.x;
  CGFloat v190 = v386.size.height;
  CGFloat v191 = v386.size.width;
  v386.origin.CGFloat x = v146;
  v386.origin.CGFloat y = v249;
  v386.size.CGFloat width = v239;
  v386.size.CGFloat height = v121;
  CGRect v387 = CGRectIntegral(v386);
  CGFloat v188 = v387.origin.y;
  CGFloat v189 = v387.origin.x;
  CGFloat v186 = v387.size.height;
  CGFloat v187 = v387.size.width;
  v387.origin.CGFloat x = v226;
  v387.origin.CGFloat y = v228;
  v387.size.CGFloat width = v247;
  v387.size.CGFloat height = v255;
  CGRect v388 = CGRectIntegral(v387);
  CGFloat v184 = v388.origin.y;
  CGFloat v185 = v388.origin.x;
  CGFloat v182 = v388.size.height;
  CGFloat v183 = v388.size.width;
  v388.origin.CGFloat x = v226;
  v388.origin.CGFloat y = v230;
  v388.size.CGFloat width = v235;
  v388.size.CGFloat height = v255;
  CGRect v389 = CGRectIntegral(v388);
  CGFloat v180 = v389.origin.y;
  CGFloat v181 = v389.origin.x;
  CGFloat v177 = v389.size.height;
  CGFloat v178 = v389.size.width;
  v389.origin.CGFloat x = v243;
  v389.origin.CGFloat y = v139;
  v389.size.CGFloat width = v22;
  v389.size.CGFloat height = v22;
  CGRect v390 = CGRectIntegral(v389);
  CGFloat v47 = v390.origin.x;
  CGFloat v163 = v390.size.width;
  CGFloat v164 = v390.origin.y;
  CGFloat v179 = v390.size.height;
  v390.origin.CGFloat x = v243;
  v390.origin.CGFloat y = v139;
  v390.size.CGFloat width = v22;
  v390.size.CGFloat height = v22;
  CGFloat v176 = CGRectGetMinX(v390) + -1.0;
  v391.origin.CGFloat x = v243;
  v391.origin.CGFloat y = v139;
  v391.size.CGFloat width = v22;
  v391.size.CGFloat height = v22;
  double v254 = CGRectGetMinY(v391) + -1.0;
  v392.origin.CGFloat x = v243;
  v392.origin.CGFloat y = v139;
  v392.size.CGFloat width = v22;
  v392.size.CGFloat height = v22;
  CGFloat v175 = CGRectGetWidth(v392) + 2.0;
  v393.origin.CGFloat x = v243;
  v393.origin.CGFloat y = v139;
  v393.size.CGFloat width = v22;
  v393.size.CGFloat height = v22;
  double v242 = CGRectGetHeight(v393) + 2.0;
  v394.size.CGFloat width = 8.0;
  v394.size.CGFloat height = 8.0;
  v394.origin.CGFloat x = v252;
  v394.origin.CGFloat y = (v22 + -8.0) * 0.5 + v139;
  CGRect v395 = CGRectIntegral(v394);
  CGFloat v248 = v395.size.width;
  CGFloat v251 = v395.origin.x;
  CGFloat v238 = v395.origin.y;
  CGFloat v233 = v395.size.height;
  v395.size.CGFloat width = 0.0;
  v395.size.CGFloat height = 0.0;
  v395.origin.CGFloat x = v221;
  v395.origin.CGFloat y = v232;
  CGRect v396 = CGRectIntegral(v395);
  CGFloat rect = v396.size.width;
  CGFloat v246 = v396.origin.x;
  CGFloat v229 = v396.origin.y;
  CGFloat v224 = v396.size.height;
  v396.origin.CGFloat y = 0.0;
  v396.origin.CGFloat x = v221 - v241;
  v396.size.CGFloat width = v241;
  v396.size.CGFloat height = v123;
  CGRect v397 = CGRectIntegral(v396);
  CGFloat v240 = v397.origin.x;
  CGFloat v219 = v397.size.height;
  CGFloat v222 = v397.origin.y;
  CGFloat v236 = v397.size.width;
  v397.origin.CGFloat y = v216;
  v397.origin.CGFloat x = x;
  v397.size.CGFloat height = height;
  v397.size.CGFloat width = width;
  CGRect v398 = CGRectIntegral(v397);
  CGFloat v231 = v398.origin.x;
  CGFloat v215 = v398.size.height;
  CGFloat v217 = v398.origin.y;
  CGFloat v227 = v398.size.width;
  v398.origin.CGFloat x = v202;
  v398.origin.CGFloat y = v204;
  v398.size.CGFloat height = v206;
  v398.size.CGFloat width = v208;
  CGRect v399 = CGRectIntegral(v398);
  CGFloat v156 = v399.origin.x;
  CGFloat v165 = v399.origin.y;
  CGFloat v157 = v399.size.width;
  CGFloat v162 = v399.size.height;
  v399.origin.CGFloat x = v170;
  v399.origin.CGFloat y = v171;
  v399.size.CGFloat width = v200;
  v399.size.CGFloat height = v172;
  CGRect v400 = CGRectIntegral(v399);
  CGFloat v158 = v400.origin.x;
  CGFloat v173 = v400.origin.y;
  CGFloat v159 = v400.size.width;
  CGFloat v160 = v400.size.height;
  v400.origin.CGFloat x = v166;
  v400.origin.CGFloat y = v167;
  v400.size.CGFloat height = v168;
  v400.size.CGFloat width = v169;
  CGRect v401 = CGRectIntegral(v400);
  char v54 = v256 & 1;
  v260[1] = 0;
  v260[0] = 0;
  *(double *)&v260[2] = v258;
  *(double *)&v260[3] = v197;
  *(CGFloat *)&v260[4] = v193;
  *(CGFloat *)&v260[5] = v192;
  *(CGFloat *)&v260[6] = v191;
  *(CGFloat *)&v260[7] = v190;
  *(CGFloat *)&v260[8] = v189;
  *(CGFloat *)&v260[9] = v188;
  *(CGFloat *)&v260[10] = v187;
  *(CGFloat *)&v260[11] = v186;
  v260[12] = v35;
  v260[13] = v36;
  float v261 = v194;
  float v262 = v196;
  CGFloat v263 = v185;
  CGFloat v264 = v184;
  CGFloat v265 = v183;
  CGFloat v266 = v182;
  CGFloat v267 = v181;
  CGFloat v268 = v180;
  CGFloat v269 = v178;
  CGFloat v270 = v177;
  CGFloat v271 = v47;
  CGFloat v48 = v164;
  CGFloat v272 = v164;
  CGFloat v273 = v163;
  CGFloat v274 = v179;
  CGFloat v275 = v176;
  double v276 = v254;
  CGFloat v277 = v175;
  double v278 = v242;
  CGFloat v279 = v251;
  CGFloat v280 = v238;
  CGFloat v281 = v248;
  CGFloat v282 = v233;
  CGFloat v283 = v246;
  CGFloat v284 = v229;
  CGFloat v285 = rect;
  CGFloat v286 = v224;
  CGFloat v287 = v240;
  CGFloat v288 = v222;
  CGFloat v289 = v236;
  CGFloat v290 = v219;
  CGFloat v291 = v231;
  CGFloat v292 = v217;
  CGFloat v293 = v227;
  CGFloat v294 = v215;
  CGFloat v257 = v156;
  CGFloat v295 = v156;
  CGFloat v56 = v165;
  CGFloat v296 = v165;
  CGFloat v211 = v158;
  CGFloat v213 = v157;
  CGFloat v297 = v157;
  CGFloat v57 = v162;
  CGFloat v298 = v162;
  CGFloat v299 = v158;
  CGFloat v58 = v173;
  CGFloat v300 = v173;
  CGFloat v207 = v160;
  CGFloat v209 = v159;
  CGFloat v301 = v159;
  CGFloat v302 = v160;
  CGFloat v203 = v401.origin.y;
  CGFloat v205 = v401.origin.x;
  CGRect v303 = v401;
  double v198 = v401.size.height;
  CGFloat v201 = v401.size.width;
  uint64_t v304 = v53;
  double v305 = v197;
  char v306 = v54;
  char v307 = v195;
  nullsub_1(v260);
  sub_1DEB9BE28((uint64_t)v260, (uint64_t)v259, (unint64_t *)&qword_1EAC211F0, (uint64_t)&type metadata for TagViewLayoutAttributes);
  swift_retain_n();
  swift_retain();
  sub_1DFDEDC70();

  swift_bridgeObjectRelease();
  swift_release();

  CGFloat v49 = v163;
  CGFloat v46 = v177;
  CGFloat v45 = v178;
  CGFloat v44 = v180;
  CGFloat v43 = v181;
  CGFloat v42 = v182;
  CGFloat v41 = v183;
  CGFloat v40 = v184;
  CGFloat v39 = v185;
  CGFloat v34 = v186;
  CGFloat v33 = v187;
  CGFloat v32 = v188;
  CGFloat v31 = v189;
  CGFloat v30 = v190;
  CGFloat v29 = v191;
  CGFloat v28 = v192;
  CGFloat v27 = v193;
  float v37 = v194;
  CGFloat v52 = v175;
  CGFloat v51 = v176;
  double v26 = v197;
  CGFloat v50 = v179;
  float v38 = v196;
  long long v25 = 0uLL;
  double v59 = v197;
LABEL_80:
  *(_OWORD *)a6 = v25;
  *(double *)(a6 + 16) = v258;
  *(double *)(a6 + 24) = v26;
  *(CGFloat *)(a6 + 32) = v27;
  *(CGFloat *)(a6 + 40) = v28;
  *(CGFloat *)(a6 + 48) = v29;
  *(CGFloat *)(a6 + 56) = v30;
  *(CGFloat *)(a6 + 64) = v31;
  *(CGFloat *)(a6 + 72) = v32;
  *(CGFloat *)(a6 + 80) = v33;
  *(CGFloat *)(a6 + 88) = v34;
  *(float *)(a6 + 112) = v37;
  *(float *)(a6 + 116) = v38;
  *(CGFloat *)(a6 + 120) = v39;
  *(CGFloat *)(a6 + 128) = v40;
  *(CGFloat *)(a6 + 136) = v41;
  *(CGFloat *)(a6 + 144) = v42;
  *(CGFloat *)(a6 + 152) = v43;
  *(CGFloat *)(a6 + 160) = v44;
  *(CGFloat *)(a6 + 168) = v45;
  *(CGFloat *)(a6 + 176) = v46;
  *(CGFloat *)(a6 + 184) = v47;
  *(CGFloat *)(a6 + 192) = v48;
  *(CGFloat *)(a6 + 200) = v49;
  *(CGFloat *)(a6 + 208) = v50;
  *(CGFloat *)(a6 + 216) = v51;
  *(double *)(a6 + 224) = v254;
  *(void *)(a6 + 96) = v35;
  *(void *)(a6 + 104) = v36;
  *(CGFloat *)(a6 + 232) = v52;
  *(double *)(a6 + 240) = v242;
  *(CGFloat *)(a6 + 248) = v251;
  *(CGFloat *)(a6 + 256) = v238;
  *(CGFloat *)(a6 + 264) = v248;
  *(CGFloat *)(a6 + 272) = v233;
  *(CGFloat *)(a6 + 280) = v246;
  *(CGFloat *)(a6 + 288) = v229;
  *(CGFloat *)(a6 + 296) = rect;
  *(CGFloat *)(a6 + 304) = v224;
  *(CGFloat *)(a6 + 312) = v240;
  *(CGFloat *)(a6 + 320) = v222;
  *(CGFloat *)(a6 + 328) = v236;
  *(CGFloat *)(a6 + 336) = v219;
  *(CGFloat *)(a6 + 344) = v231;
  *(CGFloat *)(a6 + 352) = v217;
  *(CGFloat *)(a6 + 360) = v227;
  *(CGFloat *)(a6 + 368) = v215;
  *(CGFloat *)(a6 + 376) = v257;
  *(CGFloat *)(a6 + 384) = v56;
  *(CGFloat *)(a6 + 392) = v213;
  *(CGFloat *)(a6 + 400) = v57;
  *(CGFloat *)(a6 + 408) = v211;
  *(CGFloat *)(a6 + 416) = v58;
  *(CGFloat *)(a6 + 424) = v209;
  *(CGFloat *)(a6 + 432) = v207;
  *(CGFloat *)(a6 + 440) = v205;
  *(CGFloat *)(a6 + 448) = v203;
  *(CGFloat *)(a6 + 456) = v201;
  double result = v198;
  *(double *)(a6 + 464) = v198;
  *(void *)(a6 + 472) = v53;
  *(double *)(a6 + 480) = v59;
  *(unsigned char *)(a6 + 488) = v54;
  *(unsigned char *)(a6 + 489) = v55;
  return result;
}

uint64_t sub_1DEB9BE28(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1DEA9B504(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1DEB9BEA8()
{
  if (!qword_1EBACCC60)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBABB060);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACCC60);
    }
  }
}

uint64_t sub_1DEB9BF10(uint64_t a1)
{
  return a1;
}

id *sub_1DEB9BF3C(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_1DEB9BF68(uint64_t a1)
{
  return a1;
}

id *sub_1DEB9BF94(id *a1)
{
  return a1;
}

uint64_t sub_1DEB9BFC0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 472);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1DEB9BFD8()
{
  return objectdestroyTm_4();
}

uint64_t sub_1DEB9BFE0()
{
  return objectdestroyTm_4();
}

uint64_t sub_1DEB9BFE8()
{
  return objectdestroyTm_4();
}

uint64_t sub_1DEB9BFF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEB9C058(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DEB9C0B8()
{
  if (!qword_1EBAEC6C8)
  {
    type metadata accessor for TitleViewLayoutAttributes(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAEC6C8);
    }
  }
}

uint64_t sub_1DEB9C124()
{
  uint64_t v0 = sub_1DFDF6B30();
  __swift_allocate_value_buffer(v0, qword_1EACDF630);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EACDF630) = 250;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);
  return v1();
}

void __swiftcall InterludeModule.createViewController()(UIViewController *__return_ptr retstr)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  type metadata accessor for InterludeViewController();
  if (!sub_1DFDECCB0()) {
    __break(1u);
  }
}

uint64_t InterludeModule.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t InterludeModule.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1DEB9C264()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  type metadata accessor for InterludeViewController();
  uint64_t result = sub_1DFDECCB0();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t dispatch thunk of InterludeModuleType.createViewController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for InterludeModule()
{
  return self;
}

uint64_t method lookup function for InterludeModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InterludeModule);
}

uint64_t sub_1DEB9C310@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA7DE0);
  uint64_t result = sub_1DFDECCC0();
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAA86B0);
  uint64_t result = sub_1DFDECCC0();
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, (unint64_t *)&qword_1EBAB0140);
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = type metadata accessor for ArticleLinkActionHandler();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v5;
    sub_1DE942EC4(&v11, v8 + 24);
    sub_1DE942EC4(&v9, v8 + 64);
    *(void *)(v8 + 104) = v6;
    a2[3] = v7;
    uint64_t result = sub_1DEB9D0BC(&qword_1EBAA4BC0, 255, (void (*)(uint64_t))type metadata accessor for ArticleLinkActionHandler);
    a2[4] = result;
    *a2 = v8;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DEB9C4E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAA3800);
  uint64_t result = sub_1DFDECCC0();
  if (!v14)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA7100);
  uint64_t result = sub_1DFDECCC0();
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA7F20);
  uint64_t result = sub_1DFDECCC0();
  if (!v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = type metadata accessor for ArticleRouter();
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1DE942EC4(&v13, v8 + 24);
    sub_1DE942EC4(&v11, v8 + 64);
    *(void *)(v8 + 104) = v5;
    sub_1DE942EC4(&v9, v8 + 112);
    *(void *)(v8 + 152) = v6;
    a2[3] = v7;
    uint64_t result = sub_1DEB9D0BC(&qword_1EBAA3D20, 255, (void (*)(uint64_t))type metadata accessor for ArticleRouter);
    a2[4] = result;
    *a2 = v8;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1DEB9C718(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DE919914(0, (unint64_t *)&unk_1EBACA600);
  uint64_t v3 = (void *)sub_1DFDECCB0();
  uint64_t v4 = v3;
  if (!v3
    || (id v5 = objc_msgSend(v3, sel_articleHostViewController)) == 0
    || (uint64_t v6 = v5,
        id v7 = objc_msgSend(v5, sel_parentViewController),
        v6,
        !v7))
  {
LABEL_7:
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DFDE9350();
    id v7 = (id)sub_1DFDECCB0();

    if (!v7) {
      return;
    }
    goto LABEL_8;
  }
  sub_1DFDE9350();
  if (!swift_dynamicCastClass())
  {

    goto LABEL_7;
  }

LABEL_8:
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1DEB9C880@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DE94F204((uint64_t)a1, (uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  uint64_t result = sub_1DFDECCB0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAA3800);
  uint64_t result = sub_1DFDECCC0();
  if (!v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA7100);
  uint64_t result = sub_1DFDECCC0();
  if (v9)
  {
    uint64_t v6 = type metadata accessor for CampaignLandingPageRouter();
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1DE942EC4(v12, v7 + 24);
    *(void *)(v7 + 64) = v5;
    sub_1DE942EC4(&v10, v7 + 72);
    sub_1DE942EC4(&v8, v7 + 112);
    a2[3] = v6;
    uint64_t result = sub_1DEB9D0BC((unint64_t *)&unk_1EBADB648, 255, (void (*)(uint64_t))type metadata accessor for CampaignLandingPageRouter);
    a2[4] = result;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1DEB9CA30(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DFDE9DC0();
  id v2 = (id)sub_1DFDECCB0();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1DEB9CAB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAACB00);
  uint64_t result = sub_1DFDECCC0();
  if (v5) {
    return sub_1DE942EC4(&v4, a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEB9CB3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, &qword_1EBAC4D60);
  uint64_t result = sub_1DFDECCC0();
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE925C98(0, &qword_1EBAD6188);
    uint64_t result = sub_1DFDECCC0();
    if (v6)
    {
      sub_1DE942EC4(&v7, a2);
      return sub_1DE942EC4(&v5, a2 + 40);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEB9CC2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE925C98(0, (unint64_t *)&qword_1EBAF8D40);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v5 = v10;
  if (v10)
  {
    uint64_t v6 = v11;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE925C98(0, &qword_1EBAACB00);
    uint64_t result = sub_1DFDECCC0();
    if (v9)
    {
      a2[3] = (uint64_t)&type metadata for FeedOptionsProvider;
      a2[4] = (uint64_t)&off_1F3A94EF8;
      uint64_t v7 = swift_allocObject();
      *a2 = v7;
      *(void *)(v7 + 16) = v5;
      *(void *)(v7 + 24) = v6;
      return sub_1DE942EC4(&v8, v7 + 32);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEB9CD4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9A1E44();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for OpenArticleIntentNavigator();
    uint64_t v6 = swift_allocObject();
    swift_defaultActor_initialize();
    *(void *)(v6 + 112) = v4;
    a2[3] = v5;
    uint64_t result = sub_1DEB9D0BC(&qword_1EAC21268, 255, (void (*)(uint64_t))type metadata accessor for OpenArticleIntentNavigator);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEB9CE10()
{
  sub_1DFDE8E20();
  swift_allocObject();
  sub_1DFDE8E10();
  uint64_t v0 = sub_1DFDE8E00();
  swift_release();
  return v0;
}

id sub_1DEB9CE60(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE9266B8(0, &qword_1EBABAAA8);
  id result = (id)sub_1DFDECCB0();
  if (result)
  {
    id v2 = objc_msgSend(result, sel_debugAdvertisementSettings);
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F818]), sel_initWithDebugSettings_, v2);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DEB9CF14()
{
  sub_1DFDE7AA0();
  sub_1DEB9D0BC(&qword_1EBAA3DF0, v0, (void (*)(uint64_t))type metadata accessor for ArticleAssembly);
  sub_1DFDE7EB0();
  swift_release();
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F838]), sel_initWithLineBalancingEnabled_, v2);
}

void sub_1DEB9CFE4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAB60);
  uint64_t v1 = (void *)sub_1DFDECCB0();
  if (!v1)
  {
    __break(1u);
    goto LABEL_5;
  }
  unsigned __int8 v2 = v1;
  id v3 = objc_msgSend(v1, sel_articleAccessChecker);

  if (!v3) {
LABEL_5:
  }
    __break(1u);
}

id sub_1DEB9D074()
{
  return sub_1DEB9CF14();
}

uint64_t sub_1DEB9D07C()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_1DEB9D0BC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEB9D104(void *a1)
{
  sub_1DEB9FD4C(0, &qword_1EAC212B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEB9FCF8();
  sub_1DFE001A0();
  char v13 = 0;
  sub_1DFDFFE60();
  if (!v1)
  {
    char v12 = 1;
    sub_1DFDFFE60();
    char v11 = 2;
    sub_1DFDFFE90();
    char v10 = 3;
    sub_1DFDFFE90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DEB9D2E0()
{
  uint64_t result = 0x736B63696C63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6973736572706D69;
      break;
    case 2:
      uint64_t result = 0x756F43746E657665;
      break;
    case 3:
      uint64_t result = 0x6D617473656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DEB9D37C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DEB9F690(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DEB9D3A4(uint64_t a1)
{
  unint64_t v2 = sub_1DEB9FCF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEB9D3E0(uint64_t a1)
{
  unint64_t v2 = sub_1DEB9FCF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEB9D41C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DEB9F874(a1);
  if (!v2)
  {
    *a2 = v6;
    a2[1] = v7;
    a2[2] = result;
    a2[3] = v5;
  }
  return result;
}

uint64_t sub_1DEB9D44C(void *a1)
{
  return sub_1DEB9D104(a1);
}

uint64_t sub_1DEB9D46C()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEB9D52C()
{
  return sub_1DFDFDBE0();
}

uint64_t sub_1DEB9D5DC()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEB9D69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a1;
  uint64_t v27 = _s9DataStoreC10CaptureKeyVMa();
  MEMORY[0x1F4188790](v27);
  long long v25 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(*(id *)(a3 + 16), sel_allAggregates);
  sub_1DEB9FC40();
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  uint64_t v26 = sub_1DFDFDAF0();

  if (qword_1EBAC0778 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_1EBB629F0;
  v23[3] = sub_1DFDFEA60();
  sub_1DEB9F404(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DFE0CC10;
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  uint64_t v11 = sub_1DFDEFBA0();
  sub_1DFDFFB10();
  uint64_t v12 = v30;
  unint64_t v13 = v31;
  *(void *)(v10 + 56) = v9;
  unint64_t v14 = sub_1DEA08668();
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v13;
  *(void *)(v10 + 96) = v9;
  *(void *)(v10 + 104) = v14;
  uint64_t v15 = v28;
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 72) = v15;
  *(void *)(v10 + 80) = a2;
  uint64_t v16 = v26;
  uint64_t v30 = *(void *)(v26 + 16);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1DFDFFEE0();
  *(void *)(v10 + 136) = v9;
  *(void *)(v10 + 144) = v14;
  *(void *)(v10 + 112) = v17;
  *(void *)(v10 + 120) = v18;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  double v19 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(&v25[*(int *)(v27 + 20)], a4, v11);
  void *v19 = v15;
  v19[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DEB9F07C(v16);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = *(void *)(a3 + 32);
  *(void *)(a3 + 32) = 0x8000000000000000;
  sub_1DFBC6698(v20, v19, isUniquelyReferenced_nonNull_native);
  *(void *)(a3 + 32) = v29;
  swift_bridgeObjectRelease();
  sub_1DEB9F5EC((uint64_t)v19);
  return swift_endAccess();
}

uint64_t sub_1DEB9D9A4()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(*(id *)(v0 + 16), sel_allAggregates);
  sub_1DEB9FC40();
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  uint64_t v4 = sub_1DFDFDAF0();

  if (qword_1EBAC0778 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DEB9F404(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE0B250;
  uint64_t v6 = sub_1DFDFFEE0();
  uint64_t v8 = v7;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = sub_1DEA08668();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1DEB9F07C(v4);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEB9DB50(uint64_t a1)
{
  uint64_t v2 = sub_1DFDEFBA0();
  uint64_t v92 = *(void *)(v2 - 8);
  uint64_t v93 = v2;
  MEMORY[0x1F4188790](v2);
  id v91 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = _s9DataStoreC10CaptureKeyVMa();
  uint64_t v4 = MEMORY[0x1F4188790](v94);
  uint64_t v85 = (uint64_t *)((char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  char v90 = (uint64_t *)((char *)&v79 - v7);
  MEMORY[0x1F4188790](v6);
  id v88 = (uint64_t *)((char *)&v79 - v8);
  uint64_t v9 = sub_1DFDEFBD0();
  uint64_t v99 = *(void *)(v9 - 8);
  uint64_t v100 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  double v84 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  id v89 = (char *)&v79 - v13;
  MEMORY[0x1F4188790](v12);
  double v97 = (char *)&v79 - v14;
  uint64_t v15 = sub_1DFDEFBE0();
  uint64_t v95 = *(void *)(v15 - 8);
  uint64_t v96 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v86 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v87 = (char *)&v79 - v18;
  uint64_t v19 = sub_1DFDEFBF0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  double v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB9F404(0, &qword_1EAC21290, MEMORY[0x1E4F81FD0], MEMORY[0x1E4FBB718]);
  uint64_t v24 = v23;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v80 = (uint64_t)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v81 = (uint64_t)&v79 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  unint64_t v31 = (char *)&v79 - v30;
  MEMORY[0x1F4188790](v29);
  CGFloat v33 = (char *)&v79 - v32;
  if (qword_1EBAC0778 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DEB9F404(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1DFE0B250;
  sub_1DEB9F468(a1, (uint64_t)v33);
  uint64_t v82 = v33;
  uint64_t v83 = v24;
  uint64_t v35 = a1;
  uint64_t v36 = sub_1DFDFDD90();
  uint64_t v38 = v37;
  *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v34 + 64) = sub_1DEA08668();
  *(void *)(v34 + 32) = v36;
  *(void *)(v34 + 40) = v38;
  uint64_t v39 = v35;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DEB9F468(v35, (uint64_t)v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v31, 1, v19) == 1)
  {
    uint64_t v40 = v95;
    uint64_t v41 = v96;
    (*(void (**)(char *, void, uint64_t))(v95 + 104))(v22, *MEMORY[0x1E4F81FB0], v96);
    int v42 = *MEMORY[0x1E4F81FC8];
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E4F81FC8], v19);
    sub_1DEB9F4FC((uint64_t)v31);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v31, v19);
    int v42 = *MEMORY[0x1E4F81FC8];
    uint64_t v40 = v95;
    uint64_t v41 = v96;
  }
  int v43 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v22, v19);
  uint64_t v44 = v99;
  if (v43 != v42)
  {
    if (v43 == *MEMORY[0x1E4F81FC0])
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v22, v19);
      CGFloat v49 = v97;
      uint64_t v50 = v100;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v97, v22, v100);
      CGFloat v51 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
      CGFloat v52 = v89;
      v51(v89, v49, v50);
      uint64_t v53 = sub_1DFDEFBC0();
      char v55 = v90;
      char v54 = v91;
      *char v90 = v53;
      v55[1] = v56;
      sub_1DFDEFBB0();
      double v59 = *(void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v58 = v44 + 8;
      CGFloat v57 = v59;
      v59(v52, v50);
      uint64_t v60 = v92 + 32;
      double v61 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v61((char *)v55 + *(int *)(v94 + 20), v54, v93);
      uint64_t v62 = (uint64_t)v55;
      double v63 = v88;
      sub_1DEB9F588(v62, (uint64_t)v88);
      uint64_t v64 = v98;
      swift_beginAccess();
      uint64_t v65 = *(void *)(v64 + 32);
      if (*(void *)(v65 + 16))
      {
        unint64_t v66 = sub_1DF50BB34(v63);
        if (v67)
        {
          uint64_t v48 = *(void *)(*(void *)(v65 + 56) + 8 * v66);
          swift_endAccess();
          swift_bridgeObjectRetain();
          sub_1DEB9F5EC((uint64_t)v63);
          v57(v97, v100);
          return v48;
        }
      }
      swift_endAccess();
      sub_1DEB9F5EC((uint64_t)v63);
      uint64_t v70 = v81;
      sub_1DEB9F468(v39, v81);
      uint64_t v71 = v100;
      v51(v84, v97, v100);
      unint64_t v101 = 0;
      unint64_t v102 = 0xE000000000000000;
      sub_1DFDFF9B0();
      uint64_t v99 = v58;
      uint64_t v92 = v60;
      sub_1DFDFDE90();
      sub_1DEB9F468(v70, (uint64_t)v82);
      sub_1DFDFDD90();
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      sub_1DFDFDE90();
      BOOL v72 = v89;
      v51(v89, v84, v71);
      uint64_t v73 = sub_1DFDEFBC0();
      uint64_t v74 = (uint64_t)v85;
      *uint64_t v85 = v73;
      *(void *)(v74 + 8) = v75;
      double v76 = v91;
      sub_1DFDEFBB0();
      v57(v72, v71);
      v61((char *)(v74 + *(int *)(v94 + 20)), v76, v93);
      double v77 = v90;
      sub_1DEB9F588(v74, (uint64_t)v90);
      sub_1DFDFFB10();
      sub_1DEB9F5EC((uint64_t)v77);
      sub_1DFDFDE90();
      sub_1DEB9F648(&qword_1EAC21298, (void (*)(uint64_t))_s9DataStoreC10CaptureKeyVMa);
      swift_bridgeObjectRetain();
      sub_1DFDFDB60();
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v78 = v80;
      sub_1DEB9F468(v39, v80);
      unint64_t v101 = 0;
      unint64_t v102 = 0xE000000000000000;
      sub_1DFDFF9B0();
      swift_bridgeObjectRelease();
      unint64_t v101 = 0xD00000000000002FLL;
      unint64_t v102 = 0x80000001DFEBF520;
      sub_1DEB9F468(v78, (uint64_t)v82);
      sub_1DFDFDD90();
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
    }
    while (1)
    {
LABEL_20:
      sub_1DFDFFBB0();
      __break(1u);
    }
  }
  (*(void (**)(char *, uint64_t))(v20 + 96))(v22, v19);
  CGFloat v45 = v87;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v87, v22, v41);
  CGFloat v46 = v86;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v86, v45, v41);
  int v47 = (*(uint64_t (**)(char *, uint64_t))(v40 + 88))(v46, v41);
  if (v47 != *MEMORY[0x1E4F81FB8])
  {
    if (v47 == *MEMORY[0x1E4F81FB0])
    {
      uint64_t v48 = *(void *)(v98 + 40);
      if (v48)
      {
        double v68 = *(void (**)(char *, uint64_t))(v40 + 8);
        swift_bridgeObjectRetain();
        v68(v45, v41);
        return v48;
      }
    }
    else
    {
      unint64_t v101 = 0;
      unint64_t v102 = 0xE000000000000000;
      sub_1DFDFF9B0();
      sub_1DFDFDE90();
      sub_1DFDFFB10();
    }
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v45, v41);
  uint64_t v48 = *(void *)(v98 + 24);
  swift_bridgeObjectRetain();
  return v48;
}

uint64_t sub_1DEB9E730@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v27 = a1;
  sub_1DEB9F404(0, &qword_1EAC21290, MEMORY[0x1E4F81FD0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v26 - v4;
  if (qword_1EBAC0778 != -1) {
    swift_once();
  }
  v26[1] = qword_1EBB629F0;
  sub_1DFDFEA60();
  sub_1DEB9F404(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DFE0B750;
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_1DFDEFC00();
  sub_1DFDFFB10();
  uint64_t v7 = v28;
  unint64_t v8 = v29;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1DEA08668();
  *(void *)(v6 + 64) = v10;
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v8;
  uint64_t v11 = v27;
  sub_1DEB9F468(v27, (uint64_t)v5);
  uint64_t v12 = sub_1DFDFDD90();
  *(void *)(v6 + 96) = v9;
  *(void *)(v6 + 104) = v10;
  *(void *)(v6 + 72) = v12;
  *(void *)(v6 + 80) = v13;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1DEB9DB50(v11);
  uint64_t v15 = sub_1DF431F70();
  if (*(void *)(v14 + 16) && (unint64_t v17 = sub_1DEA6D930(v15, v16), (v18 & 1) != 0))
  {
    char v19 = 0;
    uint64_t v20 = (uint64_t *)(*(void *)(v14 + 56) + 32 * v17);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[2];
    uint64_t v24 = v20[3];
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    char v19 = 1;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v24;
  *(unsigned char *)(a2 + 32) = v19;
  return result;
}

uint64_t sub_1DEB9E9B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s9DataStoreCMa()
{
  return self;
}

uint64_t *sub_1DEB9EA24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1DFDEFBA0();
    unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1DEB9EB0C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DFDEFBA0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1DEB9EB84(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DFDEFBA0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1DEB9EC1C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDEFBA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1DEB9ECB8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DFDEFBA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1DEB9ED34(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDEFBA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DEB9EDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEB9EDD4);
}

uint64_t sub_1DEB9EDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDEFBA0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DEB9EE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEB9EE98);
}

uint64_t sub_1DEB9EE98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDEFBA0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s9DataStoreC10CaptureKeyVMa()
{
  uint64_t result = qword_1EAC21270;
  if (!qword_1EAC21270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEB9EF8C()
{
  uint64_t result = sub_1DFDEFBA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *_s9DataStoreC4DataVMa()
{
  return &_s9DataStoreC4DataVN;
}

uint64_t sub_1DEB9F034()
{
  return sub_1DEB9F648(&qword_1EAC21280, (void (*)(uint64_t))_s9DataStoreC10CaptureKeyVMa);
}

uint64_t sub_1DEB9F07C(uint64_t a1)
{
  sub_1DEB9FC80();
  uint64_t result = sub_1DFDFFC10();
  int64_t v3 = 0;
  uint64_t v37 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v33 = v5;
  int64_t v34 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v35 = (void *)result;
  uint64_t v36 = result + 64;
  if ((v8 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v11 = v3;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v15 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(v37 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void **)(*(void *)(v37 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v21 = v20;
    objc_msgSend(v21, sel_clicks);
    uint64_t v23 = v22;
    objc_msgSend(v21, sel_impressions);
    uint64_t v25 = v24;
    id v26 = objc_msgSend(v21, sel_eventCount);
    id v27 = objc_msgSend(v21, sel_timestamp);

    uint64_t result = (uint64_t)v35;
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v28 = (void *)(v35[6] + 16 * i);
    *uint64_t v28 = v18;
    v28[1] = v19;
    unint64_t v29 = (void *)(v35[7] + 32 * i);
    *unint64_t v29 = v23;
    v29[1] = v25;
    v29[2] = v26;
    v29[3] = v27;
    uint64_t v30 = v35[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v35[2] = v32;
    int64_t v3 = v11;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v34) {
      return result;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v13);
    int64_t v15 = v3 + 1;
    if (!v14)
    {
      int64_t v15 = v3 + 2;
      if (v3 + 2 >= v34) {
        return result;
      }
      unint64_t v14 = *(void *)(v33 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v3 + 3;
        if (v3 + 3 >= v34) {
          return result;
        }
        unint64_t v14 = *(void *)(v33 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v14 - 1) & v14;
    int64_t v11 = v15;
  }
  uint64_t v16 = v3 + 4;
  if (v3 + 4 >= v34) {
    return result;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v34) {
      return result;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DEB9F2E0(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (char v3 = 0, (sub_1DFDFFF50() & 1) != 0))
  {
    _s9DataStoreC10CaptureKeyVMa();
    sub_1DFDEFBA0();
    sub_1DEB9F648(&qword_1EAC21288, MEMORY[0x1E4F81F98]);
    sub_1DFDFE170();
    sub_1DFDFE170();
    if (v7 == v5 && v8 == v6) {
      char v3 = 1;
    }
    else {
      char v3 = sub_1DFDFFF50();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

void sub_1DEB9F404(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DEB9F468(uint64_t a1, uint64_t a2)
{
  sub_1DEB9F404(0, &qword_1EAC21290, MEMORY[0x1E4F81FD0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEB9F4FC(uint64_t a1)
{
  sub_1DEB9F404(0, &qword_1EAC21290, MEMORY[0x1E4F81FD0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEB9F588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9DataStoreC10CaptureKeyVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEB9F5EC(uint64_t a1)
{
  uint64_t v2 = _s9DataStoreC10CaptureKeyVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEB9F648(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEB9F690(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736B63696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F43746E657665 && a2 == 0xEA0000000000746ELL || (sub_1DFDFFF50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DEB9F874(void *a1)
{
  sub_1DEB9FD4C(0, &qword_1EAC212A0, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1DEB9FCF8();
  sub_1DFE00190();
  if (!v1)
  {
    v10[15] = 0;
    sub_1DFDFFD70();
    v10[14] = 1;
    sub_1DFDFFD70();
    v10[13] = 2;
    uint64_t v8 = sub_1DFDFFDA0();
    v10[12] = 3;
    sub_1DFDFFDA0();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void *sub_1DEB9FA88(void *a1)
{
  BOOL v2 = v1;
  v1[4] = MEMORY[0x1E4FBC868];
  v1[5] = 0;
  v1[2] = a1;
  id v3 = objc_msgSend(a1, sel_allAggregates);
  sub_1DEB9FC40();
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  uint64_t v5 = sub_1DFDFDAF0();

  if (qword_1EBAC0778 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DEB9F404(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DFE0B250;
  uint64_t v7 = sub_1DFDFFEE0();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = v4;
  *(void *)(v6 + 64) = sub_1DEA08668();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1DEB9F07C(v5);
  swift_bridgeObjectRelease();
  v2[3] = v10;
  return v2;
}

unint64_t sub_1DEB9FC40()
{
  unint64_t result = qword_1EBACA5D8;
  if (!qword_1EBACA5D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBACA5D8);
  }
  return result;
}

void sub_1DEB9FC80()
{
  if (!qword_1EBACA6C8)
  {
    unint64_t v0 = sub_1DFDFFC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACA6C8);
    }
  }
}

ValueMetadata *_s9DataStoreC4DataV9AggregateVMa()
{
  return &_s9DataStoreC4DataV9AggregateVN;
}

unint64_t sub_1DEB9FCF8()
{
  unint64_t result = qword_1EAC212A8;
  if (!qword_1EAC212A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC212A8);
  }
  return result;
}

void sub_1DEB9FD4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEB9FCF8();
    unint64_t v7 = a3(a1, &_s9DataStoreC4DataV9AggregateV10CodingKeysON, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *_s9DataStoreC4DataV9AggregateV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEB9FE7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9DataStoreC4DataV9AggregateV10CodingKeysOMa()
{
  return &_s9DataStoreC4DataV9AggregateV10CodingKeysON;
}

unint64_t sub_1DEB9FEB8()
{
  unint64_t result = qword_1EAC212B8;
  if (!qword_1EAC212B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC212B8);
  }
  return result;
}

unint64_t sub_1DEB9FF10()
{
  unint64_t result = qword_1EAC212C0;
  if (!qword_1EAC212C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC212C0);
  }
  return result;
}

unint64_t sub_1DEB9FF68()
{
  unint64_t result = qword_1EAC212C8;
  if (!qword_1EAC212C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC212C8);
  }
  return result;
}

uint64_t sub_1DEBA00B8()
{
  return type metadata accessor for ChannelPickerDetailViewController();
}

uint64_t type metadata accessor for ChannelPickerDetailViewController()
{
  uint64_t result = qword_1EAC212F0;
  if (!qword_1EAC212F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEBA010C()
{
  uint64_t result = type metadata accessor for ChannelPickerElementModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1DEBA01C0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for ChannelPickerElementModel();
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (long long *)((char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46.receiver = v0;
  v46.super_class = ObjectType;
  objc_msgSendSuper2(&v46, sel_viewDidLoad);
  sub_1DEB402FC((uint64_t)&v0[OBJC_IVAR____TtC7NewsUI233ChannelPickerDetailViewController_model], (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v5 = v4[7];
      long long v42 = v4[6];
      long long v43 = v5;
      *(_OWORD *)uint64_t v44 = v4[8];
      *(_OWORD *)&v44[9] = *(long long *)((char *)v4 + 137);
      long long v6 = v4[3];
      long long v38 = v4[2];
      long long v39 = v6;
      long long v7 = v4[5];
      long long v40 = v4[4];
      long long v41 = v7;
      long long v8 = v4[1];
      long long v36 = *v4;
      *((void *)&v37 + 1) = *((void *)&v8 + 1);
      id v9 = objc_msgSend(v0, sel_navigationItem, (void)v36, *((void *)&v36 + 1), (void)v8);
      if (*((void *)&v37 + 1))
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = (void *)sub_1DFDFDCE0();
        sub_1DEB40418((uint64_t)&v36);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1DEB40418((uint64_t)&v36);
        uint64_t v10 = 0;
      }
      objc_msgSend(v9, sel_setTitle_, v10);

      break;
    case 2u:
      long long v11 = v4[9];
      *(_OWORD *)uint64_t v44 = v4[8];
      *(_OWORD *)&v44[16] = v11;
      long long v45 = v4[10];
      long long v12 = v4[5];
      long long v40 = v4[4];
      long long v41 = v12;
      long long v13 = v4[7];
      long long v42 = v4[6];
      long long v43 = v13;
      long long v14 = v4[1];
      long long v36 = *v4;
      long long v15 = v4[2];
      long long v39 = v4[3];
      id v16 = objc_msgSend(v0, sel_navigationItem, (void)v36, *((void *)&v36 + 1), v14, v15, v39, v40, v41, v42, v13, *(_OWORD *)v44, *(_OWORD *)&v44[16], v45);
      unint64_t v17 = (void *)sub_1DFDFDCE0();
      objc_msgSend(v16, sel_setTitle_, v17);

      sub_1DEB403C4((uint64_t)&v36);
      break;
    default:
      sub_1DEBA1D2C((uint64_t)v4);
      break;
  }
  uint64_t v18 = *(void **)&v0[OBJC_IVAR____TtC7NewsUI233ChannelPickerDetailViewController_blueprintViewController];
  objc_msgSend(v0, sel_addChildViewController_, v18);
  id v19 = objc_msgSend(v0, sel_view);
  if (!v19)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v18, sel_view);
  if (!v21)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v22 = v21;
  objc_msgSend(v20, sel_addSubview_, v21);

  objc_msgSend(v18, sel_didMoveToParentViewController_, v0);
  id v23 = objc_msgSend(v18, sel_view);
  if (!v23)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v24 = v23;
  id v25 = objc_msgSend(v0, sel_view);
  if (!v25)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x1DEBA0544);
  }
  id v26 = v25;
  objc_msgSend(v25, sel_bounds);
  double v28 = v27;
  double v30 = v29;
  double v32 = v31;
  double v34 = v33;

  objc_msgSend(v24, sel_setFrame_, v28, v30, v32, v34);
  id v35 = objc_msgSend(v0, sel_traitCollection);
  sub_1DEBA1B4C();
}

uint64_t sub_1DEBA0808()
{
  uint64_t v19 = sub_1DFDF5B20();
  uint64_t v0 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DFDF5B30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  sub_1DFDF30C0();
  sub_1DEBA1A68();
  uint64_t v10 = (uint64_t *)&v6[*(int *)(v9 + 48)];
  long long v11 = &v6[*(int *)(v9 + 64)];
  sub_1DFDF1250();
  uint64_t v12 = *MEMORY[0x1E4FAC3F8];
  uint64_t v13 = sub_1DFDF1EE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = sub_1DFDF17D0();
  uint64_t v15 = MEMORY[0x1E4FAC1C8];
  v10[3] = v14;
  v10[4] = v15;
  __swift_allocate_boxed_opaque_existential_1(v10);
  sub_1DFDF1790();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAD868], v3);
  uint64_t v16 = v19;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4FAD880], v19);
  sub_1DFDF1750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DEBA0B20()
{
  uint64_t v0 = sub_1DFDF5B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF5B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF30C0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAD860], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAD880], v0);
  sub_1DFDF1750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DEBA0CFC()
{
  uint64_t v0 = sub_1DFDF5B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDF5B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DFDF30C0();
  if (qword_1EAC1D908 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EACE03C0;
  uint64_t v9 = sub_1DFDF3C70();
  uint64_t v10 = MEMORY[0x1E4FACFE8];
  v7[3] = v9;
  v7[4] = v10;
  *long long v7 = v8;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v12 = self;
  swift_retain();
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  uint64_t v14 = sub_1DFDFDDE0();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  v7[5] = v14;
  v7[6] = v16;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAD858], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAD888], v0);
  sub_1DFDF1750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DEBA0FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DFDF47F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (result == *MEMORY[0x1E4FAD508])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    if (result == *MEMORY[0x1E4FAD4E0])
    {
      uint64_t v10 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC7NewsUI233ChannelPickerDetailViewController_eventHandler) + 40);
      uint64_t ObjectType = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
    }
    if (result != *MEMORY[0x1E4FAD500] && result != *MEMORY[0x1E4FAD4E8])
    {
      if (result == *MEMORY[0x1E4FAD510]) {
        return result;
      }
      if (result != *MEMORY[0x1E4FAD528]) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
  uint64_t v13 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC7NewsUI233ChannelPickerDetailViewController_eventHandler) + 40);
  uint64_t v14 = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v14, v13);
}

uint64_t sub_1DEBA11E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD0](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1DEBA1250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD0](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1DEBA12B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AC0](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA1310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AC8](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA1368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD0](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1DEBA13D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBA14B0(a1, a2, a3, a4, sub_1DFD8E1B4);
}

uint64_t sub_1DEBA13E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD8](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA1440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD8](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA1498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBA14B0(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1DFD8DDC4);
}

uint64_t sub_1DEBA14B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v5 + OBJC_IVAR____TtC7NewsUI233ChannelPickerDetailViewController_eventHandler) + 88), *(void *)(*(void *)(v5 + OBJC_IVAR____TtC7NewsUI233ChannelPickerDetailViewController_eventHandler) + 112));
  return a5(a2);
}

uint64_t sub_1DEBA1504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD8](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA155C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD8](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA15B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD8](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA1610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162B28](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA1668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD0](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1DEBA16D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AE8](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1DEBA1738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162A88](a1, ObjectType, a3);
}

uint64_t sub_1DEBA1788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162A88](a1, ObjectType, a3);
}

uint64_t sub_1DEBA17D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AB8](a1, ObjectType, a3);
}

uint64_t sub_1DEBA1828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162A88](a1, ObjectType, a3);
}

uint64_t sub_1DEBA1878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162A88](a1, ObjectType, a3);
}

uint64_t sub_1DEBA18C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AC8](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA1920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162B30](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1DEBA1988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AA0](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA19E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AA0](a1, a2, ObjectType, a4);
}

uint64_t sub_1DEBA1A38()
{
  return sub_1DFDF31D0();
}

void sub_1DEBA1A68()
{
  if (!qword_1EBAEBC20)
  {
    sub_1DFDF1260();
    sub_1DEBA1AF4();
    sub_1DFDF1EE0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EBAEBC20);
    }
  }
}

unint64_t sub_1DEBA1AF4()
{
  unint64_t result = qword_1EBAEBE60;
  if (!qword_1EBAEBE60)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAEBE60);
  }
  return result;
}

void sub_1DEBA1B4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7NewsUI233ChannelPickerDetailViewController_styler];
  sub_1DE94F204((uint64_t)&v0[OBJC_IVAR____TtC7NewsUI233ChannelPickerDetailViewController_styler], (uint64_t)v12);
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  id v4 = objc_msgSend(v0, sel_view);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_setBackgroundColor_, *(void *)(*__swift_project_boxed_opaque_existential_1((void *)(*v3 + 16), *(void *)(*v3 + 40))+ OBJC_IVAR____TtC7NewsUI210BaseStyler_theme));

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v6 = __swift_project_boxed_opaque_existential_1(v2, *((void *)v2 + 3));
    sub_1DFDF30E0();
    uint64_t v7 = (void *)sub_1DFDF26C0();
    swift_release();
    objc_msgSend(v7, sel_setBackgroundColor_, *(void *)(*__swift_project_boxed_opaque_existential_1((void *)(*v6 + 16), *(void *)(*v6 + 40))+ OBJC_IVAR____TtC7NewsUI210BaseStyler_theme));
    objc_msgSend(v7, sel_setAlwaysBounceVertical_, 1);

    uint64_t v8 = __swift_project_boxed_opaque_existential_1(v2, *((void *)v2 + 3));
    id v9 = objc_msgSend(v1, sel_navigationItem);
    id v10 = *(id *)(*__swift_project_boxed_opaque_existential_1((void *)(*v8 + 16), *(void *)(*v8 + 40))+ OBJC_IVAR____TtC7NewsUI210BaseStyler_theme);
    sub_1DFDF70D0();

    objc_msgSend(v9, sel_setLargeTitleDisplayMode_, 2);
    long long v11 = (void *)sub_1DFDFDCE0();
    objc_msgSend(v9, sel_setBackButtonTitle_, v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DEBA1D2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChannelPickerElementModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for SportsNavigationPrewarmBlueprintModifier()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SportsNavigationPrewarmBlueprintModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsNavigationPrewarmBlueprintModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SportsNavigationPrewarmBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsNavigationPrewarmBlueprintModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsNavigationPrewarmBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsNavigationPrewarmBlueprintModifier()
{
  return &type metadata for SportsNavigationPrewarmBlueprintModifier;
}

uint64_t sub_1DEBA203C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  sub_1DEBA2B28(0, &qword_1EAC21308, MEMORY[0x1E4FACA00]);
  uint64_t v5 = v4;
  uint64_t v6 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  char v54 = (char *)&v45 - v7;
  sub_1DEBA28AC();
  uint64_t v58 = v8;
  uint64_t v52 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBA2908();
  MEMORY[0x1F4188790](v11 - 8);
  CGFloat v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBA2B28(0, (unint64_t *)&qword_1EAC20278, MEMORY[0x1E4FAC180]);
  uint64_t v60 = v13;
  uint64_t v49 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  double v59 = (char *)&v45 - v14;
  sub_1DEBA29FC();
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (unint64_t)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBA2B28(0, (unint64_t *)&qword_1EAC202A8, MEMORY[0x1E4FAD830]);
  uint64_t v47 = *(void *)(v18 - 8);
  uint64_t v48 = v18;
  MEMORY[0x1F4188790](v18);
  CGFloat v57 = (char *)&v45 - v19;
  unint64_t v20 = v3[4];
  uint64_t v50 = v3[5];
  uint64_t v21 = v3[6];
  unint64_t v64 = v20;
  v65[0] = v20;
  if (!(v20 >> 62))
  {
    uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22)
    {
      if ((v20 & 0xC000000000000001) != 0)
      {
        uint64_t v53 = MEMORY[0x1E01EE240](0, v20);
        goto LABEL_6;
      }
LABEL_4:
      if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_24:
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_1DFDFFBE0();
        uint64_t result = swift_bridgeObjectRelease();
        if (v33) {
          goto LABEL_9;
        }
        goto LABEL_25;
      }
      uint64_t v53 = *(void *)(v20 + 32);
      swift_retain();
LABEL_6:
      if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
LABEL_21:
    sub_1DEBA2BAC((uint64_t)v65);
    sub_1DEB0C724();
    sub_1DEB0C778();
    long long v40 = v54;
    sub_1DFDF3030();
    v56(v40);
    return (*(uint64_t (**)(char *, void))(v6 + 8))(v40, v5);
  }
  swift_bridgeObjectRetain_n();
  uint64_t v36 = sub_1DFDFFBE0();
  sub_1DEBA2BAC((uint64_t)v65);
  if (!v36) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1DFDFFBE0();
  uint64_t result = sub_1DEBA2BAC((uint64_t)v65);
  if (!v37)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1DFDFFBE0();
  uint64_t result = sub_1DEBA2BAC((uint64_t)v65);
  if (!v38)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((v20 & 0xC000000000000001) == 0) {
    goto LABEL_4;
  }
  uint64_t v53 = MEMORY[0x1E01EE240](0, v20);
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1DFDFFBE0();
  sub_1DEBA2BAC((uint64_t)v65);
  if (!v39)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_7:
  uint64_t v45 = v6;
  objc_super v46 = v5;
  sub_1DEBF52A8(0, 1);
  uint64_t v23 = sub_1DEBA2AC8(&qword_1EAC21330);
  uint64_t v24 = sub_1DEBA2AC8(&qword_1EAC21338);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v60, v23, v24);
  unint64_t v26 = sub_1DEB0C724();
  sub_1DEB0C778();
  sub_1DFDF5A70();
  uint64_t v27 = v53;
  uint64_t v61 = *(void *)(v53 + 16);
  uint64_t v62 = v50;
  uint64_t v63 = v21;
  uint64_t v28 = sub_1DEBA29B8(&qword_1EAC21318);
  uint64_t v29 = sub_1DEBA29B8(&qword_1EAC21320);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v30 = v25;
  uint64_t v31 = v58;
  MEMORY[0x1E01DBA70](v30, v58, v28, v29);
  CGFloat v51 = (char *)v26;
  sub_1DFDF14C0();
  uint64_t v61 = v27;
  swift_retain();
  sub_1DFDF0B40();
  sub_1DFDF1530();
  uint64_t v5 = *(uint64_t (**)(void, void))(v52 + 8);
  uint64_t result = v5(v10, v31);
  unint64_t v17 = v64;
  if (v64 >> 62) {
    goto LABEL_24;
  }
  uint64_t v33 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v33)
  {
LABEL_9:
    if (v33 >= 1)
    {
      uint64_t v34 = 0;
      do
      {
        if ((v17 & 0xC000000000000001) != 0)
        {
          uint64_t v35 = MEMORY[0x1E01EE240](v34, v17);
        }
        else
        {
          uint64_t v35 = *(void *)(v17 + 8 * v34 + 32);
          swift_retain();
        }
        ++v34;
        uint64_t v61 = v35;
        swift_retain();
        sub_1DFDF0B40();
        sub_1DFDF1530();
        swift_release();
        v5(v10, v58);
      }
      while (v33 != v34);
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  long long v41 = v59;
  uint64_t v42 = v48;
  long long v43 = v57;
  sub_1DFDF5990();
  uint64_t v44 = v54;
  sub_1DFDF3030();
  v56(v44);
  swift_release();
  (*(void (**)(char *, uint64_t (*)(void, void)))(v45 + 8))(v44, v46);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v41, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v43, v42);
}

unint64_t sub_1DEBA2850()
{
  unint64_t result = qword_1EAC21300;
  if (!qword_1EAC21300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21300);
  }
  return result;
}

void sub_1DEBA28AC()
{
  if (!qword_1EAC202B8)
  {
    sub_1DEB0C778();
    unint64_t v0 = sub_1DFDF0B70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC202B8);
    }
  }
}

void sub_1DEBA2908()
{
  if (!qword_1EAC21310)
  {
    sub_1DEBA28AC();
    sub_1DEBA29B8(&qword_1EAC21318);
    sub_1DEBA29B8(&qword_1EAC21320);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21310);
    }
  }
}

uint64_t sub_1DEBA29B8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEBA28AC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEBA29FC()
{
  if (!qword_1EAC21328)
  {
    sub_1DEBA2B28(255, (unint64_t *)&qword_1EAC20278, MEMORY[0x1E4FAC180]);
    sub_1DEBA2AC8(&qword_1EAC21330);
    sub_1DEBA2AC8(&qword_1EAC21338);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21328);
    }
  }
}

uint64_t sub_1DEBA2AC8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEBA2B28(255, (unint64_t *)&qword_1EAC20278, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEBA2B28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for SportsNavigationSectionDescriptor;
    v8[1] = &type metadata for SportsNavigationModel;
    void v8[2] = sub_1DEB0C724();
    v8[3] = sub_1DEB0C778();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DEBA2BAC(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for AudioFeedFormatBlueprintAnimatorFactory()
{
  return self;
}

uint64_t sub_1DEBA2C00(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DEBA2D3C();
  uint64_t result = sub_1DFDECCB0();
  if (result)
  {
    uint64_t v4 = result;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DEBA2E28();
    uint64_t result = sub_1DFDECCB0();
    if (result)
    {
      uint64_t v5 = result;
      type metadata accessor for AudioHScrollBlueprintAnimator();
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v4;
      *(void *)(v6 + 24) = v5;
      sub_1DEBA34BC(&qword_1EBAF6768, (void (*)(uint64_t))type metadata accessor for AudioHScrollBlueprintAnimator);
      sub_1DFDF3C80();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DEBA2D3C()
{
  if (!qword_1EBACBF38[0])
  {
    sub_1DFDFC120();
    sub_1DFDFA530();
    sub_1DEBA34BC((unint64_t *)&unk_1EBAE9EC0, MEMORY[0x1E4F81260]);
    sub_1DEBA34BC(&qword_1EBAE9CB0, MEMORY[0x1E4F80820]);
    unint64_t v0 = sub_1DFDF1AB0();
    if (!v1) {
      atomic_store(v0, qword_1EBACBF38);
    }
  }
}

void sub_1DEBA2E28()
{
  if (!qword_1EBAF5F60)
  {
    sub_1DEABCDF4();
    sub_1DEBA2F94();
    sub_1DEBA3250();
    sub_1DEBA33D0();
    sub_1DFDFB9B0();
    sub_1DEBA34BC(&qword_1EBAF5FD8, (void (*)(uint64_t))sub_1DEBA2F94);
    sub_1DEBA34BC(&qword_1EBAF5FB0, (void (*)(uint64_t))sub_1DEBA3250);
    sub_1DEBA34BC(&qword_1EBAF5FE8, (void (*)(uint64_t))sub_1DEBA33D0);
    unint64_t v0 = sub_1DFDF26E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF5F60);
    }
  }
}

void sub_1DEBA2F94()
{
  if (!qword_1EBAF5FE0)
  {
    sub_1DEBA2D3C();
    sub_1DEBA3164();
    sub_1DFDFD070();
    sub_1DFDF6D50();
    sub_1DEBA34BC((unint64_t *)&qword_1EBAD3028, (void (*)(uint64_t))sub_1DEBA2D3C);
    sub_1DEBA34BC(&qword_1EBAF5F68, (void (*)(uint64_t))sub_1DEBA3164);
    sub_1DEBA34BC((unint64_t *)&unk_1EBAF6D70, MEMORY[0x1E4F818A8]);
    sub_1DEBA34BC(&qword_1EBAF6CE8, MEMORY[0x1E4F7F1C0]);
    sub_1DEBA34BC((unint64_t *)&unk_1EBAF6D38, MEMORY[0x1E4F80BC8]);
    unint64_t v0 = sub_1DFDF4430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF5FE0);
    }
  }
}

void sub_1DEBA3164()
{
  if (!qword_1EBAF5F70)
  {
    sub_1DFDFCC90();
    sub_1DFDFB070();
    sub_1DEBA34BC(&qword_1EBAF6D68, MEMORY[0x1E4F81728]);
    sub_1DEBA34BC(&qword_1EBAF6D30, MEMORY[0x1E4F80BC8]);
    unint64_t v0 = sub_1DFDF2FE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF5F70);
    }
  }
}

void sub_1DEBA3250()
{
  if (!qword_1EBAF5FB8)
  {
    sub_1DEBA2D3C();
    sub_1DEBA3164();
    sub_1DFDFB9B0();
    sub_1DEBA34BC((unint64_t *)&qword_1EBAD3028, (void (*)(uint64_t))sub_1DEBA2D3C);
    sub_1DEBA34BC(&qword_1EBAF5F68, (void (*)(uint64_t))sub_1DEBA3164);
    sub_1DEBA34BC(&qword_1EBAF6D60, MEMORY[0x1E4F80F50]);
    sub_1DEBA34BC((unint64_t *)&unk_1EBAF6D38, MEMORY[0x1E4F80BC8]);
    unint64_t v0 = sub_1DFDF40A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF5FB8);
    }
  }
}

void sub_1DEBA33D0()
{
  if (!qword_1EBAF5FF0)
  {
    sub_1DEBA2D3C();
    sub_1DEBA3164();
    sub_1DEBA34BC((unint64_t *)&qword_1EBAD3028, (void (*)(uint64_t))sub_1DEBA2D3C);
    sub_1DEBA34BC(&qword_1EBAF5F68, (void (*)(uint64_t))sub_1DEBA3164);
    unint64_t v0 = sub_1DFDF47B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF5FF0);
    }
  }
}

uint64_t sub_1DEBA34BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TagFeedOfflineModel()
{
  return &type metadata for TagFeedOfflineModel;
}

uint64_t sub_1DEBA3514()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EBB62A98);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB62A98);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEBFAC0);
  sub_1DFDE6ED0();

  return sub_1DFDFA650();
}

uint64_t sub_1DEBA36BC()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EACDF648);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF648);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEBF990);
  sub_1DFDE6ED0();

  return sub_1DFDFA650();
}

uint64_t sub_1DEBA3864()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EACDF660);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF660);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEBFDB0);
  sub_1DFDE6ED0();

  return sub_1DFDFA650();
}

uint64_t sub_1DEBA3A0C()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EACDF678);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF678);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEBFCB0);
  sub_1DFDE6ED0();

  return sub_1DFDFA650();
}

uint64_t sub_1DEBA3BB4()
{
  uint64_t v0 = sub_1DFDFA6C0();
  __swift_allocate_value_buffer(v0, qword_1EACDF690);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDF690);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DFEBFBB0);
  sub_1DFDE6ED0();

  return sub_1DFDFA650();
}

uint64_t sub_1DEBA3D5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EBAD0B18, (uint64_t)qword_1EBB62A98, a1);
}

uint64_t sub_1DEBA3D84@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EAC1CB40, (uint64_t)qword_1EACDF648, a1);
}

uint64_t sub_1DEBA3DA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EAC1CB48, (uint64_t)qword_1EACDF660, a1);
}

uint64_t sub_1DEBA3DCC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EAC1CB50, (uint64_t)qword_1EACDF678, a1);
}

uint64_t sub_1DEBA3DF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA3E14(&qword_1EAC1CB58, (uint64_t)qword_1EACDF690, a1);
}

uint64_t sub_1DEBA3E14@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DFDFA6C0();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t initializeBufferWithCopyOfBuffer for ContinueReadingContentType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1DEB2EF54(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for ContinueReadingContentType(uint64_t a1)
{
}

uint64_t assignWithCopy for ContinueReadingContentType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1DEB2EF54(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1DEB2F130(v5, v6);
  return a1;
}

uint64_t assignWithTake for ContinueReadingContentType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1DEB2F130(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContinueReadingContentType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContinueReadingContentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DEBA4028(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1DEBA4030(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContinueReadingContentType()
{
  return &type metadata for ContinueReadingContentType;
}

uint64_t sub_1DEBA4048(void *a1, char a2)
{
  if (a2)
  {
    if (a2 == 1) {
      id v4 = a1;
    }
    else {
      id v4 = (id)swift_unknownObjectRetain();
    }
    char v5 = &selRef_identifier;
  }
  else
  {
    id v4 = (id)swift_unknownObjectRetain();
    char v5 = &selRef_articleID;
  }
  id v6 = [v4 *v5];
  uint64_t v7 = sub_1DFDFDD20();

  sub_1DEB2F130(a1, a2);
  return v7;
}

uint64_t sub_1DEBA40F0()
{
  return sub_1DEBA4048(*(void **)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1DEBA40FC()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DFDE6ED0();

  return v2;
}

uint64_t sub_1DEBA41F4(void *a1, char a2)
{
  if (a2)
  {
    if (a2 == 1)
    {
      id v3 = a1;
      id v4 = objc_msgSend(v3, sel_title);
      uint64_t v5 = sub_1DFDFDD20();
      uint64_t v7 = v6;

      id v8 = objc_msgSend(v3, sel_coverDate);
      uint64_t v9 = sub_1DFDFDD20();
      unint64_t v11 = v10;

      uint64_t v12 = sub_1DEBA45B4(v9, v11, v5, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = a1;
      char v14 = 1;
    }
    else
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_1DEBA4760();
      uint64_t v13 = a1;
      char v14 = 2;
    }
    sub_1DEB2F130(v13, v14);
    return v12;
  }
  else
  {
    id v15 = objc_msgSend((id)swift_unknownObjectRetain(), sel_titleCompact);
    if (v15 || (id v15 = objc_msgSend(a1, sel_title)) != 0)
    {
      uint64_t v16 = sub_1DFDFDD20();
      uint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v18 = 0xE000000000000000;
    }
    id v19 = objc_msgSend(a1, sel_sourceChannel);
    if (v19)
    {
      id v20 = objc_msgSend(v19, sel_name);
      swift_unknownObjectRelease();
      uint64_t v21 = sub_1DFDFDD20();
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      unint64_t v23 = 0xE000000000000000;
    }
    uint64_t v25 = sub_1DEBA4408(v21, v23, v16, v18);
    sub_1DEB2F130(a1, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v25;
  }
}

uint64_t sub_1DEBA4408(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    sub_1DEA6A700(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1DFE0B750;
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1DEA08668();
    *(void *)(v11 + 32) = a3;
    *(void *)(v11 + 40) = a4;
    *(void *)(v11 + 96) = v12;
    *(void *)(v11 + 104) = v13;
    *(void *)(v11 + 64) = v13;
    *(void *)(v11 + 72) = a1;
    *(void *)(v11 + 80) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3 = sub_1DFDFDCF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a3;
}

uint64_t sub_1DEBA45B4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DFDE6ED0();

    sub_1DEA6A700(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1DFE0B750;
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1DEA08668();
    *(void *)(v11 + 32) = a1;
    *(void *)(v11 + 40) = a2;
    *(void *)(v11 + 96) = v12;
    *(void *)(v11 + 104) = v13;
    *(void *)(v11 + 64) = v13;
    *(void *)(v11 + 72) = a3;
    *(void *)(v11 + 80) = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3 = sub_1DFDFDCF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a3;
}

uint64_t sub_1DEBA4760()
{
  uint64_t v1 = sub_1DEBA4988(v0);
  uint64_t v3 = v2;
  id v4 = objc_msgSend(objc_msgSend(v0, sel_puzzleType), sel_name);
  swift_unknownObjectRelease();
  sub_1DFDFDD20();

  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DEA8C6EC(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v7 = v5[2];
    unint64_t v6 = v5[3];
    if (v7 >= v6 >> 1) {
      uint64_t v5 = sub_1DEA8C6EC((void *)(v6 > 1), v7 + 1, 1, v5);
    }
    v5[2] = v7 + 1;
    id v8 = &v5[2 * v7];
    void v8[4] = v1;
    v8[5] = v3;
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_1DEA8C6EC(0, v5[2] + 1, 1, v5);
  }
  unint64_t v10 = v5[2];
  unint64_t v9 = v5[3];
  if (v10 >= v9 >> 1) {
    uint64_t v5 = sub_1DEA8C6EC((void *)(v9 > 1), v10 + 1, 1, v5);
  }
  v5[2] = v10 + 1;
  uint64_t v11 = &v5[2 * v10];
  v11[4] = 0x2B7377654EBFA3EFLL;
  v11[5] = 0xA900000000000020;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DEA976F4(0, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB320]);
  sub_1DEBA4E98();
  uint64_t v12 = sub_1DFDFDC10();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1DEBA4988(void *a1)
{
  uint64_t v2 = sub_1DFDE7600();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA6A700(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  unint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if ((objc_msgSend(a1, sel_behaviorFlags) & 2) == 0)
  {
    id v14 = objc_msgSend(a1, sel_publishDate);
    if (v14)
    {
      id v15 = v14;
      sub_1DFDE7570();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
    }
    sub_1DEA1F784((uint64_t)v11, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
    {
      uint64_t v12 = 0;
      uint64_t v13 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
      uint64_t v17 = (void *)sub_1DFDFDCE0();
      objc_msgSend(v16, sel_setDateFormat_, v17);

      uint64_t v18 = (void *)sub_1DFDE74D0();
      id v19 = objc_msgSend(v16, sel_stringFromDate_, v18);

      uint64_t v12 = sub_1DFDFDD20();
      uint64_t v13 = v20;

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    sub_1DEAEA868((uint64_t)v11);
  }
  id v21 = objc_msgSend(a1, sel_subtitle);
  if (v21)
  {
    unint64_t v22 = v21;
    uint64_t v23 = sub_1DFDFDD20();
    unint64_t v25 = v24;

    uint64_t v26 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0) {
      uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
    }
    if (v26)
    {
      uint64_t v39 = 10256610;
      unint64_t v40 = 0xA300000000000000;
      sub_1DFDFDE90();
      swift_bridgeObjectRelease();
      sub_1DFDFDE90();
      uint64_t v28 = v39;
      unint64_t v27 = v40;
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = 0;
  unint64_t v27 = 0;
LABEL_16:
  sub_1DEBA4F0C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B750;
  *(void *)(inited + 32) = v12;
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 48) = v28;
  *(void *)(inited + 56) = v27;
  if (!v13)
  {
    uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
    if (!v27) {
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1DEA8C6EC(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v32 = v30[2];
  unint64_t v31 = v30[3];
  if (v32 >= v31 >> 1) {
    uint64_t v30 = sub_1DEA8C6EC((void *)(v31 > 1), v32 + 1, 1, v30);
  }
  v30[2] = v32 + 1;
  uint64_t v33 = &v30[2 * v32];
  v33[4] = v12;
  v33[5] = v13;
  if (v27)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v30 = sub_1DEA8C6EC(0, v30[2] + 1, 1, v30);
    }
    unint64_t v35 = v30[2];
    unint64_t v34 = v30[3];
    if (v35 >= v34 >> 1) {
      uint64_t v30 = sub_1DEA8C6EC((void *)(v34 > 1), v35 + 1, 1, v30);
    }
    v30[2] = v35 + 1;
    uint64_t v36 = &v30[2 * v35];
    v36[4] = v28;
    v36[5] = v27;
  }
LABEL_27:
  swift_release();
  if (v30[2])
  {
    uint64_t v39 = (uint64_t)v30;
    sub_1DEA976F4(0, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB320]);
    sub_1DEBA4E98();
    uint64_t v37 = sub_1DFDFDC10();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v37;
}

unint64_t sub_1DEBA4E98()
{
  unint64_t result = qword_1EBABA910;
  if (!qword_1EBABA910)
  {
    sub_1DEA976F4(255, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABA910);
  }
  return result;
}

void sub_1DEBA4F0C()
{
  if (!qword_1EBABB700)
  {
    sub_1DEA976F4(255, (unint64_t *)&qword_1EBABA650, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1DFDFFEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABB700);
    }
  }
}

void sub_1DEBA4F84(uint64_t a1, void *a2, void *a3, char a4)
{
  switch(a4)
  {
    case 0:
      swift_unknownObjectRetain();
      id v5 = a3;
      break;
    case 1:
      id v6 = a2;
      break;
    case 2:
    case 3:
      swift_bridgeObjectRetain();
      break;
    default:
      return;
  }
}

void destroy for OfflineIssuePruningRule(uint64_t a1)
{
}

void sub_1DEBA5038(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  switch(a4)
  {
    case 0:
      swift_unknownObjectRelease();

      break;
    case 1:
      MEMORY[0x1F41817F8]();
      break;
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for OfflineIssuePruningRule(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_1DEBA4F84(v3, v4, v5, v6);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for OfflineIssuePruningRule(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_1DEBA4F84(v3, v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  sub_1DEBA5038(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for OfflineIssuePruningRule(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  char v6 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  char v8 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_1DEBA5038(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineIssuePruningRule(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[33]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineIssuePruningRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineIssuePruningRule()
{
  return &type metadata for OfflineIssuePruningRule;
}

uint64_t *sub_1DEBA52AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DFDE7600();
    uint64_t v8 = *(void *)(v7 - 8);
    long long v41 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v40 = v8;
    if (v41(a2, 1, v7))
    {
      sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = type metadata accessor for AudioFeedConfig();
    *(uint64_t *)((char *)a1 + *(int *)(v12 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(v12 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 24));
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v43 = a3;
    id v14 = (char *)a1 + v13;
    id v15 = (char *)a2 + v13;
    sub_1DEA83BAC();
    uint64_t v17 = v16;
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v14, v15, v17);
    uint64_t AudioFeedGroupKnobs = type metadata accessor for UpNextAudioFeedGroupKnobs();
    *(void *)&v14[*(int *)(AudioFeedGroupKnobs + 20)] = *(void *)&v15[*(int *)(AudioFeedGroupKnobs + 20)];
    *(void *)&v14[*(int *)(AudioFeedGroupKnobs + 24)] = *(void *)&v15[*(int *)(AudioFeedGroupKnobs + 24)];
    uint64_t v44 = a1;
    uint64_t v19 = type metadata accessor for AudioFeedGroupKnobs();
    uint64_t v20 = *(int *)(v19 + 20);
    id v21 = &v14[v20];
    unint64_t v22 = &v15[v20];
    swift_retain();
    swift_retain();
    v42(v21, v22, v17);
    uint64_t v23 = type metadata accessor for ForYouAudioFeedGroupKnobs();
    *(void *)&v21[*(int *)(v23 + 20)] = *(void *)&v22[*(int *)(v23 + 20)];
    *(void *)&v21[*(int *)(v23 + 24)] = *(void *)&v22[*(int *)(v23 + 24)];
    uint64_t v24 = *(int *)(v19 + 24);
    uint64_t v11 = v44;
    *(void *)&v14[v24] = *(void *)&v15[v24];
    uint64_t v25 = type metadata accessor for AudioFeedKnobsConfig();
    *(void *)&v14[*(int *)(v25 + 20)] = *(void *)&v15[*(int *)(v25 + 20)];
    uint64_t v26 = *(int *)(v43 + 24);
    unint64_t v27 = (char *)v44 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = (int *)type metadata accessor for LegacyAudioFeedConfiguration();
    uint64_t v30 = *((void *)v29 - 1);
    unint64_t v31 = *(unsigned int (**)(char *, uint64_t, int *))(v30 + 48);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      sub_1DEA20134(0, (unint64_t *)&unk_1EBADE9A0, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedConfiguration);
      memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      if (v41((uint64_t *)v28, 1, v7))
      {
        sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
        memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v27, v28, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v27, 0, 1, v7);
      }
      uint64_t v34 = v29[5];
      unint64_t v35 = &v27[v34];
      uint64_t v36 = &v28[v34];
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)unint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = v37;
      *(void *)&v27[v29[6]] = *(void *)&v28[v29[6]];
      v27[v29[7]] = v28[v29[7]];
      *(void *)&v27[v29[8]] = *(void *)&v28[v29[8]];
      uint64_t v38 = *(void (**)(char *, void, uint64_t, int *))(v30 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v27, 0, 1, v29);
    }
  }
  return v11;
}

char *sub_1DEBA5770(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  uint64_t v48 = v8;
  uint64_t v47 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for AudioFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(v12 + 24)] = *(void *)&a2[*(int *)(v12 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 20);
  id v14 = &a1[v13];
  id v15 = &a2[v13];
  sub_1DEA83BAC();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24);
  v18(v14, v15, v16);
  uint64_t v49 = a1;
  uint64_t v19 = a3;
  uint64_t AudioFeedGroupKnobs = type metadata accessor for UpNextAudioFeedGroupKnobs();
  *(void *)&v14[*(int *)(AudioFeedGroupKnobs + 20)] = *(void *)&v15[*(int *)(AudioFeedGroupKnobs + 20)];
  swift_retain();
  swift_release();
  *(void *)&v14[*(int *)(AudioFeedGroupKnobs + 24)] = *(void *)&v15[*(int *)(AudioFeedGroupKnobs + 24)];
  swift_retain();
  swift_release();
  uint64_t v21 = type metadata accessor for AudioFeedGroupKnobs();
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = &v14[v22];
  uint64_t v24 = &v15[v22];
  v18(&v14[v22], &v15[v22], v17);
  uint64_t v25 = type metadata accessor for ForYouAudioFeedGroupKnobs();
  *(void *)&v23[*(int *)(v25 + 20)] = *(void *)&v24[*(int *)(v25 + 20)];
  swift_retain();
  swift_release();
  *(void *)&v23[*(int *)(v25 + 24)] = *(void *)&v24[*(int *)(v25 + 24)];
  swift_retain();
  swift_release();
  *(void *)&v14[*(int *)(v21 + 24)] = *(void *)&v15[*(int *)(v21 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = type metadata accessor for AudioFeedKnobsConfig();
  *(void *)&v14[*(int *)(v26 + 20)] = *(void *)&v15[*(int *)(v26 + 20)];
  uint64_t v27 = *(int *)(v19 + 24);
  uint64_t v28 = &v49[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = (int *)type metadata accessor for LegacyAudioFeedConfiguration();
  uint64_t v31 = *((void *)v30 - 1);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, int *))(v31 + 48);
  LODWORD(v15) = v32(v28, 1, v30);
  int v33 = v32(v29, 1, v30);
  if (!v15)
  {
    if (v33)
    {
      sub_1DEBA5E34((uint64_t)v28);
      goto LABEL_13;
    }
    int v36 = v48(v28, 1, v6);
    int v37 = v48(v29, 1, v6);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v28, v29, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v28, 0, 1, v6);
LABEL_23:
        uint64_t v43 = v30[5];
        uint64_t v44 = &v28[v43];
        uint64_t v45 = &v29[v43];
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = *((void *)v45 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v28[v30[7]] = v29[v30[7]];
        *(void *)&v28[v30[8]] = *(void *)&v29[v30[8]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return v49;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v28, v29, v6);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v6);
    }
    sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(v28, v29, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_23;
  }
  if (v33)
  {
LABEL_13:
    sub_1DEA20134(0, (unint64_t *)&unk_1EBADE9A0, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedConfiguration);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    return v49;
  }
  if (v48(v29, 1, v6))
  {
    sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v28, v29, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v28, 0, 1, v6);
  }
  uint64_t v38 = v30[5];
  uint64_t v39 = &v28[v38];
  uint64_t v40 = &v29[v38];
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
  v28[v30[7]] = v29[v30[7]];
  *(void *)&v28[v30[8]] = *(void *)&v29[v30[8]];
  long long v41 = *(void (**)(char *, void, uint64_t, int *))(v31 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41(v28, 0, 1, v30);
  return v49;
}

uint64_t sub_1DEBA5E34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LegacyAudioFeedConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1DEBA5E90(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v31 = v7;
  if (v32(a2, 1, v6))
  {
    sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for AudioFeedConfig();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v33 = a3;
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  sub_1DEA83BAC();
  uint64_t v14 = v13;
  id v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v15(v11, v12, v13);
  uint64_t AudioFeedGroupKnobs = type metadata accessor for UpNextAudioFeedGroupKnobs();
  *(void *)&v11[*(int *)(AudioFeedGroupKnobs + 20)] = *(void *)&v12[*(int *)(AudioFeedGroupKnobs + 20)];
  *(void *)&v11[*(int *)(AudioFeedGroupKnobs + 24)] = *(void *)&v12[*(int *)(AudioFeedGroupKnobs + 24)];
  uint64_t v17 = type metadata accessor for AudioFeedGroupKnobs();
  uint64_t v18 = *(int *)(v17 + 20);
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  v15(&v11[v18], &v12[v18], v14);
  uint64_t v21 = type metadata accessor for ForYouAudioFeedGroupKnobs();
  *(void *)&v19[*(int *)(v21 + 20)] = *(void *)&v20[*(int *)(v21 + 20)];
  *(void *)&v19[*(int *)(v21 + 24)] = *(void *)&v20[*(int *)(v21 + 24)];
  *(void *)&v11[*(int *)(v17 + 24)] = *(void *)&v12[*(int *)(v17 + 24)];
  uint64_t v22 = type metadata accessor for AudioFeedKnobsConfig();
  *(void *)&v11[*(int *)(v22 + 20)] = *(void *)&v12[*(int *)(v22 + 20)];
  uint64_t v23 = *(int *)(v33 + 24);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = (int *)type metadata accessor for LegacyAudioFeedConfiguration();
  uint64_t v27 = *((void *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    sub_1DEA20134(0, (unint64_t *)&unk_1EBADE9A0, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedConfiguration);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    if (v32(v25, 1, v6))
    {
      sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
      memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v24, v25, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v24, 0, 1, v6);
    }
    *(_OWORD *)&v24[v26[5]] = *(_OWORD *)&v25[v26[5]];
    *(void *)&v24[v26[6]] = *(void *)&v25[v26[6]];
    v24[v26[7]] = v25[v26[7]];
    *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

char *sub_1DEBA62A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DFDE7600();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  objc_super v46 = v8;
  uint64_t v45 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for AudioFeedConfig();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(v12 + 24)] = *(void *)&a2[*(int *)(v12 + 24)];
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  id v15 = &a2[v13];
  sub_1DEA83BAC();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40);
  v18(v14, v15, v16);
  uint64_t v47 = a1;
  uint64_t v19 = a3;
  uint64_t AudioFeedGroupKnobs = type metadata accessor for UpNextAudioFeedGroupKnobs();
  *(void *)&v14[*(int *)(AudioFeedGroupKnobs + 20)] = *(void *)&v15[*(int *)(AudioFeedGroupKnobs + 20)];
  swift_release();
  *(void *)&v14[*(int *)(AudioFeedGroupKnobs + 24)] = *(void *)&v15[*(int *)(AudioFeedGroupKnobs + 24)];
  swift_release();
  uint64_t v21 = type metadata accessor for AudioFeedGroupKnobs();
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = &v14[v22];
  uint64_t v24 = &v15[v22];
  v18(&v14[v22], &v15[v22], v17);
  uint64_t v25 = type metadata accessor for ForYouAudioFeedGroupKnobs();
  *(void *)&v23[*(int *)(v25 + 20)] = *(void *)&v24[*(int *)(v25 + 20)];
  swift_release();
  *(void *)&v23[*(int *)(v25 + 24)] = *(void *)&v24[*(int *)(v25 + 24)];
  swift_release();
  *(void *)&v14[*(int *)(v21 + 24)] = *(void *)&v15[*(int *)(v21 + 24)];
  swift_bridgeObjectRelease();
  uint64_t v26 = type metadata accessor for AudioFeedKnobsConfig();
  *(void *)&v14[*(int *)(v26 + 20)] = *(void *)&v15[*(int *)(v26 + 20)];
  uint64_t v27 = *(int *)(v19 + 24);
  uint64_t v28 = &v47[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = (int *)type metadata accessor for LegacyAudioFeedConfiguration();
  uint64_t v31 = *((void *)v30 - 1);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, int *))(v31 + 48);
  LODWORD(v15) = v32(v28, 1, v30);
  int v33 = v32(v29, 1, v30);
  if (!v15)
  {
    if (v33)
    {
      sub_1DEBA5E34((uint64_t)v28);
      goto LABEL_13;
    }
    int v36 = v46(v28, 1, v6);
    int v37 = v46(v29, 1, v6);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v28, v29, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v28, 0, 1, v6);
LABEL_23:
        uint64_t v39 = v30[5];
        uint64_t v40 = &v28[v39];
        long long v41 = &v29[v39];
        uint64_t v43 = *(void *)v41;
        uint64_t v42 = *((void *)v41 + 1);
        *(void *)uint64_t v40 = v43;
        *((void *)v40 + 1) = v42;
        swift_bridgeObjectRelease();
        *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
        swift_bridgeObjectRelease();
        v28[v30[7]] = v29[v30[7]];
        *(void *)&v28[v30[8]] = *(void *)&v29[v30[8]];
        swift_bridgeObjectRelease();
        return v47;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v28, v29, v6);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v6);
    }
    sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(v28, v29, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  if (v33)
  {
LABEL_13:
    sub_1DEA20134(0, (unint64_t *)&unk_1EBADE9A0, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedConfiguration);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    return v47;
  }
  if (v46(v29, 1, v6))
  {
    sub_1DEA20134(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928]);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v28, v29, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v28, 0, 1, v6);
  }
  *(_OWORD *)&v28[v30[5]] = *(_OWORD *)&v29[v30[5]];
  *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
  v28[v30[7]] = v29[v30[7]];
  *(void *)&v28[v30[8]] = *(void *)&v29[v30[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
  return v47;
}

uint64_t sub_1DEBA68E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AudioFeedConfig();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for AudioFeedKnobsConfig();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_1DEA20134(0, (unint64_t *)&unk_1EBADE9A0, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedConfiguration);
  id v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);
  return v15(v17, a2, v16);
}

uint64_t sub_1DEBA6A50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for AudioFeedConfig();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = type metadata accessor for AudioFeedKnobsConfig();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_1DEA20134(0, (unint64_t *)&unk_1EBADE9A0, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedConfiguration);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);
  return v17(v19, a2, a2, v18);
}

uint64_t sub_1DEBA6BC4()
{
  return sub_1DEAAEB38(&qword_1EBAF6168, (void (*)(uint64_t))type metadata accessor for AudioFeedKnobsConfig);
}

uint64_t sub_1DEBA6C0C(void *a1)
{
  sub_1DEABAFF8(0, &qword_1EAC21340, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEAD7DF4();
  sub_1DFE001A0();
  v9[15] = 0;
  type metadata accessor for AudioFeedConfig();
  sub_1DEAAEB38(&qword_1EAC21348, (void (*)(uint64_t))type metadata accessor for AudioFeedConfig);
  sub_1DFDFFE80();
  if (!v1)
  {
    type metadata accessor for AudioFeedContentConfig();
    v9[14] = 1;
    type metadata accessor for AudioFeedKnobsConfig();
    sub_1DEAAEB38(&qword_1EAC21350, (void (*)(uint64_t))type metadata accessor for AudioFeedKnobsConfig);
    sub_1DFDFFE80();
    v9[13] = 2;
    type metadata accessor for LegacyAudioFeedConfiguration();
    sub_1DEAAEB38(&qword_1EAC21358, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedConfiguration);
    sub_1DFDFFE30();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DEBA6E9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF2A49F4(*a1, *a2);
}

uint64_t sub_1DEBA6EA8()
{
  return sub_1DEE9A2B8();
}

uint64_t sub_1DEBA6EB0()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEBA6F54()
{
  return sub_1DED5F22C();
}

uint64_t sub_1DEBA6F5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DEBA759C();
  *a1 = result;
  return result;
}

void sub_1DEBA6F8C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEF6769666E6F4364;
  unint64_t v4 = 0x80000001DFEB8EA0;
  unint64_t v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000015;
    unint64_t v4 = 0x80000001DFEB8EC0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6565466F69647561;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DEBA7000@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DEBA759C();
  *a1 = result;
  return result;
}

uint64_t sub_1DEBA7028(uint64_t a1)
{
  unint64_t v2 = sub_1DEAD7DF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEBA7064(uint64_t a1)
{
  unint64_t v2 = sub_1DEAD7DF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEBA70A0(void *a1)
{
  return sub_1DEBA6C0C(a1);
}

uint64_t sub_1DEBA70B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBA73D8(v1, a1, (uint64_t (*)(void))type metadata accessor for AudioFeedConfig);
}

uint64_t sub_1DEBA70EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEBA73D8(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for AudioFeedKnobsConfig);
}

uint64_t sub_1DEBA7124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DEA20134(0, (unint64_t *)&unk_1EBADE9A0, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedConfiguration);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v19 - v8;
  sub_1DEA20134(0, &qword_1EBAC2C80, (void (*)(uint64_t))type metadata accessor for AudioFeedKnobsConfig);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - v11;
  sub_1DEA20134(0, &qword_1EBAC20D0, (void (*)(uint64_t))type metadata accessor for AudioFeedConfig);
  MEMORY[0x1F4188790](v13 - 8);
  id v15 = (char *)&v19 - v14;
  sub_1DEBA73D8(a1, (uint64_t)&v19 - v14, (uint64_t (*)(void))type metadata accessor for AudioFeedConfig);
  uint64_t v16 = type metadata accessor for AudioFeedConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  sub_1DEBA73D8(v3 + *(int *)(a2 + 20), (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AudioFeedKnobsConfig);
  uint64_t v17 = type metadata accessor for AudioFeedKnobsConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 0, 1, v17);
  sub_1DEA21A48(v3 + *(int *)(a2 + 24), (uint64_t)v9, (unint64_t *)&unk_1EBADE9A0, (void (*)(uint64_t))type metadata accessor for LegacyAudioFeedConfiguration);
  return sub_1DEA1F804((uint64_t)v15, (uint64_t)v12, (uint64_t)v9, a3);
}

uint64_t sub_1DEBA737C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DEA20134(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DEBA73D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for AudioFeedContentConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEBA750CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioFeedContentConfig.CodingKeys()
{
  return &type metadata for AudioFeedContentConfig.CodingKeys;
}

unint64_t sub_1DEBA7548()
{
  unint64_t result = qword_1EAC21360;
  if (!qword_1EAC21360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21360);
  }
  return result;
}

uint64_t sub_1DEBA759C()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

id BridgedNewsActivitySender.__allocating_init(viewController:presentationTransitionFactory:dismissalTransitionFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (char *)objc_allocWithZone(v5);
  *(void *)&v11[OBJC_IVAR___TSNewsActivitySender_viewController] = a1;
  uint64_t v12 = &v11[OBJC_IVAR___TSNewsActivitySender_presentationTransitionFactory];
  *(void *)uint64_t v12 = a2;
  *((void *)v12 + 1) = a3;
  uint64_t v13 = &v11[OBJC_IVAR___TSNewsActivitySender_dismissalTransitionFactory];
  *(void *)uint64_t v13 = a4;
  *((void *)v13 + 1) = a5;
  v15.receiver = v11;
  v15.super_class = v5;
  return objc_msgSendSuper2(&v15, sel_init);
}

id BridgedNewsActivitySender.init(viewController:presentationTransitionFactory:dismissalTransitionFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR___TSNewsActivitySender_viewController] = a1;
  uint64_t v12 = &v5[OBJC_IVAR___TSNewsActivitySender_presentationTransitionFactory];
  *(void *)uint64_t v12 = a2;
  *((void *)v12 + 1) = a3;
  uint64_t v13 = &v5[OBJC_IVAR___TSNewsActivitySender_dismissalTransitionFactory];
  *(void *)uint64_t v13 = a4;
  *((void *)v13 + 1) = a5;
  v15.receiver = v5;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_init);
}

id BridgedNewsActivitySender.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BridgedNewsActivitySender.init()()
{
}

id BridgedNewsActivitySender.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedNewsActivitySender()
{
  return self;
}

uint64_t method lookup function for BridgedNewsActivitySender(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedNewsActivitySender);
}

uint64_t dispatch thunk of BridgedNewsActivitySender.__allocating_init(viewController:presentationTransitionFactory:dismissalTransitionFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for BridgedNewsActivitySender.Factory()
{
  return self;
}

uint64_t sub_1DEBA79AC()
{
  uint64_t v1 = *v0;
  if (qword_1EAC1CB60 != -1) {
    swift_once();
  }
  sub_1DEBA7B44();
  sub_1DFDE7EB0();
  if (v6) {
    return 0;
  }
  int v3 = *(uint64_t (**)(uint64_t))(*(void *)(v1 + 16)
                                         + OBJC_IVAR___TSNewsActivitySender_presentationTransitionFactory);
  uint64_t v4 = swift_retain();
  uint64_t v2 = v3(v4);
  swift_release();
  return v2;
}

uint64_t sub_1DEBA7A74(char a1)
{
  uint64_t v3 = *v1;
  if (qword_1EAC1CB60 != -1) {
    swift_once();
  }
  sub_1DEBA7B44();
  sub_1DFDE7EB0();
  if (v7) {
    return 0;
  }
  uint64_t v5 = *(uint64_t (**)(void))(*(void *)(v3 + 16)
                                        + OBJC_IVAR___TSNewsActivitySender_dismissalTransitionFactory);
  swift_retain();
  uint64_t v4 = v5(a1 & 1);
  swift_release();
  return v4;
}

unint64_t sub_1DEBA7B44()
{
  unint64_t result = qword_1EAC21390;
  if (!qword_1EAC21390)
  {
    type metadata accessor for BridgedNewsActivitySender.Factory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21390);
  }
  return result;
}

uint64_t sub_1DEBA7B9C()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

id sub_1DEBA7BD4()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
  return v1;
}

id sub_1DEBA7C0C(char a1)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
  return v2;
}

uint64_t sub_1DEBA7C50(uint64_t a1)
{
  uint64_t v24 = a1;
  uint64_t v23 = sub_1DFDF4270();
  uint64_t v2 = *(void *)(v23 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v23);
  uint64_t v22 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE8400();
  uint64_t v21 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v25 = (char *)&v20 - v9;
  sub_1DFDE8810();
  uint64_t v11 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v23);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v13 = (v3 + *(unsigned __int8 *)(v5 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v14 + v12, v22, v11);
  uint64_t v15 = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, v8, v21);
  *(void *)(v14 + ((v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  swift_retain();
  sub_1DFDE87E0();
  swift_release();
  sub_1DFDE87C0();
  uint64_t v16 = v1[7];
  uint64_t v17 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v16);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 56))(&v27, v16, v17);
  unint64_t v18 = v27;
  unint64_t v26 = v27;
  sub_1DFDF23B0();
  sub_1DEAF0150(v18);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v25, v15);
}

void *sub_1DEBA7F28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  int v36 = a4;
  uint64_t v37 = a3;
  uint64_t v40 = a1;
  uint64_t v4 = sub_1DFDEC370();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x1F4188790](v4);
  int v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDEC3F0();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v38 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDEC3D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  uint64_t v44 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v39 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDEA1F0();
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDEC470();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DFDEC450();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF4250();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4F7CF20], v14);
  sub_1DEBA8514((uint64_t)v13);
  uint64_t v22 = v36;
  sub_1DFDEC440();
  sub_1DEBAB5C4((unint64_t *)&qword_1EBAA7370, MEMORY[0x1E4F7CF00]);
  sub_1DFDE8390();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v23 = v22[7];
  uint64_t v24 = v22[8];
  __swift_project_boxed_opaque_existential_1(v22 + 4, v23);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v24 + 48))((char *)&v45 + 1, v23, v24);
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v38, **((unsigned int **)&unk_1E6D33FF8 + SBYTE1(v45)), v42);
  __swift_project_boxed_opaque_existential_1(v22 + 4, v22[7]);
  sub_1DFDECC00();
  uint64_t v25 = v39;
  sub_1DFDEC3B0();
  sub_1DEBAB5C4((unint64_t *)&qword_1EBAA7350, MEMORY[0x1E4F7CE00]);
  uint64_t v26 = v43;
  sub_1DFDE8390();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v26);
  uint64_t v27 = v22[7];
  uint64_t v28 = v22[8];
  __swift_project_boxed_opaque_existential_1(v22 + 4, v27);
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v28 + 48))(&v45, v27, v28);
  if (v45 == 3)
  {
    __swift_project_boxed_opaque_existential_1(v22 + 4, v22[7]);
    sub_1DFDECC00();
    uint64_t v30 = v33;
    sub_1DFDEC350();
    sub_1DEBAB5C4((unint64_t *)&unk_1EBAA7340, MEMORY[0x1E4F7CDE0]);
    uint64_t v31 = v35;
    sub_1DFDE8390();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v30, v31);
  }
  return result;
}

uint64_t sub_1DEBA8514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DFDEC4E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF4480();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF4260();
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x1E4FAD388])
  {
    uint64_t v11 = *MEMORY[0x1E4F7B2B0];
    uint64_t v12 = sub_1DFDEA1F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a1, v11, v12);
  }
  else if (v10 == *MEMORY[0x1E4FAD398] || v10 == *MEMORY[0x1E4FAD3A0] || v10 == *MEMORY[0x1E4FAD390])
  {
    sub_1DEBAB204(0, &qword_1EBABB3E0, MEMORY[0x1E4F4AB30]);
    sub_1DFDE8730();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DFE0B250;
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F7D0A8], v2);
    sub_1DFDE8720();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    char v16 = sub_1DFDE83E0();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1DFDEA1F0();
    if (v16) {
      uint64_t v18 = (unsigned int *)MEMORY[0x1E4F7B270];
    }
    else {
      uint64_t v18 = (unsigned int *)MEMORY[0x1E4F7B260];
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(a1, *v18, v17);
  }
  else
  {
    uint64_t result = sub_1DFDFFBB0();
    __break(1u);
  }
  return result;
}

unint64_t sub_1DEBA88A4(uint64_t a1)
{
  uint64_t v3 = sub_1DFDF38E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_1DFDE87E0();
  swift_release();
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v8);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v9 + 56))(&v13, v8, v9);
  unint64_t v10 = v13;
  unint64_t v12 = v13;
  sub_1DFDF2390();
  return sub_1DEAF0150(v10);
}

uint64_t sub_1DEBA8A3C(uint64_t a1, uint64_t a2)
{
  v29[1] = a2;
  uint64_t v3 = sub_1DFDE7600();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DFDEC4A0();
  uint64_t v6 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDF4480();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v29 - v14;
  uint64_t v16 = sub_1DFDEA3C0();
  uint64_t v31 = *(void *)(v16 - 8);
  uint64_t v32 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDEC6C0();
  sub_1DEBAB5C4((unint64_t *)&unk_1EBAA73C0, MEMORY[0x1E4F7D420]);
  memset(v36, 0, sizeof(v36));
  uint64_t v35 = a1;
  sub_1DFDE83B0();
  sub_1DE9E4C20((uint64_t)v36);
  sub_1DFDF38B0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v19 == *MEMORY[0x1E4FAD388])
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F7CF88], v30);
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, void, uint64_t))(v6 + 104);
    if (v19 == *MEMORY[0x1E4FAD398] || v19 == *MEMORY[0x1E4FAD3A0] || v19 == *MEMORY[0x1E4FAD390])
    {
      v20(v8, *MEMORY[0x1E4F7CF80], v30);
    }
    else
    {
      v20(v8, *MEMORY[0x1E4F7CF90], v30);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  sub_1DFDEA3B0();
  sub_1DEBAB204(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20]);
  uint64_t v21 = sub_1DFDE8410();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x1E4F4AA18], v21);
  sub_1DEBAB5C4(&qword_1EBAA3860, MEMORY[0x1E4F7B458]);
  uint64_t v25 = v32;
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v25);
  sub_1DFDEA680();
  sub_1DFDF38D0();
  sub_1DEBAB5C4((unint64_t *)&unk_1EBAA7230, MEMORY[0x1E4F7B5C0]);
  sub_1DFDE8330();
  uint64_t v26 = v34;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v33 + 8);
  v27(v5, v34);
  sub_1DFDF38C0();
  sub_1DFDE8340();
  return ((uint64_t (*)(char *, uint64_t))v27)(v5, v26);
}

uint64_t sub_1DEBA9058(uint64_t a1, uint64_t a2, char *a3)
{
  CGFloat v163 = a3;
  uint64_t v173 = a1;
  uint64_t v168 = sub_1DFDEA360();
  uint64_t v165 = *(void *)(v168 - 8);
  MEMORY[0x1F4188790](v168);
  CGFloat v162 = (char *)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDEC370();
  uint64_t v160 = *(void *)(v5 - 8);
  uint64_t v161 = v5;
  MEMORY[0x1F4188790](v5);
  id v131 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBAB2CC(0, (unint64_t *)&qword_1EAC201D8, MEMORY[0x1E4FAD830]);
  uint64_t v8 = v7;
  CGFloat v169 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  MEMORY[0x1F4188790](v7);
  CGFloat v170 = (char *)&v129 - v9;
  sub_1DEBAB258();
  MEMORY[0x1F4188790](v10 - 8);
  *(void *)&long long v171 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBAB2CC(0, (unint64_t *)&qword_1EAC24E40, MEMORY[0x1E4FAC180]);
  uint64_t v174 = *(void *)(v12 - 8);
  *(void *)&long long v175 = v12;
  MEMORY[0x1F4188790](v12);
  CGFloat v172 = (char *)&v129 - v13;
  uint64_t v159 = sub_1DFDE7600();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  CGFloat v157 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1DFDEA9D0();
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x1F4188790](v146);
  CGFloat v144 = (char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1DFDEBB00();
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  double v141 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1DFDEB9A0();
  uint64_t v139 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  double v138 = (char *)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1DFDEA280();
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  id v135 = (char *)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_1DFDEA320();
  uint64_t v133 = *(void *)(v134 - 8);
  MEMORY[0x1F4188790](v134);
  id v132 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_1DFDEADA0();
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x1F4188790](v156);
  int v154 = (char *)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = (void *)sub_1DFDE7630();
  double v150 = (const char *)*(v151 - 1);
  MEMORY[0x1F4188790](v151);
  uint64_t v149 = (char *)&v129 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v164 = sub_1DFDEB030();
  uint64_t v153 = *(void *)(v164 - 8);
  MEMORY[0x1F4188790](v164);
  int v152 = (char *)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_1DFDEC630();
  uint64_t v147 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  uint64_t v24 = (char *)&v129 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for MagazineGridItemModel();
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v129 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB3C858();
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v33 = (char *)&v129 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)&v129 - v34;
  sub_1DEBAB2CC(0, &qword_1EAC213A8, MEMORY[0x1E4FAC4C0]);
  uint64_t v166 = a2;
  uint64_t v167 = v36;
  sub_1DFDF20A0();
  sub_1DFDF0B50();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  v37(v35, v29);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    *(void *)&long long v171 = *(void *)v27;
    CGFloat v162 = (char *)*((void *)v27 + 2);
    sub_1DEBAB60C();
    uint64_t v40 = &v27[*(int *)(v42 + 48)];
    uint64_t v41 = *(int *)(v42 + 64);
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *(void *)&long long v171 = *(void *)v27;
    CGFloat v162 = (char *)*((void *)v27 + 2);
    sub_1DEBAB464(*((void **)v27 + 4), *((void *)v27 + 5), *((void **)v27 + 6));
    sub_1DEBAB4A4();
    uint64_t v40 = &v27[*(int *)(v39 + 64)];
    uint64_t v41 = *(int *)(v39 + 80);
LABEL_5:
    uint64_t v43 = *(void **)&v27[v41 + 32];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v44 = sub_1DFDF99F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v40, v44);
    sub_1DF535DAC();
    sub_1DEBAB204(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20]);
    CGFloat v172 = v45;
    uint64_t v46 = sub_1DFDE8410();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(unsigned __int8 *)(v47 + 80);
    uint64_t v49 = (v48 + 32) & ~v48;
    uint64_t v50 = (char *)(v49 + *(void *)(v47 + 72));
    uint64_t v174 = v48 | 7;
    uint64_t v51 = swift_allocObject();
    long long v175 = xmmword_1DFE0B250;
    *(_OWORD *)(v51 + 16) = xmmword_1DFE0B250;
    uint64_t v52 = *MEMORY[0x1E4F4AA18];
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 104);
    v53(v51 + v49, v52, v46);
    sub_1DEBAB5C4((unint64_t *)&unk_1EBAA73B0, MEMORY[0x1E4F7D3A0]);
    unint64_t v130 = (unint64_t)"newsActivityManager";
    id v131 = (char *)0x80000001DFEC01A0;
    uint64_t v54 = v148;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v24, v54);
    uint64_t v55 = v149;
    sub_1DFDE7620();
    sub_1DFDE7610();
    (*((void (**)(char *, void *))v150 + 1))(v55, v151);
    uint64_t v56 = v152;
    sub_1DFDEB020();
    CGFloat v170 = v50;
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v175;
    uint64_t v165 = v49;
    uint64_t v168 = v46;
    CGFloat v169 = v53;
    uint64_t v58 = v46;
    uint64_t v59 = v47 + 104;
    v53(v57 + v49, v52, v58);
    sub_1DEBAB5C4((unint64_t *)&unk_1EBAA7290, MEMORY[0x1E4F7BDD8]);
    unint64_t v60 = v164;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, unint64_t))(v153 + 8))(v56, v60);
    sub_1DEBAB5C4(&qword_1EAC213B8, (void (*)(uint64_t))type metadata accessor for MagazineGridItemModel);
    uint64_t result = sub_1DFDF20F0();
    if (result < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (result <= 0x7FFFFFFF)
    {
      uint64_t v62 = v154;
      sub_1DFDEAD90();
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = v175;
      uint64_t v64 = v52;
      uint64_t v65 = v52;
      LODWORD(v160) = v52;
      uint64_t v67 = v168;
      unint64_t v66 = v169;
      v169(v63 + v165, v65, v168);
      uint64_t v161 = v59;
      sub_1DEBAB5C4((unint64_t *)&unk_1EBAA7270, MEMORY[0x1E4F7BAF0]);
      unint64_t v164 = v130 | 0x8000000000000000;
      uint64_t v68 = v156;
      sub_1DFDE8390();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v155 + 8))(v62, v68);
      uint64_t v69 = v132;
      sub_1DFDFF240();
      uint64_t v70 = swift_allocObject();
      *(_OWORD *)(v70 + 16) = v175;
      uint64_t v71 = v165;
      v66(v70 + v165, v64, v67);
      sub_1DEBAB5C4((unint64_t *)&unk_1EBAA71C0, MEMORY[0x1E4F7B400]);
      uint64_t v72 = v134;
      sub_1DFDE8390();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v133 + 8))(v69, v72);
      uint64_t v156 = *((void *)v163 + 3);
      id v73 = objc_msgSend((id)v171, sel_sourceChannel);
      uint64_t v74 = v135;
      sub_1DFDEB250();
      swift_unknownObjectRelease();
      uint64_t v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = v175;
      uint64_t v76 = v160;
      v169(v75 + v71, v160, v168);
      sub_1DEBAB5C4((unint64_t *)&unk_1EBAA71A0, MEMORY[0x1E4F7B368]);
      uint64_t v77 = v137;
      sub_1DFDE8390();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v136 + 8))(v74, v77);
      id v78 = objc_msgSend((id)v171, sel_sourceChannel);
      uint64_t v79 = v138;
      sub_1DFDEB240();
      swift_unknownObjectRelease();
      uint64_t v80 = swift_allocObject();
      *(_OWORD *)(v80 + 16) = v175;
      uint64_t v81 = v80 + v71;
      uint64_t v82 = v71;
      uint64_t v83 = v168;
      double v84 = v169;
      v169(v81, v76, v168);
      sub_1DEBAB5C4((unint64_t *)&unk_1EBAA7300, MEMORY[0x1E4F7C5A0]);
      uint64_t v85 = v140;
      sub_1DFDE8390();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v139 + 8))(v79, v85);
      uint64_t v86 = v141;
      sub_1DFDEBAF0();
      uint64_t v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = v175;
      v84(v87 + v82, v76, v83);
      sub_1DEBAB5C4(&qword_1EAC213D0, MEMORY[0x1E4F7C720]);
      uint64_t v88 = v143;
      sub_1DFDE8390();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v86, v88);
      __swift_project_boxed_opaque_existential_1((void *)v163 + 10, *((void *)v163 + 13));
      id v89 = (void *)v171;
      id v90 = objc_msgSend((id)v171, sel_identifier);
      sub_1DFDFDD20();

      sub_1DFDFD280();
      swift_bridgeObjectRelease();
      id v91 = v144;
      sub_1DFDEA9C0();
      uint64_t v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = v175;
      v169(v92 + v165, v160, v168);
      sub_1DEBAB5C4(&qword_1EBACB870, MEMORY[0x1E4F7B8D8]);
      uint64_t v93 = v146;
      sub_1DFDE8390();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v145 + 8))(v91, v93);
      sub_1DFDEB2D0();
      uint64_t v94 = v157;
      sub_1DFDF20E0();
      sub_1DEBAB5C4((unint64_t *)&unk_1EBAA72B0, MEMORY[0x1E4F7BFA0]);
      sub_1DFDE8330();
      uint64_t v95 = *(void (**)(char *, uint64_t))(v158 + 8);
      uint64_t v96 = v159;
      v95(v94, v159);
      sub_1DFDF20B0();
      sub_1DFDE8340();
      return ((uint64_t (*)(char *, uint64_t))v95)(v94, v96);
    }
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v164 = *(void *)v27;
  sub_1DEBAB38C();
  uint64_t v98 = v8;
  uint64_t v99 = v169;
  CGFloat v163 = &v27[*(int *)(v97 + 48)];
  uint64_t v100 = *(void **)&v27[*(int *)(v97 + 64) + 32];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v101 = v170;
  sub_1DFDF20D0();
  sub_1DFDF20A0();
  sub_1DFDF0B10();
  v37(v33, v29);
  uint64_t v102 = v171;
  sub_1DFDF59E0();
  swift_bridgeObjectRelease();
  (*((void (**)(char *, uint64_t))v99 + 1))(v101, v98);
  uint64_t v104 = v174;
  uint64_t v103 = v175;
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v174 + 48))(v102, 1, v175) == 1)
  {
    sub_1DEBAB408(v102);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 32))(v172, v102, v103);
    id v105 = objc_msgSend(*(id *)(v164 + 16), sel_identifier);
    sub_1DFDFDD20();

    uint64_t v106 = v131;
    sub_1DFDEC350();
    sub_1DEBAB204(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20]);
    uint64_t v153 = v107;
    uint64_t v108 = sub_1DFDE8410();
    CGFloat v169 = (void (*)(uint64_t, uint64_t, uint64_t))v108;
    uint64_t v109 = *(void *)(v108 - 8);
    uint64_t v110 = *(unsigned __int8 *)(v109 + 80);
    uint64_t v111 = (v110 + 32) & ~v110;
    uint64_t v112 = v111 + *(void *)(v109 + 72);
    uint64_t v113 = v110 | 7;
    uint64_t v114 = swift_allocObject();
    long long v171 = xmmword_1DFE0B250;
    *(_OWORD *)(v114 + 16) = xmmword_1DFE0B250;
    uint64_t v115 = *MEMORY[0x1E4F4AA18];
    CGFloat v116 = *(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 104);
    v116(v114 + v111, v115, v108);
    sub_1DEBAB5C4((unint64_t *)&unk_1EBAA7340, MEMORY[0x1E4F7CDE0]);
    double v150 = "newsActivityManager";
    CGFloat v170 = (char *)0x80000001DFEC01A0;
    uint64_t v117 = v161;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v160 + 8))(v106, v117);
    sub_1DFDF14E0();
    CGFloat v118 = v162;
    sub_1DFDEA340();
    uint64_t v160 = v113;
    uint64_t v161 = v112;
    double v119 = v169;
    uint64_t v120 = swift_allocObject();
    *(_OWORD *)(v120 + 16) = v171;
    LODWORD(v152) = v115;
    uint64_t v151 = v116;
    v116(v120 + v111, v115, (uint64_t)v119);
    sub_1DEBAB5C4((unint64_t *)&qword_1EBAA71D0, MEMORY[0x1E4F7B420]);
    uint64_t v121 = v168;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v165 + 8))(v118, v121);
    sub_1DEBAB5C4(&qword_1EAC213B8, (void (*)(uint64_t))type metadata accessor for MagazineGridItemModel);
    uint64_t result = sub_1DFDF20F0();
    if (result < (uint64_t)0xFFFFFFFF80000000)
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    if (result > 0x7FFFFFFF)
    {
LABEL_18:
      __break(1u);
      return result;
    }
    double v122 = v154;
    sub_1DFDEAD90();
    uint64_t v123 = swift_allocObject();
    *(_OWORD *)(v123 + 16) = v171;
    ((void (*)(uint64_t, void, void))v151)(v123 + v111, v152, v119);
    sub_1DEBAB5C4((unint64_t *)&unk_1EBAA7270, MEMORY[0x1E4F7BAF0]);
    uint64_t v124 = v156;
    sub_1DFDE8390();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v155 + 8))(v122, v124);
    sub_1DFDEAF50();
    uint64_t v125 = v157;
    sub_1DFDF20E0();
    sub_1DEBAB5C4((unint64_t *)&unk_1EBAD22C0, MEMORY[0x1E4F7BCF8]);
    sub_1DFDE8330();
    float v126 = *(void (**)(char *, uint64_t))(v158 + 8);
    uint64_t v127 = v159;
    v126(v125, v159);
    sub_1DFDF20B0();
    sub_1DFDE8340();
    swift_release();
    v126(v125, v127);
    (*(void (**)(char *, void))(v174 + 8))(v172, v175);
  }
  uint64_t v128 = sub_1DFDF9700();
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v128 - 8) + 8))(v163, v128);
}

uint64_t sub_1DEBAAAE4()
{
  uint64_t v0 = sub_1DFDE8730();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (uint64_t *)((char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for MagazineGridItemModel();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB3C858();
  sub_1DFDF0B50();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *(void **)v6;

      sub_1DEBAB464(*((void **)v6 + 4), *((void *)v6 + 5), *((void **)v6 + 6));
      sub_1DEBAB4A4();
      uint64_t v10 = &v6[*(int *)(v9 + 64)];
      uint64_t v11 = *(void **)&v6[*(int *)(v9 + 80) + 32];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v12 = sub_1DFDF99F0();
    }
    else
    {
      swift_release();
      sub_1DEBAB38C();
      uint64_t v10 = &v6[*(int *)(v19 + 48)];
      uint64_t v20 = *(void **)&v6[*(int *)(v19 + 64) + 32];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v12 = sub_1DFDF9700();
    }
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
    *uint64_t v3 = 6775156;
    v3[1] = 0xE300000000000000;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F4AB18], v0);
    sub_1DFDE8890();
    return (*(uint64_t (**)(void *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    uint64_t v13 = *(void **)v6;

    sub_1DEBAB60C();
    uint64_t v15 = &v6[*(int *)(v14 + 48)];
    uint64_t v16 = *(void **)&v6[*(int *)(v14 + 64) + 32];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *uint64_t v3 = 0x6575737369;
    v3[1] = 0xE500000000000000;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F4AB18], v0);
    sub_1DFDE8890();
    (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    uint64_t v17 = sub_1DFDF99F0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
  }
}

uint64_t sub_1DEBAAE24()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MagazineGridTracker()
{
  return self;
}

uint64_t sub_1DEBAAEA0()
{
  uint64_t v1 = sub_1DFDF4270();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_1DFDE8400();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  return swift_deallocObject();
}

void *sub_1DEBAB004(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1DFDF4270() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1DFDE8400() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void **)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DEBA7F28(a1, v1 + v4, v1 + v7, v8);
}

uint64_t sub_1DEBAB104()
{
  uint64_t v1 = sub_1DFDF38E0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DEBAB194(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1DFDF38E0() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DEBA8A3C(a1, v4);
}

void sub_1DEBAB204(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFFEF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1DEBAB258()
{
  if (!qword_1EAC213A0)
  {
    sub_1DEBAB2CC(255, (unint64_t *)&qword_1EAC24E40, MEMORY[0x1E4FAC180]);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC213A0);
    }
  }
}

void sub_1DEBAB2CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for MagazineGridSectionDescriptor;
    v8[1] = type metadata accessor for MagazineGridItemModel();
    void v8[2] = sub_1DEB0BE30();
    v8[3] = sub_1DEBAB5C4((unint64_t *)&qword_1EAC24E30, (void (*)(uint64_t))type metadata accessor for MagazineGridItemModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DEBAB38C()
{
  if (!qword_1EAC213B0)
  {
    type metadata accessor for TagModel();
    sub_1DFDF9700();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAC213B0);
    }
  }
}

uint64_t sub_1DEBAB408(uint64_t a1)
{
  sub_1DEBAB258();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DEBAB464(void *a1, uint64_t a2, void *a3)
{
  if (a1)
  {
  }
}

void sub_1DEBAB4A4()
{
  if (!qword_1EAC213C0)
  {
    MEMORY[0x1F4188790](0);
    sub_1DE9DB774(255, &qword_1EAC213C8);
    sub_1DFDF99F0();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EAC213C0);
    }
  }
}

uint64_t sub_1DEBAB5C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEBAB60C()
{
  if (!qword_1EAC213D8)
  {
    sub_1DFDF99F0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAC213D8);
    }
  }
}

uint64_t sub_1DEBAB680(uint64_t a1)
{
  return sub_1DFDE8DC0();
}

uint64_t sub_1DEBAB6EC(uint64_t a1, uint64_t a2)
{
  v13[1] = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7DC28];
  sub_1DEBAD3DC(0, &qword_1EAC213E0, MEMORY[0x1E4F7DC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v13 - v5;
  uint64_t v7 = sub_1DFDE9F00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v10((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  sub_1DEBAD3DC(0, &qword_1EAC213E8, v3, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1DFDEDE90();
  v10(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_1DEBAB914((uint64_t)v6);
  sub_1DEBAD2D8((uint64_t)v6, &qword_1EAC213E0, v3);
  uint64_t v11 = sub_1DFDEE050();
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_1DEBAB914(uint64_t a1)
{
  uint64_t v2 = sub_1DFDFD110();
  MEMORY[0x1F4188790](v2 - 8);
  v35[1] = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEBAD3DC(0, &qword_1EAC213F0, MEMORY[0x1E4F80740], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v35 - v6;
  uint64_t v8 = sub_1DFDFA410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDFA3F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  v35[0] = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBAD3DC(0, &qword_1EAC213E0, MEMORY[0x1E4F7DC28], v4);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v35 - v16;
  sub_1DEBAD348(a1, (uint64_t)v35 - v16);
  uint64_t v18 = sub_1DFDE9F00();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    uint64_t v20 = &qword_1EAC213E0;
    uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7DC28];
    uint64_t v22 = (uint64_t)v17;
  }
  else
  {
    uint64_t v23 = sub_1DFDE9EF0();
    uint64_t v24 = v17;
    uint64_t v25 = (void *)v23;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
    sub_1DFDFF430();
    sub_1DFDFA400();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v26 = v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) != 1)
    {
      uint64_t v28 = *(void (**)(void, char *, uint64_t))(v13 + 32);
      uint64_t v29 = v35[0];
      v28(v35[0], v7, v12);
      uint64_t v30 = sub_1DFDFA3E0();
      uint64_t v37 = sub_1DE919914(0, (unint64_t *)&qword_1EBABAAD0);
      unint64_t v38 = sub_1DEBAD4A8();
      uint64_t v36 = v30;
      id v31 = objc_msgSend(self, sel_mainScreen);
      objc_msgSend(v31, sel_scale);

      sub_1DFDFD100();
      sub_1DFDFD120();
      swift_allocObject();
      uint64_t v32 = sub_1DFDFD0F0();
      uint64_t v33 = MEMORY[0x1F4188790](v32);
      v35[-4] = v35[2];
      v35[-3] = v33;
      v35[-2] = v25;
      sub_1DEBAD3DC(0, (unint64_t *)&unk_1EBAC0430, (uint64_t (*)(uint64_t))sub_1DEBAD440, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v27 = sub_1DFDEDF30();

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v12);
      swift_release();
      return v27;
    }

    uint64_t v20 = &qword_1EAC213F0;
    uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F80740];
    uint64_t v22 = (uint64_t)v7;
  }
  sub_1DEBAD2D8(v22, v20, v21);
  uint64_t v36 = 0;
  sub_1DEBAD3DC(0, (unint64_t *)&unk_1EBAC0430, (uint64_t (*)(uint64_t))sub_1DEBAD440, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

id sub_1DEBABEB0(void *a1, void *a2, uint64_t a3, unint64_t a4, char a5)
{
  id v114 = a1;
  uint64_t v113 = sub_1DFDE9F00();
  uint64_t v8 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  uint64_t v10 = (char *)v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContinueReadingEligibility(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (void *)((char *)v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1DEBACE1C();
    uint64_t v44 = swift_allocError();
    *uint64_t v45 = 0;
    *uint64_t v13 = v44;
    type metadata accessor for ContinueReadingIneligibilityReason(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1DEBAD3DC(0, (unint64_t *)&qword_1EBAC1180, type metadata accessor for ContinueReadingEligibility, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1DFDEDE90();
  }
  uint64_t v15 = Strong;
  uint64_t v108 = v13;
  uint64_t v102 = v11;
  uint64_t v17 = *(void (**)(uint64_t *, id, uint64_t))(v8 + 16);
  uint64_t v16 = v8 + 16;
  uint64_t v96 = v17;
  v17((uint64_t *)v10, v114, v113);
  *(void *)&long long v116 = a4;
  char v18 = a5 & 1;
  BYTE8(v116) = v18;
  uint64_t v110 = v15;
  __swift_project_boxed_opaque_existential_1((void *)(v15 + 304), *(void *)(v15 + 328));
  id v19 = a2;
  sub_1DEB2EF78(a4, v18);
  double v20 = sub_1DFD818D8();
  sub_1DF89F4BC((uint64_t)v10, (uint64_t)a2, (uint64_t *)&v116, (uint64_t)v118, v20);
  uint64_t v21 = v118[1];
  uint64_t v97 = v118[0];
  uint64_t v103 = (void *)v118[2];
  int v104 = v119;
  uint64_t v98 = v120;
  uint64_t v106 = v121;
  uint64_t v99 = v122;
  uint64_t v105 = v123;
  unint64_t v107 = v124;
  int v22 = v125;
  uint64_t v23 = v126;
  uint64_t v112 = v127;
  uint64_t v24 = v128;
  uint64_t v25 = v129;
  int v26 = v130;
  uint64_t v27 = (void *)sub_1DFDE9EF0();
  sub_1DFDE7FA0();
  sub_1DFDE7F80();
  if (qword_1EBAC0D88 != -1) {
    swift_once();
  }
  sub_1DFDE7F70();
  swift_release();
  int v109 = v22;
  id v111 = v27;
  int v101 = v26;
  uint64_t v100 = v23;
  if (v118[0])
  {
    uint64_t v28 = v27;
    if (qword_1EBAC0768 != -1) {
      swift_once();
    }
    sub_1DEA086BC();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1DFE0B250;
    id v30 = objc_msgSend(v28, sel_identifier);
    uint64_t v31 = sub_1DFDFDD20();
    uint64_t v33 = v32;

    *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v29 + 64) = sub_1DEA08668();
    *(void *)(v29 + 32) = v31;
    *(void *)(v29 + 40) = v33;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v34 = v108;
    uint64_t *v108 = v97;
    v34[1] = v21;
    uint64_t v35 = v103;
    v34[2] = (uint64_t)v103;
    LOBYTE(v33) = v104;
    *((unsigned char *)v34 + 24) = v104;
    uint64_t v36 = v106;
    v34[4] = v98;
    v34[5] = v36;
    uint64_t v37 = v105;
    v34[6] = v99;
    v34[7] = v37;
    unint64_t v38 = v107;
    v34[8] = v107;
    char v39 = v109;
    *((unsigned char *)v34 + 72) = v109;
    uint64_t v40 = v112;
    v34[10] = v100;
    v34[11] = v40;
    v34[12] = (uint64_t)v24;
    v34[13] = v25;
    *((unsigned char *)v34 + 112) = v101;
    swift_storeEnumTagMultiPayload();
    sub_1DEBAD3DC(0, (unint64_t *)&qword_1EBAC1180, type metadata accessor for ContinueReadingEligibility, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1DEB2EF54(v35, v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DEB2EF78(v38, v39);
    id v114 = v24;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1DFDEDE90();
    swift_bridgeObjectRelease();

    sub_1DEB2F130(v35, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v42 = v38;
    char v43 = v39;
    goto LABEL_8;
  }
  uint64_t v94 = v21;
  id v95 = v24;
  uint64_t v46 = v110;
  uint64_t v47 = *(void **)(v110 + 128);
  swift_unknownObjectRetain();
  unsigned int v48 = objc_msgSend(v27, sel_isPaid);
  unsigned int v49 = objc_msgSend(v27, sel_isBundlePaid);
  id v50 = objc_msgSend(objc_msgSend(v27, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v51 = sub_1DFDFDD20();
  uint64_t v53 = v52;

  v93[1] = v51;
  if (!v48)
  {
    unint64_t v60 = v108;
    if (v49) {
      goto LABEL_15;
    }
LABEL_17:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  id v54 = objc_msgSend(objc_msgSend(v47, sel_purchaseProvider), sel_purchasedTagIDs);
  uint64_t v55 = sub_1DFDFE5D0();
  v93[0] = v16;
  uint64_t v56 = v47;
  uint64_t v57 = v46;
  uint64_t v58 = v53;
  uint64_t v59 = v55;

  LOBYTE(v54) = sub_1DEAAB55C(v51, v58, v59);
  swift_unknownObjectRelease();
  uint64_t v46 = v57;
  uint64_t v47 = v56;
  swift_bridgeObjectRelease();
  unint64_t v60 = v108;
  if (v54) {
    goto LABEL_17;
  }
  if (!v49) {
    goto LABEL_42;
  }
LABEL_15:
  uint64_t v61 = (char *)objc_msgSend(objc_msgSend(v47, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v61, v61 + 1))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v117 = 0u;
    long long v116 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v116, (uint64_t)v118);
  if (!v119)
  {
    sub_1DE9E4C20((uint64_t)v118);
    goto LABEL_32;
  }
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_32:
    id v84 = 0;
    unint64_t v86 = 0;
    goto LABEL_33;
  }
  id v84 = v115;
  id v85 = objc_msgSend(v115, sel_integerValue);
  if (v85 == (id)-1)
  {

    uint64_t v46 = v110;
    goto LABEL_44;
  }
  unint64_t v86 = (unint64_t)v85;
LABEL_33:
  if (objc_getAssociatedObject(v61, (const void *)~v86))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v117 = 0u;
    long long v116 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v116, (uint64_t)v118);
  if (!v119)
  {
    sub_1DE9E4C20((uint64_t)v118);
LABEL_41:

    uint64_t v46 = v110;
    if (v86) {
      goto LABEL_44;
    }
LABEL_42:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_45:
    v96(v60, v114, v113);
    type metadata accessor for ContinueReadingIneligibilityReason(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1DEBAD3DC(0, (unint64_t *)&qword_1EBAC1180, type metadata accessor for ContinueReadingEligibility, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v41 = sub_1DFDEDE90();
    swift_bridgeObjectRelease();

    sub_1DEB2F130(v103, v104);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v73 = v107;
    char v74 = v109;
    goto LABEL_46;
  }
  sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_41;
  }
  id v87 = v115;
  unsigned int v88 = objc_msgSend(v87, sel_integerValue);

  uint64_t v46 = v110;
  if (((v88 ^ v86) & 1) == 0) {
    goto LABEL_42;
  }
LABEL_44:
  id v89 = objc_msgSend(objc_msgSend(v47, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v90 = objc_msgSend(v89, sel_bundleChannelIDs);

  id v91 = (void *)sub_1DFDFDCE0();
  unsigned __int8 v92 = objc_msgSend(v90, sel_containsObject_, v91);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  if ((v92 & 1) == 0) {
    goto LABEL_45;
  }
LABEL_18:
  id v62 = objc_msgSend(objc_msgSend(v111, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v63 = sub_1DFDFDD20();
  uint64_t v65 = v64;

  id result = objc_msgSend(*(id *)(v46 + 120), sel_mutedTagIDs);
  char v67 = v109;
  if (result)
  {
    uint64_t v68 = result;
    uint64_t v69 = sub_1DFDFE5D0();

    LOBYTE(v68) = sub_1DEAAB55C(v63, v65, v69);
    swift_bridgeObjectRelease();
    if (v68)
    {
      swift_bridgeObjectRelease();
      v96(v60, v114, v113);
      type metadata accessor for ContinueReadingIneligibilityReason(0);
LABEL_24:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1DEBAD3DC(0, (unint64_t *)&qword_1EBAC1180, type metadata accessor for ContinueReadingEligibility, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v41 = sub_1DFDEDE90();
      swift_bridgeObjectRelease();

      sub_1DEB2F130(v103, v104);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v73 = v107;
      char v74 = v67;
LABEL_46:
      sub_1DEB2F154(v73, v74);
      swift_release();
      swift_bridgeObjectRelease();

      return (id)v41;
    }
    id result = objc_msgSend(*(id *)(v46 + 120), sel_ignoredTagIDs);
    if (result)
    {
      uint64_t v70 = result;
      uint64_t v71 = sub_1DFDFE5D0();

      char v72 = sub_1DEAAB55C(v63, v65, v71);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v72 & 1) == 0)
      {
        uint64_t v75 = v94;
        *unint64_t v60 = v97;
        v60[1] = v75;
        char v76 = v67;
        uint64_t v77 = v103;
        v60[2] = (uint64_t)v103;
        char v78 = v104;
        *((unsigned char *)v60 + 24) = v104;
        uint64_t v79 = v106;
        v60[4] = v98;
        v60[5] = v79;
        uint64_t v80 = v105;
        v60[6] = v99;
        v60[7] = v80;
        unint64_t v81 = v107;
        v60[8] = v107;
        *((unsigned char *)v60 + 72) = v76;
        uint64_t v82 = v112;
        v60[10] = v100;
        v60[11] = v82;
        id v83 = v95;
        v60[12] = (uint64_t)v95;
        v60[13] = v25;
        *((unsigned char *)v60 + 112) = v101;
        swift_storeEnumTagMultiPayload();
        sub_1DEBAD3DC(0, (unint64_t *)&qword_1EBAC1180, type metadata accessor for ContinueReadingEligibility, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        swift_bridgeObjectRetain();
        sub_1DEB2EF54(v77, v78);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DEB2EF78(v81, v76);
        id v114 = v83;
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_1DFDEDE90();
        swift_bridgeObjectRelease();

        sub_1DEB2F130(v77, v78);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v42 = v81;
        char v43 = v76;
LABEL_8:
        sub_1DEB2F154(v42, v43);
        swift_release();

        swift_bridgeObjectRelease();
        return (id)v41;
      }
      v96(v60, v114, v113);
      type metadata accessor for ContinueReadingIneligibilityReason(0);
      goto LABEL_24;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1DEBACE1C()
{
  unint64_t result = qword_1EAC21F70;
  if (!qword_1EAC21F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21F70);
  }
  return result;
}

uint64_t sub_1DEBACE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  __swift_project_boxed_opaque_existential_1((void *)(a5 + 176), *(void *)(a5 + 200));
  v16[3] = sub_1DFDFD120();
  v16[4] = sub_1DEBAD554();
  v16[0] = a6;
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a7;
  v13[3] = sub_1DEABCBDC;
  v13[4] = v12;
  swift_retain();
  swift_retain();
  id v14 = a7;
  sub_1DFDF0E40();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

void sub_1DEBACF88(void *a1, void *a2, id a3, void (*a4)(void *))
{
  id v7 = objc_msgSend(a3, sel_identifier);
  uint64_t v8 = sub_1DFDFDD20();
  uint64_t v10 = v9;

  if (a1)
  {
    uint64_t v11 = qword_1EBAC0768;
    id v12 = a1;
    if (v11 != -1) {
      swift_once();
    }
    sub_1DEA086BC();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1DFE0B250;
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 64) = sub_1DEA08668();
    *(void *)(v13 + 32) = v8;
    *(void *)(v13 + 40) = v10;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    id v19 = v12;
    a4(a1);
  }
  else
  {
    if (a2)
    {
      id v14 = a2;
      if (qword_1EBAC0768 != -1) {
        swift_once();
      }
      sub_1DFDFEA40();
      sub_1DEA086BC();
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1DFE0B750;
      uint64_t v16 = MEMORY[0x1E4FBB1A0];
      *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v17 = sub_1DEA08668();
      *(void *)(v15 + 64) = v17;
      *(void *)(v15 + 32) = v8;
      *(void *)(v15 + 40) = v10;
      sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
      sub_1DFDFFB10();
      *(void *)(v15 + 96) = v16;
      *(void *)(v15 + 104) = v17;
      *(void *)(v15 + 72) = 0;
      *(void *)(v15 + 80) = 0xE000000000000000;
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EBAC0768 != -1) {
        swift_once();
      }
      sub_1DEA086BC();
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1DFE0B250;
      *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v18 + 64) = sub_1DEA08668();
      *(void *)(v18 + 32) = v8;
      *(void *)(v18 + 40) = v10;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
    }
    a4(0);
  }
}

uint64_t sub_1DEBAD2D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DEBAD3DC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DEBAD348(uint64_t a1, uint64_t a2)
{
  sub_1DEBAD3DC(0, &qword_1EAC213E0, MEMORY[0x1E4F7DC28], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DEBAD3DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DEBAD440()
{
  if (!qword_1EBACA630)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBACA628);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACA630);
    }
  }
}

unint64_t sub_1DEBAD4A8()
{
  unint64_t result = qword_1EBAEA490;
  if (!qword_1EBAEA490)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBABAAD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAEA490);
  }
  return result;
}

uint64_t sub_1DEBAD510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBACE70(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t sub_1DEBAD51C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1DEBAD554()
{
  unint64_t result = qword_1EAC213F8;
  if (!qword_1EAC213F8)
  {
    sub_1DFDFD120();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC213F8);
  }
  return result;
}

uint64_t sub_1DEBAD5AC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DEBAD5EC(void *a1, void *a2)
{
  sub_1DEBACF88(a1, a2, *(id *)(v2 + 16), *(void (**)(void *))(v2 + 24));
}

uint64_t sub_1DEBAD5F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v5 = sub_1DFDF3D40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(a1, sel_objectForKey_, v9);

  if (v10)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
    sub_1DEA6FDEC(v19, v20);
    sub_1DE9A1E44();
    swift_dynamicCast();
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v12 = v18;
    void v11[2] = a1;
    v11[3] = v12;
    v11[4] = a3;
    id v13 = a1;
    swift_retain();
    sub_1DFDF1010();
    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    id v14 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_objectForKey_, v14);

    if (v15)
    {
      sub_1DFDFF780();
      swift_unknownObjectRelease();
      sub_1DEA6FDEC(v19, v20);
      swift_dynamicCast();
      *(void *)&v20[0] = 0xD000000000000018;
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAD088], v5);
      sub_1DFDF1030();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1DEBAD904(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v5 = sub_1DFDF6B40();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF6BA0();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDF6BE0();
  uint64_t v29 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v25 - v16;
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
  uint64_t v18 = (void *)sub_1DFDFEE60();
  sub_1DFDF6BC0();
  MEMORY[0x1E01E5440](v15, 5.0);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v15, v11);
  id v19 = (void *)swift_allocObject();
  uint64_t v20 = v26;
  uint64_t v21 = v27;
  _OWORD v19[2] = a2;
  uint64_t v19[3] = v20;
  v19[4] = v21;
  aBlock[4] = sub_1DEBAE3BC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9744A8;
  aBlock[3] = &block_descriptor_13;
  int v22 = _Block_copy(aBlock);
  id v23 = a2;
  swift_retain();
  swift_release();
  sub_1DFDF6B70();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DEA54A14((unint64_t *)&qword_1EBAB9EB0, MEMORY[0x1E4FBCB00]);
  sub_1DEABDA4C();
  sub_1DEA54A14((unint64_t *)&qword_1EBABA860, (void (*)(uint64_t))sub_1DEABDA4C);
  sub_1DFDFF830();
  MEMORY[0x1E01ED670](v17, v10, v7, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return ((uint64_t (*)(char *, uint64_t))v28)(v17, v29);
}

void sub_1DEBADCE4(void *a1, void (*a2)(id))
{
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a1, sel_objectForKey_, v4);

  if (v5)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
    sub_1DEA6FDEC(&v14, &v15);
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAC50);
    swift_dynamicCast();
    type metadata accessor for HistoryFeedViewController();
    sub_1DFDFED50();

    uint64_t v6 = v16;
    if (v16)
    {
      sub_1DFDF30E0();
      uint64_t v7 = (void *)sub_1DFDF26C0();

      swift_release();
      id v8 = v7;
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
      objc_msgSend(a1, sel_setObject_forKey_, v8, v9);

      id v10 = 0;
    }
    else
    {
      id v11 = objc_allocWithZone(MEMORY[0x1E4FAB4B8]);
      uint64_t v12 = (void *)sub_1DFDFDCE0();
      id v10 = objc_msgSend(v11, sel_initWithMessage_, v12);

      id v8 = v10;
    }
    a2(v10);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DEBADF80()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DEBADFB8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v4 = sub_1DFDF6B40();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDF6BA0();
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF6BE0();
  uint64_t v28 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  long long v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - v15;
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
  uint64_t v17 = (void *)sub_1DFDFEE60();
  sub_1DFDF6BC0();
  MEMORY[0x1E01E5440](v14, 2.0);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  v27(v14, v10);
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v25;
  uint64_t v20 = v26;
  void v18[2] = a1;
  v18[3] = v19;
  v18[4] = v20;
  aBlock[4] = sub_1DEBAE39C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9744A8;
  aBlock[3] = &block_descriptor_7;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = a1;
  swift_retain();
  swift_release();
  sub_1DFDF6B70();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DEA54A14((unint64_t *)&qword_1EBAB9EB0, MEMORY[0x1E4FBCB00]);
  sub_1DEABDA4C();
  sub_1DEA54A14((unint64_t *)&qword_1EBABA860, (void (*)(uint64_t))sub_1DEABDA4C);
  sub_1DFDFF830();
  MEMORY[0x1E01ED670](v16, v9, v6, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
  return ((uint64_t (*)(char *, uint64_t))v27)(v16, v28);
}

uint64_t sub_1DEBAE39C()
{
  return sub_1DEBAD5F8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1DEBAE3AC(uint64_t a1)
{
  return sub_1DEBAD904(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1DEBAE3BC()
{
  sub_1DEBADCE4(*(void **)(v0 + 16), *(void (**)(id))(v0 + 24));
}

uint64_t sub_1DEBAE3C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v18 = a2;
  void v8[2] = a2;
  v8[3] = a3;
  void v8[4] = a4;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1DFDFFBE0();
    if (v17) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = v9;
    if (v9)
    {
LABEL_3:
      unint64_t v10 = 0;
      uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8;
      uint64_t v12 = v17;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = (void *)MEMORY[0x1E01EE240](v10, a1);
          unint64_t v14 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
LABEL_13:
            __break(1u);
LABEL_14:
            uint64_t v15 = v19;
            goto LABEL_18;
          }
        }
        else
        {
          if (v10 >= *(void *)(v11 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          uint64_t v13 = *(void **)(a1 + 8 * v10 + 32);
          swift_unknownObjectRetain();
          unint64_t v14 = v10 + 1;
          if (__OFADD__(v10, 1)) {
            goto LABEL_13;
          }
        }
        if (sub_1DEBAFCD8(v13, v18, a3, a4))
        {
          sub_1DFDFFA50();
          sub_1DFDFFA90();
          uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
          uint64_t v12 = v17;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v10;
        if (v14 == v12) {
          goto LABEL_14;
        }
      }
    }
  }
  uint64_t v15 = MEMORY[0x1E4FBC860];
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1DEBAE5D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v19 = a2;
  void v8[2] = a2;
  v8[3] = a3;
  void v8[4] = a4;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v9;
  if (v9)
  {
    while (1)
    {
      unint64_t v10 = 0;
      uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8;
      uint64_t v12 = v18;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v13 = (id)MEMORY[0x1E01EE240](v10, a1);
LABEL_9:
        unint64_t v14 = v13;
        unint64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_15;
        }
        if (sub_1DEBAFCD8(v13, v19, a3, a4))
        {
          sub_1DFDFFA50();
          sub_1DFDFFA90();
          uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
          uint64_t v12 = v18;
        }
        else
        {
        }
        ++v10;
        if (v15 == v12)
        {
          uint64_t v16 = v20;
          goto LABEL_18;
        }
      }
      if (v10 < *(void *)(v11 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1DFDFFBE0();
      if (!v18) {
        goto LABEL_17;
      }
    }
    id v13 = *(id *)(a1 + 8 * v10 + 32);
    goto LABEL_9;
  }
LABEL_17:
  uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1DEBAE7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a1;
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 64) = v10;
  void *v10 = v5;
  v10[1] = sub_1DEBAE8AC;
  v10[19] = a5;
  v10[20] = a2;
  v10[17] = a3;
  v10[18] = a4;
  unsigned char v10[16] = v5 + 16;
  return MEMORY[0x1F4188298](sub_1DEBAEA2C, 0, 0);
}

uint64_t sub_1DEBAE8AC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1DEBAE9DC, 0, 0);
  }
}

uint64_t sub_1DEBAE9DC()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  long long v2 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  *(void *)(v3 + 32) = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v3 = v1;
  *(_OWORD *)(v3 + 16) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DEBAEA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  return MEMORY[0x1F4188298](sub_1DEBAEA2C, 0, 0);
}

uint64_t sub_1DEBAEA2C()
{
  uint64_t v1 = sub_1DEBB1E34(*(void **)(v0 + 136), *(void *)(v0 + 144));
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);
  CFTimeInterval v6 = CACurrentMediaTime();
  *(CFTimeInterval *)(v0 + 168) = v6;
  uint64_t v7 = (CFTimeInterval *)swift_task_alloc();
  *(void *)(v0 + 176) = v7;
  *((void *)v7 + 2) = v5;
  *((void *)v7 + 3) = v3;
  *((void *)v7 + 4) = v1;
  *((void *)v7 + 5) = v4;
  *((void *)v7 + 6) = v2;
  v7[7] = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1DEBAECDC;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000046, 0x80000001DFEC04E0, sub_1DEBB1F1C, v7, &_s14HeadlinesFetchVN);
}

uint64_t sub_1DEBAECDC()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DEBAF690;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1DEBAEDF8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

id sub_1DEBAEDF8()
{
  uint64_t v75 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  unint64_t v2 = *(void *)(v0 + 16);
  uint64_t v65 = *(void **)(v0 + 24);
  unint64_t v66 = *(void **)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  id v4 = objc_msgSend(objc_msgSend(*(id *)(v0 + 136), sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v71 = sub_1DFDFDD20();
  uint64_t v73 = v5;

  CFTimeInterval v6 = *(void **)(v1 + 64);
  if (objc_msgSend(v6, sel_respondsToSelector_, sel_isImprovedManagedTopicGroupingEnabled)) {
    objc_msgSend(v6, sel_isImprovedManagedTopicGroupingEnabled);
  }
  id result = objc_msgSend(*(id *)(*(void *)(v0 + 160) + 16), sel_subscriptionController);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  uint64_t v69 = v0 + 96;
  id v9 = objc_msgSend(result, sel_subscribedTagIDs);

  char v68 = v3;
  if (v9)
  {
    uint64_t v10 = sub_1DFDFE220();
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v13 = *(void *)(v0 + 144);
  uint64_t v12 = *(void *)(v0 + 152);
  uint64_t v14 = sub_1DE9DB9D8(v10);
  swift_bridgeObjectRelease();
  unint64_t v15 = *(void *)(v12 + 24);
  *(void *)(v0 + 96) = v15;
  uint64_t v74 = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1DEBB1F30(v69);
  swift_bridgeObjectRetain();
  sub_1DEA74168(v2);
  unint64_t v16 = v15;
  uint64_t v17 = sub_1DEB529B8(MEMORY[0x1E4FBC860]);
  uint64_t v18 = sub_1DE9DB9D8(v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1DF710FCC(v13);
  *(void *)(v0 + 104) = v15;
  sub_1DEA20188(0, (unint64_t *)&qword_1EBABA9A0, (uint64_t (*)(uint64_t))sub_1DEABCC20, MEMORY[0x1E4FBB320]);
  sub_1DEBB1F5C();
  unint64_t v20 = sub_1DFDFDFF0();
  unint64_t v21 = sub_1DEBB1C7C(v20, v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = v14;
  unint64_t v22 = sub_1DEBAE3C8(v21, v71, v73, v14);
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DFE0FB10;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1DFDFFBE0();
    sub_1DEBA2BAC(v69);
  }
  else
  {
    uint64_t v24 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v25 = MEMORY[0x1E4FBB550];
  uint64_t v26 = MEMORY[0x1E4FBB5C8];
  *(void *)(v23 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v23 + 64) = v26;
  *(void *)(v23 + 32) = v24;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v23 + 96) = v25;
  *(void *)(v23 + 104) = v26;
  unint64_t v28 = v22 >> 62;
  *(void *)(v23 + 72) = v27;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v23 + 136) = v25;
  *(void *)(v23 + 144) = v26;
  *(void *)(v23 + 112) = v29;
  uint64_t v30 = sub_1DFA588CC();
  uint64_t v32 = v31;
  *(void *)(v23 + 176) = MEMORY[0x1E4FBB1A0];
  unint64_t v33 = sub_1DEA08668();
  *(void *)(v23 + 184) = v33;
  *(void *)(v23 + 152) = v30;
  *(void *)(v23 + 160) = v32;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  if (v68)
  {
    id v34 = 0;
    id v35 = 0;
    if (v28)
    {
LABEL_17:
      unint64_t v36 = swift_bridgeObjectRetain();
      uint64_t v37 = (uint64_t)sub_1DEC78FDC(v36);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  else
  {
    unint64_t v38 = *(id **)(v0 + 152);
    if (v65)
    {
      id v39 = v65;
      id v40 = objc_msgSend(v39, sel_bottom);
      id v41 = objc_msgSend(*v38, sel_bottom);
      id v34 = objc_msgSend(self, sel_feedRangeWithTop_bottom_, v40, v41);
    }
    else
    {
      id v34 = v38[1];
    }
    unint64_t v42 = *(id **)(v0 + 152);
    if (v66)
    {
      id v43 = v66;
      id v44 = objc_msgSend(v43, sel_bottom);
      id v45 = objc_msgSend(*v42, sel_bottom);
      id v35 = objc_msgSend(self, sel_feedRangeWithTop_bottom_, v44, v45);
    }
    else
    {
      id v35 = v42[2];
    }
    if (v28) {
      goto LABEL_17;
    }
  }
  uint64_t v37 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
LABEL_26:
  uint64_t v74 = v37;
  sub_1DEBB0A38(&v74);
  if (v11)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return (id)swift_release();
  }
  else
  {
    unint64_t v70 = v33;
    uint64_t v46 = *(void *)(v0 + 160);
    uint64_t v47 = *(void **)(v0 + 136);
    swift_bridgeObjectRelease();
    uint64_t v64 = v74;
    unsigned int v48 = *(void **)(v46 + 304);
    id v49 = objc_msgSend(objc_msgSend(v47, sel_backingTag), sel_identifier);
    swift_unknownObjectRelease();
    if (!v49)
    {
      sub_1DFDFDD20();
      id v49 = (id)sub_1DFDFDCE0();
      swift_bridgeObjectRelease();
    }
    uint64_t v50 = *(void *)(v0 + 152);
    uint64_t v51 = *(uint64_t **)(v0 + 128);
    id v52 = objc_msgSend(v48, sel_allFeedItemsWithTopic_, v49);

    sub_1DE919914(0, (unint64_t *)&qword_1EBABAAA0);
    unint64_t v53 = sub_1DFDFE220();

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1DEBAE5D4(v53, v71, v73, v67);
    uint64_t v63 = *(void *)(v50 + 32);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1DFE0CC10;
    swift_bridgeObjectRetain();
    sub_1DEBB1FE4(v34, v35);
    uint64_t v55 = sub_1DFA588CC();
    uint64_t v56 = MEMORY[0x1E4FBB1A0];
    *(void *)(v54 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v54 + 64) = v70;
    *(void *)(v54 + 32) = v55;
    *(void *)(v54 + 40) = v57;
    *(void *)(v0 + 80) = 0;
    *(void *)(v0 + 88) = 0xE000000000000000;
    *(void *)(v0 + 48) = v34;
    *(void *)(v0 + 56) = v35;
    sub_1DFDFFB10();
    uint64_t v58 = *(void *)(v0 + 80);
    uint64_t v59 = *(void *)(v0 + 88);
    *(void *)(v54 + 96) = v56;
    *(void *)(v54 + 104) = v70;
    *(void *)(v54 + 72) = v58;
    *(void *)(v54 + 80) = v59;
    sub_1DFDFE560();
    uint64_t v60 = MEMORY[0x1E4FBB460];
    *(void *)(v54 + 136) = MEMORY[0x1E4FBB3D0];
    *(void *)(v54 + 144) = v60;
    *(void *)(v54 + 112) = v61;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    sub_1DEBB2024(v34, v35);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();

    *uint64_t v51 = v64;
    v51[1] = v72;
    v51[2] = v63;
    v51[3] = (uint64_t)v34;
    v51[4] = (uint64_t)v35;
    id v62 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v62();
  }
}

uint64_t sub_1DEBAF690()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEBAF6F4(void **a1, id *a2)
{
  sub_1DEA20188(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  unsigned int v48 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v49 = (char *)v46 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v46 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v46 - v13;
  uint64_t v15 = sub_1DFDE7600();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v47 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  unint64_t v21 = (char *)v46 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v51 = (char *)v46 - v22;
  uint64_t v23 = *a1;
  id v50 = *a2;
  id v24 = objc_msgSend(v23, sel_displayDate);
  uint64_t v25 = &selRef_handleCloseActionOnPresenter_;
  if (v24)
  {
    uint64_t v26 = v24;
    v46[1] = v2;
    sub_1DFDE7570();

    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v27(v14, v21, v15);
    unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v28(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      v27(v51, v14, v15);
      uint64_t v32 = (uint64_t)v49;
      goto LABEL_12;
    }
    uint64_t v25 = &selRef_handleCloseActionOnPresenter_;
  }
  else
  {
    unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v28(v14, 1, 1, v15);
  }
  id v29 = [v23 v25[221]];
  if (!v29)
  {
    v28(v12, 1, 1, v15);
    goto LABEL_10;
  }
  uint64_t v30 = v29;
  sub_1DFDE7570();

  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v31(v12, v21, v15);
  v28(v12, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) == 1)
  {
LABEL_10:
    sub_1DFDE75F0();
    sub_1DEAEA868((uint64_t)v12);
    goto LABEL_11;
  }
  v31(v51, v12, v15);
LABEL_11:
  uint64_t v32 = (uint64_t)v49;
  sub_1DEAEA868((uint64_t)v14);
LABEL_12:
  uint64_t v33 = (uint64_t)v48;
  id v34 = objc_msgSend(v50, sel_displayDate);
  if (!v34)
  {
    v28((char *)v32, 1, 1, v15);
LABEL_16:
    id v38 = objc_msgSend(v50, sel_publishDate);
    if (v38)
    {
      id v39 = v38;
      sub_1DFDE7570();

      id v40 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
      v40(v33, v21, v15);
      v28((char *)v33, 0, 1, v15);
      int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v33, 1, v15);
      uint64_t v37 = v47;
      if (v41 != 1)
      {
        v40((uint64_t)v47, (char *)v33, v15);
LABEL_21:
        sub_1DEAEA868(v32);
        goto LABEL_22;
      }
    }
    else
    {
      v28((char *)v33, 1, 1, v15);
      uint64_t v37 = v47;
    }
    sub_1DFDE75F0();
    sub_1DEAEA868(v33);
    goto LABEL_21;
  }
  id v35 = v34;
  sub_1DFDE7570();

  unint64_t v36 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
  v36(v32, v21, v15);
  v28((char *)v32, 0, 1, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v32, 1, v15) == 1) {
    goto LABEL_16;
  }
  uint64_t v37 = v47;
  v36((uint64_t)v47, (char *)v32, v15);
LABEL_22:
  unint64_t v42 = v51;
  char v43 = sub_1DFDE74E0();
  id v44 = *(void (**)(char *, uint64_t))(v16 + 8);
  v44(v37, v15);
  v44(v42, v15);
  return v43 & 1;
}

uint64_t sub_1DEBAFCD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend(a1, sel_topics);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1DE919914(0, (unint64_t *)&unk_1EBAEA4F0);
    unint64_t v6 = sub_1DFDFE220();

    if (v6 >> 62) {
      goto LABEL_36;
    }
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v7)
    {
      uint64_t v8 = 4;
      while (1)
      {
        id v9 = (v6 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E01EE240](v8 - 4, v6) : *(id *)(v6 + 8 * v8);
        uint64_t v10 = v9;
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1)) {
          break;
        }
        if (!objc_msgSend(v9, sel_hasTagID)) {
          goto LABEL_6;
        }
        id v12 = objc_msgSend(v10, sel_tagID);
        if (!v12) {
          goto LABEL_6;
        }
        uint64_t v13 = v12;
        uint64_t v14 = sub_1DFDFDD20();
        uint64_t v16 = v15;

        if (v14 == a2 && v16 == a3)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v18 = sub_1DFDFFF50();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0) {
            goto LABEL_6;
          }
        }
        if (objc_msgSend(v10, sel_isDisallowedFromGrouping))
        {
          swift_bridgeObjectRelease();
          if (qword_1EBAEA6E8 != -1) {
            swift_once();
          }
          sub_1DEA086BC();
          uint64_t v29 = swift_allocObject();
          *(_OWORD *)(v29 + 16) = xmmword_1DFE0B750;
          uint64_t v30 = MEMORY[0x1E4FBB1A0];
          *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v31 = sub_1DEA08668();
          *(void *)(v29 + 64) = v31;
          *(void *)(v29 + 32) = a2;
          *(void *)(v29 + 40) = a3;
          swift_bridgeObjectRetain();
          id v32 = objc_msgSend(a1, sel_articleID);
          if (v32)
          {
            uint64_t v33 = v32;
            sub_1DFDFDD20();
          }
          sub_1DEBB2068();
          uint64_t v34 = sub_1DFDFDD90();
          *(void *)(v29 + 96) = v30;
          *(void *)(v29 + 104) = v31;
          *(void *)(v29 + 72) = v34;
          *(void *)(v29 + 80) = v35;
          sub_1DFDFEA60();
          goto LABEL_34;
        }
        id v19 = objc_msgSend(a1, sel_publisherID);
        if (v19)
        {
          uint64_t v20 = v19;
          uint64_t v21 = sub_1DFDFDD20();
          uint64_t v23 = v22;

          if (objc_msgSend(v10, sel_hardFollowRequiredForGrouping)
            && (sub_1DEAAB55C(v21, v23, a4) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            if (qword_1EBAEA6E8 != -1) {
              swift_once();
            }
            sub_1DEA086BC();
            uint64_t v24 = swift_allocObject();
            *(_OWORD *)(v24 + 16) = xmmword_1DFE0CC10;
            uint64_t v25 = MEMORY[0x1E4FBB1A0];
            *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v26 = sub_1DEA08668();
            *(void *)(v24 + 32) = a2;
            *(void *)(v24 + 40) = a3;
            *(void *)(v24 + 96) = v25;
            *(void *)(v24 + 104) = v26;
            *(void *)(v24 + 64) = v26;
            *(void *)(v24 + 72) = v21;
            *(void *)(v24 + 80) = v23;
            swift_bridgeObjectRetain();
            id v27 = objc_msgSend(a1, sel_articleID);
            if (v27)
            {
              unint64_t v28 = v27;
              sub_1DFDFDD20();
            }
            sub_1DEBB2068();
            uint64_t v36 = sub_1DFDFDD90();
            *(void *)(v24 + 136) = v25;
            *(void *)(v24 + 144) = v26;
            *(void *)(v24 + 112) = v36;
            *(void *)(v24 + 120) = v37;
            sub_1DFDFEA60();
LABEL_34:
            sub_1DFDF00C0();
            swift_bridgeObjectRelease();

            return 0;
          }
          swift_bridgeObjectRelease();
        }
LABEL_6:

        ++v8;
        if (v11 == v7) {
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_36:
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
LABEL_37:
    swift_bridgeObjectRelease();
  }
  return 1;
}

uint64_t sub_1DEBB012C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v61 = a6;
  uint64_t v62 = a5;
  uint64_t v64 = a4;
  uint64_t v56 = a1;
  sub_1DEBB20C4();
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v55 = v11;
  uint64_t v57 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1DFDE7600();
  uint64_t v12 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v60 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA20188(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v52 - v15;
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DFE0CC10;
  uint64_t v18 = sub_1DFA588CC();
  uint64_t v20 = v19;
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v22 = sub_1DEA08668();
  *(void *)(v17 + 64) = v22;
  *(void *)(v17 + 32) = v18;
  *(void *)(v17 + 40) = v20;
  unint64_t v23 = *(void *)(a3 + 32);
  uint64_t v25 = a3 + 8;
  uint64_t v24 = *(void **)(a3 + 8);
  unint64_t v53 = *(void **)(v25 + 8);
  unint64_t v54 = v23;
  uint64_t v26 = sub_1DF4DDB08(v24, v53, v23);
  *(void *)(v17 + 96) = v21;
  *(void *)(v17 + 104) = v22;
  uint64_t v27 = MEMORY[0x1E4FBB550];
  *(void *)(v17 + 72) = v26;
  *(void *)(v17 + 80) = v28;
  uint64_t v29 = MEMORY[0x1E4FBB5C8];
  *(void *)(v17 + 136) = v27;
  *(void *)(v17 + 144) = v29;
  *(void *)(v17 + 112) = v64;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DE919914(0, &qword_1EBAEA620);
  uint64_t v30 = v62;
  uint64_t v31 = *(void *)(v62 + 64);
  id v32 = *(void **)(v61 + 16);
  uint64_t v33 = *(void *)(v61 + 24);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  swift_unknownObjectRetain();
  id v35 = v32;
  id v36 = a2;
  swift_unknownObjectRetain();
  id v37 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_initWithConfiguration_cloudContext_feedDescriptor_personalizer_, v31, v35, v36, v33);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  objc_msgSend(v37, sel_setPurpose_, *MEMORY[0x1E4F7E018]);
  id v38 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v30
                                                              + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_dateRange), sel_laterDate));
  if (v38)
  {
    id v39 = v38;
    id v40 = v60;
    sub_1DFDE7570();

    uint64_t v41 = v63;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v40, v63);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v41);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v41);
    if (result != 1)
    {
      char v43 = (void *)sub_1DFDE74D0();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v41);
      objc_msgSend(v37, sel_setTopOfFeedDate_, v43);

      objc_msgSend(v37, sel_setFreeFeedRange_, v24);
      objc_msgSend(v37, sel_setPaidFeedRange_, v53);
      objc_msgSend(v37, sel_setMaxFetchCount_, v64);
      sub_1DEABCC20();
      id v44 = (void *)sub_1DFDFE200();
      objc_msgSend(v37, sel_setPrecedingHeadlines_, v44);

      uint64_t v46 = v57;
      uint64_t v45 = v58;
      uint64_t v47 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v56, v59);
      unint64_t v48 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      uint64_t v49 = swift_allocObject();
      *(double *)(v49 + 16) = a7;
      *(void *)(v49 + 24) = v36;
      (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v49 + v48, v46, v47);
      aBlock[4] = sub_1DEBB2208;
      aBlock[5] = v49;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DEBB0960;
      aBlock[3] = &block_descriptor_8;
      id v50 = _Block_copy(aBlock);
      id v51 = v36;
      swift_release();
      objc_msgSend(v37, sel_setFetchCompletionHandler_, v50);
      _Block_release(v50);
      sub_1DFDECE10();
      sub_1DFDECDE0();
      sub_1DFDECDF0();

      return swift_release();
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v16, 1, 1, v63);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEBB0738(uint64_t a1, void *a2, void *a3, int a4, id a5)
{
  if (a1)
  {
    if (!a5)
    {
      sub_1DEBB20C4();
      swift_bridgeObjectRetain();
      id v8 = a2;
      id v9 = a3;
      return sub_1DFDFE450();
    }
  }
  else if (!a5)
  {
    sub_1DEBB22B0();
    swift_allocError();
    unsigned char *v19 = 0;
  }
  id v11 = a5;
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DFE0CC10;
  sub_1DFDFE560();
  uint64_t v13 = MEMORY[0x1E4FBB460];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v12 + 64) = v13;
  *(void *)(v12 + 32) = v14;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 96) = MEMORY[0x1E4FBB1A0];
  unint64_t v16 = sub_1DEA08668();
  *(void *)(v12 + 104) = v16;
  *(void *)(v12 + 72) = 0;
  *(void *)(v12 + 80) = 0xE000000000000000;
  uint64_t v17 = sub_1DFA588CC();
  *(void *)(v12 + 136) = v15;
  *(void *)(v12 + 144) = v16;
  *(void *)(v12 + 112) = v17;
  *(void *)(v12 + 120) = v18;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DEBB20C4();
  return sub_1DFDFE440();
}

uint64_t sub_1DEBB0960(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v10 = a2;
  id v11 = *(void (**)(uint64_t, void *, void *, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1DEABCC20();
    uint64_t v10 = sub_1DFDFE220();
  }
  swift_retain();
  id v12 = a3;
  id v13 = a4;
  id v14 = a6;
  v11(v10, a3, a4, a5, a6);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEBB0A38(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1DEE4AA1C();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1DEBB0AB4(v6);
  return sub_1DFDFFA60();
}

uint64_t sub_1DEBB0AB4(uint64_t *a1)
{
  sub_1DEA20188(0, (unint64_t *)&qword_1EBAA6DB0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  id v8 = (char *)&v141 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v161 = (uint64_t)&v141 - v10;
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v141 - v11;
  uint64_t v13 = sub_1DFDE7600();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v160 = (char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  CGFloat v163 = (char *)&v141 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v159 = (char *)&v141 - v19;
  uint64_t v20 = a1[1];
  uint64_t result = sub_1DFDFFED0();
  if (result >= v20)
  {
    if (v20 < 0) {
      goto LABEL_157;
    }
    if (v20) {
      return sub_1DEBB1828(0, v20, 1, a1);
    }
    return result;
  }
  if (v20 >= 0) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = v20 + 1;
  }
  if (v20 < -1) {
    goto LABEL_166;
  }
  uint64_t v145 = result;
  uint64_t v153 = v5;
  if (v20 < 2)
  {
    uint64_t v25 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v168 = MEMORY[0x1E4FBC860];
    double v150 = (id *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v20 != 1)
    {
      unint64_t v83 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_123:
      uint64_t v134 = v151;
      if (v83 >= 2)
      {
        uint64_t v135 = *a1;
        do
        {
          unint64_t v136 = v83 - 2;
          if (v83 < 2) {
            goto LABEL_152;
          }
          if (!v135) {
            goto LABEL_165;
          }
          uint64_t v137 = *(void *)&v25[16 * v136 + 32];
          uint64_t v138 = *(void *)&v25[16 * v83 + 24];
          sub_1DEBB1920((id *)(v135 + 8 * v137), (id *)(v135 + 8 * *(void *)&v25[16 * v83 + 16]), v135 + 8 * v138, v150);
          if (v134) {
            break;
          }
          if (v138 < v137) {
            goto LABEL_153;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v25 = sub_1DEE48394((uint64_t)v25);
          }
          if (v136 >= *((void *)v25 + 2)) {
            goto LABEL_154;
          }
          uint64_t v139 = &v25[16 * v136 + 32];
          *(void *)uint64_t v139 = v137;
          *((void *)v139 + 1) = v138;
          unint64_t v140 = *((void *)v25 + 2);
          if (v83 > v140) {
            goto LABEL_155;
          }
          memmove(&v25[16 * v83 + 16], &v25[16 * v83 + 32], 16 * (v140 - v83));
          *((void *)v25 + 2) = v140 - 1;
          unint64_t v83 = v140 - 1;
        }
        while (v140 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
LABEL_136:
      *(void *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1DFDFE250();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v23 = v22 >> 1;
    sub_1DEABCC20();
    uint64_t v24 = sub_1DFDFE350();
    *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) = v23;
    double v150 = (id *)((v24 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v168 = v24;
  }
  uint64_t v26 = 0;
  uint64_t v142 = a1;
  uint64_t v27 = *a1;
  unint64_t v164 = (void (**)(void))(v14 + 32);
  uint64_t v165 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  CGFloat v162 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v154 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v144 = v27 + 16;
  uint64_t v143 = v27 - 8;
  uint64_t v25 = (char *)MEMORY[0x1E4FBC860];
  int v152 = v8;
  CGFloat v157 = v12;
  uint64_t v146 = v20;
  uint64_t v156 = v27;
  uint64_t v158 = v13;
  while (1)
  {
    uint64_t v28 = v26;
    uint64_t v29 = v26 + 1;
    uint64_t v148 = v26;
    if (v26 + 1 >= v20) {
      goto LABEL_31;
    }
    uint64_t v30 = *(void **)(v27 + 8 * v29);
    id v166 = *(id *)(v27 + 8 * v26);
    v167[0] = v30;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v31 = v151;
    int v32 = sub_1DEBAF6F4(v167, &v166);
    uint64_t v151 = v31;
    if (v31)
    {
LABEL_135:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_136;
    }
    int v33 = v32;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v29 = v28 + 2;
    if (v28 + 2 < v20)
    {
      uint64_t v34 = (void **)(v144 + 8 * v28);
      while (1)
      {
        id v35 = *v34;
        id v166 = *(v34 - 1);
        v167[0] = v35;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v36 = v151;
        int v37 = sub_1DEBAF6F4(v167, &v166);
        uint64_t v151 = v36;
        if (v36) {
          goto LABEL_135;
        }
        int v38 = v37;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if ((v33 ^ v38)) {
          break;
        }
        ++v29;
        ++v34;
        uint64_t v20 = v146;
        if (v146 == v29)
        {
          uint64_t v29 = v146;
          goto LABEL_22;
        }
      }
      uint64_t v20 = v146;
LABEL_22:
      uint64_t v28 = v148;
    }
    uint64_t v27 = v156;
    if (v33)
    {
      if (v29 < v28) {
        goto LABEL_161;
      }
      if (v28 < v29)
      {
        id v39 = (uint64_t *)(v143 + 8 * v29);
        uint64_t v40 = v29;
        uint64_t v41 = v28;
        unint64_t v42 = (uint64_t *)(v156 + 8 * v28);
        do
        {
          if (v41 != --v40)
          {
            if (!v27) {
              goto LABEL_164;
            }
            uint64_t v43 = *v42;
            *unint64_t v42 = *v39;
            *id v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_31:
    if (v29 >= v20) {
      goto LABEL_69;
    }
    if (__OFSUB__(v29, v28)) {
      goto LABEL_158;
    }
    if (v29 - v28 >= v145) {
      goto LABEL_69;
    }
    if (__OFADD__(v28, v145)) {
      goto LABEL_159;
    }
    uint64_t v44 = v28 + v145 >= v20 ? v20 : v28 + v145;
    if (v44 < v28) {
      break;
    }
    if (v29 == v44) {
      goto LABEL_69;
    }
    double v141 = v25;
    uint64_t v45 = v143 + 8 * v29;
    uint64_t v147 = v44;
    while (2)
    {
      uint64_t v47 = *(void **)(v27 + 8 * v29);
      uint64_t v48 = v28;
      uint64_t v149 = v45;
      uint64_t v155 = v29;
      while (1)
      {
        uint64_t v49 = *(void **)v45;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        id v50 = objc_msgSend(v47, sel_displayDate);
        if (v50)
        {
          id v51 = v50;
          uint64_t v52 = v163;
          sub_1DFDE7570();

          unint64_t v53 = *v164;
          uint64_t v54 = (uint64_t)v157;
          uint64_t v55 = v52;
          uint64_t v56 = v164;
          ((void (*)(char *, char *, uint64_t))*v164)(v157, v55, v13);
          uint64_t v57 = *v165;
          (*v165)(v54, 0, 1, v13);
          if ((*v162)(v54, 1, v13) != 1)
          {
            ((void (*)(char *, uint64_t, uint64_t))v53)(v159, v54, v13);
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v57 = *v165;
          (*v165)((uint64_t)v157, 1, 1, v13);
          uint64_t v56 = v164;
        }
        id v58 = objc_msgSend(v47, sel_publishDate, v141);
        if (!v58)
        {
          uint64_t v62 = (uint64_t)v153;
          v57((uint64_t)v153, 1, 1, v13);
LABEL_52:
          sub_1DFDE75F0();
          sub_1DEAEA868(v62);
          uint64_t v56 = v164;
          goto LABEL_53;
        }
        uint64_t v59 = v58;
        uint64_t v60 = v163;
        sub_1DFDE7570();

        uint64_t v61 = *v56;
        uint64_t v62 = (uint64_t)v153;
        ((void (*)(char *, char *, uint64_t))v61)(v153, v60, v13);
        v57(v62, 0, 1, v13);
        if ((*v162)(v62, 1, v13) == 1) {
          goto LABEL_52;
        }
        uint64_t v63 = v62;
        uint64_t v56 = v164;
        ((void (*)(char *, uint64_t, uint64_t))v61)(v159, v63, v13);
LABEL_53:
        sub_1DEAEA868((uint64_t)v157);
LABEL_54:
        id v64 = objc_msgSend(v49, sel_displayDate, v141);
        if (v64)
        {
          uint64_t v65 = v64;
          unint64_t v66 = v163;
          sub_1DFDE7570();

          uint64_t v67 = *v56;
          uint64_t v68 = v161;
          ((void (*)(uint64_t, char *, uint64_t))v67)(v161, v66, v13);
          v57(v68, 0, 1, v13);
          uint64_t v69 = v68;
          uint64_t v56 = v164;
          if ((*v162)(v69, 1, v13) != 1)
          {
            ((void (*)(char *, uint64_t, uint64_t))v67)(v160, v161, v13);
            goto LABEL_64;
          }
        }
        else
        {
          v57(v161, 1, 1, v13);
        }
        id v70 = objc_msgSend(v49, sel_publishDate);
        if (!v70)
        {
          uint64_t v73 = (uint64_t)v152;
          v57((uint64_t)v152, 1, 1, v13);
LABEL_62:
          sub_1DFDE75F0();
          sub_1DEAEA868(v73);
          goto LABEL_63;
        }
        uint64_t v71 = v70;
        sub_1DFDE7570();

        uint64_t v72 = *v56;
        uint64_t v73 = (uint64_t)v152;
        (*v56)();
        v57(v73, 0, 1, v13);
        if ((*v162)(v73, 1, v13) == 1) {
          goto LABEL_62;
        }
        ((void (*)(char *, uint64_t, uint64_t))v72)(v160, v73, v13);
LABEL_63:
        sub_1DEAEA868(v161);
LABEL_64:
        uint64_t v74 = v159;
        uint64_t v75 = v160;
        char v76 = sub_1DFDE74E0();
        uint64_t v77 = *v154;
        char v78 = v75;
        uint64_t v79 = v158;
        (*v154)(v78, v158);
        v77(v74, v79);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if ((v76 & 1) == 0) {
          break;
        }
        uint64_t v27 = v156;
        if (!v156) {
          goto LABEL_162;
        }
        uint64_t v80 = *(void **)v45;
        uint64_t v47 = *(void **)(v45 + 8);
        *(void *)uint64_t v45 = v47;
        *(void *)(v45 + 8) = v80;
        v45 -= 8;
        ++v48;
        uint64_t v46 = v155;
        uint64_t v13 = v158;
        if (v155 == v48) {
          goto LABEL_42;
        }
      }
      uint64_t v46 = v155;
      uint64_t v27 = v156;
      uint64_t v13 = v158;
LABEL_42:
      uint64_t v29 = v46 + 1;
      uint64_t v28 = v148;
      uint64_t v45 = v149 + 8;
      if (v29 != v147) {
        continue;
      }
      break;
    }
    uint64_t v29 = v147;
    uint64_t v25 = v141;
LABEL_69:
    if (v29 < v28) {
      goto LABEL_156;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v25 = sub_1DEE47AC8(0, *((void *)v25 + 2) + 1, 1, v25);
    }
    unint64_t v82 = *((void *)v25 + 2);
    unint64_t v81 = *((void *)v25 + 3);
    unint64_t v83 = v82 + 1;
    uint64_t v27 = v156;
    if (v82 >= v81 >> 1)
    {
      uint64_t v133 = sub_1DEE47AC8((char *)(v81 > 1), v82 + 1, 1, v25);
      uint64_t v27 = v156;
      uint64_t v25 = v133;
    }
    *((void *)v25 + 2) = v83;
    id v84 = &v25[16 * v82 + 32];
    *(void *)id v84 = v28;
    *((void *)v84 + 1) = v29;
    uint64_t v155 = v29;
    if (v82)
    {
      id v85 = v25 + 32;
      while (1)
      {
        unint64_t v86 = v83 - 1;
        if (v83 >= 4)
        {
          id v91 = &v85[16 * v83];
          uint64_t v92 = *((void *)v91 - 8);
          uint64_t v93 = *((void *)v91 - 7);
          BOOL v97 = __OFSUB__(v93, v92);
          uint64_t v94 = v93 - v92;
          if (v97) {
            goto LABEL_141;
          }
          uint64_t v96 = *((void *)v91 - 6);
          uint64_t v95 = *((void *)v91 - 5);
          BOOL v97 = __OFSUB__(v95, v96);
          uint64_t v89 = v95 - v96;
          char v90 = v97;
          if (v97) {
            goto LABEL_142;
          }
          unint64_t v98 = v83 - 2;
          uint64_t v99 = &v85[16 * v83 - 32];
          uint64_t v101 = *(void *)v99;
          uint64_t v100 = *((void *)v99 + 1);
          BOOL v97 = __OFSUB__(v100, v101);
          uint64_t v102 = v100 - v101;
          if (v97) {
            goto LABEL_144;
          }
          BOOL v97 = __OFADD__(v89, v102);
          uint64_t v103 = v89 + v102;
          if (v97) {
            goto LABEL_147;
          }
          if (v103 >= v94)
          {
            uint64_t v121 = &v85[16 * v86];
            uint64_t v123 = *(void *)v121;
            uint64_t v122 = *((void *)v121 + 1);
            BOOL v97 = __OFSUB__(v122, v123);
            uint64_t v124 = v122 - v123;
            if (v97) {
              goto LABEL_151;
            }
            BOOL v114 = v89 < v124;
            goto LABEL_107;
          }
        }
        else
        {
          if (v83 != 3)
          {
            uint64_t v115 = *((void *)v25 + 4);
            uint64_t v116 = *((void *)v25 + 5);
            BOOL v97 = __OFSUB__(v116, v115);
            uint64_t v108 = v116 - v115;
            char v109 = v97;
            goto LABEL_101;
          }
          uint64_t v88 = *((void *)v25 + 4);
          uint64_t v87 = *((void *)v25 + 5);
          BOOL v97 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          char v90 = v97;
        }
        if (v90) {
          goto LABEL_143;
        }
        unint64_t v98 = v83 - 2;
        int v104 = &v85[16 * v83 - 32];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v107 = __OFSUB__(v105, v106);
        uint64_t v108 = v105 - v106;
        char v109 = v107;
        if (v107) {
          goto LABEL_146;
        }
        uint64_t v110 = &v85[16 * v86];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v97 = __OFSUB__(v111, v112);
        uint64_t v113 = v111 - v112;
        if (v97) {
          goto LABEL_149;
        }
        if (__OFADD__(v108, v113)) {
          goto LABEL_150;
        }
        if (v108 + v113 >= v89)
        {
          BOOL v114 = v89 < v113;
LABEL_107:
          if (v114) {
            unint64_t v86 = v98;
          }
          goto LABEL_109;
        }
LABEL_101:
        if (v109) {
          goto LABEL_145;
        }
        long long v117 = &v85[16 * v86];
        uint64_t v119 = *(void *)v117;
        uint64_t v118 = *((void *)v117 + 1);
        BOOL v97 = __OFSUB__(v118, v119);
        uint64_t v120 = v118 - v119;
        if (v97) {
          goto LABEL_148;
        }
        if (v120 < v108) {
          goto LABEL_118;
        }
LABEL_109:
        unint64_t v125 = v86 - 1;
        if (v86 - 1 >= v83)
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!v27) {
          goto LABEL_163;
        }
        uint64_t v126 = v25;
        uint64_t v127 = &v85[16 * v125];
        uint64_t v128 = *(void *)v127;
        uint64_t v129 = &v85[16 * v86];
        uint64_t v130 = *((void *)v129 + 1);
        uint64_t v131 = v151;
        sub_1DEBB1920((id *)(v27 + 8 * *(void *)v127), (id *)(v27 + 8 * *(void *)v129), v27 + 8 * v130, v150);
        uint64_t v151 = v131;
        if (v131) {
          goto LABEL_134;
        }
        if (v130 < v128) {
          goto LABEL_138;
        }
        if (v86 > *((void *)v126 + 2)) {
          goto LABEL_139;
        }
        *(void *)uint64_t v127 = v128;
        *(void *)&v85[16 * v125 + 8] = v130;
        unint64_t v132 = *((void *)v126 + 2);
        if (v86 >= v132) {
          goto LABEL_140;
        }
        uint64_t v25 = v126;
        unint64_t v83 = v132 - 1;
        memmove(&v85[16 * v86], v129 + 16, 16 * (v132 - 1 - v86));
        *((void *)v126 + 2) = v132 - 1;
        uint64_t v27 = v156;
        if (v132 <= 2) {
          goto LABEL_118;
        }
      }
    }
    unint64_t v83 = 1;
LABEL_118:
    uint64_t v20 = v146;
    uint64_t v26 = v155;
    if (v155 >= v146)
    {
      a1 = v142;
      goto LABEL_123;
    }
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  uint64_t result = sub_1DFDFFBA0();
  __break(1u);
  return result;
}

uint64_t sub_1DEBB1828(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
    uint64_t v13 = result;
LABEL_4:
    uint64_t v9 = *(void **)(v7 + 8 * v5);
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t v16 = v9;
      id v15 = *(id *)v10;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      char v11 = sub_1DEBAF6F4(&v16, &v15);
      swift_unknownObjectRelease();
      uint64_t result = swift_unknownObjectRelease();
      if (v4) {
        break;
      }
      if (v11)
      {
        if (!v7)
        {
          __break(1u);
          return result;
        }
        id v12 = *(id *)v10;
        uint64_t v9 = *(void **)(v10 + 8);
        *(void *)uint64_t v10 = v9;
        *(void *)(v10 + 8) = v12;
        v10 -= 8;
        if (v5 != ++v6) {
          continue;
        }
      }
      ++v5;
      v8 += 8;
      uint64_t v6 = v13;
      if (v5 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_1DEBB1920(id *__src, id *a2, unint64_t a3, id *__dst)
{
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  int v37 = __src;
  uint64_t v36 = __dst;
  int v32 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      uint64_t v19 = v4;
      if (__dst != a2 || &a2[v13] <= __dst)
      {
        memmove(__dst, a2, 8 * v13);
        __dst = v32;
      }
      uint64_t v20 = &__dst[v13];
      id v35 = v20;
      int v37 = v6;
      if (v7 >= v6 || v11 < 8) {
        goto LABEL_48;
      }
      uint64_t v21 = (void **)(a3 - 8);
      uint64_t v22 = v6;
      uint64_t v31 = v7;
      while (1)
      {
        uint64_t v23 = v20;
        uint64_t v24 = *--v20;
        uint64_t v34 = v24;
        uint64_t v25 = *--v22;
        id v33 = v25;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        char v26 = sub_1DEBAF6F4(&v34, &v33);
        if (v19) {
          goto LABEL_47;
        }
        char v27 = v26;
        uint64_t v28 = v21 + 1;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v27)
        {
          uint64_t v29 = v32;
          if (v28 != v6 || v21 >= v6) {
            char *v21 = *v22;
          }
          int v37 = v22;
          uint64_t v19 = 0;
          uint64_t v20 = v23;
        }
        else
        {
          id v35 = v20;
          uint64_t v29 = v32;
          if (v28 < v23 || v21 >= v23 || v28 != v23) {
            char *v21 = *v20;
          }
          uint64_t v22 = v6;
          uint64_t v19 = 0;
        }
        if (v22 > v31)
        {
          --v21;
          uint64_t v6 = v22;
          if (v20 > v29) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
    {
      memmove(__dst, __src, 8 * v10);
      __dst = v32;
    }
    uint64_t v14 = &__dst[v10];
    id v35 = v14;
    if ((unint64_t)v6 >= a3 || v8 < 8) {
      goto LABEL_48;
    }
    while (1)
    {
      uint64_t v34 = *v6;
      id v15 = __dst;
      id v33 = *__dst;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      char v16 = sub_1DEBAF6F4(&v34, &v33);
      if (v4) {
        break;
      }
      char v17 = v16;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if (v17)
      {
        uint64_t v18 = v6 + 1;
        if (v7 < v6 || v7 >= v18 || v7 != v6) {
          *uint64_t v7 = *v6;
        }
        __dst = v15;
      }
      else
      {
        if (v7 != v15) {
          *uint64_t v7 = *v15;
        }
        __dst = v15 + 1;
        uint64_t v36 = v15 + 1;
        uint64_t v18 = v6;
      }
      int v37 = ++v7;
      if (__dst < v14)
      {
        uint64_t v6 = v18;
        if ((unint64_t)v18 < a3) {
          continue;
        }
      }
      goto LABEL_48;
    }
LABEL_47:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
LABEL_48:
    sub_1DEE47BF0(&v37, &v36, &v35);
    return 1;
  }
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DEBB1C7C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = a1;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_18:
    uint64_t v7 = sub_1DFDFFBE0();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7)
    {
LABEL_3:
      unint64_t v8 = 0;
      unint64_t v9 = v6 & 0xC000000000000001;
      unint64_t v15 = v6;
      uint64_t v16 = v6 & 0xFFFFFFFFFFFFFF8;
      uint64_t v14 = v7;
      while (1)
      {
        if (v9)
        {
          uint64_t v10 = (void *)MEMORY[0x1E01EE240](v8, v6);
          unint64_t v11 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            return a3;
          }
        }
        else
        {
          if (v8 >= *(void *)(v16 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v10 = *(void **)(v6 + 8 * v8 + 32);
          swift_unknownObjectRetain();
          unint64_t v11 = v8 + 1;
          if (__OFADD__(v8, 1)) {
            goto LABEL_14;
          }
        }
        char v17 = v10;
        char v12 = sub_1DF710548(&v17, a2, a3);
        if (v3) {
          goto LABEL_15;
        }
        if (v12)
        {
          sub_1DFDFFA50();
          sub_1DFDFFA90();
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
          uint64_t v7 = v14;
          unint64_t v6 = v15;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v8;
        if (v11 == v7)
        {
          a3 = v18;
          goto LABEL_20;
        }
      }
    }
  }
  a3 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return a3;
}

uint64_t sub_1DEBB1E34(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_backingTag);
  swift_getObjectType();
  char v4 = sub_1DFDFEA90();
  swift_unknownObjectRelease();
  uint64_t v5 = *(void **)(a2 + 64);
  if (v4)
  {
    if (objc_msgSend(v5, sel_respondsToSelector_, sel_singleTopicFeedMinFeedItemsPerRequest))
    {
      uint64_t result = (uint64_t)objc_msgSend(v5, sel_singleTopicFeedMinFeedItemsPerRequest);
      goto LABEL_6;
    }
LABEL_9:
    sub_1DEBB22B0();
    swift_allocError();
    *uint64_t v7 = 1;
    return swift_willThrow();
  }
  if ((objc_msgSend(v5, sel_respondsToSelector_, sel_singleChannelFeedMinFeedItemsPerRequest) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t result = (uint64_t)objc_msgSend(v5, sel_singleChannelFeedMinFeedItemsPerRequest);
LABEL_6:
  if (result <= 24) {
    return 24;
  }
  return result;
}

uint64_t sub_1DEBB1F1C(uint64_t a1)
{
  return sub_1DEBB012C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_1DEBB1F30(uint64_t a1)
{
  return a1;
}

unint64_t sub_1DEBB1F5C()
{
  unint64_t result = qword_1EBABA9B0;
  if (!qword_1EBABA9B0)
  {
    sub_1DEA20188(255, (unint64_t *)&qword_1EBABA9A0, (uint64_t (*)(uint64_t))sub_1DEABCC20, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBABA9B0);
  }
  return result;
}

id sub_1DEBB1FE4(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

void sub_1DEBB2024(void *a1, void *a2)
{
  if (a1)
  {
  }
}

void sub_1DEBB2068()
{
  if (!qword_1EBABA650)
  {
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBABA650);
    }
  }
}

void sub_1DEBB20C4()
{
  if (!qword_1EBAEA3F8)
  {
    sub_1DE925CE8(255, (unint64_t *)&qword_1EBABB7C0);
    unint64_t v0 = sub_1DFDFE460();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEA3F8);
    }
  }
}

uint64_t sub_1DEBB213C()
{
  sub_1DEBB20C4();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DEBB2208(uint64_t a1, void *a2, void *a3, int a4, void *a5)
{
  sub_1DEBB20C4();
  return sub_1DEBB0738(a1, a2, a3, a4, a5);
}

unint64_t sub_1DEBB22B0()
{
  unint64_t result = qword_1EBAD68F8;
  if (!qword_1EBAD68F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAD68F8);
  }
  return result;
}

void _s14HeadlinesFetchVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t _s14HeadlinesFetchVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  unint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t _s14HeadlinesFetchVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void **)(a1 + 8);
  id v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 16);
  unint64_t v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s14HeadlinesFetchVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14HeadlinesFetchVMa()
{
  return &_s14HeadlinesFetchVN;
}

uint64_t sub_1DEBB2504()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 64);
  if (v2)
  {
    id v3 = *(id *)(v0 + 64);
  }
  else
  {
    unint64_t v4 = (void *)sub_1DEBB2C70();
    id v5 = *(void **)(v0 + 64);
    *(void *)(v1 + 64) = v4;
    id v3 = v4;
  }
  id v6 = (objc_class *)type metadata accessor for SearchHomeCoordinatingController();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____TtC7NewsUI232SearchHomeCoordinatingController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____TtC7NewsUI232SearchHomeCoordinatingController_searchHomeContainerController] = v3;
  v41.receiver = v7;
  v41.super_class = v6;
  id v8 = v2;
  id v9 = objc_msgSendSuper2(&v41, sel_initWithNibName_bundle_, 0, 0);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BF8]), sel_initWithSearchResultsController_, 0);
  objc_msgSend(v10, sel_setDelegate_, v9);
  id v11 = objc_msgSend(v10, sel_searchBar);
  objc_msgSend(v11, sel_setDelegate_, v9);

  id v12 = objc_msgSend(v10, (SEL)&selRef_removeFromSuperview);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  uint64_t v16 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setPlaceholder_, v16, 0x80000001DFEC0960);

  objc_msgSend(v10, sel_setShowsSearchResultsController_, 1);
  id v17 = objc_msgSend(v10, sel_searchBar);
  id v18 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  uint64_t v19 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setCancelButtonText_, v19, 0x80000001DFEC0980);

  id v20 = objc_msgSend(v10, sel_searchBar);
  objc_msgSend(v20, sel_setAutocorrectionType_, 1);

  id v21 = objc_msgSend(v10, sel_searchBar);
  objc_msgSend(v21, sel_setAutocapitalizationType_, 0);

  id v22 = objc_msgSend(v10, sel_searchBar);
  objc_msgSend(v22, sel_setLookToDictateEnabled_, 1);

  if (objc_msgSend(*(id *)(v1 + 72), sel_useOfflineMode))
  {
    id v23 = objc_msgSend(v10, sel_searchBar);
    id v24 = objc_msgSend(v23, sel_searchTextField);

    objc_msgSend(v24, sel_setEnabled_, sub_1DFDFAC40() & 1);
  }
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  *(void *)(v26 + 24) = v10;
  id v27 = v10;

  swift_release();
  swift_unknownObjectWeakAssign();
  id v28 = v27;
  sub_1DF24D65C();

  id v29 = objc_msgSend(v9, sel_navigationItem);
  objc_msgSend(v29, sel_setSearchController_, v28);

  id v30 = objc_msgSend(v9, sel_navigationItem);
  objc_msgSend(v30, sel_setPreferredSearchBarPlacement_, 2);

  id v31 = objc_msgSend(v9, sel_navigationItem);
  objc_msgSend(v31, sel_setHidesSearchBarWhenScrolling_, 0);

  id v32 = objc_msgSend(v9, sel_navigationItem);
  id v33 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DFDE6ED0();

  uint64_t v34 = (void *)sub_1DFDFDCE0();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_setTitle_, v34, 0x80000001DFEC09B0);

  id v35 = objc_msgSend(v9, sel_navigationItem);
  objc_msgSend(v35, sel_setLargeTitleDisplayMode_, 1);

  id v36 = objc_msgSend(objc_allocWithZone((Class)sub_1DFDF24C0()), sel_initWithRootViewController_, v9);
  id v37 = objc_msgSend(v36, sel_navigationBar);
  objc_msgSend(v37, sel_setPrefersLargeTitles_, 1);

  sub_1DFDF45C0();
  id v38 = v36;
  uint64_t v39 = sub_1DFDF4560();

  return v39;
}

uint64_t sub_1DEBB2BA4(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (objc_msgSend(*(id *)(result + 72), sel_useOfflineMode))
    {
      id v5 = objc_msgSend(a3, sel_searchBar);
      id v6 = objc_msgSend(v5, sel_searchTextField);

      objc_msgSend(v6, sel_setEnabled_, sub_1DFDFAC40() & 1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DEBB2C70()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  type metadata accessor for SearchHomeViewController();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v0;
  id v3 = (void *)sub_1DFDECC90();
  swift_unownedRelease();
  uint64_t result = swift_release();
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(v2, *(void *)(v0 + 40));
  sub_1DE925C98(0, &qword_1EBAABC30);
  uint64_t result = sub_1DFDECCC0();
  if (!v29)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1DE942EC4(&v28, (uint64_t)v30);
  id v5 = __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  uint64_t v6 = *v5;
  __swift_project_boxed_opaque_existential_1((void *)(*v5 + 16), *(void *)(*v5 + 40));
  type metadata accessor for SearchViewController();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = 4;
  id v8 = (void *)sub_1DFDECC90();
  swift_unownedRelease();
  uint64_t result = swift_release();
  if (!v8)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(v2, *(void *)(v0 + 40));
  sub_1DE925C98(0, &qword_1EBAAAA70);
  uint64_t result = sub_1DFDECCC0();
  if (!v29)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v29);
  MEMORY[0x1F4188790](v9);
  id v11 = (void *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = *v11;
  uint64_t v14 = type metadata accessor for BaseStyler();
  v27[3] = v14;
  unint64_t v15 = sub_1DEAE4038();
  v27[4] = v15;
  v27[0] = v13;
  type metadata accessor for SearchHomeContainerStyler();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v14);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (void *)((char *)&v27[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = *v19;
  void v16[5] = v14;
  v16[6] = v15;
  v16[2] = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  __swift_project_boxed_opaque_existential_1(v2, *(void *)(v1 + 40));
  sub_1DE925C98(0, (unint64_t *)&unk_1EBAA7FB0);
  uint64_t result = sub_1DFDECCC0();
  uint64_t v22 = v28;
  if ((void)v28)
  {
    uint64_t v23 = *((void *)&v28 + 1);
    id v24 = objc_allocWithZone((Class)type metadata accessor for SearchHomeContainerController());
    uint64_t v25 = sub_1DFD64B28((uint64_t)v16, v3, v8, v22, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    return (uint64_t)v25;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DEBB30CC(void *a1)
{
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  sub_1DFDE88B0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DFDE8900();
  sub_1DFDECA90();
  return swift_release();
}

uint64_t sub_1DEBB3194()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchHomeModule()
{
  return self;
}

uint64_t sub_1DEBB3210()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEBB3248(void *a1)
{
  return sub_1DEBB30CC(a1);
}

uint64_t sub_1DEBB3250()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEBB3288(void *a1)
{
  return sub_1DF7046C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DEBB3290()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DEBB32C8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DEBB3308(uint64_t a1)
{
  return sub_1DEBB2BA4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1DEBB3310(uint64_t a1)
{
  return sub_1DE93B010(a1, 0, 0xD000000000000037, 0x80000001DFEC0C70, &qword_1EBAC0D90);
}

uint64_t static Settings.Options.ContinueReading.forceEligibilityProcessing.getter()
{
  return sub_1DEB702E0(&qword_1EBAC0DA0);
}

uint64_t sub_1DEBB335C(uint64_t a1)
{
  return sub_1DE93B010(a1, 0, 0xD00000000000002FLL, 0x80000001DFEC0C40, &qword_1EBAC0D78);
}

uint64_t static Settings.Options.ContinueReading.forceEligibility.getter()
{
  return sub_1DEB702E0(&qword_1EBAC0D88);
}

uint64_t sub_1DEBB33A8(uint64_t a1)
{
  return sub_1DE93B010(a1, 0, 0xD00000000000002BLL, 0x80000001DFEC0C10, &qword_1EBAC0D60);
}

uint64_t static Settings.Options.ContinueReading.stickyToasts.getter()
{
  return sub_1DEB702E0(&qword_1EBAC0D70);
}

uint64_t sub_1DEBB33F4()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE9834AC(0, &qword_1EBAC0380);
  v5[2] = 0;
  v5[3] = 1036831949;
  v5[1] = 0x40000000;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  uint64_t result = sub_1DFDE80A0();
  qword_1EBAF8858 = result;
  return result;
}

uint64_t static Settings.Options.ContinueReading.postScrollDismissalDelay.getter()
{
  return sub_1DEB702E0(&qword_1EBAF8868);
}

uint64_t Settings.Options.Masthead.Overrides.logo.getter()
{
  return swift_retain();
}

uint64_t Settings.Options.Masthead.Overrides.name.getter()
{
  return swift_retain();
}

uint64_t Settings.Options.Masthead.Overrides.description.getter()
{
  return swift_retain();
}

uint64_t Settings.Options.Masthead.Overrides.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return Settings.Options.Masthead.Overrides.init(key:defaultValue:access:)(a1, a2, a3, a4);
}

uint64_t sub_1DEBB35EC()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t Settings.Options.Masthead.Overrides.deinit()
{
  uint64_t v0 = _s11TeaSettings0B0C7NewsUI2E7ModulesV10SearchFeedV15ConfigOverridesCfd_0();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Settings.Options.Masthead.Overrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C7NewsUI2E7ModulesV10SearchFeedV15ConfigOverridesCfd_0();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t static Settings.Options.Masthead.overrides.getter()
{
  return sub_1DEB702E0(&qword_1EBABE400);
}

uint64_t sub_1DEBB3728()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DFDE7ED0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE969CBC();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB278], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  uint64_t result = sub_1DFDE8090();
  qword_1EBAF34B8 = result;
  return result;
}

uint64_t static Settings.Options.Masthead.bundlePaywallButton.getter()
{
  return sub_1DEB702E0(&qword_1EBAF34C8);
}

uint64_t sub_1DEBB38F8(uint64_t a1)
{
  return sub_1DE93B010(a1, 1, 0xD000000000000034, 0x80000001DFEC0B60, &qword_1EAC21420);
}

uint64_t static Settings.Options.Transition.Bridged.forceNavigationTransition.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CB60);
}

uint64_t sub_1DEBB3944()
{
  uint64_t v0 = sub_1DFDE8000();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1DFDE8010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DFDFDD20();
  *uint64_t v7 = sub_1DFDFDD20();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[15] = 0;
  sub_1DE9834AC(0, (unint64_t *)&qword_1EBAA6FF8);
  swift_allocObject();
  uint64_t result = sub_1DFDE80C0();
  qword_1EAC21428 = result;
  return result;
}

uint64_t static Settings.Options.Personalization.useCachedExpFields.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CB68);
}

uint64_t sub_1DEBB3B5C(uint64_t a1)
{
  return sub_1DE93B010(a1, 0, 0xD000000000000045, 0x80000001DFEC0B10, &qword_1EAC21430);
}

uint64_t static Settings.Options.Personalization.logClientServerClickMismatch.getter()
{
  return sub_1DEB702E0(&qword_1EAC1CB70);
}

uint64_t static Settings.Options.StateRestoration.ignoreTimeWindow.getter()
{
  return sub_1DEB702E0(&qword_1EBAC0DB8);
}

ValueMetadata *type metadata accessor for Settings.Options()
{
  return &type metadata for Settings.Options;
}

ValueMetadata *type metadata accessor for Settings.Options.ContinueReading()
{
  return &type metadata for Settings.Options.ContinueReading;
}

ValueMetadata *type metadata accessor for Settings.Options.Masthead()
{
  return &type metadata for Settings.Options.Masthead;
}

uint64_t sub_1DEBB3BFC()
{
  return type metadata accessor for Settings.Options.Masthead.Overrides();
}

ValueMetadata *type metadata accessor for Settings.Options.Transition()
{
  return &type metadata for Settings.Options.Transition;
}

ValueMetadata *type metadata accessor for Settings.Options.Transition.Bridged()
{
  return &type metadata for Settings.Options.Transition.Bridged;
}

ValueMetadata *type metadata accessor for Settings.Options.Personalization()
{
  return &type metadata for Settings.Options.Personalization;
}

ValueMetadata *type metadata accessor for Settings.Options.StateRestoration()
{
  return &type metadata for Settings.Options.StateRestoration;
}

uint64_t destroy for AudioFeedTargetedRefreshModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for AudioFeedTargetedRefreshModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = a2 + 40;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v8(a1 + 40, v5, v7);
  return a1;
}

void *assignWithCopy for AudioFeedTargetedRefreshModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for AudioFeedTargetedRefreshModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioFeedTargetedRefreshModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioFeedTargetedRefreshModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioFeedTargetedRefreshModifier()
{
  return &type metadata for AudioFeedTargetedRefreshModifier;
}

uint64_t sub_1DEBB3F60(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v73 = a3;
  uint64_t v74 = a2;
  uint64_t v76 = a1;
  uint64_t v72 = sub_1DFDF1930();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  id v70 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBB4F78(0, &qword_1EBAA8160, MEMORY[0x1E4FACA00]);
  uint64_t v69 = v6;
  uint64_t v68 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v67 = (char *)&v67 - v7;
  sub_1DEBB4F58(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v82 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for CuratedAudioFeedGroup();
  MEMORY[0x1F4188790](v79);
  uint64_t v83 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for AudioFeedSectionDescriptor();
  uint64_t v11 = MEMORY[0x1F4188790](v94);
  unint64_t v86 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v97 = (uint64_t)&v67 - v13;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC180];
  sub_1DEBB4F78(0, (unint64_t *)&qword_1EBAA7DD0, MEMORY[0x1E4FAC180]);
  uint64_t v16 = v15;
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  char v78 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  unint64_t v98 = (char *)&v67 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v93 = (char *)&v67 - v21;
  sub_1DEBB506C();
  uint64_t v96 = v22 - 8;
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  id v27 = (char *)&v67 - v26;
  uint64_t v95 = (void (**)(char *))MEMORY[0x1E4FAD830];
  sub_1DEBB4F78(0, (unint64_t *)&qword_1EBAA8610, MEMORY[0x1E4FAD830]);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v92 = (char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v67 - v33;
  type metadata accessor for AudioFeedServiceConfig();
  sub_1DEBB4F10(&qword_1EBAAF010, (void (*)(uint64_t))type metadata accessor for AudioFeedServiceConfig);
  uint64_t v35 = sub_1DFDF8B20();
  uint64_t v87 = v4;
  uint64_t v100 = v4;
  uint64_t v36 = sub_1DEB0150C((void (*)(uint64_t))sub_1DEBB5120, (uint64_t)v99, v35, (uint64_t)v102);
  swift_bridgeObjectRelease();
  uint64_t v101 = v36;
  sub_1DEBB5140(0, &qword_1EBAF6DA8, MEMORY[0x1E4FBB320]);
  sub_1DEBB51BC();
  sub_1DEBB5230(&qword_1EBAA7DA0, (unint64_t *)&qword_1EBAA7DD0, v14);
  uint64_t v37 = (uint64_t)v86;
  uint64_t v84 = sub_1DFDFDFD0();
  swift_bridgeObjectRelease();
  uint64_t v75 = v30;
  id v38 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v38(v34, v76, v29);
  char v90 = (void (*)(char *, char *, uint64_t))v38;
  uint64_t v91 = v30 + 16;
  v38(v25, (uint64_t)v34, v29);
  sub_1DEBB5230(&qword_1EBAA8608, (unint64_t *)&qword_1EBAA8610, (uint64_t (*)(uint64_t, void *))v95);
  id v85 = v34;
  sub_1DFDFE6A0();
  uint64_t v39 = v96;
  *(void *)&v25[*(int *)(v96 + 44)] = v101;
  sub_1DEBB52D8((uint64_t)v25, (uint64_t)v27, (uint64_t (*)(void))sub_1DEBB506C);
  uint64_t v40 = &v27[*(int *)(v39 + 44)];
  uint64_t v41 = *(void *)v40;
  sub_1DFDFE720();
  if (v41 != v101)
  {
    uint64_t v95 = (void (**)(char *))(v77 + 16);
    uint64_t v96 = v77 + 32;
    uint64_t v88 = (void (**)(char *, uint64_t))(v77 + 8);
    uint64_t v89 = (void (**)(uint64_t, uint64_t))(v75 + 8);
    unint64_t v81 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
    uint64_t v80 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
    while (2)
    {
      uint64_t v49 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      id v50 = *v95;
      id v51 = v93;
      (*v95)(v93);
      v49(&v101, 0);
      uint64_t v54 = (uint64_t)v92;
      v90(v92, v27, v29);
      sub_1DFDFE730();
      (*v89)(v54, v29);
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))v96;
      (*(void (**)(char *, char *, uint64_t))v96)(v98, v51, v16);
      uint64_t v53 = v97;
      sub_1DFDF14D0();
      sub_1DEBB5274(v53, v37);
      LOBYTE(v54) = 1;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          LOBYTE(v54) = 2;
          goto LABEL_10;
        case 2u:
          LOBYTE(v54) = 3;
          goto LABEL_10;
        case 3u:
          sub_1DEBB52D8(v37, v83, (uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroup);
          swift_bridgeObjectRetain();
          uint64_t v54 = sub_1DFDFFCA0();
          swift_bridgeObjectRelease();
          if (v54)
          {
            sub_1DEBB5340(v83, (uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroup);
            if (v54 == 1) {
              LOBYTE(v54) = 5;
            }
            else {
              LOBYTE(v54) = 4;
            }
          }
          else
          {
            sub_1DEBB5340(v83, (uint64_t (*)(void))type metadata accessor for CuratedAudioFeedGroup);
          }
          uint64_t v37 = (uint64_t)v86;
          goto LABEL_17;
        case 4u:
          sub_1DEBB5340(v97, (uint64_t (*)(void))type metadata accessor for AudioFeedSectionDescriptor);
          goto LABEL_5;
        default:
LABEL_10:
          sub_1DEBB5340(v37, (uint64_t (*)(void))type metadata accessor for AudioFeedSectionDescriptor);
LABEL_17:
          sub_1DEBB5340(v97, (uint64_t (*)(void))type metadata accessor for AudioFeedSectionDescriptor);
          if (sub_1DEDF3F44(v54, *(void *)(v87 + 16)))
          {
            uint64_t v55 = sub_1DFDF14E0();
            uint64_t v57 = v84;
            if (*(void *)(v84 + 16) && (unint64_t v58 = sub_1DEA6D930(v55, v56), (v59 & 1) != 0))
            {
              unint64_t v60 = *(void *)(v57 + 56) + *(void *)(v77 + 72) * v58;
              uint64_t v61 = (uint64_t)v82;
              ((void (*)(char *, unint64_t, uint64_t))v50)(v82, v60, v16);
              uint64_t v62 = 0;
            }
            else
            {
              uint64_t v62 = 1;
              uint64_t v61 = (uint64_t)v82;
            }
            (*v81)(v61, v62, 1, v16);
            swift_bridgeObjectRelease();
            if ((*v80)(v61, 1, v16) == 1)
            {
              sub_1DEBB5340(v61, (uint64_t (*)(void))sub_1DEBB4F58);
              uint64_t v63 = v98;
              sub_1DFDF14E0();
              sub_1DFDF59C0();
              swift_bridgeObjectRelease();
              (*v88)(v63, v16);
            }
            else
            {
              id v64 = v78;
              v52(v78, (char *)v61, v16);
              uint64_t v65 = v98;
              sub_1DFDF59D0();
              unint64_t v66 = *v88;
              (*v88)(v64, v16);
              v66(v65, v16);
            }
            uint64_t v37 = (uint64_t)v86;
          }
          else
          {
LABEL_5:
            (*v88)(v98, v16);
          }
          uint64_t v48 = *(void *)v40;
          sub_1DFDFE720();
          if (v48 != v101) {
            continue;
          }
          goto LABEL_2;
      }
    }
  }
LABEL_2:
  sub_1DEBB5340((uint64_t)v27, (uint64_t (*)(void))sub_1DEBB506C);
  swift_bridgeObjectRelease();
  uint64_t v42 = v71;
  uint64_t v43 = v70;
  uint64_t v44 = v72;
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, *MEMORY[0x1E4FAC298], v72);
  type metadata accessor for AudioFeedModel(0);
  sub_1DEBB4F10(&qword_1EBAB2020, (void (*)(uint64_t))type metadata accessor for AudioFeedSectionDescriptor);
  sub_1DEBB4F10(&qword_1EBAF3D00, (void (*)(uint64_t))type metadata accessor for AudioFeedModel);
  sub_1DEBB4F10(&qword_1EBAB2028, (void (*)(uint64_t))type metadata accessor for AudioFeedSectionDescriptor);
  uint64_t v45 = v67;
  uint64_t v46 = v85;
  sub_1DFDF3050();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  v74(v45);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v69);
  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v46, v29);
}

uint64_t sub_1DEBB4CBC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v12 = a1;
  uint64_t v5 = sub_1DFDF9D80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2 + 5, a2[8]);
  uint64_t v9 = a2[4];
  type metadata accessor for AudioFeedServiceConfig();
  sub_1DEBB4F10(&qword_1EBAAF010, (void (*)(uint64_t))type metadata accessor for AudioFeedServiceConfig);
  sub_1DFDF8AF0();
  sub_1DEC81BB8(v12, v9, v8, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DEBB4E2C()
{
  unint64_t result = qword_1EBAF5DA0;
  if (!qword_1EBAF5DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF5DA0);
  }
  return result;
}

uint64_t sub_1DEBB4E80()
{
  return sub_1DEBB4F10(&qword_1EBAB2020, (void (*)(uint64_t))type metadata accessor for AudioFeedSectionDescriptor);
}

uint64_t sub_1DEBB4EC8()
{
  return sub_1DEBB4F10(&qword_1EBAF3D00, (void (*)(uint64_t))type metadata accessor for AudioFeedModel);
}

uint64_t sub_1DEBB4F10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEBB4F58(uint64_t a1)
{
}

void sub_1DEBB4F78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for AudioFeedSectionDescriptor();
    v8[1] = type metadata accessor for AudioFeedModel(255);
    void v8[2] = sub_1DEBB4F10(&qword_1EBAB2020, (void (*)(uint64_t))type metadata accessor for AudioFeedSectionDescriptor);
    v8[3] = sub_1DEBB4F10(&qword_1EBAF3D00, (void (*)(uint64_t))type metadata accessor for AudioFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DEBB506C()
{
  if (!qword_1EBAA66A8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAD830];
    sub_1DEBB4F78(255, (unint64_t *)&qword_1EBAA8610, MEMORY[0x1E4FAD830]);
    sub_1DEBB5230(&qword_1EBAA8608, (unint64_t *)&qword_1EBAA8610, v0);
    unint64_t v1 = sub_1DFDFFB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAA66A8);
    }
  }
}

uint64_t sub_1DEBB5120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEBB4CBC(a1, *(void **)(v2 + 16), a2);
}

void sub_1DEBB5140(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1DEBB4F78(255, (unint64_t *)&qword_1EBAA7DD0, MEMORY[0x1E4FAC180]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DEBB51BC()
{
  unint64_t result = qword_1EBAF6DB0;
  if (!qword_1EBAF6DB0)
  {
    sub_1DEBB5140(255, &qword_1EBAF6DA8, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6DB0);
  }
  return result;
}

uint64_t sub_1DEBB5230(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEBB4F78(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEBB5274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioFeedSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBB52D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEBB5340(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DEBB53A0(unint64_t result)
{
  unint64_t v1 = result >> 62;
  if (!(result >> 62) || v1 == 2 || v1 == 1) {
    return swift_retain();
  }
  return result;
}

id sub_1DEBB53C4(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t destroy for MagazineCatalogSubscriptionModifier(uint64_t a1)
{
  sub_1DEBB5424(*(void *)a1);
  int v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 != 255) {
    sub_1DEBB5448(*(id *)(a1 + 8), v2 & 1);
  }
  return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
}

unint64_t sub_1DEBB5424(unint64_t result)
{
  unint64_t v1 = result >> 62;
  if (!(result >> 62) || v1 == 2 || v1 == 1) {
    return swift_release();
  }
  return result;
}

void sub_1DEBB5448(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t initializeWithCopy for MagazineCatalogSubscriptionModifier(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_1DEBB53A0(*(void *)a2);
  *(void *)a1 = v4;
  uint64_t v5 = (id *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  if (v6 == 255)
  {
    *(void *)(a1 + 8) = *v5;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  }
  else
  {
    char v7 = v6 & 1;
    id v8 = *v5;
    sub_1DEBB53C4(*v5, v6 & 1);
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v7;
  }
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 24, a2 + 24);
  return a1;
}

uint64_t assignWithCopy for MagazineCatalogSubscriptionModifier(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_1DEBB53A0(*(void *)a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_1DEBB5424(v5);
  int v6 = (void **)(a1 + 8);
  char v7 = (void **)(a2 + 8);
  int v8 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v8 == 255)
    {
      uint64_t v10 = *v7;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *int v6 = v10;
    }
    else
    {
      char v15 = v8 & 1;
      uint64_t v16 = *v7;
      sub_1DEBB53C4(v16, v8 & 1);
      *(void *)(a1 + 8) = v16;
      *(unsigned char *)(a1 + 16) = v15;
    }
  }
  else if (v8 == 255)
  {
    sub_1DEBB662C(a1 + 8, (uint64_t (*)(void))sub_1DEBB561C);
    char v9 = *(unsigned char *)(a2 + 16);
    *int v6 = *v7;
    *(unsigned char *)(a1 + 16) = v9;
  }
  else
  {
    char v11 = v8 & 1;
    uint64_t v12 = *v7;
    sub_1DEBB53C4(v12, v8 & 1);
    uint64_t v13 = *(void **)(a1 + 8);
    char v14 = *(unsigned char *)(a1 + 16);
    *(void *)(a1 + 8) = v12;
    *(unsigned char *)(a1 + 16) = v11;
    sub_1DEBB5448(v13, v14);
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

void sub_1DEBB561C()
{
  if (!qword_1EBAA7850)
  {
    type metadata accessor for TagModel();
    unint64_t v0 = sub_1DFDEDD80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA7850);
    }
  }
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MagazineCatalogSubscriptionModifier(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_1DEBB5424(v4);
  unint64_t v5 = (void *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a1 + 16);
  if (v6 != 255)
  {
    int v7 = *(unsigned __int8 *)(a2 + 16);
    if (v7 != 255)
    {
      int v8 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = *v5;
      *(unsigned char *)(a1 + 16) = v7 & 1;
      sub_1DEBB5448(v8, v6 & 1);
      goto LABEL_6;
    }
    sub_1DEBB662C(a1 + 8, (uint64_t (*)(void))sub_1DEBB561C);
  }
  *(void *)(a1 + 8) = *v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for MagazineCatalogSubscriptionModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MagazineCatalogSubscriptionModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MagazineCatalogSubscriptionModifier()
{
  return &type metadata for MagazineCatalogSubscriptionModifier;
}

uint64_t sub_1DEBB57FC(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v28 = a2;
  uint64_t v21 = a1;
  uint64_t v24 = sub_1DFDF1930();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  int v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBB62BC(0, &qword_1EAC21440, MEMORY[0x1E4FACA00]);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v21 - v8;
  sub_1DEBB61F0();
  MEMORY[0x1F4188790](v10 - 8);
  sub_1DEBB62BC(0, (unint64_t *)&qword_1EAC20158, MEMORY[0x1E4FAD830]);
  uint64_t v22 = *(void *)(v11 - 8);
  uint64_t v23 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v30 = v3;
  uint64_t v14 = sub_1DEB01560((void (*)(char *))sub_1DEBB6410, (uint64_t)v29, (uint64_t)v31);
  sub_1DEBB62BC(0, (unint64_t *)&qword_1EAC20128, MEMORY[0x1E4FAC180]);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1DEBB63B0(&qword_1EAC21450);
  uint64_t v18 = sub_1DEBB63B0(&qword_1EAC21458);
  MEMORY[0x1E01DBA90](v14, v16, v17, v18);
  type metadata accessor for MagazineCatalogSectionDescriptor(0);
  type metadata accessor for MagazineCatalogModel();
  sub_1DEBB64FC((unint64_t *)&unk_1EAC20130, (void (*)(uint64_t))type metadata accessor for MagazineCatalogSectionDescriptor);
  sub_1DEBB64FC(&qword_1EAC23350, (void (*)(uint64_t))type metadata accessor for MagazineCatalogModel);
  sub_1DFDF5A70();
  uint64_t v19 = v24;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAC298], v24);
  sub_1DEBB64FC(&qword_1EAC21460, (void (*)(uint64_t))type metadata accessor for MagazineCatalogSectionDescriptor);
  sub_1DFDF3050();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  v28(v9);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v23);
}

uint64_t sub_1DEBB5C5C(uint64_t a1, uint64_t a2)
{
  sub_1DEBB6430();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = type metadata accessor for MagazineCatalogSectionDescriptor(0);
  MEMORY[0x1F4188790](v4);
  sub_1DEBB62BC(0, (unint64_t *)&qword_1EAC20128, MEMORY[0x1E4FAC180]);
  sub_1DFDF14D0();
  uint64_t v12 = a2;
  uint64_t v5 = sub_1DEB015C8((void (*)(char *))sub_1DEBB6544, (uint64_t)v11, (uint64_t)v13);
  sub_1DEB0D97C(0);
  uint64_t v7 = v6;
  uint64_t v8 = sub_1DEBB64FC(&qword_1EAC21470, sub_1DEB0D97C);
  uint64_t v9 = sub_1DEBB64FC(&qword_1EAC21478, sub_1DEB0D97C);
  MEMORY[0x1E01DBA90](v5, v7, v8, v9);
  type metadata accessor for MagazineCatalogModel();
  sub_1DEBB64FC((unint64_t *)&unk_1EAC20130, (void (*)(uint64_t))type metadata accessor for MagazineCatalogSectionDescriptor);
  sub_1DEBB64FC(&qword_1EAC23350, (void (*)(uint64_t))type metadata accessor for MagazineCatalogModel);
  return sub_1DFDF14C0();
}

uint64_t sub_1DEBB5EBC(uint64_t a1, unint64_t *a2)
{
  uint64_t v3 = type metadata accessor for MagazineGridItemModel();
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v18 - v7;
  uint64_t v9 = type metadata accessor for MagazineCatalogModel();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v18 - v13;
  sub_1DEB0D97C(0);
  sub_1DFDF0B50();
  sub_1DEBB6564((uint64_t)v14, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a2 + 3, a2[6]);
  unint64_t v15 = *a2;
  if (v15 >> 62) {
    uint64_t v16 = v15 & 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v16 = v15;
  }
  sub_1DEBB53A0(v15);
  sub_1DED8405C((uint64_t)v8, v16, (uint64_t)v6);
  sub_1DEBB5424(v15);
  sub_1DEBB65C8((uint64_t)v6, (uint64_t)v12);
  sub_1DEBB64FC(&qword_1EAC23350, (void (*)(uint64_t))type metadata accessor for MagazineCatalogModel);
  sub_1DFDF0B40();
  sub_1DEBB662C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagazineGridItemModel);
  return sub_1DEBB662C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MagazineGridItemModel);
}

uint64_t sub_1DEBB60CC(uint64_t a1)
{
  unint64_t v2 = sub_1DEBB668C();
  return MEMORY[0x1F4161388](a1, v2);
}

unint64_t sub_1DEBB610C()
{
  unint64_t result = qword_1EAC21438;
  if (!qword_1EAC21438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21438);
  }
  return result;
}

uint64_t sub_1DEBB6160()
{
  return sub_1DEBB64FC((unint64_t *)&unk_1EAC20130, (void (*)(uint64_t))type metadata accessor for MagazineCatalogSectionDescriptor);
}

uint64_t sub_1DEBB61A8()
{
  return sub_1DEBB64FC(&qword_1EAC23350, (void (*)(uint64_t))type metadata accessor for MagazineCatalogModel);
}

void sub_1DEBB61F0()
{
  if (!qword_1EAC21448)
  {
    sub_1DEBB62BC(255, (unint64_t *)&qword_1EAC20128, MEMORY[0x1E4FAC180]);
    sub_1DEBB63B0(&qword_1EAC21450);
    sub_1DEBB63B0(&qword_1EAC21458);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21448);
    }
  }
}

void sub_1DEBB62BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for MagazineCatalogSectionDescriptor(255);
    v8[1] = type metadata accessor for MagazineCatalogModel();
    void v8[2] = sub_1DEBB64FC((unint64_t *)&unk_1EAC20130, (void (*)(uint64_t))type metadata accessor for MagazineCatalogSectionDescriptor);
    v8[3] = sub_1DEBB64FC(&qword_1EAC23350, (void (*)(uint64_t))type metadata accessor for MagazineCatalogModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DEBB63B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEBB62BC(255, (unint64_t *)&qword_1EAC20128, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEBB6410(uint64_t a1)
{
  return sub_1DEBB5C5C(a1, *(void *)(v1 + 16));
}

void sub_1DEBB6430()
{
  if (!qword_1EAC21468)
  {
    sub_1DEB0D97C(255);
    sub_1DEBB64FC(&qword_1EAC21470, sub_1DEB0D97C);
    sub_1DEBB64FC(&qword_1EAC21478, sub_1DEB0D97C);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21468);
    }
  }
}

uint64_t sub_1DEBB64FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEBB6544(uint64_t a1)
{
  return sub_1DEBB5EBC(a1, *(unint64_t **)(v1 + 16));
}

uint64_t sub_1DEBB6564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagazineGridItemModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBB65C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagazineGridItemModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBB662C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DEBB668C()
{
  unint64_t result = qword_1EAC21480;
  if (!qword_1EAC21480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21480);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TagViewContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEBB67ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagViewContext()
{
  return &type metadata for TagViewContext;
}

uint64_t destroy for TagViewLayoutAttributes()
{
  return swift_release();
}

uint64_t initializeWithCopy for TagViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  long long v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = v6;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  long long v7 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v7;
  long long v8 = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 328) = v8;
  long long v9 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v9;
  long long v10 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v10;
  long long v11 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v11;
  long long v12 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v12;
  uint64_t v13 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v13;
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  *(unsigned char *)(a1 + 489) = *(unsigned char *)(a2 + 489);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TagViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 488;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_retain();
  swift_release();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  *(unsigned char *)(a1 + 489) = *(unsigned char *)(v4 + 1);
  return a1;
}

void *__swift_memcpy490_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1EAuLL);
}

uint64_t assignWithTake for TagViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 488;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  long long v9 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v9;
  long long v10 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v10;
  long long v11 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v11;
  long long v12 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v12;
  long long v13 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v13;
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_release();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  *(unsigned char *)(a1 + 489) = *(unsigned char *)(v4 + 1);
  return a1;
}

uint64_t getEnumTagSinglePayload for TagViewLayoutAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 490)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 472);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TagViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 488) = 0;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 490) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 472) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 490) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagViewLayoutAttributes()
{
  return &type metadata for TagViewLayoutAttributes;
}

double sub_1DEBB6D7C()
{
  return *(double *)(v0 + 480);
}

unint64_t sub_1DEBB6D88()
{
  unint64_t result = qword_1EAC21488;
  if (!qword_1EAC21488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21488);
  }
  return result;
}

uint64_t sub_1DEBB6DDC(uint64_t a1, long long *a2, uint64_t a3, long long *a4, long long *a5, uint64_t a6)
{
  long long v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1DEBB9408(0, (unint64_t *)&unk_1EBAEAFD0, (uint64_t (*)(uint64_t))sub_1DEBB9370, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x4449656C7A7A7570;
  *(void *)(inited + 40) = 0xE800000000000000;
  sub_1DEBB9408(0, (unint64_t *)&unk_1EBAEAD90, MEMORY[0x1E4FAAC58], v9);
  uint64_t v11 = sub_1DFDED550();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DFE0B750;
  uint64_t v16 = (void *)(v15 + v14);
  *uint64_t v16 = 74;
  v16[1] = 0xE100000000000000;
  uint64_t v17 = *(void (**)(void))(v12 + 104);
  uint64_t result = ((uint64_t (*)(void *, void, uint64_t))v17)(v16, *MEMORY[0x1E4FAAC48], v11);
  if ((*MEMORY[0x1E4F7DE68] & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)((char *)v16 + v13) = *MEMORY[0x1E4F7DE68];
    v17();
    *(void *)(inited + 48) = v15;
    sub_1DF3496D4(inited);
    uint64_t v19 = sub_1DFDED500();
    swift_bridgeObjectRelease();
    uint64_t v6[2] = v19;
    v6[3] = a1;
    sub_1DE942EC4(a2, (uint64_t)(v6 + 4));
    v6[9] = a3;
    sub_1DE942EC4(a4, (uint64_t)(v6 + 10));
    sub_1DE942EC4(a5, (uint64_t)(v6 + 15));
    v6[20] = a6;
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_1DEBB7034(uint64_t a1)
{
  long long v3 = v1;
  uint64_t v45 = *v1;
  sub_1DEBB9408(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  uint64_t v5 = v4;
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v43 = *(void *)(v41 + 64);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v33 - v6;
  uint64_t v8 = sub_1DFDED140();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDED180();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v5;
  uint64_t v44 = a1;
  sub_1DFDED420();
  sub_1DFDED160();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v16 = sub_1DFDED150();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v18)
  {
    sub_1DEBB9408(0, (unint64_t *)&unk_1EAC21498, (uint64_t (*)(uint64_t))sub_1DEBB946C, MEMORY[0x1E4FAB088]);
    uint64_t v19 = (void *)swift_allocObject();
    _OWORD v19[2] = v3;
    uint64_t v19[3] = v16;
    v19[4] = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1DFDEDDE0();
    sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
    uint64_t v34 = sub_1DFDFEE60();
    uint64_t v20 = v41;
    uint64_t v21 = v42;
    id v38 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    v38(v7, v44, v42);
    uint64_t v40 = v16;
    uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
    uint64_t v37 = v22 | 7;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v16;
    *(void *)(v23 + 24) = v18;
    uint64_t v35 = v18;
    uint64_t v36 = v3;
    uint64_t v41 = *(void *)(v20 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v41)(v23 + ((v22 + 32) & ~v22), v7, v21);
    swift_bridgeObjectRetain();
    uint64_t v24 = (void *)v34;
    sub_1DFDEDE20();
    swift_release();

    swift_release();
    v38(v7, v44, v21);
    uint64_t v25 = (v22 + 16) & ~v22;
    unint64_t v26 = (v43 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = swift_allocObject();
    ((void (*)(uint64_t, char *, uint64_t))v41)(v27 + v25, v7, v21);
    uint64_t v28 = (uint64_t *)(v27 + v26);
    uint64_t v29 = v35;
    *uint64_t v28 = v40;
    v28[1] = v29;
    uint64_t v30 = (void *)sub_1DFDEDCE0();
    uint64_t v31 = sub_1DFDEDF00();
    swift_release();
    swift_release();
  }
  else
  {
    char v46 = 0;
    sub_1DEAE8378();
    swift_allocObject();
    return sub_1DFDEDE90();
  }
  return v31;
}

uint64_t sub_1DEBB753C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1DEBB7560, 0, 0);
}

uint64_t sub_1DEBB7560()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1DEBB7620;
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  return MEMORY[0x1F4136DF0](v6, v5, v2, v3);
}

uint64_t sub_1DEBB7620(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 56) = a1;
    return MEMORY[0x1F4188298](sub_1DEBB776C, 0, 0);
  }
}

uint64_t sub_1DEBB776C()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DEBB7790@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, unsigned char *a6@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v89 = a4;
  uint64_t v90 = a5;
  uint64_t v88 = a3;
  uint64_t v91 = a6;
  uint64_t v81 = type metadata accessor for PuzzleModel();
  MEMORY[0x1F4188790](v81);
  unint64_t v82 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDFB520();
  uint64_t v79 = *(void *)(v8 - 8);
  uint64_t v80 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v77 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1DFDFADD0();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v75 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DFDFBB00();
  uint64_t v85 = *(void *)(v11 - 8);
  uint64_t v86 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (id *)((char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1DFDFB530();
  uint64_t v83 = *(void *)(v14 - 8);
  uint64_t v84 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBB9A80(0, (unint64_t *)&unk_1EAC214C0, (uint64_t (*)(void))sub_1DEADCE48, (uint64_t)&type metadata for PuzzleOfflineModel, MEMORY[0x1E4F80A18]);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v74 - v18;
  uint64_t v20 = sub_1DFDFA6C0();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v87 = *a1;
  id v24 = objc_msgSend(v87, sel_puzzleType);
  uint64_t v25 = self;
  swift_getObjectType();
  if (!objc_msgSend(v25, sel_isTagAllowedInContentStoreFront_, v24))
  {
    if (qword_1EAC1D4E8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1DFDF01D0();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EACDFE70);
    unint64_t v30 = (unint64_t)v89;
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_1DFDF01B0();
    os_log_type_t v32 = sub_1DFDFEA40();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      unint64_t v94 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1DEA5CAB8(v88, v30, (uint64_t *)&v94);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DE913000, v31, v32, "Cannot navigate to Puzzle: %s. Content not allowed in StoreFront.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v34, -1, -1);
      MEMORY[0x1E01EFA10](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 40) = &type metadata for AlertContentRegionUnavailable;
    *(void *)(v41 + 48) = sub_1DEBB9C58();
    *(unsigned char *)(v41 + 56) = 1;
    unint64_t v94 = v41;
    char v42 = sub_1DEBB846C(&v94);
    swift_release();
    goto LABEL_27;
  }
  if (!objc_msgSend(v25, sel_isTagAllowedForNewsVersion_, v24))
  {
    if (qword_1EAC1D4E8 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1DFDF01D0();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EACDFE70);
    unint64_t v36 = (unint64_t)v89;
    swift_bridgeObjectRetain_n();
    uint64_t v37 = sub_1DFDF01B0();
    os_log_type_t v38 = sub_1DFDFEA40();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      unint64_t v94 = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1DEA5CAB8(v88, v36, (uint64_t *)&v94);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DE913000, v37, v38, "Cannot navigate to Puzzle: %s. Content not allowed for News version.", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v40, -1, -1);
      MEMORY[0x1E01EFA10](v39, -1, -1);

LABEL_26:
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 40) = &type metadata for AlertContentUnavailable;
      *(void *)(v62 + 48) = sub_1DEBB9CAC();
      *(unsigned char *)(v62 + 56) = 1;
      unint64_t v94 = v62;
      char v42 = sub_1DEBB846C(&v94);
      swift_release();
LABEL_27:
      uint64_t result = swift_unknownObjectRelease();
      goto LABEL_28;
    }
LABEL_25:

    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  id v74 = v24;
  char v26 = sub_1DFDFF090();
  uint64_t v27 = v92;
  if ((v26 & 1) == 0)
  {
    if (qword_1EAC1D4E8 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_1DFDF01D0();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EACDFE70);
    unint64_t v44 = (unint64_t)v89;
    swift_bridgeObjectRetain_n();
    uint64_t v37 = sub_1DFDF01B0();
    os_log_type_t v45 = sub_1DFDFEA40();
    if (os_log_type_enabled(v37, v45))
    {
      char v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      unint64_t v94 = v47;
      *(_DWORD *)char v46 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1DEA5CAB8(v88, v44, (uint64_t *)&v94);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DE913000, v37, v45, "Cannot navigate to Puzzle: %s. Content not allowed in public build.", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v47, -1, -1);
      MEMORY[0x1E01EFA10](v46, -1, -1);

      goto LABEL_26;
    }
    goto LABEL_25;
  }
  sub_1DFDFAC30();
  uint64_t v28 = (void *)v20;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1DEBB993C((uint64_t)v19);
  }
  else
  {
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v89 = v23;
    v48(v23, v19, v20);
    __swift_project_boxed_opaque_existential_1((void *)(v27 + 80), *(void *)(v27 + 104));
    uint64_t v88 = v21;
    uint64_t v49 = v86;
    *uint64_t v13 = v87;
    uint64_t v50 = v85;
    (*(void (**)(void *, void, uint64_t))(v85 + 104))(v13, *MEMORY[0x1E4F81020], v49);
    swift_unknownObjectRetain();
    sub_1DFDFD2A0();
    (*(void (**)(void *, uint64_t))(v50 + 8))(v13, v49);
    char v51 = sub_1DFDFB510();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v16, v84);
    if ((v51 & 1) == 0)
    {
      __swift_project_boxed_opaque_existential_1((void *)(v92 + 120), *(void *)(v92 + 144));
      id v64 = v75;
      uint64_t v63 = v76;
      uint64_t v65 = v78;
      (*(void (**)(char *, void, uint64_t))(v76 + 104))(v75, *MEMORY[0x1E4F80AB8], v78);
      uint64_t v66 = *MEMORY[0x1E4F80E20];
      uint64_t v67 = v79;
      uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 104);
      uint64_t v69 = v77;
      id v87 = v28;
      uint64_t v70 = v80;
      v68(v77, v66, v80);
      uint64_t v71 = (void *)sub_1DFDFD410();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v70);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v71;
      *(unsigned char *)(v72 + 56) = 2;
      unint64_t v94 = v72;
      id v73 = v71;
      char v42 = sub_1DEBB846C(&v94);
      swift_release();

      swift_unknownObjectRelease();
      uint64_t result = (*(uint64_t (**)(char *, id))(v88 + 8))(v89, v87);
      goto LABEL_28;
    }
    (*(void (**)(char *, void *))(v88 + 8))(v89, v28);
    uint64_t v27 = v92;
  }
  if (objc_msgSend(*(id *)(v27 + 160), sel_puzzlesEnabled))
  {
    uint64_t v53 = (int *)v81;
    uint64_t v52 = (uint64_t)v82;
    uint64_t v54 = &v82[*(int *)(v81 + 20)];
    uint64_t v55 = sub_1DFDFB3F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 1, 1, v55);
    *(void *)uint64_t v52 = v87;
    *(void *)(v52 + 8) = 0;
    *(unsigned char *)(v52 + 16) = 1;
    uint64_t v56 = (void *)(v52 + v53[6]);
    *uint64_t v56 = 0;
    v56[1] = 0;
    uint64_t v57 = (void *)(v52 + v53[7]);
    *uint64_t v57 = 0;
    v57[1] = 0;
    unint64_t v58 = (void *)(v52 + v53[8]);
    *unint64_t v58 = 0;
    v58[1] = 0;
    uint64_t v59 = swift_allocBox();
    sub_1DEBB9D00(v52, v60);
    unint64_t v94 = v59 | 0xC000000000000006;
    swift_unknownObjectRetain();
    char v42 = sub_1DEBB846C(&v94);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t result = sub_1DEBB9D64(v52);
  }
  else
  {
    uint64_t result = swift_unknownObjectRelease();
    char v42 = 1;
  }
LABEL_28:
  *uint64_t v91 = v42 & 1;
  return result;
}

uint64_t sub_1DEBB846C(unint64_t *a1)
{
  sub_1DEBB9408(0, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v11 - v4;
  unint64_t v6 = *a1;
  char v7 = sub_1DEF974DC();
  uint64_t v8 = *(void *)(v1 + 24);
  if ((v7 & 1) != 0 || !((v6 >> 58) & 0x3C | (v6 >> 1) & 3))
  {
    uint64_t v9 = sub_1DFDEAB40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    swift_retain();
    sub_1DFBB5128(v6, 0, (uint64_t)v5, (uint64_t)v13, 0, 0, 0, 0, (uint64_t)v11);
    swift_release();
    sub_1DEBB9B78((uint64_t)v11, &qword_1EBAA7470, (uint64_t)&unk_1EBAA7460, MEMORY[0x1E4FAA9C0]);
    sub_1DEBB9B78((uint64_t)v13, (unint64_t *)&unk_1EBAA3BB0, (uint64_t)&qword_1EBAA86B0, MEMORY[0x1E4F7AE18]);
    sub_1DEBB9BE8((uint64_t)v5, (unint64_t *)&qword_1EBAA38A0, MEMORY[0x1E4F7B948]);
    swift_release();
  }
  else
  {
    *(void *)&v13[0] = v8;
    *(void *)&v11[0] = v6;
    sub_1DEBB9A80(0, (unint64_t *)&qword_1EBAA7CB0, (uint64_t (*)(void))sub_1DEAE44D4, (uint64_t)&type metadata for NewsActivity2, MEMORY[0x1E4FABFB8]);
    sub_1DEBB9AE8();
    sub_1DFDF5C20();
  }
  return 1;
}

void sub_1DEBB88DC(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, unsigned char *a6@<X8>)
{
  uint64_t v67 = a5;
  uint64_t v68 = a3;
  uint64_t v61 = a4;
  uint64_t v71 = a2;
  uint64_t v72 = a6;
  uint64_t v8 = sub_1DFDFB520();
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v66 = v8;
  MEMORY[0x1F4188790](v8);
  id v64 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1DFDFADD0();
  uint64_t v63 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v62 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBB9A80(0, (unint64_t *)&unk_1EAC214C0, (uint64_t (*)(void))sub_1DEADCE48, (uint64_t)&type metadata for PuzzleOfflineModel, MEMORY[0x1E4F80A18]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v70 = sub_1DFDFA6C0();
  uint64_t v74 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBB9408(0, (unint64_t *)&unk_1EAC214D0, MEMORY[0x1E4F80D58], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v19 = sub_1DFDFB410();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v76 = (uint64_t)a1;
  id v26 = a1;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  char v27 = swift_dynamicCast();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v73 = v6;
  if (v27)
  {
    v28(v18, 0, 1, v19);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v18, v19);
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E4F80D50], v19);
    char v29 = sub_1DFDFB400();
    unint64_t v30 = *(void (**)(char *, uint64_t))(v20 + 8);
    v30(v23, v19);
    if (v29)
    {
      uint64_t v31 = swift_allocObject();
      if (qword_1EAC1D8F8 != -1) {
        swift_once();
      }
      uint64_t v32 = v70;
      uint64_t v33 = __swift_project_value_buffer(v70, (uint64_t)qword_1EACE03A8);
      *(void *)(v31 + 40) = type metadata accessor for AlertDeviceOffline();
      *(void *)(v31 + 48) = sub_1DEBB9A38((unint64_t *)&qword_1EAC214E0, 255, (void (*)(uint64_t))type metadata accessor for AlertDeviceOffline);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v31 + 16));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v74 + 16))(boxed_opaque_existential_1, v33, v32);
      *(unsigned char *)(v31 + 56) = 1;
      uint64_t v76 = v31;
      char v35 = sub_1DEBB846C((unint64_t *)&v76);
      swift_release();
      v30(v25, v19);
      goto LABEL_15;
    }
    v30(v25, v19);
  }
  else
  {
    v28(v18, 1, 1, v19);
    sub_1DEBB9BE8((uint64_t)v18, (unint64_t *)&unk_1EAC214D0, MEMORY[0x1E4F80D58]);
  }
  unint64_t v36 = v71;
  sub_1DFDFAC30();
  uint64_t v37 = v74;
  uint64_t v38 = v70;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v13, 1, v70) == 1)
  {
    sub_1DEBB993C((uint64_t)v13);
    if (qword_1EAC1D4E8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1DFDF01D0();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EACDFE70);
    id v40 = a1;
    unint64_t v41 = (unint64_t)v67;
    swift_bridgeObjectRetain();
    id v42 = a1;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1DFDF01B0();
    os_log_type_t v44 = sub_1DFDFEA40();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      char v46 = (void *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v76 = v47;
      *(_DWORD *)uint64_t v45 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_1DEA5CAB8(v61, v41, &v76);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2112;
      id v48 = a1;
      uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v75 = v49;
      sub_1DFDFF680();
      *char v46 = v49;

      _os_log_impl(&dword_1DE913000, v43, v44, "Cannot navigate to Puzzle: %s. %@", (uint8_t *)v45, 0x16u);
      sub_1DEAE5744(0, (unint64_t *)&qword_1EBAEA670, (uint64_t)&qword_1EBABB090, 0x1E4FBA8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE919914);
      char v35 = 1;
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v46, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v47, -1, -1);
      MEMORY[0x1E01EFA10](v45, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      char v35 = 1;
    }
  }
  else
  {
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    uint64_t v60 = v15;
    v50(v15, v13, v38);
    uint64_t v51 = v36[18];
    uint64_t v71 = (void *)v36[19];
    uint64_t v67 = __swift_project_boxed_opaque_existential_1(v36 + 15, v51);
    uint64_t v53 = v62;
    uint64_t v52 = v63;
    (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, *MEMORY[0x1E4F80AB8], v69);
    uint64_t v54 = v64;
    uint64_t v55 = v65;
    uint64_t v56 = v66;
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v64, *MEMORY[0x1E4F80E20], v66);
    uint64_t v57 = (void *)sub_1DFDFD410();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v69);
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = v57;
    *(unsigned char *)(v58 + 56) = 2;
    uint64_t v76 = v58;
    id v59 = v57;
    char v35 = sub_1DEBB846C((unint64_t *)&v76);
    swift_release();

    (*(void (**)(char *, uint64_t))(v74 + 8))(v60, v38);
  }
LABEL_15:
  *uint64_t v72 = v35 & 1;
}

uint64_t sub_1DEBB926C()
{
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PuzzleURLHandler()
{
  return self;
}

uint64_t sub_1DEBB92F8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DEBB9304(uint64_t a1)
{
  return sub_1DEBB7034(a1);
}

uint64_t sub_1DEBB9328(uint64_t a1, uint64_t a2)
{
  return sub_1DEBB9A38((unint64_t *)&unk_1EBAD52C0, a2, (void (*)(uint64_t))type metadata accessor for PuzzleURLHandler);
}

void sub_1DEBB9370()
{
  if (!qword_1EBAEA160)
  {
    sub_1DEBB9408(255, &qword_1EBAEA170, MEMORY[0x1E4FAAC58], MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAEA160);
    }
  }
}

void sub_1DEBB9408(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1DEBB946C()
{
  unint64_t result = qword_1EBAEA520;
  if (!qword_1EBAEA520)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAEA520);
  }
  return result;
}

uint64_t sub_1DEBB94C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEBB9504(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(void *)(v5 + 8) = sub_1DEB7BAE0;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1DEBB7560, 0, 0);
}

uint64_t sub_1DEBB95CC()
{
  sub_1DEBB9408(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DEBB96C8@<X0>(id *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  sub_1DEBB9408(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  return sub_1DEBB7790(a1, a2, *(void *)(v3 + 16), *(char **)(v3 + 24), v3+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)), a3);
}

uint64_t sub_1DEBB9780()
{
  sub_1DEBB9408(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DEBB9858(void *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  sub_1DEBB9408(0, (unint64_t *)&qword_1EBAD27D0, MEMORY[0x1E4FABD38], MEMORY[0x1E4FAAC10]);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  unint64_t v9 = (*(void *)(*(void *)(v7 - 8) + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1DEBB88DC(a1, a2, v3 + v8, *(void *)(v3 + v9), *(void **)(v3 + v9 + 8), a3);
}

uint64_t sub_1DEBB993C(uint64_t a1)
{
  sub_1DEBB9A80(0, (unint64_t *)&unk_1EAC214C0, (uint64_t (*)(void))sub_1DEADCE48, (uint64_t)&type metadata for PuzzleOfflineModel, MEMORY[0x1E4F80A18]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEBB99D0()
{
  uint64_t v1 = (id *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 56);
  if (v2 == 2)
  {
  }
  else if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  else if (!*(unsigned char *)(v0 + 56))
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DEBB9A38(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEBB9A80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1DEBB9AE8()
{
  unint64_t result = qword_1EBAA7CA0;
  if (!qword_1EBAA7CA0)
  {
    sub_1DEBB9A80(255, (unint64_t *)&qword_1EBAA7CB0, (uint64_t (*)(void))sub_1DEAE44D4, (uint64_t)&type metadata for NewsActivity2, MEMORY[0x1E4FABFB8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAA7CA0);
  }
  return result;
}

uint64_t sub_1DEBB9B78(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1DEAE5744(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE925CE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1DEBB9BE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DEBB9408(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1DEBB9C58()
{
  unint64_t result = qword_1EAC34B00;
  if (!qword_1EAC34B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC34B00);
  }
  return result;
}

unint64_t sub_1DEBB9CAC()
{
  unint64_t result = qword_1EAC214F0;
  if (!qword_1EAC214F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC214F0);
  }
  return result;
}

uint64_t sub_1DEBB9D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBB9D64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PuzzleModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEBB9DC0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagFeedViewerSportsEventTitleViewStyler()
{
  return self;
}

uint64_t sub_1DEBB9E24()
{
  uint64_t v1 = (char *)objc_msgSend(*(id *)(v0 + 16), sel_cachedSubscription);
  if (objc_getAssociatedObject(v1, v1 + 1))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v9, (uint64_t)v11);
  if (!v12)
  {
    sub_1DE9E4C20((uint64_t)v11);
    goto LABEL_9;
  }
  sub_1DEA69724();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = v8;
  unint64_t v3 = (unint64_t)objc_msgSend(v8, sel_integerValue);
  if (v3 == -1) {
    goto LABEL_17;
  }
LABEL_10:
  if (objc_getAssociatedObject(v1, (const void *)~v3))
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_1DEA6964C((uint64_t)&v9, (uint64_t)v11);
  if (!v12)
  {
    sub_1DE9E4C20((uint64_t)v11);
    goto LABEL_17;
  }
  sub_1DEA69724();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:

    int v6 = -32;
    return (v6 ^ v3) & 1;
  }
  id v4 = v8;
  unsigned int v5 = objc_msgSend(v4, sel_integerValue);

  int v6 = v5 - 32;
  return (v6 ^ v3) & 1;
}

uint64_t sub_1DEBB9FDC(uint64_t a1)
{
  uint64_t v3 = sub_1DFDFBB00();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x1F4188790](v3);
  unsigned int v5 = (uint64_t *)((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1DFDFB530();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v39 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DFDF98C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DFDF8100();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = (void *)v1[8];
  unsigned int v17 = objc_msgSend(v16, sel_useOfflineMode);
  if (!v17) {
    return v17 & 1;
  }
  if ((sub_1DEBB9E24() & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
    if (sub_1DFDF8460()) {
      LOBYTE(v17) = objc_msgSend(v16, sel_dimNonSubscriberContentOffline);
    }
    else {
      LOBYTE(v17) = 0;
    }
    return v17 & 1;
  }
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  int v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 88))(v15, v12);
  if (v18 == *MEMORY[0x1E4F7F7B8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v11, v15, v8);
    __swift_project_boxed_opaque_existential_1(v1 + 9, v1[12]);
    (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v5, v11, v8);
    uint64_t v20 = v37;
    uint64_t v19 = v38;
    (*(void (**)(void *, void, uint64_t))(v37 + 104))(v5, *MEMORY[0x1E4F81028], v38);
    uint64_t v21 = v39;
    sub_1DFDFD2A0();
    (*(void (**)(void *, uint64_t))(v20 + 8))(v5, v19);
    char v22 = sub_1DFDFB510();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v41);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_5:
    LOBYTE(v17) = v22 ^ 1;
    return v17 & 1;
  }
  if (v18 == *MEMORY[0x1E4F7F7D0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    uint64_t v23 = *v15;
    __swift_project_boxed_opaque_existential_1(v1 + 9, v1[12]);
    *unsigned int v5 = v23;
    uint64_t v24 = (unsigned int *)MEMORY[0x1E4F81030];
LABEL_13:
    uint64_t v27 = v37;
    uint64_t v26 = v38;
    (*(void (**)(void *, void, uint64_t))(v37 + 104))(v5, *v24, v38);
    swift_unknownObjectRetain();
    uint64_t v28 = v39;
    sub_1DFDFD2A0();
    (*(void (**)(void *, uint64_t))(v27 + 8))(v5, v26);
    char v29 = sub_1DFDFB510();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v41);
    LOBYTE(v17) = v29 ^ 1;
    return v17 & 1;
  }
  if (v18 == *MEMORY[0x1E4F7F7C8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    uint64_t v25 = *v15;
    __swift_project_boxed_opaque_existential_1(v1 + 9, v1[12]);
    *unsigned int v5 = v25;
    uint64_t v24 = (unsigned int *)MEMORY[0x1E4F81010];
    goto LABEL_13;
  }
  if (v18 == *MEMORY[0x1E4F7F7C0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    uint64_t v31 = *v15;
    uint64_t v32 = v15[1];
    __swift_project_boxed_opaque_existential_1(v1 + 9, v1[12]);
    *unsigned int v5 = v31;
    v5[1] = v32;
    uint64_t v34 = v37;
    uint64_t v33 = v38;
    (*(void (**)(void *, void, uint64_t))(v37 + 104))(v5, *MEMORY[0x1E4F81000], v38);
    char v35 = v39;
    sub_1DFDFD2A0();
    (*(void (**)(void *, uint64_t))(v34 + 8))(v5, v33);
    char v22 = sub_1DFDFB510();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v41);
    goto LABEL_5;
  }
  uint64_t result = sub_1DFDFFF40();
  __break(1u);
  return result;
}

uint64_t sub_1DEBBA5CC()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedItemDimmingEvaluator()
{
  return self;
}

uint64_t sub_1DEBBA640(uint64_t a1)
{
  return sub_1DEBB9FDC(a1) & 1;
}

uint64_t sub_1DEBBA668()
{
  uint64_t v34 = sub_1DFDECD80();
  uint64_t v1 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v33 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBBAAC8();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = sub_1DFDECB60();
  uint64_t v4 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1DEC78FF4(v7);
  swift_bridgeObjectRelease();
  unint64_t v8 = sub_1DFDFAE90();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
  uint64_t v9 = sub_1DF69A05C(v8);
  swift_bridgeObjectRelease();
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
    sub_1DEDF67FC(0, v10, 0);
    uint64_t v11 = (void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    v31[0] = v9;
    v31[1] = v4 + 32;
    uint64_t v12 = (unsigned char *)(v9 + 56);
    do
    {
      char v13 = *(v12 - 16);
      char v14 = *(v12 - 15);
      char v15 = *(v12 - 14);
      char v16 = *(v12 - 13);
      char v17 = *(v12 - 12);
      int v18 = (void *)*((void *)v12 - 1);
      char v19 = *v12;
      id v35 = (id)*((void *)v12 - 3);
      char v36 = v13;
      char v37 = v14;
      char v38 = v15;
      char v39 = v16;
      char v40 = v17;
      uint64_t v41 = v18;
      char v42 = v19;
      uint64_t v20 = qword_1EBABDA98;
      id v21 = v35;
      id v22 = v18;
      id v23 = v21;
      id v24 = v22;
      if (v20 != -1) {
        swift_once();
      }
      uint64_t v25 = v34;
      uint64_t v26 = __swift_project_value_buffer(v34, (uint64_t)qword_1EBAA3940);
      (*v11)(v33, v26, v25);
      swift_getKeyPath();
      sub_1DFDEE200();
      sub_1DFDECB50();

      uint64_t v27 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF67FC(0, v27[2] + 1, 1);
        uint64_t v27 = v43;
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      if (v29 >= v28 >> 1)
      {
        sub_1DEDF67FC(v28 > 1, v29 + 1, 1);
        uint64_t v27 = v43;
      }
      v27[2] = v29 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v27+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v29, v6, v32);
      uint64_t v43 = v27;
      v12 += 32;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
  }
  id v35 = v27;
  sub_1DEBBAB58(0, (unint64_t *)&unk_1EBAA3988, (uint64_t (*)(uint64_t))sub_1DEBBAB24, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DEBBAAA4()
{
  return sub_1DEBBA668();
}

void sub_1DEBBAAC8()
{
  if (!qword_1EBAA39B8)
  {
    unint64_t v0 = sub_1DFDEE2F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA39B8);
    }
  }
}

void sub_1DEBBAB24(uint64_t a1)
{
}

void sub_1DEBBAB58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DEBBABBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  sub_1DEAE954C(0, &qword_1EBAD0458, MEMORY[0x1E4F7C5D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  char v13 = (char *)&v32 - v12;
  uint64_t v14 = sub_1DFDEB9E0();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  int64_t v20 = a4 >> 1;
  if (a4 >> 1 == a3)
  {
    return MEMORY[0x1E4FBC860];
  }
  else
  {
    char v40 = v19;
    uint64_t v41 = v16;
    uint64_t v34 = (char *)&v32 - v17;
    uint64_t v37 = v18;
    char v38 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    char v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    uint64_t result = swift_unknownObjectRetain();
    unint64_t v21 = MEMORY[0x1E4FBC860];
    id v35 = a5;
    uint64_t v36 = a1;
    uint64_t v33 = v13;
    while (a3 < v20)
    {
      uint64_t v23 = a2;
      id v42 = *(id *)(a2 + 8 * a3);
      id v24 = v42;
      sub_1DEBBBC6C(&v42, a5, (uint64_t)v13);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();

        return v21;
      }

      uint64_t v25 = v41;
      if ((*v39)(v13, 1, v41) == 1)
      {
        uint64_t result = sub_1DEBC1628((uint64_t)v13, &qword_1EBAD0458, MEMORY[0x1E4F7C5D0]);
      }
      else
      {
        uint64_t v26 = *v38;
        uint64_t v27 = v34;
        (*v38)(v34, v13, v25);
        v26(v40, v27, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v21 = sub_1DEE17BBC(0, *(void *)(v21 + 16) + 1, 1, v21);
        }
        uint64_t v28 = v37;
        char v13 = v33;
        unint64_t v30 = *(void *)(v21 + 16);
        unint64_t v29 = *(void *)(v21 + 24);
        if (v30 >= v29 >> 1)
        {
          uint64_t v31 = sub_1DEE17BBC(v29 > 1, v30 + 1, 1, v21);
          uint64_t v28 = v37;
          unint64_t v21 = v31;
        }
        *(void *)(v21 + 16) = v30 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(v21+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v30, v40, v41);
        a5 = v35;
      }
      a2 = v23;
      if (v20 == ++a3)
      {
        swift_unknownObjectRelease();
        return v21;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1DEBBAF14(void (*a1)(long long *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  uint64_t v107 = a6;
  uint64_t v109 = a2;
  uint64_t v110 = a1;
  uint64_t v106 = sub_1DFDF9D80();
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v104 = v17;
  uint64_t v112 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DFDEBF40();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v114 = (uint64_t)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAE954C(0, (unint64_t *)&unk_1EBACBE40, MEMORY[0x1E4F7C978], MEMORY[0x1E4FBB718]);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v113 = (uint64_t)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v116 = (uint64_t)&v98 - v23;
  CACurrentMediaTime();
  uint64_t v102 = a5[5];
  sub_1DFDEDB90();
  unint64_t v24 = *(void *)&v122[0];
  uint64_t v111 = a5;
  uint64_t v101 = a5[3];
  uint64_t v108 = a7;
  id v103 = a8;
  uint64_t v115 = a9;
  sub_1DEBC0440(*(unint64_t *)&v122[0], v101, a7, (uint64_t)a8, a9);
  if (!((unint64_t)v25 >> 62))
  {
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DEBC0D38();
    uint64_t v53 = (void *)swift_allocError();
    *uint64_t v54 = 1;
    ((void (*)(void))a3)();

    return;
  }
LABEL_28:
  uint64_t v51 = v25;
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  uint64_t v25 = v51;
  if (!v52) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t v99 = v25;
  uint64_t v123 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v100 = v24 >> 62;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v26 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v26)
    {
LABEL_5:
      unint64_t v120 = v24 & 0xC000000000000001;
      a3 = 4;
      uint64_t v27 = v111[2];
      uint64_t v118 = (uint64_t (*)(uint64_t))v24;
      uint64_t v119 = v27;
      uint64_t v117 = v26;
      while (1)
      {
        if (v120) {
          uint64_t v25 = MEMORY[0x1E01EE240](a3 - 4, v24);
        }
        else {
          uint64_t v25 = (uint64_t)*(id *)(v24 + 8 * a3);
        }
        uint64_t v28 = (void *)v25;
        uint64_t v29 = a3 - 3;
        if (__OFADD__(a3 - 4, 1))
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        sub_1DFDEDB90();
        unint64_t v30 = *(void **)&v122[0];
        id v31 = objc_msgSend(*(id *)&v122[0], sel_objectForKey_, v28);

        if (v31) {
          break;
        }

LABEL_7:
        ++a3;
        if (v29 == v26) {
          goto LABEL_31;
        }
      }
      id v32 = objc_msgSend(v28, sel_itemID);
      uint64_t v33 = sub_1DFDFDD20();
      uint64_t v35 = v34;

      id v36 = v31;
      uint64_t v37 = (uint64_t)v123;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v122[0] = v37;
      uint64_t v123 = (void *)0x8000000000000000;
      unint64_t v40 = sub_1DEA6D930(v33, v35);
      uint64_t v41 = *(void *)(v37 + 16);
      BOOL v42 = (v39 & 1) == 0;
      uint64_t v25 = v41 + v42;
      if (__OFADD__(v41, v42)) {
        goto LABEL_26;
      }
      unint64_t v24 = v39;
      if (*(void *)(v37 + 24) < v25)
      {
        sub_1DF6507B8(v25, isUniquelyReferenced_nonNull_native);
        uint64_t v25 = sub_1DEA6D930(v33, v35);
        if ((v24 & 1) != (v43 & 1))
        {
          sub_1DFE00000();
          __break(1u);
          return;
        }
        unint64_t v40 = v25;
        os_log_type_t v44 = *(void **)&v122[0];
        if ((v24 & 1) == 0) {
          goto LABEL_22;
        }
LABEL_20:
        uint64_t v45 = v44[7];
        uint64_t v46 = 8 * v40;

        *(void *)(v45 + v46) = v36;
LABEL_24:
        uint64_t v123 = v44;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = v117;
        unint64_t v24 = (unint64_t)v118;
        goto LABEL_7;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        os_log_type_t v44 = *(void **)&v122[0];
        if (v39) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v25 = (uint64_t)sub_1DF65A648();
        os_log_type_t v44 = *(void **)&v122[0];
        if (v24) {
          goto LABEL_20;
        }
      }
LABEL_22:
      v44[(v40 >> 6) + 8] |= 1 << v40;
      uint64_t v47 = (uint64_t *)(v44[6] + 16 * v40);
      *uint64_t v47 = v33;
      v47[1] = v35;
      *(void *)(v44[7] + 8 * v40) = v36;
      uint64_t v48 = v44[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_27;
      }
      v44[2] = v50;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
  }
LABEL_31:
  swift_bridgeObjectRelease();
  *(void *)&v122[0] = v99;
  sub_1DEBC0A6C();
  sub_1DEBC1370((unint64_t *)&qword_1EBAA6560, (void (*)(uint64_t))sub_1DEBC0A6C);
  unint64_t v55 = sub_1DFDFDFF0();
  swift_bridgeObjectRelease();
  uint64_t v56 = (uint64_t)v111;
  uint64_t v57 = (void *)v111[1];
  uint64_t v124 = *v111;
  uint64_t v58 = (void *)v111[4];
  sub_1DEBB1F30((uint64_t)&v124);
  id v59 = v57;
  swift_retain();
  swift_bridgeObjectRetain();
  id v60 = v58;
  swift_retain();
  uint64_t v61 = sub_1DEBC0210(v55, (uint64_t *)&v123, v56);
  sub_1DEBA2BAC((uint64_t)&v124);
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  if (qword_1EBAD1B10 != -1) {
    swift_once();
  }
  uint64_t v62 = a12;
  sub_1DEA086BC();
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_1DFE0B750;
  sub_1DFDFE560();
  uint64_t v64 = MEMORY[0x1E4FBB460];
  *(void *)(v63 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v63 + 64) = v64;
  *(void *)(v63 + 32) = v65;
  uint64_t v119 = v61;
  uint64_t v66 = *(void *)(v61 + 16);
  uint64_t v67 = MEMORY[0x1E4FBB5C8];
  *(void *)(v63 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v63 + 104) = v67;
  *(void *)(v63 + 72) = v66;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v68 = *(void **)(v115 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig);
  if ((objc_msgSend(v68, sel_respondsToSelector_, sel_numberOfFetchedHeadlinesToReport) & 1) != 0
    && (uint64_t v69 = (uint64_t)objc_msgSend(v68, sel_numberOfFetchedHeadlinesToReport), v69 >= 1))
  {
    uint64_t v70 = v69;
    unsigned __int8 v71 = objc_msgSend(v68, sel_respondsToSelector_, sel_shouldShuffleReportedHeadlines);
    uint64_t v117 = a12;
    if ((v71 & 1) != 0 && (objc_msgSend(v68, sel_shouldShuffleReportedHeadlines) & 1) == 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_1DEC7FBDC(v70, v24);
      uint64_t v77 = v82;
      uint64_t v79 = v83;
      unint64_t v81 = v84;
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v100)
      {
        unint64_t v74 = swift_bridgeObjectRetain();
        uint64_t v72 = (uint64_t)sub_1DEC790FC(v74);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v72 = v24 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
      }
      *(void *)&v122[0] = v72;
      sub_1DEEFD290();
      uint64_t v75 = sub_1DEC7FBDC(v70, *(unint64_t *)&v122[0]);
      uint64_t v77 = v76;
      uint64_t v79 = v78;
      unint64_t v81 = v80;
      swift_release();
    }
    sub_1DEBBABBC(v75, v77, v79, v81, (uint64_t *)&v123);
    uint64_t v85 = v116;
    sub_1DFDEBE70();
    swift_unknownObjectRelease();
    uint64_t v86 = sub_1DFDEBE80();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 0, 1, v86);
    uint64_t v62 = v117;
  }
  else
  {
    uint64_t v73 = sub_1DFDEBE80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v116, 1, 1, v73);
  }
  unint64_t v120 = a13;
  if (v100)
  {
    swift_bridgeObjectRetain();
    sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_feedsNetworkTime);
  sub_1DFDFE550();
  objc_msgSend(v60, sel_feedsNetworkTime);
  sub_1DFDFE550();
  objc_msgSend(v60, sel_evergreenNetworkTime);
  sub_1DFDFE550();
  objc_msgSend(v60, sel_scoringTime);
  sub_1DFDFE550();
  sub_1DFDEBF30();
  uint64_t v118 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7C978];
  sub_1DEBC15A8(v116, v113, (unint64_t *)&unk_1EBACBE40, MEMORY[0x1E4F7C978]);
  objc_msgSend(v103, sel_decayedPublisherDiversificationPenalty);
  double v88 = v87;
  uint64_t v89 = v105;
  uint64_t v90 = v106;
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v112, a10, v106);
  sub_1DE94F204(a11, (uint64_t)v122);
  sub_1DE94F204(v62, (uint64_t)v121);
  unint64_t v91 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  unint64_t v92 = (v104 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v93 = (v92 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v94 = (v93 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v95 = swift_allocObject();
  uint64_t v96 = v108;
  *(void *)(v95 + 16) = v107;
  *(void *)(v95 + 24) = v96;
  (*(void (**)(unint64_t, char *, uint64_t))(v89 + 32))(v95 + v91, v112, v90);
  *(void *)(v95 + v92) = v115;
  sub_1DE942EC4(v122, v95 + v93);
  sub_1DE942EC4(v121, v95 + v94);
  *(void *)(v95 + ((v94 + 47) & 0xFFFFFFFFFFFFFFF8)) = v120;
  _s11MyHeadlinesCMa();
  swift_allocObject();
  swift_retain();
  id v97 = v96;
  swift_retain();
  swift_retain();
  *(void *)&v122[0] = sub_1DF082CD4(v114, v113, MEMORY[0x1E4FBC860], v119, (uint64_t)sub_1DEBC0BFC, v95, 0, v88);
  v110(v122);
  sub_1DEBC1628(v116, (unint64_t *)&unk_1EBACBE40, v118);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1DEBBBB30(id *a1, uint64_t *a2, uint64_t a3)
{
  id v5 = *a1;
  id v6 = objc_msgSend(v5, sel_identifier);
  uint64_t v7 = sub_1DFDFDD20();
  uint64_t v9 = v8;

  uint64_t v10 = *a2;
  if (*(void *)(v10 + 16))
  {
    unint64_t v11 = sub_1DEA6D930(v7, v9);
    if (v12) {
      id v13 = *(id *)(*(void *)(v10 + 56) + 8 * v11);
    }
  }
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v5, sel_feedID);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_1DFDFDD20();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0xE000000000000000;
  }
  uint64_t v19 = *(void *)(a3 + 24);
  if (*(void *)(v19 + 16))
  {
    unint64_t v20 = sub_1DEA6D930(v16, v18);
    if (v21) {
      id v22 = *(id *)(*(void *)(v19 + 56) + 8 * v20);
    }
  }
  swift_bridgeObjectRelease();
  return sub_1DFDF7270();
}

uint64_t sub_1DEBBBC6C@<X0>(id *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_1DFDEC690();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  sub_1DEAE954C(0, &qword_1EBAD0480, MEMORY[0x1E4F7D400], MEMORY[0x1E4FBB718]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v12 = (char *)&v26 - v11;
  id v13 = objc_msgSend(*a1, sel_itemID);
  uint64_t v14 = sub_1DFDFDD20();
  uint64_t v16 = v15;

  uint64_t v17 = *a2;
  if (!*(void *)(v17 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_1DEA6D930(v14, v16);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1DFDEB9E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v27, 1, 1, v21);
  }
  id v20 = *(id *)(*(void *)(v17 + 56) + 8 * v18);
  swift_bridgeObjectRelease();
  if (objc_msgSend(v20, sel_hasShadowScores))
  {
    objc_msgSend(v20, sel_shadowTabiScore);
    objc_msgSend(v20, sel_shadowAgedPersonalizationScore);
    sub_1DFDEC680();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, 1, 1, v5);
  }
  objc_msgSend(v20, sel_tabiScore);
  objc_msgSend(v20, sel_agedPersonalizationScore);
  sub_1DFDEC680();
  uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7D400];
  sub_1DEBC15A8((uint64_t)v12, (uint64_t)v10, &qword_1EBAD0480, MEMORY[0x1E4F7D400]);
  uint64_t v24 = v27;
  sub_1DFDEB9D0();

  sub_1DEBC1628((uint64_t)v12, &qword_1EBAD0480, v23);
  uint64_t v25 = sub_1DFDEB9E0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
}

uint64_t sub_1DEBBC014(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v47 = a5;
  uint64_t v44 = a4;
  uint64_t v45 = a1;
  uint64_t v41 = a3;
  uint64_t v42 = a2;
  uint64_t v46 = a9;
  uint64_t v12 = type metadata accessor for TopicTodayFeedGroupKnobs();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v43 + 64);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v49 = (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1DFDF9D80();
  uint64_t v14 = *(void *)(v39 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v39);
  id v36 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ChannelTodayFeedGroupKnobs();
  uint64_t v38 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v38 + 64);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a8;
  type metadata accessor for FCSportsOnboardingState(0);
  sub_1DFDEE090();
  sub_1DE94F204(a7, (uint64_t)v51);
  uint64_t v18 = swift_allocObject();
  uint64_t v37 = a6;
  *(void *)(v18 + 16) = a6;
  sub_1DE942EC4(v51, v18 + 24);
  swift_retain();
  char v19 = (void *)sub_1DFDEDCE0();
  sub_1DEA36B08();
  uint64_t v40 = sub_1DFDEDDF0();
  swift_release();
  swift_release();

  sub_1DE97A664(v41, (uint64_t)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroupKnobs);
  uint64_t v34 = v14;
  uint64_t v20 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v39);
  sub_1DE97A664(v44, v49, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroupKnobs);
  unint64_t v21 = (*(unsigned __int8 *)(v38 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v22 = (v17 + *(unsigned __int8 *)(v14 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v23 = (v15 + *(unsigned __int8 *)(v43 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v37;
  sub_1DEA4CE94(v35, v27 + v21, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroupKnobs);
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v27 + v22, v36, v20);
  sub_1DEA4CE94(v49, v27 + v23, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroupKnobs);
  uint64_t v28 = v48;
  *(void *)(v27 + v24) = v47;
  uint64_t v29 = v45;
  *(void *)(v27 + v25) = v45;
  *(void *)(v27 + v26) = v28;
  *(void *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = v46;
  swift_retain();
  swift_bridgeObjectRetain();
  id v30 = v29;
  swift_retain();
  swift_retain();
  id v31 = (void *)sub_1DFDEDCE0();
  sub_1DFDF82D0();
  uint64_t v32 = sub_1DFDEDDF0();
  swift_release();
  swift_release();

  return v32;
}

uint64_t sub_1DEBBC498(void *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 != 1)
  {
    if (qword_1EBAD1B10 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    goto LABEL_13;
  }
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                             + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig), sel_mySportsTagID));
  if (!v5)
  {
    if (qword_1EBAD1B10 != -1) {
      swift_once();
    }
    sub_1DFDFEA40();
LABEL_13:
    sub_1DFDF00C0();
    sub_1DEAE954C(0, (unint64_t *)&qword_1EBAA3998, (uint64_t (*)(uint64_t))sub_1DEA36B08, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1DFDEDE90();
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_1DFDFDD20();
  uint64_t v9 = v8;
  uint64_t v10 = *(void **)(a2 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_subscriptionController);
  unsigned __int8 v11 = objc_msgSend(v10, sel_hasMutedSubscriptionForTagID_, v6);

  if (v11)
  {
    if (qword_1EBAD1B10 != -1) {
      swift_once();
    }
    sub_1DEA086BC();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1DFE0B250;
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 64) = sub_1DEA08668();
    *(void *)(v12 + 32) = v7;
    *(void *)(v12 + 40) = v9;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    sub_1DEAE954C(0, (unint64_t *)&qword_1EBAA3998, (uint64_t (*)(uint64_t))sub_1DEA36B08, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1DFDEDE90();
  }
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v10, sel_cachedSubscribedTags);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_1DEABCEB0();
    unint64_t v17 = sub_1DFDFE220();

    if (!(v17 >> 62)) {
      goto LABEL_17;
    }
  }
  else
  {
    unint64_t v17 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62))
    {
LABEL_17:
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v34 = a3;
      if (v18) {
        goto LABEL_18;
      }
LABEL_33:
      uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
LABEL_34:
      swift_bridgeObjectRelease_n();
      uint64_t v30 = sub_1DE9DB9D8((uint64_t)v20);
      uint64_t v31 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v31);
      sub_1DFDFB880();
      sub_1DFDEE090();
      *(void *)(swift_allocObject() + 16) = v30;
      swift_bridgeObjectRetain();
      uint64_t v32 = (void *)sub_1DFDEDCE0();
      sub_1DEA36B08();
      sub_1DFDEDDF0();
      swift_release();
      swift_release();

      *(void *)(swift_allocObject() + 16) = v30;
      uint64_t v33 = (void *)sub_1DFDEDCE0();
      uint64_t v13 = sub_1DFDEDED0();
      swift_release();
      swift_release();

      return v13;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DFDFFBE0();
  uint64_t v18 = result;
  uint64_t v34 = a3;
  if (!result) {
    goto LABEL_33;
  }
LABEL_18:
  if (v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
      {
        unint64_t v21 = (void *)MEMORY[0x1E01EE240](v19, v17);
      }
      else
      {
        unint64_t v21 = *(void **)(v17 + 8 * v19 + 32);
        swift_unknownObjectRetain();
      }
      id v22 = objc_msgSend(v21, sel_asSports, v34);
      if (v22)
      {
        id v23 = objc_msgSend(v22, sel_identifier);
        swift_unknownObjectRelease();
        uint64_t v24 = sub_1DFDFDD20();
        uint64_t v26 = v25;
        swift_unknownObjectRelease();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_1DEA8C6EC(0, v20[2] + 1, 1, v20);
        }
        unint64_t v28 = v20[2];
        unint64_t v27 = v20[3];
        if (v28 >= v27 >> 1) {
          uint64_t v20 = sub_1DEA8C6EC((void *)(v27 > 1), v28 + 1, 1, v20);
        }
        _OWORD v20[2] = v28 + 1;
        uint64_t v29 = &v20[2 * v28];
        v29[4] = v24;
        v29[5] = v26;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v19;
    }
    while (v18 != v19);
    goto LABEL_34;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEBBCAB8()
{
  uint64_t v0 = sub_1DFDFB870();
  if (qword_1EBAD1B10 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DFE0B250;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = MEMORY[0x1E4FBB5C8];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v1 + 64) = v3;
  *(void *)(v1 + 32) = v2;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1DF7538B8(v4, v0);
  sub_1DEAE954C(0, (unint64_t *)&qword_1EBAA3998, (uint64_t (*)(uint64_t))sub_1DEA36B08, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

uint64_t sub_1DEBBCC0C()
{
  if (qword_1EBAD1B10 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DFE0B250;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  sub_1DFDFFB10();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1DEA08668();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DEAE954C(0, (unint64_t *)&qword_1EBAA3998, (uint64_t (*)(uint64_t))sub_1DEA36B08, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return sub_1DFDEDE90();
}

id sub_1DEBBCDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v79 = a8;
  id v86 = a7;
  id v77 = a5;
  uint64_t v76 = a3;
  uint64_t v12 = sub_1DFDF84A0();
  uint64_t v84 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v83 = (unsigned __int8 *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DFDF92A0();
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v91 = (char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAE954C(0, &qword_1EBAE96D8, MEMORY[0x1E4F7F920], MEMORY[0x1E4FBB718]);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v89 = (uint64_t)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v87 = (uint64_t)v70 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v90 = (uint64_t)v70 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v88 = (uint64_t)v70 - v23;
  uint64_t v24 = sub_1DFDF84C0();
  uint64_t v81 = *(void *)(v24 - 8);
  uint64_t v82 = v24;
  MEMORY[0x1F4188790](v24);
  unint64_t v80 = (char *)v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ChannelTodayFeedGroupKnobs();
  MEMORY[0x1F4188790](v26);
  unint64_t v93 = (char *)v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for TopicTodayFeedGroupKnobs();
  MEMORY[0x1F4188790](v85);
  uint64_t v92 = (uint64_t)v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1DF7F7AE8();
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_1DF7538B8(v30, v29);
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_1DF7538B8(v32, v31);
  uint64_t v34 = *(void **)(a2 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig);
  id result = objc_msgSend(v34, sel_respondsToSelector_, sel_deprecatedSportsTopicTagIds);
  if (result)
  {
    id v36 = objc_msgSend(v34, sel_deprecatedSportsTopicTagIds);
    uint64_t v75 = a6;
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = sub_1DFDFE220();
    }
    else
    {
      uint64_t v38 = MEMORY[0x1E4FBC860];
    }
    uint64_t v74 = v12;
    uint64_t v73 = a9;
    uint64_t v39 = sub_1DF756068(v38, v33);
    swift_bridgeObjectRelease();
    uint64_t v40 = v76;
    uint64_t v41 = sub_1DFDF8530();
    uint64_t v42 = sub_1DF7538B8(v41, v39);
    uint64_t v43 = (uint64_t)v77;
    uint64_t v44 = sub_1DFDF8530();
    uint64_t v72 = sub_1DF7538B8(v44, v42);
    uint64_t v46 = v92;
    uint64_t v45 = v93;
    sub_1DEBBD994(v92, v93, a2, v43, v40);
    sub_1DFDECB80();
    if (sub_1DFDECB70())
    {
      uint64_t v47 = sub_1DEBBE858((void (*)(void))type metadata accessor for TopicTodayFeedGroupKnobs, (unint64_t *)&unk_1EBAA4F00, (void (*)(uint64_t))type metadata accessor for TopicTodayFeedGroupKnobs);
      if (v48)
      {
        uint64_t v49 = v47;
        uint64_t v50 = v48;
        if (qword_1EBAF3210 != -1) {
          swift_once();
        }
        sub_1DEA086BC();
        uint64_t v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = xmmword_1DFE0B250;
        *(void *)(v51 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v51 + 64) = sub_1DEA08668();
        *(void *)(v51 + 32) = v49;
        *(void *)(v51 + 40) = v50;
        sub_1DFDFEA60();
        sub_1DFDF00C0();
        swift_bridgeObjectRelease();
        uint64_t v46 = v92;
      }
      uint64_t v52 = sub_1DEBBE858((void (*)(void))type metadata accessor for ChannelTodayFeedGroupKnobs, &qword_1EBADC728, (void (*)(uint64_t))type metadata accessor for ChannelTodayFeedGroupKnobs);
      if (v53)
      {
        uint64_t v54 = v52;
        uint64_t v55 = v53;
        if (qword_1EBAF3210 != -1) {
          swift_once();
        }
        sub_1DEA086BC();
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_1DFE0B250;
        *(void *)(v56 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v56 + 64) = sub_1DEA08668();
        *(void *)(v56 + 32) = v54;
        *(void *)(v56 + 40) = v55;
        sub_1DFDFEA60();
        sub_1DFDF00C0();
        swift_bridgeObjectRelease();
        uint64_t v46 = v92;
      }
    }
    id v77 = objc_msgSend(objc_msgSend(v86, sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
    swift_unknownObjectRelease();
    uint64_t v57 = (int *)v85;
    swift_retain();
    sub_1DFDF8BF0();
    swift_release();
    uint64_t v76 = v95;
    sub_1DEBBEBFC(v46 + v57[9], a4, 0x766146206F747541, 0xEE0073657469726FLL, v88);
    uint64_t v58 = sub_1DEBBEBFC((uint64_t)&v45[*(int *)(v26 + 24)], a4, 0x6C656E6E616843, 0xE700000000000000, v90);
    unsigned __int8 v71 = v70;
    MEMORY[0x1F4188790](v58);
    v70[1] = v26;
    sub_1DFDF8EA0();
    sub_1DFDF8490();
    swift_bridgeObjectRetain();
    id v59 = (void *)v78;
    uint64_t v78 = sub_1DFDFDB30();
    uint64_t v60 = swift_bridgeObjectRelease();
    v70[0] = v70;
    MEMORY[0x1F4188790](v60);
    swift_bridgeObjectRetain();
    sub_1DFDFDB30();
    unsigned __int8 v71 = v59;
    swift_bridgeObjectRelease();
    sub_1DEBBEBFC(v46 + v57[10], a4, 0x6C6172656E6547, 0xE700000000000000, v87);
    sub_1DEBBEBFC(v46 + v57[11], a4, 0x726F462065726F4DLL, 0xEC000000756F5920, v89);
    swift_retain();
    sub_1DFDF8BF0();
    swift_release();
    swift_retain();
    sub_1DFDF8BF0();
    swift_release();
    swift_retain();
    sub_1DFDF8BF0();
    swift_release();
    swift_retain();
    sub_1DFDF8BF0();
    swift_release();
    swift_retain();
    sub_1DFDF8BF0();
    swift_release();
    id v61 = objc_msgSend(objc_msgSend(v86, sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
    swift_unknownObjectRelease();
    if (objc_msgSend(v61, sel_respondsToSelector_, sel_allowAnyChannelForTodayChannelGroups)) {
      unsigned __int8 v62 = objc_msgSend(v61, sel_allowAnyChannelForTodayChannelGroups);
    }
    else {
      unsigned __int8 v62 = 0;
    }
    uint64_t v63 = v74;
    swift_unknownObjectRelease();
    uint64_t v64 = v93;
    swift_retain();
    sub_1DFDF8BF0();
    swift_release();
    unsigned __int8 v65 = v94;
    uint64_t v67 = v83;
    uint64_t v66 = v84;
    *uint64_t v83 = v62;
    v67[1] = v65;
    (*(void (**)(unsigned __int8 *, void, uint64_t))(v66 + 104))(v67, *MEMORY[0x1E4F7F928], v63);
    swift_bridgeObjectRetain();
    uint64_t v68 = v80;
    sub_1DFDF84B0();
    uint64_t v69 = sub_1DFDF84E0();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v68, v82);
    sub_1DEA4CDD4((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroupKnobs);
    sub_1DEA4CDD4(v92, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroupKnobs);
    return (id)v69;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEBBD994(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = type metadata accessor for TodayFeedGroupClusteringKnobOverrides();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(a3 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig);
  if ((objc_msgSend(v13, sel_respondsToSelector_, sel_todayFeedGroupClusteringKnobOverrides) & 1) != 0
    && (id v14 = objc_msgSend(v13, sel_todayFeedGroupClusteringKnobOverrides)) != 0)
  {
    uint64_t v15 = v14;
    uint64_t v52 = (char *)a1;
    uint64_t v53 = a4;
    uint64_t v54 = a2;
    uint64_t v55 = a5;
    sub_1DFDFDAF0();

    if (qword_1EBAF3210 != -1) {
      swift_once();
    }
    sub_1DEA086BC();
    uint64_t v50 = v16;
    uint64_t v17 = swift_allocObject();
    long long v49 = xmmword_1DFE0B250;
    *(_OWORD *)(v17 + 16) = xmmword_1DFE0B250;
    uint64_t v18 = sub_1DFDFDB00();
    uint64_t v20 = v19;
    *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v51 = sub_1DEA08668();
    *(void *)(v17 + 64) = v51;
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v20;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v21 = self;
    uint64_t v22 = (void *)sub_1DFDFDAE0();
    id v57 = 0;
    id v23 = objc_msgSend(v21, sel_dataWithJSONObject_options_error_, v22, 0, &v57);

    id v24 = v57;
    if (v23)
    {
      uint64_t v25 = sub_1DFDE72D0();
      unint64_t v27 = v26;

      sub_1DFDFEA60();
      sub_1DFDF00C0();
      sub_1DFDE6980();
      swift_allocObject();
      sub_1DFDE6970();
      sub_1DEBC1370(&qword_1EBACCAA0, (void (*)(uint64_t))type metadata accessor for TodayFeedGroupClusteringKnobOverrides);
      sub_1DFDE6950();
      uint64_t v29 = v52;
      uint64_t v28 = v53;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = v49;
      id v57 = 0;
      unint64_t v58 = 0xE000000000000000;
      sub_1DFDFFB10();
      id v45 = v57;
      unint64_t v46 = v58;
      unint64_t v47 = v51;
      *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v44 + 64) = v47;
      *(void *)(v44 + 32) = v45;
      *(void *)(v44 + 40) = v46;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      sub_1DEBBDFFC((uint64_t)v12, v28, v29);
      sub_1DEBBE430((uint64_t)v12, v55, v54);
      sub_1DEA5E6E4(v25, v27);
      return sub_1DEA4CDD4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TodayFeedGroupClusteringKnobOverrides);
    }
    uint64_t v32 = v24;
    uint64_t v33 = (void *)sub_1DFDE6FE0();

    swift_willThrow();
    uint64_t v35 = (uint64_t)v52;
    uint64_t v34 = v53;
    sub_1DFDFEA40();
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1DFE0B750;
    uint64_t v37 = sub_1DFDFDB00();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x1E4FBB1A0];
    unint64_t v41 = v51;
    *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v36 + 64) = v41;
    *(void *)(v36 + 32) = v37;
    *(void *)(v36 + 40) = v39;
    id v57 = 0;
    unint64_t v58 = 0xE000000000000000;
    uint64_t v56 = v33;
    sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
    sub_1DFDFFB10();
    id v42 = v57;
    unint64_t v43 = v58;
    *(void *)(v36 + 96) = v40;
    *(void *)(v36 + 104) = v41;
    *(void *)(v36 + 72) = v42;
    *(void *)(v36 + 80) = v43;
    sub_1DFDF00C0();

    swift_bridgeObjectRelease();
    sub_1DE97A664(v34, v35, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroupKnobs);
    uint64_t v31 = v54;
    uint64_t v30 = v55;
  }
  else
  {
    if (qword_1EBAF3210 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    sub_1DE97A664(a4, a1, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroupKnobs);
    uint64_t v30 = a5;
    uint64_t v31 = a2;
  }
  return sub_1DE97A664(v30, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroupKnobs);
}

uint64_t sub_1DEBBDFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_1DEAE954C(0, &qword_1EBAE8CA0, (uint64_t (*)(uint64_t))type metadata accessor for TopicTodayFeedGroupClusteringKnobOverrides, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v25 - v7;
  uint64_t v9 = type metadata accessor for TopicTodayFeedGroupClusteringKnobOverrides();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void (**)(char *, uint64_t, uint64_t))((char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for TodayFeedGroupClusteringKnobOverrides();
  sub_1DEBC15A8(a1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_1EBAE8CA0, (uint64_t (*)(uint64_t))type metadata accessor for TopicTodayFeedGroupClusteringKnobOverrides);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DEBC1628((uint64_t)v8, &qword_1EBAE8CA0, (uint64_t (*)(uint64_t))type metadata accessor for TopicTodayFeedGroupClusteringKnobOverrides);
    if (qword_1EBAF3210 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    return sub_1DE97A664(a2, (uint64_t)a3, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroupKnobs);
  }
  else
  {
    v25[2] = a2;
    unint64_t v26 = a3;
    sub_1DEA4CE94((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroupClusteringKnobOverrides);
    if (qword_1EBAF3210 != -1) {
      swift_once();
    }
    v25[1] = qword_1EBB634D0;
    sub_1DEA086BC();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DFE0B750;
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1DFDFFB10();
    uint64_t v17 = v27;
    unint64_t v16 = v28;
    uint64_t v18 = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v19 = sub_1DEA08668();
    *(void *)(v15 + 64) = v19;
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v16;
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    type metadata accessor for TopicTodayFeedGroupKnobs();
    sub_1DFDFFB10();
    uint64_t v20 = v27;
    unint64_t v21 = v28;
    *(void *)(v15 + 96) = v18;
    *(void *)(v15 + 104) = v19;
    *(void *)(v15 + 72) = v20;
    *(void *)(v15 + 80) = v21;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    sub_1DFB4E1DC(v12, v26);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1DFE0B250;
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1DFDFFB10();
    uint64_t v23 = v27;
    unint64_t v24 = v28;
    *(void *)(v22 + 56) = v18;
    *(void *)(v22 + 64) = v19;
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v24;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    return sub_1DEA4CDD4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TopicTodayFeedGroupClusteringKnobOverrides);
  }
}

uint64_t sub_1DEBBE430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_1DEAE954C(0, qword_1EBAE8F60, (uint64_t (*)(uint64_t))type metadata accessor for ChannelTodayFeedGroupClusteringKnobOverrides, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v24 - v7;
  uint64_t v9 = type metadata accessor for ChannelTodayFeedGroupClusteringKnobOverrides();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC15A8(a1, (uint64_t)v8, qword_1EBAE8F60, (uint64_t (*)(uint64_t))type metadata accessor for ChannelTodayFeedGroupClusteringKnobOverrides);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DEBC1628((uint64_t)v8, qword_1EBAE8F60, (uint64_t (*)(uint64_t))type metadata accessor for ChannelTodayFeedGroupClusteringKnobOverrides);
    if (qword_1EBAF3210 != -1) {
      swift_once();
    }
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    return sub_1DE97A664(a2, (uint64_t)a3, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroupKnobs);
  }
  else
  {
    v24[2] = a2;
    uint64_t v25 = a3;
    sub_1DEA4CE94((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroupClusteringKnobOverrides);
    if (qword_1EBAF3210 != -1) {
      swift_once();
    }
    v24[1] = qword_1EBB634D0;
    sub_1DEA086BC();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DFE0B750;
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1DFDFFB10();
    uint64_t v16 = v26;
    unint64_t v15 = v27;
    uint64_t v17 = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v18 = sub_1DEA08668();
    *(void *)(v14 + 64) = v18;
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v15;
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    type metadata accessor for ChannelTodayFeedGroupKnobs();
    sub_1DFDFFB10();
    uint64_t v19 = v26;
    unint64_t v20 = v27;
    *(void *)(v14 + 96) = v17;
    *(void *)(v14 + 104) = v18;
    *(void *)(v14 + 72) = v19;
    *(void *)(v14 + 80) = v20;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    sub_1DEE8F7D0((uint64_t)v12, v25);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1DFE0B250;
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1DFDFFB10();
    uint64_t v22 = v26;
    unint64_t v23 = v27;
    *(void *)(v21 + 56) = v17;
    *(void *)(v21 + 64) = v18;
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v23;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    return sub_1DEA4CDD4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ChannelTodayFeedGroupClusteringKnobOverrides);
  }
}

uint64_t sub_1DEBBE858(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1DFDFDD80();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1DFDE6A00();
  swift_allocObject();
  sub_1DFDE69F0();
  a1(0);
  sub_1DEBC1370(a2, a3);
  uint64_t v12 = sub_1DFDE69E0();
  unint64_t v14 = v13;
  swift_release();
  unint64_t v15 = self;
  uint64_t v16 = (void *)sub_1DFDE72B0();
  v28[0] = 0;
  id v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, v28);

  id v18 = v28[0];
  if (v17)
  {
    sub_1DFDFF780();
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    uint64_t v19 = sub_1DFDFFF30();
    v28[0] = 0;
    id v20 = objc_msgSend(v15, sel_dataWithJSONObject_options_error_, v19, 1, v28);
    swift_unknownObjectRelease();
    id v21 = v28[0];
    if (v20)
    {
      uint64_t v22 = sub_1DFDE72D0();
      unint64_t v24 = v23;

      sub_1DFDFDD70();
      uint64_t v10 = sub_1DFDFDD40();
      sub_1DEA5E6E4(v12, v14);
      sub_1DEA5E6E4(v22, v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
      return v10;
    }
    unint64_t v27 = v21;
    uint64_t v26 = (void *)sub_1DFDE6FE0();

    swift_willThrow();
    sub_1DEA5E6E4(v12, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  }
  else
  {
    uint64_t v25 = v18;
    uint64_t v26 = (void *)sub_1DFDE6FE0();

    swift_willThrow();
    sub_1DEA5E6E4(v12, v14);
  }
  if (qword_1EBAF3210 != -1) {
    swift_once();
  }
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B250;
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  sub_1DFDFFB10();
  uint64_t v8 = v29;
  unint64_t v9 = v30;
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1DEA08668();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v9;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();

  return 0;
}

uint64_t sub_1DEBBEBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v154 = a3;
  uint64_t v155 = a4;
  uint64_t v156 = a2;
  uint64_t v142 = a5;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEAE954C(0, &qword_1EBAD02F0, MEMORY[0x1E4FB77E8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v134 = (char *)&v122 - v8;
  sub_1DEAE954C(0, &qword_1EBAE9A20, MEMORY[0x1E4F801B0], v6);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v151 = (char *)&v122 - v10;
  sub_1DEAE954C(0, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0], v6);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  unint64_t v140 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v139 = (char *)&v122 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  id v18 = (char *)&v122 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v138 = (char *)&v122 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v144 = (char *)&v122 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v137 = (char *)&v122 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v143 = (char *)&v122 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  unint64_t v136 = (char *)&v122 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v135 = (char *)&v122 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v122 - v31;
  uint64_t v33 = sub_1DFDF9290();
  uint64_t v34 = *(char **)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)&v122 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAE954C(0, &qword_1EBAE99B0, MEMORY[0x1E4F80020], v6);
  MEMORY[0x1F4188790](v37 - 8);
  double v150 = (char *)&v122 - v38;
  sub_1DEAE954C(0, &qword_1EBACB820, MEMORY[0x1E4FB7810], v6);
  uint64_t v40 = MEMORY[0x1F4188790](v39 - 8);
  double v141 = (char *)&v122 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v149 = (char *)&v122 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v147 = (char *)&v122 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  uint64_t v146 = (char *)&v122 - v47;
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  uint64_t v148 = (char *)&v122 - v49;
  MEMORY[0x1F4188790](v48);
  uint64_t v145 = (char *)&v122 - v50;
  unint64_t v51 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7FCA8];
  sub_1DEAE954C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8], v6);
  MEMORY[0x1F4188790](v52 - 8);
  uint64_t v54 = (char *)&v122 - v53;
  uint64_t v55 = sub_1DFDF8EA0();
  MEMORY[0x1F4188790](v55);
  id v57 = (char *)&v122 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v58;
  uint64_t v60 = v51;
  uint64_t v62 = v61;
  sub_1DEBC15A8(a1, (uint64_t)v54, &qword_1EBAE9970, v60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v54, 1, v62) == 1)
  {
    sub_1DEBC1628((uint64_t)v54, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    if (qword_1EBAD1B10 != -1) {
      swift_once();
    }
    sub_1DEA086BC();
    uint64_t v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_1DFE0B250;
    *(void *)(v63 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v63 + 64) = sub_1DEA08668();
    uint64_t v64 = v155;
    *(void *)(v63 + 32) = v154;
    *(void *)(v63 + 40) = v64;
    swift_bridgeObjectRetain();
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v65 = sub_1DFDF8490();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v142, 1, 1, v65);
  }
  else
  {
    unint64_t v125 = v34;
    uint64_t v126 = v33;
    uint64_t v129 = v18;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v57, v54, v62);
    if (qword_1EBAD1B10 != -1) {
      swift_once();
    }
    uint64_t v132 = v59;
    sub_1DEA086BC();
    uint64_t v131 = v67;
    uint64_t v68 = swift_allocObject();
    long long v130 = xmmword_1DFE0B750;
    *(_OWORD *)(v68 + 16) = xmmword_1DFE0B750;
    uint64_t v69 = MEMORY[0x1E4FBB1A0];
    *(void *)(v68 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v70 = sub_1DEA08668();
    *(void *)(v68 + 64) = v70;
    uint64_t v71 = v155;
    *(void *)(v68 + 32) = v154;
    *(void *)(v68 + 40) = v71;
    uint64_t v159 = 0;
    unint64_t v160 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    uint64_t v133 = v62;
    sub_1DFDFFB10();
    uint64_t v72 = v159;
    unint64_t v73 = v160;
    *(void *)(v68 + 96) = v69;
    *(void *)(v68 + 104) = v70;
    unint64_t v123 = v70;
    *(void *)(v68 + 72) = v72;
    *(void *)(v68 + 80) = v73;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    sub_1DFDF8DE0();
    sub_1DFDF8BF0();
    swift_release();
    uint64_t v128 = v159;
    sub_1DFDF8E30();
    uint64_t v74 = v145;
    sub_1DFDF8BF0();
    swift_release();
    uint64_t v75 = sub_1DFDE7A30();
    uint64_t v76 = *(void *)(v75 - 8);
    id v77 = *(void (**)(char *, uint64_t, uint64_t, char *))(v76 + 56);
    uint64_t v78 = v76 + 56;
    v77(v74, 0, 1, (char *)v75);
    sub_1DFDF8DD0();
    sub_1DFDF8BF0();
    swift_release();
    uint64_t v127 = v158;
    sub_1DFDF8E20();
    uint64_t v79 = v148;
    sub_1DFDF8BF0();
    swift_release();
    uint64_t v80 = v75;
    uint64_t v152 = v78;
    uint64_t v153 = v77;
    v77(v79, 0, 1, (char *)v75);
    sub_1DFDF8DF0();
    sub_1DFDF8BF0();
    swift_release();
    if (sub_1DFDF8E40())
    {
      sub_1DFDF8BF0();
      swift_release();
    }
    uint64_t v81 = (uint64_t)v135;
    uint64_t v82 = (void (**)(char *, uint64_t))v125;
    uint64_t v83 = v150;
    sub_1DFDF9280();
    swift_bridgeObjectRelease();
    uint64_t v84 = v126;
    v82[1](v36, v126);
    ((void (*)(char *, void, uint64_t, uint64_t))v82[7])(v83, 0, 1, v84);
    sub_1DFDF8DC0();
    uint64_t v85 = sub_1DFDF89B0();
    uint64_t v86 = *(void *)(v85 - 8);
    uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
    LODWORD(v126) = v87(v32, 1, v85);
    uint64_t v88 = (char *)v80;
    if (v126 == 1)
    {
      sub_1DEBC1628((uint64_t)v32, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
      unint64_t v125 = 0;
    }
    else
    {
      sub_1DFDF8940();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v32, v85);
      sub_1DFDF8BF0();
      swift_release();
      unint64_t v125 = v157;
    }
    uint64_t v89 = v147;
    sub_1DFDF8DC0();
    if (v87((char *)v81, 1, v85) == 1)
    {
      sub_1DEBC1628(v81, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
      uint64_t v90 = 1;
      unint64_t v91 = v146;
    }
    else
    {
      sub_1DFDF89A0();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v81, v85);
      unint64_t v91 = v146;
      sub_1DFDF8BF0();
      swift_release();
      uint64_t v90 = 0;
    }
    uint64_t v135 = v88;
    v153(v91, v90, 1, v88);
    uint64_t v92 = (uint64_t)v136;
    sub_1DFDF8DC0();
    int v124 = v87((char *)v92, 1, v85);
    unint64_t v93 = v149;
    if (v124 == 1)
    {
      sub_1DEBC1628(v92, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
      unint64_t v136 = 0;
    }
    else
    {
      sub_1DFDF8920();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v92, v85);
      sub_1DFDF8BF0();
      swift_release();
      unint64_t v136 = v157;
    }
    sub_1DFDF8DC0();
    uint64_t v94 = (uint64_t)v143;
    if (v87(v143, 1, v85) == 1)
    {
      sub_1DEBC1628(v94, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
      uint64_t v95 = 1;
    }
    else
    {
      sub_1DFDF8980();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v94, v85);
      sub_1DFDF8BF0();
      swift_release();
      uint64_t v95 = 0;
    }
    v153(v89, v95, 1, v135);
    uint64_t v96 = (uint64_t)v137;
    sub_1DFDF8DC0();
    LODWORD(v143) = v87((char *)v96, 1, v85);
    if (v143 == 1)
    {
      sub_1DEBC1628(v96, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
    }
    else
    {
      sub_1DFDF8930();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v96, v85);
      sub_1DFDF8BF0();
      swift_release();
    }
    sub_1DFDF8DC0();
    uint64_t v97 = (uint64_t)v144;
    if (v87(v144, 1, v85) == 1)
    {
      sub_1DEBC1628(v97, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
      uint64_t v98 = 1;
    }
    else
    {
      sub_1DFDF8990();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v97, v85);
      sub_1DFDF8BF0();
      swift_release();
      uint64_t v98 = 0;
    }
    uint64_t v99 = v93;
    unint64_t v100 = v135;
    v153(v99, v98, 1, v135);
    uint64_t v101 = (uint64_t)v138;
    sub_1DFDF8DC0();
    if (v87((char *)v101, 1, v85) == 1)
    {
      sub_1DEBC1628(v101, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
      uint64_t v144 = 0;
    }
    else
    {
      sub_1DFDF8910();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v101, v85);
      sub_1DFDF8BF0();
      swift_release();
      uint64_t v144 = v157;
    }
    uint64_t v102 = (uint64_t)v129;
    sub_1DFDF8DC0();
    if (v87((char *)v102, 1, v85) == 1)
    {
      sub_1DEBC1628(v102, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
      uint64_t v103 = 1;
      uint64_t v104 = v141;
    }
    else
    {
      sub_1DFDF8970();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v102, v85);
      uint64_t v104 = v141;
      sub_1DFDF8BF0();
      swift_release();
      uint64_t v103 = 0;
    }
    v153(v104, v103, 1, v100);
    uint64_t v105 = (uint64_t)v139;
    sub_1DFDF8DC0();
    if (v87((char *)v105, 1, v85) == 1)
    {
      sub_1DEBC1628(v105, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
      uint64_t v106 = sub_1DFDF9640();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v151, 1, 1, v106);
    }
    else
    {
      sub_1DFDF8900();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v105, v85);
      uint64_t v107 = v151;
      sub_1DFDF8BF0();
      swift_release();
      uint64_t v108 = sub_1DFDF9640();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v107, 0, 1, v108);
    }
    uint64_t v109 = (uint64_t)v140;
    sub_1DFDF8DC0();
    if (v87((char *)v109, 1, v85) == 1)
    {
      sub_1DEBC1628(v109, &qword_1EBAE9760, MEMORY[0x1E4F7FAA0]);
    }
    else
    {
      uint64_t v110 = sub_1DFDF8950();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v109, v85);
      if (v110)
      {
        sub_1DFDF8BF0();
        swift_release();
      }
    }
    uint64_t v111 = v142;
    uint64_t v112 = v134;
    unint64_t v113 = v123;
    if (sub_1DFDF8E00())
    {
      sub_1DFDF8BF0();
      swift_release();
      uint64_t v114 = sub_1DFDE7A20();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v112, 0, 1, v114);
    }
    else
    {
      uint64_t v115 = sub_1DFDE7A20();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v112, 1, 1, v115);
    }
    sub_1DFDF8480();
    uint64_t v116 = swift_allocObject();
    *(_OWORD *)(v116 + 16) = v130;
    uint64_t v117 = MEMORY[0x1E4FBB1A0];
    *(void *)(v116 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v116 + 64) = v113;
    uint64_t v118 = v155;
    *(void *)(v116 + 32) = v154;
    *(void *)(v116 + 40) = v118;
    uint64_t v159 = 0;
    unint64_t v160 = 0xE000000000000000;
    uint64_t v119 = sub_1DFDF8490();
    swift_bridgeObjectRetain();
    sub_1DFDFFB10();
    uint64_t v120 = v159;
    unint64_t v121 = v160;
    *(void *)(v116 + 96) = v117;
    *(void *)(v116 + 104) = v113;
    *(void *)(v116 + 72) = v120;
    *(void *)(v116 + 80) = v121;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v132 + 8))(v57, v133);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v111, 0, 1, v119);
  }
}

uint64_t sub_1DEBC0064(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a6;
  uint64_t v25 = a5;
  uint64_t v23 = a2;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7FCA8];
  sub_1DEAE954C(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v18 = *a3;
  uint64_t v17 = a3[1];
  *a1 = v18;
  a1[1] = v17;
  uint64_t v19 = sub_1DFDF8EA0();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v16, a4, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  sub_1DEBBEBFC((uint64_t)v16, v24, v26, v27, v23);
  swift_bridgeObjectRelease();
  return sub_1DEBC1628((uint64_t)v16, &qword_1EBAE9970, v13);
}

uint64_t sub_1DEBC0210(unint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v19 = sub_1DFDF72A0();
  uint64_t v6 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (!v9) {
      return v10;
    }
    uint64_t v23 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DEDF6864(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v10 = v23;
    uint64_t v17 = v6 + 32;
    unint64_t v18 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v18) {
        id v13 = (id)MEMORY[0x1E01EE240](v12, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      id v22 = v13;
      sub_1DEBBBB30(&v22, v20, v21);
      if (v4)
      {
        swift_release();

        return v10;
      }
      uint64_t v4 = 0;

      uint64_t v23 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1DEDF6864(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v23;
      }
      ++v12;
      *(void *)(v10 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, v8, v19);
      if (v9 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1DEBC0440(unint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    sub_1DE919914(0, (unint64_t *)&unk_1EBABAAE0);
    uint64_t v10 = (void *)sub_1DFDFDAE0();
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_msgSend(a3, sel_subscriptionController);
  if (!v11)
  {
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    return;
  }
  uint64_t v12 = v11;
  id v13 = objc_msgSend(v11, sel_autoFavoriteTagIDs);

  if (v13)
  {
    uint64_t v14 = sub_1DFDFE220();
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = self;
  sub_1DE9DB9D8(v14);
  swift_bridgeObjectRelease();
  unint64_t v16 = (void *)sub_1DFDFE5C0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_transformationWithFeedContextByFeedID_autoFavoriteTagIDs_, v10, v16);

  unint64_t v18 = sub_1DEE17BA8(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v20 = v18[2];
  unint64_t v19 = v18[3];
  if (v20 >= v19 >> 1) {
    unint64_t v18 = sub_1DEE17BA8((void *)(v19 > 1), v20 + 1, 1, v18);
  }
  void v18[2] = v20 + 1;
  uint64_t v21 = &v18[5 * v20];
  v21[4] = 0xD000000000000017;
  v21[5] = 0x80000001DFEC14A0;
  v21[6] = v17;
  v21[7] = 0;
  *((unsigned char *)v21 + 64) = 0;
  id v22 = objc_msgSend(a3, sel_subscriptionController);
  if (!v22) {
    goto LABEL_38;
  }
  uint64_t v23 = v22;
  id v24 = objc_msgSend(v22, sel_newlySubscribedTagIDsInDateRange_, *(void *)(a5 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_context + 16));

  if (v24)
  {
    uint64_t v25 = sub_1DFDFE220();
  }
  else
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
  }
  sub_1DE9DB9D8(v25);
  swift_bridgeObjectRelease();
  uint64_t v26 = MEMORY[0x1E4FBB1A0];
  uint64_t v27 = (void *)sub_1DFDFE5C0();
  swift_bridgeObjectRelease();
  if (a2)
  {
    sub_1DE919914(0, (unint64_t *)&unk_1EBABAAE0);
    uint64_t v28 = (void *)sub_1DFDFDAE0();
  }
  else
  {
    uint64_t v28 = 0;
  }
  id v29 = objc_msgSend(self, sel_transformationWithTagIDs_feedContextByFeedID_, v27, v28);

  if (!v29) {
    goto LABEL_39;
  }
  unint64_t v31 = v18[2];
  unint64_t v30 = v18[3];
  if (v31 >= v30 >> 1) {
    unint64_t v18 = sub_1DEE17BA8((void *)(v30 > 1), v31 + 1, 1, v18);
  }
  void v18[2] = v31 + 1;
  uint64_t v32 = &v18[5 * v31];
  *((_OWORD *)v32 + 2) = xmmword_1DFE11DE0;
  v32[6] = v29;
  v32[7] = 0;
  *((unsigned char *)v32 + 64) = 0;
  id v33 = objc_msgSend(self, sel_transformationWithPersonalizer_, a4);
  if (!v33) {
    goto LABEL_40;
  }
  id v34 = v33;
  unint64_t v36 = v18[2];
  unint64_t v35 = v18[3];
  if (v36 >= v35 >> 1) {
    unint64_t v18 = sub_1DEE17BA8((void *)(v35 > 1), v36 + 1, 1, v18);
  }
  void v18[2] = v36 + 1;
  uint64_t v37 = &v18[5 * v36];
  *((_OWORD *)v37 + 2) = xmmword_1DFE11DF0;
  v37[6] = v34;
  v37[7] = 0;
  *((unsigned char *)v37 + 64) = 0;
  id v38 = (id)NewsCoreUserDefaults();
  unsigned int v39 = objc_msgSend(v38, sel_BOOLForKey_, *MEMORY[0x1E4F7E0E0]);

  uint64_t v40 = self;
  if (v39) {
    uint64_t v41 = 0x44022513ELL;
  }
  else {
    uint64_t v41 = 0x44022113ELL;
  }
  id v42 = objc_msgSend(v40, sel_transformationWithFilterOptions_configuration_context_, v41, *(void *)(a5 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_appConfig), a3);
  unint64_t v44 = v18[2];
  unint64_t v43 = v18[3];
  if (v44 >= v43 >> 1) {
    unint64_t v18 = sub_1DEE17BA8((void *)(v43 > 1), v44 + 1, 1, v18);
  }
  void v18[2] = v44 + 1;
  uint64_t v45 = &v18[5 * v44];
  v45[4] = v42;
  v45[5] = 0;
  v45[6] = 0;
  v45[7] = 0;
  *((unsigned char *)v45 + 64) = 1;
  unint64_t v46 = sub_1DF1E7E50(a1, (uint64_t)v18);
  uint64_t v48 = v47;
  swift_bridgeObjectRelease();
  if (qword_1EBAD1B10 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1DFE0CC10;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v50 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v51 = MEMORY[0x1E4FBB550];
  uint64_t v52 = MEMORY[0x1E4FBB5C8];
  *(void *)(v49 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v49 + 64) = v52;
  *(void *)(v49 + 32) = v50;
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v53 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v49 + 96) = v51;
  *(void *)(v49 + 104) = v52;
  *(void *)(v49 + 72) = v53;
  uint64_t v54 = sub_1DF1E9004(v48);
  uint64_t v56 = v55;
  *(void *)(v49 + 136) = v26;
  *(void *)(v49 + 144) = sub_1DEA08668();
  *(void *)(v49 + 112) = v54;
  *(void *)(v49 + 120) = v56;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1DEBC0A6C()
{
  if (!qword_1EBAA6550)
  {
    sub_1DE919914(255, (unint64_t *)&qword_1EBABAAA0);
    unint64_t v0 = sub_1DFDFE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA6550);
    }
  }
}

uint64_t sub_1DEBC0AD4()
{
  uint64_t v1 = sub_1DFDF9D80();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + ((v4 + 47) & 0xFFFFFFFFFFFFFFF8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBC0BFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1DFDF9D80() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void **)(v1 + 24);
  uint64_t v9 = v1 + v4;
  uint64_t v10 = *(void *)(v1 + v5);
  uint64_t v11 = v1 + v6;
  uint64_t v12 = v1 + v7;
  uint64_t v13 = *(void *)(v1 + ((v7 + 47) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = v10 + OBJC_IVAR____TtC7NewsUI222TodayFeedServiceConfig_contentConfig;
  uint64_t v15 = *(void *)(v14 + *(int *)(type metadata accessor for TodayConfig() + 20));
  return sub_1DEBBC014(v8, v9, v15 + OBJC_IVAR____TtC7NewsUI219TodayFeedGroupKnobs_channelKnobs, v15 + OBJC_IVAR____TtC7NewsUI219TodayFeedGroupKnobs_topicKnobs, a1, v10, v11, v12, v13);
}

unint64_t sub_1DEBC0D38()
{
  unint64_t result = qword_1EBAB1F70;
  if (!qword_1EBAB1F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAB1F70);
  }
  return result;
}

uint64_t sub_1DEBC0D8C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t sub_1DEBC0DE8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DEBC0E28(void *a1)
{
  return sub_1DEBBC498(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_1DEBC0E48()
{
  uint64_t v1 = type metadata accessor for ChannelTodayFeedGroupKnobs();
  uint64_t v29 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v29 + 24) & ~v29;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_1DFDF9D80();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v24 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v6 = *(void *)(v24 + 64);
  unint64_t v7 = (int *)type metadata accessor for TopicTodayFeedGroupKnobs();
  uint64_t v28 = *(unsigned __int8 *)(*((void *)v7 - 1) + 80);
  unint64_t v31 = (v5 + v6 + v28) & ~v28;
  uint64_t v27 = *(void *)(*((void *)v7 - 1) + 64);
  swift_release();
  uint64_t v26 = v0;
  uint64_t v8 = v0 + v2;
  sub_1DEA816F0(0, (unint64_t *)&unk_1EBABA120, MEMORY[0x1E4F7F760]);
  uint64_t v10 = v9;
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v23(v8, v9);
  uint64_t v11 = v8 + *(int *)(v1 + 20);
  sub_1DEA816F0(0, &qword_1EBABA160, MEMORY[0x1E4F7F8F8]);
  uint64_t v13 = v12;
  id v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v22(v11, v12);
  uint64_t v14 = v8 + *(int *)(v1 + 24);
  uint64_t v15 = sub_1DFDF8EA0();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (!v21(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v14, v15);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v24 + 8))(v26 + v5, v25);
  uint64_t v16 = v26 + v31;
  v23(v26 + v31, v10);
  v22(v26 + v31 + v7[5], v13);
  v23(v26 + v31 + v7[6], v10);
  v22(v26 + v31 + v7[7], v13);
  swift_release();
  unint64_t v17 = v26 + v31 + v7[9];
  if (!v21(v17, 1, v15)) {
    (*(void (**)(unint64_t, uint64_t))(v30 + 8))(v17, v15);
  }
  uint64_t v18 = v16 + v7[10];
  if (!v21(v18, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v18, v15);
  }
  uint64_t v19 = v16 + v7[11];
  if (!v21(v19, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v19, v15);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBC1370(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1DEBC13B8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ChannelTodayFeedGroupKnobs() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1DFDF9D80() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(type metadata accessor for TopicTodayFeedGroupKnobs() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DEBBCDAC(a1, *(void *)(v1 + 16), v1 + v4, v1 + v7, (void *)(v1 + v10), *(void *)(v1 + v11), *(void **)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1+ ((((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DEBC154C(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_1DEBC0064(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), 0x2D6C656E6E616843, 0xE800000000000000);
}

uint64_t sub_1DEBC157C(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_1DEBC0064(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), 0x2D6369706F54, 0xE600000000000000);
}

uint64_t sub_1DEBC15A8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1DEAE954C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DEBC1628(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1DEAE954C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DEBC1698()
{
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  return sub_1DFDFD030();
}

uint64_t sub_1DEBC16E4()
{
  return sub_1DEBBCAB8();
}

uint64_t sub_1DEBC1700()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEBC1738()
{
  return sub_1DEBBCC0C();
}

void *initializeBufferWithCopyOfBuffer for TagFeedSectionFactory(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for TagFeedSectionFactory(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for TagFeedSectionFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *assignWithTake for TagFeedSectionFactory(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TagFeedSectionFactory()
{
  return &type metadata for TagFeedSectionFactory;
}

uint64_t sub_1DEBC1878(uint64_t a1)
{
  uint64_t v38 = sub_1DFDFADB0();
  uint64_t v3 = *(void *)(v38 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v36 = (char *)&v28 - v6;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v28 = v1;
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1DFDFFA70();
    uint64_t result = sub_1DEC5AFEC(a1);
    uint64_t v9 = result;
    int v11 = v10;
    uint64_t v12 = 0;
    uint64_t v13 = a1 + 64;
    uint64_t v32 = v3 + 32;
    uint64_t v33 = v3 + 16;
    uint64_t v34 = a1;
    uint64_t v35 = v3;
    uint64_t v30 = v7;
    uint64_t v31 = v3 + 8;
    uint64_t v29 = a1 + 80;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v15 = (unint64_t)v9 >> 6;
      if ((*(void *)(v13 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v11) {
        goto LABEL_23;
      }
      uint64_t v16 = v13;
      uint64_t v39 = v12;
      uint64_t v17 = *(void *)(a1 + 56);
      uint64_t v18 = v35;
      uint64_t v19 = v36;
      uint64_t v20 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v36, v17 + *(void *)(v35 + 72) * v9, v38);
      uint64_t v21 = v37;
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v37, v19, v20);
      sub_1DFDFAD90();
      id v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      a1 = v34;
      v22(v21, v20);
      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      uint64_t result = sub_1DFDFFA60();
      int64_t v14 = 1 << *(unsigned char *)(a1 + 32);
      if (v9 >= v14) {
        goto LABEL_24;
      }
      uint64_t v23 = *(void *)(v16 + 8 * v15);
      if ((v23 & (1 << v9)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v11) {
        goto LABEL_26;
      }
      uint64_t v13 = v16;
      unint64_t v24 = v23 & (-2 << (v9 & 0x3F));
      if (v24)
      {
        int64_t v14 = __clz(__rbit64(v24)) | v9 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v25 = v15 + 1;
        unint64_t v26 = (unint64_t)(v14 + 63) >> 6;
        if (v15 + 1 < v26)
        {
          unint64_t v27 = *(void *)(v16 + 8 * v25);
          if (v27)
          {
LABEL_18:
            int64_t v14 = __clz(__rbit64(v27)) + (v25 << 6);
          }
          else
          {
            while (v26 - 2 != v15)
            {
              unint64_t v27 = *(void *)(v29 + 8 * v15++);
              if (v27)
              {
                unint64_t v25 = v15 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v12 = v39 + 1;
      uint64_t v9 = v14;
      if (v39 + 1 == v30) {
        return v40;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEBC1B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v296 = a4;
  uint64_t v297 = a5;
  uint64_t v295 = a3;
  uint64_t v298 = a2;
  uint64_t v299 = a6;
  uint64_t v300 = a1;
  uint64_t v289 = type metadata accessor for SponsoredBannerTagFeedGroup();
  MEMORY[0x1F4188790](v289);
  uint64_t v291 = (uint64_t)&v215 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v287 = type metadata accessor for AffinityTagFeedGroup();
  MEMORY[0x1F4188790](v287);
  uint64_t v290 = (uint64_t)&v215 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = type metadata accessor for PuzzleScoreboardTagFeedGroup();
  MEMORY[0x1F4188790](v285);
  uint64_t v288 = (uint64_t)&v215 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v283 = type metadata accessor for PuzzleFullArchiveTagFeedGroup();
  MEMORY[0x1F4188790](v283);
  uint64_t v286 = (uint64_t)&v215 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v279 = type metadata accessor for PuzzleFeaturedTagFeedGroup();
  MEMORY[0x1F4188790](v279);
  uint64_t v284 = (uint64_t)&v215 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v275 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup();
  MEMORY[0x1F4188790](v275);
  uint64_t v281 = (uint64_t)&v215 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  MEMORY[0x1F4188790](v274);
  uint64_t v277 = (uint64_t)&v215 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = sub_1DFDF7010();
  uint64_t v280 = *(void *)(v282 - 8);
  MEMORY[0x1F4188790](v282);
  double v278 = (char *)&v215 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v273 = type metadata accessor for PuzzleListTagFeedGroup();
  MEMORY[0x1F4188790](v273);
  uint64_t v276 = (uint64_t)&v215 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = type metadata accessor for SportsEventTopicTagFeedGroup();
  MEMORY[0x1F4188790](v270);
  uint64_t v272 = (uint64_t)&v215 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v268 = type metadata accessor for SportsMastheadTagFeedGroup();
  MEMORY[0x1F4188790](v268);
  uint64_t v271 = (uint64_t)&v215 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v266 = type metadata accessor for SportsOnboardingTagFeedGroup();
  MEMORY[0x1F4188790](v266);
  uint64_t v269 = (uint64_t)&v215 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = type metadata accessor for DateRangeTagFeedGroup();
  MEMORY[0x1F4188790](v265);
  uint64_t v267 = (uint64_t)&v215 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v262 = type metadata accessor for RecentStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v262);
  uint64_t v264 = (uint64_t)&v215 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = type metadata accessor for ForYouTagFeedGroup();
  MEMORY[0x1F4188790](v261);
  uint64_t v263 = (uint64_t)&v215 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = type metadata accessor for HighlightsTagFeedGroup();
  MEMORY[0x1F4188790](v258);
  uint64_t v260 = (uint64_t)&v215 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = type metadata accessor for SportsEventArticlesTagFeedGroup();
  MEMORY[0x1F4188790](v256);
  uint64_t v259 = (uint64_t)&v215 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v254 = type metadata accessor for SportsKeyPlayersTagFeedGroup();
  MEMORY[0x1F4188790](v254);
  uint64_t v257 = (uint64_t)&v215 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = type metadata accessor for SportsInjuryReportsTagFeedGroup();
  MEMORY[0x1F4188790](v252);
  uint64_t v255 = (uint64_t)&v215 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = type metadata accessor for SportsEventInfoTagFeedGroup();
  MEMORY[0x1F4188790](v250);
  uint64_t v253 = (uint64_t)&v215 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = type metadata accessor for SportsBoxScoresTagFeedGroup();
  MEMORY[0x1F4188790](v248);
  uint64_t v251 = (uint64_t)&v215 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v246 = type metadata accessor for SportsBracketTagFeedGroup();
  MEMORY[0x1F4188790](v246);
  uint64_t v249 = (uint64_t)&v215 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = type metadata accessor for SportsStandingsTagFeedGroup();
  MEMORY[0x1F4188790](v244);
  uint64_t v247 = (uint64_t)&v215 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = type metadata accessor for MySportsTopicTagFeedGroup();
  MEMORY[0x1F4188790](v243);
  uint64_t v245 = (uint64_t)&v215 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = type metadata accessor for SportsLinksTagFeedGroup();
  MEMORY[0x1F4188790](v240);
  uint64_t v242 = (uint64_t)&v215 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = type metadata accessor for SportsScoresTagFeedGroup();
  MEMORY[0x1F4188790](v239);
  uint64_t v241 = (uint64_t)&v215 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = type metadata accessor for SportsFavoritesTagFeedGroup();
  MEMORY[0x1F4188790](v236);
  uint64_t v238 = (uint64_t)&v215 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = type metadata accessor for SportsTopStoriesTagFeedGroup();
  MEMORY[0x1F4188790](v235);
  uint64_t v237 = (uint64_t)&v215 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v231 = type metadata accessor for SportsScheduleTagFeedGroup();
  MEMORY[0x1F4188790](v231);
  uint64_t v233 = (uint64_t)&v215 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = type metadata accessor for SportsNavigationTagFeedGroup();
  MEMORY[0x1F4188790](v230);
  uint64_t v232 = (uint64_t)&v215 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = type metadata accessor for SportsRecordTagFeedGroup();
  MEMORY[0x1F4188790](v227);
  uint64_t v229 = (uint64_t)&v215 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = type metadata accessor for CuratedTagFeedGroup();
  MEMORY[0x1F4188790](v224);
  uint64_t v228 = (uint64_t)&v215 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = sub_1DFDF6D40();
  uint64_t v225 = *(void *)(v226 - 8);
  MEMORY[0x1F4188790](v226);
  double v223 = (char *)&v215 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = type metadata accessor for WeatherTagFeedGroup();
  MEMORY[0x1F4188790](v221);
  uint64_t v222 = (uint64_t)&v215 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup();
  MEMORY[0x1F4188790](v217);
  uint64_t v220 = (uint64_t)&v215 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for ChannelSectionTagFeedGroup();
  MEMORY[0x1F4188790](v41);
  uint64_t v219 = (uint64_t)&v215 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = type metadata accessor for IssueListTagFeedGroup();
  uint64_t v43 = MEMORY[0x1F4188790](v218);
  uint64_t v216 = (uint64_t)&v215 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  id v234 = (uint64_t *)((char *)&v215 - v45);
  uint64_t v46 = type metadata accessor for PromotedArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (char *)&v215 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for ArticleListTagFeedGroup();
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)&v215 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB4F8C8();
  MEMORY[0x1F4188790](v52 - 8);
  CGFloat v294 = (char *)&v215 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v293 = type metadata accessor for TagFeedModel(0);
  MEMORY[0x1F4188790](v293);
  CGFloat v292 = (uint64_t *)((char *)&v215 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = type metadata accessor for PaywallTagFeedGroup();
  uint64_t v56 = MEMORY[0x1F4188790](v55);
  uint64_t v58 = (char *)&v215 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v56);
  uint64_t v60 = (uint64_t *)((char *)&v215 - v59);
  uint64_t v61 = type metadata accessor for TagFeedGroup();
  MEMORY[0x1F4188790](v61);
  uint64_t v63 = (char *)&v215 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBCB180(v300, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEBCB1E8((uint64_t)v63, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      uint64_t v69 = swift_allocBox();
      sub_1DEBCB180((uint64_t)v48, v70, (uint64_t (*)(void))type metadata accessor for PromotedArticleListTagFeedGroup);
      unint64_t v71 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v69 | 4, v295, v298, v71, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v67 = type metadata accessor for PromotedArticleListTagFeedGroup;
      uint64_t v68 = (uint64_t)v48;
      return sub_1DEBC51B0(v68, (uint64_t (*)(void))v67);
    case 2u:
      uint64_t v60 = v234;
      sub_1DEBCB1E8((uint64_t)v63, (uint64_t)v234, (uint64_t (*)(void))type metadata accessor for IssueListTagFeedGroup);
      sub_1DEBC5A44();
      uint64_t v72 = swift_allocBox();
      sub_1DEBCB180((uint64_t)v60, v216, (uint64_t (*)(void))type metadata accessor for IssueListTagFeedGroup);
      sub_1DE94D89C(&qword_1EBAD8C80, (void (*)(uint64_t))type metadata accessor for IssueListTagFeedGroup);
      sub_1DE94D89C(&qword_1EBAD8C78, (void (*)(uint64_t))type metadata accessor for IssueListTagFeedGroup);
      sub_1DFDF7530();
      uint64_t v73 = v298;
      if (!*(void *)(v298 + 16))
      {
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      uint64_t v75 = *v60;
      uint64_t v74 = v60[1];
      swift_bridgeObjectRetain();
      unint64_t v76 = sub_1DEA6D930(v75, v74);
      if ((v77 & 1) == 0)
      {
LABEL_54:
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_55:
        swift_bridgeObjectRelease();
        __break(1u);
        JUMPOUT(0x1DEBC4B44);
      }
      uint64_t v78 = *(void *)(*(void *)(v73 + 56) + 8 * v76);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v301 = v72 | 0x1000000000000000;
      sub_1DEBCAC0C(0, (unint64_t *)&unk_1EBAEADE0, MEMORY[0x1E4FBBE00]);
      sub_1DEBCACB0(0, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
      uint64_t v80 = v79;
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = xmmword_1DFE0B250;
      *CGFloat v292 = v78;
      swift_storeEnumTagMultiPayload();
      sub_1DEBC4BE0();
      swift_retain();
      swift_retain();
      sub_1DFDF0B40();
      uint64_t v82 = sub_1DEBC4C14(&qword_1EBAD2EA8);
      uint64_t v83 = sub_1DEBC4C14(&qword_1EBAD2EA0);
      MEMORY[0x1E01DBA70](v81, v80, v82, v83);
      sub_1DEB0E09C();
      sub_1DFDF14C0();
      swift_release();
      swift_release();
      uint64_t v84 = type metadata accessor for IssueListTagFeedGroup;
LABEL_13:
      uint64_t v67 = v84;
      uint64_t v68 = (uint64_t)v60;
      return sub_1DEBC51B0(v68, (uint64_t (*)(void))v67);
    case 3u:
      uint64_t v85 = v219;
      sub_1DEBCB1E8((uint64_t)v63, v219, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      uint64_t v86 = swift_allocBox();
      sub_1DEBCB180(v85, v87, (uint64_t (*)(void))type metadata accessor for ChannelSectionTagFeedGroup);
      unint64_t v88 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v86 | 0x1000000000000002, v295, v298, v88, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for ChannelSectionTagFeedGroup;
      goto LABEL_49;
    case 4u:
      uint64_t v85 = v220;
      sub_1DEBCB1E8((uint64_t)v63, v220, (uint64_t (*)(void))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      uint64_t v90 = swift_allocBox();
      sub_1DEBCB180(v85, v91, (uint64_t (*)(void))type metadata accessor for ChannelSectionDirectoryTagFeedGroup);
      unint64_t v92 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v90 | 0x1000000000000004, v295, v298, v92, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for ChannelSectionDirectoryTagFeedGroup;
      goto LABEL_49;
    case 5u:
      uint64_t v93 = v222;
      sub_1DEBCB1E8((uint64_t)v63, v222, (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
      uint64_t v94 = swift_allocBox();
      sub_1DEBCB180(v93, v95, (uint64_t (*)(void))type metadata accessor for WeatherTagFeedGroup);
      unint64_t v96 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v94 | 6, v295, v298, v96, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v97 = type metadata accessor for WeatherTagFeedGroup;
      goto LABEL_35;
    case 6u:
      sub_1DEBCB1E8((uint64_t)v63, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for PaywallTagFeedGroup);
      sub_1DEBC9D34();
      uint64_t v98 = swift_allocBox();
      sub_1DEBCB180((uint64_t)v60, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for PaywallTagFeedGroup);
      sub_1DE94D89C(&qword_1EBAD6EF0, (void (*)(uint64_t))type metadata accessor for PaywallTagFeedGroup);
      sub_1DE94D89C(&qword_1EBAD6EE8, (void (*)(uint64_t))type metadata accessor for PaywallTagFeedGroup);
      sub_1DFDF7530();
      uint64_t v99 = v298;
      if (!*(void *)(v298 + 16)) {
        goto LABEL_53;
      }
      uint64_t v101 = *v60;
      uint64_t v100 = v60[1];
      swift_bridgeObjectRetain();
      unint64_t v102 = sub_1DEA6D930(v101, v100);
      if ((v103 & 1) == 0) {
        goto LABEL_55;
      }
      uint64_t v104 = *(void *)(*(void *)(v99 + 56) + 8 * v102);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v301 = v98 | 0x1000000000000006;
      sub_1DEBCAC0C(0, (unint64_t *)&unk_1EBAEADE0, MEMORY[0x1E4FBBE00]);
      sub_1DEBCACB0(0, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
      uint64_t v106 = v105;
      uint64_t v107 = swift_allocObject();
      *(_OWORD *)(v107 + 16) = xmmword_1DFE0B250;
      *CGFloat v292 = v104;
      swift_storeEnumTagMultiPayload();
      sub_1DEBC4BE0();
      swift_retain();
      swift_retain();
      sub_1DFDF0B40();
      uint64_t v108 = sub_1DEBC4C14(&qword_1EBAD2EA8);
      uint64_t v109 = sub_1DEBC4C14(&qword_1EBAD2EA0);
      MEMORY[0x1E01DBA70](v107, v106, v108, v109);
      sub_1DEB0E09C();
      sub_1DFDF14C0();
      swift_release();
      swift_release();
      uint64_t v84 = type metadata accessor for PaywallTagFeedGroup;
      goto LABEL_13;
    case 7u:
      uint64_t v110 = v225;
      uint64_t v111 = v223;
      uint64_t v112 = v63;
      uint64_t v113 = v226;
      (*(void (**)(char *, char *, uint64_t))(v225 + 32))(v223, v112, v226);
      uint64_t v114 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(v110 + 16))(v115, v111, v113);
      sub_1DEBC5210(v295, v114 | 0x2000000000000000, v297, v299);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v111, v113);
    case 8u:
      uint64_t v85 = v228;
      sub_1DEBCB1E8((uint64_t)v63, v228, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
      uint64_t v117 = swift_allocBox();
      sub_1DEBCB180(v85, v118, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
      unint64_t v119 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v117 | 0x2000000000000004, v295, v298, v119, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for CuratedTagFeedGroup;
      goto LABEL_49;
    case 9u:
      uint64_t v85 = v229;
      sub_1DEBCB1E8((uint64_t)v63, v229, (uint64_t (*)(void))type metadata accessor for SportsRecordTagFeedGroup);
      uint64_t v120 = swift_allocBox();
      sub_1DEBCB180(v85, v121, (uint64_t (*)(void))type metadata accessor for SportsRecordTagFeedGroup);
      unint64_t v122 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v120 | 0x2000000000000006, v295, v298, v122, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsRecordTagFeedGroup;
      goto LABEL_49;
    case 0xAu:
      uint64_t v93 = v232;
      sub_1DEBCB1E8((uint64_t)v63, v232, (uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
      uint64_t v123 = swift_allocBox();
      sub_1DEBCB180(v93, v124, (uint64_t (*)(void))type metadata accessor for SportsNavigationTagFeedGroup);
      unint64_t v125 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v123 | 0x3000000000000000, v295, v298, v125, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v97 = type metadata accessor for SportsNavigationTagFeedGroup;
      goto LABEL_35;
    case 0xBu:
      uint64_t v85 = v233;
      sub_1DEBCB1E8((uint64_t)v63, v233, (uint64_t (*)(void))type metadata accessor for SportsScheduleTagFeedGroup);
      uint64_t v126 = swift_allocBox();
      sub_1DEBCB180(v85, v127, (uint64_t (*)(void))type metadata accessor for SportsScheduleTagFeedGroup);
      unint64_t v128 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v126 | 0x3000000000000002, v295, v298, v128, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsScheduleTagFeedGroup;
      goto LABEL_49;
    case 0xCu:
      uint64_t v93 = v237;
      sub_1DEBCB1E8((uint64_t)v63, v237, (uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
      uint64_t v129 = swift_allocBox();
      sub_1DEBCB180(v93, v130, (uint64_t (*)(void))type metadata accessor for SportsTopStoriesTagFeedGroup);
      unint64_t v131 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v129 | 0x3000000000000004, v295, v298, v131, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v97 = type metadata accessor for SportsTopStoriesTagFeedGroup;
      goto LABEL_35;
    case 0xDu:
      uint64_t v85 = v238;
      sub_1DEBCB1E8((uint64_t)v63, v238, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroup);
      uint64_t v132 = swift_allocBox();
      sub_1DEBCB180(v85, v133, (uint64_t (*)(void))type metadata accessor for SportsFavoritesTagFeedGroup);
      unint64_t v134 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v132 | 0x3000000000000006, v295, v298, v134, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsFavoritesTagFeedGroup;
      goto LABEL_49;
    case 0xEu:
      uint64_t v93 = v241;
      sub_1DEBCB1E8((uint64_t)v63, v241, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
      uint64_t v135 = swift_allocBox();
      sub_1DEBCB180(v93, v136, (uint64_t (*)(void))type metadata accessor for SportsScoresTagFeedGroup);
      unint64_t v137 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v135 | 0x4000000000000000, v295, v298, v137, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v97 = type metadata accessor for SportsScoresTagFeedGroup;
      goto LABEL_35;
    case 0xFu:
      uint64_t v85 = v242;
      sub_1DEBCB1E8((uint64_t)v63, v242, (uint64_t (*)(void))type metadata accessor for SportsLinksTagFeedGroup);
      uint64_t v138 = swift_allocBox();
      sub_1DEBCB180(v85, v139, (uint64_t (*)(void))type metadata accessor for SportsLinksTagFeedGroup);
      unint64_t v140 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v138 | 0x4000000000000002, v295, v298, v140, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsLinksTagFeedGroup;
      goto LABEL_49;
    case 0x10u:
      uint64_t v93 = v245;
      sub_1DEBCB1E8((uint64_t)v63, v245, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      uint64_t v141 = swift_allocBox();
      sub_1DEBCB180(v93, v142, (uint64_t (*)(void))type metadata accessor for MySportsTopicTagFeedGroup);
      unint64_t v143 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v141 | 0x4000000000000004, v295, v298, v143, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v97 = type metadata accessor for MySportsTopicTagFeedGroup;
      goto LABEL_35;
    case 0x11u:
      uint64_t v85 = v247;
      sub_1DEBCB1E8((uint64_t)v63, v247, (uint64_t (*)(void))type metadata accessor for SportsStandingsTagFeedGroup);
      uint64_t v144 = swift_allocBox();
      sub_1DEBCB180(v85, v145, (uint64_t (*)(void))type metadata accessor for SportsStandingsTagFeedGroup);
      unint64_t v146 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v144 | 0x4000000000000006, v295, v298, v146, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsStandingsTagFeedGroup;
      goto LABEL_49;
    case 0x12u:
      uint64_t v85 = v249;
      sub_1DEBCB1E8((uint64_t)v63, v249, (uint64_t (*)(void))type metadata accessor for SportsBracketTagFeedGroup);
      uint64_t v147 = swift_allocBox();
      sub_1DEBCB180(v85, v148, (uint64_t (*)(void))type metadata accessor for SportsBracketTagFeedGroup);
      unint64_t v149 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v147 | 0x5000000000000000, v295, v298, v149, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsBracketTagFeedGroup;
      goto LABEL_49;
    case 0x13u:
      uint64_t v85 = v251;
      sub_1DEBCB1E8((uint64_t)v63, v251, (uint64_t (*)(void))type metadata accessor for SportsBoxScoresTagFeedGroup);
      uint64_t v150 = swift_allocBox();
      sub_1DEBCB180(v85, v151, (uint64_t (*)(void))type metadata accessor for SportsBoxScoresTagFeedGroup);
      unint64_t v152 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v150 | 0x5000000000000002, v295, v298, v152, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsBoxScoresTagFeedGroup;
      goto LABEL_49;
    case 0x14u:
      uint64_t v85 = v253;
      sub_1DEBCB1E8((uint64_t)v63, v253, (uint64_t (*)(void))type metadata accessor for SportsEventInfoTagFeedGroup);
      uint64_t v153 = swift_allocBox();
      sub_1DEBCB180(v85, v154, (uint64_t (*)(void))type metadata accessor for SportsEventInfoTagFeedGroup);
      unint64_t v155 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v153 | 0x5000000000000004, v295, v298, v155, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsEventInfoTagFeedGroup;
      goto LABEL_49;
    case 0x15u:
      uint64_t v85 = v255;
      sub_1DEBCB1E8((uint64_t)v63, v255, (uint64_t (*)(void))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      uint64_t v156 = swift_allocBox();
      sub_1DEBCB180(v85, v157, (uint64_t (*)(void))type metadata accessor for SportsInjuryReportsTagFeedGroup);
      unint64_t v158 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v156 | 0x5000000000000006, v295, v298, v158, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsInjuryReportsTagFeedGroup;
      goto LABEL_49;
    case 0x16u:
      uint64_t v85 = v257;
      sub_1DEBCB1E8((uint64_t)v63, v257, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      uint64_t v159 = swift_allocBox();
      sub_1DEBCB180(v85, v160, (uint64_t (*)(void))type metadata accessor for SportsKeyPlayersTagFeedGroup);
      unint64_t v161 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v159 | 0x6000000000000000, v295, v298, v161, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsKeyPlayersTagFeedGroup;
      goto LABEL_49;
    case 0x17u:
      uint64_t v85 = v259;
      sub_1DEBCB1E8((uint64_t)v63, v259, (uint64_t (*)(void))type metadata accessor for SportsEventArticlesTagFeedGroup);
      uint64_t v162 = swift_allocBox();
      sub_1DEBCB180(v85, v163, (uint64_t (*)(void))type metadata accessor for SportsEventArticlesTagFeedGroup);
      unint64_t v164 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v162 | 0x6000000000000002, v295, v298, v164, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsEventArticlesTagFeedGroup;
      goto LABEL_49;
    case 0x18u:
      uint64_t v85 = v260;
      sub_1DEBCB1E8((uint64_t)v63, v260, (uint64_t (*)(void))type metadata accessor for HighlightsTagFeedGroup);
      uint64_t v165 = swift_allocBox();
      sub_1DEBCB180(v85, v166, (uint64_t (*)(void))type metadata accessor for HighlightsTagFeedGroup);
      unint64_t v167 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v165 | 0x6000000000000004, v295, v298, v167, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for HighlightsTagFeedGroup;
      goto LABEL_49;
    case 0x19u:
      uint64_t v93 = v263;
      sub_1DEBCB1E8((uint64_t)v63, v263, (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
      uint64_t v168 = swift_allocBox();
      sub_1DEBCB180(v93, v169, (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroup);
      unint64_t v170 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v168 | 0x6000000000000006, v295, v298, v170, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v97 = type metadata accessor for ForYouTagFeedGroup;
      goto LABEL_35;
    case 0x1Au:
      uint64_t v85 = v264;
      sub_1DEBCB1E8((uint64_t)v63, v264, (uint64_t (*)(void))type metadata accessor for RecentStoriesTagFeedGroup);
      uint64_t v171 = swift_allocBox();
      sub_1DEBCB180(v85, v172, (uint64_t (*)(void))type metadata accessor for RecentStoriesTagFeedGroup);
      unint64_t v173 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v171 | 0x7000000000000000, v295, v298, v173, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for RecentStoriesTagFeedGroup;
      goto LABEL_49;
    case 0x1Bu:
      uint64_t v93 = v267;
      sub_1DEBCB1E8((uint64_t)v63, v267, (uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
      uint64_t v174 = swift_allocBox();
      sub_1DEBCB180(v93, v175, (uint64_t (*)(void))type metadata accessor for DateRangeTagFeedGroup);
      unint64_t v176 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v174 | 0x7000000000000002, v295, v298, v176, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v97 = type metadata accessor for DateRangeTagFeedGroup;
LABEL_35:
      uint64_t v67 = v97;
      uint64_t v68 = v93;
      return sub_1DEBC51B0(v68, (uint64_t (*)(void))v67);
    case 0x1Cu:
      uint64_t v85 = v269;
      sub_1DEBCB1E8((uint64_t)v63, v269, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
      uint64_t v177 = swift_allocBox();
      sub_1DEBCB180(v85, v178, (uint64_t (*)(void))type metadata accessor for SportsOnboardingTagFeedGroup);
      unint64_t v179 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v177 | 0x7000000000000004, v295, v298, v179, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsOnboardingTagFeedGroup;
      goto LABEL_49;
    case 0x1Du:
      uint64_t v85 = v271;
      sub_1DEBCB1E8((uint64_t)v63, v271, (uint64_t (*)(void))type metadata accessor for SportsMastheadTagFeedGroup);
      uint64_t v180 = swift_allocBox();
      sub_1DEBCB180(v85, v181, (uint64_t (*)(void))type metadata accessor for SportsMastheadTagFeedGroup);
      unint64_t v182 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v180 | 0x7000000000000006, v295, v298, v182, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsMastheadTagFeedGroup;
      goto LABEL_49;
    case 0x1Eu:
      uint64_t v85 = v272;
      sub_1DEBCB1E8((uint64_t)v63, v272, (uint64_t (*)(void))type metadata accessor for SportsEventTopicTagFeedGroup);
      uint64_t v183 = swift_allocBox();
      sub_1DEBCB180(v85, v184, (uint64_t (*)(void))type metadata accessor for SportsEventTopicTagFeedGroup);
      unint64_t v185 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v183 | 0x8000000000000000, v295, v298, v185, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SportsEventTopicTagFeedGroup;
      goto LABEL_49;
    case 0x1Fu:
      uint64_t v186 = v276;
      sub_1DEBCB1E8((uint64_t)v63, v276, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      uint64_t v187 = sub_1DEBC5690(v186);
      uint64_t v188 = v273;
      uint64_t v189 = swift_allocBox();
      sub_1DEBCB180(v186, v190, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      uint64_t v191 = v280;
      CGFloat v192 = v278;
      uint64_t v193 = v282;
      (*(void (**)(char *, uint64_t, uint64_t))(v280 + 16))(v278, v186, v282);
      if (*(uint64_t *)(v186 + *(int *)(v188 + 24)) <= 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v187 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      }
      sub_1DEBC4C9C(v189 | 0x8000000000000002, v295, v298, v187, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v192, v193);
      uint64_t v67 = type metadata accessor for PuzzleListTagFeedGroup;
      uint64_t v68 = v186;
      return sub_1DEBC51B0(v68, (uint64_t (*)(void))v67);
    case 0x20u:
      uint64_t v85 = v277;
      sub_1DEBCB1E8((uint64_t)v63, v277, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroup);
      uint64_t v194 = swift_allocBox();
      sub_1DEBCB180(v85, v195, (uint64_t (*)(void))type metadata accessor for PuzzleArchiveTagFeedGroup);
      unint64_t v196 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v194 | 0x8000000000000004, v295, v298, v196, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for PuzzleArchiveTagFeedGroup;
      goto LABEL_49;
    case 0x21u:
      uint64_t v85 = v281;
      sub_1DEBCB1E8((uint64_t)v63, v281, (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      uint64_t v197 = swift_allocBox();
      sub_1DEBCB180(v85, v198, (uint64_t (*)(void))type metadata accessor for PuzzleContinuePlayingTagFeedGroup);
      unint64_t v199 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v197 | 0x8000000000000006, v295, v298, v199, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for PuzzleContinuePlayingTagFeedGroup;
      goto LABEL_49;
    case 0x22u:
      uint64_t v85 = v284;
      sub_1DEBCB1E8((uint64_t)v63, v284, (uint64_t (*)(void))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      uint64_t v200 = swift_allocBox();
      sub_1DEBCB180(v85, v201, (uint64_t (*)(void))type metadata accessor for PuzzleFeaturedTagFeedGroup);
      unint64_t v202 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v200 | 0x9000000000000000, v295, v298, v202, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for PuzzleFeaturedTagFeedGroup;
      goto LABEL_49;
    case 0x23u:
      uint64_t v85 = v286;
      sub_1DEBCB1E8((uint64_t)v63, v286, (uint64_t (*)(void))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      uint64_t v203 = swift_allocBox();
      sub_1DEBCB180(v85, v204, (uint64_t (*)(void))type metadata accessor for PuzzleFullArchiveTagFeedGroup);
      unint64_t v205 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v203 | 0x9000000000000002, v295, v298, v205, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for PuzzleFullArchiveTagFeedGroup;
      goto LABEL_49;
    case 0x24u:
      uint64_t v85 = v288;
      sub_1DEBCB1E8((uint64_t)v63, v288, (uint64_t (*)(void))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      uint64_t v206 = swift_allocBox();
      sub_1DEBCB180(v85, v207, (uint64_t (*)(void))type metadata accessor for PuzzleScoreboardTagFeedGroup);
      unint64_t v208 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v206 | 0x9000000000000004, v295, v298, v208, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for PuzzleScoreboardTagFeedGroup;
      goto LABEL_49;
    case 0x25u:
      uint64_t v85 = v290;
      sub_1DEBCB1E8((uint64_t)v63, v290, (uint64_t (*)(void))type metadata accessor for AffinityTagFeedGroup);
      uint64_t v209 = swift_allocBox();
      sub_1DEBCB180(v85, v210, (uint64_t (*)(void))type metadata accessor for AffinityTagFeedGroup);
      unint64_t v211 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v209 | 0x9000000000000006, v295, v298, v211, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for AffinityTagFeedGroup;
      goto LABEL_49;
    case 0x26u:
      uint64_t v85 = v291;
      sub_1DEBCB1E8((uint64_t)v63, v291, (uint64_t (*)(void))type metadata accessor for SponsoredBannerTagFeedGroup);
      uint64_t v212 = swift_allocBox();
      sub_1DEBCB180(v85, v213, (uint64_t (*)(void))type metadata accessor for SponsoredBannerTagFeedGroup);
      unint64_t v214 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v212 | 0xA000000000000000, v295, v298, v214, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v89 = type metadata accessor for SponsoredBannerTagFeedGroup;
LABEL_49:
      uint64_t v67 = v89;
      uint64_t v68 = v85;
      return sub_1DEBC51B0(v68, (uint64_t (*)(void))v67);
    default:
      sub_1DEBCB1E8((uint64_t)v63, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      uint64_t v64 = swift_allocBox();
      sub_1DEBCB180((uint64_t)v51, v65, (uint64_t (*)(void))type metadata accessor for ArticleListTagFeedGroup);
      unint64_t v66 = sub_1DF349960(MEMORY[0x1E4FBC860]);
      sub_1DEBC4C9C(v64 | 2, v295, v298, v66, v297, v299);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v67 = type metadata accessor for ArticleListTagFeedGroup;
      uint64_t v68 = (uint64_t)v51;
      return sub_1DEBC51B0(v68, (uint64_t (*)(void))v67);
  }
}

uint64_t sub_1DEBC4BE0()
{
  return sub_1DE94D89C(&qword_1EBAD3F50, (void (*)(uint64_t))type metadata accessor for TagFeedModel);
}

uint64_t sub_1DEBC4C14(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEBCACB0(255, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEBC4C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v37 = a5;
  uint64_t v38 = a4;
  uint64_t v36 = a2;
  uint64_t v42 = type metadata accessor for TagFeedModel(0);
  uint64_t v35 = *(void *)(v42 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v42);
  uint64_t v40 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v35 - v11;
  sub_1DEBCACB0(0, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
  uint64_t v41 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v35 - v15;
  sub_1DEB4F8C8();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v39 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DFDFA9F0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF6FB0();
  uint64_t v23 = sub_1DFDFA9E0();
  uint64_t v44 = a3;
  uint64_t v45 = v37;
  uint64_t v46 = v36;
  uint64_t v47 = a1;
  uint64_t v48 = v38;
  uint64_t v24 = sub_1DEFC6234((void (*)(uint64_t *__return_ptr, uint64_t))sub_1DEBC9F20, (uint64_t)v43, v23);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v50 = a1;
  int64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v38 = a6;
    uint64_t v49 = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1DEDF63DC(0, v25, 0);
    uint64_t v26 = *(unsigned __int8 *)(v35 + 80);
    uint64_t v37 = v24;
    uint64_t v27 = v24 + ((v26 + 32) & ~v26);
    uint64_t v28 = *(void *)(v35 + 72);
    do
    {
      sub_1DEBCB180(v27, (uint64_t)v12, type metadata accessor for TagFeedModel);
      sub_1DEBCB180((uint64_t)v12, v40, type metadata accessor for TagFeedModel);
      sub_1DEBC4BE0();
      sub_1DFDF0B40();
      sub_1DEBC51B0((uint64_t)v12, type metadata accessor for TagFeedModel);
      uint64_t v29 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF63DC(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v49;
      }
      unint64_t v31 = *(void *)(v29 + 16);
      unint64_t v30 = *(void *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1DEDF63DC(v30 > 1, v31 + 1, 1);
        uint64_t v29 = v49;
      }
      *(void *)(v29 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v29+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v31, v16, v41);
      uint64_t v49 = v29;
      v27 += v28;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  uint64_t v32 = sub_1DEBC4C14(&qword_1EBAD2EA8);
  uint64_t v33 = sub_1DEBC4C14(&qword_1EBAD2EA0);
  MEMORY[0x1E01DBA90](v29, v41, v32, v33);
  sub_1DEB0E09C();
  sub_1DEBC4BE0();
  return sub_1DFDF14C0();
}

uint64_t sub_1DEBC51B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEBC5210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v28 = a1;
  uint64_t v31 = a4;
  sub_1DEB4F8C8();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v30 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC9F64(0, &qword_1EBAE9B38, MEMORY[0x1E4F80538], (void (*)(void))sub_1DEBC9E54, (void (*)(void))sub_1DEBC9E88);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v27 = type metadata accessor for TagFeedModel(0);
  uint64_t v13 = MEMORY[0x1F4188790](v27);
  uint64_t v29 = (uint64_t)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v25 - v15;
  sub_1DF68054C(a2);
  uint64_t v32 = *(void **)(a3 + 24);
  uint64_t v17 = v32;
  sub_1DEBC9E14();
  sub_1DE94D89C(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
  id v18 = v17;
  sub_1DFDF7780();

  swift_bridgeObjectRelease();
  sub_1DFDF9A80();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (void *)v26;
  sub_1DEBCAC0C(0, (unint64_t *)&unk_1EBAEADE0, MEMORY[0x1E4FBBE00]);
  sub_1DEBCACB0(0, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
  uint64_t v20 = v19;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1DFE0B250;
  sub_1DEBCB180((uint64_t)v16, v29, type metadata accessor for TagFeedModel);
  sub_1DEBC4BE0();
  swift_retain();
  sub_1DFDF0B40();
  uint64_t v22 = sub_1DEBC4C14(&qword_1EBAD2EA8);
  uint64_t v23 = sub_1DEBC4C14(&qword_1EBAD2EA0);
  MEMORY[0x1E01DBA70](v21, v20, v22, v23);
  sub_1DEB0E09C();
  sub_1DFDF14C0();
  return sub_1DEBC51B0((uint64_t)v16, type metadata accessor for TagFeedModel);
}

uint64_t sub_1DEBC5690(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TagFeedModelPlaceholder();
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v47 = (char *)v39 - v6;
  uint64_t v7 = sub_1DFDFADB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + *(int *)(type metadata accessor for PuzzleListTagFeedGroup() + 20));
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v13 = v8 + 16;
    uint64_t v44 = v5;
    uint64_t v45 = v14;
    uint64_t v15 = (char *)(v11 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64)));
    uint64_t v40 = *(void *)(v13 + 56);
    uint64_t v41 = (void (**)(char *, uint64_t))(v13 - 8);
    v39[1] = v11;
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v42 = v7;
    uint64_t v43 = v10;
    while (1)
    {
      uint64_t v48 = v12;
      uint64_t v17 = v45;
      v45(v10, v15, v7);
      uint64_t v18 = sub_1DFDFAD80();
      uint64_t v20 = v19;
      uint64_t v21 = (uint64_t)v47;
      uint64_t v22 = v13;
      v17(v47, v10, v7);
      uint64_t v23 = (uint64_t)v44;
      sub_1DEBCB1E8(v21, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for TagFeedModelPlaceholder);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = v16;
      unint64_t v26 = sub_1DEA6D930(v18, v20);
      uint64_t v27 = v16[2];
      BOOL v28 = (v25 & 1) == 0;
      uint64_t v29 = v27 + v28;
      if (__OFADD__(v27, v28)) {
        break;
      }
      char v30 = v25;
      if (v16[3] >= v29)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1DF65B310();
        }
      }
      else
      {
        sub_1DF650F28(v29, isUniquelyReferenced_nonNull_native);
        unint64_t v31 = sub_1DEA6D930(v18, v20);
        if ((v30 & 1) != (v32 & 1)) {
          goto LABEL_19;
        }
        unint64_t v26 = v31;
      }
      uint64_t v33 = v23;
      uint64_t v16 = v49;
      uint64_t v13 = v22;
      if (v30)
      {
        sub_1DEBC9EBC(v33, v49[7] + *(void *)(v46 + 72) * v26);
        uint64_t v10 = v43;
      }
      else
      {
        v49[(v26 >> 6) + 8] |= 1 << v26;
        uint64_t v34 = (uint64_t *)(v16[6] + 16 * v26);
        *uint64_t v34 = v18;
        v34[1] = v20;
        sub_1DEBCB1E8(v33, v16[7] + *(void *)(v46 + 72) * v26, (uint64_t (*)(void))type metadata accessor for TagFeedModelPlaceholder);
        uint64_t v35 = v16[2];
        BOOL v36 = __OFADD__(v35, 1);
        uint64_t v37 = v35 + 1;
        uint64_t v10 = v43;
        if (v36) {
          goto LABEL_18;
        }
        v16[2] = v37;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v42;
      (*v41)(v10, v42);
      v15 += v40;
      uint64_t v12 = v48 - 1;
      if (v48 == 1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_1DFE00000();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

void sub_1DEBC5A44()
{
  if (!qword_1EBAE9510)
  {
    type metadata accessor for IssueListTagFeedGroup();
    sub_1DE94D89C(&qword_1EBAD8C80, (void (*)(uint64_t))type metadata accessor for IssueListTagFeedGroup);
    sub_1DE94D89C(&qword_1EBAD8C78, (void (*)(uint64_t))type metadata accessor for IssueListTagFeedGroup);
    unint64_t v0 = sub_1DFDF7540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9510);
    }
  }
}

uint64_t sub_1DEBC5B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  id v37 = a6;
  uint64_t v39 = a9;
  sub_1DEB4F8C8();
  MEMORY[0x1F4188790](v16 - 8);
  BOOL v36 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB4F678();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF7C30();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1DF1E9600(a2, a3, a4, a5);
  uint64_t v21 = (uint64_t)v37;
  uint64_t v22 = sub_1DEBC5F30(a1, (uint64_t)a7, a8, a2, a3, a4, a5, (uint64_t)v37);
  uint64_t v35 = a1;
  id v37 = a7;
  sub_1DEBC6488(a5, v21, (uint64_t)a7, a8, (uint64_t)v20);
  sub_1DEB0DFE4();
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v23) == 1)
  {
    sub_1DEBC51B0((uint64_t)v20, (uint64_t (*)(void))sub_1DEB4F678);
    uint64_t v40 = v22;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v26 = (void (*)(char *, uint64_t))v38;
    swift_retain();
    id v27 = v37;
    swift_retain();
    unint64_t v28 = sub_1DEBCA574(v35, v26, (uint64_t)v27, a8, (uint64_t)v22, a2, a3, a4, a5);
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DEBCACB0(0, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
    uint64_t v30 = v29;
    uint64_t v31 = sub_1DEBC4C14(&qword_1EBAD2EA8);
    uint64_t v32 = sub_1DEBC4C14(&qword_1EBAD2EA0);
    MEMORY[0x1E01DBA90](v28, v30, v31, v32);
    type metadata accessor for TagFeedModel(0);
    sub_1DEB0E09C();
    sub_1DEBC4BE0();
    sub_1DFDF14C0();
    swift_release();
    return swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v39, v20, v24);
  }
}

void (*sub_1DEBC5F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))(uint64_t *, void)
{
  uint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v51 = a6;
  uint64_t v52 = a3;
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v50 = a2;
  uint64_t v9 = sub_1DFDF7010();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CuratedTagFeedGroup();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0DFE4();
  uint64_t v16 = v15;
  uint64_t v47 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v46 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TagFeedBlueprintCollapsedSection(0);
  uint64_t v57 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v45 - v22;
  uint64_t v45 = type metadata accessor for TagFeedSectionGapDescriptor(0);
  MEMORY[0x1F4188790](v45);
  uint64_t v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a1;
  sub_1DFDF14D0();
  int v26 = (v60 >> 58) & 0x3C | (v60 >> 1) & 3;
  if (v26 != 10)
  {
    if (v26
      || (uint64_t v27 = swift_projectBox(),
          (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v27, 1, v18) == 1))
    {
      swift_release();
      sub_1DFDF14D0();
      return (void (*)(uint64_t *, void))v59[0];
    }
    sub_1DEBCB180(v27, (uint64_t)v25, type metadata accessor for TagFeedSectionGapDescriptor);
    sub_1DEBCB1E8((uint64_t)v25, (uint64_t)v23, type metadata accessor for TagFeedBlueprintCollapsedSection);
    id v37 = v46;
    sub_1DEBC5B24(v23, v48, v49, v51, v53, v54, v50, v52);
    uint64_t v38 = &v23[*(int *)(v18 + 20)];
    uint64_t v40 = *(void *)v38;
    uint64_t v39 = *((void *)v38 + 1);
    uint64_t v41 = *(void *)&v23[*(int *)(v18 + 24)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DEBC51B0((uint64_t)v23, type metadata accessor for TagFeedBlueprintCollapsedSection);
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v21, v37, v16);
    uint64_t v42 = &v21[*(int *)(v18 + 20)];
    *(void *)uint64_t v42 = v40;
    *((void *)v42 + 1) = v39;
    *(void *)&v21[*(int *)(v18 + 24)] = v41;
    uint64_t v36 = swift_allocBox();
    uint64_t v44 = v43;
    sub_1DEBCB1E8((uint64_t)v21, v43, type metadata accessor for TagFeedBlueprintCollapsedSection);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v44, 0, 1, v18);
    swift_release();
    return (void (*)(uint64_t *, void))v36;
  }
  uint64_t v28 = swift_projectBox();
  sub_1DEBCB180(v28, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
  uint64_t v30 = v55;
  uint64_t v29 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v11, v14, v56);
  char v31 = sub_1DFDF7BF0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v29);
  if ((v31 & 1) == 0)
  {
    sub_1DFDF14D0();
    sub_1DEBC51B0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
    swift_release();
    return (void (*)(uint64_t *, void))v59[0];
  }
  uint64_t result = (void (*)(uint64_t *, void))sub_1DFDF6FC0();
  if (!__OFADD__(*v33, 1))
  {
    ++*v33;
    result(v59, 0);
    uint64_t v34 = swift_allocBox();
    sub_1DEBCB1E8((uint64_t)v14, v35, (uint64_t (*)(void))type metadata accessor for CuratedTagFeedGroup);
    swift_release();
    return (void (*)(uint64_t *, void))(v34 | 0x2000000000000004);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEBC6488@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v118 = a1;
  uint64_t v9 = type metadata accessor for TagFeedGroup();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1DFDFB7E0();
  uint64_t v107 = *(uint64_t (***)(void, void))(v122 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v122);
  uint64_t v121 = (char *)v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v120 = (char *)v94 - v15;
  uint64_t v115 = sub_1DFDFC1E0();
  uint64_t v108 = *(void (***)(char *, uint64_t))(v115 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v115);
  char v103 = (char *)v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v113 = (char *)v94 - v18;
  sub_1DEBCAD64(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v106 = (char *)v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DFDFADB0();
  unint64_t v116 = *(void *)(v21 - 8);
  uint64_t v117 = v21;
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  unint64_t v119 = (char *)v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v112 = (char *)v94 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)v94 - v26;
  sub_1DEBCAF44(0);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for PuzzleListTagFeedGroup();
  MEMORY[0x1F4188790](v109);
  uint64_t v111 = (uint64_t)v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB0DFE4();
  uint64_t v114 = v32;
  sub_1DFDF14D0();
  sub_1DF67F014(v126, (uint64_t)v30);
  swift_release();
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v30, 1, v9);
  uint64_t v34 = (uint64_t (*)())sub_1DEBCAF44;
  if (v33 == 1
    || (int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(),
        uint64_t v34 = type metadata accessor for TagFeedGroup,
        EnumCaseMultiPayload != 31))
  {
    uint64_t v70 = (uint64_t)v30;
    unint64_t v71 = v34;
LABEL_41:
    sub_1DEBC51B0(v70, (uint64_t (*)(void))v71);
  }
  else
  {
    unint64_t v96 = v12;
    uint64_t v36 = v111;
    sub_1DEBCB1E8((uint64_t)v30, v111, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
    uint64_t v37 = swift_bridgeObjectRetain();
    int64_t v38 = 0;
    unint64_t v105 = sub_1DEBC1878(v37);
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v40 = *(void *)(v36 + *(int *)(v109 + 20));
    uint64_t v41 = *(void *)(v40 + 16);
    unint64_t v42 = MEMORY[0x1E4FBC860];
    uint64_t v110 = a5;
    uint64_t v100 = a4;
    uint64_t v99 = a3;
    uint64_t v98 = a2;
    uint64_t v97 = v9;
    if (v41)
    {
      int64_t v104 = 0;
      unint64_t v126 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1DFDFFA70();
      uint64_t v123 = *(void (**)(char *, unint64_t, uint64_t))(v116 + 16);
      unint64_t v43 = (*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
      int64_t v102 = v40;
      unint64_t v44 = v40 + v43;
      uint64_t v45 = *(void *)(v116 + 72);
      uint64_t v46 = (void (**)(char *, uint64_t))(v116 + 8);
      uint64_t v47 = v117;
      do
      {
        v123(v27, v44, v47);
        sub_1DFDFAD90();
        (*v46)(v27, v47);
        sub_1DFDFFA50();
        sub_1DFDFFA90();
        sub_1DFDFFAA0();
        sub_1DFDFFA60();
        v44 += v45;
        --v41;
      }
      while (v41);
      unint64_t v42 = v126;
      uint64_t result = swift_bridgeObjectRelease();
      a5 = v110;
      int64_t v38 = v104;
    }
    if (v42 >> 62) {
      goto LABEL_58;
    }
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_9:
      if ((v42 & 0xC000000000000001) != 0)
      {
        uint64_t v48 = (void *)MEMORY[0x1E01EE240](0, v42);
      }
      else
      {
        if (!*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          return result;
        }
        uint64_t v48 = *(void **)(v42 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRetain();
      char v49 = sub_1DEBCAFB8(v105, v48);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if (v49)
      {
        v94[1] = v38;
        uint64_t v95 = v48;
        uint64_t v50 = v118;
        uint64_t v51 = *(void *)(v118 + 64);
        uint64_t v101 = v118 + 64;
        uint64_t v52 = 1 << *(unsigned char *)(v118 + 32);
        uint64_t v53 = -1;
        if (v52 < 64) {
          uint64_t v53 = ~(-1 << v52);
        }
        unint64_t v54 = v53 & v51;
        int64_t v102 = (unint64_t)(v52 + 63) >> 6;
        unint64_t v42 = v116;
        unint64_t v105 = v116 + 16;
        uint64_t v123 = (void (*)(char *, unint64_t, uint64_t))(v116 + 32);
        ++v108;
        LODWORD(v104) = *MEMORY[0x1E4F80EB8];
        uint64_t v55 = (void (**)(char *, void, uint64_t))(v107 + 13);
        uint64_t v56 = (void (**)(char *, uint64_t))(v107 + 1);
        uint64_t v107 = (uint64_t (**)(void, void))(v116 + 8);
        uint64_t result = swift_bridgeObjectRetain_n();
        int64_t v38 = 0;
        uint64_t v57 = v117;
        if (v54)
        {
LABEL_16:
          unint64_t v58 = __clz(__rbit64(v54));
          v54 &= v54 - 1;
          unint64_t v59 = v58 | (v38 << 6);
          goto LABEL_35;
        }
        while (1)
        {
          int64_t v60 = v38 + 1;
          if (__OFADD__(v38, 1))
          {
            __break(1u);
LABEL_58:
            swift_bridgeObjectRetain();
            uint64_t v93 = sub_1DFDFFBE0();
            uint64_t result = swift_bridgeObjectRelease();
            if (v93) {
              goto LABEL_9;
            }
            goto LABEL_59;
          }
          if (v60 >= v102) {
            goto LABEL_47;
          }
          unint64_t v61 = *(void *)(v101 + 8 * v60);
          ++v38;
          if (!v61)
          {
            int64_t v38 = v60 + 1;
            if (v60 + 1 >= v102) {
              goto LABEL_47;
            }
            unint64_t v61 = *(void *)(v101 + 8 * v38);
            if (!v61)
            {
              int64_t v38 = v60 + 2;
              if (v60 + 2 >= v102) {
                goto LABEL_47;
              }
              unint64_t v61 = *(void *)(v101 + 8 * v38);
              if (!v61)
              {
                int64_t v38 = v60 + 3;
                if (v60 + 3 >= v102) {
                  goto LABEL_47;
                }
                unint64_t v61 = *(void *)(v101 + 8 * v38);
                if (!v61)
                {
                  int64_t v38 = v60 + 4;
                  if (v60 + 4 >= v102) {
                    goto LABEL_47;
                  }
                  unint64_t v61 = *(void *)(v101 + 8 * v38);
                  if (!v61)
                  {
                    int64_t v62 = v60 + 5;
                    if (v62 >= v102)
                    {
LABEL_47:
                      swift_release();
                      uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
                      unint64_t v77 = v42;
                      uint64_t v75 = (uint64_t)v106;
                      v79(v106, 1, 1, v57);
                      swift_bridgeObjectRelease();
                      uint64_t v78 = v100;
                      uint64_t v76 = v57;
                      goto LABEL_48;
                    }
                    unint64_t v61 = *(void *)(v101 + 8 * v62);
                    if (!v61)
                    {
                      while (1)
                      {
                        int64_t v38 = v62 + 1;
                        if (__OFADD__(v62, 1)) {
                          goto LABEL_65;
                        }
                        if (v38 >= v102) {
                          goto LABEL_47;
                        }
                        unint64_t v61 = *(void *)(v101 + 8 * v38);
                        ++v62;
                        if (v61) {
                          goto LABEL_34;
                        }
                      }
                    }
                    int64_t v38 = v62;
                  }
                }
              }
            }
          }
LABEL_34:
          unint64_t v54 = (v61 - 1) & v61;
          unint64_t v59 = __clz(__rbit64(v61)) + (v38 << 6);
LABEL_35:
          unint64_t v63 = *(void *)(v50 + 56) + *(void *)(v42 + 72) * v59;
          uint64_t v64 = v112;
          (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v112, v63, v57);
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
          v65(v119, v64, v57);
          unint64_t v66 = v113;
          sub_1DFDFADA0();
          sub_1DFDFC1C0();
          (*v108)(v66, v115);
          (*v55)(v121, v104, v122);
          sub_1DE94D89C(&qword_1EAC21508, MEMORY[0x1E4F80EC0]);
          sub_1DFDFE170();
          sub_1DFDFE170();
          if (v126 == v124 && v127 == v125) {
            break;
          }
          char v67 = sub_1DFDFFF50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v68 = *v56;
          uint64_t v69 = v122;
          (*v56)(v121, v122);
          v68(v120, v69);
          a5 = v110;
          if (v67) {
            goto LABEL_46;
          }
          uint64_t v57 = v117;
          uint64_t result = (*v107)(v119, v117);
          uint64_t v50 = v118;
          unint64_t v42 = v116;
          if (v54) {
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v73 = *v56;
        uint64_t v74 = v122;
        (*v56)(v121, v122);
        v73(v120, v74);
        a5 = v110;
LABEL_46:
        swift_release();
        uint64_t v75 = (uint64_t)v106;
        uint64_t v76 = v117;
        v65(v106, v119, v117);
        unint64_t v77 = v116;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v116 + 56))(v75, 0, 1, v76);
        swift_bridgeObjectRelease();
        uint64_t v78 = v100;
LABEL_48:
        uint64_t v80 = v99;
        uint64_t v81 = v98;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76) == 1)
        {
          swift_unknownObjectRelease();
          sub_1DEBC51B0(v75, (uint64_t (*)(void))sub_1DEBCAD64);
          unint64_t v71 = type metadata accessor for PuzzleListTagFeedGroup;
          uint64_t v70 = v111;
          goto LABEL_41;
        }
        uint64_t v82 = v103;
        sub_1DFDFADA0();
        (*v107)(v75, v76);
        sub_1DFDFC1B0();
        double v84 = v83;
        (*v108)(v82, v115);
        if (v84 != 1.0 && v84 != 0.0) {
          goto LABEL_52;
        }
        uint64_t v85 = swift_bridgeObjectRetain();
        size_t v86 = sub_1DEC79114(v85);
        swift_bridgeObjectRelease();
        uint64_t v87 = v95;
        swift_unknownObjectRetain();
        uint64_t v88 = sub_1DEBCA28C(v86, v87);
        swift_release();
        swift_unknownObjectRelease();
        uint64_t v89 = sub_1DFDF7010();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16))(v96, v111, v89);
        if ((~*(void *)&v84 & 0x7FF0000000000000) == 0) {
          goto LABEL_62;
        }
        if (v84 > -9.22337204e18)
        {
          if (v84 >= 9.22337204e18) {
            goto LABEL_64;
          }
          uint64_t v90 = v109;
          uint64_t v91 = (uint64_t)v96;
          *(void *)&v96[*(int *)(v109 + 20)] = v88;
          *(void *)(v91 + *(int *)(v90 + 24)) = (uint64_t)v84;
          swift_storeEnumTagMultiPayload();
          unint64_t v92 = sub_1DF349BC0(MEMORY[0x1E4FBC860]);
          sub_1DEBC1B84(v91, v92, v81, v80, v78, a5);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_1DEBC51B0(v91, (uint64_t (*)(void))type metadata accessor for TagFeedGroup);
          sub_1DEBC51B0(v111, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
          uint64_t v72 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(a5, v72, 1);
        }
        goto LABEL_63;
      }
LABEL_52:
      sub_1DEBC51B0(v111, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      swift_unknownObjectRelease();
    }
    else
    {
LABEL_59:
      swift_bridgeObjectRelease();
      sub_1DEBC51B0(v111, (uint64_t (*)(void))type metadata accessor for PuzzleListTagFeedGroup);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v72 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(a5, v72, 1);
}

uint64_t sub_1DEBC7310@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>, uint64_t a6)
{
  uint64_t v187 = a4;
  uint64_t v188 = a3;
  uint64_t v181 = a2;
  uint64_t v193 = a5;
  uint64_t v161 = a6;
  sub_1DEBCAD64(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v142 = (char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1DFDF81A0();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x1F4188790](v160);
  unint64_t v158 = (char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_1DFDFADB0();
  uint64_t v162 = *(void *)(v170 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v170);
  uint64_t v157 = (char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v144 = (char *)&v139 - v12;
  sub_1DEBC9F64(0, (unint64_t *)&qword_1EBAD1688, MEMORY[0x1E4F7F838], (void (*)(void))sub_1DEBCAD84, (void (*)(void))sub_1DEBCADB8);
  uint64_t v169 = v13;
  uint64_t v172 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v168 = (char *)&v139 - v14;
  uint64_t v155 = sub_1DFDF7240();
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x1F4188790](v155);
  uint64_t v153 = (char *)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC9F64(0, (unint64_t *)&qword_1EBAE9AB0, MEMORY[0x1E4F7F3B8], (void (*)(void))sub_1DEBCADEC, (void (*)(void))sub_1DEBCAE20);
  uint64_t v175 = *(void *)(v16 - 8);
  uint64_t v176 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v174 = (char *)&v139 - v17;
  uint64_t v165 = sub_1DFDF9D20();
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x1F4188790](v165);
  uint64_t v163 = (char *)&v139 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC9F64(0, (unint64_t *)&qword_1EBAE9B20, MEMORY[0x1E4F804D0], (void (*)(void))sub_1DEBCAE54, (void (*)(void))sub_1DEBCAE88);
  uint64_t v178 = *(void *)(v19 - 8);
  uint64_t v179 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v177 = (char *)&v139 - v20;
  sub_1DEBCAEBC(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v141 = (char *)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_1DFDF9A50();
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x1F4188790](v152);
  uint64_t v150 = (char *)&v139 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC9F64(0, (unint64_t *)&qword_1EBAE9B00, MEMORY[0x1E4F80490], (void (*)(void))sub_1DEBCAEDC, (void (*)(void))sub_1DEBCAF10);
  uint64_t v156 = v24;
  uint64_t v167 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v166 = (char *)&v139 - v25;
  sub_1DEBC9F44(0);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v147 = (char *)&v139 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1DFDFA250();
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x1F4188790](v146);
  uint64_t v29 = (char *)&v139 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC9F64(0, (unint64_t *)&qword_1EBAE9B80, MEMORY[0x1E4F805F8], (void (*)(void))sub_1DEBCA004, (void (*)(void))sub_1DEBCA038);
  uint64_t v149 = v30;
  uint64_t v148 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v171 = (char *)&v139 - v31;
  sub_1DEBCA06C(0);
  MEMORY[0x1F4188790](v32 - 8);
  unint64_t v143 = (char *)&v139 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1DFDF9D80();
  uint64_t v182 = *(void *)(v34 - 8);
  uint64_t v183 = v34;
  MEMORY[0x1F4188790](v34);
  uint64_t v189 = (char *)&v139 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_1DFDFA100();
  uint64_t v180 = *(void *)(v173 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v173);
  unint64_t v140 = (char *)&v139 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  int64_t v40 = (char *)&v139 - v39;
  MEMORY[0x1F4188790](v38);
  unint64_t v42 = (char *)&v139 - v41;
  sub_1DEBC9F64(0, (unint64_t *)&qword_1EBAE9B50, MEMORY[0x1E4F80560], (void (*)(void))sub_1DEBCA08C, (void (*)(void))sub_1DEBCA0C0);
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v47 = (char *)&v139 - v46;
  uint64_t v48 = type metadata accessor for TagFeedModel(0);
  uint64_t v49 = MEMORY[0x1F4188790](v48);
  uint64_t v184 = (uint64_t)&v139 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  uint64_t v186 = (uint64_t)&v139 - v52;
  MEMORY[0x1F4188790](v51);
  unint64_t v54 = (char *)&v139 - v53;
  sub_1DEBCACB0(0, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
  uint64_t v192 = v55;
  uint64_t v190 = a1;
  sub_1DFDF0B50();
  uint64_t v185 = v48;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEBCA1AC();
      double v84 = &v54[*(int *)(v83 + 48)];
      uint64_t v85 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v85 - 8) + 8))(v84, v85);
      uint64_t v56 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_11;
    case 2u:
      uint64_t v179 = v45;
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      uint64_t v58 = v44;
      unint64_t v59 = v47;
      v57(v47, v54, v58);
      sub_1DFDF9A80();
      sub_1DFDFA0D0();
      int64_t v60 = *(void (**)(char *, uint64_t))(v180 + 8);
      uint64_t v61 = v173;
      v60(v42, v173);
      char v62 = sub_1DFDF7C10();
      swift_unknownObjectRelease();
      if (v62)
      {
        sub_1DFDF9A80();
        uint64_t v181 = (void (*)(char *, uint64_t))sub_1DFDFA0D0();
        v60(v42, v61);
        sub_1DFDF9A90();
        sub_1DFDF9A80();
        uint64_t v190 = (uint64_t)v59;
        sub_1DFDFA010();
        v60(v40, v61);
        sub_1DF68054C(v187);
        uint64_t v180 = v63;
        uint64_t v64 = *(void **)(v188 + 24);
        uint64_t v187 = *(void *)(v188 + 16);
        id v194 = v64;
        sub_1DEBC9E14();
        sub_1DE94D89C(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
        id v65 = v64;
        uint64_t v66 = v186;
        char v67 = v189;
        uint64_t v68 = (uint64_t)v143;
        sub_1DFDF7880();

        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DEBC51B0(v68, (uint64_t (*)(void))sub_1DEBCA06C);
        (*(void (**)(char *, uint64_t))(v182 + 8))(v67, v183);
        sub_1DEBCB180(v66, v184, type metadata accessor for TagFeedModel);
        sub_1DEBC4BE0();
        uint64_t v69 = v193;
        sub_1DFDF0B40();
        sub_1DEBC51B0(v66, type metadata accessor for TagFeedModel);
        (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v190, v58);
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v179 + 8))(v59, v58);
      goto LABEL_32;
    case 3u:
    case 6u:
    case 9u:
      uint64_t v56 = type metadata accessor for TagFeedModel;
LABEL_11:
      uint64_t v82 = v56;
      uint64_t v81 = (uint64_t)v54;
      goto LABEL_12;
    case 4u:
      uint64_t v88 = v148;
      uint64_t v89 = v171;
      uint64_t v90 = v149;
      (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v171, v54, v149);
      sub_1DFDF9A80();
      uint64_t v91 = (uint64_t)v147;
      sub_1DFDFA230();
      (*(void (**)(char *, uint64_t))(v145 + 8))(v29, v146);
      uint64_t v92 = v180;
      uint64_t v93 = v173;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v91, 1, v173) == 1)
      {
        (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);
        sub_1DEBC51B0(v91, (uint64_t (*)(void))sub_1DEBC9F44);
        uint64_t v86 = v192;
      }
      else
      {
        uint64_t v129 = v140;
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v140, v91, v93);
        sub_1DFDFA0D0();
        char v130 = sub_1DFDF7C10();
        swift_unknownObjectRelease();
        uint64_t v86 = v192;
        if (v130)
        {
          uint64_t v131 = sub_1DFDFA0D0();
          uint64_t v132 = v186;
          sub_1DEFF68AC(v131, v187, v186);
          swift_unknownObjectRelease();
          sub_1DEBCB180(v132, v184, type metadata accessor for TagFeedModel);
          sub_1DEBC4BE0();
          uint64_t v69 = v193;
          sub_1DFDF0B40();
          sub_1DEBC51B0(v132, type metadata accessor for TagFeedModel);
          (*(void (**)(char *, uint64_t))(v180 + 8))(v129, v93);
          (*(void (**)(char *, uint64_t))(v88 + 8))(v171, v90);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v92 + 8))(v129, v93);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v171, v90);
      }
      uint64_t v87 = *(void *)(v86 - 8);
      uint64_t v69 = v193;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v193, v190, v86);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v69, 0, 1, v86);
    case 5u:
      swift_release();
      goto LABEL_13;
    case 7u:
      sub_1DEBCA0F4();
      (*(void (**)(char *, uint64_t))(v45 + 8))(&v54[*(int *)(v94 + 48)], v44);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v95 - 8) + 8))(v54, v95);
      goto LABEL_13;
    case 8u:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 0xAu:
      uint64_t v96 = v167;
      uint64_t v97 = v166;
      uint64_t v98 = v156;
      (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v166, v54, v156);
      uint64_t v99 = v150;
      sub_1DFDF9A80();
      uint64_t v100 = (void *)sub_1DFDF9960();
      uint64_t v101 = *(void (**)(char *, uint64_t))(v151 + 8);
      uint64_t v102 = v152;
      v101(v99, v152);
      char v103 = sub_1DFDF7C00();

      if (v103)
      {
        sub_1DFDF9A80();
        uint64_t v190 = sub_1DFDF9960();
        v101(v99, v102);
        sub_1DFDF9A90();
        sub_1DF68054C(v187);
        int64_t v104 = *(void **)(v188 + 24);
        uint64_t v187 = *(void *)(v188 + 16);
        id v194 = v104;
        uint64_t v105 = sub_1DFDF99F0();
        uint64_t v106 = (uint64_t)v141;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v141, 1, 1, v105);
        sub_1DEBC9E14();
        sub_1DE94D89C(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
        id v107 = v104;
        uint64_t v108 = v186;
        uint64_t v110 = v189;
        uint64_t v109 = (void *)v190;
        sub_1DFDF7830();
        sub_1DEBC51B0(v106, (uint64_t (*)(void))sub_1DEBCAEBC);

        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v182 + 8))(v110, v183);
        sub_1DEBCB180(v108, v184, type metadata accessor for TagFeedModel);
        sub_1DEBC4BE0();
        uint64_t v69 = v193;
        sub_1DFDF0B40();
        sub_1DEBC51B0(v108, type metadata accessor for TagFeedModel);
        (*(void (**)(char *, uint64_t))(v167 + 8))(v166, v98);
LABEL_20:
        uint64_t v86 = v192;
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v98);
LABEL_32:
      uint64_t v86 = v192;
      uint64_t v69 = v193;
      uint64_t v87 = *(void *)(v192 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v193, v190, v192);
      break;
    case 0xBu:
      (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v177, v54, v179);
      uint64_t v70 = v163;
      sub_1DFDF9A80();
      sub_1DFDF9D00();
      (*(void (**)(char *, uint64_t))(v164 + 8))(v70, v165);
      unint64_t v71 = v189;
      sub_1DFDF9A90();
      sub_1DF68054C(v187);
      id v194 = *(id *)(v188 + 24);
      id v72 = v194;
      sub_1DEBC9E14();
      sub_1DE94D89C(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
      id v73 = v72;
      uint64_t v74 = v186;
      sub_1DFDF7840();

      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v182 + 8))(v71, v183);
      sub_1DEBCB180(v74, v184, type metadata accessor for TagFeedModel);
      sub_1DEBC4BE0();
      uint64_t v69 = v193;
      sub_1DFDF0B40();
      sub_1DEBC51B0(v74, type metadata accessor for TagFeedModel);
      (*(void (**)(char *, uint64_t))(v178 + 8))(v177, v179);
      goto LABEL_20;
    case 0xCu:
      (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v174, v54, v176);
      uint64_t v75 = v153;
      sub_1DFDF9A80();
      sub_1DFDF7220();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v75, v155);
      uint64_t v76 = v189;
      sub_1DFDF9A90();
      sub_1DF68054C(v187);
      id v194 = *(id *)(v188 + 24);
      id v77 = v194;
      sub_1DEBC9E14();
      sub_1DE94D89C(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
      id v78 = v77;
      uint64_t v79 = v186;
      sub_1DFDF77B0();

      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v182 + 8))(v76, v183);
      sub_1DEBCB180(v79, v184, type metadata accessor for TagFeedModel);
      sub_1DEBC4BE0();
      uint64_t v69 = v193;
      sub_1DFDF0B40();
      sub_1DEBC51B0(v79, type metadata accessor for TagFeedModel);
      (*(void (**)(char *, uint64_t))(v175 + 8))(v174, v176);
      goto LABEL_20;
    case 0xDu:
      uint64_t v111 = v168;
      uint64_t v112 = v169;
      (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v168, v54, v169);
      uint64_t v113 = v158;
      sub_1DFDF9A80();
      uint64_t v114 = v157;
      sub_1DFDF8180();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v113, v160);
      uint64_t v115 = sub_1DFDFAD80();
      uint64_t v117 = v116;
      uint64_t v118 = v162;
      unint64_t v119 = *(void (**)(char *, uint64_t))(v162 + 8);
      uint64_t v120 = v114;
      uint64_t v121 = v170;
      v119(v120, v170);
      uint64_t v122 = v161;
      uint64_t v123 = *(void *)(v161 + 16);
      uint64_t v181 = v119;
      if (v123 && (unint64_t v124 = sub_1DEA6D930(v115, v117), (v125 & 1) != 0))
      {
        unint64_t v126 = *(void *)(v122 + 56) + *(void *)(v118 + 72) * v124;
        uint64_t v127 = (uint64_t)v142;
        (*(void (**)(char *, unint64_t, uint64_t))(v118 + 16))(v142, v126, v121);
        uint64_t v128 = 0;
      }
      else
      {
        uint64_t v128 = 1;
        uint64_t v127 = (uint64_t)v142;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56))(v127, v128, 1, v121);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v127, 1, v121) == 1)
      {
        (*(void (**)(char *, uint64_t))(v172 + 8))(v111, v112);
        sub_1DEBC51B0(v127, (uint64_t (*)(void))sub_1DEBCAD64);
        uint64_t v86 = v192;
        uint64_t v69 = v193;
        uint64_t v87 = *(void *)(v192 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v193, v190, v192);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v144, v127, v121);
        unint64_t v134 = v189;
        sub_1DFDF9A90();
        uint64_t v135 = sub_1DF68054C(v187);
        uint64_t v136 = *(void **)(v188 + 24);
        uint64_t v190 = *(void *)(v188 + 16);
        uint64_t v191 = v135;
        id v194 = v136;
        sub_1DEBC9E14();
        sub_1DE94D89C(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
        id v137 = v136;
        uint64_t v138 = v186;
        sub_1DFDF77D0();

        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v182 + 8))(v134, v183);
        sub_1DEBCB180(v138, v184, type metadata accessor for TagFeedModel);
        sub_1DEBC4BE0();
        uint64_t v69 = v193;
        sub_1DFDF0B40();
        sub_1DEBC51B0(v138, type metadata accessor for TagFeedModel);
        v181(v144, v170);
        (*(void (**)(char *, uint64_t))(v172 + 8))(v168, v169);
        uint64_t v86 = v192;
LABEL_21:
        uint64_t v87 = *(void *)(v86 - 8);
      }
      break;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v81 = (uint64_t)&v54[*(int *)(v80 + 48)];
      uint64_t v82 = type metadata accessor for TagFeedGapLocation;
LABEL_12:
      sub_1DEBC51B0(v81, v82);
LABEL_13:
      uint64_t v86 = v192;
      uint64_t v69 = v193;
      uint64_t v87 = *(void *)(v192 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v193, v190, v192);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v69, 0, 1, v86);
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v69, 0, 1, v86);
}

uint64_t sub_1DEBC9064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v100 = a5;
  uint64_t v85 = a4;
  uint64_t v86 = a3;
  uint64_t v93 = a2;
  sub_1DEBC9F44(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDFA250();
  uint64_t v89 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBC9F64(0, (unint64_t *)&qword_1EBAE9B80, MEMORY[0x1E4F805F8], (void (*)(void))sub_1DEBCA004, (void (*)(void))sub_1DEBCA038);
  uint64_t v91 = *(void *)(v12 - 8);
  uint64_t v92 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v90 = (char *)&v80 - v13;
  sub_1DEBCA06C(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v82 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1DFDF9D80();
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v88 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1DFDFA100();
  uint64_t v97 = *(void *)(v94 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v94);
  uint64_t v87 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v80 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v80 - v22;
  sub_1DEBC9F64(0, (unint64_t *)&qword_1EBAE9B50, MEMORY[0x1E4F80560], (void (*)(void))sub_1DEBCA08C, (void (*)(void))sub_1DEBCA0C0);
  uint64_t v95 = *(void *)(v24 - 8);
  uint64_t v96 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v80 - v25;
  uint64_t v27 = type metadata accessor for TagFeedModel(0);
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  uint64_t v83 = (uint64_t)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v84 = (uint64_t)&v80 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v80 - v32;
  sub_1DEBCACB0(0, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
  uint64_t v98 = a1;
  uint64_t v99 = v34;
  sub_1DFDF0B50();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEBCA1AC();
      uint64_t v44 = &v33[*(int *)(v43 + 48)];
      uint64_t v45 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
      uint64_t v35 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_3;
    case 2u:
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v26, v33, v96);
      sub_1DFDF9A80();
      uint64_t v46 = (void *)sub_1DFDFA0D0();
      uint64_t v47 = *(void (**)(char *, uint64_t))(v97 + 8);
      uint64_t v48 = v94;
      v97 += 8;
      v47(v23, v94);
      id v49 = objc_msgSend(v46, sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v50 = sub_1DFDFDD20();
      uint64_t v52 = v51;

      uint64_t v53 = v93;
      if (*(void *)(v93 + 16))
      {
        unint64_t v54 = sub_1DEA6D930(v50, v52);
        if (v55)
        {
          uint64_t v98 = *(void *)(*(void *)(v53 + 56) + 8 * v54);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          sub_1DFDF9A90();
          sub_1DEB0DFE4();
          sub_1DFDF14D0();
          uint64_t v56 = v102;
          uint64_t v93 = v102;
          sub_1DFDF9A80();
          uint64_t v57 = (uint64_t)v82;
          sub_1DFDFA010();
          v47(v21, v48);
          uint64_t v94 = sub_1DF68054C(v56);
          uint64_t v58 = *(void **)(v86 + 24);
          uint64_t v97 = *(void *)(v86 + 16);
          uint64_t v101 = v58;
          sub_1DEBC9E14();
          sub_1DE94D89C(&qword_1EBAEA4E8, (void (*)(uint64_t))sub_1DEBC9E14);
          id v59 = v58;
          uint64_t v60 = v84;
          uint64_t v61 = v88;
          sub_1DFDF7880();

          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1DEBC51B0(v57, (uint64_t (*)(void))sub_1DEBCA06C);
          (*(void (**)(char *, uint64_t))(v80 + 8))(v61, v81);
          sub_1DEBCB180(v60, v83, type metadata accessor for TagFeedModel);
          sub_1DEBC4BE0();
          uint64_t v38 = v100;
          sub_1DFDF0B40();
          swift_unknownObjectRelease();
          sub_1DEBC51B0(v60, type metadata accessor for TagFeedModel);
          (*(void (**)(char *, uint64_t))(v95 + 8))(v26, v96);
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v26, v96);
      uint64_t v39 = v99;
      uint64_t v38 = v100;
      uint64_t v40 = *(void *)(v99 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v100, v98, v99);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v39);
    case 3u:
    case 6u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v35 = type metadata accessor for TagFeedModel;
LABEL_3:
      uint64_t v36 = v35;
      uint64_t v37 = (uint64_t)v33;
      goto LABEL_4;
    case 4u:
      uint64_t v62 = v91;
      uint64_t v63 = v90;
      uint64_t v64 = v92;
      (*(void (**)(void))(v91 + 32))();
      sub_1DFDF9A80();
      sub_1DFDFA230();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v11, v9);
      uint64_t v65 = v97;
      uint64_t v66 = v94;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v8, 1, v94) == 1)
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
        uint64_t v36 = (uint64_t (*)(void))sub_1DEBC9F44;
        uint64_t v37 = (uint64_t)v8;
LABEL_4:
        sub_1DEBC51B0(v37, v36);
        goto LABEL_5;
      }
      uint64_t v69 = v87;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v87, v8, v66);
      id v70 = objc_msgSend((id)sub_1DFDFA0D0(), sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v71 = sub_1DFDFDD20();
      uint64_t v73 = v72;

      uint64_t v74 = v93;
      if (!*(void *)(v93 + 16) || (unint64_t v75 = sub_1DEA6D930(v71, v73), (v76 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v69, v66);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
LABEL_5:
        uint64_t v38 = v100;
        uint64_t v39 = v99;
        uint64_t v40 = *(void *)(v99 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v100, v98, v99);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v39);
      }
      uint64_t v77 = *(void *)(*(void *)(v74 + 56) + 8 * v75);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      sub_1DEB0DFE4();
      sub_1DFDF14D0();
      uint64_t v78 = v84;
      uint64_t v79 = v90;
      sub_1DEFF68AC(v77, v102, v84);
      swift_release();
      sub_1DEBCB180(v78, v83, type metadata accessor for TagFeedModel);
      sub_1DEBC4BE0();
      uint64_t v38 = v100;
      sub_1DFDF0B40();
      swift_unknownObjectRelease();
      sub_1DEBC51B0(v78, type metadata accessor for TagFeedModel);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v69, v66);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v79, v92);
LABEL_21:
      uint64_t v39 = v99;
      uint64_t v40 = *(void *)(v99 - 8);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v39);
    case 5u:
      swift_release();
      goto LABEL_5;
    case 7u:
      sub_1DEBCA0F4();
      (*(void (**)(char *, uint64_t))(v95 + 8))(&v33[*(int *)(v67 + 48)], v96);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v68 - 8) + 8))(v33, v68);
      goto LABEL_5;
    case 8u:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    default:
      swift_bridgeObjectRelease();
      sub_1DEBCA220();
      uint64_t v37 = (uint64_t)&v33[*(int *)(v42 + 48)];
      uint64_t v36 = type metadata accessor for TagFeedGapLocation;
      goto LABEL_4;
  }
}

void sub_1DEBC9D34()
{
  if (!qword_1EBAE9508)
  {
    type metadata accessor for PaywallTagFeedGroup();
    sub_1DE94D89C(&qword_1EBAD6EF0, (void (*)(uint64_t))type metadata accessor for PaywallTagFeedGroup);
    sub_1DE94D89C(&qword_1EBAD6EE8, (void (*)(uint64_t))type metadata accessor for PaywallTagFeedGroup);
    unint64_t v0 = sub_1DFDF7540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9508);
    }
  }
}

unint64_t sub_1DEBC9E14()
{
  unint64_t result = qword_1EBAEA4E0;
  if (!qword_1EBAEA4E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAEA4E0);
  }
  return result;
}

uint64_t sub_1DEBC9E54()
{
  return sub_1DE94D89C(&qword_1EBAE9BF8, MEMORY[0x1E4F80538]);
}

uint64_t sub_1DEBC9E88()
{
  return sub_1DE94D89C(&qword_1EBAE9BF0, MEMORY[0x1E4F80538]);
}

uint64_t sub_1DEBC9EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TagFeedModelPlaceholder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBC9F20@<X0>(unint64_t *a1@<X8>)
{
  return sub_1DEFF6D44(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

void sub_1DEBC9F44(uint64_t a1)
{
}

void sub_1DEBC9F64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1DEBC9E14();
    a4();
    a5();
    unint64_t v8 = sub_1DFDF9B00();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DEBCA004()
{
  return sub_1DE94D89C(&qword_1EBAE9C70, MEMORY[0x1E4F805F8]);
}

uint64_t sub_1DEBCA038()
{
  return sub_1DE94D89C((unint64_t *)&unk_1EBAE9C60, MEMORY[0x1E4F805F8]);
}

void sub_1DEBCA06C(uint64_t a1)
{
}

uint64_t sub_1DEBCA08C()
{
  return sub_1DE94D89C((unint64_t *)&unk_1EBAE9C20, MEMORY[0x1E4F80560]);
}

uint64_t sub_1DEBCA0C0()
{
  return sub_1DE94D89C((unint64_t *)&unk_1EBAE9C10, MEMORY[0x1E4F80560]);
}

void sub_1DEBCA0F4()
{
  if (!qword_1EAC22F50)
  {
    sub_1DEA8F16C();
    sub_1DEBC9F64(255, (unint64_t *)&qword_1EBAE9B50, MEMORY[0x1E4F80560], (void (*)(void))sub_1DEBCA08C, (void (*)(void))sub_1DEBCA0C0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC22F50);
    }
  }
}

void sub_1DEBCA1AC()
{
  if (!qword_1EAC21500)
  {
    type metadata accessor for TagFeedGapLocation(255);
    sub_1DFDFA6C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC21500);
    }
  }
}

void sub_1DEBCA220()
{
  if (!qword_1EBAEA0F0)
  {
    type metadata accessor for TagFeedGapLocation(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAEA0F0);
    }
  }
}

uint64_t sub_1DEBCA28C(uint64_t a1, void *a2)
{
  id v36 = a2;
  uint64_t v4 = sub_1DFDFADB0();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v38 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v30 - v8;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v35 = v7 + 16;
    uint64_t v12 = *(void *)(v7 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v33 = v12;
    unint64_t v13 = a1 + v32;
    v30[1] = v2;
    uint64_t v31 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v37 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    v34(v9, a1 + v32, v4);
    while (1)
    {
      id v15 = objc_msgSend((id)sub_1DFDFAD90(), sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v16 = sub_1DFDFDD20();
      uint64_t v18 = v17;

      id v19 = objc_msgSend(v36, sel_identifier);
      uint64_t v20 = sub_1DFDFDD20();
      uint64_t v22 = v21;

      if (v16 == v20 && v18 == v22)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v24 = sub_1DFDFFF50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          (*v31)(v9, v4);
          uint64_t v14 = v33;
          goto LABEL_4;
        }
      }
      uint64_t v25 = *v37;
      (*v37)(v38, v9, v4);
      uint64_t v26 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF68AC(0, *(void *)(v26 + 16) + 1, 1);
        uint64_t v26 = v39;
      }
      unint64_t v28 = *(void *)(v26 + 16);
      unint64_t v27 = *(void *)(v26 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1DEDF68AC(v27 > 1, v28 + 1, 1);
        uint64_t v26 = v39;
      }
      *(void *)(v26 + 16) = v28 + 1;
      unint64_t v29 = v26 + v32 + v28 * v33;
      uint64_t v14 = v33;
      v25((char *)v29, v38, v4);
      uint64_t v39 = v26;
LABEL_4:
      v13 += v14;
      if (!--v11) {
        return v39;
      }
      v34(v9, v13, v4);
    }
  }
  return result;
}

unint64_t sub_1DEBCA574(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v67 = a7;
  uint64_t v68 = a8;
  uint64_t v65 = a5;
  uint64_t v66 = a6;
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v62 = a2;
  sub_1DEBCABEC(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v61 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBCACB0(0, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
  uint64_t v13 = v12;
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v50 = (char *)&v49 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v49 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v49 - v21;
  sub_1DEB0DFE4();
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  unint64_t v27 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEB4FAF4();
  uint64_t v29 = v28 - 8;
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v59 = v25 + 16;
  v58(v27, a1, v24);
  sub_1DE94D89C((unint64_t *)&unk_1EBAD2F40, (void (*)(uint64_t))sub_1DEB0DFE4);
  uint64_t v60 = v27;
  sub_1DFDFDFB0();
  unint64_t v32 = &v31[*(int *)(v29 + 44)];
  sub_1DEBCAD30();
  uint64_t v69 = v32;
  id v70 = v31;
  uint64_t v33 = *(void *)v32;
  sub_1DFDFE720();
  if (v33 == v72[0])
  {
    unint64_t v71 = MEMORY[0x1E4FBC860];
    uint64_t v34 = (uint64_t)v70;
LABEL_3:
    sub_1DEBC51B0(v34, (uint64_t (*)(void))sub_1DEB4FAF4);
  }
  else
  {
    uint64_t v56 = a9;
    char v55 = (void (**)(char *))(v51 + 16);
    unint64_t v54 = (void (**)(char *, uint64_t))(v25 + 8);
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v51 + 32);
    uint64_t v53 = (void (**)(char *, uint64_t))(v51 + 8);
    uint64_t v52 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
    unint64_t v71 = MEMORY[0x1E4FBC860];
    uint64_t v34 = (uint64_t)v70;
    id v49 = v22;
    while (1)
    {
      uint64_t v37 = (void (*)(uint64_t *, void))sub_1DFDFE760();
      (*v55)(v22);
      v37(v72, 0);
      uint64_t v38 = v60;
      v58(v60, v34, v24);
      sub_1DFDFE730();
      (*v54)(v38, v24);
      uint64_t v39 = *v35;
      (*v35)(v20, v22, v13);
      uint64_t v40 = v61;
      uint64_t v41 = v73;
      sub_1DEBC7310((uint64_t)v20, v62, v64, v65, v61, v56);
      if (v41) {
        break;
      }
      (*v53)(v20, v13);
      int v42 = (*v52)(v40, 1, v13);
      uint64_t v73 = 0;
      if (v42 == 1)
      {
        sub_1DEBC51B0(v40, (uint64_t (*)(void))sub_1DEBCABEC);
      }
      else
      {
        uint64_t v43 = v20;
        uint64_t v44 = v50;
        v39(v50, (char *)v40, v13);
        v39(v57, v44, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v71 = sub_1DEE17C94(0, *(void *)(v71 + 16) + 1, 1, v71);
        }
        unint64_t v46 = *(void *)(v71 + 16);
        unint64_t v45 = *(void *)(v71 + 24);
        uint64_t v20 = v43;
        if (v46 >= v45 >> 1) {
          unint64_t v71 = sub_1DEE17C94(v45 > 1, v46 + 1, 1, v71);
        }
        uint64_t v22 = v49;
        unint64_t v47 = v71;
        *(void *)(v71 + 16) = v46 + 1;
        v39((char *)(v47+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v46), v57, v13);
      }
      uint64_t v34 = (uint64_t)v70;
      uint64_t v36 = *(void *)v69;
      sub_1DFDFE720();
      if (v36 == v72[0]) {
        goto LABEL_3;
      }
    }
    (*v53)(v20, v13);
    sub_1DEBC51B0((uint64_t)v70, (uint64_t (*)(void))sub_1DEB4FAF4);
    swift_bridgeObjectRelease();
  }
  return v71;
}

void sub_1DEBCABEC(uint64_t a1)
{
}

void sub_1DEBCAC0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1DEBCACB0(255, (unint64_t *)&qword_1EBAD2EB0, type metadata accessor for TagFeedModel, sub_1DEBC4BE0, MEMORY[0x1E4FABD50]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1DEBCACB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1DEBCAD30()
{
  return sub_1DE94D89C((unint64_t *)&unk_1EBAD2F50, (void (*)(uint64_t))sub_1DEB0DFE4);
}

void sub_1DEBCAD64(uint64_t a1)
{
}

uint64_t sub_1DEBCAD84()
{
  return sub_1DE94D89C((unint64_t *)&unk_1EBAD1630, MEMORY[0x1E4F7F838]);
}

uint64_t sub_1DEBCADB8()
{
  return sub_1DE94D89C(&qword_1EBAD1628, MEMORY[0x1E4F7F838]);
}

uint64_t sub_1DEBCADEC()
{
  return sub_1DE94D89C((unint64_t *)&unk_1EBAE9290, MEMORY[0x1E4F7F3B8]);
}

uint64_t sub_1DEBCAE20()
{
  return sub_1DE94D89C((unint64_t *)&unk_1EBAE9280, MEMORY[0x1E4F7F3B8]);
}

uint64_t sub_1DEBCAE54()
{
  return sub_1DE94D89C(&qword_1EBAE9BC0, MEMORY[0x1E4F804D0]);
}

uint64_t sub_1DEBCAE88()
{
  return sub_1DE94D89C((unint64_t *)&unk_1EBAE9BB0, MEMORY[0x1E4F804D0]);
}

void sub_1DEBCAEBC(uint64_t a1)
{
}

uint64_t sub_1DEBCAEDC()
{
  return sub_1DE94D89C(&qword_1EBAE9A90, MEMORY[0x1E4F80490]);
}

uint64_t sub_1DEBCAF10()
{
  return sub_1DE94D89C((unint64_t *)&unk_1EBAE9A80, MEMORY[0x1E4F80490]);
}

void sub_1DEBCAF44(uint64_t a1)
{
}

void sub_1DEBCAF64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFF670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DEBCAFB8(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1DFDFFBE0();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v19 = v2;
      unint64_t v20 = v2 & 0xC000000000000001;
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if (v20)
        {
          uint64_t v6 = (void *)MEMORY[0x1E01EE240](v4 - 4, v2);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v6 = (void *)swift_unknownObjectRetain();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        id v8 = objc_msgSend(v6, sel_identifier);
        uint64_t v9 = sub_1DFDFDD20();
        uint64_t v11 = v10;

        id v12 = objc_msgSend(a2, sel_identifier);
        uint64_t v13 = sub_1DFDFDD20();
        uint64_t v15 = v14;

        if (v9 == v13 && v11 == v15)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          char v17 = 1;
          goto LABEL_21;
        }
        char v17 = sub_1DFDFFF50();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          ++v4;
          unint64_t v2 = v19;
          if (v7 != v3) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
  char v17 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v17 & 1;
}

uint64_t sub_1DEBCB180(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEBCB1E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DEBCB25C()
{
  uint64_t v1 = v0;
  unint64_t v2 = 0x6973736553707061;
  uint64_t v3 = type metadata accessor for EngagementEvent();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA32F04(v1, (uint64_t)v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      unint64_t v2 = 0x52656C6369747261;
      break;
    case 3u:
      unint64_t v2 = 0x676E456F69647561;
      break;
    case 4u:
      unint64_t v2 = 0x6769536C69616D65;
      break;
    case 5u:
      unint64_t v2 = 0x7765695664656566;
      break;
    case 6u:
      unint64_t v2 = 0x776F6C6C6F66;
      break;
    case 7u:
      unint64_t v2 = 0x776F6C6C6F666E75;
      break;
    case 8u:
      unint64_t v2 = 0x6E69776F6C6C6F66;
      break;
    case 9u:
      unint64_t v2 = 0x4C656C6369747261;
      break;
    case 0xAu:
      unint64_t v2 = 0x55656C6369747261;
      break;
    case 0xBu:
      unint64_t v2 = 0x53656C6369747261;
      break;
    case 0xCu:
      unint64_t v2 = 0xD000000000000019;
      break;
    case 0xDu:
      unint64_t v2 = 0x53656C6369747261;
      break;
    case 0xEu:
      unint64_t v2 = 0xD000000000000014;
      break;
    case 0xFu:
      unint64_t v2 = 0x6956656C7A7A7570;
      break;
    default:
      break;
  }
  sub_1DE9E9408((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for EngagementEvent);
  return v2;
}

uint64_t _s7NewsUI215EngagementEventO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  v452 = (uint64_t *)a1;
  v453 = (char *)a2;
  uint64_t v2 = sub_1DFDEAA50();
  uint64_t v442 = *(void *)(v2 - 8);
  uint64_t v443 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  v441 = (char *)&v359 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  v440 = (char *)&v359 - v5;
  uint64_t v6 = sub_1DFDEAD10();
  uint64_t v438 = *(void *)(v6 - 8);
  uint64_t v439 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  v437 = (char *)&v359 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v436 = (char *)&v359 - v9;
  uint64_t v435 = sub_1DFDEAFC0();
  uint64_t v434 = *(void *)(v435 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v435);
  v433 = (char *)&v359 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v432 = (char *)&v359 - v12;
  uint64_t v431 = sub_1DFDEC3F0();
  uint64_t v430 = *(void *)(v431 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v431);
  CGRect v386 = (char *)&v359 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  CGRect v385 = (char *)&v359 - v15;
  uint64_t v429 = sub_1DFDEABF0();
  uint64_t v428 = *(void *)(v429 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v429);
  v427 = (char *)&v359 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  v426 = (char *)&v359 - v18;
  uint64_t v425 = sub_1DFDEB210();
  uint64_t v424 = *(void *)(v425 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v425);
  v423 = (char *)&v359 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v422 = (char *)&v359 - v21;
  uint64_t v421 = sub_1DFDEABB0();
  uint64_t v420 = *(void *)(v421 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v421);
  v419 = (char *)&v359 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  v418 = (char *)&v359 - v24;
  uint64_t v448 = sub_1DFDEB290();
  uint64_t v417 = *(void *)(v448 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v448);
  v416 = (char *)&v359 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  v415 = (char *)&v359 - v27;
  uint64_t v447 = sub_1DFDEA670();
  uint64_t v414 = *(void *)(v447 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v447);
  v413 = (char *)&v359 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  CGRect v412 = (char *)&v359 - v30;
  uint64_t v446 = sub_1DFDEAD50();
  uint64_t v449 = *(void *)(v446 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v446);
  CGRect v390 = (char *)&v359 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  CGRect v411 = (char *)&v359 - v33;
  uint64_t v445 = sub_1DFDEACD0();
  uint64_t v410 = *(void *)(v445 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v445);
  CGRect v389 = (char *)&v359 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  CGRect v409 = (char *)&v359 - v36;
  uint64_t v408 = sub_1DFDEAC60();
  uint64_t v407 = *(void *)(v408 - 8);
  uint64_t v37 = MEMORY[0x1F4188790](v408);
  CGRect v406 = (char *)&v359 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  CGRect v405 = (char *)&v359 - v39;
  uint64_t v404 = sub_1DFDEB1B0();
  uint64_t v403 = *(void *)(v404 - 8);
  uint64_t v40 = MEMORY[0x1F4188790](v404);
  CGRect v402 = (char *)&v359 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  CGRect v401 = (char *)&v359 - v42;
  uint64_t v43 = sub_1DFDE8920();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v450 = v43;
  uint64_t v451 = v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  CGRect v384 = (char *)&v359 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  CGRect v382 = (char *)&v359 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  CGRect v383 = (char *)&v359 - v50;
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  CGRect v380 = (char *)&v359 - v52;
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  CGRect v381 = (char *)&v359 - v54;
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  CGRect v378 = (char *)&v359 - v56;
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  CGRect v379 = (char *)&v359 - v58;
  uint64_t v59 = MEMORY[0x1F4188790](v57);
  CGRect v376 = (char *)&v359 - v60;
  uint64_t v61 = MEMORY[0x1F4188790](v59);
  CGRect v377 = (char *)&v359 - v62;
  uint64_t v63 = MEMORY[0x1F4188790](v61);
  CGRect v374 = (char *)&v359 - v64;
  uint64_t v65 = MEMORY[0x1F4188790](v63);
  CGRect v375 = (char *)&v359 - v66;
  uint64_t v67 = MEMORY[0x1F4188790](v65);
  long long v372 = (char *)&v359 - v68;
  uint64_t v69 = MEMORY[0x1F4188790](v67);
  CGRect v373 = (char *)&v359 - v70;
  uint64_t v71 = MEMORY[0x1F4188790](v69);
  char v370 = (char *)&v359 - v72;
  uint64_t v73 = MEMORY[0x1F4188790](v71);
  char v371 = (char *)&v359 - v74;
  uint64_t v75 = MEMORY[0x1F4188790](v73);
  uint64_t v368 = (char *)&v359 - v76;
  uint64_t v77 = MEMORY[0x1F4188790](v75);
  double v369 = (char *)&v359 - v78;
  uint64_t v79 = MEMORY[0x1F4188790](v77);
  double v366 = (char *)&v359 - v80;
  uint64_t v81 = MEMORY[0x1F4188790](v79);
  double v367 = (char *)&v359 - v82;
  uint64_t v83 = MEMORY[0x1F4188790](v81);
  double v364 = (char *)&v359 - v84;
  uint64_t v85 = MEMORY[0x1F4188790](v83);
  double v365 = (char *)&v359 - v86;
  uint64_t v87 = MEMORY[0x1F4188790](v85);
  double v362 = (char *)&v359 - v88;
  uint64_t v89 = MEMORY[0x1F4188790](v87);
  double v363 = (char *)&v359 - v90;
  uint64_t v91 = MEMORY[0x1F4188790](v89);
  double v361 = (char *)&v359 - v92;
  uint64_t v93 = MEMORY[0x1F4188790](v91);
  double v360 = (char *)&v359 - v94;
  MEMORY[0x1F4188790](v93);
  double v359 = (char *)&v359 - v95;
  uint64_t v444 = sub_1DFDEB580();
  uint64_t v400 = *(void *)(v444 - 8);
  uint64_t v96 = MEMORY[0x1F4188790](v444);
  CGRect v388 = (char *)&v359 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v96);
  CGRect v387 = (char *)&v359 - v98;
  uint64_t v99 = type metadata accessor for EngagementEvent();
  uint64_t v100 = MEMORY[0x1F4188790](v99);
  uint64_t v399 = (uint64_t)&v359 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = MEMORY[0x1F4188790](v100);
  uint64_t v398 = (uint64_t)&v359 - v103;
  uint64_t v104 = MEMORY[0x1F4188790](v102);
  uint64_t v397 = (uint64_t)&v359 - v105;
  uint64_t v106 = MEMORY[0x1F4188790](v104);
  uint64_t v396 = (uint64_t)&v359 - v107;
  uint64_t v108 = MEMORY[0x1F4188790](v106);
  uint64_t v395 = (uint64_t)&v359 - v109;
  uint64_t v110 = MEMORY[0x1F4188790](v108);
  uint64_t v394 = (uint64_t)&v359 - v111;
  uint64_t v112 = MEMORY[0x1F4188790](v110);
  uint64_t v393 = (uint64_t)&v359 - v113;
  uint64_t v114 = MEMORY[0x1F4188790](v112);
  uint64_t v392 = (uint64_t)&v359 - v115;
  uint64_t v116 = MEMORY[0x1F4188790](v114);
  uint64_t v118 = (uint64_t *)((char *)&v359 - v117);
  uint64_t v119 = MEMORY[0x1F4188790](v116);
  uint64_t v121 = (uint64_t *)((char *)&v359 - v120);
  uint64_t v122 = MEMORY[0x1F4188790](v119);
  uint64_t v391 = (uint64_t)&v359 - v123;
  uint64_t v124 = MEMORY[0x1F4188790](v122);
  unint64_t v126 = (char *)&v359 - v125;
  uint64_t v127 = MEMORY[0x1F4188790](v124);
  uint64_t v129 = (char *)&v359 - v128;
  uint64_t v130 = MEMORY[0x1F4188790](v127);
  uint64_t v132 = (char *)&v359 - v131;
  uint64_t v133 = MEMORY[0x1F4188790](v130);
  uint64_t v135 = (char *)&v359 - v134;
  MEMORY[0x1F4188790](v133);
  id v137 = (char *)&v359 - v136;
  sub_1DEBCF20C();
  uint64_t v139 = MEMORY[0x1F4188790](v138 - 8);
  uint64_t v141 = (char *)&v359 - ((v140 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = (uint64_t)&v141[*(int *)(v139 + 56)];
  sub_1DEA32F04((uint64_t)v452, (uint64_t)v141);
  v452 = (uint64_t *)v142;
  sub_1DEA32F04((uint64_t)v453, v142);
  v453 = v141;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v143 = (uint64_t)v453;
      sub_1DEA32F04((uint64_t)v453, (uint64_t)v135);
      uint64_t v145 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*(void (**)(char *, uint64_t))(v403 + 8))(v135, v404);
        goto LABEL_78;
      }
      uint64_t v146 = v403;
      uint64_t v147 = *(void (**)(char *, char *, uint64_t))(v403 + 32);
      uint64_t v148 = v404;
      v147(v401, v135, v404);
      v147(v402, (char *)v145, v148);
      uint64_t v149 = v361;
      sub_1DFDEB1A0();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v151 = v150;
      uint64_t v152 = *(void (**)(char *, uint64_t))(v451 + 8);
      uint64_t v153 = v149;
      uint64_t v154 = v450;
      v152(v153, v450);
      uint64_t v155 = v363;
      sub_1DFDEB1A0();
      uint64_t v156 = sub_1DFDE8910();
      uint64_t v158 = v157;
      v152(v155, v154);
      if (v452 == (uint64_t *)v156 && v151 == v158) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v146 + 8);
      v343(v402, v148);
      double v344 = (uint64_t *)&v433;
      goto LABEL_107;
    case 2u:
      uint64_t v143 = (uint64_t)v453;
      sub_1DEA32F04((uint64_t)v453, (uint64_t)v132);
      uint64_t v160 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        (*(void (**)(char *, uint64_t))(v407 + 8))(v132, v408);
        goto LABEL_78;
      }
      uint64_t v161 = v407;
      uint64_t v162 = *(void (**)(char *, char *, uint64_t))(v407 + 32);
      uint64_t v148 = v408;
      v162(v405, v132, v408);
      v162(v406, (char *)v160, v148);
      uint64_t v163 = v362;
      sub_1DFDEAC40();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v165 = v164;
      uint64_t v166 = *(void (**)(char *, uint64_t))(v451 + 8);
      uint64_t v167 = v163;
      uint64_t v168 = v450;
      v166(v167, v450);
      uint64_t v169 = v365;
      sub_1DFDEAC40();
      uint64_t v170 = sub_1DFDE8910();
      uint64_t v172 = v171;
      v166(v169, v168);
      if (v452 == (uint64_t *)v170 && v165 == v172) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v161 + 8);
      v343(v406, v148);
      double v344 = (uint64_t *)&v437;
      goto LABEL_107;
    case 3u:
      sub_1DEA32F04((uint64_t)v453, (uint64_t)v129);
      uint64_t v173 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        (*(void (**)(char *, uint64_t))(v410 + 8))(v129, v445);
        char v159 = 0;
        double v327 = sub_1DEBCF20C;
        uint64_t v143 = (uint64_t)v453;
        goto LABEL_112;
      }
      uint64_t v174 = v410;
      uint64_t v175 = *(void (**)(char *, char *, uint64_t))(v410 + 32);
      uint64_t v176 = v445;
      v175(v409, v129, v445);
      v175(v389, (char *)v173, v176);
      uint64_t v177 = v364;
      sub_1DFDEACB0();
      uint64_t v178 = sub_1DFDE8910();
      uint64_t v180 = v179;
      uint64_t v181 = *(void (**)(char *, uint64_t))(v451 + 8);
      uint64_t v182 = v177;
      uint64_t v183 = v450;
      v181(v182, v450);
      uint64_t v184 = v367;
      sub_1DFDEACB0();
      uint64_t v185 = sub_1DFDE8910();
      uint64_t v187 = v186;
      v181(v184, v183);
      if (v178 == v185 && v180 == v187) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      uint64_t v143 = (uint64_t)v453;
      double v345 = v389;
      uint64_t v346 = v445;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v347 = *(void (**)(char *, uint64_t))(v174 + 8);
      v347(v345, v346);
      v347(v409, v346);
      goto LABEL_110;
    case 4u:
      uint64_t v143 = (uint64_t)v453;
      sub_1DEA32F04((uint64_t)v453, (uint64_t)v126);
      uint64_t v188 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        (*(void (**)(char *, uint64_t))(v449 + 8))(v126, v446);
        goto LABEL_78;
      }
      uint64_t v189 = *(void (**)(char *, char *, uint64_t))(v449 + 32);
      uint64_t v190 = v446;
      v189(v411, v126, v446);
      v189(v390, (char *)v188, v190);
      uint64_t v191 = v366;
      sub_1DFDEAD40();
      uint64_t v192 = sub_1DFDE8910();
      uint64_t v194 = v193;
      uint64_t v195 = *(void (**)(char *, uint64_t))(v451 + 8);
      unint64_t v196 = v191;
      uint64_t v197 = v450;
      v195(v196, v450);
      uint64_t v198 = v369;
      sub_1DFDEAD40();
      uint64_t v199 = sub_1DFDE8910();
      uint64_t v201 = v200;
      v195(v198, v197);
      if (v192 == v199 && v194 == v201) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      double v348 = v390;
      uint64_t v349 = v446;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v350 = *(void (**)(char *, uint64_t))(v449 + 8);
      v350(v348, v349);
      v350(v411, v349);
      goto LABEL_110;
    case 5u:
      uint64_t v143 = (uint64_t)v453;
      uint64_t v202 = v391;
      sub_1DEA32F04((uint64_t)v453, v391);
      uint64_t v203 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        (*(void (**)(uint64_t, uint64_t))(v414 + 8))(v202, v447);
        goto LABEL_78;
      }
      uint64_t v204 = v414;
      unint64_t v205 = *(void (**)(char *, uint64_t, uint64_t))(v414 + 32);
      uint64_t v206 = v202;
      uint64_t v207 = v447;
      v205(v412, v206, v447);
      v205(v413, v203, v207);
      unint64_t v208 = v368;
      sub_1DFDEA660();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v210 = v209;
      uint64_t v211 = v450;
      uint64_t v212 = *(void (**)(char *, uint64_t))(v451 + 8);
      v212(v208, v450);
      uint64_t v213 = v371;
      sub_1DFDEA660();
      uint64_t v214 = sub_1DFDE8910();
      uint64_t v216 = v215;
      v212(v213, v211);
      if (v452 == (uint64_t *)v214 && v210 == v216) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      uint64_t v351 = v447;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v204 + 8);
      v343(v413, v351);
      double v352 = &v444;
      goto LABEL_94;
    case 6u:
      uint64_t v143 = (uint64_t)v453;
      sub_1DEA32F04((uint64_t)v453, (uint64_t)v121);
      uint64_t v218 = *v121;
      uint64_t v217 = v121[1];
      uint64_t v219 = v452;
      if (swift_getEnumCaseMultiPayload() == 6) {
        goto LABEL_25;
      }
      goto LABEL_29;
    case 7u:
      uint64_t v143 = (uint64_t)v453;
      sub_1DEA32F04((uint64_t)v453, (uint64_t)v118);
      uint64_t v218 = *v118;
      uint64_t v217 = v118[1];
      uint64_t v219 = v452;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
LABEL_29:
        swift_bridgeObjectRelease();
        goto LABEL_78;
      }
LABEL_25:
      uint64_t v220 = *v219;
      uint64_t v221 = v219[1];
      if (v218 == v220 && v217 == v221) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_110;
    case 8u:
      uint64_t v143 = (uint64_t)v453;
      uint64_t v222 = v392;
      sub_1DEA32F04((uint64_t)v453, v392);
      uint64_t v223 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        (*(void (**)(uint64_t, uint64_t))(v417 + 8))(v222, v448);
        goto LABEL_78;
      }
      uint64_t v224 = v417;
      uint64_t v225 = *(void (**)(char *, uint64_t, uint64_t))(v417 + 32);
      uint64_t v226 = v448;
      v225(v415, v222, v448);
      v225(v416, v223, v226);
      uint64_t v227 = v370;
      sub_1DFDEB280();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v229 = v228;
      uint64_t v230 = v450;
      uint64_t v231 = *(void (**)(char *, uint64_t))(v451 + 8);
      v231(v227, v450);
      uint64_t v232 = v373;
      sub_1DFDEB280();
      uint64_t v233 = sub_1DFDE8910();
      uint64_t v235 = v234;
      v231(v232, v230);
      if (v452 == (uint64_t *)v233 && v229 == v235) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      uint64_t v351 = v448;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v224 + 8);
      v343(v416, v351);
      double v352 = &v447;
LABEL_94:
      double v353 = (char *)*(v352 - 32);
      uint64_t v354 = v351;
      goto LABEL_109;
    case 9u:
      uint64_t v143 = (uint64_t)v453;
      uint64_t v236 = v393;
      sub_1DEA32F04((uint64_t)v453, v393);
      uint64_t v237 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 9)
      {
        (*(void (**)(uint64_t, uint64_t))(v420 + 8))(v236, v421);
        goto LABEL_78;
      }
      uint64_t v238 = v420;
      uint64_t v239 = *(void (**)(char *, uint64_t, uint64_t))(v420 + 32);
      uint64_t v148 = v421;
      v239(v418, v236, v421);
      v239(v419, v237, v148);
      uint64_t v240 = v372;
      sub_1DFDEABA0();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v242 = v241;
      uint64_t v243 = *(void (**)(char *, uint64_t))(v451 + 8);
      uint64_t v244 = v240;
      uint64_t v245 = v450;
      v243(v244, v450);
      uint64_t v246 = v375;
      sub_1DFDEABA0();
      uint64_t v247 = sub_1DFDE8910();
      uint64_t v249 = v248;
      v243(v246, v245);
      if (v452 == (uint64_t *)v247 && v242 == v249) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v238 + 8);
      v343(v419, v148);
      double v344 = &v450;
      goto LABEL_107;
    case 0xAu:
      uint64_t v143 = (uint64_t)v453;
      uint64_t v250 = v394;
      sub_1DEA32F04((uint64_t)v453, v394);
      uint64_t v251 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        (*(void (**)(uint64_t, uint64_t))(v424 + 8))(v250, v425);
        goto LABEL_78;
      }
      uint64_t v252 = v424;
      uint64_t v253 = *(void (**)(char *, uint64_t, uint64_t))(v424 + 32);
      uint64_t v148 = v425;
      v253(v422, v250, v425);
      v253(v423, v251, v148);
      uint64_t v254 = v374;
      sub_1DFDEB200();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v256 = v255;
      uint64_t v257 = *(void (**)(char *, uint64_t))(v451 + 8);
      uint64_t v258 = v254;
      uint64_t v259 = v450;
      v257(v258, v450);
      uint64_t v260 = v377;
      sub_1DFDEB200();
      uint64_t v261 = sub_1DFDE8910();
      uint64_t v263 = v262;
      v257(v260, v259);
      if (v452 == (uint64_t *)v261 && v256 == v263) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v252 + 8);
      v343(v423, v148);
      double v344 = v454;
      goto LABEL_107;
    case 0xBu:
      uint64_t v143 = (uint64_t)v453;
      uint64_t v264 = v395;
      sub_1DEA32F04((uint64_t)v453, v395);
      uint64_t v265 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 11)
      {
        (*(void (**)(uint64_t, uint64_t))(v428 + 8))(v264, v429);
        goto LABEL_78;
      }
      uint64_t v266 = v428;
      uint64_t v267 = *(void (**)(char *, uint64_t, uint64_t))(v428 + 32);
      uint64_t v148 = v429;
      v267(v426, v264, v429);
      v267(v427, v265, v148);
      uint64_t v268 = v376;
      sub_1DFDEABE0();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v270 = v269;
      uint64_t v271 = *(void (**)(char *, uint64_t))(v451 + 8);
      uint64_t v272 = v268;
      uint64_t v273 = v450;
      v271(v272, v450);
      uint64_t v274 = v379;
      sub_1DFDEABE0();
      uint64_t v275 = sub_1DFDE8910();
      uint64_t v277 = v276;
      v271(v274, v273);
      if (v452 == (uint64_t *)v275 && v270 == v277) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v266 + 8);
      v343(v427, v148);
      double v344 = (uint64_t *)&v455;
      goto LABEL_107;
    case 0xCu:
      uint64_t v143 = (uint64_t)v453;
      uint64_t v278 = v396;
      sub_1DEA32F04((uint64_t)v453, v396);
      uint64_t v279 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 12)
      {
        (*(void (**)(uint64_t, uint64_t))(v430 + 8))(v278, v431);
        goto LABEL_78;
      }
      uint64_t v280 = v430;
      uint64_t v281 = *(void (**)(char *, uint64_t, uint64_t))(v430 + 32);
      uint64_t v282 = v385;
      uint64_t v283 = v278;
      uint64_t v284 = v431;
      v281(v385, v283, v431);
      uint64_t v285 = v386;
      v281(v386, v279, v284);
      sub_1DEBCF270();
      sub_1DFDFE170();
      sub_1DFDFE170();
      if (v454[2] == v454[0] && v454[3] == v454[1]) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v355 = *(void (**)(char *, uint64_t))(v280 + 8);
      v355(v285, v284);
      v355(v282, v284);
      goto LABEL_110;
    case 0xDu:
      uint64_t v143 = (uint64_t)v453;
      uint64_t v286 = v397;
      sub_1DEA32F04((uint64_t)v453, v397);
      uint64_t v287 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 13)
      {
        (*(void (**)(uint64_t, uint64_t))(v434 + 8))(v286, v435);
        goto LABEL_78;
      }
      uint64_t v288 = v434;
      uint64_t v289 = *(void (**)(char *, uint64_t, uint64_t))(v434 + 32);
      uint64_t v148 = v435;
      v289(v432, v286, v435);
      v289(v433, v287, v148);
      uint64_t v290 = v378;
      sub_1DFDEAFB0();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v292 = v291;
      uint64_t v293 = *(void (**)(char *, uint64_t))(v451 + 8);
      CGFloat v294 = v290;
      uint64_t v295 = v450;
      v293(v294, v450);
      uint64_t v296 = v381;
      sub_1DFDEAFB0();
      uint64_t v297 = sub_1DFDE8910();
      uint64_t v299 = v298;
      v293(v296, v295);
      if (v452 == (uint64_t *)v297 && v292 == v299) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v288 + 8);
      v343(v433, v148);
      double v344 = &v456;
      goto LABEL_107;
    case 0xEu:
      uint64_t v143 = (uint64_t)v453;
      uint64_t v300 = v398;
      sub_1DEA32F04((uint64_t)v453, v398);
      uint64_t v301 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 14)
      {
        uint64_t v329 = v438;
        uint64_t v328 = v439;
        goto LABEL_77;
      }
      uint64_t v302 = v438;
      uint64_t v148 = v439;
      CGRect v303 = *(void (**)(char *, uint64_t, uint64_t))(v438 + 32);
      v303(v436, v300, v439);
      v303(v437, v301, v148);
      uint64_t v304 = v380;
      sub_1DFDEAD00();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v306 = v305;
      char v307 = *(void (**)(char *, uint64_t))(v451 + 8);
      double v308 = v304;
      uint64_t v309 = v450;
      v307(v308, v450);
      double v310 = v383;
      sub_1DFDEAD00();
      uint64_t v311 = sub_1DFDE8910();
      uint64_t v313 = v312;
      v307(v310, v309);
      if (v452 == (uint64_t *)v311 && v306 == v313) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v302 + 8);
      v343(v437, v148);
      double v344 = &v457;
LABEL_107:
      double v353 = (char *)*(v344 - 32);
      goto LABEL_108;
    case 0xFu:
      uint64_t v143 = (uint64_t)v453;
      uint64_t v300 = v399;
      sub_1DEA32F04((uint64_t)v453, v399);
      uint64_t v314 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload() != 15)
      {
        uint64_t v329 = v442;
        uint64_t v328 = v443;
LABEL_77:
        (*(void (**)(uint64_t, uint64_t))(v329 + 8))(v300, v328);
        goto LABEL_78;
      }
      uint64_t v315 = v442;
      uint64_t v148 = v443;
      double v316 = *(void (**)(char *, uint64_t, uint64_t))(v442 + 32);
      v316(v440, v300, v443);
      v316(v441, v314, v148);
      double v317 = v382;
      sub_1DFDEAA40();
      v452 = (uint64_t *)sub_1DFDE8910();
      uint64_t v319 = v318;
      uint64_t v320 = *(void (**)(char *, uint64_t))(v451 + 8);
      uint64_t v321 = v317;
      uint64_t v322 = v450;
      v320(v321, v450);
      float v323 = v384;
      sub_1DFDEAA40();
      uint64_t v324 = sub_1DFDE8910();
      uint64_t v326 = v325;
      v320(v323, v322);
      if (v452 == (uint64_t *)v324 && v319 == v326) {
        char v159 = 1;
      }
      else {
        char v159 = sub_1DFDFFF50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v343 = *(void (**)(char *, uint64_t))(v315 + 8);
      v343(v441, v148);
      double v353 = v440;
LABEL_108:
      uint64_t v354 = v148;
LABEL_109:
      v343(v353, v354);
      goto LABEL_110;
    default:
      uint64_t v143 = (uint64_t)v453;
      sub_1DEA32F04((uint64_t)v453, (uint64_t)v137);
      uint64_t v144 = (uint64_t)v452;
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v400 + 8))(v137, v444);
LABEL_78:
        char v159 = 0;
        double v330 = sub_1DEBCF20C;
      }
      else
      {
        uint64_t v331 = v400;
        double v332 = *(void (**)(char *, char *, uint64_t))(v400 + 32);
        uint64_t v333 = v444;
        v332(v387, v137, v444);
        v332(v388, (char *)v144, v333);
        double v334 = v359;
        sub_1DFDEB570();
        v452 = (uint64_t *)sub_1DFDE8910();
        uint64_t v336 = v335;
        uint64_t v337 = v450;
        double v338 = *(void (**)(char *, uint64_t))(v451 + 8);
        v338(v334, v450);
        double v339 = v360;
        sub_1DFDEB570();
        uint64_t v340 = sub_1DFDE8910();
        uint64_t v342 = v341;
        v338(v339, v337);
        if (v452 == (uint64_t *)v340 && v336 == v342) {
          char v159 = 1;
        }
        else {
          char v159 = sub_1DFDFFF50();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v357 = *(void (**)(char *, uint64_t))(v331 + 8);
        uint64_t v358 = v444;
        v357(v388, v444);
        v357(v387, v358);
LABEL_110:
        double v330 = (void (*)())type metadata accessor for EngagementEvent;
      }
      double v327 = v330;
LABEL_112:
      sub_1DE9E9408(v143, (uint64_t (*)(void))v327);
      return v159 & 1;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EngagementEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = sub_1DFDEB1B0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 2u:
        uint64_t v9 = sub_1DFDEAC60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 3u:
        uint64_t v10 = sub_1DFDEACD0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 4u:
        uint64_t v11 = sub_1DFDEAD50();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        break;
      case 5u:
        uint64_t v12 = sub_1DFDEA670();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        break;
      case 6u:
      case 7u:
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v14 = sub_1DFDEB290();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        break;
      case 9u:
        uint64_t v15 = sub_1DFDEABB0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        break;
      case 0xAu:
        uint64_t v16 = sub_1DFDEB210();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        break;
      case 0xBu:
        uint64_t v17 = sub_1DFDEABF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        break;
      case 0xCu:
        uint64_t v18 = sub_1DFDEC3F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        break;
      case 0xDu:
        uint64_t v19 = sub_1DFDEAFC0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        break;
      case 0xEu:
        uint64_t v20 = sub_1DFDEAD10();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        break;
      case 0xFu:
        uint64_t v21 = sub_1DFDEAA50();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        break;
      default:
        uint64_t v6 = sub_1DFDEB580();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for EngagementEvent(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DE9E9408((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for EngagementEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v5 = sub_1DFDEB1B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
      case 2u:
        uint64_t v6 = sub_1DFDEAC60();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
      case 3u:
        uint64_t v7 = sub_1DFDEACD0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 4u:
        uint64_t v8 = sub_1DFDEAD50();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 5u:
        uint64_t v9 = sub_1DFDEA670();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 6u:
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v10 = sub_1DFDEB290();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 9u:
        uint64_t v11 = sub_1DFDEABB0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        break;
      case 0xAu:
        uint64_t v12 = sub_1DFDEB210();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        break;
      case 0xBu:
        uint64_t v13 = sub_1DFDEABF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        break;
      case 0xCu:
        uint64_t v14 = sub_1DFDEC3F0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        break;
      case 0xDu:
        uint64_t v15 = sub_1DFDEAFC0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        break;
      case 0xEu:
        uint64_t v16 = sub_1DFDEAD10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        break;
      case 0xFu:
        uint64_t v17 = sub_1DFDEAA50();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        break;
      default:
        uint64_t v4 = sub_1DFDEB580();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1DFDEB580();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_17;
    case 1u:
      uint64_t v7 = sub_1DFDEB1B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_17;
    case 2u:
      uint64_t v8 = sub_1DFDEAC60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_17;
    case 3u:
      uint64_t v9 = sub_1DFDEACD0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_17;
    case 4u:
      uint64_t v10 = sub_1DFDEAD50();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      goto LABEL_17;
    case 5u:
      uint64_t v11 = sub_1DFDEA670();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      goto LABEL_17;
    case 8u:
      uint64_t v12 = sub_1DFDEB290();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_17;
    case 9u:
      uint64_t v13 = sub_1DFDEABB0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_17;
    case 0xAu:
      uint64_t v14 = sub_1DFDEB210();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_17;
    case 0xBu:
      uint64_t v15 = sub_1DFDEABF0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      goto LABEL_17;
    case 0xCu:
      uint64_t v16 = sub_1DFDEC3F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      goto LABEL_17;
    case 0xDu:
      uint64_t v17 = sub_1DFDEAFC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      goto LABEL_17;
    case 0xEu:
      uint64_t v18 = sub_1DFDEAD10();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      goto LABEL_17;
    case 0xFu:
      uint64_t v19 = sub_1DFDEAA50();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DE9E9408((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for EngagementEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1DFDEB580();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v7 = sub_1DFDEB1B0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v8 = sub_1DFDEAC60();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v9 = sub_1DFDEACD0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v10 = sub_1DFDEAD50();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v11 = sub_1DFDEA670();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v12 = sub_1DFDEB290();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v13 = sub_1DFDEABB0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v14 = sub_1DFDEB210();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        uint64_t v15 = sub_1DFDEABF0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v16 = sub_1DFDEC3F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        uint64_t v17 = sub_1DFDEAFC0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        uint64_t v18 = sub_1DFDEAD10();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        uint64_t v19 = sub_1DFDEAA50();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1DEBCF20C()
{
  if (!qword_1EAC21510)
  {
    type metadata accessor for EngagementEvent();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC21510);
    }
  }
}

unint64_t sub_1DEBCF270()
{
  unint64_t result = qword_1EBAC0400;
  if (!qword_1EBAC0400)
  {
    sub_1DFDEC3F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAC0400);
  }
  return result;
}

void *sub_1DEBCF2C8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1DEBCFACC(0, (unint64_t *)&qword_1EBAA7530, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAAA60]);
  swift_allocObject();
  v3[2] = sub_1DFDED010();
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = a3;
  uint64_t v8 = self;
  id v9 = a1;
  swift_unknownObjectRetain();
  id v10 = objc_msgSend(v8, sel_defaultCenter);
  uint64_t v11 = (void *)*MEMORY[0x1E4F7E098];
  swift_retain();
  id v12 = v11;
  objc_msgSend(v10, sel_addObserver_selector_name_object_, v4, sel_purchaseListDidChange, v12, 0);

  swift_release();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1DEBCF400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = *(void *)(a5 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1DF08AD4C(a6, v15, a3, a4, a7, (void (*)(void))sub_1DEB1D34C, v14);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

void sub_1DEBCF4DC(id a1, char a2, void (*a3)(id), uint64_t a4, uint64_t a5, void (*a6)(void *))
{
  if (a2)
  {
    id v11 = a1;
    a3(a1);
    sub_1DEBCFB90(a1, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    id v9 = sub_1DF08A880((unint64_t)a1, a5);
    swift_bridgeObjectRelease();
    a6(v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DEBCF5B8()
{
  swift_release();

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExternalSubscriberAdSegmentProvider()
{
  return self;
}

uint64_t sub_1DEBCF624()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 24), sel_purchaseLookUpEntriesByTagID);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1DEBCFB18();
    uint64_t v3 = sub_1DFDFDAF0();
  }
  else
  {
    uint64_t v3 = sub_1DF349BE0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DEBCF7B4(v4, v3);
  MEMORY[0x1F4188790](v5);
  sub_1DEBCFA50();
  swift_allocObject();
  uint64_t v6 = sub_1DFDEDF30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DEBCF7A8()
{
  return MEMORY[0x1E4F7B150];
}

uint64_t sub_1DEBCF7B4(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  while (1)
  {
    while (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      if (*(void *)(a2 + 16)) {
        goto LABEL_25;
      }
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v29) {
            goto LABEL_33;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    if (*(void *)(a2 + 16))
    {
LABEL_25:
      uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      swift_bridgeObjectRetain_n();
      unint64_t v17 = sub_1DEA6D930(v16, v15);
      if ((v18 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      id v19 = *(id *)(*(void *)(a2 + 56) + 8 * v17);
      swift_bridgeObjectRelease();
      uint64_t v20 = v3;
      id v21 = objc_msgSend(v19, sel_purchaseType);

      BOOL v22 = v21 == (id)2;
      uint64_t v3 = v20;
      if (v22)
      {
        uint64_t v23 = v28;
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          unint64_t result = sub_1DEA9B358(0, *(void *)(v28 + 16) + 1, 1);
          uint64_t v23 = v28;
        }
        unint64_t v25 = *(void *)(v23 + 16);
        unint64_t v24 = *(void *)(v23 + 24);
        unint64_t v26 = v25 + 1;
        if (v25 >= v24 >> 1)
        {
          unint64_t result = sub_1DEA9B358(v24 > 1, v25 + 1, 1);
          unint64_t v26 = v25 + 1;
          uint64_t v23 = v28;
        }
        *(void *)(v23 + 16) = v26;
        uint64_t v28 = v23;
        uint64_t v27 = v23 + 16 * v25;
        *(void *)(v27 + 32) = v16;
        *(void *)(v27 + 40) = v15;
        uint64_t v3 = v20;
      }
      else
      {
LABEL_5:
        unint64_t result = swift_bridgeObjectRelease();
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v29)
  {
LABEL_33:
    swift_release();
    return v28;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v29) {
      goto LABEL_33;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1DEBCFA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBCF400(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

void sub_1DEBCFA50()
{
  if (!qword_1EBAA7920)
  {
    sub_1DEBCFACC(255, (unint64_t *)&qword_1EBABA8F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1DFDEDFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA7920);
    }
  }
}

void sub_1DEBCFACC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1DEBCFB18()
{
  unint64_t result = qword_1EBABADC0;
  if (!qword_1EBABADC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBABADC0);
  }
  return result;
}

uint64_t sub_1DEBCFB58()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DEBCFB90(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FollowingNotificationsPrewarm(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1DEBCFE94();
      uint64_t v7 = *(int *)(v6 + 48);
      unint64_t v8 = (char *)a1 + v7;
      unint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1DFDFC870();
      uint64_t v11 = *(void *)(v10 - 8);
      unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v9, 1, v10))
      {
        sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      uint64_t v15 = sub_1DFDFC870();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v16 + 16))(a1, a2, v15);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1DEBCFE94()
{
  if (!qword_1EAC2F9F0)
  {
    sub_1DEABEF04(255, (unint64_t *)&unk_1EAC21630, (uint64_t (*)(uint64_t))type metadata accessor for FollowingTagModel, MEMORY[0x1E4FBB320]);
    sub_1DEABEF04(255, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC2F9F0);
    }
  }
}

uint64_t destroy for FollowingNotificationsPrewarm(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    sub_1DEBCFE94();
    a1 += *(int *)(v2 + 48);
    uint64_t v3 = sub_1DFDFC870();
    uint64_t v6 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
  }
  else
  {
    uint64_t v3 = sub_1DFDFC870();
    uint64_t v6 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
  }
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  return v5(a1, v3);
}

void *initializeWithCopy for FollowingNotificationsPrewarm(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1DEBCFE94();
    uint64_t v5 = *(int *)(v4 + 48);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1DFDFC870();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v10(v7, 1, v8))
    {
      sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
      memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  else
  {
    uint64_t v12 = sub_1DFDFC870();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
    {
      sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(a1, a2, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for FollowingNotificationsPrewarm(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DEB00924((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1DEBCFE94();
      uint64_t v5 = *(int *)(v4 + 48);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_1DFDFC870();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      swift_bridgeObjectRetain();
      if (v10(v7, 1, v8))
      {
        sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
        memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    else
    {
      uint64_t v12 = sub_1DFDFC870();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(a1, a2, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for FollowingNotificationsPrewarm(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1DEBCFE94();
    uint64_t v5 = *(int *)(v4 + 48);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1DFDFC870();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  else
  {
    uint64_t v11 = sub_1DFDFC870();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for FollowingNotificationsPrewarm(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DEB00924((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1DEBCFE94();
      uint64_t v5 = *(int *)(v4 + 48);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_1DFDFC870();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    else
    {
      uint64_t v11 = sub_1DFDFC870();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        sub_1DEABEF04(0, &qword_1EBAE9F80, MEMORY[0x1E4F81588], MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PuzzleSettingsGroup()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PuzzleSettingsGroup(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PuzzleSettingsGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PuzzleSettingsGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleSettingsGroup()
{
  return &type metadata for PuzzleSettingsGroup;
}

uint64_t sub_1DEBD0D1C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_1DFDFDE20();
  swift_bridgeObjectRelease();
  if (v2[3])
  {
    sub_1DFE00120();
    swift_bridgeObjectRetain();
    sub_1DFDFDE20();
    swift_bridgeObjectRelease();
    if (v2[5])
    {
LABEL_3:
      sub_1DFE00120();
      swift_bridgeObjectRetain();
      sub_1DFDFDE20();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1DFE00120();
    if (v2[5]) {
      goto LABEL_3;
    }
  }
  sub_1DFE00120();
LABEL_6:
  uint64_t v4 = v2[6];
  swift_bridgeObjectRetain();
  sub_1DEBD0F50(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEBD0E1C()
{
  sub_1DFE00100();
  sub_1DEBD0D1C((uint64_t)v1);
  return sub_1DFE00140();
}

uint64_t sub_1DEBD0E60()
{
  sub_1DFE00100();
  sub_1DEBD0D1C((uint64_t)v1);
  return sub_1DFE00140();
}

uint64_t sub_1DEBD0E9C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_1DEBD13DC(v5, v7) & 1;
}

unint64_t sub_1DEBD0EFC()
{
  unint64_t result = qword_1EAC21518;
  if (!qword_1EAC21518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21518);
  }
  return result;
}

uint64_t sub_1DEBD0F50(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = sub_1DFDFAF40();
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  id v21 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for PuzzleSetting();
  MEMORY[0x1F4188790](v23);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PuzzleSettingsItem();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t result = sub_1DFE00110();
  if (v11)
  {
    uint64_t v13 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    id v19 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v20 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    do
    {
      sub_1DEBD12C0(v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleSettingsItem);
      swift_bridgeObjectRetain();
      sub_1DFDFDE20();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1DFDFDE20();
      swift_bridgeObjectRelease();
      if (*((void *)v10 + 5))
      {
        sub_1DFE00120();
        swift_bridgeObjectRetain();
        sub_1DFDFDE20();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1DFE00120();
      }
      sub_1DEBD12C0((uint64_t)&v10[*(int *)(v7 + 28)], (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleSetting);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          sub_1DFE00110();
          sub_1DFE00120();
        }
        else
        {
          uint64_t v15 = v21;
          uint64_t v16 = v22;
          (*v20)(v21, v6, v22);
          sub_1DFE00110();
          sub_1DEBD1328();
          sub_1DFDFDBE0();
          (*v19)(v15, v16);
        }
      }
      else
      {
        sub_1DFE00110();
        sub_1DFDFDE20();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_1DEBD1380((uint64_t)v10);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_1DEBD12C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DEBD1328()
{
  unint64_t result = qword_1EAC21520;
  if (!qword_1EAC21520)
  {
    sub_1DFDFAF40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21520);
  }
  return result;
}

uint64_t sub_1DEBD1380(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PuzzleSettingsItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEBD13DC(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1DFDFFF50() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[3];
  if (v5)
  {
    if (!v6) {
      return 0;
    }
    BOOL v7 = a1[2] == a2[2] && v5 == v6;
    if (!v7 && (sub_1DFDFFF50() & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  uint64_t v8 = a1[5];
  uint64_t v9 = a2[5];
  if (v8)
  {
    if (v9 && (a1[4] == a2[4] && v8 == v9 || (sub_1DFDFFF50() & 1) != 0)) {
      goto LABEL_20;
    }
    return 0;
  }
  if (v9) {
    return 0;
  }
LABEL_20:
  uint64_t v10 = a1[6];
  uint64_t v11 = a2[6];
  return sub_1DF64EAB0(v10, v11);
}

void sub_1DEBD14BC(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1DEBD1D58(0, &qword_1EAC396A0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleSettingsItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v59 - v5;
  uint64_t v7 = type metadata accessor for PuzzleSettingsItem();
  uint64_t v8 = *(uint8_t **)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v59 - v12;
  if (!*(void *)(a1 + 16)
    || (unint64_t v14 = sub_1DEA6D930(25705, 0xE200000000000000), (v15 & 1) == 0)
    || (sub_1DEA6FC28(*(void *)(a1 + 56) + 32 * v14, (uint64_t)v71), (swift_dynamicCast() & 1) == 0))
  {
    if (qword_1EBACBF20 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1DFDF01D0();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBB62BD0);
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1DFDF01B0();
    os_log_type_t v24 = sub_1DFDFEA40();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v68 = (uint64_t)a2;
      uint64_t v27 = v26;
      v71[0] = v26;
      *(_DWORD *)unint64_t v25 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1DFDFDB00();
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v69 = sub_1DEA5CAB8(v28, v30, v71);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DE913000, v23, v24, "Failed parsing PuzzleSettingsGroup. Missing id entry: %s", v25, 0xCu);
      swift_arrayDestroy();
      uint64_t v31 = v27;
      a2 = (void *)v68;
      MEMORY[0x1E01EFA10](v31, -1, -1);
      MEMORY[0x1E01EFA10](v25, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_50;
  }
  uint64_t v61 = v69;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v65 = v70;
  swift_bridgeObjectRetain();
  uint64_t v66 = v8;
  if (!v16)
  {
    uint64_t v21 = 0;
    uint64_t v60 = 0;
    goto LABEL_27;
  }
  unint64_t v17 = sub_1DEA6D930(0x656C746974, 0xE500000000000000);
  if ((v18 & 1) == 0)
  {
    uint64_t v60 = 0;
    uint64_t v21 = 0;
    if (*(void *)(a1 + 16)) {
      goto LABEL_20;
    }
LABEL_27:
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  sub_1DEA6FC28(*(void *)(a1 + 56) + 32 * v17, (uint64_t)v71);
  int v19 = swift_dynamicCast();
  uint64_t v20 = v69;
  if (!v19) {
    uint64_t v20 = 0;
  }
  uint64_t v60 = v20;
  if (v19) {
    uint64_t v21 = v70;
  }
  else {
    uint64_t v21 = 0;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_27;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  unint64_t v32 = sub_1DEA6D930(0x7265746F6F66, 0xE600000000000000);
  if ((v33 & 1) == 0)
  {
LABEL_28:
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    goto LABEL_29;
  }
  sub_1DEA6FC28(*(void *)(a1 + 56) + 32 * v32, (uint64_t)v71);
  int v34 = swift_dynamicCast();
  if (v34) {
    uint64_t v35 = v69;
  }
  else {
    uint64_t v35 = 0;
  }
  if (v34) {
    uint64_t v36 = v70;
  }
  else {
    uint64_t v36 = 0;
  }
LABEL_29:
  uint64_t v37 = *(void *)(a1 + 16);
  uint64_t v64 = v36;
  if (!v37) {
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  unint64_t v38 = sub_1DEA6D930(0x736D657469, 0xE500000000000000);
  if ((v39 & 1) == 0
    || (sub_1DEA6FC28(*(void *)(a1 + 56) + 32 * v38, (uint64_t)v71),
        sub_1DEBD1D58(0, (unint64_t *)&qword_1EAC35CB0, (uint64_t (*)(uint64_t))sub_1DEBD1DBC, MEMORY[0x1E4FBB320]), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_44:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EBACBF20 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_1DFDF01D0();
    __swift_project_value_buffer(v47, (uint64_t)qword_1EBB62BD0);
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1DFDF01B0();
    os_log_type_t v49 = sub_1DFDFEA40();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v71[0] = v68;
      *(_DWORD *)uint64_t v50 = 136315138;
      uint64_t v66 = v50 + 4;
      swift_bridgeObjectRetain();
      uint64_t v67 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v51 = sub_1DFDFDB00();
      unint64_t v53 = v52;
      swift_bridgeObjectRelease();
      uint64_t v69 = sub_1DEA5CAB8(v51, v53, v71);
      sub_1DFDFF680();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DE913000, v48, v49, "Failed parsing PuzzleSettingsGroup. Invalid items entry: %s", v50, 0xCu);
      uint64_t v54 = v68;
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v54, -1, -1);
      MEMORY[0x1E01EFA10](v50, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_50:
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v21 = 0;
    uint64_t v35 = 0;
    uint64_t v58 = 0;
    unint64_t v43 = 0;
    goto LABEL_51;
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = v69;
  uint64_t v67 = *(void *)(v69 + 16);
  if (v67)
  {
    uint64_t v68 = (uint64_t)a2;
    uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
    swift_bridgeObjectRetain();
    uint64_t v42 = 0;
    unint64_t v43 = MEMORY[0x1E4FBC860];
    uint64_t v62 = v40;
    uint64_t v63 = v21;
    do
    {
      uint64_t v44 = swift_bridgeObjectRetain();
      sub_1DFB34ED4(v44, (uint64_t)v6);
      if ((*v41)(v6, 1, v7) == 1)
      {
        sub_1DEBD1E28((uint64_t)v6);
      }
      else
      {
        sub_1DEBD1EB4((uint64_t)v6, (uint64_t)v13);
        sub_1DEBD1EB4((uint64_t)v13, (uint64_t)v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v43 = sub_1DEE17CDC(0, *(void *)(v43 + 16) + 1, 1, v43);
        }
        unint64_t v46 = *(void *)(v43 + 16);
        unint64_t v45 = *(void *)(v43 + 24);
        if (v46 >= v45 >> 1) {
          unint64_t v43 = sub_1DEE17CDC(v45 > 1, v46 + 1, 1, v43);
        }
        *(void *)(v43 + 16) = v46 + 1;
        sub_1DEBD1EB4((uint64_t)v11, v43 + ((v66[80] + 32) & ~(unint64_t)v66[80]) + *((void *)v66 + 9) * v46);
        uint64_t v21 = v63;
      }
      ++v42;
    }
    while (v67 != v42);
    swift_bridgeObjectRelease();
    a2 = (void *)v68;
  }
  else
  {
    unint64_t v43 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v58 = v64;
  swift_bridgeObjectRelease();
  uint64_t v56 = v65;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v57 = v60;
  uint64_t v55 = v61;
LABEL_51:
  *a2 = v55;
  a2[1] = v56;
  a2[2] = v57;
  a2[3] = v21;
  a2[4] = v35;
  a2[5] = v58;
  a2[6] = v43;
}

void sub_1DEBD1D58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DEBD1DBC()
{
  if (!qword_1EBAA6490)
  {
    unint64_t v0 = sub_1DFDFDB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAA6490);
    }
  }
}

uint64_t sub_1DEBD1E28(uint64_t a1)
{
  sub_1DEBD1D58(0, &qword_1EAC396A0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleSettingsItem, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEBD1EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleSettingsItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1DEBD1F18(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v4[5] = a2[5];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1DFDF9D80();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    long long v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
  }
  return v4;
}

uint64_t sub_1DEBD20A0(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DFDF9D80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  return __swift_destroy_boxed_opaque_existential_1(v6);
}

uint64_t sub_1DEBD2130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DFDF9D80();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  long long v13 = *(_OWORD *)(a2 + v12 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  return a1;
}

uint64_t *sub_1DEBD2260(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDF9D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + *(int *)(a3 + 28)), (uint64_t *)((char *)a2 + *(int *)(a3 + 28)));
  return a1;
}

uint64_t sub_1DEBD2310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DFDF9D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  return a1;
}

uint64_t sub_1DEBD23C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DFDF9D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  return a1;
}

uint64_t sub_1DEBD2484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBD2498);
}

uint64_t sub_1DEBD2498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF9D80();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DEBD2548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBD255C);
}

uint64_t sub_1DEBD255C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDF9D80();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TodayRebuildSavedStoriesModifier()
{
  uint64_t result = qword_1EAC21528;
  if (!qword_1EAC21528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEBD2650()
{
  uint64_t result = sub_1DFDF9D80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DEBD26F4(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v90 = a3;
  uint64_t v91 = a2;
  sub_1DEAA6EB4(0, &qword_1EBAA8158, MEMORY[0x1E4FACA00]);
  uint64_t v92 = v4;
  uint64_t v89 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v88 = (uint64_t *)((char *)&v76 - v5);
  uint64_t v6 = type metadata accessor for SavedStoriesTodayFeedGroup();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v82 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA7740();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v83 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v81 = (char *)&v76 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v85 = (char *)&v76 - v13;
  sub_1DEAA6EB4(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  long long v15 = v14;
  uint64_t v16 = *((void *)v14 - 1);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v84 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v76 - v19;
  sub_1DEA7A618();
  uint64_t v22 = v21 - 8;
  MEMORY[0x1F4188790](v21);
  os_log_type_t v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA6EB4(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  uint64_t v26 = v25;
  uint64_t v93 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v78 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v76 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  uint64_t v97 = (char *)&v76 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v80 = (char *)&v76 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v86 = a1;
  uint64_t v87 = (char *)&v76 - v36;
  uint64_t v99 = *(void (**)(char *, uint64_t, char *))(v16 + 16);
  uint64_t v100 = v16 + 16;
  v99(v20, a1, v15);
  sub_1DEAAFE50((unint64_t *)&unk_1EBAA3B80);
  uint64_t v98 = v20;
  uint64_t v37 = (uint64_t)v24;
  sub_1DFDFDFB0();
  unint64_t v38 = &v24[*(int *)(v22 + 44)];
  sub_1DEAAFE50((unint64_t *)&unk_1EBAA85E0);
  uint64_t v39 = *(void *)v38;
  sub_1DFDFE720();
  if (v39 == v101[0])
  {
LABEL_5:
    sub_1DEBD3C2C(v37, (uint64_t (*)(void))sub_1DEA7A618);
    sub_1DEBD3B1C();
    uint64_t v52 = swift_allocError();
    uint64_t v54 = v88;
    uint64_t v53 = v89;
    *uint64_t v88 = v52;
    uint64_t v55 = v92;
    (*(void (**)(uint64_t *, void, uint64_t))(v53 + 104))(v54, *MEMORY[0x1E4FAC9E0], v92);
    v91(v54);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v53 + 8))(v54, v55);
  }
  else
  {
    uint64_t v40 = (void (**)(char *))(v93 + 16);
    uint64_t v95 = (char **)(v16 + 8);
    uint64_t v96 = (void (**)(char *, char *, uint64_t))(v93 + 32);
    uint64_t v94 = (void (**)(char *, uint64_t))(v93 + 8);
    while (1)
    {
      uint64_t v41 = (void (*)(void *, void))sub_1DFDFE760();
      uint64_t v42 = v26;
      unint64_t v43 = v31;
      uint64_t v44 = v97;
      (*v40)(v97);
      v41(v101, 0);
      unint64_t v45 = v98;
      v99(v98, v37, v15);
      sub_1DFDFE730();
      uint64_t v46 = v37;
      uint64_t v47 = *v95;
      ((void (*)(char *, char *))*v95)(v45, v15);
      uint64_t v48 = v43;
      os_log_type_t v49 = v44;
      uint64_t v31 = v43;
      uint64_t v26 = v42;
      uint64_t v50 = *v96;
      (*v96)(v48, v49, v26);
      sub_1DFDF14D0();
      LODWORD(v45) = (v101[0] >> 58) & 0x3C | (LODWORD(v101[0]) >> 1) & 3;
      swift_release();
      if (v45 == 24) {
        break;
      }
      (*v94)(v31, v26);
      uint64_t v51 = *(void *)v38;
      sub_1DFDFE720();
      uint64_t v37 = v46;
      if (v51 == v101[0]) {
        goto LABEL_5;
      }
    }
    uint64_t v97 = v47;
    uint64_t v98 = v15;
    sub_1DEBD3C2C(v46, (uint64_t (*)(void))sub_1DEA7A618);
    uint64_t v57 = v80;
    v50(v80, v31, v26);
    uint64_t v58 = (uint64_t)v87;
    v50(v87, v57, v26);
    uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56);
    uint64_t v60 = (uint64_t)v85;
    v59(v85, 1, 1, v26);
    sub_1DFDF14D0();
    if (((v101[0] >> 58) & 0x3C | (LODWORD(v101[0]) >> 1) & 3) == 0x18)
    {
      uint64_t v61 = swift_projectBox();
      uint64_t v62 = v82;
      sub_1DE9F214C(v61, v82, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      swift_release();
      uint64_t v63 = v86;
      uint64_t v64 = v79;
      uint64_t v65 = (char *)sub_1DEBD3240(v86, (uint64_t)v79, v62);
      __swift_project_boxed_opaque_existential_1(v64, v64[3]);
      uint64_t v66 = type metadata accessor for TodayRebuildSavedStoriesModifier();
      sub_1DEFCB594(v58, (unint64_t)v64 + *(int *)(v66 + 24), v65, 0, (uint64_t)v81);
      uint64_t v67 = v84;
      swift_bridgeObjectRelease();
      uint64_t v68 = (uint64_t)v83;
      sub_1DEBD3C2C(v82, (uint64_t (*)(void))type metadata accessor for SavedStoriesTodayFeedGroup);
      sub_1DEBD3C2C(v60, (uint64_t (*)(void))sub_1DEAA7740);
      uint64_t v69 = (uint64_t)v81;
      v59(v81, 0, 1, v26);
      sub_1DEBD3AB8(v69, v60);
    }
    else
    {
      swift_release();
      uint64_t v63 = v86;
      uint64_t v67 = v84;
      uint64_t v68 = (uint64_t)v83;
    }
    v99(v67, v63, v98);
    sub_1DE9F214C(v60, v68, (uint64_t (*)(void))sub_1DEAA7740);
    int v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v68, 1, v26);
    uint64_t v77 = v26;
    if (v70 == 1)
    {
      sub_1DEBD3C2C(v68, (uint64_t (*)(void))sub_1DEAA7740);
    }
    else
    {
      uint64_t v71 = v78;
      v50(v78, (char *)v68, v26);
      sub_1DFDF59D0();
      (*v94)(v71, v26);
    }
    uint64_t v72 = v88;
    type metadata accessor for TodayModel(0);
    sub_1DEA908FC();
    sub_1DEA98AA4();
    sub_1DEBD3A70(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
    sub_1DFDF2420();
    __swift_project_boxed_opaque_existential_1(v101, v101[3]);
    if (sub_1DFDF1990())
    {
      uint64_t v73 = v89;
      uint64_t v74 = v92;
      (*(void (**)(uint64_t *, void, uint64_t))(v89 + 104))(v72, *MEMORY[0x1E4FAC9F8], v92);
    }
    else
    {
      sub_1DFDF3030();
      uint64_t v74 = v92;
      uint64_t v73 = v89;
    }
    uint64_t v75 = v97;
    v91(v72);
    (*(void (**)(uint64_t *, uint64_t))(v73 + 8))(v72, v74);
    ((void (*)(char *, char *))v75)(v67, v98);
    sub_1DEBD3C2C(v60, (uint64_t (*)(void))sub_1DEAA7740);
    (*v94)(v87, v77);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
  }
}

uint64_t sub_1DEBD3240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v3 = sub_1DFDF98F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v52 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBD3B70();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBD3BD4();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v52 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = sub_1DEA94918();
  if ((~v19 & 0xF000000000000007) != 0)
  {
    uint64_t v21 = v19;
    type metadata accessor for TodayFeedServiceConfig();
    sub_1DEBD3A70((unint64_t *)&qword_1EBAAF9B0, (void (*)(uint64_t))type metadata accessor for TodayFeedServiceConfig);
    sub_1DFDF7F10();
    sub_1DEA54378(v21);
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v20(v18, 0, 1, v3);
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v20(v18, 1, 1, v3);
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v16, *MEMORY[0x1E4F80418], v3);
  v20(v16, 0, 1, v3);
  uint64_t v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1DE9F214C((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(void))sub_1DEBD3BD4);
  sub_1DE9F214C((uint64_t)v16, v22, (uint64_t (*)(void))sub_1DEBD3BD4);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v23((uint64_t)v9, 1, v3) != 1)
  {
    sub_1DE9F214C((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_1DEBD3BD4);
    if (v23(v22, 1, v3) != 1)
    {
      uint64_t v27 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v52, v22, v3);
      sub_1DEBD3A70((unint64_t *)&unk_1EBAD1670, MEMORY[0x1E4F80420]);
      char v28 = sub_1DFDFDC70();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v4 + 8);
      v29(v27, v3);
      sub_1DEBD3C2C((uint64_t)v16, (uint64_t (*)(void))sub_1DEBD3BD4);
      sub_1DEBD3C2C((uint64_t)v18, (uint64_t (*)(void))sub_1DEBD3BD4);
      v29(v13, v3);
      uint64_t v24 = sub_1DEBD3C2C((uint64_t)v9, (uint64_t (*)(void))sub_1DEBD3BD4);
      uint64_t v25 = v53;
      uint64_t v26 = v54;
      if ((v28 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
    sub_1DEBD3C2C((uint64_t)v16, (uint64_t (*)(void))sub_1DEBD3BD4);
    sub_1DEBD3C2C((uint64_t)v18, (uint64_t (*)(void))sub_1DEBD3BD4);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
LABEL_9:
    sub_1DEBD3C2C((uint64_t)v9, (uint64_t (*)(void))sub_1DEBD3B70);
    uint64_t v25 = v53;
    uint64_t v26 = v54;
    goto LABEL_17;
  }
  sub_1DEBD3C2C((uint64_t)v16, (uint64_t (*)(void))sub_1DEBD3BD4);
  sub_1DEBD3C2C((uint64_t)v18, (uint64_t (*)(void))sub_1DEBD3BD4);
  if (v23(v22, 1, v3) != 1) {
    goto LABEL_9;
  }
  uint64_t v24 = sub_1DEBD3C2C((uint64_t)v9, (uint64_t (*)(void))sub_1DEBD3BD4);
  uint64_t v25 = v53;
  uint64_t v26 = v54;
LABEL_11:
  uint64_t v30 = *(void *)(v25 + 40);
  MEMORY[0x1F4188790](v24);
  *(&v52 - 2) = v31;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1DE9C661C((uint64_t)sub_1DEBD3C8C, (uint64_t)(&v52 - 4), v30);
  uint64_t v33 = type metadata accessor for SavedStoriesTodayFeedGroup();
  int64_t v34 = sub_1DEC77BBC(*(void *)(v26 + *(int *)(v33 + 20)), v32);
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  unint64_t v40 = v39;
  if ((v39 & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v26 = sub_1DFDFFF90();
  swift_unknownObjectRetain_n();
  uint64_t v41 = swift_dynamicCastClass();
  if (!v41)
  {
    swift_unknownObjectRelease();
    uint64_t v41 = MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = *(void *)(v41 + 16);
  swift_release();
  unint64_t v43 = (v40 >> 1) - v38;
  if (!__OFSUB__(v40 >> 1, v38))
  {
LABEL_23:
    if (v42 == v43)
    {
      uint64_t v49 = swift_dynamicCastClass();
      swift_unknownObjectRelease();
      if (v49) {
        return v49;
      }
      uint64_t v49 = MEMORY[0x1E4FBC860];
LABEL_26:
      swift_unknownObjectRelease();
      return v49;
    }
    swift_unknownObjectRelease();
LABEL_19:
    uint64_t v49 = sub_1DEC79154(v34, v36, v38, v40);
    goto LABEL_26;
  }
  __break(1u);
LABEL_17:
  uint64_t v44 = *(void *)(v25 + 40);
  uint64_t v45 = type metadata accessor for SavedStoriesTodayFeedGroup();
  int64_t v34 = sub_1DEC77BBC(*(void *)(v26 + *(int *)(v45 + 20)), v44);
  uint64_t v36 = v46;
  uint64_t v38 = v47;
  unint64_t v40 = v48;
  if ((v48 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  sub_1DFDFFF90();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v50 = swift_dynamicCastClass();
  if (!v50)
  {
    swift_unknownObjectRelease();
    uint64_t v50 = MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = *(void *)(v50 + 16);
  uint64_t result = swift_release();
  unint64_t v43 = (v40 >> 1) - v38;
  if (!__OFSUB__(v40 >> 1, v38)) {
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEBD38EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for TodayRebuildSavedStoriesModifier() + 28));
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, v3, v5, v6) & 1;
}

uint64_t sub_1DEBD3974(uint64_t a1)
{
  uint64_t v2 = sub_1DEBD3A70(&qword_1EAC21558, (void (*)(uint64_t))type metadata accessor for TodayRebuildSavedStoriesModifier);
  return MEMORY[0x1F4161388](a1, v2);
}

uint64_t sub_1DEBD39E0()
{
  return sub_1DEBD3A70(&qword_1EAC21538, (void (*)(uint64_t))type metadata accessor for TodayRebuildSavedStoriesModifier);
}

uint64_t sub_1DEBD3A28()
{
  return sub_1DEBD3A70(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
}

uint64_t sub_1DEBD3A70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEBD3AB8(uint64_t a1, uint64_t a2)
{
  sub_1DEAA7740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DEBD3B1C()
{
  unint64_t result = qword_1EAC21540;
  if (!qword_1EAC21540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21540);
  }
  return result;
}

void sub_1DEBD3B70()
{
  if (!qword_1EAC21548)
  {
    sub_1DEBD3BD4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC21548);
    }
  }
}

void sub_1DEBD3BD4()
{
  if (!qword_1EAC21550)
  {
    sub_1DFDF98F0();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21550);
    }
  }
}

uint64_t sub_1DEBD3C2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEBD3C8C(uint64_t *a1)
{
  return sub_1DEBD38EC(a1, *(void *)(v1 + 16)) & 1;
}

unsigned char *storeEnumTagSinglePayload for TodayRebuildSavedStoriesModifier.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DEBD3D48);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayRebuildSavedStoriesModifier.Errors()
{
  return &type metadata for TodayRebuildSavedStoriesModifier.Errors;
}

unint64_t sub_1DEBD3D84()
{
  unint64_t result = qword_1EAC21560;
  if (!qword_1EAC21560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21560);
  }
  return result;
}

uint64_t sub_1DEBD3DD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBD4710(0, &qword_1EAC21598, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEBD4658();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_1DEBD4774(&qword_1EBACA150, MEMORY[0x1E4F7F240]);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_1DEBD46AC((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DEBD4084(uint64_t a1)
{
  unint64_t v2 = sub_1DEBD4658();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEBD40C0(uint64_t a1)
{
  unint64_t v2 = sub_1DEBD4658();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEBD40FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBD4110);
}

uint64_t sub_1DEBD4110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DEBD417C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBD4190);
}

uint64_t sub_1DEBD4190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PuzzleArchiveTagFeedGroup()
{
  uint64_t result = qword_1EBADBD10;
  if (!qword_1EBADBD10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEBD424C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEBD3DD8(a1, a2);
}

uint64_t sub_1DEBD4264(void *a1)
{
  sub_1DEBD4710(0, &qword_1EAC215A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEBD4658();
  sub_1DFE001A0();
  sub_1DFDF7010();
  sub_1DEBD4774((unint64_t *)&unk_1EBACA140, MEMORY[0x1E4F7F240]);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DEBD43EC()
{
  return sub_1DEBD4774(&qword_1EAC21568, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
}

uint64_t sub_1DEBD4434()
{
  return sub_1DEBD4774(&qword_1EAC21570, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
}

uint64_t sub_1DEBD447C()
{
  return sub_1DEBD4774(&qword_1EAC21578, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
}

uint64_t sub_1DEBD44C4(uint64_t a1)
{
  uint64_t result = sub_1DEBD4774(&qword_1EAC21580, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DEBD451C(void *a1)
{
  a1[1] = sub_1DEBD4774(&qword_1EAC21588, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
  a1[2] = sub_1DEBD4774(&qword_1EAC21590, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
  uint64_t result = sub_1DEBD4774(&qword_1EAC30CC0, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
  a1[3] = result;
  return result;
}

uint64_t sub_1DEBD45C8(uint64_t a1)
{
  uint64_t v2 = sub_1DEBD4774(&qword_1EAC21588, (void (*)(uint64_t))type metadata accessor for PuzzleArchiveTagFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DEBD4634()
{
  return 0x7241656C7A7A7550;
}

unint64_t sub_1DEBD4658()
{
  unint64_t result = qword_1EAC215A0;
  if (!qword_1EAC215A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC215A0);
  }
  return result;
}

uint64_t sub_1DEBD46AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleArchiveTagFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DEBD4710(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEBD4658();
    unint64_t v7 = a3(a1, &type metadata for PuzzleArchiveTagFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DEBD4774(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PuzzleArchiveTagFeedGroup.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DEBD4858);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleArchiveTagFeedGroup.CodingKeys()
{
  return &type metadata for PuzzleArchiveTagFeedGroup.CodingKeys;
}

unint64_t sub_1DEBD4894()
{
  unint64_t result = qword_1EAC215B0;
  if (!qword_1EAC215B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC215B0);
  }
  return result;
}

unint64_t sub_1DEBD48EC()
{
  unint64_t result = qword_1EAC215B8;
  if (!qword_1EAC215B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC215B8);
  }
  return result;
}

unint64_t sub_1DEBD4944()
{
  unint64_t result = qword_1EAC215C0;
  if (!qword_1EAC215C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC215C0);
  }
  return result;
}

uint64_t sub_1DEBD4998()
{
  sub_1DEBD5184(v0 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_startIndexPath);
  sub_1DEBD5184(v0 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_endIndexPath);
  return swift_deallocClassInstance();
}

uint64_t sub_1DEBD4A14()
{
  return _s4ItemCMa();
}

uint64_t _s4ItemCMa()
{
  uint64_t result = qword_1EAC215C8;
  if (!qword_1EAC215C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DEBD4A68()
{
  sub_1DEBD5054(319, &qword_1EBAA6E10, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1DEBD4B58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v31 = *v1;
  int v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEBD5054(0, &qword_1EBAA6E10, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v28 - v5;
  sub_1DEBD5054(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE12420;
  *(void *)(inited + 32) = 0x6F6974616D696E61;
  *(void *)(inited + 40) = 0xE90000000000006ELL;
  long long v8 = *((_OWORD *)v1 + 1);
  long long v29 = *((_OWORD *)v1 + 2);
  long long v30 = v8;
  long long v28 = *((_OWORD *)v1 + 3);
  uint64_t v9 = v1[8];
  uint64_t v10 = v1[9];
  char v11 = *((unsigned char *)v1 + 80);
  *(void *)(inited + 72) = &_s4PlanC9AnimationON;
  uint64_t v12 = swift_allocObject();
  *(void *)(inited + 48) = v12;
  long long v13 = v29;
  *(_OWORD *)(v12 + 16) = v30;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v28;
  *(void *)(v12 + 64) = v9;
  *(void *)(v12 + 72) = v10;
  *(unsigned char *)(v12 + 80) = v11;
  *(void *)(inited + 80) = 1684957547;
  *(void *)(inited + 88) = 0xE400000000000000;
  *(unsigned char *)(inited + 96) = *((unsigned char *)v1 + 81);
  *(void *)(inited + 120) = &_s4ItemC4KindON;
  strcpy((char *)(inited + 128), "startIndexPath");
  uint64_t v14 = (uint64_t)v1 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_startIndexPath;
  *(unsigned char *)(inited + 143) = -18;
  sub_1DEBD4FC0(v14, (uint64_t)v6);
  uint64_t v15 = sub_1DFDFDD90();
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 144) = v15;
  *(void *)(inited + 152) = v17;
  *(void *)(inited + 168) = v16;
  strcpy((char *)(inited + 176), "endIndexPath");
  *(unsigned char *)(inited + 189) = 0;
  *(_WORD *)(inited + 190) = -5120;
  sub_1DEBD4FC0((uint64_t)v1 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_endIndexPath, (uint64_t)v6);
  *(void *)(inited + 192) = sub_1DFDFDD90();
  *(void *)(inited + 200) = v18;
  *(void *)(inited + 216) = v16;
  *(void *)(inited + 224) = 0x6172467472617473;
  *(void *)(inited + 232) = 0xEA0000000000656DLL;
  char v19 = *((unsigned char *)v1 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_startFrame + 32);
  long long v20 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_startFrame + 16);
  long long v32 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_startFrame);
  long long v33 = v20;
  char v34 = v19;
  sub_1DEBD5054(0, (unint64_t *)&unk_1EBABB000, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, v3);
  *(void *)(inited + 240) = sub_1DFDFDD90();
  *(void *)(inited + 248) = v21;
  *(void *)(inited + 264) = v16;
  *(void *)(inited + 272) = 0x656D617246646E65;
  *(void *)(inited + 280) = 0xE800000000000000;
  char v22 = *((unsigned char *)v1 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_endFrame + 32);
  long long v23 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_endFrame + 16);
  long long v32 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtCCC7NewsUI225AudioPlaylistFeedAnimator4Plan4Item_endFrame);
  long long v33 = v23;
  char v34 = v22;
  uint64_t v24 = sub_1DFDFDD90();
  *(void *)(inited + 312) = v16;
  *(void *)(inited + 288) = v24;
  *(void *)(inited + 296) = v25;
  sub_1DEA6D7C0(inited);
  sub_1DEBD5054(0, &qword_1EAC215E0, (uint64_t (*)(uint64_t))_s4ItemCMa, MEMORY[0x1E4FAAAF8]);
  a1[3] = v26;
  a1[4] = sub_1DEBD50B8();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DEBD4F00@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DEBD4B58(a1);
}

uint64_t sub_1DEBD4F24()
{
  sub_1DEBD5140(&qword_1EAC215F0);
  return sub_1DFDED1B0();
}

uint64_t sub_1DEBD4F7C()
{
  return sub_1DEBD5140(&qword_1EAC215D8);
}

uint64_t sub_1DEBD4FB0()
{
  return swift_deallocObject();
}

uint64_t sub_1DEBD4FC0(uint64_t a1, uint64_t a2)
{
  sub_1DEBD5054(0, &qword_1EBAA6E10, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DEBD5054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1DEBD50B8()
{
  unint64_t result = qword_1EAC215E8;
  if (!qword_1EAC215E8)
  {
    sub_1DEBD5054(255, &qword_1EAC215E0, (uint64_t (*)(uint64_t))_s4ItemCMa, MEMORY[0x1E4FAAAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC215E8);
  }
  return result;
}

uint64_t sub_1DEBD5140(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s4ItemCMa();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEBD5184(uint64_t a1)
{
  sub_1DEBD5054(0, &qword_1EBAA6E10, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEBD5210()
{
  uint64_t v0 = type metadata accessor for TodayModel(0);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA7F6E4(0);
  sub_1DFDF0B50();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DEBD54C4(0, (unint64_t *)&qword_1EAC2D4B0, (void (*)(uint64_t))type metadata accessor for TodayGapLocation, MEMORY[0x1E4F808C0]);
      uint64_t v9 = &v2[*(int *)(v8 + 48)];
      uint64_t v10 = sub_1DFDFA6C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      int v3 = type metadata accessor for TodayGapLocation;
      goto LABEL_3;
    case 2u:
      sub_1DEA8CD2C((uint64_t)v2, type metadata accessor for TodayModel);
      return 1;
    case 3u:
    case 4u:
    case 5u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
      int v3 = type metadata accessor for TodayModel;
LABEL_3:
      uint64_t v4 = v3;
      uint64_t v5 = (uint64_t)v2;
      goto LABEL_4;
    case 6u:
      sub_1DEBD54C4(0, (unint64_t *)&qword_1EBAF8CD0, (void (*)(uint64_t))sub_1DEA8F16C, (void (*)(uint64_t))sub_1DEA8E984);
      uint64_t v12 = &v2[*(int *)(v11 + 48)];
      sub_1DEA8E984();
      (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      sub_1DEA8F16C();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v2, v14);
      return 0;
    default:
      swift_bridgeObjectRelease();
      sub_1DEA8FD50();
      uint64_t v5 = (uint64_t)&v2[*(int *)(v7 + 48)];
      uint64_t v4 = type metadata accessor for TodayGapLocation;
LABEL_4:
      sub_1DEA8CD2C(v5, v4);
      return 0;
  }
}

void sub_1DEBD54C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t *sub_1DEBD554C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1DEA8FCBC();
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v8, 1, v10))
    {
      uint64_t v13 = type metadata accessor for TodayGapLocation(0);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_1DEBD56BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1DEA8FCBC();
  uint64_t v6 = v5;
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v4, v6);
  }
  return result;
}

void *sub_1DEBD578C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_1DEA8FCBC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v7, 1, v9))
  {
    uint64_t v12 = type metadata accessor for TodayGapLocation(0);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  return a1;
}

void *sub_1DEBD58AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DEA8FCBC();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v7, 1, v9);
  int v14 = v12(v8, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v7, v8, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = type metadata accessor for TodayGapLocation(0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  return a1;
}

_OWORD *sub_1DEBD5A40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  sub_1DEA8FCBC();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7))
  {
    uint64_t v10 = type metadata accessor for TodayGapLocation(0);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  }
  return a1;
}

void *sub_1DEBD5B50(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DEA8FCBC();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v8, 1, v10);
  int v15 = v13(v9, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v8, v9, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = type metadata accessor for TodayGapLocation(0);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  return a1;
}

uint64_t sub_1DEBD5CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBD5CE8);
}

uint64_t sub_1DEBD5CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for TodayGapLocation(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DEBD5D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBD5DAC);
}

uint64_t sub_1DEBD5DAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TodayGapLocation(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t *sub_1DEBD5E54(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TodayFailedData(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *(int *)(v4 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1DEA8FCBC();
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      uint64_t v14 = type metadata accessor for TodayGapLocation(0);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_1DEBD5FD0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for TodayFailedData(0) + 20);
  sub_1DEA8FCBC();
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v6(v2, v4);
  }
  return result;
}

void *sub_1DEBD60A4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(type metadata accessor for TodayFailedData(0) + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_1DEA8FCBC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v7, 1, v9))
  {
    uint64_t v12 = type metadata accessor for TodayGapLocation(0);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  return a1;
}

void *sub_1DEBD61D0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for TodayFailedData(0) + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  sub_1DEA8FCBC();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v5, 1, v7);
  int v12 = v10(v6, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v5, v6, v8);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = type metadata accessor for TodayGapLocation(0);
    memcpy(v5, v6, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v5, v6, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  return a1;
}

_OWORD *sub_1DEBD6368(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for TodayFailedData(0) + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  sub_1DEA8FCBC();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7))
  {
    uint64_t v10 = type metadata accessor for TodayGapLocation(0);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  }
  return a1;
}

void *sub_1DEBD6484(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(int *)(type metadata accessor for TodayFailedData(0) + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_1DEA8FCBC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  int v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v6, 1, v8);
  int v13 = v11(v7, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v6, v7, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = type metadata accessor for TodayGapLocation(0);
    memcpy(v6, v7, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v6, v7, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  return a1;
}

uint64_t sub_1DEBD660C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBD6620);
}

uint64_t sub_1DEBD6620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TodayFailedData(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DEBD668C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBD66A0);
}

uint64_t sub_1DEBD66A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TodayFailedData(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TodayFailedBlueprintModifier(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBADF538);
}

uint64_t sub_1DEBD6730()
{
  uint64_t result = type metadata accessor for TodayFailedData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DEBD67BC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v93 = a3;
  uint64_t v94 = a2;
  uint64_t v5 = sub_1DFDF1930();
  uint64_t v82 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v81 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA6F74(0, &qword_1EBAA8158, MEMORY[0x1E4FACA00]);
  uint64_t v90 = v7;
  uint64_t v92 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v68 - v8);
  sub_1DEA75880();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v77 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for TodayModel(0);
  MEMORY[0x1F4188790](v80);
  uint64_t v76 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1DFDF98F0();
  uint64_t v86 = *(char **)(v73 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v73);
  uint64_t v84 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v85 = (char *)&v68 - v15;
  uint64_t v16 = type metadata accessor for TodayGapLocation(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v79 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA8FCBC();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v88 = v18;
  uint64_t v89 = v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v78 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA6F74(0, (unint64_t *)&qword_1EBAA85F0, MEMORY[0x1E4FAD830]);
  uint64_t v22 = v21;
  uint64_t v91 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v68 - v23;
  sub_1DEAA7740();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEAA6F74(0, (unint64_t *)&qword_1EBAA7D80, MEMORY[0x1E4FAC180]);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v75 = (char *)&v68 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  char v34 = (char *)&v68 - v33;
  sub_1DFDF59E0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29) == 1)
  {
    sub_1DEA987D0((uint64_t)v27, (uint64_t (*)(void))sub_1DEAA7740);
    sub_1DEBD7560();
    uint64_t *v9 = swift_allocError();
    uint64_t v35 = v92;
    uint64_t v36 = v90;
    (*(void (**)(uint64_t *, void, uint64_t))(v92 + 104))(v9, *MEMORY[0x1E4FAC9E0], v90);
    v94(v9);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v35 + 8))(v9, v36);
  }
  int v70 = v9;
  uint64_t v69 = v30;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v87 = v34;
  v38(v34, v27, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v24, a1, v22);
  uint64_t v39 = v3 + *(int *)(type metadata accessor for TodayFailedData(0) + 20);
  uint64_t v40 = v79;
  sub_1DEBD75B4(v39, v79);
  uint64_t v41 = v88;
  uint64_t v42 = v89;
  int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v40, 1, v88);
  uint64_t v72 = a1;
  uint64_t v74 = v29;
  uint64_t v71 = v22;
  if (v43 == 1)
  {
    uint64_t v86 = v24;
    sub_1DEA987D0(v40, type metadata accessor for TodayGapLocation);
LABEL_5:
    type metadata accessor for TodaySectionGapDescriptor(0);
    uint64_t v44 = swift_allocBox();
    uint64_t v46 = v45;
    uint64_t v47 = type metadata accessor for TodayBlueprintCollapsedSection(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
    uint64_t v97 = v44;
    sub_1DEA982F4();
    sub_1DEA7F6E4(0);
    uint64_t v49 = v48;
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1DFE0B250;
    sub_1DEBD7618();
    uint64_t v52 = v76 + *(int *)(v51 + 48);
    sub_1DEBD75B4(v39, v76);
    uint64_t v53 = v70;
    if (qword_1EAC1D5C0 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1DFDFA6C0();
    uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)qword_1EAC320F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v55, v54);
    swift_storeEnumTagMultiPayload();
    sub_1DEA4AE04(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
    sub_1DFDF0B40();
    uint64_t v56 = sub_1DEA4AE04((unint64_t *)&unk_1EBAA7BB0, sub_1DEA7F6E4);
    uint64_t v57 = sub_1DEA4AE04(&qword_1EBAA7BA8, sub_1DEA7F6E4);
    MEMORY[0x1E01DBA70](v50, v49, v56, v57);
    sub_1DEA98AA4();
    uint64_t v58 = v75;
    sub_1DFDF14C0();
    uint64_t v24 = v86;
    sub_1DFDF59D0();
    uint64_t v59 = v69;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v58, v74);
    uint64_t v60 = v92;
    goto LABEL_13;
  }
  uint64_t v68 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v78, v40, v41);
  sub_1DFDFA140();
  uint64_t v61 = v73;
  (*((void (**)(char *, void, uint64_t))v86 + 13))(v84, *MEMORY[0x1E4F80418], v73);
  sub_1DEA4AE04((unint64_t *)&qword_1EBAD1680, MEMORY[0x1E4F80420]);
  sub_1DFDFE170();
  sub_1DFDFE170();
  if (v97 == v95 && v98 == v96)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v62 = (void (*)(char *, uint64_t))*((void *)v86 + 1);
    v62(v84, v61);
    v62(v85, v61);
  }
  else
  {
    char v63 = sub_1DFDFFF50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = (void (*)(char *, uint64_t))*((void *)v86 + 1);
    v64(v84, v61);
    v64(v85, v61);
    if ((v63 & 1) == 0)
    {
      uint64_t v86 = v24;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v78, v88);
      uint64_t v39 = v68;
      goto LABEL_5;
    }
  }
  sub_1DFDF14E0();
  sub_1DFDF59C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v78, v88);
  uint64_t v60 = v92;
  uint64_t v53 = v70;
  uint64_t v59 = v69;
LABEL_13:
  uint64_t v66 = v81;
  uint64_t v65 = v82;
  uint64_t v67 = v83;
  (*(void (**)(char *, void, uint64_t))(v82 + 104))(v81, *MEMORY[0x1E4FAC298], v83);
  sub_1DEA98AA4();
  sub_1DEA4AE04(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
  sub_1DEA908FC();
  sub_1DFDF3050();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
  v94(v53);
  (*(void (**)(uint64_t *, uint64_t))(v60 + 8))(v53, v90);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v24, v71);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v87, v74);
}

uint64_t sub_1DEBD7464(uint64_t a1)
{
  uint64_t v2 = sub_1DEA4AE04(&qword_1EBADF528, (void (*)(uint64_t))type metadata accessor for TodayFailedBlueprintModifier);
  return MEMORY[0x1F4161388](a1, v2);
}

uint64_t sub_1DEBD74D0()
{
  return sub_1DEA4AE04(&qword_1EBADF530, (void (*)(uint64_t))type metadata accessor for TodayFailedBlueprintModifier);
}

uint64_t sub_1DEBD7518()
{
  return sub_1DEA4AE04(&qword_1EBAD3CB0, (void (*)(uint64_t))type metadata accessor for TodayModel);
}

unint64_t sub_1DEBD7560()
{
  unint64_t result = qword_1EBADF520;
  if (!qword_1EBADF520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADF520);
  }
  return result;
}

uint64_t sub_1DEBD75B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TodayGapLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DEBD7618()
{
  if (!qword_1EAC2D4B0)
  {
    type metadata accessor for TodayGapLocation(255);
    sub_1DFDFA6C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC2D4B0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for TodayFailedBlueprintModifier.ModifierError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DEBD7728);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayFailedBlueprintModifier.ModifierError()
{
  return &type metadata for TodayFailedBlueprintModifier.ModifierError;
}

unint64_t sub_1DEBD7764()
{
  unint64_t result = qword_1EAC215F8;
  if (!qword_1EAC215F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC215F8);
  }
  return result;
}

void sub_1DEBD77B8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v31 = a4;
  uint64_t v9 = sub_1DFDE7220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)sub_1DFDE7130();
  unsigned int v13 = objc_msgSend(v12, sel_nss_isNewsURL);

  if (!v13)
  {
    sub_1DEBD7AF8(a1, a2, a3, v31);
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v26 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v26 + v25, (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    sub_1DFDE87E0();
    swift_release();
    return;
  }
  uint64_t v30 = (void (*)(uint64_t))a3;
  uint64_t v14 = *(void **)(v5 + 24);
  id v15 = objc_msgSend(v14, sel_delegate);
  if (v15)
  {
    uint64_t v16 = v15;
    if (objc_msgSend(v15, sel_respondsToSelector_, sel_application_openURL_options_))
    {
      sub_1DEBD8104(0, (unint64_t *)&unk_1EBAEAFE8, (void (*)(uint64_t))sub_1DEBD8098);
      uint64_t v28 = v14;
      uint64_t v29 = a2;
      uint64_t inited = swift_initStackObject();
      uint64_t v18 = (void **)MEMORY[0x1E4FB26E8];
      *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
      uint64_t v19 = *v18;
      *(void *)(inited + 32) = *v18;
      uint64_t v20 = sub_1DFDFDD20();
      *(void *)(inited + 64) = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 40) = v20;
      *(void *)(inited + 48) = v21;
      id v22 = v19;
      sub_1DF349D14(inited);
      uint64_t v23 = (void *)sub_1DFDE7130();
      type metadata accessor for OpenURLOptionsKey(0);
      sub_1DEBD8158(&qword_1EBAA6610, type metadata accessor for OpenURLOptionsKey);
      uint64_t v24 = (void *)sub_1DFDFDAE0();
      LODWORD(v28) = objc_msgSend(v16, sel_application_openURL_options_, v28, v23, v24);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

      a2 = v29;
      if (v28)
      {
        if (v30) {
          v30(1);
        }
        goto LABEL_8;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  sub_1DEBD7AF8(a1, a2, v30, v31);
}

void sub_1DEBD7AF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = *(void **)(v4 + 24);
  uint64_t v8 = (void *)sub_1DFDE7130();
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1DEBD8158((unint64_t *)&qword_1EAC1FA48, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v9 = (void *)sub_1DFDFDAE0();
  if (a3)
  {
    v10[4] = a3;
    v10[5] = a4;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 1107296256;
    void v10[2] = sub_1DEBD7C40;
    v10[3] = &block_descriptor_9;
    a3 = _Block_copy(v10);
    swift_retain();
    swift_release();
  }
  objc_msgSend(v7, sel_openURL_options_completionHandler_, v8, v9, a3);
  _Block_release(a3);
}

uint64_t sub_1DEBD7C40(uint64_t a1, uint64_t a2)
{
  int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1DEBD7C94()
{
  uint64_t v0 = sub_1DFDEC390();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDE70E0();
  sub_1DFDEC380();
  sub_1DEBD8104(0, (unint64_t *)&qword_1EBABB3C0, MEMORY[0x1E4F4AA20]);
  uint64_t v4 = sub_1DFDE8410();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, *MEMORY[0x1E4F4AA18], v4);
  sub_1DEBD8158((unint64_t *)&unk_1EBAD0470, MEMORY[0x1E4F7CDF0]);
  sub_1DFDE8390();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DFDEA4B0();
  sub_1DEBD8158(&qword_1EAC21600, MEMORY[0x1E4F7B4C0]);
  memset(v9, 0, sizeof(v9));
  sub_1DFDE83B0();
  return sub_1DE9E4C20((uint64_t)v9);
}

uint64_t sub_1DEBD7F30()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1DEBD7F74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
}

uint64_t sub_1DEBD7F98()
{
  uint64_t v1 = sub_1DFDE7220();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DEBD8028()
{
  sub_1DFDE7220();
  return sub_1DEBD7C94();
}

void sub_1DEBD8098()
{
  if (!qword_1EBAEA618)
  {
    type metadata accessor for OpenURLOptionsKey(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAEA618);
    }
  }
}

void sub_1DEBD8104(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DFDFFEF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DEBD8158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MagazineFeedGroupMoreActionsButton()
{
  uint64_t result = qword_1EBAA5E98;
  if (!qword_1EBAA5E98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEBD81EC()
{
  return swift_initClassMetadata2();
}

id sub_1DEBD8238(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&a1[qword_1EBAA5E90] = 0;
  v13.receiver = a1;
  v13.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a2, a3, a4, a5);
  objc_msgSend(v11, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v11, sel_setHidden_, 1);
  objc_msgSend(v11, sel_setContextMenuInteractionEnabled_, 1);
  objc_msgSend(v11, sel_setShowsMenuAsPrimaryAction_, 1);

  return v11;
}

void sub_1DEBD8310(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_1EBAA5E90] = 0;
  id v4 = a3;

  sub_1DFDFFBB0();
  __break(1u);
}

void sub_1DEBD8388()
{
}

void sub_1DEBD8398(uint64_t a1)
{
}

uint64_t sub_1DEBD83A8()
{
  return type metadata accessor for MagazineFeedGroupMoreActionsButton();
}

void sub_1DEBD83B0()
{
  uint64_t v1 = (char *)*v0;
  objc_msgSend(*v0, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v1, sel_setHidden_, 1);
  uint64_t v2 = *(void **)&v1[qword_1EBAA5E90];
  *(void *)&v1[qword_1EBAA5E90] = 0;
}

void sub_1DEBD8420()
{
  sub_1DEBD8574(&qword_1EAC21610);
  JUMPOUT(0x1E01E4080);
}

void *sub_1DEBD8478(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1E01EFB70](v2);
  if (!v3) {
    return 0;
  }
  id v4 = (void *)v3;
  uint64_t v5 = *(void **)(v3 + qword_1EBAA5E90);
  id v6 = v5;

  return v5;
}

id sub_1DEBD84E4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  id v6 = sub_1DEBD85B8();

  return v6;
}

uint64_t sub_1DEBD8540()
{
  return sub_1DEBD8574(&qword_1EAC21608);
}

uint64_t sub_1DEBD8574(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MagazineFeedGroupMoreActionsButton();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1DEBD85B8()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v1 = self;
  uint64_t v10 = sub_1DEB3085C;
  uint64_t v11 = 0;
  uint64_t v6 = MEMORY[0x1E4F143A8];
  uint64_t v7 = 1107296256;
  uint64_t v8 = sub_1DF320558;
  uint64_t v9 = &block_descriptor_10;
  uint64_t v2 = _Block_copy(&v6);
  swift_retain();
  swift_release();
  uint64_t v10 = sub_1DEBD878C;
  uint64_t v11 = v0;
  uint64_t v6 = MEMORY[0x1E4F143A8];
  uint64_t v7 = 1107296256;
  uint64_t v8 = sub_1DF3205A8;
  uint64_t v9 = &block_descriptor_3;
  uint64_t v3 = _Block_copy(&v6);
  swift_retain();
  swift_release();
  id v4 = objc_msgSend(v1, sel_configurationWithIdentifier_previewProvider_actionProvider_, 0, v2, v3);
  swift_release();
  _Block_release(v3);
  _Block_release(v2);
  swift_release();
  return v4;
}

uint64_t sub_1DEBD8754()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void *sub_1DEBD878C(uint64_t a1)
{
  return sub_1DEBD8478(a1, v1);
}

id sub_1DEBD879C()
{
  uint64_t v0 = self;
  return objc_msgSend(v0, sel_openAppleAccountLoginSettings);
}

uint64_t sub_1DEBD87D4()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  sub_1DEBDA488(v0 + OBJC_IVAR____TtC7NewsUI227SportsOnboardingFlowManager_pendingRoute);
  return swift_deallocClassInstance();
}

uint64_t sub_1DEBD8850()
{
  return type metadata accessor for SportsOnboardingFlowManager(0);
}

uint64_t sub_1DEBD8858(uint64_t a1, int a2)
{
  int v29 = a2;
  uint64_t v30 = *v2;
  uint64_t v4 = type metadata accessor for SportsOnboardingRedirectRoute(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DEAE6578();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v12 = objc_msgSend(self, sel_sharedAccount);
  unsigned int v13 = objc_msgSend(v12, sel_isUserSignedInToiCloud);

  if (v13)
  {
    sub_1DEBD9368();
    sub_1DFDEE090();
    sub_1DEAA29D0();
    uint64_t v14 = (void *)sub_1DFDFEE60();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v8);
    unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v16 = v8;
    uint64_t v17 = v15 + v10;
    uint64_t v18 = swift_allocObject();
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v18 + v15, v11, v16);
    *(unsigned char *)(v18 + v17) = v29 & 1;
    uint64_t v19 = sub_1DFDEDE10();
    swift_release();

    swift_release();
  }
  else
  {
    uint64_t v20 = v8;
    if (qword_1EBAEA6D8 != -1) {
      swift_once();
    }
    sub_1DEAE6250(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1DFE0B250;
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_1DFDF4FF0();
    unint64_t v22 = v36;
    unint64_t v35 = v36;
    sub_1DFDFFB10();
    sub_1DEAF0150(v22);
    uint64_t v23 = v31;
    unint64_t v24 = v32;
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 64) = sub_1DEA08668();
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 40) = v24;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_allocObject();
    uint64_t v33 = &type metadata for AlertSportsOnboardingSignInRequired;
    unint64_t v34 = sub_1DEBDA358();
    sub_1DFDF4F90();
    swift_allocObject();
    uint64_t v26 = sub_1DFDF4F10();
    sub_1DFDF4F40();
    swift_release();
    *(void *)(v25 + 16) = v26;
    *(unsigned char *)(v25 + 56) = 0;
    uint64_t v31 = v25;
    sub_1DEAE44D4();
    sub_1DFDF5010();
    swift_release();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 2, v20);
    sub_1DEAE6250(0, &qword_1EAC21620, type metadata accessor for SportsOnboardingRedirectRoute, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1DFDEDE90();
  }
  return v19;
}

uint64_t sub_1DEBD8D20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = type metadata accessor for SportsOnboardingRedirectRoute(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)v16 - v11;
  sub_1DEBD95F8(a1, (uint64_t)v16 - v11);
  sub_1DEAE6578();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 2, v13))
  {
    sub_1DEBD95F8(a1, (uint64_t)v9);
    sub_1DEAE6250(0, &qword_1EAC21620, type metadata accessor for SportsOnboardingRedirectRoute, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1DFDEDE90();
  }
  else
  {
    uint64_t v14 = sub_1DEBD8858(a3, a4 & 1);
    sub_1DEBD965C((uint64_t)v12);
  }
  return v14;
}

uint64_t sub_1DEBD8EA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DEAE6250(0, &qword_1EBAD33E8, (uint64_t (*)(uint64_t))sub_1DEAE6578, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v17[-v7];
  if (*a1 == 1 && a1[1] == 2)
  {
    uint64_t v15 = a2 + OBJC_IVAR____TtC7NewsUI227SportsOnboardingFlowManager_pendingRoute;
    swift_beginAccess();
    sub_1DEBD946C(v15, a3);
    sub_1DEAE6578();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
    swift_beginAccess();
    sub_1DEBD93D8((uint64_t)v8, v15);
    return swift_endAccess();
  }
  else
  {
    sub_1DEAE6578();
    uint64_t v11 = v10;
    id v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v12((uint64_t)v8, 1, 1, v10);
    uint64_t v13 = a2 + OBJC_IVAR____TtC7NewsUI227SportsOnboardingFlowManager_pendingRoute;
    swift_beginAccess();
    sub_1DEBD93D8((uint64_t)v8, v13);
    swift_endAccess();
    return v12(a3, 1, 1, v11);
  }
}

uint64_t sub_1DEBD90A4(uint64_t a1, char a2, uint64_t a3)
{
  v15[1] = a3;
  sub_1DEAE6578();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v6);
  v15[4] = *v3;
  v15[5] = a1;
  type metadata accessor for SportsOnboardingRedirectRoute(0);
  sub_1DFDEE090();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(unsigned char *)(v11 + v10 + v9) = a2;
  id v12 = (void *)sub_1DFDEDCE0();
  uint64_t v13 = sub_1DFDEDE10();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1DEBD925C()
{
  sub_1DEBD9368();
  sub_1DFDEE090();
  sub_1DEAA29D0();
  uint64_t v0 = (void *)sub_1DFDFEE60();
  sub_1DEAE6250(0, &qword_1EBAD33E8, (uint64_t (*)(uint64_t))sub_1DEAE6578, MEMORY[0x1E4FBB718]);
  uint64_t v1 = sub_1DFDEDE20();
  swift_release();

  return v1;
}

uint64_t sub_1DEBD934C()
{
  return sub_1DEBD96B8(v0);
}

void sub_1DEBD9368()
{
  if (!qword_1EAC21618)
  {
    type metadata accessor for FCSportsOnboardingState(255);
    type metadata accessor for FCSportsSyncState(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC21618);
    }
  }
}

uint64_t sub_1DEBD93D8(uint64_t a1, uint64_t a2)
{
  sub_1DEAE6250(0, &qword_1EBAD33E8, (uint64_t (*)(uint64_t))sub_1DEAE6578, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBD946C(uint64_t a1, uint64_t a2)
{
  sub_1DEAE6250(0, &qword_1EBAD33E8, (uint64_t (*)(uint64_t))sub_1DEAE6578, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBD9500()
{
  return sub_1DEBD8858(*(void *)(v0 + 24), 0);
}

uint64_t type metadata accessor for SportsOnboardingRedirectRoute(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAF6830);
}

uint64_t sub_1DEBD9558(uint64_t a1, uint64_t a2)
{
  sub_1DEAE6578();
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  return sub_1DEBD8D20(a1, a2, v2 + v6, *(unsigned char *)(v2 + v6 + *(void *)(*(void *)(v5 - 8) + 64)));
}

uint64_t sub_1DEBD95F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsOnboardingRedirectRoute(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBD965C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsOnboardingRedirectRoute(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEBD96B8(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  __swift_project_boxed_opaque_existential_1(a1 + 3, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  uint64_t v4 = a1 + 8;
  uint64_t v6 = a1[11];
  uint64_t v5 = a1[12];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
  uint64_t v7 = sub_1DFDEE050();
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_1DEBD977C(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  HIDWORD(v53) = a4;
  uint64_t v54 = a2;
  uint64_t v6 = type metadata accessor for SportsOnboardingRedirectRoute(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v56 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  unint64_t v8 = a1[1];
  if (qword_1EBAEA6D8 != -1) {
    swift_once();
  }
  sub_1DEAE6250(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v10 + 16) = xmmword_1DFE0CC10;
  uint64_t v12 = MEMORY[0x1E4FBB5C8];
  *(void *)(v10 + 56) = v11;
  *(void *)(v10 + 64) = v12;
  *(void *)(v10 + 32) = v9;
  *(void *)(v10 + 96) = v11;
  *(void *)(v10 + 104) = v12;
  *(void *)(v10 + 72) = v8;
  unint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  sub_1DEAE6578();
  uint64_t v14 = v13;
  sub_1DFDF4FF0();
  unint64_t v15 = v60;
  unint64_t v57 = v60;
  sub_1DFDFFB10();
  sub_1DEAF0150(v15);
  unint64_t v16 = v58;
  unint64_t v17 = v59;
  *(void *)(v10 + 136) = MEMORY[0x1E4FBB1A0];
  unint64_t v55 = sub_1DEA08668();
  *(void *)(v10 + 144) = v55;
  *(void *)(v10 + 112) = v16;
  *(void *)(v10 + 120) = v17;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  if (v8 >= 2)
  {
    if (v8 != 2)
    {
      if (v8 == 3) {
        goto LABEL_6;
      }
LABEL_17:
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1DFE0B250;
      unint64_t v58 = 0;
      unint64_t v59 = 0xE000000000000000;
      sub_1DFDF4FF0();
      unint64_t v43 = v60;
      unint64_t v57 = v60;
      sub_1DFDFFB10();
      sub_1DEAF0150(v43);
      unint64_t v44 = v58;
      unint64_t v45 = v59;
      unint64_t v46 = v55;
      *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v42 + 64) = v46;
      *(void *)(v42 + 32) = v44;
      *(void *)(v42 + 40) = v45;
      sub_1DFDFEA60();
      uint64_t v35 = 2;
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
LABEL_20:
      uint64_t v27 = v56;
      goto LABEL_21;
    }
    if (v9 == 1)
    {
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1DFE0B250;
      unint64_t v58 = 0;
      unint64_t v59 = 0xE000000000000000;
      sub_1DFDF4FF0();
      unint64_t v48 = v60;
      unint64_t v57 = v60;
      sub_1DFDFFB10();
      sub_1DEAF0150(v48);
      unint64_t v49 = v58;
      unint64_t v50 = v59;
      unint64_t v51 = v55;
      *(void *)(v47 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v47 + 64) = v51;
      *(void *)(v47 + 32) = v49;
      *(void *)(v47 + 40) = v50;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v9) {
        goto LABEL_17;
      }
      sub_1DEBD9FE4(a3, BYTE4(v53) & 1);
      sub_1DFDF4FF0();
      if (v58 != 0xD000000000000050)
      {
        sub_1DEAF0150(v58);
        sub_1DFDF4FF0();
        int v36 = (v58 >> 58) & 0x3C | (v58 >> 1) & 3;
        sub_1DEAF0150(v58);
        if (v36 != 31)
        {
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = xmmword_1DFE0B250;
          unint64_t v58 = 0;
          unint64_t v59 = 0xE000000000000000;
          sub_1DFDF4FF0();
          unint64_t v38 = v60;
          unint64_t v57 = v60;
          sub_1DFDFFB10();
          sub_1DEAF0150(v38);
          unint64_t v39 = v58;
          unint64_t v40 = v59;
          unint64_t v41 = v55;
          *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v37 + 64) = v41;
          *(void *)(v37 + 32) = v39;
          *(void *)(v37 + 40) = v40;
          sub_1DFDFEA60();
          sub_1DFDF00C0();
          swift_bridgeObjectRelease();
          unint64_t v58 = 0xD000000000000050;
          sub_1DEAE44D4();
          uint64_t v27 = v56;
          sub_1DFDF5010();
          goto LABEL_11;
        }
      }
    }
LABEL_19:
    uint64_t v35 = 1;
    goto LABEL_20;
  }
LABEL_6:
  sub_1DEBD9FE4(a3, BYTE4(v53) & 1);
  sub_1DFDF4FF0();
  unint64_t v18 = v58;
  if (((v18 >> 58) & 0x3C | (v18 >> 1) & 3) != 0x1F)
  {
    sub_1DEAF0150(v58);
    sub_1DFDF4FF0();
    int v28 = (v58 >> 58) & 0x3C | (v58 >> 1) & 3;
    sub_1DEAF0150(v58);
    if (v28 != 33)
    {
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1DFE0B250;
      unint64_t v58 = 0;
      unint64_t v59 = 0xE000000000000000;
      sub_1DFDF4FF0();
      unint64_t v30 = v60;
      unint64_t v57 = v60;
      sub_1DFDFFB10();
      sub_1DEAF0150(v30);
      unint64_t v31 = v58;
      unint64_t v32 = v59;
      unint64_t v33 = v55;
      *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v29 + 64) = v33;
      *(void *)(v29 + 32) = v31;
      *(void *)(v29 + 40) = v32;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = 0;
      *(void *)(v34 + 24) = 0;
      unint64_t v58 = v34 | 0x8000000000000002;
      sub_1DEAE44D4();
      uint64_t v27 = v56;
      goto LABEL_10;
    }
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)((v58 & 0xFFFFFFFFFFFFFF9) + 0x10);
  uint64_t v19 = *(void *)((v58 & 0xFFFFFFFFFFFFFF9) + 0x18);
  swift_bridgeObjectRetain();
  sub_1DEAF0150(v18);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1DFE0B250;
  unint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  sub_1DFDF4FF0();
  unint64_t v22 = v60;
  unint64_t v57 = v60;
  sub_1DFDFFB10();
  sub_1DEAF0150(v22);
  unint64_t v23 = v58;
  unint64_t v24 = v59;
  unint64_t v25 = v55;
  *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v21 + 64) = v25;
  *(void *)(v21 + 32) = v23;
  *(void *)(v21 + 40) = v24;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v20;
  *(void *)(v26 + 24) = v19;
  unint64_t v58 = v26 | 0x8000000000000002;
  sub_1DEAE44D4();
  uint64_t v27 = v56;
LABEL_10:
  sub_1DFDF5010();
  swift_release();
LABEL_11:
  uint64_t v35 = 0;
LABEL_21:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v27, v35, 2, v14);
  sub_1DEAE6250(0, &qword_1EAC21620, type metadata accessor for SportsOnboardingRedirectRoute, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1DFDEDE90();
}

unint64_t sub_1DEBD9FE4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  sub_1DEAE6250(0, &qword_1EBAD33E8, (uint64_t (*)(uint64_t))sub_1DEAE6578, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v21 - v7;
  if ((a2 & 1) == 0)
  {
    sub_1DEAE6578();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
LABEL_11:
    uint64_t v20 = v3 + OBJC_IVAR____TtC7NewsUI227SportsOnboardingFlowManager_pendingRoute;
    swift_beginAccess();
    sub_1DEBD93D8((uint64_t)v8, v20);
    return swift_endAccess();
  }
  sub_1DEAE6578();
  uint64_t v10 = v9;
  sub_1DFDF4FF0();
  unint64_t result = v23;
  int v12 = (result >> 58) & 0x3C | (result >> 1) & 3;
  if (v12 == 33) {
    return sub_1DEAF0150(v23);
  }
  if (v12 != 52 || v23 != 0xD000000000000050)
  {
    sub_1DEAF0150(v23);
    if (qword_1EBAEA6D8 != -1) {
      swift_once();
    }
    sub_1DEAE6250(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DFE0B250;
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_1DFDF4FF0();
    unint64_t v15 = v22;
    unint64_t v21 = v22;
    sub_1DFDFFB10();
    sub_1DEAF0150(v15);
    uint64_t v16 = v24;
    unint64_t v17 = v25;
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = sub_1DEA08668();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v17;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v8, a1, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v10);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1DEBDA2F0()
{
  uint64_t v1 = (id *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 56);
  if (v2 == 2)
  {
  }
  else if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  else if (!*(unsigned char *)(v0 + 56))
  {
    swift_release();
  }
  return swift_deallocObject();
}

unint64_t sub_1DEBDA358()
{
  unint64_t result = qword_1EAC21628;
  if (!qword_1EAC21628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21628);
  }
  return result;
}

uint64_t sub_1DEBDA3B0(uint64_t *a1, uint64_t a2)
{
  sub_1DEAE6578();
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  return sub_1DEBD977C(a1, a2, v2 + v6, *(unsigned __int8 *)(v2 + v6 + *(void *)(*(void *)(v5 - 8) + 64)));
}

uint64_t sub_1DEBDA450()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEBDA488(uint64_t a1)
{
  sub_1DEAE6250(0, &qword_1EBAD33E8, (uint64_t (*)(uint64_t))sub_1DEAE6578, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1DEBDA514(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_1DEAE6578();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 2, v8);
    }
  }
  return a1;
}

uint64_t sub_1DEBDA660(uint64_t a1)
{
  sub_1DEAE6578();
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 2, v2);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1DEBDA730(void *a1, const void *a2, uint64_t a3)
{
  sub_1DEAE6578();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

void *sub_1DEBDA840(void *a1, void *a2, uint64_t a3)
{
  sub_1DEAE6578();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(a1, a2, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(a1, a2, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

void *sub_1DEBDA9B4(void *a1, const void *a2, uint64_t a3)
{
  sub_1DEAE6578();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

void *sub_1DEBDAAC4(void *a1, void *a2, uint64_t a3)
{
  sub_1DEAE6578();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(a1, a2, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(a1, a2, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_1DEBDAC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBDAC4C);
}

uint64_t sub_1DEBDAC4C(uint64_t a1, uint64_t a2)
{
  sub_1DEAE6578();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DEBDACB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBDACCC);
}

uint64_t sub_1DEBDACCC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1DEAE6578();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1DEBDAD50(uint64_t a1)
{
  sub_1DEAE6578();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_1DEBDADB8(uint64_t a1, uint64_t a2)
{
  sub_1DEAE6578();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

void sub_1DEBDAE28()
{
  sub_1DEAE6578();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t sub_1DEBDAEA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FollowingNotificationsPrewarm();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DEBE1958(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FollowingNotificationsPrewarm);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = *v4;
    sub_1DEBCFE94();
    uint64_t v4 = (uint64_t *)((char *)v4 + *(int *)(v6 + 48));
LABEL_16:
    sub_1DEBE14C0((uint64_t)v4, (uint64_t (*)(void))sub_1DEBE0BF0);
    return v5;
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v21 = MEMORY[0x1E4FBC860];
  unint64_t v8 = sub_1DF086FEC();
  unint64_t v10 = v9;
  unint64_t v11 = sub_1DEDA82E4(0, 1, v8);
  sub_1DF3DD370(v11);
  unint64_t v12 = sub_1DEDA82E4(0, 1, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DF3DD370(v12);
  unint64_t v13 = v21;
  uint64_t v20 = (void *)v7;
  if (!(v21 >> 62))
  {
    uint64_t v14 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_5;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    unint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_13:
    swift_bridgeObjectRetain();
    if ((v16 & 0x8000000000000000) != 0 || (unint64_t v17 = (void *)v16, (v16 & 0x4000000000000000) != 0))
    {
      unint64_t v17 = sub_1DEC792E8(v16);
      swift_release();
    }
    uint64_t v20 = v17;
    sub_1DEBDFF08((uint64_t *)&v20);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = (uint64_t)v20;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DFDFFBE0();
  if (!v14) {
    goto LABEL_12;
  }
LABEL_5:
  if (v14 >= 1)
  {
    for (uint64_t i = 0; i != v14; ++i)
    {
      if (*(unsigned char *)(*(void *)(*(void *)(v13 + 8 * i + 32) + 24) + 25))
      {
        swift_retain();
        sub_1DFDFFA50();
        sub_1DFDFFA90();
        sub_1DFDFFAA0();
        sub_1DFDFFA60();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v16 = (unint64_t)v20;
    goto LABEL_13;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1DEBDB134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v71 = a3;
  uint64_t v70 = a2;
  sub_1DEBE11D0();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v65 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBE1320();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v68 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v67 = (uint64_t)&v60 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v60 - v11;
  sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v61 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unint64_t v60 = (char *)&v60 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  char v63 = (char *)&v60 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v64 = (char *)&v60 - v23;
  MEMORY[0x1F4188790](v22);
  unint64_t v25 = (char *)&v60 - v24;
  sub_1DEBE1394();
  MEMORY[0x1F4188790](v26 - 8);
  sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21690, MEMORY[0x1E4FAD830]);
  uint64_t v69 = swift_allocBox();
  uint64_t v28 = v27;
  uint64_t v29 = sub_1DEBE1460(&qword_1EAC21680);
  uint64_t v30 = sub_1DEBE1460(&qword_1EAC21688);
  MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v14, v29, v30);
  unint64_t v31 = sub_1DEAC8E6C();
  sub_1DEAD0C64();
  unint64_t v62 = v31;
  sub_1DFDF5A70();
  uint64_t v32 = v3;
  sub_1DEBDBAB8((uint64_t)v12);
  uint64_t v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v33 = v72(v12, 1, v14);
  uint64_t v66 = v28;
  if (v33 == 1)
  {
    sub_1DEBE14C0((uint64_t)v12, (uint64_t (*)(void))sub_1DEBE1320);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v25, v12, v14);
    sub_1DEBE1520();
    sub_1DFDF5AC0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v14);
  }
  uint64_t v34 = v3;
  unint64_t v35 = *(void *)(v3 + 160);
  if (v35 >= 2)
  {
    uint64_t v42 = (uint64_t)v68;
    if (v35 != 2)
    {
      *(void *)uint64_t v73 = *(void *)(v3 + 160);
      sub_1DFDFFFD0();
      __break(1u);
      return;
    }
  }
  else
  {
    *(void *)uint64_t v73 = *(void *)(v3 + 160);
    memset(&v73[8], 0, 80);
    v73[88] = 6;
    sub_1DEBE1280();
    uint64_t v37 = v36;
    uint64_t v38 = sub_1DEBE12DC(&qword_1EAC21658);
    uint64_t v39 = sub_1DEBE12DC(&qword_1EAC21660);
    MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v37, v38, v39);
    unint64_t v40 = v63;
    sub_1DFDF14C0();
    unint64_t v41 = v64;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v64, v40, v14);
    sub_1DEBE1520();
    sub_1DFDF5AC0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v14);
    uint64_t v42 = (uint64_t)v68;
  }
  uint64_t v43 = v67;
  sub_1DEBDBD48(*(void *)(v32 + 56), v67);
  if (v72((char *)v43, 1, v14) == 1)
  {
    sub_1DEBE14C0(v43, (uint64_t (*)(void))sub_1DEBE1320);
  }
  else
  {
    unint64_t v44 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v60, v43, v14);
    sub_1DEBE1520();
    sub_1DFDF5AC0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v44, v14);
  }
  sub_1DEBDC394(v42);
  if (v72((char *)v42, 1, v14) == 1)
  {
    uint64_t v45 = sub_1DEBE14C0(v42, (uint64_t (*)(void))sub_1DEBE1320);
  }
  else
  {
    unint64_t v46 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v61, v42, v14);
    sub_1DEBE1520();
    sub_1DFDF5AC0();
    uint64_t v45 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v46, v14);
  }
  MEMORY[0x1F4188790](v45);
  *(&v60 - 2) = (char *)v34;
  sub_1DEBE1590();
  sub_1DFDEE090();
  sub_1DEBE1680(v34, (uint64_t)v73);
  uint64_t v47 = swift_allocObject();
  long long v48 = v79;
  *(_OWORD *)(v47 + 176) = v78;
  *(_OWORD *)(v47 + 192) = v48;
  *(_OWORD *)(v47 + 208) = v80;
  long long v49 = v75;
  *(_OWORD *)(v47 + 112) = v74;
  *(_OWORD *)(v47 + 128) = v49;
  long long v50 = v77;
  *(_OWORD *)(v47 + 144) = v76;
  *(_OWORD *)(v47 + 160) = v50;
  long long v51 = *(_OWORD *)&v73[48];
  *(_OWORD *)(v47 + 48) = *(_OWORD *)&v73[32];
  *(_OWORD *)(v47 + 64) = v51;
  long long v52 = *(_OWORD *)&v73[80];
  *(_OWORD *)(v47 + 80) = *(_OWORD *)&v73[64];
  *(_OWORD *)(v47 + 96) = v52;
  long long v53 = *(_OWORD *)&v73[16];
  *(_OWORD *)(v47 + 16) = *(_OWORD *)v73;
  *(_OWORD *)(v47 + 32) = v53;
  uint64_t v54 = v69;
  *(void *)(v47 + 224) = v69;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_1DEBE1748;
  *(void *)(v55 + 24) = v47;
  swift_retain();
  uint64_t v56 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE00();
  swift_release();
  swift_release();

  unint64_t v57 = (void *)swift_allocObject();
  uint64_t v58 = v71;
  v57[2] = v70;
  v57[3] = v58;
  v57[4] = v54;
  swift_retain();
  swift_retain();
  unint64_t v59 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDEA0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1DEBDBAB8@<X0>(uint64_t a1@<X8>)
{
  sub_1DEBE11D0();
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v4 = v1[20];
  if (v4 >= 2)
  {
    if (v4 == 2)
    {
      __swift_project_boxed_opaque_existential_1(v1 + 21, v1[24]);
      sub_1DED8B9E4();
      sub_1DEBE1280();
      uint64_t v9 = v8;
      uint64_t v10 = sub_1DEBE12DC(&qword_1EAC21658);
      uint64_t v11 = sub_1DEBE12DC(&qword_1EAC21660);
      MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v9, v10, v11);
      sub_1DEAC8E6C();
      sub_1DEAD0C64();
      sub_1DFDF14C0();
      sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 0, 1, v12);
    }
    else
    {
      uint64_t result = sub_1DFDFFFD0();
      __break(1u);
    }
  }
  else
  {
    sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    return v6(a1, 1, 1, v5);
  }
  return result;
}

BOOL sub_1DEBDBD24(uint64_t a1, uint64_t a2)
{
  return qword_1DFE12940[*(char *)(a1 + 88)] < qword_1DFE12940[*(char *)(a2 + 88)];
}

uint64_t sub_1DEBDBD48@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1DEBE1280();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBE11D0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1DEBE1680(v3, (uint64_t)v54);
  if (!v11 || (unint64_t v12 = v55, v55 < 2))
  {
    sub_1DEBE1BD4((uint64_t)v54);
LABEL_6:
    sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  if (v55 != 2) {
    goto LABEL_39;
  }
  uint64_t v15 = sub_1DEBE1BD4((uint64_t)v54);
  MEMORY[0x1F4188790](v15);
  *(&v38 - 2) = v3;
  swift_bridgeObjectRetain();
  unint64_t v16 = (unint64_t)sub_1DE9D939C((uint64_t (*)(uint64_t *))sub_1DEBE2000, &v38 - 4, a1);
  if ((v16 & 0x8000000000000000) != 0 || (v16 & 0x4000000000000000) != 0)
  {
    unint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v17 = (uint64_t)sub_1DEC792E8(v25);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v40 = v10;
  *(void *)&long long v44 = v17;
  sub_1DEBDFF08((uint64_t *)&v44);
  swift_bridgeObjectRelease();
  uint64_t v18 = v44;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if ((v44 & 0x8000000000000000) == 0 && (v44 & 0x4000000000000000) == 0)
  {
    uint64_t v20 = *(void *)(v44 + 16);
    if (v20)
    {
LABEL_14:
      uint64_t v39 = a2;
      *(void *)&long long v56 = v19;
      sub_1DEDF6914(0, v20 & ~(v20 >> 63), 0);
      if ((v20 & 0x8000000000000000) == 0)
      {
        uint64_t v21 = 0;
        uint64_t v19 = v56;
        do
        {
          if ((v18 & 0xC000000000000001) != 0) {
            uint64_t v22 = MEMORY[0x1E01EE240](v21, v18);
          }
          else {
            uint64_t v22 = swift_retain();
          }
          *(void *)&long long v44 = v22;
          BYTE8(v47) = 0;
          *(void *)&long long v56 = v19;
          unint64_t v24 = *(void *)(v19 + 16);
          unint64_t v23 = *(void *)(v19 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1DEDF6914(v23 > 1, v24 + 1, 1);
            uint64_t v19 = v56;
          }
          ++v21;
          *(void *)(v19 + 16) = v24 + 1;
          sub_1DEBE2020((uint64_t)&v44, v19 + 48 * v24 + 32);
        }
        while (v20 != v21);
        goto LABEL_28;
      }
      __break(1u);
LABEL_39:
      *(void *)&long long v44 = v12;
      sub_1DFDFFFD0();
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
LABEL_36:
    swift_release();
    goto LABEL_6;
  }
  swift_retain();
  uint64_t v26 = sub_1DFDFFBE0();
  swift_release();
  if (!v26) {
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DFDFFBE0();
  swift_release();
  if (v20) {
    goto LABEL_14;
  }
  uint64_t v39 = a2;
LABEL_28:
  swift_release();
  int64_t v27 = *(void *)(v19 + 16);
  if (v27)
  {
    uint64_t v53 = MEMORY[0x1E4FBC860];
    sub_1DEDF68F4(0, v27, 0);
    uint64_t v28 = v19 + 32;
    uint64_t v29 = v41;
    do
    {
      sub_1DEBE1C9C(v28, (uint64_t)&v44);
      sub_1DEBE1C9C((uint64_t)&v44, (uint64_t)&v56);
      sub_1DEAD0C64();
      sub_1DFDF0B40();
      sub_1DEBE1CF8((uint64_t)&v44);
      uint64_t v30 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DEDF68F4(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v29 = v41;
        uint64_t v30 = v53;
      }
      unint64_t v32 = *(void *)(v30 + 16);
      unint64_t v31 = *(void *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1DEDF68F4(v31 > 1, v32 + 1, 1);
        uint64_t v29 = v41;
        uint64_t v30 = v53;
      }
      *(void *)(v30 + 16) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v30+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v32, v29, v43);
      uint64_t v53 = v30;
      v28 += 48;
      --v27;
    }
    while (v27);
  }
  swift_bridgeObjectRelease();
  sub_1DF9BA408((uint64_t)&v56);
  long long v44 = v56;
  uint64_t v45 = v57;
  uint64_t v46 = v58;
  long long v47 = v59;
  long long v48 = v60;
  uint64_t v50 = 0;
  uint64_t v51 = 0;
  uint64_t v49 = v61;
  char v52 = 1;
  uint64_t v33 = sub_1DEBE12DC(&qword_1EAC21658);
  uint64_t v34 = sub_1DEBE12DC(&qword_1EAC21660);
  MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v43, v33, v34);
  sub_1DEAC8E6C();
  sub_1DEAD0C64();
  uint64_t v35 = v39;
  sub_1DFDF14C0();
  sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
  uint64_t v37 = v36;
  sub_1DFDF1520();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v35, 0, 1, v37);
}

uint64_t sub_1DEBDC394@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1DEBE11D0();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1DEBE1280();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v1 + 96);
  if (objc_msgSend(v10, sel_isSignedIntoEmailAccount))
  {
    uint64_t v11 = *(void *)(v2 + 144);
    uint64_t v12 = *(void *)(v2 + 152);
    __swift_project_boxed_opaque_existential_1((void *)(v2 + 120), v11);
    EmailSignupModelFactoryType.model(from:)((uint64_t)v10, v11, v12);
    long long v13 = v29;
    if (*((void *)&v29 + 1))
    {
      unsigned __int8 v14 = objc_msgSend(*(id *)(v2 + 80), sel_useFineGrainedNewsletterManagement);
      uint64_t v28 = v13;
      if (v14)
      {
        *(void *)&long long v29 = sub_1DEE9F0BC((void)v13 != 0);
        BYTE8(v32) = 2;
        sub_1DEAD0C64();
        sub_1DFDF0B40();
        uint64_t v15 = 0;
        uint64_t v16 = 0;
      }
      else
      {
        sub_1DEDF42B8(1, *((uint64_t *)&v13 + 1));
        uint64_t v15 = sub_1DF8BE308();
        uint64_t v16 = v20;
        if ((void)v13) {
          char v21 = 1;
        }
        else {
          char v21 = 2;
        }
        sub_1DF2B61DC(v21, (uint64_t)v39);
        v38[3] = &type metadata for NotificationsNewsletterRowModel;
        v38[4] = &off_1F3A97448;
        uint64_t v22 = (_OWORD *)swift_allocObject();
        v38[0] = v22;
        long long v23 = v39[1];
        v22[1] = v39[0];
        v22[2] = v23;
        v22[3] = v40[0];
        *(_OWORD *)((char *)v22 + 58) = *(_OWORD *)((char *)v40 + 10);
        sub_1DE94F204((uint64_t)v38, (uint64_t)&v29);
        BYTE8(v32) = 1;
        sub_1DEBE1C9C((uint64_t)&v29, (uint64_t)&v41);
        sub_1DEAD0C64();
        sub_1DFDF0B40();
        sub_1DEBE1CF8((uint64_t)&v29);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      }
      sub_1DF9BA4FC((uint64_t)&v41);
      long long v29 = v41;
      uint64_t v30 = v42;
      uint64_t v31 = v43;
      long long v32 = v44;
      long long v33 = v45;
      uint64_t v34 = v46;
      uint64_t v35 = v15;
      uint64_t v36 = v16;
      char v37 = 4;
      sub_1DEB2223C((uint64_t)&v41);
      uint64_t v24 = sub_1DEBE12DC(&qword_1EAC21658);
      uint64_t v25 = sub_1DEBE12DC(&qword_1EAC21660);
      MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v6, v24, v25);
      sub_1DEAC8E6C();
      sub_1DEAD0C64();
      sub_1DFDF14C0();
      sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
      uint64_t v27 = v26;
      sub_1DFDF1530();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DEB22304((uint64_t)&v41);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a1, 0, 1, v27);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  return v18(a1, 1, 1, v17);
}

uint64_t sub_1DEBDC818(uint64_t a1)
{
  sub_1DEBE1320();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DEBE164C(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = a1;
  sub_1DEABEF68(0, &qword_1EAC216C8, (uint64_t (*)(uint64_t))sub_1DEBE1618, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1DFDEDF30();
  uint64_t v8 = sub_1DEBDE250();
  if (v9)
  {
    uint64_t v10 = MEMORY[0x1F4188790](v8);
    *(void *)&v19[-32] = a1;
    *(void *)&v19[-24] = v10;
    *(void *)&v19[-16] = v11;
    sub_1DEABEF68(0, &qword_1EAC216D0, (uint64_t (*)(uint64_t))sub_1DEBE164C, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1DFDEDF30();
    uint64_t v12 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DEBE1280();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
    sub_1DEABEF68(0, &qword_1EAC216D0, (uint64_t (*)(uint64_t))sub_1DEBE164C, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v12 = sub_1DFDEDE90();
  }
  MEMORY[0x1F4188790](v12);
  *(void *)&v19[-16] = a1;
  sub_1DEABEF68(0, &qword_1EAC216D0, (uint64_t (*)(uint64_t))sub_1DEBE164C, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v14 = sub_1DFDEDF30();
  unint64_t v15 = *(void *)(a1 + 160);
  if (v15 >= 2)
  {
    if (v15 != 2)
    {
      uint64_t v21 = *(void *)(a1 + 160);
      uint64_t result = sub_1DFDFFFD0();
      __break(1u);
      return result;
    }
    MEMORY[0x1F4188790](v14);
    *(void *)&v19[-16] = a1;
    sub_1DEABEF68(0, &qword_1EAC216D8, (uint64_t (*)(uint64_t))sub_1DEBE1320, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1DFDEDF30();
  }
  else
  {
    sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
    sub_1DEABEF68(0, &qword_1EAC216D8, (uint64_t (*)(uint64_t))sub_1DEBE1320, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1DFDEDE90();
  }
  uint64_t v17 = sub_1DFDEE030();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_1DEBDCD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v24[1] = a5;
  uint64_t v25 = a4;
  sub_1DEBE1320();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v24 - v12;
  sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  v24[0] = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v24 - v19;
  sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21690, MEMORY[0x1E4FAD830]);
  swift_projectBox();
  sub_1DEBDD080(a1, a2, a3, (uint64_t)v13);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v21(v13, 1, v15) == 1)
  {
    sub_1DEBE14C0((uint64_t)v13, (uint64_t (*)(void))sub_1DEBE1320);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v13, v15);
    swift_beginAccess();
    sub_1DEBE1520();
    sub_1DFDF5AC0();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  }
  sub_1DEBE1958(v25, (uint64_t)v11, (uint64_t (*)(void))sub_1DEBE1320);
  if (v21(v11, 1, v15) == 1) {
    return sub_1DEBE14C0((uint64_t)v11, (uint64_t (*)(void))sub_1DEBE1320);
  }
  uint64_t v23 = v24[0];
  (*(void (**)(void, char *, uint64_t))(v16 + 32))(v24[0], v11, v15);
  swift_beginAccess();
  sub_1DEBE1520();
  sub_1DFDF5AC0();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v23, v15);
}

uint64_t sub_1DEBDD080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v105 = a3;
  uint64_t v108 = a2;
  uint64_t v109 = a1;
  uint64_t v110 = a4;
  sub_1DEBE164C(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v90 - v9;
  sub_1DEBE1280();
  uint64_t v12 = v11;
  uint64_t v107 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v90 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v90 - v19;
  sub_1DEBE11D0();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v90 - v27;
  unint64_t v29 = *(void *)(v4 + 160);
  if (v29 >= 2)
  {
    *(void *)&long long v95 = v23;
    uint64_t v100 = v20;
    uint64_t v33 = v108;
    uint64_t v96 = v10;
    uint64_t v97 = v8;
    uint64_t v92 = v18;
    uint64_t v93 = v15;
    uint64_t v104 = v28;
    uint64_t v106 = v4;
    uint64_t v102 = v26;
    if (v29 != 2)
    {
      v122[0] = v29;
      goto LABEL_77;
    }
    id v34 = objc_msgSend(self, sel_sharedAccount);
    unsigned int v103 = objc_msgSend(v34, sel_isUserSignedIntoiTunes);

    uint64_t v35 = (char *)objc_msgSend(*(id *)(v106 + 72), sel_cachedSubscription);
    id v36 = objc_getAssociatedObject(v35, v35 + 1);
    uint64_t v37 = v33;
    uint64_t v38 = v100;
    uint64_t v98 = v12;
    if (v36)
    {
      sub_1DFDFF780();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v118 = 0u;
      long long v119 = 0u;
    }
    uint64_t v39 = v109;
    sub_1DEA6964C((uint64_t)&v118, (uint64_t)v122);
    uint64_t v99 = v25;
    if (v123)
    {
      sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
      if (swift_dynamicCast())
      {
        id v40 = v115[0];
        unint64_t v41 = (unint64_t)objc_msgSend(v115[0], sel_integerValue);
        if (v41 == -1) {
          goto LABEL_23;
        }
        goto LABEL_16;
      }
    }
    else
    {
      sub_1DE9E4C20((uint64_t)v122);
    }
    id v40 = 0;
    unint64_t v41 = 0;
LABEL_16:
    if (objc_getAssociatedObject(v35, (const void *)~v41))
    {
      sub_1DFDFF780();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v118 = 0u;
      long long v119 = 0u;
    }
    sub_1DEA6964C((uint64_t)&v118, (uint64_t)v122);
    if (v123)
    {
      sub_1DE919914(0, (unint64_t *)&qword_1EBABB070);
      if (swift_dynamicCast())
      {
        id v42 = v115[0];
        id v43 = objc_msgSend(v42, sel_integerValue);

LABEL_24:
        uint64_t v44 = ((unint64_t)v43 + 1) ^ (v41 + 1);
        uint64_t v45 = v106;
        unsigned int v46 = objc_msgSend(*(id *)(v106 + 80), sel_narrativeAudio);
        unsigned int v47 = v46;
        if (((v103 | v44) & 1) == 0 && (v46 & 1) == 0 && !*(void *)(v39 + 16)) {
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v110, 1, 1, v99);
        }
        id v48 = objc_msgSend(*(id *)(v45 + 88), sel_appConfiguration);
        unsigned __int8 v49 = objc_msgSend(v48, sel_respondsToSelector_, sel_paidBundleConfig);
        LODWORD(v109) = v47;
        uint64_t v94 = v44;
        if (v49)
        {
          id v50 = objc_msgSend(v48, sel_paidBundleConfig);
          swift_unknownObjectRelease();
          id v51 = objc_msgSend(v50, sel_audioDailyBriefingFeatureName);

          if (v51)
          {
            uint64_t v91 = sub_1DFDFDD20();
            uint64_t v101 = v52;
          }
          else
          {
            uint64_t v91 = 0;
            uint64_t v101 = 0;
          }
        }
        else
        {
          swift_unknownObjectRelease();
          uint64_t v91 = 0;
          uint64_t v101 = 0;
        }
        sub_1DF9BA5EC((uint64_t)v131);
        uint64_t v53 = v131[0];
        uint64_t v54 = v131[1];
        uint64_t v55 = v131[2];
        uint64_t v56 = v131[3];
        long long v57 = v132;
        long long v58 = v133;
        uint64_t v59 = v134;
        if (v109)
        {
          long long v95 = v132;
          long long v90 = v133;
          uint64_t v60 = sub_1DF8BE408(v91, v101);
          long long v58 = v90;
          long long v57 = v95;
        }
        else
        {
          uint64_t v60 = 0;
          uint64_t v61 = 0;
        }
        v122[0] = v53;
        v122[1] = v54;
        long long v122[2] = v55;
        uint64_t v123 = v56;
        long long v124 = v57;
        long long v125 = v58;
        uint64_t v126 = v59;
        uint64_t v127 = v60;
        uint64_t v128 = v61;
        char v129 = 3;
        sub_1DEB2223C((uint64_t)v131);
        uint64_t v62 = sub_1DEBE12DC(&qword_1EAC21658);
        uint64_t v63 = sub_1DEBE12DC(&qword_1EAC21660);
        uint64_t v64 = v98;
        MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v98, v62, v63);
        sub_1DEAC8E6C();
        *(void *)&long long v95 = sub_1DEAD0C64();
        sub_1DFDF14C0();
        uint64_t v65 = v99;
        sub_1DFDF1520();
        uint64_t v66 = (uint64_t)v96;
        sub_1DEBE1958(v37, (uint64_t)v96, (uint64_t (*)(void))sub_1DEBE164C);
        uint64_t v67 = v107;
        uint64_t v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
        if (v68(v66, 1, v64) == 1)
        {
          sub_1DEBE14C0(v66, (uint64_t (*)(void))sub_1DEBE164C);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v38, v66, v64);
          sub_1DFDF1530();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v64);
        }
        uint64_t v69 = v110;
        uint64_t v70 = v106;
        uint64_t v71 = (uint64_t)v97;
        sub_1DEBE1958(v105, (uint64_t)v97, (uint64_t (*)(void))sub_1DEBE164C);
        if (v68(v71, 1, v64) == 1)
        {
          sub_1DEBE14C0(v71, (uint64_t (*)(void))sub_1DEBE164C);
        }
        else
        {
          uint64_t v72 = v92;
          (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v92, v71, v64);
          sub_1DFDF1530();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v72, v64);
        }
        sub_1DEBE1680(v70, (uint64_t)v122);
        if (v103 && (unint64_t v73 = v130, v130 >= 2))
        {
          if (v130 != 2) {
            goto LABEL_78;
          }
          sub_1DEBE1BD4((uint64_t)v122);
          if (objc_msgSend(*(id *)(v70 + 64), sel_marketingNotificationsEnabled)) {
            char v74 = 1;
          }
          else {
            char v74 = 2;
          }
          sub_1DF2B6318(v74, (uint64_t)v135);
          *((void *)&v138 + 1) = &type metadata for NotificationsMarketingRowModel;
          *(void *)&v139[0] = &off_1F3A971C0;
          long long v75 = (_OWORD *)swift_allocObject();
          *(void *)&long long v137 = v75;
          long long v76 = v135[1];
          v75[1] = v135[0];
          v75[2] = v76;
          v75[3] = v136[0];
          *(_OWORD *)((char *)v75 + 58) = *(_OWORD *)((char *)v136 + 10);
          sub_1DE94F204((uint64_t)&v137, (uint64_t)&v118);
          char v120 = 1;
          sub_1DEBE1C9C((uint64_t)&v118, (uint64_t)v115);
          long long v77 = v93;
          sub_1DFDF0B40();
          sub_1DFDF1530();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v77, v64);
          sub_1DEBE1CF8((uint64_t)&v118);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v137);
        }
        else
        {
          sub_1DEBE1BD4((uint64_t)v122);
        }
        sub_1DEBE1680(v70, (uint64_t)&v118);
        if ((v94 & 1) != 0 && (unint64_t)v121 >= 2)
        {
          if (v121 != (void *)2)
          {
            v115[0] = v121;
            goto LABEL_77;
          }
          sub_1DEBE1BD4((uint64_t)&v118);
          if (objc_msgSend(*(id *)(v70 + 64), sel_newIssueNotificationsEnabled)) {
            char v78 = 1;
          }
          else {
            char v78 = 2;
          }
          sub_1DF2B6454(v78, (uint64_t)&v137);
          v111[3] = &type metadata for NotificationsNewIssuesRowModel;
          v111[4] = &off_1F3A971F0;
          long long v79 = (_OWORD *)swift_allocObject();
          v111[0] = v79;
          long long v80 = v138;
          v79[1] = v137;
          v79[2] = v80;
          v79[3] = v139[0];
          *(_OWORD *)((char *)v79 + 58) = *(_OWORD *)((char *)v139 + 10);
          sub_1DE94F204((uint64_t)v111, (uint64_t)v115);
          char v116 = 1;
          sub_1DEBE1C9C((uint64_t)v115, (uint64_t)v112);
          uint64_t v81 = v93;
          sub_1DFDF0B40();
          sub_1DFDF1530();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v81, v64);
          sub_1DEBE1CF8((uint64_t)v115);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
        }
        else
        {
          sub_1DEBE1BD4((uint64_t)&v118);
        }
        sub_1DEBE1680(v70, (uint64_t)v115);
        if (!v109 || v117 < 2)
        {
          sub_1DEBE1BD4((uint64_t)v115);
          sub_1DEB22304((uint64_t)v131);
          swift_bridgeObjectRelease();
LABEL_51:
          (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v69, v104, v65);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v69, 0, 1, v65);
        }
        if (v117 == 2)
        {
          uint64_t v82 = v64;
          sub_1DEBE1BD4((uint64_t)v115);
          if (objc_msgSend(*(id *)(v70 + 64), sel_endOfAudioTrackNotificationsEnabled)) {
            char v83 = 1;
          }
          else {
            char v83 = 2;
          }
          if (v101) {
            uint64_t v84 = v91;
          }
          else {
            uint64_t v84 = 0;
          }
          if (v101) {
            unint64_t v85 = v101;
          }
          else {
            unint64_t v85 = 0xE000000000000000;
          }
          if (qword_1EAC1D328 != -1) {
            swift_once();
          }
          uint64_t v86 = (void *)qword_1EACDFC70;
          v114[3] = &type metadata for NotificationsEndOfAudioTrackRowModel;
          v114[4] = &off_1F3A97220;
          uint64_t v87 = swift_allocObject();
          v114[0] = v87;
          *(unsigned char *)(v87 + 16) = 4;
          *(void *)(v87 + 24) = v86;
          *(void *)(v87 + 32) = 0;
          *(unsigned char *)(v87 + 40) = 1;
          *(void *)(v87 + 48) = 4;
          *(void *)(v87 + 56) = v84;
          *(void *)(v87 + 64) = v85;
          *(unsigned char *)(v87 + 72) = v83;
          *(unsigned char *)(v87 + 73) = 1;
          sub_1DE94F204((uint64_t)v114, (uint64_t)v112);
          char v113 = 1;
          sub_1DEBE1C9C((uint64_t)v112, (uint64_t)v111);
          id v88 = v86;
          uint64_t v89 = v93;
          sub_1DFDF0B40();
          sub_1DFDF1530();
          sub_1DEB22304((uint64_t)v131);
          (*(void (**)(char *, uint64_t))(v107 + 8))(v89, v82);
          sub_1DEBE1CF8((uint64_t)v112);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
          goto LABEL_51;
        }
        v112[0] = v117;
        while (1)
        {
LABEL_77:
          sub_1DFDFFFD0();
          __break(1u);
LABEL_78:
          *(void *)&long long v118 = v73;
        }
      }
    }
    else
    {
      sub_1DE9E4C20((uint64_t)v122);
    }
LABEL_23:

    id v43 = 0;
    goto LABEL_24;
  }
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v31 = v110;
  return v30(v31, 1, 1, v25);
}

uint64_t sub_1DEBDDD68(void (*a1)(char *))
{
  sub_1DEBE1844(0, &qword_1EAC216B8, MEMORY[0x1E4FACA00]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v15 - v5;
  sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21690, MEMORY[0x1E4FAD830]);
  uint64_t v8 = v7;
  uint64_t v9 = swift_projectBox();
  sub_1DEBE18C8();
  uint64_t v11 = &v6[*(int *)(v10 + 48)];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v9, v8);
  uint64_t v12 = *MEMORY[0x1E4FAC298];
  uint64_t v13 = sub_1DFDF1930();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAC9E8], v3);
  a1(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DEBDDF60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(*(void *)(v2 + 104) + OBJC_IVAR____TtC7NewsUI219SubscriptionService_subscriptionController);
  uint64_t v6 = (void *)sub_1DFDFDCE0();
  LODWORD(v5) = objc_msgSend(v5, sel_isAppleNewsNotificationForTagID_, v6);

  sub_1DEBE1680(v2, (uint64_t)v19);
  if (v5)
  {
    sub_1DEBE1BD4((uint64_t)v19);
LABEL_3:
    sub_1DEBE1680(v2, (uint64_t)v18);
LABEL_4:
    sub_1DEBE1BD4((uint64_t)v18);
    char v7 = 1;
    return v7 & 1;
  }
  if (objc_msgSend(v20, sel_puzzlesEnabled)
    && (id v8 = objc_msgSend(objc_msgSend(v21, sel_possiblyUnfetchedAppConfiguration), sel_puzzlesConfig), swift_unknownObjectRelease(), v9 = objc_msgSend(v8, sel_puzzleHubTagID), v8, v9))
  {
    uint64_t v10 = sub_1DFDFDD20();
    uint64_t v12 = v11;

    if (v10 == a1 && v12 == a2)
    {
      sub_1DEBE1BD4((uint64_t)v19);
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    char v14 = sub_1DFDFFF50();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DEBE1BD4((uint64_t)v19);
    swift_bridgeObjectRelease();
    sub_1DEBE1680(v2, (uint64_t)v18);
    if (v14) {
      goto LABEL_4;
    }
  }
  else
  {
    sub_1DEBE1BD4((uint64_t)v19);
    sub_1DEBE1680(v2, (uint64_t)v18);
  }
  uint64_t v15 = sub_1DEBDE250();
  if (v16)
  {
    if (v15 == a1 && v16 == a2) {
      char v7 = 1;
    }
    else {
      char v7 = sub_1DFDFFF50();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DEBE1BD4((uint64_t)v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DEBE1BD4((uint64_t)v18);
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1DEBDE190()
{
  if (!objc_msgSend(*(id *)(v0 + 80), sel_puzzlesEnabled)) {
    return 0;
  }
  id v1 = objc_msgSend(objc_msgSend(*(id *)(v0 + 88), sel_possiblyUnfetchedAppConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  id v2 = objc_msgSend(v1, sel_puzzleHubTagID);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1DFDFDD20();

  return v3;
}

uint64_t sub_1DEBDE250()
{
  id v1 = objc_msgSend(objc_msgSend(*(id *)(v0 + 88), sel_possiblyUnfetchedAppConfiguration), sel_mySportsTagID);
  swift_unknownObjectRelease();
  if (v1)
  {
    uint64_t v2 = sub_1DFDFDD20();
  }
  else
  {
    if (qword_1EBACBF28 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1DFDF01D0();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EBB62BE8);
    uint64_t v4 = sub_1DFDF01B0();
    os_log_type_t v5 = sub_1DFDFEA40();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1DE913000, v4, v5, "FollowingNotificationsPrewarmModifier unable to fetch appConfiguration for mySportsTagID", v6, 2u);
      MEMORY[0x1E01EFA10](v6, -1, -1);
    }

    return 0;
  }
  return v2;
}

BOOL sub_1DEBDE390(uint64_t a1)
{
  id v1 = objc_msgSend(*(id *)(*(void *)(*(void *)a1 + 24) + 16), sel_identifier);
  uint64_t v2 = sub_1DFDFDD20();
  uint64_t v4 = v3;

  char v5 = sub_1DEBDDF60(v2, v4);
  swift_bridgeObjectRelease();
  return (v5 & 1) == 0;
}

uint64_t sub_1DEBDE41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5;
  unint64_t v8 = *(void *)(a5 + 56);
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_14:
    uint64_t v21 = sub_1DE9DB9D8(v12);
    swift_bridgeObjectRelease();
    sub_1DE94F204(v5, (uint64_t)v35);
    uint64_t v22 = v36;
    uint64_t v23 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    sub_1DEBE1680(v5, (uint64_t)v34);
    uint64_t v24 = swift_allocObject();
    long long v25 = v34[11];
    *(_OWORD *)(v24 + 176) = v34[10];
    *(_OWORD *)(v24 + 192) = v25;
    *(_OWORD *)(v24 + 208) = v34[12];
    long long v26 = v34[7];
    *(_OWORD *)(v24 + 112) = v34[6];
    *(_OWORD *)(v24 + 128) = v26;
    long long v27 = v34[9];
    *(_OWORD *)(v24 + 144) = v34[8];
    *(_OWORD *)(v24 + 160) = v27;
    long long v28 = v34[3];
    *(_OWORD *)(v24 + 48) = v34[2];
    *(_OWORD *)(v24 + 64) = v28;
    long long v29 = v34[5];
    *(_OWORD *)(v24 + 80) = v34[4];
    *(_OWORD *)(v24 + 96) = v29;
    long long v30 = v34[1];
    *(_OWORD *)(v24 + 16) = v34[0];
    *(_OWORD *)(v24 + 32) = v30;
    *(void *)(v24 + 224) = v21;
    *(void *)(v24 + 232) = a1;
    *(void *)(v24 + 240) = a2;
    uint64_t v31 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v23 + 32);
    swift_retain();
    v31(sub_1DEBE1E7C, v24, v22, v23);
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DFDFFBE0();
  if (!v9) {
    goto LABEL_13;
  }
LABEL_3:
  *(void *)&v34[0] = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEA9B358(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v32 = v5;
    uint64_t v33 = a2;
    uint64_t v11 = 0;
    uint64_t v12 = *(void *)&v34[0];
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = MEMORY[0x1E01EE240](v11, v8);
      }
      else
      {
        uint64_t v13 = *(void *)(v8 + 8 * v11 + 32);
        swift_retain();
      }
      id v14 = objc_msgSend(*(id *)(*(void *)(v13 + 24) + 16), sel_identifier);
      uint64_t v15 = sub_1DFDFDD20();
      uint64_t v17 = v16;
      swift_release();

      *(void *)&v34[0] = v12;
      unint64_t v19 = *(void *)(v12 + 16);
      unint64_t v18 = *(void *)(v12 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1DEA9B358(v18 > 1, v19 + 1, 1);
        uint64_t v12 = *(void *)&v34[0];
      }
      ++v11;
      *(void *)(v12 + 16) = v19 + 1;
      uint64_t v20 = v12 + 16 * v19;
      *(void *)(v20 + 32) = v15;
      *(void *)(v20 + 40) = v17;
    }
    while (v9 != v11);
    swift_bridgeObjectRelease();
    a2 = v33;
    uint64_t v5 = v32;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEBDE6A4(uint64_t a1, void *a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  sub_1DEBE1320();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DEBE1958(a1, (uint64_t)v25, (uint64_t (*)(void))sub_1DEBE1E8C);
  if (v26)
  {

    sub_1DE919914(0, (unint64_t *)&qword_1EBABB0D0);
    uint64_t v13 = (void *)sub_1DFDFF5F0();
    sub_1DFDFEA60();
    sub_1DFDF00C0();

    sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
    a4(v12);
    return sub_1DEBE14C0((uint64_t)v12, (uint64_t (*)(void))sub_1DEBE1320);
  }
  else
  {
    uint64_t v16 = a2[3];
    uint64_t v17 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v16);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1DEBE19C0(v18, a3);
    swift_bridgeObjectRelease();
    uint64_t v20 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v20);
    *(void *)&v24[-16] = a2;
    uint64_t v21 = sub_1DE9C661C((uint64_t)sub_1DEBE1F18, (uint64_t)&v24[-32], v19);
    if (*(void *)(v21 + 16))
    {
      uint64_t v22 = a2[5];
      swift_retain();
      sub_1DF08B2A8(v21, v22, a4, a5);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 1, 1, v23);
      a4(v12);
      sub_1DEBE14C0((uint64_t)v12, (uint64_t (*)(void))sub_1DEBE1320);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
}

uint64_t sub_1DEBDE9CC(unint64_t a1, char a2, void (*a3)(char *), uint64_t a4)
{
  sub_1DEBE1280();
  uint64_t v51 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v50 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBE1320();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBE11D0();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBE1844(0, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v42 - v20;
  if (a2) {
    goto LABEL_20;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1DFDFFBE0();
    sub_1DEBCFB90((id)a1, 0);
    if (v34) {
      goto LABEL_4;
    }
LABEL_20:
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB0D0);
    uint64_t v35 = (void *)sub_1DFDFF5F0();
    sub_1DFDFEA60();
    sub_1DFDF00C0();

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v13, 1, 1, v18);
    a3(v13);
    return sub_1DEBE14C0((uint64_t)v13, (uint64_t (*)(void))sub_1DEBE1320);
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_20;
  }
LABEL_4:
  uint64_t v22 = sub_1DEDA82E4(0, 1, a1);
  if (v22 < 0 || (v22 & 0x4000000000000000) != 0)
  {
    unint64_t v37 = swift_bridgeObjectRetain();
    uint64_t v23 = (uint64_t)sub_1DEC792E8(v37);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  *(void *)&long long v53 = v23;
  sub_1DEBDFF08((uint64_t *)&v53);
  unsigned int v47 = v16;
  id v48 = v21;
  uint64_t v49 = v19;
  swift_bridgeObjectRelease();
  uint64_t v24 = v53;
  if ((v53 & 0x8000000000000000) == 0 && (v53 & 0x4000000000000000) == 0)
  {
    uint64_t v25 = *(void *)(v53 + 16);
    if (v25) {
      goto LABEL_10;
    }
LABEL_23:
    swift_release();
    uint64_t v28 = v51;
LABEL_24:
    sub_1DF9BA6D8((uint64_t)&v62);
    long long v53 = v62;
    uint64_t v54 = v63;
    uint64_t v55 = v64;
    long long v56 = v65;
    long long v57 = v66;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t v58 = v67;
    char v61 = 2;
    uint64_t v38 = sub_1DEBE12DC(&qword_1EAC21658);
    uint64_t v39 = sub_1DEBE12DC(&qword_1EAC21660);
    MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v28, v38, v39);
    sub_1DEAC8E6C();
    sub_1DEAD0C64();
    id v40 = v48;
    sub_1DFDF14C0();
    sub_1DFDF1520();
    swift_bridgeObjectRelease();
    uint64_t v41 = v49;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v13, v40, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v13, 0, 1, v18);
    a3(v13);
    sub_1DEBE14C0((uint64_t)v13, (uint64_t (*)(void))sub_1DEBE1320);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v40, v18);
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1DFDFFBE0();
  swift_release();
  if (!v25) {
    goto LABEL_23;
  }
LABEL_10:
  uint64_t v43 = v18;
  uint64_t v44 = v13;
  uint64_t v45 = a4;
  unsigned int v46 = a3;
  *(void *)&long long v62 = MEMORY[0x1E4FBC860];
  sub_1DEDF68F4(0, v25 & ~(v25 >> 63), 0);
  if ((v25 & 0x8000000000000000) == 0)
  {
    uint64_t v26 = 0;
    uint64_t v27 = v62;
    unint64_t v52 = v24 & 0xC000000000000001;
    uint64_t v28 = v51;
    long long v29 = v50;
    uint64_t v30 = v24;
    do
    {
      if (v52) {
        uint64_t v31 = MEMORY[0x1E01EE240](v26, v24);
      }
      else {
        uint64_t v31 = swift_retain();
      }
      *(void *)&long long v53 = v31;
      BYTE8(v56) = 0;
      sub_1DEAD0C64();
      sub_1DFDF0B40();
      *(void *)&long long v62 = v27;
      unint64_t v33 = *(void *)(v27 + 16);
      unint64_t v32 = *(void *)(v27 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1DEDF68F4(v32 > 1, v33 + 1, 1);
        uint64_t v28 = v51;
        uint64_t v27 = v62;
      }
      ++v26;
      *(void *)(v27 + 16) = v33 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v27+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v33, v29, v28);
      uint64_t v24 = v30;
    }
    while (v25 != v26);
    swift_release();
    a3 = v46;
    uint64_t v13 = v44;
    uint64_t v18 = v43;
    goto LABEL_24;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DEBDF088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = off_1F3AD0AF0;
  type metadata accessor for SubscriptionService();
  swift_retain();
  uint64_t v10 = v9();
  uint64_t v11 = *(void *)(a5 + 40);
  swift_retain();
  sub_1DF08B7C0(v10, v11, sub_1DEB1D34C, v8);
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1DEBDF168(unint64_t a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_1DEBE1280();
  uint64_t v29 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    goto LABEL_16;
  }
  if (!(a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_16:
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB0D0);
    uint64_t v25 = (void *)sub_1DFDFF5F0();
    sub_1DFDFEA60();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1DFDF00C0();

    return a3(v26);
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1DFDFFBE0();
  sub_1DEBCFB90((id)a1, 0);
  if (!v24) {
    goto LABEL_16;
  }
LABEL_4:
  unint64_t v12 = sub_1DEDA82E4(0, 1, a1);
  unint64_t v13 = v12;
  if (!(v12 >> 62))
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_6;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    a3(MEMORY[0x1E4FBC860]);
    return swift_bridgeObjectRelease();
  }
  uint64_t v14 = sub_1DFDFFBE0();
  if (!v14) {
    goto LABEL_18;
  }
LABEL_6:
  v27[1] = a4;
  uint64_t v28 = (void (*)(uint64_t))a3;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DEDF68F4(0, v14 & ~(v14 >> 63), 0);
  uint64_t v30 = v14;
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = 0;
    uint64_t v17 = v33;
    unint64_t v18 = v13 & 0xC000000000000001;
    uint64_t v19 = v29;
    unint64_t v20 = v13;
    do
    {
      if (v18) {
        uint64_t v21 = MEMORY[0x1E01EE240](v16, v13);
      }
      else {
        uint64_t v21 = swift_retain();
      }
      uint64_t v31 = v21;
      char v32 = 0;
      sub_1DEAD0C64();
      sub_1DFDF0B40();
      uint64_t v33 = v17;
      unint64_t v23 = *(void *)(v17 + 16);
      unint64_t v22 = *(void *)(v17 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1DEDF68F4(v22 > 1, v23 + 1, 1);
        uint64_t v19 = v29;
        uint64_t v17 = v33;
      }
      ++v16;
      *(void *)(v17 + 16) = v23 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v23, v11, v19);
      unint64_t v13 = v20;
    }
    while (v30 != v16);
    swift_bridgeObjectRelease();
    v28(v17);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DEBDF470(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1DEBE164C(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DEBDE190();
  if (v12)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    sub_1DE9DB7BC(0, (unint64_t *)&qword_1EBABB6F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DFE0B250;
    *(void *)(v15 + 32) = v13;
    *(void *)(v15 + 40) = v14;
    sub_1DEBE1680(a5, (uint64_t)v25);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a1;
    *(void *)(v16 + 24) = a2;
    long long v17 = v25[11];
    *(_OWORD *)(v16 + 192) = v25[10];
    *(_OWORD *)(v16 + 208) = v17;
    *(_OWORD *)(v16 + 224) = v25[12];
    long long v18 = v25[7];
    *(_OWORD *)(v16 + 128) = v25[6];
    *(_OWORD *)(v16 + 144) = v18;
    long long v19 = v25[9];
    *(_OWORD *)(v16 + 160) = v25[8];
    *(_OWORD *)(v16 + 176) = v19;
    long long v20 = v25[3];
    *(_OWORD *)(v16 + 64) = v25[2];
    *(_OWORD *)(v16 + 80) = v20;
    long long v21 = v25[5];
    *(_OWORD *)(v16 + 96) = v25[4];
    *(_OWORD *)(v16 + 112) = v21;
    long long v22 = v25[1];
    *(_OWORD *)(v16 + 32) = v25[0];
    *(_OWORD *)(v16 + 48) = v22;
    swift_retain();
    sub_1DF0874C0(v15, (void (*)(void, void))sub_1DEBE1FE8, v16);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DEBE1280();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
    a1(v10);
    return sub_1DEBE14C0((uint64_t)v10, (uint64_t (*)(void))sub_1DEBE164C);
  }
}

uint64_t sub_1DEBDF670(unint64_t a1, char a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  sub_1DEBE164C(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a2) {
    goto LABEL_13;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DFDFFBE0();
    if (result) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v12)
  {
LABEL_12:
    sub_1DEBCFB90((id)a1, 0);
LABEL_13:
    sub_1DE919914(0, (unint64_t *)&qword_1EBABB0D0);
    unint64_t v23 = (void *)sub_1DFDFF5F0();
    sub_1DFDFEA60();
    sub_1DFDF00C0();

    sub_1DEBE1280();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 1, 1, v24);
    a3(v11);
    return sub_1DEBE14C0((uint64_t)v11, (uint64_t (*)(void))sub_1DEBE164C);
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = MEMORY[0x1E01EE240](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v14 = *(void *)(a1 + 32);
    swift_retain();
  }
  sub_1DEBCFB90((id)a1, 0);
  if (objc_msgSend(*(id *)(a5 + 64), sel_puzzleNotificationsEnabled)) {
    char v15 = 1;
  }
  else {
    char v15 = 2;
  }
  id v16 = objc_msgSend(*(id *)(v14 + 16), sel_displayName);
  uint64_t v17 = sub_1DFDFDD20();
  uint64_t v19 = v18;

  uint64_t v20 = *(void *)(v14 + 16);
  v28[3] = &type metadata for NotificationsPuzzlesRowModel;
  v28[4] = &off_1F3A97250;
  uint64_t v21 = swift_allocObject();
  v28[0] = v21;
  *(void *)(v21 + 16) = v17;
  *(void *)(v21 + 24) = v19;
  *(unsigned char *)(v21 + 32) = 1;
  *(void *)(v21 + 40) = v20;
  *(void *)(v21 + 48) = 0;
  *(unsigned char *)(v21 + 56) = 3;
  *(void *)(v21 + 64) = 1;
  *(unsigned char *)(v21 + 72) = v15;
  *(unsigned char *)(v21 + 73) = 1;
  sub_1DE94F204((uint64_t)v28, (uint64_t)v27);
  v27[40] = 1;
  sub_1DEBE1C9C((uint64_t)v27, (uint64_t)v26);
  sub_1DEAD0C64();
  swift_unknownObjectRetain();
  sub_1DFDF0B40();
  sub_1DEBE1280();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 0, 1, v22);
  a3(v11);
  swift_release();
  sub_1DEBE14C0((uint64_t)v11, (uint64_t (*)(void))sub_1DEBE164C);
  sub_1DEBE1CF8((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t sub_1DEBDF9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1DE9DB7BC(0, (unint64_t *)&qword_1EBABB6F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DFE0B250;
  *(void *)(v12 + 32) = a6;
  *(void *)(v12 + 40) = a7;
  sub_1DEBE1680(a5, (uint64_t)v21);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  long long v14 = v21[11];
  *(_OWORD *)(v13 + 192) = v21[10];
  *(_OWORD *)(v13 + 208) = v14;
  *(_OWORD *)(v13 + 224) = v21[12];
  long long v15 = v21[7];
  *(_OWORD *)(v13 + 128) = v21[6];
  *(_OWORD *)(v13 + 144) = v15;
  long long v16 = v21[9];
  *(_OWORD *)(v13 + 160) = v21[8];
  *(_OWORD *)(v13 + 176) = v16;
  long long v17 = v21[3];
  *(_OWORD *)(v13 + 64) = v21[2];
  *(_OWORD *)(v13 + 80) = v17;
  long long v18 = v21[5];
  *(_OWORD *)(v13 + 96) = v21[4];
  *(_OWORD *)(v13 + 112) = v18;
  long long v19 = v21[1];
  *(_OWORD *)(v13 + 32) = v21[0];
  *(_OWORD *)(v13 + 48) = v19;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DF0874C0(v12, (void (*)(void, void))sub_1DEBE1D7C, v13);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEBDFB00(unint64_t a1, char a2, void (*a3)(unsigned char *), uint64_t a4, uint64_t a5)
{
  sub_1DEBE164C(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2) {
    goto LABEL_13;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DFDFFBE0();
    if (result) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v12)
  {
LABEL_12:
    sub_1DEBCFB90((id)a1, 0);
LABEL_13:
    if (qword_1EBACBF28 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1DFDF01D0();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EBB62BE8);
    uint64_t v24 = sub_1DFDF01B0();
    os_log_type_t v25 = sub_1DFDFEA40();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1DE913000, v24, v25, "Failed to fetch channels for sports alerts from Apple news section", v26, 2u);
      MEMORY[0x1E01EFA10](v26, -1, -1);
    }

    sub_1DEBE1280();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 1, 1, v27);
    a3(v11);
    return sub_1DEBE14C0((uint64_t)v11, (uint64_t (*)(void))sub_1DEBE164C);
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = MEMORY[0x1E01EE240](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v14 = *(void *)(a1 + 32);
    swift_retain();
  }
  sub_1DEBCFB90((id)a1, 0);
  if (objc_msgSend(*(id *)(a5 + 64), sel_sportsTopicNotificationsEnabledState) == (id)3) {
    char v15 = 1;
  }
  else {
    char v15 = 2;
  }
  id v16 = objc_msgSend(*(id *)(v14 + 16), sel_displayName);
  uint64_t v17 = sub_1DFDFDD20();
  uint64_t v19 = v18;

  uint64_t v20 = *(void **)(v14 + 16);
  v29[3] = &type metadata for NotificationsSportsRowModel;
  v29[4] = &off_1F3A97280;
  uint64_t v21 = swift_allocObject();
  v29[0] = v21;
  *(void *)(v21 + 16) = v17;
  *(void *)(v21 + 24) = v19;
  *(unsigned char *)(v21 + 32) = 6;
  *(void *)(v21 + 40) = v20;
  *(void *)(v21 + 48) = 0;
  *(unsigned char *)(v21 + 56) = 3;
  *(void *)(v21 + 64) = 0;
  *(unsigned char *)(v21 + 72) = v15;
  *(unsigned char *)(v21 + 73) = 1;
  char v30 = 1;
  sub_1DEBE1C9C((uint64_t)v29, (uint64_t)v28);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DEBE1D90(v20, 0, 3);
  sub_1DEAD0C64();
  sub_1DFDF0B40();
  sub_1DEBE1280();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 0, 1, v22);
  a3(v11);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEBE1C48(v20, 0, 3);
  sub_1DEBE14C0((uint64_t)v11, (uint64_t (*)(void))sub_1DEBE164C);
  return sub_1DEBE1CF8((uint64_t)v29);
}

uint64_t sub_1DEBDFECC(uint64_t a1)
{
  unint64_t v2 = sub_1DEBE207C();
  return MEMORY[0x1F4161388](a1, v2);
}

uint64_t sub_1DEBDFF08(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1DEE483BC();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1DEBDFF84(v6);
  return sub_1DFDFFA60();
}

uint64_t sub_1DEBDFF84(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1DFDFFED0();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_131;
    }
    if (v4) {
      return sub_1DEBE0824(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_139;
  }
  uint64_t v103 = result;
  uint64_t v100 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v112 = MEMORY[0x1E4FBC860];
    uint64_t v108 = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_97:
      if (v12 >= 2)
      {
        uint64_t v92 = *v100;
        do
        {
          unint64_t v93 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_126;
          }
          if (!v92) {
            goto LABEL_138;
          }
          uint64_t v94 = *(void *)&v9[16 * v93 + 32];
          uint64_t v95 = *(void *)&v9[16 * v12 + 24];
          sub_1DEBE0908((char *)(v92 + 8 * v94), (char *)(v92 + 8 * *(void *)&v9[16 * v12 + 16]), v92 + 8 * v95, v108);
          if (v2) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_127;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1DEE48394((uint64_t)v9);
          }
          if (v93 >= *((void *)v9 + 2)) {
            goto LABEL_128;
          }
          uint64_t v96 = &v9[16 * v93 + 32];
          *(void *)uint64_t v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v9 + 2);
          if (v12 > v97) {
            goto LABEL_129;
          }
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v97 - v12));
          *((void *)v9 + 2) = v97 - 1;
          unint64_t v12 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_108:
      swift_bridgeObjectRelease();
      *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1DFDFE250();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    type metadata accessor for FollowingTagModel();
    uint64_t v8 = sub_1DFDFE350();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    uint64_t v108 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v112 = v8;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v101 = *a1 - 8;
  uint64_t v102 = *a1 + 16;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v4;
  uint64_t v111 = *a1;
  while (1)
  {
    uint64_t v13 = v10;
    uint64_t v14 = v10 + 1;
    if (v10 + 1 >= v4) {
      goto LABEL_31;
    }
    uint64_t v15 = *(void *)(*(void *)(v11 + 8 * v14) + 24);
    uint64_t v16 = *(void *)(*(void *)(v11 + 8 * v10) + 24);
    swift_retain();
    swift_retain();
    BOOL v17 = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v15, v16);
    swift_release();
    swift_release();
    uint64_t v14 = v13 + 2;
    if (v13 + 2 >= v4)
    {
LABEL_21:
      uint64_t v11 = v111;
      if (!v17) {
        goto LABEL_31;
      }
LABEL_24:
      if (v14 < v13) {
        goto LABEL_132;
      }
      if (v13 < v14)
      {
        uint64_t v23 = (uint64_t *)(v101 + 8 * v14);
        uint64_t v24 = v14;
        uint64_t v25 = v13;
        uint64_t v26 = (uint64_t *)(v11 + 8 * v13);
        while (1)
        {
          if (v25 != --v24)
          {
            if (!v11) {
              goto LABEL_137;
            }
            uint64_t v27 = *v26;
            uint64_t *v26 = *v23;
            *uint64_t v23 = v27;
          }
          ++v25;
          --v23;
          ++v26;
          if (v25 >= v24) {
            goto LABEL_31;
          }
        }
      }
      goto LABEL_31;
    }
    uint64_t v18 = v13 + 2;
    uint64_t v19 = v9;
    uint64_t v20 = v102 + 8 * v13;
    while (1)
    {
      uint64_t v21 = *(void *)(*(void *)v20 + 24);
      uint64_t v22 = *(void *)(*(void *)(v20 - 8) + 24);
      swift_retain();
      swift_retain();
      LODWORD(v22) = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v21, v22);
      swift_release();
      swift_release();
      if ((v17 ^ v22)) {
        break;
      }
      v20 += 8;
      if (v106 == ++v18)
      {
        uint64_t v14 = v106;
        uint64_t v9 = v19;
        uint64_t v4 = v106;
        goto LABEL_21;
      }
    }
    uint64_t v9 = v19;
    uint64_t v4 = v106;
    uint64_t v14 = v18;
    uint64_t v11 = v111;
    if (v17) {
      goto LABEL_24;
    }
LABEL_31:
    if (v14 >= v4) {
      goto LABEL_49;
    }
    if (__OFSUB__(v14, v13)) {
      goto LABEL_130;
    }
    if (v14 - v13 >= v103) {
      goto LABEL_49;
    }
    if (__OFADD__(v13, v103)) {
      goto LABEL_133;
    }
    uint64_t v28 = v13 + v103 >= v4 ? v4 : v13 + v103;
    if (v28 < v13) {
      break;
    }
    if (v14 != v28)
    {
      uint64_t v98 = v9;
      uint64_t v99 = v2;
      uint64_t v29 = (void *)(v101 + 8 * v14);
      uint64_t v104 = v28;
      uint64_t v105 = v13;
      do
      {
        uint64_t v31 = *(void *)(v11 + 8 * v14);
        uint64_t v32 = v13;
        uint64_t v107 = v29;
        uint64_t v109 = v14;
        while (1)
        {
          uint64_t v33 = *(void *)(*v29 + 24);
          uint64_t v34 = *(void **)(*(void *)(v31 + 24) + 16);
          swift_retain();
          swift_retain();
          id v35 = objc_msgSend(v34, sel_name);
          sub_1DFDFDD20();

          sub_1DFDFDDD0();
          swift_bridgeObjectRelease();
          id v36 = objc_msgSend(v34, sel_identifier);
          sub_1DFDFDD20();

          sub_1DFDFDE90();
          swift_bridgeObjectRelease();
          unint64_t v37 = *(void **)(v33 + 16);
          id v38 = objc_msgSend(v37, sel_name);
          sub_1DFDFDD20();

          sub_1DFDFDDD0();
          swift_bridgeObjectRelease();
          id v39 = objc_msgSend(v37, sel_identifier);
          sub_1DFDFDD20();

          sub_1DFDFDE90();
          swift_bridgeObjectRelease();
          sub_1DEA4DB08();
          uint64_t v40 = sub_1DFDFF720();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v40 != -1) {
            break;
          }
          uint64_t v30 = v109;
          uint64_t v11 = v111;
          if (!v111) {
            goto LABEL_135;
          }
          uint64_t v41 = *v29;
          uint64_t v31 = v29[1];
          *uint64_t v29 = v31;
          v29[1] = v41;
          --v29;
          if (v109 == ++v32) {
            goto LABEL_42;
          }
        }
        uint64_t v30 = v109;
        uint64_t v11 = v111;
LABEL_42:
        uint64_t v14 = v30 + 1;
        uint64_t v29 = v107 + 1;
        uint64_t v13 = v105;
      }
      while (v14 != v104);
      uint64_t v14 = v104;
      uint64_t v9 = v98;
      uint64_t v2 = v99;
    }
LABEL_49:
    if (v14 < v13) {
      goto LABEL_125;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1DEE47AC8(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v43 = *((void *)v9 + 2);
    unint64_t v42 = *((void *)v9 + 3);
    unint64_t v12 = v43 + 1;
    uint64_t v11 = v111;
    uint64_t v110 = v14;
    if (v43 >= v42 >> 1)
    {
      uint64_t v91 = sub_1DEE47AC8((char *)(v42 > 1), v43 + 1, 1, v9);
      uint64_t v11 = v111;
      uint64_t v9 = v91;
    }
    *((void *)v9 + 2) = v12;
    uint64_t v44 = v9 + 32;
    uint64_t v45 = &v9[16 * v43 + 32];
    *(void *)uint64_t v45 = v13;
    *((void *)v45 + 1) = v110;
    if (v43)
    {
      while (1)
      {
        unint64_t v46 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v51 = &v44[16 * v12];
          uint64_t v52 = *((void *)v51 - 8);
          uint64_t v53 = *((void *)v51 - 7);
          BOOL v57 = __OFSUB__(v53, v52);
          uint64_t v54 = v53 - v52;
          if (v57) {
            goto LABEL_114;
          }
          uint64_t v56 = *((void *)v51 - 6);
          uint64_t v55 = *((void *)v51 - 5);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v49 = v55 - v56;
          char v50 = v57;
          if (v57) {
            goto LABEL_115;
          }
          unint64_t v58 = v12 - 2;
          uint64_t v59 = &v44[16 * v12 - 32];
          uint64_t v61 = *(void *)v59;
          uint64_t v60 = *((void *)v59 + 1);
          BOOL v57 = __OFSUB__(v60, v61);
          uint64_t v62 = v60 - v61;
          if (v57) {
            goto LABEL_117;
          }
          BOOL v57 = __OFADD__(v49, v62);
          uint64_t v63 = v49 + v62;
          if (v57) {
            goto LABEL_120;
          }
          if (v63 >= v54)
          {
            uint64_t v81 = &v44[16 * v46];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v57 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v57) {
              goto LABEL_124;
            }
            BOOL v74 = v49 < v84;
            goto LABEL_86;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v75 = *((void *)v9 + 4);
            uint64_t v76 = *((void *)v9 + 5);
            BOOL v57 = __OFSUB__(v76, v75);
            uint64_t v68 = v76 - v75;
            char v69 = v57;
            goto LABEL_80;
          }
          uint64_t v48 = *((void *)v9 + 4);
          uint64_t v47 = *((void *)v9 + 5);
          BOOL v57 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          char v50 = v57;
        }
        if (v50) {
          goto LABEL_116;
        }
        unint64_t v58 = v12 - 2;
        uint64_t v64 = &v44[16 * v12 - 32];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v67 = __OFSUB__(v65, v66);
        uint64_t v68 = v65 - v66;
        char v69 = v67;
        if (v67) {
          goto LABEL_119;
        }
        uint64_t v70 = &v44[16 * v46];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v57 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v57) {
          goto LABEL_122;
        }
        if (__OFADD__(v68, v73)) {
          goto LABEL_123;
        }
        if (v68 + v73 >= v49)
        {
          BOOL v74 = v49 < v73;
LABEL_86:
          if (v74) {
            unint64_t v46 = v58;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v69) {
          goto LABEL_118;
        }
        long long v77 = &v44[16 * v46];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v57 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v57) {
          goto LABEL_121;
        }
        if (v80 < v68) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v85 = v46 - 1;
        if (v46 - 1 >= v12)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v11) {
          goto LABEL_136;
        }
        uint64_t v86 = &v44[16 * v85];
        uint64_t v87 = *(void *)v86;
        id v88 = &v44[16 * v46];
        uint64_t v89 = *((void *)v88 + 1);
        sub_1DEBE0908((char *)(v11 + 8 * *(void *)v86), (char *)(v11 + 8 * *(void *)v88), v11 + 8 * v89, v108);
        if (v2) {
          goto LABEL_108;
        }
        if (v89 < v87) {
          goto LABEL_111;
        }
        if (v46 > *((void *)v9 + 2)) {
          goto LABEL_112;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v44[16 * v85 + 8] = v89;
        unint64_t v90 = *((void *)v9 + 2);
        if (v46 >= v90) {
          goto LABEL_113;
        }
        unint64_t v12 = v90 - 1;
        memmove(&v44[16 * v46], v88 + 16, 16 * (v90 - 1 - v46));
        *((void *)v9 + 2) = v90 - 1;
        uint64_t v11 = v111;
        if (v90 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_14:
    uint64_t v4 = v106;
    uint64_t v10 = v110;
    if (v110 >= v106) {
      goto LABEL_97;
    }
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  uint64_t result = sub_1DFDFFBA0();
  __break(1u);
  return result;
}

uint64_t sub_1DEBE0824(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v14 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v8 = *(void *)(v6 + 8 * v4);
    uint64_t v9 = v14;
    uint64_t v10 = (void *)v7;
    while (1)
    {
      uint64_t v11 = *(void *)(v8 + 24);
      uint64_t v12 = *(void *)(*v10 + 24);
      swift_retain();
      swift_retain();
      LOBYTE(v12) = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v11, v12);
      swift_release();
      uint64_t result = swift_release();
      if ((v12 & 1) == 0)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      uint64_t v13 = *v10;
      uint64_t v8 = v10[1];
      void *v10 = v8;
      v10[1] = v13;
      --v10;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DEBE0908(char *a1, char *__src, unint64_t a3, char *a4)
{
  uint64_t v29 = a1;
  uint64_t v5 = __src;
  uint64_t v6 = __src - a1;
  uint64_t v7 = __src - a1 + 7;
  if (__src - a1 >= 0) {
    uint64_t v7 = __src - a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v28 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != __src || &__src[8 * v11] <= a4) {
        memmove(a4, __src, 8 * v11);
      }
      BOOL v17 = &a4[8 * v11];
      uint64_t v27 = v17;
      uint64_t v29 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        uint64_t v18 = (char *)(a3 - 8);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = v18 + 8;
          uint64_t v21 = *((void *)v19 - 1);
          v19 -= 8;
          uint64_t v22 = *(void *)(*((void *)v17 - 1) + 24);
          uint64_t v23 = *(void *)(v21 + 24);
          swift_retain();
          swift_retain();
          LOBYTE(v23) = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v22, v23);
          swift_release();
          swift_release();
          if (v23)
          {
            if (v20 != v5 || v18 >= v5) {
              *(void *)uint64_t v18 = *(void *)v19;
            }
            uint64_t v29 = v19;
          }
          else
          {
            uint64_t v27 = v17 - 8;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(void *)uint64_t v18 = *((void *)v17 - 1);
            }
            uint64_t v19 = v5;
            v17 -= 8;
          }
          if (v19 <= a1) {
            break;
          }
          v18 -= 8;
          uint64_t v5 = v19;
        }
        while (v17 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != a1 || &a1[8 * v8] <= a4) {
      memmove(a4, a1, 8 * v8);
    }
    uint64_t v27 = &a4[8 * v8];
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      unint64_t v12 = (unint64_t)a4;
      uint64_t v13 = a1;
      do
      {
        uint64_t v14 = *(void *)(*(void *)v5 + 24);
        uint64_t v15 = *(void *)(*(void *)v12 + 24);
        swift_retain();
        swift_retain();
        LOBYTE(v15) = _s7NewsUI28TagModelC1loiySbAC_ACtFZ_0(v14, v15);
        swift_release();
        swift_release();
        if (v15)
        {
          uint64_t v16 = v5 + 8;
          if (v13 < v5 || v13 >= v16 || v13 != v5) {
            *(void *)uint64_t v13 = *(void *)v5;
          }
        }
        else
        {
          if (v13 != (char *)v12) {
            *(void *)uint64_t v13 = *(void *)v12;
          }
          v12 += 8;
          uint64_t v28 = (char *)v12;
          uint64_t v16 = v5;
        }
        v13 += 8;
        if (v12 >= (unint64_t)&a4[8 * v8]) {
          break;
        }
        uint64_t v5 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v29 = v13;
    }
LABEL_43:
    sub_1DEE47BF0(&v29, &v28, &v27);
    return 1;
  }
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

void sub_1DEBE0BF0(uint64_t a1)
{
}

uint64_t destroy for FollowingNotificationsPrewarmModifier(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 120);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 168);
}

uint64_t initializeWithCopy for FollowingNotificationsPrewarmModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v8;
  uint64_t v9 = v8;
  uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v13(a1 + 120, a2 + 120, v9);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 192) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 168, a2 + 168);
  return a1;
}

uint64_t *assignWithCopy for FollowingNotificationsPrewarmModifier(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = v4;
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)a2[8];
  uint64_t v6 = (void *)a1[8];
  a1[8] = (uint64_t)v5;
  id v7 = v5;

  a1[9] = a2[9];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[10] = a2[10];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[11] = a2[11];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[12] = a2[12];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v8 = a2[14];
  a1[13] = a2[13];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[14] = v8;
  __swift_assign_boxed_opaque_existential_1(a1 + 15, a2 + 15);
  a1[20] = a2[20];
  __swift_assign_boxed_opaque_existential_1(a1 + 21, a2 + 21);
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for FollowingNotificationsPrewarmModifier(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  long long v6 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_unknownObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_unknownObjectRelease();
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_unknownObjectRelease();
  *(void *)(a1 + 112) = v7;
  __swift_destroy_boxed_opaque_existential_1(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v8 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v8;
  __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingNotificationsPrewarmModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowingNotificationsPrewarmModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingNotificationsPrewarmModifier()
{
  return &type metadata for FollowingNotificationsPrewarmModifier;
}

unint64_t sub_1DEBE1174()
{
  unint64_t result = qword_1EAC21640;
  if (!qword_1EAC21640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21640);
  }
  return result;
}

void sub_1DEBE11D0()
{
  if (!qword_1EAC21648)
  {
    sub_1DEBE1280();
    sub_1DEBE12DC(&qword_1EAC21658);
    sub_1DEBE12DC(&qword_1EAC21660);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21648);
    }
  }
}

void sub_1DEBE1280()
{
  if (!qword_1EAC21650)
  {
    sub_1DEAD0C64();
    unint64_t v0 = sub_1DFDF0B70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21650);
    }
  }
}

uint64_t sub_1DEBE12DC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEBE1280();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEBE1320()
{
  if (!qword_1EAC21668)
  {
    sub_1DEBE1844(255, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21668);
    }
  }
}

void sub_1DEBE1394()
{
  if (!qword_1EAC21678)
  {
    sub_1DEBE1844(255, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
    sub_1DEBE1460(&qword_1EAC21680);
    sub_1DEBE1460(&qword_1EAC21688);
    unint64_t v0 = sub_1DFDED2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21678);
    }
  }
}

uint64_t sub_1DEBE1460(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEBE1844(255, (unint64_t *)&qword_1EAC21670, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEBE14C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DEBE1520()
{
  unint64_t result = qword_1EAC21698;
  if (!qword_1EAC21698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21698);
  }
  return result;
}

uint64_t sub_1DEBE1574()
{
  return sub_1DEBDC818(*(void *)(v0 + 16));
}

void sub_1DEBE1590()
{
  if (!qword_1EAC216A0)
  {
    sub_1DEBE1618(255);
    sub_1DEBE164C(255);
    sub_1DEBE1320();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EAC216A0);
    }
  }
}

void sub_1DEBE1618(uint64_t a1)
{
}

void sub_1DEBE164C(uint64_t a1)
{
}

uint64_t sub_1DEBE1680(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DEBE16B8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBE1748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBDCD08(a1, a2, a3, a4, v4 + 16);
}

uint64_t sub_1DEBE1754()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBE178C(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *, char *, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  sub_1DEBE1590();
  return v3(v4, &a1[v5[12]], &a1[v5[16]], &a1[v5[20]]);
}

uint64_t sub_1DEBE17F8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBE1838()
{
  return sub_1DEBDDD68(*(void (**)(char *))(v0 + 16));
}

void sub_1DEBE1844(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FollowingNotificationsDescriptor;
    v8[1] = &type metadata for FollowingNotificationsModel;
    void v8[2] = sub_1DEAC8E6C();
    v8[3] = sub_1DEAD0C64();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1DEBE18C8()
{
  if (!qword_1EAC216C0)
  {
    sub_1DEBE1844(255, (unint64_t *)&qword_1EAC21690, MEMORY[0x1E4FAD830]);
    sub_1DFDF1930();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAC216C0);
    }
  }
}

uint64_t sub_1DEBE1958(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEBE19C0(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v24 = result + 32;
  uint64_t v5 = a2 + 56;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v25 = v6;
    while (1)
    {
      if (v4 == v25)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = (uint64_t *)(v24 + 16 * v4);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      ++v4;
      if (!*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        goto LABEL_25;
      }
      sub_1DFE00100();
      swift_bridgeObjectRetain();
      sub_1DFDFDE20();
      uint64_t v10 = sub_1DFE00140();
      uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v12 = v10 & ~v11;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v13 = *(void *)(a2 + 48);
      uint64_t v14 = (void *)(v13 + 16 * v12);
      BOOL v15 = *v14 == v9 && v14[1] == v8;
      if (!v15 && (sub_1DFDFFF50() & 1) == 0) {
        break;
      }
LABEL_7:
      unint64_t result = swift_bridgeObjectRelease();
      if (v4 == v2) {
        return v23;
      }
    }
    uint64_t v16 = ~v11;
    while (1)
    {
      unint64_t v12 = (v12 + 1) & v16;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        break;
      }
      BOOL v17 = (void *)(v13 + 16 * v12);
      BOOL v18 = *v17 == v9 && v17[1] == v8;
      if (v18 || (sub_1DFDFFF50() & 1) != 0) {
        goto LABEL_7;
      }
    }
LABEL_25:
    uint64_t v19 = v23;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_1DEA9B358(0, *(void *)(v23 + 16) + 1, 1);
      uint64_t v19 = v23;
    }
    unint64_t v21 = *(void *)(v19 + 16);
    unint64_t v20 = *(void *)(v19 + 24);
    if (v21 >= v20 >> 1)
    {
      unint64_t result = sub_1DEA9B358(v20 > 1, v21 + 1, 1);
      uint64_t v19 = v23;
    }
    *(void *)(v19 + 16) = v21 + 1;
    uint64_t v23 = v19;
    uint64_t v22 = v19 + 16 * v21;
    *(void *)(v22 + 32) = v9;
    *(void *)(v22 + 40) = v8;
  }
  while (v4 != v2);
  return v23;
}

uint64_t sub_1DEBE1BD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DEBE1C04()
{
  sub_1DEBE1C48(*(void **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DEBE1C48(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:

      break;
    case 3:
      swift_unknownObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_1DEBE1C9C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DEBE1CF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DEBE1D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBDF088(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1DEBE1D5C(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBDF470(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1DEBE1D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBDE41C(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1DEBE1D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBDF9C0(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1DEBE1D7C(unint64_t a1, char a2)
{
  return sub_1DEBDFB00(a1, a2 & 1, *(void (**)(unsigned char *))(v2 + 16), *(void *)(v2 + 24), v2 + 32);
}

id sub_1DEBE1D90(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
    case 2:
      unint64_t result = result;
      break;
    case 3:
      unint64_t result = (id)swift_unknownObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DEBE1DE4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBE1E7C(uint64_t a1)
{
  return sub_1DEBDE6A4(a1, (void *)(v1 + 16), *(void *)(v1 + 224), *(void (**)(char *))(v1 + 232), *(void *)(v1 + 240));
}

void sub_1DEBE1E8C(uint64_t a1)
{
}

unint64_t sub_1DEBE1EC0()
{
  unint64_t result = qword_1EBAB4540;
  if (!qword_1EBAB4540)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBAB4540);
  }
  return result;
}

BOOL sub_1DEBE1F18(uint64_t *a1)
{
  return (sub_1DEBDDF60(*a1, a1[1]) & 1) == 0;
}

uint64_t objectdestroy_17Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  return swift_deallocObject();
}

uint64_t sub_1DEBE1FE8(unint64_t a1, char a2)
{
  return sub_1DEBDF670(a1, a2 & 1, *(void (**)(char *))(v2 + 16), *(void *)(v2 + 24), v2 + 32);
}

BOOL sub_1DEBE2000(uint64_t a1)
{
  return sub_1DEBDE390(a1);
}

uint64_t sub_1DEBE2020(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1DEBE207C()
{
  unint64_t result = qword_1EAC216E0;
  if (!qword_1EAC216E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC216E0);
  }
  return result;
}

uint64_t sub_1DEBE20D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a5;
  uint64_t v45 = a1;
  uint64_t v41 = a2;
  uint64_t v42 = a4;
  uint64_t v5 = type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Footer(0);
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v40 = (uint64_t)&v38 - v9;
  uint64_t v43 = sub_1DFDF94D0();
  uint64_t v10 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Header(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13 - 8);
  BOOL v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = sub_1DFDF4140();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DFDF3F10();
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if (v24 == *MEMORY[0x1E4FAD2B0])
  {
    unint64_t v25 = sub_1DFDF3F20();
    if ((v25 & 0x8000000000000000) == 0)
    {
      if (v25 < *(void *)(v45 + 16))
      {
        sub_1DEBE2A2C(v45+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v25, (uint64_t)v19, type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Header);
        sub_1DEBE2A2C((uint64_t)v19, (uint64_t)v17, type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Header);
        uint64_t v26 = v17;
        uint64_t v27 = v43;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v26, v43);
        __swift_project_boxed_opaque_existential_1((void *)(v42 + 16), *(void *)(v42 + 40));
        uint64_t v28 = sub_1DFDF95C0();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
        uint64_t v29 = type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Header;
        uint64_t v30 = (uint64_t)v19;
LABEL_10:
        sub_1DEBE2A94(v30, v29);
        return v28;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v24 == *MEMORY[0x1E4FAD2A8])
  {
    uint64_t v31 = sub_1DFDF3F20();
    uint64_t v32 = *(void *)(v45 + 16);
    BOOL v33 = __OFSUB__(v31, v32);
    unint64_t v34 = v31 - v32;
    if (!v33)
    {
      if ((v34 & 0x8000000000000000) == 0)
      {
        if (v34 < *(void *)(v41 + 16))
        {
          uint64_t v35 = v40;
          sub_1DEBE2A2C(v41+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v34, v40, type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Footer);
          sub_1DEBE2A2C(v35, (uint64_t)v8, type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Footer);
          uint64_t v36 = v43;
          (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v43);
          __swift_project_boxed_opaque_existential_1((void *)(v42 + 16), *(void *)(v42 + 40));
          uint64_t v28 = sub_1DFDF95C0();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v36);
          uint64_t v29 = type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Footer;
          uint64_t v30 = v35;
          goto LABEL_10;
        }
        goto LABEL_15;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  uint64_t result = sub_1DFDFFBB0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SportsFavoritesBlueprintViewSupplementaryViewProvider()
{
  return self;
}

uint64_t sub_1DEBE2634()
{
  return sub_1DEBE270C(&qword_1EAC24450, (void (*)(uint64_t))type metadata accessor for SportsFavoritesLayoutSectionDescriptor);
}

uint64_t sub_1DEBE267C()
{
  return sub_1DEBE270C(&qword_1EAC216F0, (void (*)(uint64_t))type metadata accessor for SportsFavoritesLayoutModel);
}

uint64_t sub_1DEBE26C4()
{
  return sub_1DEBE270C((unint64_t *)&qword_1EAC24780, (void (*)(uint64_t))type metadata accessor for SportsFavoritesModel);
}

uint64_t sub_1DEBE270C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEBE2754()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1DFDF95E0();
}

uint64_t sub_1DEBE27A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Data(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SportsFavoritesLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a3;
  uint64_t v15 = *v4;
  sub_1DEBE28DC();
  sub_1DFDF2C10();
  sub_1DEBE29C8((uint64_t)v13, (uint64_t)v10);
  uint64_t v16 = sub_1DEBE20D4(*(void *)&v10[*(int *)(v8 + 28)], *(void *)&v10[*(int *)(v8 + 32)], a4, v15, v14);
  sub_1DEBE2A94((uint64_t)v10, type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Data);
  return v16;
}

void sub_1DEBE28DC()
{
  if (!qword_1EAC216F8)
  {
    type metadata accessor for SportsFavoritesLayoutSectionDescriptor(255);
    type metadata accessor for SportsFavoritesLayoutModel();
    sub_1DEBE270C(&qword_1EAC24450, (void (*)(uint64_t))type metadata accessor for SportsFavoritesLayoutSectionDescriptor);
    sub_1DEBE270C(&qword_1EAC216F0, (void (*)(uint64_t))type metadata accessor for SportsFavoritesLayoutModel);
    unint64_t v0 = sub_1DFDF2C40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC216F8);
    }
  }
}

uint64_t sub_1DEBE29C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsFavoritesLayoutSectionDescriptor.Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBE2A2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEBE2A94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEBE2AF4()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_1DEBE2B34(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v23 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v7 = (int *)type metadata accessor for TagFeedCuration(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEBE3034();
    uint64_t v12 = v11;
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v13(v9, v10, v12);
    uint64_t v14 = v7[7];
    uint64_t v41 = a1;
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_1DEBE3100();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
    *(void *)&v15[v18[5]] = *(void *)&v16[v18[5]];
    *(void *)&v15[v18[6]] = *(void *)&v16[v18[6]];
    *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
    *(void *)&v15[v18[8]] = *(void *)&v16[v18[8]];
    *(void *)&v15[v18[9]] = *(void *)&v16[v18[9]];
    *(void *)&v15[v18[10]] = *(void *)&v16[v18[10]];
    v15[v18[11]] = v16[v18[11]];
    uint64_t v19 = v18[12];
    __dst = &v15[v19];
    unint64_t v37 = &v16[v19];
    uint64_t v20 = sub_1DFDF8EA0();
    uint64_t v36 = *(void *)(v20 - 8);
    uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    uint64_t v21 = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v38(v37, 1, v21))
    {
      sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
      memcpy(__dst, v37, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v37, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v21);
    }
    *(void *)&v15[v18[13]] = *(void *)&v16[v18[13]];
    uint64_t v24 = v7[8];
    uint64_t v23 = v41;
    unint64_t v25 = (void *)((char *)v41 + v24);
    uint64_t v26 = (void *)((char *)a2 + v24);
    type metadata accessor for TagFeedCurationHeaderTitle(0);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_1DFDFB0C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *unint64_t v25 = *v26;
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
    uint64_t v29 = (char *)v25 + v28;
    uint64_t v30 = (char *)v26 + v28;
    uint64_t v31 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v34 = sub_1DFDFB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v29, v30, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    *((unsigned char *)v41 + v7[9]) = *((unsigned char *)a2 + v7[9]);
    *(void *)((char *)v41 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  }
  return v23;
}

uint64_t type metadata accessor for TagFeedCuration(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAD5020);
}

void sub_1DEBE3034()
{
  if (!qword_1EBAE92B0)
  {
    type metadata accessor for CuratedTagFeedGroupConfigData();
    sub_1DEBE3194(&qword_1EBADF7D0, (void (*)(uint64_t))type metadata accessor for CuratedTagFeedGroupConfigData);
    sub_1DEBE3194((unint64_t *)&unk_1EBADF7C0, (void (*)(uint64_t))type metadata accessor for CuratedTagFeedGroupConfigData);
    unint64_t v0 = sub_1DFDF7430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE92B0);
    }
  }
}

void sub_1DEBE3100()
{
  if (!qword_1EBACCB70)
  {
    type metadata accessor for TagFeedServiceConfig();
    sub_1DEBE3194(&qword_1EBAD8430, (void (*)(uint64_t))type metadata accessor for TagFeedServiceConfig);
    unint64_t v0 = sub_1DFDF80E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBACCB70);
    }
  }
}

uint64_t sub_1DEBE3194(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DEBE31DC(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for TagFeedCuration(0);
  uint64_t v3 = a1 + v2[6];
  sub_1DEBE3034();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = a1 + v2[7];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for CuratedTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = v5 + *(int *)(v7 + 48);
  uint64_t v9 = sub_1DFDF8EA0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_release();
  uint64_t v11 = a1 + v2[8];
  type metadata accessor for TagFeedCurationHeaderTitle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1DFDFB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_unknownObjectRelease();
  }
  uint64_t v13 = v11 + *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v14 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14);
  if (!result)
  {
    uint64_t v16 = sub_1DFDFB0C0();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    return v17(v13, v16);
  }
  return result;
}

void *sub_1DEBE34A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for TagFeedCuration(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DEBE3034();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v12(v8, v9, v11);
  uint64_t v13 = v6[7];
  uint64_t v39 = a1;
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
  *(void *)&v14[v17[5]] = *(void *)&v15[v17[5]];
  *(void *)&v14[v17[6]] = *(void *)&v15[v17[6]];
  *(void *)&v14[v17[7]] = *(void *)&v15[v17[7]];
  *(void *)&v14[v17[8]] = *(void *)&v15[v17[8]];
  *(void *)&v14[v17[9]] = *(void *)&v15[v17[9]];
  *(void *)&v14[v17[10]] = *(void *)&v15[v17[10]];
  v14[v17[11]] = v15[v17[11]];
  uint64_t v18 = v17[12];
  __dst = &v14[v18];
  uint64_t v35 = &v15[v18];
  uint64_t v19 = sub_1DFDF8EA0();
  uint64_t v34 = *(void *)(v19 - 8);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  uint64_t v20 = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v36(v35, 1, v20))
  {
    sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(__dst, v35, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v35, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v20);
  }
  *(void *)&v14[v17[13]] = *(void *)&v15[v17[13]];
  uint64_t v22 = v6[8];
  uint64_t v23 = (void *)((char *)v39 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  type metadata accessor for TagFeedCurationHeaderTitle(0);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_1DFDFB0C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_unknownObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v27 = (char *)v23 + v26;
  uint64_t v28 = (char *)v24 + v26;
  uint64_t v29 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v32 = sub_1DFDFB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v27, v28, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  *((unsigned char *)v39 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  *(void *)((char *)v39 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return v39;
}

void *sub_1DEBE392C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for TagFeedCuration(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DEBE3034();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v39 = v5;
  uint64_t v10 = *(int *)(v5 + 28);
  uint64_t v41 = a2;
  uint64_t v42 = a1;
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
  *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[6]] = *(void *)&v12[v14[6]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[8]] = *(void *)&v12[v14[8]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[9]] = *(void *)&v12[v14[9]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[10]] = *(void *)&v12[v14[10]];
  swift_retain();
  swift_release();
  v11[v14[11]] = v12[v14[11]];
  uint64_t v15 = v14[12];
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = sub_1DFDF8EA0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v5) = v20(v16, 1, v18);
  int v21 = v20(v17, 1, v18);
  if (v5)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  *(void *)&v11[v14[13]] = *(void *)&v12[v14[13]];
  swift_retain();
  swift_release();
  uint64_t v23 = *(int *)(v39 + 32);
  uint64_t v24 = (void *)((char *)v42 + v23);
  uint64_t v25 = (void *)((char *)v41 + v23);
  if (v42 != v41)
  {
    sub_1DEBE3EE4((uint64_t)v42 + v23, type metadata accessor for TagFeedCurationHeaderTitle);
    type metadata accessor for TagFeedCurationHeaderTitle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_1DFDFB0C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v27 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v28 = (char *)v24 + v27;
  uint64_t v29 = (char *)v25 + v27;
  uint64_t v30 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      uint64_t v38 = sub_1DFDFB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v28, v29, v38);
      goto LABEL_18;
    }
    sub_1DEBE3EE4((uint64_t)v28, type metadata accessor for TagFeedCurationHeaderSubtitle);
    goto LABEL_17;
  }
  if (v34)
  {
LABEL_17:
    sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
    memcpy(v28, v29, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_18;
  }
  uint64_t v35 = sub_1DFDFB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v28, v29, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_18:
  *((unsigned char *)v42 + *(int *)(v39 + 36)) = *((unsigned char *)v41 + *(int *)(v39 + 36));
  *(void *)((char *)v42 + *(int *)(a3 + 20)) = *(void *)((char *)v41 + *(int *)(a3 + 20));
  return v42;
}

uint64_t sub_1DEBE3EE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1DEBE3F44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for TagFeedCuration(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DEBE3034();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
  *(void *)&v12[v15[5]] = *(void *)&v13[v15[5]];
  *(void *)&v12[v15[6]] = *(void *)&v13[v15[6]];
  *(void *)&v12[v15[7]] = *(void *)&v13[v15[7]];
  *(void *)&v12[v15[8]] = *(void *)&v13[v15[8]];
  *(void *)&v12[v15[9]] = *(void *)&v13[v15[9]];
  *(void *)&v12[v15[10]] = *(void *)&v13[v15[10]];
  v12[v15[11]] = v13[v15[11]];
  uint64_t v16 = v15[12];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = sub_1DFDF8EA0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(void *)&v12[v15[13]] = *(void *)&v13[v15[13]];
  uint64_t v22 = v6[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for TagFeedCurationHeaderTitle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_1DFDFB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  uint64_t v27 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v28 = &v23[v27];
  uint64_t v29 = &v24[v27];
  uint64_t v30 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = sub_1DFDFB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v28, v29, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1DEBE4364(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for TagFeedCuration(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DEBE3034();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v40 = v5;
  uint64_t v10 = *(int *)(v5 + 28);
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
  *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
  swift_release();
  *(void *)&v11[v14[6]] = *(void *)&v12[v14[6]];
  swift_release();
  *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
  swift_release();
  *(void *)&v11[v14[8]] = *(void *)&v12[v14[8]];
  swift_release();
  *(void *)&v11[v14[9]] = *(void *)&v12[v14[9]];
  swift_release();
  *(void *)&v11[v14[10]] = *(void *)&v12[v14[10]];
  swift_release();
  v11[v14[11]] = v12[v14[11]];
  uint64_t v15 = v14[12];
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = sub_1DFDF8EA0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v5) = v20(v16, 1, v18);
  int v21 = v20(v17, 1, v18);
  if (v5)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  *(void *)&v11[v14[13]] = *(void *)&v12[v14[13]];
  swift_release();
  uint64_t v23 = *(int *)(v40 + 32);
  uint64_t v24 = (char *)v43 + v23;
  uint64_t v25 = (char *)v42 + v23;
  if (v43 != v42)
  {
    sub_1DEBE3EE4((uint64_t)v43 + v23, type metadata accessor for TagFeedCurationHeaderTitle);
    uint64_t v26 = type metadata accessor for TagFeedCurationHeaderTitle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_1DFDFB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
  }
  uint64_t v28 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v29 = &v24[v28];
  uint64_t v30 = &v25[v28];
  uint64_t v31 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      uint64_t v39 = sub_1DFDFB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v29, v30, v39);
      goto LABEL_17;
    }
    sub_1DEBE3EE4((uint64_t)v29, type metadata accessor for TagFeedCurationHeaderSubtitle);
    goto LABEL_16;
  }
  if (v35)
  {
LABEL_16:
    sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
    memcpy(v29, v30, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v36 = sub_1DFDFB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v29, v30, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_17:
  *((unsigned char *)v43 + *(int *)(v40 + 36)) = *((unsigned char *)v42 + *(int *)(v40 + 36));
  *(void *)((char *)v43 + *(int *)(a3 + 20)) = *(void *)((char *)v42 + *(int *)(a3 + 20));
  return v43;
}

uint64_t sub_1DEBE48E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBE48F8);
}

uint64_t sub_1DEBE48F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TagFeedCuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DEBE4964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBE4978);
}

uint64_t sub_1DEBE4978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TagFeedCuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ScoredTagFeedCuration(uint64_t a1)
{
  return sub_1DE918584(a1, qword_1EBAD8E80);
}

uint64_t sub_1DEBE4A08()
{
  uint64_t result = type metadata accessor for TagFeedCuration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1DEBE4AA0(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v22 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEBE3034();
    uint64_t v12 = v11;
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v13(v9, v10, v12);
    uint64_t v14 = a3[7];
    uint64_t v39 = a1;
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_1DEBE3100();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
    *(void *)&v15[v18[5]] = *(void *)&v16[v18[5]];
    *(void *)&v15[v18[6]] = *(void *)&v16[v18[6]];
    *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
    *(void *)&v15[v18[8]] = *(void *)&v16[v18[8]];
    *(void *)&v15[v18[9]] = *(void *)&v16[v18[9]];
    *(void *)&v15[v18[10]] = *(void *)&v16[v18[10]];
    v15[v18[11]] = v16[v18[11]];
    uint64_t v19 = v18[12];
    __dst = &v15[v19];
    uint64_t v36 = &v16[v19];
    uint64_t v20 = sub_1DFDF8EA0();
    uint64_t v35 = *(void *)(v20 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v37(v36, 1, v20))
    {
      sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
      memcpy(__dst, v36, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v36, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v20);
    }
    *(void *)&v15[v18[13]] = *(void *)&v16[v18[13]];
    uint64_t v23 = a3[8];
    uint64_t v22 = v39;
    uint64_t v24 = (void *)((char *)v39 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    type metadata accessor for TagFeedCurationHeaderTitle(0);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_1DFDFB0C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
    uint64_t v28 = (char *)v24 + v27;
    uint64_t v29 = (char *)v25 + v27;
    uint64_t v30 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      uint64_t v33 = sub_1DFDFB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    *((unsigned char *)v39 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return v22;
}

uint64_t sub_1DEBE4F64(uint64_t a1, int *a2)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  sub_1DEBE3034();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = type metadata accessor for CuratedTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v6 + *(int *)(v8 + 48);
  uint64_t v10 = sub_1DFDF8EA0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_release();
  uint64_t v12 = a1 + a2[8];
  type metadata accessor for TagFeedCurationHeaderTitle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_1DFDFB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_unknownObjectRelease();
  }
  uint64_t v14 = v12 + *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v15 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
  if (!result)
  {
    uint64_t v17 = sub_1DFDFB0C0();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
    return v18(v14, v17);
  }
  return result;
}

void *sub_1DEBE5220(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DEBE3034();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v12(v8, v9, v11);
  uint64_t v13 = a3[7];
  uint64_t v37 = a1;
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
  *(void *)&v14[v17[5]] = *(void *)&v15[v17[5]];
  *(void *)&v14[v17[6]] = *(void *)&v15[v17[6]];
  *(void *)&v14[v17[7]] = *(void *)&v15[v17[7]];
  *(void *)&v14[v17[8]] = *(void *)&v15[v17[8]];
  *(void *)&v14[v17[9]] = *(void *)&v15[v17[9]];
  *(void *)&v14[v17[10]] = *(void *)&v15[v17[10]];
  v14[v17[11]] = v15[v17[11]];
  uint64_t v18 = v17[12];
  __dst = &v14[v18];
  int v34 = &v15[v18];
  uint64_t v19 = sub_1DFDF8EA0();
  uint64_t v33 = *(void *)(v19 - 8);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v35(v34, 1, v19))
  {
    sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(__dst, v34, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v34, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v19);
  }
  *(void *)&v14[v17[13]] = *(void *)&v15[v17[13]];
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)v37 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  type metadata accessor for TagFeedCurationHeaderTitle(0);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_1DFDFB0C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *uint64_t v22 = *v23;
    swift_unknownObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v26 = (char *)v22 + v25;
  uint64_t v27 = (char *)v23 + v25;
  uint64_t v28 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    uint64_t v31 = sub_1DFDFB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v26, v27, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  *((unsigned char *)v37 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return v37;
}

void *sub_1DEBE5690(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DEBE3034();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v40 = a3;
  uint64_t v41 = a2;
  uint64_t v10 = a3[7];
  uint64_t v42 = a1;
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
  *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[6]] = *(void *)&v12[v14[6]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[8]] = *(void *)&v12[v14[8]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[9]] = *(void *)&v12[v14[9]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[10]] = *(void *)&v12[v14[10]];
  swift_retain();
  swift_release();
  v11[v14[11]] = v12[v14[11]];
  uint64_t v15 = v14[12];
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = sub_1DFDF8EA0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  *(void *)&v11[v14[13]] = *(void *)&v12[v14[13]];
  swift_retain();
  swift_release();
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)v42 + v24);
  uint64_t v26 = (void *)((char *)v41 + v24);
  if (v42 != v41)
  {
    sub_1DEBE3EE4((uint64_t)v42 + v24, type metadata accessor for TagFeedCurationHeaderTitle);
    type metadata accessor for TagFeedCurationHeaderTitle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_1DFDFB0C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *uint64_t v25 = *v26;
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v29 = (char *)v25 + v28;
  uint64_t v30 = (char *)v26 + v28;
  uint64_t v31 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      uint64_t v39 = sub_1DFDFB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v29, v30, v39);
      goto LABEL_18;
    }
    sub_1DEBE3EE4((uint64_t)v29, type metadata accessor for TagFeedCurationHeaderSubtitle);
    goto LABEL_17;
  }
  if (v35)
  {
LABEL_17:
    sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
    memcpy(v29, v30, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_18;
  }
  uint64_t v36 = sub_1DFDFB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v29, v30, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_18:
  *((unsigned char *)v42 + v40[9]) = *((unsigned char *)v41 + v40[9]);
  return v42;
}

void *sub_1DEBE5C2C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1DEBE3034();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
  *(void *)&v12[v15[5]] = *(void *)&v13[v15[5]];
  *(void *)&v12[v15[6]] = *(void *)&v13[v15[6]];
  *(void *)&v12[v15[7]] = *(void *)&v13[v15[7]];
  *(void *)&v12[v15[8]] = *(void *)&v13[v15[8]];
  *(void *)&v12[v15[9]] = *(void *)&v13[v15[9]];
  *(void *)&v12[v15[10]] = *(void *)&v13[v15[10]];
  v12[v15[11]] = v13[v15[11]];
  uint64_t v16 = v15[12];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = sub_1DFDF8EA0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(void *)&v12[v15[13]] = *(void *)&v13[v15[13]];
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for TagFeedCurationHeaderTitle(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_1DFDFB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  uint64_t v27 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v28 = &v23[v27];
  uint64_t v29 = &v24[v27];
  uint64_t v30 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = sub_1DFDFB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v28, v29, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

void *sub_1DEBE6028(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1DEBE3034();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v41 = a3;
  uint64_t v42 = a2;
  uint64_t v10 = a3[7];
  uint64_t v43 = a1;
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  sub_1DEBE3100();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for CuratedTagFeedGroupKnobs();
  *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
  swift_release();
  *(void *)&v11[v14[6]] = *(void *)&v12[v14[6]];
  swift_release();
  *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
  swift_release();
  *(void *)&v11[v14[8]] = *(void *)&v12[v14[8]];
  swift_release();
  *(void *)&v11[v14[9]] = *(void *)&v12[v14[9]];
  swift_release();
  *(void *)&v11[v14[10]] = *(void *)&v12[v14[10]];
  swift_release();
  v11[v14[11]] = v12[v14[11]];
  uint64_t v15 = v14[12];
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = sub_1DFDF8EA0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_1DEA48878(0, &qword_1EBAE9970, MEMORY[0x1E4F7FCA8]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  *(void *)&v11[v14[13]] = *(void *)&v12[v14[13]];
  swift_release();
  uint64_t v24 = a3[8];
  uint64_t v25 = (char *)v43 + v24;
  uint64_t v26 = (char *)v42 + v24;
  if (v43 != v42)
  {
    sub_1DEBE3EE4((uint64_t)v43 + v24, type metadata accessor for TagFeedCurationHeaderTitle);
    uint64_t v27 = type metadata accessor for TagFeedCurationHeaderTitle(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_1DFDFB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
  }
  uint64_t v29 = *(int *)(type metadata accessor for TagFeedCurationHeader(0) + 20);
  uint64_t v30 = &v25[v29];
  uint64_t v31 = &v26[v29];
  uint64_t v32 = type metadata accessor for TagFeedCurationHeaderSubtitle(0);
  uint64_t v33 = *(void *)(v32 - 8);
  int v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v30, 1, v32);
  int v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      uint64_t v40 = sub_1DFDFB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 40))(v30, v31, v40);
      goto LABEL_17;
    }
    sub_1DEBE3EE4((uint64_t)v30, type metadata accessor for TagFeedCurationHeaderSubtitle);
    goto LABEL_16;
  }
  if (v36)
  {
LABEL_16:
    sub_1DEA48878(0, (unint64_t *)&unk_1EBAE0A30, (void (*)(uint64_t))type metadata accessor for TagFeedCurationHeaderSubtitle);
    memcpy(v30, v31, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v37 = sub_1DFDFB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v30, v31, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_17:
  *((unsigned char *)v43 + v41[9]) = *((unsigned char *)v42 + v41[9]);
  return v43;
}

uint64_t sub_1DEBE658C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBE65A0);
}

uint64_t sub_1DEBE65A0(uint64_t *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_1DEBE3034();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13((char *)a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for CuratedTagFeedGroupKnobs();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for TagFeedCurationHeader(0);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = (char *)a1 + a3[8];
  return v15(v17, a2, v16);
}

uint64_t sub_1DEBE6718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBE672C);
}

char *sub_1DEBE672C(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  sub_1DEBE3034();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for CuratedTagFeedGroupKnobs();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for TagFeedCurationHeader(0);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[8]];
  return (char *)v15(v17, a2, a2, v16);
}

void sub_1DEBE68A4()
{
  sub_1DEBE3034();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CuratedTagFeedGroupKnobs();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TagFeedCurationHeader(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

ValueMetadata *type metadata accessor for AffinityTagFeedGroupConfigData()
{
  return &type metadata for AffinityTagFeedGroupConfigData;
}

uint64_t sub_1DEBE69D8()
{
  return 0;
}

uint64_t sub_1DEBE69E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1DEBE6A14(uint64_t a1)
{
  unint64_t v2 = sub_1DEBE6BF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEBE6A50(uint64_t a1)
{
  unint64_t v2 = sub_1DEBE6BF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEBE6A8C(void *a1)
{
  sub_1DEBE6B98();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEBE6BF4();
  sub_1DFE001A0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1DEBE6B98()
{
  if (!qword_1EAC21700)
  {
    sub_1DEBE6BF4();
    unint64_t v0 = sub_1DFDFFEB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21700);
    }
  }
}

unint64_t sub_1DEBE6BF4()
{
  unint64_t result = qword_1EAC21708;
  if (!qword_1EAC21708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21708);
  }
  return result;
}

ValueMetadata *type metadata accessor for AffinityTagFeedGroupConfigData.CodingKeys()
{
  return &type metadata for AffinityTagFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DEBE6C5C()
{
  unint64_t result = qword_1EAC21710;
  if (!qword_1EAC21710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21710);
  }
  return result;
}

unint64_t sub_1DEBE6CB4()
{
  unint64_t result = qword_1EAC21718;
  if (!qword_1EAC21718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21718);
  }
  return result;
}

uint64_t sub_1DEBE6D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DEBE6EC4(&qword_1EAC21728);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1DEBE6D74()
{
  return sub_1DEBE6EC4(&qword_1EBAAA630);
}

uint64_t type metadata accessor for WebEmbedModel()
{
  uint64_t result = qword_1EBAAA638;
  if (!qword_1EBAAA638) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEBE6DF4()
{
  return sub_1DEBE6EC4(&qword_1EAC21720);
}

uint64_t sub_1DEBE6E28()
{
  return sub_1DEBE6EC4(&qword_1EBAAA628);
}

uint64_t sub_1DEBE6E5C()
{
  return sub_1DEBE6EC4(&qword_1EAC21728);
}

uint64_t sub_1DEBE6E90()
{
  return sub_1DEBE6EC4(&qword_1EAC21730);
}

uint64_t sub_1DEBE6EC4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WebEmbedModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1DEBE6F08(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDE7220();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    uint64_t v14 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)v4 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v15 = a3[8];
    __dst = (char *)v4 + v15;
    uint64_t v16 = (char *)a2 + v15;
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    swift_retain();
    if (v17(v16, 1, v11))
    {
      sub_1DE935EDC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      memcpy(__dst, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v13(__dst, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v20 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(void *)((char *)v4 + v20) = *(void *)((char *)a2 + v20);
    uint64_t v21 = a3[11];
    int v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1DFDFC7F0();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_retain();
    if (v26(v23, 1, v24))
    {
      sub_1DE935EDC(0, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  return v4;
}

uint64_t sub_1DEBE7208(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1DFDE7220();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  swift_release();
  swift_release();
  uint64_t v8 = a1 + a2[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  swift_release();
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = sub_1DFDFC7F0();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

void *sub_1DEBE73B8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDE7220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[8];
  __dst = (char *)a1 + v14;
  uint64_t v15 = (char *)a2 + v14;
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  swift_retain();
  if (v16(v15, 1, v10))
  {
    sub_1DE935EDC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    memcpy(__dst, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(__dst, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v18 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v19 = a3[11];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_1DFDFC7F0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  swift_retain();
  if (v24(v21, 1, v22))
  {
    sub_1DE935EDC(0, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

void *sub_1DEBE7668(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDE7220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v30(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a2 + v11;
  uint64_t v13 = *(uint64_t (**)(void))(v10 + 48);
  uint64_t v31 = (char *)a1 + v11;
  int v14 = v13();
  int v15 = ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v12, 1, v9);
  if (v14)
  {
    if (v15)
    {
      sub_1DE935EDC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
      uint64_t v18 = v31;
LABEL_6:
      memcpy(v18, v12, v17);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  else
  {
    if (v15)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v9);
      sub_1DE935EDC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      size_t v17 = *(void *)(*(void *)(v19 - 8) + 64);
      uint64_t v18 = v31;
      goto LABEL_6;
    }
    v30(v31, v12, v9);
  }
LABEL_9:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_retain();
  swift_release();
  uint64_t v20 = a3[11];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1DFDFC7F0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_14;
  }
  if (v27)
  {
LABEL_14:
    sub_1DE935EDC(0, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

_OWORD *sub_1DEBE7A48(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DFDE7220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)&a2[a3[6]];
  *(void *)((char *)a1 + v12) = *(void *)&a2[v12];
  uint64_t v13 = a3[8];
  int v14 = (char *)a1 + v13;
  int v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v13], 1, v9))
  {
    sub_1DE935EDC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v11(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[10];
  *((unsigned char *)a1 + a3[9]) = a2[a3[9]];
  *(void *)((char *)a1 + v17) = *(void *)&a2[v17];
  uint64_t v18 = a3[11];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_1DFDFC7F0();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1DE935EDC(0, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

void *sub_1DEBE7CC8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDE7220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v32(v8, v9, v10);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_release();
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a2 + v12;
  int v14 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v33 = (char *)a1 + v12;
  int v15 = v14();
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v13, 1, v10);
  if (v15)
  {
    if (v16)
    {
      sub_1DE935EDC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      size_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
      uint64_t v19 = v33;
LABEL_6:
      memcpy(v19, v13, v18);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v33, v13, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v10);
  }
  else
  {
    if (v16)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v33, v10);
      sub_1DE935EDC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
      size_t v18 = *(void *)(*(void *)(v20 - 8) + 64);
      uint64_t v19 = v33;
      goto LABEL_6;
    }
    v32(v33, v13, v10);
  }
LABEL_9:
  uint64_t v21 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_release();
  uint64_t v22 = a3[11];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1DFDFC7F0();
  uint64_t v26 = *(void *)(v25 - 8);
  int v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_14;
  }
  if (v29)
  {
LABEL_14:
    sub_1DE935EDC(0, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_1DEBE807C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBE8090);
}

uint64_t sub_1DEBE8090(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1DFDE7220();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_1DE935EDC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_9;
  }
  sub_1DE935EDC(0, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];
  return v15(v17, a2, v16);
}

uint64_t sub_1DEBE8240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBE8254);
}

uint64_t sub_1DEBE8254(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1DFDE7220();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_1DE935EDC(0, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_7;
  }
  sub_1DE935EDC(0, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];
  return v15(v17, a2, a2, v16);
}

void sub_1DEBE8404()
{
  sub_1DFDE7220();
  if (v0 <= 0x3F)
  {
    sub_1DE935EDC(319, (unint64_t *)&qword_1EBAA6D40, MEMORY[0x1E4F276F0]);
    if (v1 <= 0x3F)
    {
      sub_1DE935EDC(319, &qword_1EAC347A0, MEMORY[0x1E4F81508]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1DEBE8570()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyMyMagazinesPersonalizationService()
{
  return self;
}

uint64_t sub_1DEBE85DC(void (*a1)(char *, unint64_t, uint64_t))
{
  uint64_t v55 = a1;
  uint64_t v2 = sub_1DFDF75B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  uint64_t v58 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v56 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDF8C30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(*(id *)(v1 + 64), sel_aggregateStore);
  uint64_t v10 = *(void **)(v1 + 16);
  id v11 = objc_msgSend(objc_msgSend(v10, sel_possiblyUnfetchedAppConfiguration), sel_personalizationTreatment);
  swift_unknownObjectRelease();
  id v53 = v9;
  id v12 = objc_msgSend(v9, sel_baselineAggregateWithConfigurableValues_, v11);
  id v52 = v11;
  id v13 = objc_msgSend(v11, sel_defaultScoringConfig);
  if (!v13)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    uint64_t result = sub_1DFE00000();
    __break(1u);
    return result;
  }
  uint64_t v14 = v13;
  objc_msgSend(v13, sel_decayFactor);
  double v16 = v15;

  objc_msgSend(v12, sel_personalizationValueWithBaseline_decayRate_, 0, v16);
  double v18 = v17;
  swift_unknownObjectRelease();
  id v19 = objc_msgSend(objc_msgSend(v10, sel_possiblyUnfetchedAppConfiguration), sel_personalizationTreatment);
  swift_unknownObjectRelease();
  objc_msgSend(v19, sel_minimumMyMagazinesIssueScoreBaselineMultiplier);
  double v21 = v20;

  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F7FC18], v5);
  uint64_t v22 = sub_1DFDF9430();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    double v24 = v18 * v21;
    uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
    unint64_t v26 = v22 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
    int v27 = (void (**)(char *, uint64_t))(v58 + 8);
    v58 += 16;
    uint64_t v54 = *(void *)(v58 + 56);
    uint64_t v55 = v25;
    v51[1] = v22;
    swift_bridgeObjectRetain();
    int v28 = (void *)MEMORY[0x1E4FBC868];
    int v29 = v56;
    uint64_t v30 = v57;
    while (1)
    {
      v55(v29, v26, v30);
      uint64_t v31 = sub_1DFDF7570();
      uint64_t v33 = v32;
      sub_1DFDF75A0();
      double v35 = v34;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v59 = v28;
      unint64_t v38 = sub_1DEA6D930(v31, v33);
      uint64_t v39 = v28[2];
      BOOL v40 = (v37 & 1) == 0;
      uint64_t v41 = v39 + v40;
      if (__OFADD__(v39, v40)) {
        break;
      }
      char v42 = v37;
      if (v28[3] >= v41)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1DF65B37C();
        }
      }
      else
      {
        sub_1DF650F94(v41, isUniquelyReferenced_nonNull_native);
        unint64_t v43 = sub_1DEA6D930(v31, v33);
        if ((v42 & 1) != (v44 & 1)) {
          goto LABEL_21;
        }
        unint64_t v38 = v43;
      }
      int v28 = v59;
      BOOL v45 = v24 < v35;
      if (v42)
      {
        *(unsigned char *)(v59[7] + v38) = v45;
      }
      else
      {
        v59[(v38 >> 6) + 8] |= 1 << v38;
        unint64_t v46 = (uint64_t *)(v28[6] + 16 * v38);
        *unint64_t v46 = v31;
        v46[1] = v33;
        *(unsigned char *)(v28[7] + v38) = v45;
        uint64_t v47 = v28[2];
        BOOL v48 = __OFADD__(v47, 1);
        uint64_t v49 = v47 + 1;
        if (v48) {
          goto LABEL_19;
        }
        id v28[2] = v49;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v29 = v56;
      uint64_t v30 = v57;
      (*v27)(v56, v57);
      v26 += v54;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  int v28 = (void *)MEMORY[0x1E4FBC868];
LABEL_17:
  swift_bridgeObjectRelease();

  return (uint64_t)v28;
}

uint64_t sub_1DEBE8AB0()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 24), *(void *)(*(void *)v0 + 48));
  return sub_1DFDF9400();
}

uint64_t sub_1DEBE8AF8(void (*a1)(char *, unint64_t, uint64_t))
{
  return sub_1DEBE85DC(a1);
}

void sub_1DEBE8B1C(double a1@<X0>, double a2@<X1>, void *a3@<X2>, double a4@<X3>, double a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  double v120 = a4;
  id v118 = a3;
  double v126 = a1;
  double v127 = a2;
  uint64_t v10 = sub_1DFDF2BF0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  double v16 = (char *)&v111 - v15;
  uint64_t v128 = v11;
  CGFloat v124 = *(double *)(v11 + 16);
  double v121 = a5;
  (*(void (**)(char *, double, uint64_t))&v124)((char *)&v111 - v15, COERCE_DOUBLE(*(void *)&a5), v10);
  sub_1DFDF2AC0();
  double v18 = v17;
  id v19 = (void *)sub_1DFDF2AF0();
  id v20 = objc_msgSend(v19, sel_preferredContentSizeCategory);

  int v119 = sub_1DFDFF0C0();
  uint64_t v129 = v7;
  double v21 = *(void **)(*__swift_project_boxed_opaque_existential_1((void *)(v7 + 16), *(void *)(v7 + 40)) + 16);
  id v22 = objc_msgSend(self, sel_systemFontOfSize_weight_, 16.0, *MEMORY[0x1E4FB09D8]);
  *(void *)&long long v125 = objc_msgSend(v21, sel_scaledFontForFont_maximumPointSize_, v22, 48.0);

  uint64_t v23 = (void *)sub_1DFDF2B20();
  double v24 = self;
  id v25 = objc_msgSend(v24, sel_traitCollectionWithHorizontalSizeClass_, 1);
  LODWORD(v7) = objc_msgSend(v23, sel_containsTraitsInCollection_, v25);

  double v122 = *(double *)&v16;
  (*(void (**)(char *, char *, uint64_t))&v124)(v14, v16, v10);
  uint64_t v123 = v10;
  if (v7)
  {
    unint64_t v26 = (void *)sub_1DFDF2AF0();
    id v27 = objc_msgSend(v24, sel_traitCollectionWithHorizontalSizeClass_, 1);
    unsigned __int8 v28 = objc_msgSend(v26, sel_containsTraitsInCollection_, v27);

    int v29 = *(void (**)(char *, uint64_t))(v128 + 8);
    v29(v14, v10);
    if (v28)
    {
      uint64_t v30 = (void *)v125;
      goto LABEL_6;
    }
  }
  else
  {
    int v29 = *(void (**)(char *, uint64_t))(v128 + 8);
    v29(v14, v10);
  }
  uint64_t v30 = (void *)v125;
LABEL_6:
  *(void *)&long long v135 = sub_1DFDFE530();
  *((void *)&v135 + 1) = v31;
  sub_1DFDFDE90();
  objc_msgSend(v30, sel_pointSize);
  sub_1DFDFE530();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  long long v32 = v135;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DFDEDC60();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DEBE94E8((uint64_t)v132, (uint64_t)v134);
  sub_1DEBE94E8((uint64_t)v134, (uint64_t)&v135);
  if (sub_1DEBE95A4((uint64_t)&v135) == 1)
  {
    uint64_t v115 = v29;
    sub_1DFDFDDE0();
    sub_1DEA66C20();
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1DFE0B250;
    double v34 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v33 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v33 + 64) = sub_1DEB69898();
    *(void *)(v33 + 40) = v30;
    id v35 = v34;
    id v36 = v30;
    sub_1DEA65870(v33);
    id v37 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    unint64_t v38 = (void *)sub_1DFDFDCE0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DEA66BC8();
    uint64_t v39 = (void *)sub_1DFDFDAE0();
    swift_bridgeObjectRelease();
    id v40 = objc_msgSend(v37, sel_initWithString_attributes_, v38, v39);

    sub_1DFDFEF60();
    double v42 = (v41 + 15.0 + 15.0) * 0.5;
    id v114 = v36;
    CGFloat v113 = v41;
    double v126 = v42 - v41 * 0.5;
    if (v120 == 0.0)
    {
      sub_1DFDF2AB0();
      double v79 = v78;
      CGFloat v124 = 0.0;
      CGFloat v117 = 0.0;
      id v118 = 0;
      double v120 = 0.0;
      double v116 = 0.0;
      double v111 = 0.0;
      double v112 = 0.0;
      double v80 = v18;
      double v81 = 0.0;
      double v82 = v122;
      uint64_t v83 = v123;
      char v84 = v119;
    }
    else
    {
      double v127 = v18;
      uint64_t v43 = v123;
      id v44 = *(id *)&v120;
      objc_msgSend(v44, sel_size);
      double v46 = ceil(v45);
      objc_msgSend(v44, sel_size);
      double v48 = v47;
      if (v118)
      {
        id v49 = v118;
        objc_msgSend(v49, sel_size);
        double v51 = v42 + v50 * -0.5 + 2.0;
        sub_1DFDF2AB0();
        CGFloat v53 = v52;
        objc_msgSend(v49, sel_size);
        CGFloat v55 = v54;
        objc_msgSend(v49, sel_size);
        uint64_t v57 = v56;
      }
      else
      {
        CGFloat v55 = 0.0;
        uint64_t v57 = 0;
        CGFloat v53 = 0.0;
        double v51 = 0.0;
      }
      char v84 = v119;
      CGFloat v124 = v55;
      double v120 = v51;
      CGFloat v117 = v53;
      id v118 = v57;
      if (v46 <= 0.0)
      {
        v157.origin.CGFloat x = v53;
        v157.origin.CGFloat y = v51;
        v157.size.CGFloat width = v55;
        *(void *)&v157.size.CGFloat height = v57;
        double MaxX = CGRectGetMaxX(v157);

        double v79 = MaxX + 10.0;
        double v116 = 0.0;
        double v111 = 0.0;
        double v112 = 0.0;
        double v81 = 0.0;
        double v18 = v127;
        double v80 = v127;
      }
      else
      {
        double v112 = ceil(v48);
        double v85 = v42 + v112 * -0.5;
        v155.origin.CGFloat x = v53;
        v155.origin.CGFloat y = v51;
        v155.size.CGFloat width = v55;
        *(void *)&v155.size.CGFloat height = v57;
        double v79 = CGRectGetMaxX(v155) + 10.0;
        double v116 = v46;
        double v86 = v127 - v46;
        v156.origin.CGFloat x = v53;
        v156.origin.CGFloat y = v51;
        v156.size.CGFloat width = v55;
        double v18 = v127;
        *(void *)&v156.size.CGFloat height = v57;
        double v87 = v86 - CGRectGetWidth(v156);
        sub_1DFDF2AB0();
        double v89 = v87 - v88;
        sub_1DFDF2AB0();
        double v80 = v89 - v90;
        double v81 = v85;
        sub_1DFDF2AB0();
        double v92 = v91;

        double v111 = v86 - v92;
      }
      uint64_t v83 = v43;
      double v82 = v122;
    }
    double v127 = v81;
    double v122 = v79;
    sub_1DFDF2AB0();
    uint64_t v95 = v94;
    v158.origin.CGFloat x = v79;
    double v96 = v126;
    v158.origin.CGFloat y = v126;
    double v97 = v80;
    v158.size.CGFloat width = v80;
    double v121 = v80;
    CGFloat v64 = v113;
    v158.size.CGFloat height = v113;
    double v98 = ceil(CGRectGetMaxY(v158)) + 15.0;
    sub_1DFDF2AB0();
    double v99 = v18;
    double v101 = v18 - v100;
    sub_1DFDF2AB0();
    *(double *)&long long v103 = v101 - v102;
    long long v125 = v103;
    double v104 = 0.5;
    uint64_t v105 = v95;
    double v106 = v98;
    double v60 = ceil(CGRectGetMaxY(*(CGRect *)(&v103 - 1)));
    char v77 = v84 & 1;
    v132[0] = 0;
    v132[1] = 0;
    *(double *)&v132[2] = v99;
    *(double *)&v132[3] = v60;
    *(double *)&v132[4] = v79;
    *(double *)&v132[5] = v96;
    *(double *)&v132[6] = v97;
    *(CGFloat *)&v132[7] = v64;
    *(CGFloat *)&v132[8] = v117;
    *(double *)&v132[9] = v120;
    *(CGFloat *)&v132[10] = v124;
    v132[11] = v118;
    double v69 = v111;
    double v72 = v112;
    *(double *)&v132[12] = v111;
    *(double *)&v132[13] = v127;
    *(double *)&v132[14] = v116;
    *(double *)&v132[15] = v112;
    v132[16] = v95;
    *(double *)&v132[17] = v98;
    v132[18] = v125;
    v132[19] = 0x3FE0000000000000;
    *(double *)&v132[20] = v60;
    char v133 = v77;
    nullsub_1(v132);
    sub_1DEBE94E8((uint64_t)v132, (uint64_t)&v131);
    long long v130 = v32;
    swift_retain();
    sub_1DFDEDC70();

    swift_release();
    v115(*(char **)&v82, v83);
    double v59 = v99;
    double v74 = v98;
    uint64_t v73 = v95;
    double v63 = v121;
    double v61 = v122;
    double v62 = v126;
    double v70 = v127;
    __asm { FMOV            V0.2D, #0.5 }
    *(void *)&_Q0 = v125;
    long long v58 = 0uLL;
    double v76 = v60;
    double v71 = v116;
    CGFloat v65 = v117;
    double v66 = v120;
    CGFloat v67 = v124;
    id v68 = v118;
  }
  else
  {
    v29(*(char **)&v122, v123);
    swift_bridgeObjectRelease();

    long long v58 = v135;
    double v59 = v136;
    double v60 = v137;
    double v61 = v138;
    double v62 = v139;
    double v63 = v140;
    CGFloat v64 = v141;
    CGFloat v65 = v142;
    double v66 = v143;
    CGFloat v67 = *(double *)&v144;
    id v68 = v145;
    double v69 = v146;
    double v70 = v147;
    double v71 = v148;
    double v72 = v149;
    uint64_t v73 = v150;
    double v74 = v151;
    _Q0 = v152;
    double v76 = v153;
    char v77 = v154;
  }
  *(_OWORD *)a6 = v58;
  *(double *)(a6 + 16) = v59;
  *(double *)(a6 + 24) = v60;
  *(double *)(a6 + 32) = v61;
  *(double *)(a6 + 40) = v62;
  *(double *)(a6 + 48) = v63;
  *(CGFloat *)(a6 + 56) = v64;
  *(CGFloat *)(a6 + 64) = v65;
  *(double *)(a6 + 72) = v66;
  *(CGFloat *)(a6 + 80) = v67;
  *(void *)(a6 + 88) = v68;
  *(double *)(a6 + 96) = v69;
  *(double *)(a6 + 104) = v70;
  *(double *)(a6 + 112) = v71;
  *(double *)(a6 + 120) = v72;
  *(void *)(a6 + 128) = v73;
  *(double *)(a6 + 136) = v74;
  *(_OWORD *)(a6 + 144) = _Q0;
  *(double *)(a6 + 160) = v76;
  *(unsigned char *)(a6 + 168) = v77;
}

uint64_t sub_1DEBE9484()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RecentSearchLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_1DEBE94E8(uint64_t a1, uint64_t a2)
{
  sub_1DEBE954C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DEBE954C()
{
  if (!qword_1EAC21738)
  {
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21738);
    }
  }
}

uint64_t sub_1DEBE95A4(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 168);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

BOOL static FeedServiceContextPurpose.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FeedServiceContextPurpose.hash(into:)()
{
  return sub_1DFE00110();
}

uint64_t FeedServiceContextPurpose.hashValue.getter()
{
  return sub_1DFE00140();
}

unint64_t sub_1DEBE964C()
{
  unint64_t result = qword_1EAC21740;
  if (!qword_1EAC21740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21740);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedServiceContextPurpose(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEBE976CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedServiceContextPurpose()
{
  return &type metadata for FeedServiceContextPurpose;
}

uint64_t dispatch thunk of FeedServiceContextFactoryType.createFeedServiceContext(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void sub_1DEBE97B8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t (*a1)(void)), uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v41 = a4;
  double v42 = a3;
  sub_1DEBEB044(0, (unint64_t *)&qword_1EAC36FB0, MEMORY[0x1E4FAD830]);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v41 - v8;
  uint64_t v10 = sub_1DFDF32E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v44 = (id)sub_1DFDF26C0();
  id v43 = objc_msgSend(v44, sel_superview);
  if (v43)
  {
    id v14 = objc_msgSend(v44, sel_snapshotViewAfterScreenUpdates_, 0);
    if (!v14)
    {
      if (qword_1EBAEA6A8 != -1) {
        swift_once();
      }
      sub_1DFDFEA40();
      sub_1DFDF00C0();
      v42(sub_1DE981484, 0);

      id v24 = v43;
      goto LABEL_12;
    }
    uint64_t v15 = v14;
    objc_msgSend(v44, sel_frame);
    objc_msgSend(v15, sel_setFrame_);
    objc_msgSend(v43, sel_addSubview_, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == *MEMORY[0x1E4FACAC0])
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      sub_1DFDF1DE0();
      if (v46[3])
      {
        if (swift_dynamicCast())
        {
          sub_1DEBEAFE8((uint64_t)aBlock, (uint64_t)v47);
          double v16 = (void *)sub_1DFDF26C0();
          aBlock[0] = *(void *)(v4 + 16);
          sub_1DEBEB044(0, (unint64_t *)&qword_1EAC21748, MEMORY[0x1E4FAC2D8]);
          sub_1DEBEB138();
          sub_1DFDF2690();
          _s8SnapshotCMa();
          swift_allocObject();
          id v17 = v43;
          uint64_t v31 = sub_1DF95FEB8(v16, (uint64_t)v9, v17);
          long long v32 = self;
          uint64_t v33 = (void *)swift_allocObject();
          uint64_t v34 = v41;
          v33[2] = v42;
          v33[3] = v34;
          v33[4] = v5;
          v33[5] = v17;
          v33[6] = v15;
          v33[7] = v31;
          sub_1DEBEAFE8((uint64_t)v47, (uint64_t)(v33 + 8));
          v33[15] = v44;
          uint64_t v35 = swift_allocObject();
          *(void *)(v35 + 16) = sub_1DEBEB24C;
          *(void *)(v35 + 24) = v33;
          aBlock[4] = sub_1DE98147C;
          aBlock[5] = v35;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1DE98142C;
          aBlock[3] = &block_descriptor_11;
          id v36 = _Block_copy(aBlock);
          id v37 = v17;
          swift_retain();
          swift_retain();
          id v38 = v15;
          id v39 = v44;
          swift_retain();
          swift_release();
          objc_msgSend(v32, sel_performWithoutAnimation_, v36);

          swift_release();
          _Block_release(v36);

          char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0) {
            return;
          }
          __break(1u);
          goto LABEL_26;
        }
      }
      else
      {
        sub_1DE9E4C20((uint64_t)v46);
      }
      if (qword_1EBAEA6A8 != -1) {
        swift_once();
      }
      sub_1DFDFEA40();
      sub_1DEA086BC();
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1DFE0B250;
      sub_1DFDF1DE0();
      sub_1DE9E4C7C();
      uint64_t v28 = sub_1DFDFDD90();
      uint64_t v30 = v29;
      *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v27 + 64) = sub_1DEA08668();
      *(void *)(v27 + 32) = v28;
      *(void *)(v27 + 40) = v30;
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v15;
      id v26 = v15;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if (qword_1EBAEA6A8 != -1) {
        swift_once();
      }
      sub_1DFDFEA40();
      sub_1DFDF00C0();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v15;
      id v26 = v15;
    }
    v42((uint64_t (*)(uint64_t (*)(void)))sub_1DEBEAFE4, v25);

    swift_release();
    return;
  }
  if (qword_1EBAEA6A8 != -1) {
LABEL_26:
  }
    swift_once();
  sub_1DFDFEA40();
  sub_1DEA086BC();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DFE0B250;
  id v19 = (void *)sub_1DFDF26C0();
  id v20 = objc_msgSend(v19, sel_description);
  uint64_t v21 = sub_1DFDFDD20();
  uint64_t v23 = v22;

  *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v18 + 64) = sub_1DEA08668();
  *(void *)(v18 + 32) = v21;
  *(void *)(v18 + 40) = v23;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  v42(sub_1DEBEB41C, 0);
  id v24 = v44;
LABEL_12:
}

uint64_t sub_1DEBEA1B0(void (*a1)(uint64_t (*)(uint64_t a1, uint64_t a2), void *), uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  sub_1DEBEAFE8(a7, (uint64_t)(v15 + 6));
  v15[13] = a8;
  swift_retain();
  swift_retain();
  id v16 = a4;
  id v17 = a5;
  id v18 = a8;
  a1(sub_1DEBEB2CC, v15);
  return swift_release();
}

uint64_t sub_1DEBEA290(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v37 = a7;
  id v38 = a8;
  uint64_t v35 = a1;
  id v36 = a4;
  uint64_t v43 = sub_1DFDF6B40();
  uint64_t v46 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  double v42 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDF6BA0();
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v45 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DFDF6BE0();
  uint64_t v41 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  id v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v35 - v21;
  sub_1DEAA29D0();
  swift_retain();
  uint64_t v39 = sub_1DFDFEE60();
  sub_1DFDF6BC0();
  MEMORY[0x1E01E5440](v20, 0.01);
  id v40 = *(void (**)(char *, uint64_t))(v17 + 8);
  v40(v20, v16);
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v35;
  uint64_t v25 = v36;
  v23[2] = a3;
  v23[3] = v25;
  _DWORD v23[4] = a5;
  v23[5] = v24;
  v23[6] = a2;
  v23[7] = a6;
  sub_1DEBEAFE8(v37, (uint64_t)(v23 + 8));
  id v26 = v38;
  v23[15] = v38;
  aBlock[4] = sub_1DEBEB340;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DE9744A8;
  aBlock[3] = &block_descriptor_24;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  id v28 = v25;
  id v29 = a5;
  swift_retain();
  id v30 = v26;
  swift_release();
  sub_1DFDF6B70();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DEAC73F0((unint64_t *)&qword_1EBAB9EB0, MEMORY[0x1E4FBCB00]);
  sub_1DEABDA4C();
  sub_1DEAC73F0((unint64_t *)&qword_1EBABA860, (void (*)(uint64_t))sub_1DEABDA4C);
  long long v32 = v42;
  uint64_t v31 = v43;
  sub_1DFDFF830();
  uint64_t v33 = (void *)v39;
  MEMORY[0x1E01ED670](v22, v15, v32, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
  return ((uint64_t (*)(char *, uint64_t))v40)(v22, v41);
}

NSObject *sub_1DEBEA6B0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  double v48 = a8;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  CGFloat v55 = (void *)a3;
  uint64_t v10 = sub_1DFDF6B40();
  uint64_t v50 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DFDF6BA0();
  uint64_t v49 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBEB044(0, (unint64_t *)&qword_1EAC36FB0, MEMORY[0x1E4FAD830]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v19 = (void *)sub_1DFDF26C0();
  aBlock[0] = *(void *)(a1 + 16);
  sub_1DEBEB044(0, (unint64_t *)&qword_1EAC21748, MEMORY[0x1E4FAC2D8]);
  sub_1DEBEB138();
  sub_1DFDF2690();
  _s8SnapshotCMa();
  swift_allocObject();
  id v20 = a2;
  uint64_t v21 = sub_1DF95FEB8(v19, (uint64_t)v18, v20);
  uint64_t v46 = v15;
  double v47 = v12;
  _s4PlanCMa();
  swift_allocObject();
  swift_retain();
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_1DEC4F3C8(v22, v21, v52);
  swift_retain();
  uint64_t v24 = v55;
  sub_1DEC4ECB8(v20, (uint64_t)v55);
  objc_msgSend(v24, sel_removeFromSuperview);
  dispatch_group_t v25 = dispatch_group_create();
  id v26 = v23;
  unint64_t v27 = v23[11];
  uint64_t v44 = v13;
  uint64_t v45 = v21;
  if (!(v27 >> 62))
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    unint64_t result = v25;
    uint64_t v30 = v10;
    if (v28) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();

    sub_1DEAA29D0();
    uint64_t v35 = (void *)sub_1DFDFEE60();
    id v36 = (void *)swift_allocObject();
    uint64_t v37 = v48;
    _OWORD v36[2] = v48;
    v36[3] = v26;
    uint64_t v38 = v54;
    v36[4] = v53;
    v36[5] = v38;
    aBlock[4] = (uint64_t)sub_1DEBEB3C0;
    aBlock[5] = (uint64_t)v36;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1DE9744A8;
    aBlock[3] = (uint64_t)&block_descriptor_30_0;
    uint64_t v39 = _Block_copy(aBlock);
    id v40 = v37;
    swift_retain();
    uint64_t v41 = v46;
    sub_1DFDF6B70();
    void aBlock[6] = MEMORY[0x1E4FBC860];
    sub_1DEAC73F0((unint64_t *)&qword_1EBAB9EB0, MEMORY[0x1E4FBCB00]);
    sub_1DEABDA4C();
    sub_1DEAC73F0((unint64_t *)&qword_1EBABA860, (void (*)(uint64_t))sub_1DEABDA4C);
    double v42 = v47;
    sub_1DFDFF830();
    sub_1DFDFEE10();
    swift_release();
    swift_release();
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v30);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v41, v44);
    return swift_release();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v34 = v25;
  unint64_t result = sub_1DFDFFBE0();
  uint64_t v28 = (uint64_t)result;
  uint64_t v30 = v10;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v28 >= 1)
  {
    uint64_t v31 = 0;
    do
    {
      if ((v27 & 0xC000000000000001) != 0)
      {
        uint64_t v32 = MEMORY[0x1E01EE240](v31, v27);
      }
      else
      {
        uint64_t v32 = *(void *)(v27 + 8 * v31 + 32);
        swift_retain();
      }
      ++v31;
      aBlock[0] = v32;
      uint64_t v33 = v25;
      sub_1DEC5F46C(aBlock, v33);
      swift_release();

      uint64_t v30 = v10;
    }
    while (v28 != v31);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

id sub_1DEBEAE48(void *a1, void *a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  v10[4] = sub_1DEBEB40C;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1DEC4F18C;
  v10[3] = &block_descriptor_36_0;
  uint64_t v7 = _Block_copy(v10);
  uint64_t v8 = a2;
  swift_release();
  objc_msgSend(a1, sel_addCompletion_, v7);
  _Block_release(v7);
  dispatch_group_enter(v8);
  return objc_msgSend(a1, sel_startAnimationAfterDelay_, a3);
}

void sub_1DEBEAF50(uint64_t a1, dispatch_group_t group)
{
  if (!a1) {
    dispatch_group_leave(group);
  }
}

uint64_t type metadata accessor for AudioPlaylistFeedAnimator()
{
  return self;
}

void sub_1DEBEAF84(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t (*a1)(void)), uint64_t), uint64_t a4)
{
}

uint64_t sub_1DEBEAFAC()
{
  return swift_deallocObject();
}

uint64_t sub_1DEBEAFE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1DEBEB044(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for AudioPlaylistFeedSectionDescriptor();
    v8[1] = type metadata accessor for AudioPlaylistFeedModel();
    void v8[2] = sub_1DEAC73F0(&qword_1EAC20980, (void (*)(uint64_t))type metadata accessor for AudioPlaylistFeedSectionDescriptor);
    v8[3] = sub_1DEAC73F0((unint64_t *)&unk_1EAC20970, (void (*)(uint64_t))type metadata accessor for AudioPlaylistFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DEBEB138()
{
  unint64_t result = qword_1EAC26D30;
  if (!qword_1EAC26D30)
  {
    sub_1DEBEB044(255, (unint64_t *)&qword_1EAC21748, MEMORY[0x1E4FAC2D8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC26D30);
  }
  return result;
}

uint64_t sub_1DEBEB1AC(uint64_t (*a1)(id))
{
  return a1(objc_msgSend(*(id *)(v1 + 16), sel_removeFromSuperview));
}

uint64_t sub_1DEBEB1F4()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBEB24C()
{
  return sub_1DEBEB358((uint64_t (*)(void, void, void, void, void, void, void *, void))sub_1DEBEA1B0);
}

uint64_t sub_1DEBEB264()
{
  return swift_deallocObject();
}

uint64_t sub_1DEBEB274()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBEB2CC(uint64_t a1, uint64_t a2)
{
  return sub_1DEBEA290(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), v2 + 48, *(void **)(v2 + 104));
}

uint64_t sub_1DEBEB2E0()
{
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DEBEB340()
{
  return sub_1DEBEB358((uint64_t (*)(void, void, void, void, void, void, void *, void))sub_1DEBEA6B0);
}

uint64_t sub_1DEBEB358(uint64_t (*a1)(void, void, void, void, void, void, void *, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1 + 8, v1[15]);
}

uint64_t sub_1DEBEB378()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBEB3C0()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  objc_msgSend(*(id *)(v0 + 16), sel_reloadData);
  uint64_t v2 = sub_1DEC4F1E0();
  return v1(v2);
}

void sub_1DEBEB40C(uint64_t a1)
{
  if (!a1) {
    dispatch_group_leave(*(dispatch_group_t *)(v1 + 16));
  }
}

BOOL WelcomeError.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t static WelcomeError._nsErrorDomain.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_1DEBEB474()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEBEB4D8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DEBEB89C();
  return MEMORY[0x1F40E3B98](a1, a2, v4);
}

void *sub_1DEBEB524@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1DEBEB554(uint64_t a1)
{
  unint64_t v2 = sub_1DEBEB89C();
  return MEMORY[0x1F40E3BA8](a1, v2);
}

uint64_t sub_1DEBEB590(uint64_t a1)
{
  unint64_t v2 = sub_1DEBEB89C();
  return MEMORY[0x1F40E3BA0](a1, v2);
}

unint64_t sub_1DEBEB5CC()
{
  return 0xD000000000000014;
}

uint64_t sub_1DEBEB5E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DEBEB89C();
  return MEMORY[0x1F40E3B90](a1, a2, v4);
}

unint64_t WelcomeUserType.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

unint64_t sub_1DEBEB654()
{
  unint64_t result = qword_1EAC21750;
  if (!qword_1EAC21750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21750);
  }
  return result;
}

unint64_t sub_1DEBEB6AC()
{
  unint64_t result = qword_1EAC21758;
  if (!qword_1EAC21758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21758);
  }
  return result;
}

unint64_t sub_1DEBEB704()
{
  unint64_t result = qword_1EAC21760;
  if (!qword_1EAC21760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21760);
  }
  return result;
}

unint64_t sub_1DEBEB75C()
{
  unint64_t result = qword_1EAC21768;
  if (!qword_1EAC21768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21768);
  }
  return result;
}

unint64_t sub_1DEBEB7B4()
{
  unint64_t result = qword_1EAC21770;
  if (!qword_1EAC21770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21770);
  }
  return result;
}

unint64_t sub_1DEBEB80C()
{
  unint64_t result = qword_1EAC21778;
  if (!qword_1EAC21778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21778);
  }
  return result;
}

uint64_t *sub_1DEBEB860@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WelcomeError()
{
  return &type metadata for WelcomeError;
}

ValueMetadata *type metadata accessor for WelcomeUserType()
{
  return &type metadata for WelcomeUserType;
}

unint64_t sub_1DEBEB89C()
{
  unint64_t result = qword_1EAC21780;
  if (!qword_1EAC21780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21780);
  }
  return result;
}

uint64_t sub_1DEBEB8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = a3;
  uint64_t v38 = a2;
  sub_1DEBEE1B0();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v35 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v39 = (char *)&v35 - v9;
  sub_1DEBEE208();
  MEMORY[0x1F4188790](v10 - 8);
  sub_1DEBEE2F4(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v37 = swift_allocBox();
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC180];
  sub_1DEBEE2F4(0, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
  uint64_t v13 = v12;
  uint64_t v14 = sub_1DEBEE84C((unint64_t *)&unk_1EBAEBCB0, (unint64_t *)&qword_1EBAEBCD0, v11);
  uint64_t v15 = sub_1DEBEE84C((unint64_t *)&unk_1EBAEBCA0, (unint64_t *)&qword_1EBAEBCD0, v11);
  MEMORY[0x1E01DBA70](MEMORY[0x1E4FBC860], v13, v14, v15);
  type metadata accessor for FollowingModel();
  sub_1DEADC298();
  sub_1DEAE2210();
  sub_1DFDF5A70();
  if (qword_1EAC1D490 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1DFDF01D0();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EACDFDC8);
  uint64_t v17 = sub_1DFDF01B0();
  os_log_type_t v18 = sub_1DFDFEA60();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_1DE913000, v17, v18, "Following prewarm prepare family status...", v19, 2u);
    MEMORY[0x1E01EFA10](v19, -1, -1);
  }

  swift_getObjectType();
  uint64_t v20 = (uint64_t)v39;
  sub_1DFDFCEE0();
  uint64_t v21 = sub_1DFDF01B0();
  os_log_type_t v22 = sub_1DFDFEA60();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_1DE913000, v21, v22, "Following prewarm prepared family status...done", v23, 2u);
    MEMORY[0x1E01EFA10](v23, -1, -1);
  }

  MEMORY[0x1F4188790](v24);
  *(&v35 - 2) = v4;
  sub_1DEB34F78();
  sub_1DFDEE090();
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
  dispatch_group_t v25 = (void *)sub_1DFDFEE60();
  sub_1DEBEE3A0(v4, (uint64_t)v40);
  sub_1DEBEE3D8(v20, (uint64_t)v8);
  unint64_t v26 = (*(unsigned __int8 *)(v35 + 80) + 488) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v27 = swift_allocObject();
  memcpy((void *)(v27 + 16), v40, 0x1D0uLL);
  *(void *)(v27 + 480) = v37;
  sub_1DEBEE620((uint64_t)v8, v27 + v26);
  uint64_t v28 = (void *)(v27 + ((v6 + v26 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v29 = v38;
  uint64_t v30 = v36;
  *uint64_t v28 = v38;
  v28[1] = v30;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1DEBEE684;
  *(void *)(v31 + 24) = v27;
  swift_retain();
  swift_retain();
  sub_1DFDEDE00();
  swift_release();

  swift_release();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v29;
  *(void *)(v32 + 24) = v30;
  swift_retain();
  uint64_t v33 = (void *)sub_1DFDEDCE0();
  sub_1DFDEDE50();
  swift_release();
  swift_release();
  swift_release();

  sub_1DEBEE7EC(v20, (uint64_t (*)(void))sub_1DEBEE1B0);
  return swift_release();
}

uint64_t sub_1DEBEBE70()
{
  if (qword_1EAC1D490 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DFDF01D0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EACDFDC8);
  uint64_t v1 = sub_1DFDF01B0();
  os_log_type_t v2 = sub_1DFDFEA60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1DE913000, v1, v2, "Following prewarm preparing notification configuration...", v3, 2u);
    MEMORY[0x1E01EFA10](v3, -1, -1);
  }

  MEMORY[0x1F4188790](v4);
  sub_1DEAE8198();
  swift_allocObject();
  sub_1DFDEDF30();
  uint64_t v5 = sub_1DFDF01B0();
  os_log_type_t v6 = sub_1DFDFEA60();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1DE913000, v5, v6, "Following prewarm preparing tag service...", v7, 2u);
    MEMORY[0x1E01EFA10](v7, -1, -1);
  }

  MEMORY[0x1F4188790](v8);
  swift_allocObject();
  sub_1DFDEDF30();
  uint64_t v9 = sub_1DFDEE050();
  swift_release();
  swift_release();
  return v9;
}

void sub_1DEBEC0D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v115 = a5;
  double v116 = a4;
  uint64_t v117 = a3;
  sub_1DEBEE2F4(0, &qword_1EBAEBF50, MEMORY[0x1E4FACA00]);
  uint64_t v114 = v6;
  uint64_t v113 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v112 = (char *)&v106 - v7;
  sub_1DEBEE2F4(0, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  uint64_t v9 = v8;
  uint64_t v119 = *((void *)v8 - 1);
  MEMORY[0x1F4188790](v8);
  id v118 = (char *)&v106 - v10;
  sub_1DEBEE754(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v123 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v122 = (uint64_t)&v106 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  double v121 = (id *)((char *)&v106 - v17);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  double v120 = (char *)&v106 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  os_log_type_t v22 = (char *)&v106 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  dispatch_group_t v25 = (char *)&v106 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v106 - v26;
  sub_1DEBEE2F4(0, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v107 = (char *)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  double v126 = (char *)&v106 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  double v111 = (char *)&v106 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v110 = (char *)&v106 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v109 = (char *)&v106 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v108 = (char *)&v106 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v45 = (char *)&v106 - v44;
  uint64_t v46 = MEMORY[0x1F4188790](v43);
  long long v125 = (char *)&v106 - v47;
  MEMORY[0x1F4188790](v46);
  uint64_t v49 = (char *)&v106 - v48;
  uint64_t v50 = swift_projectBox();
  uint64_t v124 = a1;
  sub_1DFA8E98C((uint64_t)v27);
  uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  uint64_t v128 = v30 + 48;
  uint64_t v129 = v51;
  unsigned int v52 = v51(v27, 1, v29);
  uint64_t v127 = v30;
  if (v52 == 1)
  {
    sub_1DEBEE7EC((uint64_t)v27, (uint64_t (*)(void))sub_1DEBEE754);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v49, v27, v29);
    swift_beginAccess();
    sub_1DFDF5990();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v49, v29);
  }
  uint64_t v53 = v9;
  uint64_t v54 = v124;
  sub_1DFA8FAC0((uint64_t)v125);
  swift_beginAccess();
  sub_1DFDF5990();
  swift_endAccess();
  sub_1DFA90668((uint64_t)v25);
  if (v129(v25, 1, v29) == 1)
  {
    sub_1DEBEE7EC((uint64_t)v25, (uint64_t (*)(void))sub_1DEBEE754);
  }
  else
  {
    uint64_t v55 = v127;
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v45, v25, v29);
    swift_beginAccess();
    sub_1DFDF5990();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v45, v29);
  }
  uint64_t v56 = (uint64_t)v120;
  uint64_t v57 = (uint64_t)v121;
  sub_1DFA908F8((uint64_t)v22);
  if (v129(v22, 1, v29) == 1)
  {
    sub_1DEBEE7EC((uint64_t)v22, (uint64_t (*)(void))sub_1DEBEE754);
    uint64_t v58 = v127;
  }
  else
  {
    double v59 = v108;
    double v60 = v22;
    uint64_t v58 = v127;
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v108, v60, v29);
    swift_beginAccess();
    sub_1DFDF5990();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v29);
  }
  uint64_t v61 = sub_1DE9A3B54();
  sub_1DFA90D58(v61, v56);
  if (v129((char *)v56, 1, v29) == 1)
  {
    double v62 = v53;
    sub_1DEBEE7EC(v56, (uint64_t (*)(void))sub_1DEBEE754);
  }
  else
  {
    double v63 = v53;
    CGFloat v64 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v109, v56, v29);
    swift_beginAccess();
    double v62 = v63;
    sub_1DFDF5990();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v64, v29);
  }
  sub_1DFA910A4(v61, v57);
  if (v129((char *)v57, 1, v29) == 1)
  {
    CGFloat v65 = v62;
    sub_1DEBEE7EC(v57, (uint64_t (*)(void))sub_1DEBEE754);
  }
  else
  {
    double v66 = v110;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v110, v57, v29);
    swift_beginAccess();
    CGFloat v65 = v62;
    sub_1DFDF5990();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v66, v29);
  }
  uint64_t v67 = v122;
  sub_1DFA91674(v61, v122);
  if (v129((char *)v67, 1, v29) == 1)
  {
    sub_1DEBEE7EC(v67, (uint64_t (*)(void))sub_1DEBEE754);
    id v68 = v65;
  }
  else
  {
    double v69 = v111;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v111, v67, v29);
    swift_beginAccess();
    id v68 = v65;
    sub_1DFDF5990();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v69, v29);
  }
  sub_1DFA9198C(v61);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1DFDF5990();
  swift_endAccess();
  double v70 = *(id **)(v54 + 392);
  id v71 = objc_msgSend(v70[4], sel_mutedTagIDs);
  unint64_t v72 = MEMORY[0x1E4FBC860];
  if (v71)
  {
    uint64_t v73 = v71;
    uint64_t v122 = v50;
    uint64_t v74 = sub_1DFDFE220();

    uint64_t v75 = swift_bridgeObjectRetain();
    double v120 = (char *)sub_1DE9DB9D8(v75);
    swift_bridgeObjectRelease();
    double v121 = v70;
    id v76 = v70[2];
    double v111 = (char *)v74;
    char v77 = (void *)sub_1DFDFE200();
    id v78 = objc_msgSend(v76, sel_slowCachedTagsForIDs_, v77);

    unint64_t v79 = (unint64_t)v123;
    if (!v78)
    {
      __break(1u);
      return;
    }
    sub_1DEABCEB0();
    sub_1DFDFDAF0();

    uint64_t v80 = swift_bridgeObjectRetain();
    unint64_t v81 = (unint64_t)sub_1DEAB9514(v80);
    swift_bridgeObjectRelease();
    unint64_t v132 = v72;
    if ((v81 & 0x8000000000000000) != 0 || (v81 & 0x4000000000000000) != 0)
    {
LABEL_36:
      swift_retain();
      uint64_t v82 = sub_1DFDFFBE0();
      if (v82) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v82 = *(void *)(v81 + 16);
      swift_retain();
      if (v82)
      {
LABEL_24:
        uint64_t v110 = v68;
        id v68 = 0;
        unint64_t v79 = v81 & 0xC000000000000001;
        while (1)
        {
          if (v79)
          {
            MEMORY[0x1E01EE240](v68, v81);
            uint64_t v83 = v68 + 1;
            if (__OFADD__(v68, 1))
            {
LABEL_32:
              __break(1u);
LABEL_33:
              unint64_t v84 = v132;
              id v68 = v110;
              unint64_t v79 = (unint64_t)v123;
              goto LABEL_38;
            }
          }
          else
          {
            if ((unint64_t)v68 >= *(void *)(v81 + 16))
            {
              __break(1u);
              goto LABEL_36;
            }
            swift_unknownObjectRetain();
            uint64_t v83 = v68 + 1;
            if (__OFADD__(v68, 1)) {
              goto LABEL_32;
            }
          }
          sub_1DFDFFA50();
          sub_1DFDFFA90();
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
          ++v68;
          if (v83 == (char *)v82) {
            goto LABEL_33;
          }
        }
      }
    }
    unint64_t v84 = MEMORY[0x1E4FBC860];
LABEL_38:
    swift_release();
    uint64_t v85 = (uint64_t)v121;
    swift_unknownObjectRetain();
    uint64_t v86 = (uint64_t)v120;
    swift_bridgeObjectRetain();
    unint64_t v72 = sub_1DF08A100(v84, v85, MEMORY[0x1E4FBC870], v86);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v58 = v127;
    uint64_t v50 = v122;
  }
  else
  {
    unint64_t v79 = (unint64_t)v123;
  }
  sub_1DFA91BDC(v72, v117, v79);
  swift_bridgeObjectRelease();
  if (v129((char *)v79, 1, v29) == 1)
  {
    sub_1DEBEE7EC(v79, (uint64_t (*)(void))sub_1DEBEE754);
  }
  else
  {
    double v87 = v107;
    (*(void (**)(char *, unint64_t, uint64_t))(v58 + 32))(v107, v79, v29);
    swift_beginAccess();
    sub_1DFDF5990();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v87, v29);
  }
  swift_beginAccess();
  double v89 = v118;
  uint64_t v88 = v119;
  double v90 = *(void (**)(char *, uint64_t, char *))(v119 + 16);
  v90(v118, v50, v68);
  sub_1DEBEE84C((unint64_t *)&unk_1EBAEC330, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
  sub_1DFDFE6A0();
  sub_1DFDFE720();
  uint64_t v91 = v130;
  uint64_t v92 = v131;
  (*(void (**)(char *, char *))(v88 + 8))(v89, v68);
  if (v91 == v92)
  {
    uint64_t v93 = v113;
    uint64_t v94 = v112;
    uint64_t v95 = v114;
    (*(void (**)(char *, void, uint64_t))(v113 + 104))(v112, *MEMORY[0x1E4FAC9F8], v114);
    v116(v94);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
    double v96 = *(void (**)(char *, uint64_t))(v58 + 8);
    v96(v126, v29);
    v96(v125, v29);
  }
  else
  {
    sub_1DEBEE890();
    uint64_t v98 = v58;
    double v99 = v112;
    double v100 = &v112[*(int *)(v97 + 48)];
    swift_beginAccess();
    v90(v99, v50, v68);
    uint64_t v101 = *MEMORY[0x1E4FAC298];
    uint64_t v102 = sub_1DFDF1930();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 104))(v100, v101, v102);
    uint64_t v103 = v113;
    uint64_t v104 = v114;
    (*(void (**)(char *, void, uint64_t))(v113 + 104))(v99, *MEMORY[0x1E4FAC9E8], v114);
    v116(v99);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v99, v104);
    uint64_t v105 = *(void (**)(char *, uint64_t))(v98 + 8);
    v105(v126, v29);
    v105(v125, v29);
  }
}

uint64_t sub_1DEBED05C(void *a1, void (*a2)(char *))
{
  sub_1DEBEE2F4(0, &qword_1EBAEBF50, MEMORY[0x1E4FACA00]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  *(uint64_t *)((char *)&v11 - v7) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))((char *)&v11 - v7, *MEMORY[0x1E4FAC9E0], v5);
  id v9 = a1;
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1DEBED184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = *(void *)(a5 + 392);
  uint64_t v12 = (void *)swift_allocObject();
  long long v12[2] = a3;
  v12[3] = a4;
  v12[4] = sub_1DEAB8D3C;
  void v12[5] = v10;
  uint64_t v13 = *(void **)(v11 + 32);
  sub_1DE919914(0, (unint64_t *)&qword_1EBABAC90);
  swift_retain();
  swift_retain();
  uint64_t v14 = (void *)sub_1DFDFEE60();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1DEBEE970;
  *(void *)(v15 + 24) = v12;
  v17[4] = sub_1DEBEE9B4;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1DE9744A8;
  v17[3] = &block_descriptor_12;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_prewarmFromCacheWithCallbackQueue_completion_, v14, v16);
  _Block_release(v16);
  swift_release();
}

void sub_1DEBED324(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void))
{
  if (a1)
  {
    id v6 = a1;
    if (qword_1EAC1D490 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1DFDF01D0();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EACDFDC8);
    id v8 = a1;
    id v9 = a1;
    uint64_t v10 = sub_1DFDF01B0();
    os_log_type_t v11 = sub_1DFDFEA40();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138543362;
      id v14 = a1;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_1DFDFF680();
      *uint64_t v13 = v20;

      _os_log_impl(&dword_1DE913000, v10, v11, "Following prewarm preparing tag service, failed=%{public}@", v12, 0xCu);
      sub_1DEBEE790(0, (unint64_t *)&qword_1EBAEA670, (uint64_t)&qword_1EBABB090, 0x1E4FBA8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DE919914);
      swift_arrayDestroy();
      MEMORY[0x1E01EFA10](v13, -1, -1);
      MEMORY[0x1E01EFA10](v12, -1, -1);
    }
    else
    {
    }
    a2(a1);
  }
  else
  {
    if (qword_1EAC1D490 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1DFDF01D0();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EACDFDC8);
    uint64_t v17 = sub_1DFDF01B0();
    os_log_type_t v18 = sub_1DFDFEA60();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1DE913000, v17, v18, "Following prewarm prepared tag service...done", v19, 2u);
      MEMORY[0x1E01EFA10](v19, -1, -1);
    }

    a4();
  }
}

uint64_t sub_1DEBED5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = *(void **)(a5 + 392);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1DEB80558;
  *(void *)(v10 + 24) = v8;
  uint64_t v11 = v9[9];
  uint64_t v12 = v9[10];
  __swift_project_boxed_opaque_existential_1(v9 + 6, v11);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1DEBEE9BC;
  *(void *)(v13 + 24) = v10;
  id v14 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v12 + 32);
  swift_retain();
  swift_retain();
  v14(sub_1DEBEE9C4, v13, v11, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_1DEBED724(uint64_t a1, uint64_t (*a2)(void))
{
  if (qword_1EAC1D490 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1DFDF01D0();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EACDFDC8);
  uint64_t v4 = sub_1DFDF01B0();
  os_log_type_t v5 = sub_1DFDFEA60();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl(&dword_1DE913000, v4, v5, "Following prewarm preparing notification configuration...done", v6, 2u);
    MEMORY[0x1E01EFA10](v6, -1, -1);
  }

  return a2();
}

unint64_t sub_1DEBED818()
{
  return 0xD00000000000001ALL;
}

uint64_t destroy for FollowingPrewarmModifier(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  __swift_destroy_boxed_opaque_existential_1(a1 + 208);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 304);
  __swift_destroy_boxed_opaque_existential_1(a1 + 344);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 408);
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FollowingPrewarmModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7(a1 + 24, v4, v6);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v10(a1 + 88, a2 + 88, v9);
  long long v11 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 128, a2 + 128);
  long long v12 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 192) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 168, a2 + 168);
  long long v13 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 232) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 208, a2 + 208);
  id v14 = *(void **)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v14;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v28 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v28;
  uint64_t v16 = *(void *)(a2 + 328);
  uint64_t v15 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = v16;
  *(void *)(a1 + 336) = v15;
  uint64_t v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  swift_unknownObjectRetain();
  id v18 = v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v17(a1 + 304, a2 + 304, v16);
  long long v19 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 368) = v19;
  (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 344, a2 + 344);
  uint64_t v20 = *(void **)(a2 + 384);
  uint64_t v21 = *(void *)(a2 + 392);
  uint64_t v22 = *(void *)(a2 + 400);
  *(void *)(a1 + 384) = v20;
  *(void *)(a1 + 392) = v21;
  *(void *)(a1 + 400) = v22;
  long long v23 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 432) = v23;
  uint64_t v24 = v23;
  dispatch_group_t v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8);
  id v26 = v20;
  swift_unknownObjectRetain();
  v25(a1 + 408, a2 + 408, v24);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for FollowingPrewarmModifier(uint64_t *a1, uint64_t *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = v4;
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  uint64_t v5 = a2[9];
  a1[8] = a2[8];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[9] = v5;
  a1[10] = a2[10];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 11, a2 + 11);
  __swift_assign_boxed_opaque_existential_1(a1 + 16, a2 + 16);
  __swift_assign_boxed_opaque_existential_1(a1 + 21, a2 + 21);
  __swift_assign_boxed_opaque_existential_1(a1 + 26, a2 + 26);
  a1[31] = a2[31];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = (void *)a2[32];
  uint64_t v7 = (void *)a1[32];
  a1[32] = (uint64_t)v6;
  id v8 = v6;

  a1[33] = a2[33];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v9 = a2[35];
  a1[34] = a2[34];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[35] = v9;
  uint64_t v10 = a2[37];
  a1[36] = a2[36];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[37] = v10;
  __swift_assign_boxed_opaque_existential_1(a1 + 38, a2 + 38);
  __swift_assign_boxed_opaque_existential_1(a1 + 43, a2 + 43);
  long long v11 = (void *)a2[48];
  long long v12 = (void *)a1[48];
  a1[48] = (uint64_t)v11;
  id v13 = v11;

  uint64_t v14 = a2[50];
  a1[49] = a2[49];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[50] = v14;
  __swift_assign_boxed_opaque_existential_1(a1 + 51, a2 + 51);
  uint64_t v15 = a2[57];
  a1[56] = a2[56];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[57] = v15;
  return a1;
}

void *__swift_memcpy464_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D0uLL);
}

uint64_t assignWithTake for FollowingPrewarmModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = v4;
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  __swift_destroy_boxed_opaque_existential_1(a1 + 208);
  long long v7 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v7;
  uint64_t v8 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v8;
  swift_unknownObjectRelease();
  uint64_t v9 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);

  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_unknownObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_unknownObjectRelease();
  uint64_t v10 = *(void *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  swift_unknownObjectRelease();
  *(void *)(a1 + 296) = v10;
  __swift_destroy_boxed_opaque_existential_1(a1 + 304);
  long long v11 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v11;
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  __swift_destroy_boxed_opaque_existential_1(a1 + 344);
  long long v12 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v12;
  uint64_t v13 = *(void *)(a2 + 384);
  uint64_t v14 = *(void **)(a1 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v13;

  uint64_t v15 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  swift_unknownObjectRelease();
  *(void *)(a1 + 400) = v15;
  __swift_destroy_boxed_opaque_existential_1(a1 + 408);
  long long v16 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v16;
  uint64_t v17 = *(void *)(a2 + 440);
  uint64_t v18 = *(void *)(a2 + 448);
  uint64_t v19 = *(void *)(a2 + 456);
  *(void *)(a1 + 440) = v17;
  *(void *)(a1 + 448) = v18;
  swift_unknownObjectRelease();
  *(void *)(a1 + 456) = v19;
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingPrewarmModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 464)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowingPrewarmModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 456) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 464) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 464) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingPrewarmModifier()
{
  return &type metadata for FollowingPrewarmModifier;
}

unint64_t sub_1DEBEE158()
{
  unint64_t result = qword_1EBAF0050;
  if (!qword_1EBAF0050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF0050);
  }
  return result;
}

void sub_1DEBEE1B0()
{
  if (!qword_1EBAF7350)
  {
    sub_1DFDFA5D0();
    unint64_t v0 = sub_1DFDFF670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAF7350);
    }
  }
}

void sub_1DEBEE208()
{
  if (!qword_1EBAEBA80)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC180];
    sub_1DEBEE2F4(255, (unint64_t *)&qword_1EBAEBCD0, MEMORY[0x1E4FAC180]);
    sub_1DEBEE84C((unint64_t *)&unk_1EBAEBCB0, (unint64_t *)&qword_1EBAEBCD0, v0);
    sub_1DEBEE84C((unint64_t *)&unk_1EBAEBCA0, (unint64_t *)&qword_1EBAEBCD0, v0);
    unint64_t v1 = sub_1DFDED2E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBAEBA80);
    }
  }
}

void sub_1DEBEE2F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FollowingDescriptor;
    v8[1] = type metadata accessor for FollowingModel();
    void v8[2] = sub_1DEADC298();
    v8[3] = sub_1DEAE2210();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DEBEE384()
{
  return sub_1DEBEBE70();
}

uint64_t sub_1DEBEE3A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DEBEE3D8(uint64_t a1, uint64_t a2)
{
  sub_1DEBEE1B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBEE43C()
{
  sub_1DEBEE1B0();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 488) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 320);
  __swift_destroy_boxed_opaque_existential_1(v0 + 360);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 424);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v3 = sub_1DFDFA5D0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBEE620(uint64_t a1, uint64_t a2)
{
  sub_1DEBEE1B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DEBEE684()
{
  sub_1DEBEE1B0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 488) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 480);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void (**)(char *))v6;
  uint64_t v8 = *(void *)(v6 + 8);
  sub_1DEBEC0D0(v0 + 16, v4, v5, v7, v8);
}

uint64_t sub_1DEBEE71C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DEBEE74C(void *a1)
{
  return sub_1DEBED05C(a1, *(void (**)(char *))(v1 + 16));
}

void sub_1DEBEE754(uint64_t a1)
{
}

void sub_1DEBEE790(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1DFDFF670();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1DEBEE7EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEBEE84C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DEBEE2F4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DEBEE890()
{
  if (!qword_1EBAEC320)
  {
    sub_1DEBEE2F4(255, (unint64_t *)&qword_1EBAEC340, MEMORY[0x1E4FAD830]);
    sub_1DFDF1930();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBAEC320);
    }
  }
}

uint64_t sub_1DEBEE920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DEBED5F4(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void sub_1DEBEE928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DEBED184(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1DEBEE930()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DEBEE970(void *a1)
{
  sub_1DEBED324(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

uint64_t sub_1DEBEE97C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DEBEE9B4()
{
  return sub_1DF086E54(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1DEBEE9BC(uint64_t a1)
{
  return sub_1DEBED724(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1DEBEE9C4(uint64_t a1)
{
  return sub_1DEFE9438(a1, *(uint64_t (**)(void))(v1 + 16));
}

id sub_1DEBEE9E4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_readingList], sel_removeObserver_, v0);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1DEBEEB74(uint64_t a1, uint64_t *a2)
{
  return sub_1DEBEEBA4(a2);
}

uint64_t sub_1DEBEEBA4(uint64_t *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v27 = type metadata accessor for SavedFeedGapLocation(0);
  uint64_t v29 = *(void *)(v27 - 8);
  uint64_t v2 = *(void *)(v29 + 64);
  uint64_t v3 = MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v27 - v5;
  CFTimeInterval v7 = CACurrentMediaTime();
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = (uint64_t)a1 + *(int *)(type metadata accessor for SavedFeedExpandRequest() + 20);
  uint64_t v31 = v6;
  sub_1DEBEFF20(v10, (uint64_t)v6);
  uint64_t v11 = qword_1EBAEA6F8;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  sub_1DFDFEA60();
  sub_1DEA086BC();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DFE0B750;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1DEA08668();
  *(void *)(v12 + 64) = v14;
  uint64_t v28 = v8;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v9;
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  uint64_t v15 = (uint64_t)v31;
  sub_1DFDFFB10();
  uint64_t v16 = v32;
  unint64_t v17 = v33;
  *(void *)(v12 + 96) = v13;
  *(void *)(v12 + 104) = v14;
  *(void *)(v12 + 72) = v16;
  *(void *)(v12 + 80) = v17;
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DEBEFF20(v15, (uint64_t)v4);
  unint64_t v18 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1DEBF00BC((uint64_t)v4, v19 + v18);
  sub_1DEBF018C(0, (unint64_t *)&qword_1EBAF2970, MEMORY[0x1E4F805A0]);
  sub_1DFDEE080();
  swift_release();
  sub_1DEBF018C(0, &qword_1EBAF2958, MEMORY[0x1E4F7FB20]);
  sub_1DFDEDE10();
  swift_release();
  sub_1DEAA29D0();
  uint64_t v20 = (void *)sub_1DFDFEE60();
  uint64_t v21 = (CFTimeInterval *)swift_allocObject();
  uint64_t v22 = v28;
  *((void *)v21 + 2) = v28;
  *((void *)v21 + 3) = v9;
  v21[4] = v7;
  swift_bridgeObjectRetain();
  sub_1DFDEDE00();
  swift_release();

  swift_release();
  long long v23 = (CFTimeInterval *)swift_allocObject();
  v23[2] = v7;
  *((void *)v23 + 3) = v22;
  *((void *)v23 + 4) = v9;
  uint64_t v24 = (void *)sub_1DFDEDCE0();
  uint64_t v25 = sub_1DFDEDE50();
  swift_release();
  swift_release();

  sub_1DEBF0294(v15);
  return v25;
}

uint64_t sub_1DEBEEFBC()
{
  return sub_1DFDEDE90();
}

uint64_t sub_1DEBEF034(uint64_t a1, uint64_t a2)
{
  sub_1DEBF018C(0, (unint64_t *)&qword_1EBAF2970, MEMORY[0x1E4F805A0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = type metadata accessor for SavedFeedGapLocation(0);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBEFF20(a2, (uint64_t)v14);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5);
  if (v15 == 1)
  {
    MEMORY[0x1F4188790](v15);
    *(&v19 - 2) = a1;
    type metadata accessor for SavedFeedServiceConfig();
    sub_1DFDEE090();
    uint64_t v16 = (void *)sub_1DFDEDCE0();
    uint64_t v17 = sub_1DFDEDE00();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v14, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    sub_1DEBF02F0();
    swift_allocObject();
    uint64_t v17 = sub_1DFDEDE90();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  return v17;
}

uint64_t sub_1DEBEF2C4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_feedServiceContextFactory);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  id v4 = objc_msgSend(self, sel_currentDevice);
  objc_msgSend(v4, sel_userInterfaceIdiom);

  uint64_t v5 = sub_1DFDF6D60();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DEBEF3B8()
{
  return sub_1DFDFA110();
}

uint64_t sub_1DEBEF410()
{
  return sub_1DFDF9E90();
}

uint64_t sub_1DEBEF444@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = qword_1EBAEA6F8;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DFE0CC10;
  sub_1DFDFE560();
  uint64_t v10 = MEMORY[0x1E4FBB460];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 32) = v11;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 96) = MEMORY[0x1E4FBB1A0];
  unint64_t v13 = sub_1DEA08668();
  *(void *)(v9 + 104) = v13;
  *(void *)(v9 + 72) = a2;
  *(void *)(v9 + 80) = a3;
  swift_bridgeObjectRetain();
  sub_1DFDFFB10();
  *(void *)(v9 + 136) = v12;
  *(void *)(v9 + 144) = v13;
  *(void *)(v9 + 112) = 0;
  *(void *)(v9 + 120) = 0xE000000000000000;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = a2;
  a4[1] = a3;
  a4[2] = v7;
  return result;
}

uint64_t sub_1DEBEF5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBAEA6F8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE0CC10;
  sub_1DFDFE560();
  uint64_t v6 = MEMORY[0x1E4FBB460];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 32) = v7;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 96) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1DEA08668();
  *(void *)(v5 + 104) = v9;
  *(void *)(v5 + 72) = a2;
  *(void *)(v5 + 80) = a3;
  sub_1DE925CE8(0, (unint64_t *)&qword_1EBABB7C0);
  swift_bridgeObjectRetain();
  sub_1DFDFFB10();
  *(void *)(v5 + 136) = v8;
  *(void *)(v5 + 144) = v9;
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0xE000000000000000;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEBEF758(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_headlineService);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return MEMORY[0x1E01E9F50](*a2, *MEMORY[0x1E4F7DFF0], v4, v5);
}

uint64_t sub_1DEBEF7C4(uint64_t *a1, uint64_t a2)
{
  uint64_t refreshed = type metadata accessor for SavedFeedRefreshResult();
  MEMORY[0x1F4188790](refreshed);
  uint64_t v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *a1;
  if (qword_1EBAEA6F8 != -1) {
    swift_once();
  }
  sub_1DEA086BC();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DFE0B250;
  sub_1DFDFE560();
  uint64_t v9 = MEMORY[0x1E4FBB460];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 32) = v10;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = a2 + *(int *)(type metadata accessor for SavedFeedRefreshRequest() + 28);
  unint64_t v14 = (char *)v6 + *(int *)(refreshed + 28);
  uint64_t v15 = sub_1DFDF9D80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v13, v15);
  *uint64_t v6 = v7;
  v6[1] = v11;
  uint64_t v6[2] = v12;
  sub_1DEBF03D8();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1DFDEDE90();
}

uint64_t type metadata accessor for SavedFeedDataManager()
{
  return self;
}

BOOL sub_1DEBEFA08()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_readingList), sel_allSortedArticleIDsInReadingList);
  uint64_t v2 = sub_1DFDFE220();

  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v3 == 0;
}

void sub_1DEBEFB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
    uint64_t v5 = a4 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_delegate;
    if (MEMORY[0x1E01EFB70](a4 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_delegate))
    {
      uint64_t v6 = *(void *)(v5 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(void *)(a4 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_dataProvider + 24);
      uint64_t v9 = *(void *)(a4 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_dataProvider + 32);
      __swift_project_boxed_opaque_existential_1((void *)(a4 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_dataProvider), v8);
      uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      (*(void (**)(uint64_t, _UNKNOWN **, void, void, uint64_t, uint64_t, uint64_t))(v6 + 8))(a4, &off_1F3A73580, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], v10, ObjectType, v6);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1DEBEFC20()
{
  swift_getObjectType();
  return sub_1DFDED310();
}

uint64_t sub_1DEBEFC5C()
{
  swift_getObjectType();
  return sub_1DFDED340();
}

uint64_t sub_1DEBEFCB4()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_dataProvider + 24];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_dataProvider + 32];
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_dataProvider], v1);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  uint64_t v4 = *(void (**)(void (*)(uint64_t, char, uint64_t), uint64_t, uint64_t, uint64_t))(v2 + 16);
  uint64_t v5 = v0;
  v4(sub_1DEBEFF14, v3, v1, v2);
  return swift_release();
}

uint64_t sub_1DEBEFD70()
{
  swift_getObjectType();
  return sub_1DFDED310();
}

uint64_t sub_1DEBEFDAC()
{
  swift_getObjectType();
  return sub_1DFDED340();
}

uint64_t sub_1DEBEFE04()
{
  swift_getObjectType();
  return sub_1DFDED310();
}

uint64_t sub_1DEBEFE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_delegate;
  uint64_t result = MEMORY[0x1E01EFB70](v2 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_delegate);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v6 + 16))(v2, a2, 0, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DEBEFEDC()
{
  return swift_deallocObject();
}

void sub_1DEBEFF14(uint64_t a1, char a2, uint64_t a3)
{
  sub_1DEBEFB10(a1, a2 & 1, a3, *(void *)(v3 + 16));
}

uint64_t sub_1DEBEFF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SavedFeedGapLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBEFF84()
{
  uint64_t v1 = *(void *)(type metadata accessor for SavedFeedGapLocation(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1DEBF018C(0, (unint64_t *)&qword_1EBAF2970, MEMORY[0x1E4F805A0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_1DEBF00BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SavedFeedGapLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBF0120(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SavedFeedGapLocation(0) - 8);
  return sub_1DEBEF034(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

void sub_1DEBF018C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for SavedFeedServiceConfig();
    unint64_t v7 = sub_1DEB80750();
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DEBF01F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEBF0230@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DEBEF444(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1DEBF0250()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DEBF0288(uint64_t a1)
{
  return sub_1DEBEF5DC(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1DEBF0294(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SavedFeedGapLocation(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DEBF02F0()
{
  if (!qword_1EBAEBB70)
  {
    sub_1DEBF018C(255, (unint64_t *)&qword_1EBAF2970, MEMORY[0x1E4F805A0]);
    unint64_t v0 = sub_1DFDEDFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEBB70);
    }
  }
}

uint64_t sub_1DEBF0364()
{
  return sub_1DEBEF2C4(*(void *)(v0 + 16));
}

void sub_1DEBF0380()
{
  if (!qword_1EBAEBB28)
  {
    unint64_t v0 = sub_1DFDEDFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAEBB28);
    }
  }
}

void sub_1DEBF03D8()
{
  if (!qword_1EAC21840)
  {
    type metadata accessor for SavedFeedRefreshResult();
    unint64_t v0 = sub_1DFDEDFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC21840);
    }
  }
}

uint64_t sub_1DEBF0430(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_delegate;
  uint64_t result = MEMORY[0x1E01EFB70](v6);
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_dataProvider + 24);
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_dataProvider + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtC7NewsUI220SavedFeedDataManager_dataProvider), v10);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(v3, &off_1F3A73580, a1, a2, v12, ObjectType, v8);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HighlightsTagFeedGrouping(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEBF0618);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HighlightsTagFeedGrouping()
{
  return &type metadata for HighlightsTagFeedGrouping;
}

uint64_t sub_1DEBF0650(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DF2A2994(*a1, *a2);
}

uint64_t sub_1DEBF065C()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEBF06F0()
{
  sub_1DFDFDE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEBF0770()
{
  return sub_1DFE00140();
}

uint64_t sub_1DEBF0800@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DEBF09DC();
  *a1 = result;
  return result;
}

void sub_1DEBF0830(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 7954788;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7473694C74616C66;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1953720684;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1DEBF0884()
{
  unint64_t result = qword_1EAC21850;
  if (!qword_1EAC21850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21850);
  }
  return result;
}

uint64_t sub_1DEBF08D8()
{
  return sub_1DFDFE1D0();
}

uint64_t sub_1DEBF0938()
{
  return sub_1DFDFE180();
}

unint64_t sub_1DEBF0988()
{
  unint64_t result = qword_1EBADB978;
  if (!qword_1EBADB978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBADB978);
  }
  return result;
}

uint64_t sub_1DEBF09DC()
{
  unint64_t v0 = sub_1DFDFFCA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DEBF0A2C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBF0AD8(MEMORY[0x1E4F7FBE0], MEMORY[0x1E4F7FC00], a1);
}

uint64_t sub_1DEBF0A4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DFDF7CB0();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t sub_1DEBF0AB8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DEBF0AD8(MEMORY[0x1E4F7F6A0], MEMORY[0x1E4F7F6B0], a1);
}

uint64_t sub_1DEBF0AD8@<X0>(unsigned int *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2(0);
  BOOL v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a3, v4, v5);
}

uint64_t sub_1DEBF0B4C()
{
  uint64_t v1 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  BOOL v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBF1288(v0, (uint64_t)v6);
  sub_1DEBF12EC((uint64_t)v6, (uint64_t)v4);
  uint64_t v7 = sub_1DEECA878();
  sub_1DEBF1350((uint64_t)v4);
  return v7;
}

double sub_1DEBF0C28()
{
  return 1.0;
}

uint64_t sub_1DEBF0C30(uint64_t a1)
{
  uint64_t v2 = sub_1DEBF13AC(&qword_1EAC2AFB0);
  return MEMORY[0x1F4136510](a1, v2);
}

uint64_t sub_1DEBF0C98()
{
  sub_1DEBF13AC(&qword_1EAC21878);
  return sub_1DFDFA330();
}

uint64_t sub_1DEBF0D08()
{
  uint64_t v1 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v2);
  BOOL v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBF1288(v0, (uint64_t)v6);
  sub_1DEBF12EC((uint64_t)v6, (uint64_t)v4);
  uint64_t v7 = *v4;
  swift_bridgeObjectRetain();
  sub_1DEBF1350((uint64_t)v4);
  return v7;
}

uint64_t sub_1DEBF0DE8(uint64_t a1)
{
  uint64_t v2 = sub_1DEBF13AC(&qword_1EAC21878);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DEBF0E40()
{
  return 0x20656C6369747241;
}

uint64_t sub_1DEBF0E60()
{
  uint64_t v1 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  BOOL v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBF1288(v0, (uint64_t)v6);
  sub_1DEBF12EC((uint64_t)v6, (uint64_t)v4);
  uint64_t v7 = sub_1DFDF6EB0();
  sub_1DEBF1350((uint64_t)v4);
  return v7;
}

uint64_t sub_1DEBF0F4C()
{
  sub_1DEBF13AC(&qword_1EAC21880);
  return sub_1DFDED1B0();
}

uint64_t sub_1DEBF0FA4()
{
  return sub_1DEBF13AC(&qword_1EAC21858);
}

uint64_t type metadata accessor for AudioHistoryFeedGroup()
{
  uint64_t result = qword_1EAC21890;
  if (!qword_1EAC21890) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEBF1024()
{
  return sub_1DEBF13AC(&qword_1EAC21860);
}

uint64_t sub_1DEBF1058()
{
  return sub_1DEBF13AC(&qword_1EAC21868);
}

uint64_t sub_1DEBF108C()
{
  return sub_1DEBF13AC(&qword_1EAC21870);
}

uint64_t sub_1DEBF10C0()
{
  return sub_1DEBF13AC(&qword_1EAC21878);
}

uint64_t sub_1DEBF10F4()
{
  return sub_1DEBF13AC(&qword_1EAC21880);
}

unint64_t sub_1DEBF112C()
{
  unint64_t result = qword_1EBAF6330;
  if (!qword_1EBAF6330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6330);
  }
  return result;
}

unint64_t sub_1DEBF1184()
{
  unint64_t result = qword_1EBAF6318;
  if (!qword_1EBAF6318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6318);
  }
  return result;
}

unint64_t sub_1DEBF11DC()
{
  unint64_t result = qword_1EBAF6320;
  if (!qword_1EBAF6320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBAF6320);
  }
  return result;
}

unint64_t sub_1DEBF1234()
{
  unint64_t result = qword_1EAC21888;
  if (!qword_1EAC21888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21888);
  }
  return result;
}

uint64_t sub_1DEBF1288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioHistoryFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBF12EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBF1350(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DEBF13AC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AudioHistoryFeedGroup();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1DEBF13F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDF7010();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DEBF14FC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for ArticleListAudioHistoryFeedGroup() + 20);
  uint64_t v3 = sub_1DFDF7010();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

void *sub_1DEBF1590(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDF7010();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DEBF1650(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 24)) = *(void *)((char *)a2 + *(int *)(v4 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1DEBF1718(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 24)) = *(void *)((char *)a2 + *(int *)(v4 + 24));
  return a1;
}

void *sub_1DEBF17B8(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDF7010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DEBF1868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  return MEMORY[0x1F4186578](a1, a2, v4, sub_1DEBF18C0);
}

uint64_t sub_1DEBF18C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDF7010();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DEBF1970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  return MEMORY[0x1F41867C0](a1, a2, a3, v6, sub_1DEBF19D8);
}

uint64_t sub_1DEBF19D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DFDF7010();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DEBF1A80(uint64_t a1)
{
  uint64_t result = type metadata accessor for ArticleListAudioHistoryFeedGroup();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t SearchResults.excluding(identifiers:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (!*(void *)(a1 + 16)) {
    return sub_1DEBF4160((uint64_t)v2, (uint64_t)a2, (uint64_t (*)(void))type metadata accessor for SearchResults);
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DEBF3D8C(v5, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *v2;
  uint64_t v7 = v2[1];
  uint64_t v9 = (int *)type metadata accessor for SearchResults();
  uint64_t v10 = v9[6];
  uint64_t v11 = (char *)v2 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1DFDEA1B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v11, v13);
  unint64_t v14 = (uint64_t *)((char *)v2 + v9[7]);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  sub_1DEBF40CC((uint64_t)v2 + v9[8], (uint64_t)a2 + v9[8]);
  uint64_t v17 = *(uint64_t *)((char *)v2 + v9[9]);
  uint64_t v18 = *(uint64_t *)((char *)v2 + v9[10]);
  *a2 = v8;
  a2[1] = v7;
  a2[2] = v6;
  uint64_t v19 = (void *)((char *)a2 + v9[7]);
  void *v19 = v16;
  v19[1] = v15;
  *(void *)((char *)a2 + v9[9]) = v17;
  *(void *)((char *)a2 + v9[10]) = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static SearchResults.empty(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for SearchResults();
  uint64_t v5 = a2 + v4[6];
  uint64_t v6 = sub_1DFDEA1B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, a1, v6);
  uint64_t v7 = a2 + v4[8];
  uint64_t v8 = sub_1DFDEB4F0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  strcpy((char *)a2, "empty-search");
  *(unsigned char *)(a2 + 13) = 0;
  *(_WORD *)(a2 + 14) = -5120;
  *(void *)(a2 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v10 = (void *)(a2 + v4[7]);
  void *v10 = 0;
  v10[1] = 0;
  *(void *)(a2 + v4[9]) = 0;
  *(void *)(a2 + v4[10]) = 7;
  return result;
}

uint64_t SearchResults.topHitTopic()()
{
  sub_1DEB23648();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SearchModel(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v34 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v29 - v9;
  uint64_t v11 = type metadata accessor for SearchResultsGroup();
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v32 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
    unint64_t v33 = v5;
    uint64_t v31 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v18 = *(void *)(v12 + 72);
    v29[1] = v15;
    swift_bridgeObjectRetain();
    uint64_t v19 = v2;
    uint64_t v20 = (uint64_t)v34;
    uint64_t v30 = v10;
    while (1)
    {
      sub_1DEBF4160(v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SearchResultsGroup);
      if (swift_getEnumCaseMultiPayload()) {
        break;
      }
      sub_1DEBF5AC8((uint64_t)v14, (uint64_t)v10, type metadata accessor for SearchModel);
      sub_1DEBF4160((uint64_t)v10, v20, type metadata accessor for SearchModel);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1DEBF41C8((uint64_t)v10, type metadata accessor for SearchModel);
        uint64_t v22 = v20;
        uint64_t v21 = type metadata accessor for SearchModel;
        goto LABEL_4;
      }
      long long v23 = v33;
      (*v32)(v33, v20, v19);
      sub_1DFDF9A80();
      uint64_t v24 = v19;
      uint64_t v25 = *(void **)(v35 + 16);
      swift_unknownObjectRetain();
      swift_release();
      id v26 = objc_msgSend(v25, sel_tagType);
      swift_unknownObjectRelease();
      if (v26 == (id)1)
      {
        swift_bridgeObjectRelease();
        sub_1DFDF9A80();
        (*v31)(v23, v24);
        sub_1DEBF41C8((uint64_t)v30, type metadata accessor for SearchModel);
        uint64_t v27 = *(void *)(v35 + 16);
        swift_unknownObjectRetain();
        swift_release();
        return v27;
      }
      (*v31)(v23, v24);
      uint64_t v10 = v30;
      sub_1DEBF41C8((uint64_t)v30, type metadata accessor for SearchModel);
      uint64_t v19 = v24;
      uint64_t v20 = (uint64_t)v34;
LABEL_5:
      v17 += v18;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    uint64_t v21 = (uint64_t (*)(void))type metadata accessor for SearchResultsGroup;
    uint64_t v22 = (uint64_t)v14;
LABEL_4:
    sub_1DEBF41C8(v22, v21);
    goto LABEL_5;
  }
  return 0;
}

unint64_t SearchResults.topics()()
{
  sub_1DEB23648();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v0);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v8 = type metadata accessor for SearchModel(0);
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  unint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v43 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v48 = (uint64_t)&v43 - v18;
  uint64_t v53 = type metadata accessor for SearchResultsGroup();
  uint64_t v19 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v21 = (char **)((char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t result = MEMORY[0x1E4FBC860];
  unint64_t v61 = MEMORY[0x1E4FBC860];
  unint64_t v23 = *(void *)(v58 + 16);
  uint64_t v52 = *(void *)(v23 + 16);
  if (!v52) {
    return result;
  }
  unint64_t v51 = v23 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  uint64_t v57 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v58 = v2 + 32;
  uint64_t v45 = v21 + 1;
  unint64_t v54 = v23;
  swift_bridgeObjectRetain();
  unint64_t result = v54;
  unint64_t v24 = 0;
  uint64_t v47 = v17;
  uint64_t v25 = v48;
  uint64_t v49 = v21;
  uint64_t v50 = v19;
  uint64_t v43 = v7;
  uint64_t v55 = v11;
LABEL_5:
  if (v24 >= *(void *)(result + 16))
  {
    __break(1u);
    return result;
  }
  uint64_t v26 = *(void *)(v19 + 72);
  unint64_t v56 = v24;
  sub_1DEBF4160(v51 + v26 * v24, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SearchResultsGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v31 = *v21;
    unint64_t v32 = MEMORY[0x1E4FBC860];
    unint64_t v60 = MEMORY[0x1E4FBC860];
    uint64_t v33 = *(void *)(v31 + 16);
    if (!v33) {
      goto LABEL_24;
    }
    uint64_t v34 = v44;
    uint64_t v35 = v31 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    uint64_t v46 = v31;
    swift_bridgeObjectRetain();
    uint64_t v36 = *(void *)(v34 + 72);
    while (1)
    {
      sub_1DEBF4160(v35, (uint64_t)v14, type metadata accessor for SearchModel);
      sub_1DEBF4160((uint64_t)v14, (uint64_t)v11, type metadata accessor for SearchModel);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, char *, uint64_t))v58)(v5, v11, v1);
        sub_1DFDF9A80();
        uint64_t v38 = *(void **)(v59 + 16);
        swift_unknownObjectRetain();
        swift_release();
        id v39 = objc_msgSend(v38, sel_tagType);
        swift_unknownObjectRelease();
        if (v39 == (id)1)
        {
          sub_1DFDF9A80();
          (*v57)(v5, v1);
          swift_unknownObjectRetain();
          swift_release();
          uint64_t v40 = sub_1DEBF41C8((uint64_t)v14, type metadata accessor for SearchModel);
          MEMORY[0x1E01ECA20](v40);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1DFDFE320();
          }
          sub_1DFDFE370();
          sub_1DFDFE250();
          uint64_t v11 = v55;
          goto LABEL_16;
        }
        (*v57)(v5, v1);
        uint64_t v37 = (uint64_t)v14;
      }
      else
      {
        sub_1DEBF41C8((uint64_t)v11, type metadata accessor for SearchModel);
        uint64_t v37 = (uint64_t)v14;
      }
      sub_1DEBF41C8(v37, type metadata accessor for SearchModel);
LABEL_16:
      v35 += v36;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        unint64_t v32 = v60;
        uint64_t v7 = v43;
LABEL_24:
        swift_bridgeObjectRelease();
        sub_1DEABE108(v32);
        sub_1DEBF4228((uint64_t)v45, (unint64_t *)&qword_1EAC218A0, (uint64_t (*)(uint64_t))sub_1DEBF4284, MEMORY[0x1E4FBB718]);
        uint64_t v17 = v47;
        uint64_t v25 = v48;
LABEL_28:
        uint64_t v21 = v49;
        uint64_t v19 = v50;
LABEL_4:
        unint64_t v24 = v56 + 1;
        unint64_t result = v54;
        if (v56 + 1 == v52) {
          goto LABEL_31;
        }
        goto LABEL_5;
      }
    }
  }
  if (EnumCaseMultiPayload)
  {
    sub_1DEBF41C8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SearchResultsGroup);
    goto LABEL_4;
  }
  sub_1DEBF5AC8((uint64_t)v21, v25, type metadata accessor for SearchModel);
  sub_1DEBF4160(v25, (uint64_t)v17, type metadata accessor for SearchModel);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DEBF41C8(v25, type metadata accessor for SearchModel);
    uint64_t v41 = (uint64_t)v17;
LABEL_27:
    sub_1DEBF41C8(v41, type metadata accessor for SearchModel);
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))v58)(v7, v17, v1);
  sub_1DFDF9A80();
  uint64_t v28 = *(void **)(v60 + 16);
  swift_unknownObjectRetain();
  swift_release();
  id v29 = objc_msgSend(v28, sel_tagType);
  swift_unknownObjectRelease();
  if (v29 != (id)1)
  {
    (*v57)(v7, v1);
    uint64_t v25 = v48;
    uint64_t v41 = v48;
    goto LABEL_27;
  }
  sub_1DFDF9A80();
  uint64_t v30 = *(void *)(v60 + 16);
  swift_unknownObjectRetain();
  swift_release();
  if (!(v61 >> 62)
    || (swift_bridgeObjectRetain(), uint64_t v42 = sub_1DFDFFBE0(),
                                    swift_bridgeObjectRelease(),
                                    (v42 & 0x8000000000000000) == 0))
  {
    sub_1DEBF3918(0, 0, v30, (unint64_t *)&qword_1EBABAB70);
    (*v57)(v7, v1);
    uint64_t v25 = v48;
    sub_1DEBF41C8(v48, type metadata accessor for SearchModel);
    uint64_t v17 = v47;
    goto LABEL_28;
  }
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t SearchResults.description.getter()
{
  uint64_t v1 = v0;
  sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v9 - v3;
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_1DFDFF9B0();
  sub_1DFDFDE90();
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v5 = type metadata accessor for SearchResultsGroup();
  uint64_t v6 = swift_bridgeObjectRetain();
  MEMORY[0x1E01ECA60](v6, v5);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v7 = type metadata accessor for SearchResults();
  sub_1DEBF40CC(v1 + *(int *)(v7 + 32), (uint64_t)v4);
  sub_1DFDFDD90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFE540();
  sub_1DFDFDE90();
  v9[1] = *(void *)(v1 + *(int *)(v7 + 40));
  sub_1DFDFFB10();
  sub_1DFDFDE90();
  return v10;
}

uint64_t SearchResults.debugDescription.getter()
{
  uint64_t v1 = v0;
  sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v11 - v3;
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1DFDFF9B0();
  sub_1DFDFDE90();
  swift_bridgeObjectRetain();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v5 = type metadata accessor for SearchResultsGroup();
  uint64_t v6 = swift_bridgeObjectRetain();
  MEMORY[0x1E01ECA60](v6, v5);
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  uint64_t v7 = (int *)type metadata accessor for SearchResults();
  sub_1DFDEA1B0();
  sub_1DFDFFB10();
  sub_1DFDFDE90();
  uint64_t v8 = (void *)(v1 + v7[7]);
  uint64_t v9 = v8[1];
  v11[0] = *v8;
  v11[1] = v9;
  sub_1DEBB2068();
  swift_bridgeObjectRetain();
  sub_1DFDFDD90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DEBF40CC(v1 + v7[8], (uint64_t)v4);
  sub_1DFDFDD90();
  sub_1DFDFDE90();
  swift_bridgeObjectRelease();
  sub_1DFDFDE90();
  sub_1DFDFE540();
  sub_1DFDFDE90();
  v11[0] = *(void *)(v1 + v7[10]);
  sub_1DFDFFB10();
  sub_1DFDFDE90();
  return v12;
}

uint64_t sub_1DEBF2ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v7 = a1;
    unint64_t v6 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v23 < v5) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v6 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v6 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v6;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = MEMORY[0x1E01EE250](v10, v14, 1, v6);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v6;
  uint64_t v13 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v15 = (void *)(v13 + 32 + 8 * v7);
  sub_1DE919914(0, (unint64_t *)&qword_1EBAEA4E0);
  swift_arrayDestroy();
  if (v8)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v17 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_21:
        if (v17 < 0)
        {
LABEL_46:
          uint64_t result = sub_1DFDFFC60();
          __break(1u);
          return result;
        }
        uint64_t v18 = (char *)(v15 + 1);
        uint64_t v19 = (char *)(v13 + 32 + 8 * v5);
        if (v15 + 1 != (void *)v19 || v18 >= &v19[8 * v17]) {
          memmove(v18, v19, 8 * v17);
        }
        if (!(v6 >> 62))
        {
          uint64_t v20 = *(void *)(v13 + 16);
          uint64_t v21 = v20 + v8;
          if (!__OFADD__(v20, v8))
          {
LABEL_27:
            *(void *)(v13 + 16) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v8;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v17 = v16 - v5;
      if (!__OFSUB__(v16, v5)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  void *v15 = v3;
  return sub_1DFDFE250();
}

char *sub_1DEBF31D4(uint64_t a1, int64_t a2, uint64_t a3, char a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    unint64_t v6 = sub_1DEE18600(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = (uint64_t)&v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 16);
    uint64_t v21 = (char *)&v6[2 * a2 + 4];
    size_t v22 = 16 * v20;
    if ((char *)(v16 + 16) != v21 || result >= &v21[v22]) {
      uint64_t result = (char *)memmove(result, v21, v22);
    }
    uint64_t v23 = v6[2];
    BOOL v19 = __OFADD__(v23, v10);
    uint64_t v24 = v23 + v10;
    if (!v19)
    {
      uint64_t v6[2] = v24;
LABEL_20:
      *(void *)uint64_t v16 = a3;
      *(unsigned char *)(v16 + 8) = a4 & 1;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DEBF3360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DEBF3380(a1, a2, a3, &qword_1EAC218B8, (uint64_t (*)(uint64_t))type metadata accessor for SportsManagementDetailSection);
}

uint64_t sub_1DEBF3380(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = a5;
    uint64_t v8 = a4;
    uint64_t v12 = a3;
    uint64_t v7 = a2;
    uint64_t v11 = a1;
    unint64_t v10 = *v6;
    if (!(*v6 >> 62))
    {
      if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v27 < v7) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v13 = v7 - v11;
  if (__OFSUB__(v7, v11))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = 1 - v13;
  if (__OFSUB__(1, v13))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    uint64_t v15 = v14 + v5;
    if (!__OFADD__(v14, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v10 = *v6;
  uint64_t v31 = v8;
  if (*v6 >> 62) {
    goto LABEL_36;
  }
  uint64_t v14 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v15 = v14 + v5;
  if (__OFADD__(v14, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v10 = *v6;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v6 = v10;
  uint64_t v30 = v12;
  uint64_t v14 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    uint64_t v17 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v15 <= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v14 = 1;
  }
  if (v10 >> 62) {
    goto LABEL_39;
  }
  uint64_t v18 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v18 <= v15) {
    uint64_t v18 = v15;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = MEMORY[0x1E01EE250](v14, v18, 1, v10);
  swift_bridgeObjectRelease();
  *unint64_t v6 = v10;
  uint64_t v17 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  BOOL v19 = (void *)(v17 + 32 + 8 * v11);
  sub_1DEA9E0AC(0, v31, v9, MEMORY[0x1E4FAB088]);
  swift_arrayDestroy();
  if (v5)
  {
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v21 = v28 - v7;
      if (!__OFSUB__(v28, v7))
      {
LABEL_21:
        if (v21 < 0)
        {
LABEL_46:
          uint64_t result = sub_1DFDFFC60();
          __break(1u);
          return result;
        }
        size_t v22 = (char *)(v19 + 1);
        uint64_t v23 = (char *)(v17 + 32 + 8 * v7);
        if (v19 + 1 != (void *)v23 || v22 >= &v23[8 * v21]) {
          memmove(v22, v23, 8 * v21);
        }
        if (!(v10 >> 62))
        {
          uint64_t v24 = *(void *)(v17 + 16);
          uint64_t v25 = v24 + v5;
          if (!__OFADD__(v24, v5))
          {
LABEL_27:
            *(void *)(v17 + 16) = v25;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        uint64_t v25 = v29 + v5;
        if (!__OFADD__(v29, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v20 = *(void *)(v17 + 16);
      uint64_t v21 = v20 - v7;
      if (!__OFSUB__(v20, v7)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  void *v19 = v30;
  return sub_1DFDFE250();
}

uint64_t sub_1DEBF369C(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_1DEA9E298(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for OfflineFeedManifest.Group(0) - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = sub_1DFDFFC60();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_1DEBF4160(a3, v17, type metadata accessor for OfflineFeedManifest.Group);
  }
  return sub_1DEBF4228(a3, (unint64_t *)&unk_1EAC218C0, type metadata accessor for OfflineFeedManifest.Group, MEMORY[0x1E4FBBB08]);
}

uint64_t sub_1DEBF38E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DEBF3380(a1, a2, a3, &qword_1EAC218B0, (uint64_t (*)(uint64_t))type metadata accessor for SportsManagementSection);
}

uint64_t sub_1DEBF3904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DEBF3918(a1, a2, a3, (unint64_t *)&qword_1EBAEA530);
}

uint64_t sub_1DEBF3918(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a4;
    uint64_t v10 = a3;
    uint64_t v6 = a2;
    uint64_t v9 = a1;
    unint64_t v8 = *v5;
    if (!(*v5 >> 62))
    {
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v25 < v6) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v11 = v6 - v9;
  if (__OFSUB__(v6, v9))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v4 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    uint64_t v13 = v12 + v4;
    if (!__OFADD__(v12, v4)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v8 = *v5;
  uint64_t v29 = v7;
  if (*v5 >> 62) {
    goto LABEL_36;
  }
  uint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v13 = v12 + v4;
  if (__OFADD__(v12, v4)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v8 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v5 = v8;
  uint64_t v28 = v10;
  uint64_t v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v12 = 1;
  }
  if (v8 >> 62) {
    goto LABEL_39;
  }
  uint64_t v16 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v16 <= v13) {
    uint64_t v16 = v13;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = MEMORY[0x1E01EE250](v12, v16, 1, v8);
  swift_bridgeObjectRelease();
  *unint64_t v5 = v8;
  uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v17 = (void *)(v15 + 32 + 8 * v9);
  sub_1DE9266B8(0, v29);
  swift_arrayDestroy();
  if (v4)
  {
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v19 = v26 - v6;
      if (!__OFSUB__(v26, v6))
      {
LABEL_21:
        if (v19 < 0)
        {
LABEL_46:
          uint64_t result = sub_1DFDFFC60();
          __break(1u);
          return result;
        }
        unint64_t v20 = (char *)(v17 + 1);
        unint64_t v21 = (char *)(v15 + 32 + 8 * v6);
        if (v17 + 1 != (void *)v21 || v20 >= &v21[8 * v19]) {
          memmove(v20, v21, 8 * v19);
        }
        if (!(v8 >> 62))
        {
          uint64_t v22 = *(void *)(v15 + 16);
          uint64_t v23 = v22 + v4;
          if (!__OFADD__(v22, v4))
          {
LABEL_27:
            *(void *)(v15 + 16) = v23;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        uint64_t v23 = v27 + v4;
        if (!__OFADD__(v27, v4)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v19 = v18 - v6;
      if (!__OFSUB__(v18, v6)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  *uint64_t v17 = v28;
  return sub_1DFDFE250();
}

uint64_t sub_1DEBF3C20(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1DEA8C6EC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

unint64_t sub_1DEBF3D8C(uint64_t a1, uint64_t a2)
{
  sub_1DEA9E0AC(0, &qword_1EAC218D0, (uint64_t (*)(uint64_t))type metadata accessor for SearchResultsGroup, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (void *)((char *)v22 - v6);
  uint64_t v26 = type metadata accessor for SearchResultsGroup();
  uint64_t v8 = MEMORY[0x1F4188790](v26);
  uint64_t v25 = (uint64_t)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v22 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v22[2] = v2;
  unint64_t v23 = v14;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v10 + 72);
  uint64_t v17 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v22[1] = a1;
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v24 = a2;
  do
  {
    sub_1DEB24E10(a2, v7);
    if ((*v17)(v7, 1, v26) == 1)
    {
      sub_1DEBF4228((uint64_t)v7, &qword_1EAC218D0, (uint64_t (*)(uint64_t))type metadata accessor for SearchResultsGroup, MEMORY[0x1E4FBB718]);
    }
    else
    {
      sub_1DEBF5AC8((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SearchResultsGroup);
      sub_1DEBF5AC8((uint64_t)v12, v25, (uint64_t (*)(void))type metadata accessor for SearchResultsGroup);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1DEE18020(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v18 = sub_1DEE18020(v19 > 1, v20 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v20 + 1;
      sub_1DEBF5AC8(v25, v18 + v23 + v20 * v16, (uint64_t (*)(void))type metadata accessor for SearchResultsGroup);
      a2 = v24;
    }
    v15 += v16;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t type metadata accessor for SearchResults()
{
  uint64_t result = qword_1EBAF8070;
  if (!qword_1EBAF8070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DEBF40CC(uint64_t a1, uint64_t a2)
{
  sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBF4160(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEBF41C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DEBF4228(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1DEA9E0AC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1DEBF4284()
{
  unint64_t result = qword_1EAC205C8;
  if (!qword_1EAC205C8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAC205C8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResults(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DFDEA1B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    unint64_t v18 = (char *)v4 + v14;
    unint64_t v19 = (char *)a2 + v14;
    uint64_t v20 = sub_1DFDEB4F0();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v25 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v25) = *(uint64_t *)((char *)a2 + v25);
  }
  return v4;
}

uint64_t destroy for SearchResults(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DFDEA1B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_1DFDEB4F0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *initializeWithCopy for SearchResults(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDEA1B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (char *)a1 + v13;
  unint64_t v18 = (char *)a2 + v13;
  uint64_t v19 = sub_1DFDEB4F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v23 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  return a1;
}

void *assignWithCopy for SearchResults(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DFDEA1B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1DFDEB4F0();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for SearchResults(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DFDEA1B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_1DFDEB4F0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

void *assignWithTake for SearchResults(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DFDEA1B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  unint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1DFDEB4F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  uint64_t v25 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResults(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBF4EB4);
}

uint64_t sub_1DEBF4EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDEA1B0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SearchResults(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBF5024);
}

uint64_t sub_1DEBF5024(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DFDEA1B0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1DEA9E0AC(0, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DEBF5180()
{
  sub_1DFDEA1B0();
  if (v0 <= 0x3F)
  {
    sub_1DEA9E0AC(319, (unint64_t *)&qword_1EBABE460, MEMORY[0x1E4F7C140], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DEBF52A8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x1E01EE250](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for TagModel();
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_1DFDFFC60();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_1DFDFE250();
}

uint64_t sub_1DEBF5588(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1DFDFFBE0();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x1E01EE250](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_1DE919914(0, (unint64_t *)&qword_1EBAF59C0);
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_1DFDFFC60();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1DFDFFBE0();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_1DFDFE250();
}

uint64_t sub_1DEBF5878(uint64_t a1, uint64_t a2)
{
  return sub_1DEBF58D0(a1, a2, (uint64_t (*)(void))sub_1DEE18FC8, (uint64_t (*)(void))type metadata accessor for ChannelPickerElementModel);
}

uint64_t sub_1DEBF58A4(uint64_t a1, uint64_t a2)
{
  return sub_1DEBF58D0(a1, a2, (uint64_t (*)(void))sub_1DEE1B7E8, type metadata accessor for TodayLocalNewsArticle.Resolved);
}

uint64_t sub_1DEBF58D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  uint64_t v13 = *(void *)(a4(0) - 8);
  unint64_t v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_28;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 - v9;
    if (!v23)
    {
      *(void *)(v6 + 16) = v24;
LABEL_22:
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = sub_1DFDFFC60();
  __break(1u);
  return result;
}

uint64_t sub_1DEBF5AC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DEBF5B30()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ChannelPickerDetailBlueprintModifierFactory()
{
  return self;
}

uint64_t sub_1DEBF5B94(uint64_t a1)
{
  sub_1DE94F204(*v1 + 16, (uint64_t)&v12);
  long long v3 = *(_OWORD *)(a1 + 112);
  void v10[6] = *(_OWORD *)(a1 + 96);
  v10[7] = v3;
  uint64_t v11 = *(void *)(a1 + 128);
  long long v4 = *(_OWORD *)(a1 + 48);
  void v10[2] = *(_OWORD *)(a1 + 32);
  v10[3] = v4;
  long long v5 = *(_OWORD *)(a1 + 80);
  v10[4] = *(_OWORD *)(a1 + 64);
  v10[5] = v5;
  long long v6 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v6;
  sub_1DEBF5DA0((uint64_t)v10, (uint64_t)&v9);
  sub_1DEBF5CC4();
  swift_allocObject();
  sub_1DEBF5DFC(a1);
  sub_1DEBF5EB8();
  uint64_t v7 = sub_1DFDF19A0();
  sub_1DEBF5F0C((uint64_t)v10);
  return v7;
}

uint64_t sub_1DEBF5C54()
{
  return sub_1DFDF19A0();
}

void sub_1DEBF5CC4()
{
  if (!qword_1EAC218D8)
  {
    type metadata accessor for ChannelPickerElementModel();
    sub_1DEB0C244();
    sub_1DEB0C298();
    unint64_t v0 = sub_1DFDF19B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAC218D8);
    }
  }
}

unint64_t sub_1DEBF5D4C()
{
  unint64_t result = qword_1EAC218E0;
  if (!qword_1EAC218E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC218E0);
  }
  return result;
}

uint64_t sub_1DEBF5DA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DEBF5DFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DEB52E50(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1DEBF5EB8()
{
  unint64_t result = qword_1EAC218E8;
  if (!qword_1EAC218E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC218E8);
  }
  return result;
}

uint64_t sub_1DEBF5F0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DEBF5F60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBF6844(0, &qword_1EAC21908, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for NewFollowTodayFeedGroup();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEBF678C();
  sub_1DFE00190();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_1DEBF68A8(&qword_1EBACA150, MEMORY[0x1E4F7F240]);
    sub_1DFDFFD90();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_1DEBF67E0((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DEBF620C(uint64_t a1)
{
  unint64_t v2 = sub_1DEBF678C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DEBF6248(uint64_t a1)
{
  unint64_t v2 = sub_1DEBF678C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DEBF6284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBF6298);
}

uint64_t sub_1DEBF6298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DEBF6304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBF6318);
}

uint64_t sub_1DEBF6318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DFDF7010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1DEBF6388@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DEBF5F60(a1, a2);
}

uint64_t sub_1DEBF63A0(void *a1)
{
  sub_1DEBF6844(0, &qword_1EAC21918, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DEBF678C();
  sub_1DFE001A0();
  sub_1DFDF7010();
  sub_1DEBF68A8((unint64_t *)&unk_1EBACA140, MEMORY[0x1E4F7F240]);
  sub_1DFDFFE80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DEBF6528()
{
  return sub_1DEBF68A8(&qword_1EAC20B10, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
}

uint64_t sub_1DEBF6570()
{
  return sub_1DEBF68A8(&qword_1EAC218F0, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
}

uint64_t sub_1DEBF65B8()
{
  return sub_1DEBF68A8(&qword_1EAC218F8, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
}

uint64_t sub_1DEBF6600(uint64_t a1)
{
  uint64_t result = sub_1DEBF68A8(&qword_1EAC20A78, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DEBF6658(uint64_t a1)
{
  uint64_t v2 = sub_1DEBF68A8(&qword_1EAC21900, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
  return MEMORY[0x1F4136530](a1, v2);
}

uint64_t sub_1DEBF66C4()
{
  return 0x6C6C6F462077654ELL;
}

uint64_t sub_1DEBF66E0(void *a1)
{
  a1[1] = sub_1DEBF68A8(&qword_1EAC21900, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
  a1[2] = sub_1DEBF68A8(&qword_1EAC20AB0, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
  uint64_t result = sub_1DEBF68A8(&qword_1EAC20AE0, (void (*)(uint64_t))type metadata accessor for NewFollowTodayFeedGroup);
  a1[3] = result;
  return result;
}

unint64_t sub_1DEBF678C()
{
  unint64_t result = qword_1EAC21910;
  if (!qword_1EAC21910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21910);
  }
  return result;
}

uint64_t sub_1DEBF67E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewFollowTodayFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DEBF6844(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DEBF678C();
    unint64_t v7 = a3(a1, &type metadata for NewFollowTodayFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DEBF68A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewFollowTodayFeedGroup.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DEBF698CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewFollowTodayFeedGroup.CodingKeys()
{
  return &type metadata for NewFollowTodayFeedGroup.CodingKeys;
}

unint64_t sub_1DEBF69C8()
{
  unint64_t result = qword_1EAC21920;
  if (!qword_1EAC21920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21920);
  }
  return result;
}

unint64_t sub_1DEBF6A20()
{
  unint64_t result = qword_1EAC21928;
  if (!qword_1EAC21928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21928);
  }
  return result;
}

unint64_t sub_1DEBF6A78()
{
  unint64_t result = qword_1EAC21930;
  if (!qword_1EAC21930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21930);
  }
  return result;
}

ValueMetadata *type metadata accessor for SeeMoreButtonLayoutAttributes()
{
  return &type metadata for SeeMoreButtonLayoutAttributes;
}

double sub_1DEBF6ADC()
{
  return *(double *)v0;
}

uint64_t sub_1DEBF6AE8(uint64_t a1)
{
  unint64_t v2 = sub_1DEBF6B7C();
  return MEMORY[0x1F4162968](a1, v2);
}

unint64_t sub_1DEBF6B28()
{
  unint64_t result = qword_1EAC21938;
  if (!qword_1EAC21938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21938);
  }
  return result;
}

unint64_t sub_1DEBF6B7C()
{
  unint64_t result = qword_1EAC21940;
  if (!qword_1EAC21940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21940);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DEBF6C9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchServiceError()
{
  return &type metadata for SearchServiceError;
}

unint64_t sub_1DEBF6CD8()
{
  unint64_t result = qword_1EAC21948;
  if (!qword_1EAC21948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC21948);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsDetailModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v9 = sub_1DFDFC270();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = type metadata accessor for SportsModel();
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 24));
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SportsDetailModel(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_1DFDFC270();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for SportsModel();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for SportsDetailModel(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = sub_1DFDFC270();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for SportsModel();
    *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
    *(void *)((char *)a1 + *(int *)(v7 + 24)) = *(void *)((char *)a2 + *(int *)(v7 + 24));
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for SportsDetailModel(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DEBF76D8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for SportsDetailModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v5 = sub_1DFDFC270();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = type metadata accessor for SportsModel();
      *(void *)((char *)a1 + *(int *)(v6 + 20)) = *(void *)((char *)a2 + *(int *)(v6 + 20));
      *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for SportsDetailModel()
{
  uint64_t result = qword_1EAC21950;
  if (!qword_1EAC21950) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *initializeWithTake for SportsDetailModel(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1DFDFC270();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for SportsModel();
    *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
    *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for SportsDetailModel(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DEBF76D8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for SportsDetailModel);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1DFDFC270();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for SportsModel();
      *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
      *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1DEBF73A0()
{
  uint64_t result = type metadata accessor for SportsModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DEBF7440()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SportsModel();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SportsDetailModel();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEBF7610(v1, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v9 = sub_1DFDE6ED0();
    }
  }
  else
  {
    sub_1DEBF7674((uint64_t)v7, (uint64_t)v4);
    uint64_t v9 = sub_1DF7B632C();
    sub_1DEBF76D8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SportsModel);
  }
  return v9;
}

uint64_t sub_1DEBF7610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDetailModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBF7674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DEBF76D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1DEBF7738(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DEBF7AD8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v35 = a2;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DEBE3100();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for ForYouTagFeedGroupKnobs();
    *(void *)&v9[v12[5]] = *(void *)&v10[v12[5]];
    *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
    *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
    *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
    v9[v12[9]] = v10[v12[9]];
    uint64_t v13 = v12[10];
    __dst = &v9[v13];
    uint64_t v14 = &v10[v13];
    uint64_t v15 = sub_1DFDF8EA0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v34(v14, 1, v15))
    {
      sub_1DEA92F28(0);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v19 = a3[6];
    long long v20 = *(_OWORD *)((char *)v35 + v19 + 24);
    *(_OWORD *)((char *)a1 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    uint64_t v21 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)v35 + a3[7]);
    uint64_t v22 = (char *)a1 + v21;
    BOOL v23 = (char *)v35 + v21;
    long long v24 = *(_OWORD *)((char *)v35 + v21 + 24);
    *(_OWORD *)((char *)a1 + v21 + 24) = v24;
    uint64_t v25 = v24;
    uint64_t v26 = **(void (***)(char *, char *, uint64_t))(v24 - 8);
    swift_unknownObjectRetain();
    v26(v22, v23, v25);
    uint64_t v27 = a3[9];
    long long v28 = *(_OWORD *)((char *)v35 + v27 + 24);
    *(_OWORD *)((char *)a1 + v27 + 24) = v28;
    (**(void (***)(void))(v28 - 8))();
    uint64_t v29 = a3[11];
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)v35 + a3[10]);
    uint64_t v30 = (void *)((char *)a1 + v29);
    uint64_t v31 = (void *)((char *)v35 + v29);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1DEBF7AD8()
{
  if (!qword_1EBAE9500)
  {
    type metadata accessor for ForYouTagFeedGroupConfigData();
    sub_1DEACEF6C(qword_1EBADE910, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupConfigData);
    sub_1DEACEF6C((unint64_t *)&unk_1EBADE900, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupConfigData);
    unint64_t v0 = sub_1DFDF7430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBAE9500);
    }
  }
}

uint64_t sub_1DEBF7BA4(uint64_t a1, int *a2)
{
  sub_1DEBF7AD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for ForYouTagFeedGroupKnobs();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = v5 + *(int *)(v7 + 40);
  uint64_t v9 = sub_1DFDF8EA0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[8]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[9]);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DEBF7D60(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEBF7AD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v35 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v33 = a2;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ForYouTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  uint64_t v12 = v11[10];
  __dst = (void *)(v8 + v12);
  uint64_t v13 = (const void *)(v9 + v12);
  uint64_t v14 = sub_1DFDF8EA0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v16(v13, 1, v14))
  {
    sub_1DEA92F28(0);
    memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v18 = v35[6];
  long long v19 = *(_OWORD *)(v33 + v18 + 24);
  *(_OWORD *)(a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  uint64_t v20 = v35[8];
  *(void *)(a1 + v35[7]) = *(void *)(v33 + v35[7]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = v33 + v20;
  long long v23 = *(_OWORD *)(v33 + v20 + 24);
  *(_OWORD *)(a1 + v20 + 24) = v23;
  uint64_t v24 = v23;
  uint64_t v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8);
  swift_unknownObjectRetain();
  v25(v21, v22, v24);
  uint64_t v26 = v35[9];
  long long v27 = *(_OWORD *)(v33 + v26 + 24);
  *(_OWORD *)(a1 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  uint64_t v28 = v35[11];
  *(void *)(a1 + v35[10]) = *(void *)(v33 + v35[10]);
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(v33 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DEBF80B0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEBF7AD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ForYouTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  swift_retain();
  swift_release();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  uint64_t v15 = sub_1DFDF8EA0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_1DEA92F28(0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[9]), (uint64_t *)(a2 + a3[9]));
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v21 = a3[11];
  uint64_t v22 = (void *)(a1 + v21);
  long long v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DEBF83CC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEBF7AD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ForYouTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = sub_1DFDF8EA0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1DEA92F28(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = (long long *)(a2 + v23);
  long long v27 = *v26;
  long long v28 = v26[1];
  *(void *)(v25 + 32) = *((void *)v26 + 4);
  *(_OWORD *)uint64_t v25 = v27;
  *(_OWORD *)(v25 + 16) = v28;
  uint64_t v29 = a1 + v24;
  uint64_t v30 = a2 + v24;
  long long v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  uint64_t v32 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v32) = *(_OWORD *)(a2 + v32);
  return a1;
}

uint64_t sub_1DEBF8618(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DEBF7AD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ForYouTagFeedGroupKnobs();
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  swift_release();
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  swift_release();
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  swift_release();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  swift_release();
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  uint64_t v15 = sub_1DFDF8EA0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_1DEA92F28(0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = a3[6];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  __swift_destroy_boxed_opaque_existential_1(a1 + v21);
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_unknownObjectRelease();
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  __swift_destroy_boxed_opaque_existential_1(a1 + v25);
  long long v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(void *)(v26 + 32) = *(void *)(v27 + 32);
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  __swift_destroy_boxed_opaque_existential_1(a1 + v29);
  long long v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(void *)(v30 + 32) = *(void *)(v31 + 32);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_unknownObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DEBF8930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DEBF8944);
}

uint64_t sub_1DEBF8944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEBF7AD8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for ForYouTagFeedGroupKnobs();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DEBF8A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DEBF8A70);
}

uint64_t sub_1DEBF8A70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DEBF7AD8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for ForYouTagFeedGroupKnobs();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ForYouTagFeedGroupEmitter()
{
  uint64_t result = qword_1EBADB818;
  if (!qword_1EBADB818) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DEBF8BD0()
{
  sub_1DEBF7AD8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ForYouTagFeedGroupKnobs();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

double sub_1DEBF8CBC@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1DEBF8CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DEB7BED8;
  return sub_1DEBF8D70(a1, a2);
}

uint64_t sub_1DEBF8D70(uint64_t a1, uint64_t a2)
{
  v3[44] = a2;
  v3[45] = v2;
  v3[43] = a1;
  uint64_t v4 = sub_1DFDF9D80();
  v3[46] = v4;
  v3[47] = *(void *)(v4 - 8);
  v3[48] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DEBF8E34, 0, 0);
}

uint64_t sub_1DEBF8E34()
{
  sub_1DFDF88A0();
  unint64_t v1 = (void *)v0[14];
  uint64_t v2 = (void *)v0[15];
  v0[49] = v0[16];

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[50] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DEBF8FC4;
  return MEMORY[0x1F415EBC8](v0 + 38);
}

uint64_t sub_1DEBF8FC4()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DEBF9C24;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1DEBF90E0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DEBF90E0()
{
  uint64_t v1 = *(void *)(v0 + 408);
  int64_t v3 = *(void *)(v0 + 304);
  unint64_t v2 = *(void *)(v0 + 312);
  *(void *)(v0 + 416) = v3;
  *(void *)(v0 + 424) = v2;
  uint64_t v4 = *(void **)(v0 + 328);
  *(void *)(v0 + 432) = *(void *)(v0 + 320);
  *(void *)(v0 + 440) = v4;
  uint64_t v5 = *(void **)(v0 + 336);
  *(void *)(v0 + 448) = v5;
  sub_1DFDF88A0();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DEBB2024(v4, v5);
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 352);
    long long v7 = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 240);
    *(_OWORD *)(v0 + 64) = v7;
    long long v8 = *(_OWORD *)(v0 + 288);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 96) = v8;
    long long v9 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 32) = v9;
    uint64_t v10 = sub_1DEBFE798(v6, v0 + 16, v3, v2);
    *(void *)(v0 + 456) = v10;
    *(void *)(v0 + 464) = v11;
    uint64_t v14 = v10;
    sub_1DEBFF29C(v0 + 16);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 472) = v15;
    void *v15 = v0;
    v15[1] = sub_1DEBF92C0;
    uint64_t v16 = *(void *)(v0 + 360);
    v15[4] = v14;
    v15[5] = v16;
    return MEMORY[0x1F4188298](sub_1DEBFA3F4, 0, 0);
  }
}

uint64_t sub_1DEBF92C0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 480) = a1;
  *(void *)(v3 + 488) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1DEBF9C90;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1DEBF93DC;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1DEBF93DC()
{
  uint64_t v1 = sub_1DEBFA778(v0[45], v0[44], v0[60]);
  v0[62] = v1;
  if (v1)
  {
    unint64_t v2 = v1;
    if (qword_1EBAEA6E8 != -1) {
      swift_once();
    }
    unint64_t v3 = v0[60];
    sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DFE13CE0;
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v6 = MEMORY[0x1E4FBB550];
    uint64_t v7 = MEMORY[0x1E4FBB5C8];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 32) = v5;
    if (v2 >> 62)
    {
      uint64_t v37 = v6;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v6 = v37;
    }
    else
    {
      uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v9 = v0[47];
    uint64_t v10 = v0[48];
    uint64_t v11 = v0[46];
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    uint64_t v12 = v4 + 112;
    *(void *)(v4 + 72) = v8;
    type metadata accessor for ForYouTagFeedGroupEmitter();
    type metadata accessor for ForYouTagFeedGroupKnobs();
    sub_1DFDF8870();
    uint64_t v13 = MEMORY[0x1E4FBB3C8];
    *(void *)(v4 + 136) = MEMORY[0x1E4FBB390];
    *(void *)(v4 + 144) = v13;
    sub_1DFDF8BF0();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v14 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v14)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v21 = (void *)MEMORY[0x1E01EE240](0, v0[60]);
      }
      else
      {
        if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_42;
        }
        uint64_t v21 = *(void **)(v0[60] + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      id v22 = objc_msgSend(v21, sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v23 = sub_1DFDFDD20();
      unint64_t v25 = v24;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
      unint64_t v25 = 0;
    }
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 176) = MEMORY[0x1E4FBB1A0];
    unint64_t v14 = sub_1DEA08668();
    *(void *)(v4 + 184) = v14;
    if (v25) {
      uint64_t v26 = v23;
    }
    else {
      uint64_t v26 = 0;
    }
    unint64_t v27 = 0xE000000000000000;
    if (v25) {
      unint64_t v27 = v25;
    }
    *(void *)(v4 + 152) = v26;
    *(void *)(v4 + 160) = v27;
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1DFDFFBE0();
      if (result)
      {
LABEL_27:
        if ((v2 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          uint64_t v29 = *(void **)(v2 + 32);
          swift_unknownObjectRetain();
LABEL_30:
          swift_bridgeObjectRelease();
          id v30 = objc_msgSend(v29, sel_identifier);
          swift_unknownObjectRelease();
          uint64_t v31 = sub_1DFDFDD20();
          unint64_t v33 = v32;

          uint64_t v34 = (uint64_t *)(v4 + 192);
          *(void *)(v4 + 216) = v12;
          *(void *)(v4 + 224) = v14;
          if (v33)
          {
            *uint64_t v34 = v31;
LABEL_35:
            *(void *)(v4 + 200) = v33;
            sub_1DFDFEA60();
            sub_1DFDF00C0();
            swift_bridgeObjectRelease();
            uint64_t v35 = (void *)swift_task_alloc();
            v0[63] = v35;
            *uint64_t v35 = v0;
            v35[1] = sub_1DEBF99AC;
            uint64_t v36 = v0[44];
            return sub_1DEBFAC2C(v36, v2);
          }
LABEL_34:
          *uint64_t v34 = 0;
          unint64_t v33 = 0xE000000000000000;
          goto LABEL_35;
        }
LABEL_42:
        uint64_t v29 = (void *)MEMORY[0x1E01EE240](0, v2);
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v28) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t *)(v4 + 192);
    *(void *)(v4 + 216) = v12;
    *(void *)(v4 + 224) = v14;
    goto LABEL_34;
  }
  uint64_t v15 = (void *)v0[55];
  uint64_t v16 = (void *)v0[56];
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1DFDF8510();
  sub_1DEACEF6C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, *MEMORY[0x1E4F7F980], v17);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DEBB2024(v15, v16);
  swift_task_dealloc();
  int v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1DEBF99AC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 512) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1DEBF9D44;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 520) = a1;
    uint64_t v5 = sub_1DEBF9ADC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DEBF9ADC()
{
  unint64_t v2 = *(void **)(v0 + 440);
  uint64_t v1 = *(void **)(v0 + 448);
  sub_1DEBFBF6C(*(void *)(v0 + 520), *(uint64_t **)(v0 + 344));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DEBB2024(v2, v1);
  sub_1DEBFF364(0, &qword_1EBAE9740, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedGroup, sub_1DEBFF3E4, MEMORY[0x1E4F7FA98]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  unint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1DEBF9C24()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEBF9C90()
{
  unint64_t v2 = (void *)v0[55];
  uint64_t v1 = (void *)v0[56];
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DEBB2024(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DEBF9D44()
{
  unint64_t v2 = (void *)v0[55];
  uint64_t v1 = (void *)v0[56];
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DEBB2024(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DEBF9DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1DEB7BAE0;
  return MEMORY[0x1F4134A00](a1, a2, a3, a4, a5);
}

uint64_t sub_1DEBF9EC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DEBF9F00@<X0>(uint64_t *a1@<X8>)
{
  sub_1DEBF7AD8();
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocBox();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v1, v4);
  *a1 = v5 | 0x6000000000000002;
  return result;
}

uint64_t sub_1DEBF9F80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  a2[3] = type metadata accessor for ForYouTagFeedGroupKnobs();
  a2[4] = sub_1DEACEF6C(qword_1EBADA1B8, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupKnobs);
  a2[5] = sub_1DEACEF6C((unint64_t *)&unk_1EAC21990, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1DEBFF6A0(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ForYouTagFeedGroupKnobs);
}

uint64_t sub_1DEBFA058()
{
  sub_1DEBE3100();
  uint64_t v1 = sub_1DFDF8030();
  sub_1DF3DD820(MEMORY[0x1E4FBC860]);
  return v1;
}

uint64_t sub_1DEBFA0C0()
{
  sub_1DEBF7AD8();
  return sub_1DFDF7340();
}

uint64_t sub_1DEBFA0EC@<X0>(uint64_t *a1@<X8>)
{
  sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB730, (uint64_t (*)(uint64_t))sub_1DEABE384, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DFE0B250;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1DEBF7AD8();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DFDF7340();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  sub_1DEA6D7C0(inited);
  sub_1DEA488CC(0, (unint64_t *)&unk_1EBAD25D8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupEmitter, MEMORY[0x1E4FAAAF8]);
  a1[3] = v5;
  a1[4] = sub_1DEBFF708();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DFDED1C0();
}

uint64_t sub_1DEBFA244()
{
  sub_1DEACEF6C((unint64_t *)&unk_1EBADB7F8, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupEmitter);
  return sub_1DFDED1B0();
}

uint64_t sub_1DEBFA2B0()
{
  return sub_1DEACEF6C((unint64_t *)&unk_1EBADB808, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupEmitter);
}

uint64_t sub_1DEBFA2F8()
{
  return sub_1DEACEF6C(&qword_1EBADB7F0, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupEmitter);
}

uint64_t sub_1DEBFA340()
{
  return sub_1DEACEF6C((unint64_t *)&unk_1EBADB7F8, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupEmitter);
}

uint64_t sub_1DEBFA38C()
{
  return sub_1DEACEF6C(qword_1EAC21960, (void (*)(uint64_t))type metadata accessor for ForYouTagFeedGroupEmitter);
}

uint64_t sub_1DEBFA3D4(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x1F4188298](sub_1DEBFA3F4, 0, 0);
}

uint64_t sub_1DEBFA3F4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = type metadata accessor for ForYouTagFeedGroupEmitter();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + *(int *)(v2 + 36)), *(void *)(v1 + *(int *)(v2 + 36) + 24));
  v0[6] = sub_1DFDFB6C0();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DEBFA4F8;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1DEBFA4F8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DEBFA714;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1DEBFA614;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DEBFA614()
{
  uint64_t v1 = v0[4];
  v0[3] = v0[2];
  sub_1DEBFF55C();
  sub_1DEACEF6C((unint64_t *)&qword_1EBABA9B0, (void (*)(uint64_t))sub_1DEBFF55C);
  uint64_t v2 = sub_1DFDFE0C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DEBFE058(v1, v2);
  swift_bridgeObjectRelease_n();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_1DEBFA714()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEBFA778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DEA92F28(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = sub_1DFDF9D80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for ForYouTagFeedGroupEmitter();
  uint64_t v36 = a1;
  uint64_t v15 = a1 + *(int *)(v35 + 20);
  uint64_t v16 = type metadata accessor for ForYouTagFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v17 = v15 + *(int *)(v16 + 40);
  BOOL v18 = a3 < 0 || (a3 & 0x4000000000000000) != 0;
  if (v37 != 1)
  {
    sub_1DEBFF6A0(v17, (uint64_t)v8, (uint64_t (*)(void))sub_1DEA92F28);
    uint64_t v23 = sub_1DFDF8EA0();
    int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v8, 1, v23);
    sub_1DEBFF4FC((uint64_t)v8, (uint64_t (*)(void))sub_1DEA92F28);
    if (v24 == 1)
    {
      if (v18)
      {
        unint64_t v31 = swift_bridgeObjectRetain();
        sub_1DEC78FDC(v31);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
      unint64_t v25 = (void *)sub_1DFDFE200();
      swift_release();
      uint64_t v26 = (void *)FCPromoteOneHeadline();
    }
    else
    {
      if (v18)
      {
        unint64_t v33 = swift_bridgeObjectRetain();
        sub_1DEC78FDC(v33);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
      unint64_t v25 = (void *)sub_1DFDFE200();
      swift_release();
      uint64_t v26 = (void *)FCPromoteOneHeadlineIgnoringProminence();
    }
    id v27 = v26;

    if (v27) {
      goto LABEL_17;
    }
    return 0;
  }
  sub_1DEBFF6A0(v17, (uint64_t)v10, (uint64_t (*)(void))sub_1DEA92F28);
  uint64_t v19 = sub_1DFDF8EA0();
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v10, 1, v19);
  sub_1DEBFF4FC((uint64_t)v10, (uint64_t (*)(void))sub_1DEA92F28);
  if (v20 == 1)
  {
    if (v18)
    {
      unint64_t v30 = swift_bridgeObjectRetain();
      sub_1DEC78FDC(v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
    uint64_t v21 = (void *)sub_1DFDFE200();
    swift_release();
    id v22 = (void *)FCPromoteAccessibleHeadline();
  }
  else
  {
    if (v18)
    {
      unint64_t v32 = swift_bridgeObjectRetain();
      sub_1DEC78FDC(v32);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAD10);
    uint64_t v21 = (void *)sub_1DFDFE200();
    swift_release();
    id v22 = (void *)FCPromoteAccessibleHeadlineIgnoringProminence();
  }
  id v27 = v22;

  if (!v27) {
    return 0;
  }
LABEL_17:
  uint64_t v28 = sub_1DFDFE220();

  return v28;
}

uint64_t sub_1DEBFAC2C(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA488CC(0, (unint64_t *)&unk_1EBACA4A0, MEMORY[0x1E4F80E88], MEMORY[0x1E4FBB718]);
  v3[14] = swift_task_alloc();
  sub_1DEA488CC(0, (unint64_t *)&unk_1EBAE9EF0, MEMORY[0x1E4F81380], v4);
  v3[15] = swift_task_alloc();
  sub_1DEA488CC(0, (unint64_t *)&qword_1EBAE95E0, (uint64_t (*)(uint64_t))sub_1DEBE3100, v4);
  v3[16] = swift_task_alloc();
  uint64_t v5 = sub_1DFDFB960();
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  sub_1DEBFF418(0);
  v3[20] = swift_task_alloc();
  v3[21] = type metadata accessor for ForYouTagFeedGroupConfigData();
  v3[22] = swift_task_alloc();
  uint64_t v6 = sub_1DFDFAA20();
  v3[23] = v6;
  v3[24] = *(void *)(v6 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  sub_1DEBFF4C8(0);
  v3[27] = swift_task_alloc();
  uint64_t v7 = sub_1DFDFAFE0();
  v3[28] = v7;
  v3[29] = *(void *)(v7 - 8);
  v3[30] = swift_task_alloc();
  uint64_t v8 = sub_1DFDFC900();
  v3[31] = v8;
  v3[32] = *(void *)(v8 - 8);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  uint64_t v9 = sub_1DFDFCAB0();
  v3[35] = v9;
  v3[36] = *(void *)(v9 - 8);
  v3[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DEBFB000, 0, 0);
}

uint64_t sub_1DEBFB000()
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  unint64_t v1 = *(void *)(v0 + 96);
  sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DFE0B250;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = v3;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  sub_1DFDF87F0();
  id v5 = *(id *)(*(void *)(v0 + 56) + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  uint64_t v6 = sub_1DFDFEBA0();
  *(void *)(v0 + 304) = v6;

  double v63 = (void *)v6;
  if (v3)
  {
    uint64_t v66 = MEMORY[0x1E4FBC860];
    uint64_t v7 = sub_1DEDF697C(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
      return MEMORY[0x1F4136D58](v7, v8, v9, v10, v11);
    }
    uint64_t v12 = *(void *)(v0 + 256);
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = 0;
      uint64_t v14 = *MEMORY[0x1E4F81600];
      do
      {
        uint64_t v15 = *(void **)(v0 + 272);
        uint64_t v16 = *(void *)(v0 + 248);
        void *v15 = MEMORY[0x1E01EE240](v13, *(void *)(v0 + 96));
        (*(void (**)(void *, uint64_t, uint64_t))(v12 + 104))(v15, v14, v16);
        unint64_t v18 = *(void *)(v66 + 16);
        unint64_t v17 = *(void *)(v66 + 24);
        if (v18 >= v17 >> 1) {
          sub_1DEDF697C(v17 > 1, v18 + 1, 1);
        }
        uint64_t v19 = *(void *)(v0 + 272);
        uint64_t v20 = *(void *)(v0 + 248);
        ++v13;
        *(void *)(v66 + 16) = v18 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v66+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v18, v19, v20);
      }
      while (v3 != v13);
    }
    else
    {
      id v22 = (void *)(*(void *)(v0 + 96) + 32);
      CGFloat v64 = *(void (**)(void))(v12 + 104);
      do
      {
        **(void **)(v0 + 264) = *v22;
        v64();
        unint64_t v24 = *(void *)(v66 + 16);
        unint64_t v23 = *(void *)(v66 + 24);
        swift_unknownObjectRetain();
        if (v24 >= v23 >> 1) {
          sub_1DEDF697C(v23 > 1, v24 + 1, 1);
        }
        uint64_t v25 = *(void *)(v0 + 264);
        uint64_t v26 = *(void *)(v0 + 248);
        *(void *)(v66 + 16) = v24 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v66+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v24, v25, v26);
        ++v22;
        --v3;
      }
      while (v3);
    }
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  uint64_t v27 = *(void *)(v0 + 288);
  uint64_t v28 = *(void *)(v0 + 296);
  uint64_t v29 = *(void *)(v0 + 280);
  uint64_t v30 = *(void *)(v0 + 216);
  uint64_t v57 = *(void *)(v0 + 184);
  uint64_t v58 = *(void *)(v0 + 200);
  uint64_t v54 = *(void *)(v0 + 176);
  uint64_t v55 = *(void *)(v0 + 168);
  uint64_t v56 = *(void *)(v0 + 192);
  uint64_t v59 = *(void *)(v0 + 160);
  uint64_t v61 = *(void *)(v0 + 128);
  uint64_t v62 = *(void *)(v0 + 120);
  uint64_t v65 = *(void *)(v0 + 112);
  uint64_t v53 = *(void *)(v0 + 104);
  sub_1DF11BA44(v21);
  sub_1DF11BB5C(v21);
  sub_1DF11BC90(v21);
  sub_1DFDFCAA0();
  sub_1DEA74FD4();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1DFE13CF0;
  *(void *)(v31 + 32) = v63;
  sub_1DFDFE250();
  sub_1DEA488CC(0, (unint64_t *)&unk_1EBABB6D0, MEMORY[0x1E4F816C0], MEMORY[0x1E4FBBE00]);
  unint64_t v32 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1DFE0B250;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 16))(v33 + v32, v28, v29);
  uint64_t v34 = sub_1DFDF66A0();
  uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
  v52(v30, 1, 1, v34);
  swift_unknownObjectRetain();
  sub_1DFC83088(v21);
  sub_1DFC83088(v21);
  sub_1DFC831BC(v21);
  unint64_t v35 = sub_1DFC831D4(v21);
  unint64_t v36 = sub_1DFC83308(v21);
  unint64_t v51 = sub_1DFC83320(v21);
  unint64_t v50 = v35;
  sub_1DFDFAFD0();
  uint64_t v37 = type metadata accessor for ForYouTagFeedGroupEmitter();
  sub_1DE94F204(v53 + *(int *)(v37 + 24), v0 + 16);
  uint64_t v38 = *(void *)(v0 + 40);
  uint64_t v60 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v38);
  sub_1DEBF7AD8();
  sub_1DFDF73B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v58, v54 + *(int *)(v55 + 20), v57);
  id v39 = objc_msgSend(v63, sel_identifier, v21, v33, v21, v50, v36, v21, v51, v30);
  sub_1DFDFDD20();

  v52(v30, 1, 1, v34);
  sub_1DEBFF44C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v59, 1, 1, v40);
  sub_1DFDFA860();
  swift_bridgeObjectRelease();
  sub_1DEBFF4FC(v59, (uint64_t (*)(void))sub_1DEBFF418);
  sub_1DEBFF4FC(v30, (uint64_t (*)(void))sub_1DEBFF4C8);
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  *(void *)(v0 + 312) = v41;
  *(void *)(v0 + 320) = (v56 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v41(v58, v57);
  sub_1DEBE3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v61, 1, 1, v42);
  swift_retain();
  sub_1DFDF87F0();
  id v43 = *(id *)(*(void *)(v0 + 64) + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  uint64_t v44 = sub_1DFDFC340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v62, 1, 1, v44);
  *(unsigned char *)(v0 + 352) = 26;
  sub_1DEBFF364(0, (unint64_t *)&unk_1EBAE9F30, (uint64_t (*)(uint64_t))type metadata accessor for TagFeedServiceConfig, sub_1DEAD9D10, MEMORY[0x1E4F81400]);
  swift_allocObject();
  sub_1DFDFC5C0();
  sub_1DFDF87F0();
  sub_1DEE821D4();
  swift_release();
  sub_1DFDF87F0();
  id v45 = *(id *)(*(void *)(v0 + 80) + OBJC_IVAR____TtC7NewsUI220TagFeedServiceConfig_feedDescriptor);
  swift_release();
  sub_1DFDFC5F0();
  swift_allocObject();
  sub_1DFDFC5E0();
  uint64_t v46 = sub_1DFDFB640();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v65, 1, 1, v46);
  uint64_t v47 = (void *)qword_1EBB63310;
  (id)*MEMORY[0x1E4F7E018];
  v47;
  sub_1DFDFB930();
  uint64_t v48 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v48;
  *uint64_t v48 = v0;
  v48[1] = sub_1DEBFBA90;
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 208);
  uint64_t v10 = v38;
  uint64_t v11 = v60;
  return MEMORY[0x1F4136D58](v7, v8, v9, v10, v11);
}

uint64_t sub_1DEBFBA90(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[42] = v1;
  swift_task_dealloc();
  id v5 = (void (*)(uint64_t, uint64_t))v4[39];
  uint64_t v6 = v4[26];
  uint64_t v7 = v4[23];
  uint64_t v8 = v4[19];
  uint64_t v9 = v4[18];
  uint64_t v10 = v4[17];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v5(v6, v7);
    uint64_t v11 = sub_1DEBFBE00;
  }
  else
  {
    v4[43] = a1;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v5(v6, v7);
    uint64_t v11 = sub_1DEBFBC90;
  }
  return MEMORY[0x1F4188298](v11, 0, 0);
}

uint64_t sub_1DEBFBC90()
{
  uint64_t v1 = v0[37];
  uint64_t v3 = v0[35];
  uint64_t v2 = v0[36];
  uint64_t v5 = v0[29];
  uint64_t v4 = v0[30];
  uint64_t v6 = v0[28];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v8 = v0[43];
  return v7(v8);
}

uint64_t sub_1DEBFBE00()
{
  uint64_t v1 = v0[37];
  uint64_t v3 = v0[35];
  uint64_t v2 = v0[36];
  uint64_t v5 = v0[29];
  uint64_t v4 = v0[30];
  uint64_t v6 = v0[28];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1DEBFBF6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v13[1] = a1;
  sub_1DEA488CC(0, (unint64_t *)&unk_1EBABA100, MEMORY[0x1E4F7F5E0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v13 - v4;
  uint64_t v6 = sub_1DFDF8C20();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  MEMORY[0x1F4188790](v7);
  sub_1DEBF7AD8();
  uint64_t v8 = sub_1DFDF7340();
  uint64_t v14 = v9;
  uint64_t v15 = v8;
  swift_retain();
  v13[0] = sub_1DFDF7350();
  sub_1DFDF7360();
  sub_1DFDF7360();
  type metadata accessor for ForYouTagFeedGroupEmitter();
  sub_1DEBE3100();
  sub_1DFDF8080();
  sub_1DFDF8050();
  sub_1DFDF80A0();
  uint64_t v10 = sub_1DFDF7CB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  type metadata accessor for ForYouTagFeedGroup();
  swift_retain();
  sub_1DFDF6F70();
  uint64_t v11 = v14;
  *a2 = v15;
  a2[1] = v11;
  type metadata accessor for TagFeedGroup();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DEBFC214(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DFE0B250;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x1E4FBB5C8];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = v6;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_7;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    unint64_t v8 = sub_1DEBFE318(a1, a3);
    unint64_t v9 = sub_1DEBFD2DC(v8);
    swift_bridgeObjectRelease();
    unint64_t v10 = sub_1DEBFE4F4(v9);
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1DEBFD7AC(v10, a3);
    swift_bridgeObjectRelease();
    return v11;
  }
  uint64_t v14 = sub_1DFDF8510();
  sub_1DEACEF6C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, *MEMORY[0x1E4F7F9D8], v14);
  return swift_willThrow();
}

uint64_t sub_1DEBFC4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v36 = a2;
  uint64_t v38 = sub_1DFDF9D80();
  uint64_t v35 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DFDF9620();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DFDF7DD0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v28 = v13;
  uint64_t v14 = swift_allocObject();
  long long v27 = xmmword_1DFE0B250;
  *(_OWORD *)(v14 + 16) = xmmword_1DFE0B250;
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBB5C8];
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v14 + 64) = v16;
  *(void *)(v14 + 32) = v15;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  uint64_t v17 = type metadata accessor for ForYouTagFeedGroupEmitter();
  sub_1DE94F204(v3 + *(int *)(v17 + 32), (uint64_t)v37);
  uint64_t v30 = v37[4];
  uint64_t v29 = __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  uint64_t v18 = *MEMORY[0x1E4F7FF20];
  uint64_t v19 = sub_1DFDF9170();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v12, v18, v19);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F7F6A8], v9);
  type metadata accessor for ForYouTagFeedGroupKnobs();
  uint64_t v20 = v31;
  sub_1DFDF8870();
  sub_1DFDF8E70();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v38);
  uint64_t v21 = sub_1DFDF93F0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v33);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  if (v21)
  {
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = v27;
    uint64_t v23 = *(void *)(v21 + 16);
    *(void *)(v22 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v22 + 64) = MEMORY[0x1E4FBB5C8];
    *(void *)(v22 + 32) = v23;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DFDFEA40();
    sub_1DFDF00C0();
    uint64_t v24 = sub_1DFDF8510();
    sub_1DEACEF6C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F7F950], v24);
    swift_willThrow();
  }
  return v21;
}

uint64_t sub_1DEBFCA00(uint64_t a1)
{
  uint64_t v55 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1DEA488CC(0, &qword_1EBAE9A20, MEMORY[0x1E4F801B0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v54 = (char *)&v43 - v4;
  sub_1DEA488CC(0, &qword_1EBAE99B0, MEMORY[0x1E4F80020], v2);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v51 = (char *)&v43 - v6;
  uint64_t v7 = sub_1DFDF9620();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v49 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1DFDF7DD0();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v47 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF9D80();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ForYouTagFeedGroupEmitter();
  uint64_t v46 = v1;
  type metadata accessor for ForYouTagFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v11 + 8);
  v15(v13, v10);
  uint64_t v56 = v57;
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  v15(v13, v10);
  uint64_t v16 = v57;
  if (v57 < 1)
  {
    sub_1DFDF8510();
    sub_1DEACEF6C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
    swift_allocError();
    sub_1DFDF8500();
  }
  else
  {
    if (qword_1EBAEA6E8 != -1) {
      swift_once();
    }
    sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v44 = v17;
    uint64_t v18 = swift_allocObject();
    long long v43 = xmmword_1DFE0B250;
    *(_OWORD *)(v18 + 16) = xmmword_1DFE0B250;
    uint64_t v19 = *(void *)(v55 + 16);
    uint64_t v20 = MEMORY[0x1E4FBB5C8];
    *(void *)(v18 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v18 + 64) = v20;
    *(void *)(v18 + 32) = v19;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)(v46 + *(int *)(v14 + 32));
    uint64_t v22 = v21[3];
    uint64_t v46 = v21[4];
    id v45 = __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v23 = *MEMORY[0x1E4F7FF20];
    uint64_t v24 = sub_1DFDF9170();
    uint64_t v25 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v47, v23, v24);
    uint64_t v26 = v48;
    uint64_t v27 = v50;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v25, *MEMORY[0x1E4F7F6A8], v50);
    uint64_t v28 = sub_1DFDF9290();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v51, 1, 1, v28);
    uint64_t v29 = sub_1DFDF9640();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v54, 1, 1, v29);
    uint64_t v30 = v49;
    sub_1DFDF9600();
    uint64_t v16 = sub_1DFDF93F0();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v53);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
    if (v16)
    {
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v43;
      uint64_t v32 = *(void *)(v16 + 16);
      uint64_t v33 = MEMORY[0x1E4FBB550];
      *(void *)(v31 + 56) = MEMORY[0x1E4FBB550];
      uint64_t v34 = MEMORY[0x1E4FBB5C8];
      *(void *)(v31 + 64) = MEMORY[0x1E4FBB5C8];
      *(void *)(v31 + 32) = v32;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      uint64_t v35 = v56;
      if (v32 >= v56) {
        return v16;
      }
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1DFE0B750;
      *(void *)(v36 + 56) = v33;
      *(void *)(v36 + 64) = v34;
      *(void *)(v36 + 32) = v32;
      *(void *)(v36 + 96) = v33;
      *(void *)(v36 + 104) = v34;
      *(void *)(v36 + 72) = v35;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_1DFDF8510();
      sub_1DEACEF6C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
      swift_allocError();
      id v39 = v38;
      swift_bridgeObjectRelease();
      *id v39 = v35;
      v39[1] = v32;
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x1E4F7F9C8], v37);
    }
    else
    {
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      uint64_t v40 = sub_1DFDF8510();
      sub_1DEACEF6C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v40 - 8) + 104))(v41, *MEMORY[0x1E4F7F950], v40);
    }
  }
  swift_willThrow();
  return v16;
}

unint64_t sub_1DEBFD2DC(unint64_t a1)
{
  uint64_t v3 = sub_1DFDE7600();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DFDF9D80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1 + *(int *)(type metadata accessor for ForYouTagFeedGroupEmitter() + 20);
  if (*(void *)(v11 + *(int *)(type metadata accessor for ForYouTagFeedGroupKnobs() + 20)))
  {
    sub_1DFDF8870();
    sub_1DFDF8BF0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v12 = v25[1];
    uint64_t v13 = sub_1DFDE7520();
    MEMORY[0x1F4188790](v13);
    v25[-2] = v6;
    swift_bridgeObjectRetain();
    unint64_t v14 = (unint64_t)sub_1DF7CAAD4((uint64_t (*)(uint64_t *))sub_1DEBFF680, &v25[-4], a1);
    if (qword_1EBAEA6E8 != -1) {
      swift_once();
    }
    sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DFE0CC10;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      if (!(v14 >> 62))
      {
LABEL_6:
        a1 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        unint64_t v17 = v16 - a1;
        if (!__OFSUB__(v16, a1))
        {
LABEL_7:
          uint64_t v18 = MEMORY[0x1E4FBB550];
          uint64_t v19 = MEMORY[0x1E4FBB5C8];
          *(void *)(v15 + 56) = MEMORY[0x1E4FBB550];
          *(void *)(v15 + 64) = v19;
          *(void *)(v15 + 32) = v17;
          uint64_t v20 = MEMORY[0x1E4FBB460];
          *(void *)(v15 + 96) = MEMORY[0x1E4FBB3D0];
          *(void *)(v15 + 104) = v20;
          *(void *)(v15 + 72) = v12;
          *(void *)(v15 + 136) = v18;
          *(void *)(v15 + 144) = v19;
          *(void *)(v15 + 112) = a1;
          sub_1DFDFEA60();
          sub_1DFDF00C0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          return v14;
        }
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!(v14 >> 62)) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    a1 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
    unint64_t v17 = v16 - a1;
    if (!__OFSUB__(v16, a1)) {
      goto LABEL_7;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (qword_1EBAEA6E8 != -1) {
LABEL_17:
  }
    swift_once();
  sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1DFE0B250;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1DFDFFBE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v23 = MEMORY[0x1E4FBB5C8];
  *(void *)(v21 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v21 + 64) = v23;
  *(void *)(v21 + 32) = v22;
  sub_1DFDFEA60();
  sub_1DFDF00C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DEBFD7AC(unint64_t a1, uint64_t a2)
{
  sub_1DEBFF55C();
  sub_1DEACEF6C((unint64_t *)&qword_1EBABA9B0, (void (*)(uint64_t))sub_1DEBFF55C);
  unint64_t v4 = sub_1DFDFDFE0();
  sub_1DEBFF5C4(a2);
  unint64_t v5 = sub_1DEBFDEB4(v4, a2);
  sub_1DEBFF29C(a2);
  swift_bridgeObjectRelease();
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  uint64_t v7 = (void *)result;
  *(_OWORD *)(result + 16) = xmmword_1DFE0B750;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!(v5 >> 62)) {
      goto LABEL_5;
    }
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = v8 - v9;
    if (!__OFSUB__(v8, v9)) {
      goto LABEL_6;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DFDFFBE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 >> 62) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v8 - v9;
  if (!__OFSUB__(v8, v9))
  {
LABEL_6:
    uint64_t v11 = MEMORY[0x1E4FBB550];
    uint64_t v12 = MEMORY[0x1E4FBB5C8];
    v7[7] = MEMORY[0x1E4FBB550];
    v7[8] = v12;
    v7[4] = v10;
    v7[12] = v11;
    v7[13] = v12;
    v7[9] = v9;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1DEBFDA04(id *a1)
{
  sub_1DEA83C40();
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DFDE7600();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v17 - v10;
  id v12 = objc_msgSend(*a1, sel_publishDate);
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  uint64_t v13 = v12;
  sub_1DFDE7570();

  unint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_1DEBFF4FC((uint64_t)v4, (uint64_t (*)(void))sub_1DEA83C40);
    char v15 = 1;
    return v15 & 1;
  }
  v14(v11, v4, v5);
  sub_1DEACEF6C((unint64_t *)&qword_1EBAA6D80, MEMORY[0x1E4F27928]);
  char v15 = sub_1DFDFDC20() ^ 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v15 & 1;
}

void sub_1DEBFDC90(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_clusterID);
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_1DFDFDD20();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_1DEBFDD08(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_16:
    uint64_t v5 = sub_1DFDFFBE0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      unint64_t v6 = 0;
      unint64_t v17 = v4 & 0xC000000000000001;
      uint64_t v15 = v3;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if (v17)
        {
          uint64_t v7 = (void *)MEMORY[0x1E01EE240](v6, v4);
          unint64_t v8 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
LABEL_13:
            __break(1u);
            return v19;
          }
        }
        else
        {
          if (v6 >= *(void *)(v16 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          uint64_t v7 = *(void **)(v4 + 8 * v6 + 32);
          swift_unknownObjectRetain();
          unint64_t v8 = v6 + 1;
          if (__OFADD__(v6, 1)) {
            goto LABEL_13;
          }
        }
        unint64_t v9 = v4;
        uint64_t v10 = *(void *)(a2 + 64);
        id v11 = objc_msgSend(v7, sel_identifier, v15);
        uint64_t v12 = sub_1DFDFDD20();
        uint64_t v3 = v13;

        LOBYTE(v10) = sub_1DEAAB55C(v12, v3, v10);
        swift_bridgeObjectRelease();
        if (v10)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1DFDFFA50();
          uint64_t v3 = *(void *)(v19 + 16);
          sub_1DFDFFA90();
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
        }
        unint64_t v4 = v9;
        ++v6;
        if (v8 == v5) {
          return v19;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DEBFDEB4(unint64_t a1, uint64_t a2)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_17:
    uint64_t v3 = sub_1DFDFFBE0();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = (void *)MEMORY[0x1E01EE240](i, a1);
          unint64_t v6 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_14:
            __break(1u);
            return v14;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_17;
          }
          uint64_t v5 = *(void **)(a1 + 8 * i + 32);
          swift_unknownObjectRetain();
          unint64_t v6 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_14;
          }
        }
        id v7 = objc_msgSend(v5, sel_clusterID);
        if (v7
          && (unint64_t v8 = v7,
              uint64_t v9 = sub_1DFDFDD20(),
              uint64_t v11 = v10,
              v8,
              LOBYTE(v8) = sub_1DEAAB55C(v9, v11, *(void *)(a2 + 72)),
              swift_bridgeObjectRelease(),
              (v8 & 1) != 0))
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1DFDFFA50();
          sub_1DFDFFA90();
          sub_1DFDFFAA0();
          sub_1DFDFFA60();
        }
        if (v6 == v3) {
          return v14;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DEBFE058(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = *(void *)(sub_1DFDF72A0() - 8);
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v9 = &selRef_stringByAppendingPathComponent_;
    uint64_t v20 = v8;
    while (1)
    {
      sub_1DFDF7280();
      uint64_t v10 = swift_dynamicCastObjCProtocolConditional();
      if (v10) {
        goto LABEL_4;
      }
      swift_unknownObjectRelease();
      uint64_t v11 = sub_1DFDF7250();
      if (*(void *)(a2 + 16))
      {
        sub_1DEA6D930(v11, v12);
        if (v13) {
          break;
        }
      }
      uint64_t v14 = a2;
      uint64_t v15 = v9;
      swift_bridgeObjectRelease();
      if (qword_1EBAEA6E8 != -1) {
        swift_once();
      }
      sub_1DFDFEA40();
      sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1DFE0B250;
      uint64_t v17 = sub_1DFDF7250();
      uint64_t v19 = v18;
      *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v16 + 64) = sub_1DEA08668();
      *(void *)(v16 + 32) = v17;
      *(void *)(v16 + 40) = v19;
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      uint64_t v9 = v15;
      a2 = v14;
      uint64_t v8 = v20;
LABEL_7:
      v7 += v8;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    swift_unknownObjectRetain();
    uint64_t v10 = swift_bridgeObjectRelease();
LABEL_4:
    MEMORY[0x1E01ECA20](v10);
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1DFDFE320();
    }
    sub_1DFDFE370();
    sub_1DFDFE250();
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1DEBFE318(unint64_t a1, uint64_t a2)
{
  sub_1DEBFF5C4(a2);
  unint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_1DEBFDD08(v4, a2);
  sub_1DEBFF29C(a2);
  swift_bridgeObjectRelease();
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  uint64_t v7 = (void *)result;
  *(_OWORD *)(result + 16) = xmmword_1DFE0B750;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!(v5 >> 62)) {
      goto LABEL_5;
    }
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = v8 - v9;
    if (!__OFSUB__(v8, v9)) {
      goto LABEL_6;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DFDFFBE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 >> 62) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v8 - v9;
  if (!__OFSUB__(v8, v9))
  {
LABEL_6:
    uint64_t v11 = MEMORY[0x1E4FBB550];
    uint64_t v12 = MEMORY[0x1E4FBB5C8];
    v7[7] = MEMORY[0x1E4FBB550];
    v7[8] = v12;
    v7[4] = v10;
    v7[12] = v11;
    v7[13] = v12;
    v7[9] = v9;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1DEBFE4F4(unint64_t a1)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DFDFFBE0();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 < 1) {
    goto LABEL_27;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = (void *)MEMORY[0x1E01EE240](i, a1);
    }
    else
    {
      uint64_t v6 = *(void **)(a1 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    if (objc_msgSend(v6, sel_isSponsored))
    {
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1DFDFFA50();
      sub_1DFDFFA90();
      sub_1DFDFFAA0();
      sub_1DFDFFA60();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v14;
LABEL_15:
  if (qword_1EBAEA6E8 != -1) {
    swift_once();
  }
  sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  uint64_t v8 = (void *)result;
  *(_OWORD *)(result + 16) = xmmword_1DFE0B750;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DFDFFBE0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v7 < 0 || (v7 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DFDFFBE0();
    uint64_t result = swift_release();
    uint64_t v11 = v9 - v10;
    if (!__OFSUB__(v9, v10)) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v7 + 16);
    uint64_t v11 = v9 - v10;
    if (!__OFSUB__(v9, v10))
    {
LABEL_23:
      uint64_t v12 = MEMORY[0x1E4FBB550];
      uint64_t v13 = MEMORY[0x1E4FBB5C8];
      v8[7] = MEMORY[0x1E4FBB550];
      v8[8] = v13;
      void v8[4] = v11;
      v8[12] = v12;
      v8[13] = v13;
      v8[9] = v10;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1DEBFE798(uint64_t a1, uint64_t a2, int64_t a3, unint64_t a4)
{
  unint64_t v78 = a4;
  int64_t v81 = a3;
  uint64_t v73 = a2;
  uint64_t v76 = sub_1DFDF8EA0();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  unint64_t v72 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DEA92F28(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v74 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1DFDF7DD0();
  uint64_t v80 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  unint64_t v79 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DFDF9D80();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ForYouTagFeedGroupEmitter();
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v82 = v4;
  uint64_t v16 = v4 + v15;
  uint64_t v17 = type metadata accessor for ForYouTagFeedGroupKnobs();
  sub_1DFDF8870();
  sub_1DFDF8BF0();
  uint64_t v18 = v10;
  uint64_t v19 = a1;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v18);
  int64_t v20 = v84;
  uint64_t v21 = a1;
  uint64_t v22 = v91;
  sub_1DFDF88A0();
  if (!v22)
  {
    uint64_t v91 = v14;
    uint64_t v70 = v17;
    uint64_t v71 = v16;
    v90[2] = v86;
    v90[3] = v87;
    v90[4] = v88;
    v90[5] = v89;
    v90[0] = v84;
    v90[1] = v85;
    uint64_t v23 = v82;
    unint64_t v24 = sub_1DEBFC214(v81, a1, (uint64_t)v90);
    sub_1DEBFF29C((uint64_t)v90);
    uint64_t v25 = v23;
    int64_t v81 = v20;
    unint64_t v69 = v24 >> 62;
    uint64_t v67 = v19;
    if (v24 >> 62)
    {
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1DFDFFBD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = v24 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      sub_1DFDFFF80();
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
      uint64_t v27 = v24;
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v28 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v27 = v24;
        if (v28)
        {
          uint64_t v29 = v26 + 32;
          while (1)
          {
            uint64_t v83 = &unk_1F3B7E5D0;
            if (!swift_dynamicCastObjCProtocolConditional()) {
              break;
            }
            v29 += 8;
            if (!--v28)
            {
              uint64_t v27 = v24;
              goto LABEL_10;
            }
          }
          uint64_t v27 = v26 | 1;
LABEL_10:
          uint64_t v25 = v82;
        }
      }
    }
    unint64_t v30 = v78;
    if (v78 >> 62)
    {
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_1DFDFFBD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DFDFFF80();
      sub_1DE9266B8(0, (unint64_t *)&qword_1EBABAE90);
      unint64_t v31 = v30;
    }
    *(void *)&long long v84 = v27;
    sub_1DF3DD808(v31);
    unint64_t v32 = v84;
    if (qword_1EBAEA6E8 != -1) {
      swift_once();
    }
    uint64_t v68 = qword_1EBB63310;
    sub_1DEA488CC(0, (unint64_t *)&qword_1EBABB7A0, (uint64_t (*)(uint64_t))sub_1DEAB939C, MEMORY[0x1E4FBBE00]);
    uint64_t v66 = v33;
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1DFE0CC10;
    if (v69)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v35 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x1E4FBB550];
    uint64_t v37 = MEMORY[0x1E4FBB5C8];
    *(void *)(v34 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v34 + 64) = v37;
    *(void *)(v34 + 32) = v35;
    if (v30 >> 62)
    {
      uint64_t v39 = v36;
      uint64_t v40 = v37;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v37 = v40;
      uint64_t v36 = v39;
    }
    else
    {
      uint64_t v38 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v34 + 96) = v36;
    *(void *)(v34 + 104) = v37;
    unint64_t v41 = v32;
    unint64_t v42 = v32 >> 62;
    *(void *)(v34 + 72) = v38;
    uint64_t v43 = v77;
    uint64_t v44 = v80;
    uint64_t v45 = v91;
    if (v42)
    {
      uint64_t v65 = v37;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1DFDFFBE0();
      swift_bridgeObjectRelease();
      uint64_t v37 = v65;
      uint64_t v36 = MEMORY[0x1E4FBB550];
    }
    else
    {
      uint64_t v46 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v34 + 136) = v36;
    *(void *)(v34 + 144) = v37;
    *(void *)(v34 + 112) = v46;
    sub_1DFDFEA60();
    sub_1DFDF00C0();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1((void *)(v25 + *(int *)(v45 + 32)), *(void *)(v25 + *(int *)(v45 + 32) + 24));
    uint64_t v47 = *MEMORY[0x1E4F7FF20];
    uint64_t v48 = sub_1DFDF9170();
    uint64_t v49 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v79, v47, v48);
    (*(void (**)(char *, void, uint64_t))(v44 + 104))(v49, *MEMORY[0x1E4F7F6A8], v43);
    uint64_t v50 = sub_1DFDF9420();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v43);
    int64_t v51 = *(void *)(v50 + 16);
    int64_t v52 = v81;
    if (v51 >= v81)
    {
      sub_1DFDF8ED0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DFDF8EB0();
      uint64_t v58 = v74;
      uint64_t v59 = v67;
      sub_1DF7D2244(v71 + *(int *)(v70 + 40), 26, v74);
      uint64_t v60 = v75;
      uint64_t v61 = v76;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v58, 1, v76) == 1)
      {
        uint64_t v21 = sub_1DEBFCA00(v50);
      }
      else
      {
        uint64_t v62 = (uint64_t)v72;
        (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v72, v58, v61);
        uint64_t v21 = sub_1DEBFC4A4(v50, v62, v59);
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v61);
      }
      swift_bridgeObjectRelease();
      if (!*(void *)(v21 + 16))
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = sub_1DFDF8510();
        sub_1DEACEF6C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
        swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v21 - 8) + 104))(v63, *MEMORY[0x1E4F7F9D8], v21);
        swift_willThrow();
        swift_release();
      }
    }
    else
    {
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_1DFE0B750;
      uint64_t v54 = MEMORY[0x1E4FBB550];
      *(void *)(v53 + 56) = MEMORY[0x1E4FBB550];
      uint64_t v55 = MEMORY[0x1E4FBB5C8];
      *(void *)(v53 + 64) = MEMORY[0x1E4FBB5C8];
      *(void *)(v53 + 72) = v52;
      *(void *)(v53 + 32) = v51;
      *(void *)(v53 + 96) = v54;
      *(void *)(v53 + 104) = v55;
      sub_1DFDFEA60();
      sub_1DFDF00C0();
      swift_bridgeObjectRelease();
      uint64_t v21 = sub_1DFDF8510();
      sub_1DEACEF6C((unint64_t *)&qword_1EBABA180, MEMORY[0x1E4F7F9E0]);
      swift_allocError();
      uint64_t v57 = v56;
      swift_bridgeObjectRelease();
      *uint64_t v57 = v52;
      v57[1] = v51;
      (*(void (**)(int64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v57, *MEMORY[0x1E4F7F9C8], v21);
      swift_willThrow();
    }
  }
  return v21;
}